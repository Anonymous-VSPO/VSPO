{"ontology": "OntoDT", "class": "Datatype Specification Language Representation", "axiom": {"subClassOf": [], "propertyRestrictions": ["[represents some datatype]"]}, "datatype": "Type1", "TCQ": ["Is Datatype Specification Language Representation categorized under the broader class of representation?", "Which representation subclasses include Datatype Specification Language Representation?", "What are the parent classes of Datatype Specification Language Representation?"], "VCQ": ["Is it required that every Datatype Specification Language Representation represents some datatype?", "Can a Datatype Specification Language Representation exist without representing any datatype?", "Does the ontology ensure that each Datatype Specification Language Representation is associated with at least one datatype through the 'represents' property?", "Is Datatype Specification Language Representation categorized under the broader class of representation?", "Which representation subclasses include Datatype Specification Language Representation?", "What are the parent classes of Datatype Specification Language Representation?"], "Taxiom": "Datatype Specification Language Representation subClassOf representation", "CQ": [{"axiom": "Datatype Specification Language Representation subClassOf representation", "CQ": ["Is Datatype Specification Language Representation categorized under the broader class of representation?", "Which representation subclasses include Datatype Specification Language Representation?", "What are the parent classes of Datatype Specification Language Representation?"]}, {"axiom": "Datatype Specification Language Representation propertyRestrictions [represents some datatype]", "CQ": ["Is it required that every Datatype Specification Language Representation represents some datatype?", "Can a Datatype Specification Language Representation exist without representing any datatype?", "Does the ontology ensure that each Datatype Specification Language Representation is associated with at least one datatype through the 'represents' property?"]}]}
{"ontology": "OntoDT", "class": "defined generator parameter", "axiom": {"subClassOf": ["specification"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Must every defined generator parameter have at least one 'has_identifier' relationship with a parameter identifier?", "Is it required that a defined generator parameter is associated, via the 'has_identifier' property, to some parameter identifier?", "Can a defined generator parameter exist without any 'has_identifier' link to a parameter identifier?"], "VCQ": ["Is defined generator parameter classified under specification?", "What specifications encompass the defined generator parameter as a more specific type?", "Which broader classifications include defined generator parameter within their scope?", "Must every defined generator parameter have at least one 'has_identifier' relationship with a parameter identifier?", "Is it required that a defined generator parameter is associated, via the 'has_identifier' property, to some parameter identifier?", "Can a defined generator parameter exist without any 'has_identifier' link to a parameter identifier?"], "Taxiom": "defined generator parameter propertyRestrictions [has_identifier some parameter identifier]", "CQ": [{"axiom": "defined generator parameter subClassOf specification", "CQ": ["Is defined generator parameter classified under specification?", "What specifications encompass the defined generator parameter as a more specific type?", "Which broader classifications include defined generator parameter within their scope?"]}, {"axiom": "defined generator parameter propertyRestrictions [has_identifier some parameter identifier]", "CQ": ["Must every defined generator parameter have at least one 'has_identifier' relationship with a parameter identifier?", "Is it required that a defined generator parameter is associated, via the 'has_identifier' property, to some parameter identifier?", "Can a defined generator parameter exist without any 'has_identifier' link to a parameter identifier?"]}]}
{"ontology": "OntoDT", "class": "extending subtype generator", "axiom": {"subClassOf": ["subtype generator"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Is every instance of extending subtype generator required to have at least one has_member relationship to an extended-value-list?", "Does extending subtype generator always include some member specified within extended-value-list?", "Can an extending subtype generator exist without any association to an extended-value-list through has_member?"], "VCQ": ["Is extending subtype generator categorized under subtype generator?", "Which generators are classified as subtypes of subtype generator, including extending subtype generator?", "What broader generator categories does extending subtype generator fall into?", "Is every instance of extending subtype generator required to have at least one has_member relationship to an extended-value-list?", "Does extending subtype generator always include some member specified within extended-value-list?", "Can an extending subtype generator exist without any association to an extended-value-list through has_member?"], "Taxiom": "extending subtype generator propertyRestrictions [has_member some extended-value-list]", "CQ": [{"axiom": "extending subtype generator subClassOf subtype generator", "CQ": ["Is extending subtype generator categorized under subtype generator?", "Which generators are classified as subtypes of subtype generator, including extending subtype generator?", "What broader generator categories does extending subtype generator fall into?"]}, {"axiom": "extending subtype generator propertyRestrictions [has_member some extended-value-list]", "CQ": ["Is every instance of extending subtype generator required to have at least one has_member relationship to an extended-value-list?", "Does extending subtype generator always include some member specified within extended-value-list?", "Can an extending subtype generator exist without any association to an extended-value-list through has_member?"]}]}
{"ontology": "OntoDT", "class": "size subtype generator", "axiom": {"subClassOf": ["subtype generator"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Is every instance of 'size subtype generator' required to have at least one 'has_member' relationship to a 'size'?", "Does 'size subtype generator' always include at least one member classified as 'size'?", "Can a 'size subtype generator' exist without linking to any entity of type 'size' via the 'has_member' property?"], "VCQ": ["Is size subtype generator categorized under subtype generator?", "What specific types are included within the broader class of subtype generator?", "Which more general classes is size subtype generator a member of?", "Is every instance of 'size subtype generator' required to have at least one 'has_member' relationship to a 'size'?", "Does 'size subtype generator' always include at least one member classified as 'size'?", "Can a 'size subtype generator' exist without linking to any entity of type 'size' via the 'has_member' property?"], "Taxiom": "size subtype generator propertyRestrictions [has_member some size]", "CQ": [{"axiom": "size subtype generator subClassOf subtype generator", "CQ": ["Is size subtype generator categorized under subtype generator?", "What specific types are included within the broader class of subtype generator?", "Which more general classes is size subtype generator a member of?"]}, {"axiom": "size subtype generator propertyRestrictions [has_member some size]", "CQ": ["Is every instance of 'size subtype generator' required to have at least one 'has_member' relationship to a 'size'?", "Does 'size subtype generator' always include at least one member classified as 'size'?", "Can a 'size subtype generator' exist without linking to any entity of type 'size' via the 'has_member' property?"]}]}
{"ontology": "OntoDT", "class": "array generator", "axiom": {"subClassOf": ["homogenous aggregate generator"], "disjointWith": [], "propertyRestrictions": ["[has_quality some unordered aggregate]", "[has_quality some fixed size]", "[has_quality some multi dimensional]", "[has_quality some index access]", "[has_quality some non-unique values]"]}, "datatype": "Type1", "TCQ": ["Which generator classes are explicitly declared as mutually exclusive with homogenous aggregate generator with variable size?", "Is there any circumstance under which a device can be considered both an array generator and a homogenous aggregate generator with variable size?", "What disjointness constraints are specified for array generator within the ontology?"], "VCQ": ["Is array generator classified as a specific kind of homogenous aggregate generator?", "What specific types are encompassed under the category of homogenous aggregate generator, such as array generator?", "Which broader generator categories include array generator as a member?", "Is it required that an array generator exhibits the has_quality relationship with at least one unordered aggregate?", "Can any instance of array generator be found that does not possess has_quality with an unordered aggregate?", "Does every array generator necessarily relate via has_quality to an entity classified as an unordered aggregate?", "Must every array generator possess at least one quality classified as fixed size?", "Are array generators required to have the property 'has_quality' with some instance of 'fixed size'?", "Is it possible for an array generator to lack the 'fixed size' quality entirely?", "Is it required that every array generator possesses at least one quality classified as multi dimensional?", "Can an array generator exist without exhibiting the multi dimensional quality?", "Does the presence of the multi dimensional quality define array generator entities within the ontology?", "Is it necessary for an array generator to have a 'has_quality' relationship with some instance of index access?", "Can every array generator be characterized by the existence of at least one 'has_quality' link to index access?", "Does the definition of array generator require that there is at least one quality associated with index access?", "Is it required that an array generator must have at least one 'has_quality' relationship with non-unique values?", "Can an array generator exist without possessing the 'has_quality' property that points to non-unique values?", "Does every instance of array generator necessarily exhibit the 'has_quality' property with non-unique values in some capacity?", "Which generator classes are explicitly declared as mutually exclusive with homogenous aggregate generator with variable size?", "Is there any circumstance under which a device can be considered both an array generator and a homogenous aggregate generator with variable size?", "What disjointness constraints are specified for array generator within the ontology?"], "Taxiom": "array generator disjointWith homogenous aggregate generator with variable size", "CQ": [{"axiom": "array generator subClassOf homogenous aggregate generator", "CQ": ["Is array generator classified as a specific kind of homogenous aggregate generator?", "What specific types are encompassed under the category of homogenous aggregate generator, such as array generator?", "Which broader generator categories include array generator as a member?"]}, {"axiom": "array generator disjointWith homogenous aggregate generator with variable size", "CQ": ["Which generator classes are explicitly declared as mutually exclusive with homogenous aggregate generator with variable size?", "Is there any circumstance under which a device can be considered both an array generator and a homogenous aggregate generator with variable size?", "What disjointness constraints are specified for array generator within the ontology?"]}, {"axiom": "array generator propertyRestrictions [has_quality some unordered aggregate]", "CQ": ["Is it required that an array generator exhibits the has_quality relationship with at least one unordered aggregate?", "Can any instance of array generator be found that does not possess has_quality with an unordered aggregate?", "Does every array generator necessarily relate via has_quality to an entity classified as an unordered aggregate?"]}, {"axiom": "array generator propertyRestrictions [has_quality some fixed size]", "CQ": ["Must every array generator possess at least one quality classified as fixed size?", "Are array generators required to have the property 'has_quality' with some instance of 'fixed size'?", "Is it possible for an array generator to lack the 'fixed size' quality entirely?"]}, {"axiom": "array generator propertyRestrictions [has_quality some multi dimensional]", "CQ": ["Is it required that every array generator possesses at least one quality classified as multi dimensional?", "Can an array generator exist without exhibiting the multi dimensional quality?", "Does the presence of the multi dimensional quality define array generator entities within the ontology?"]}, {"axiom": "array generator propertyRestrictions [has_quality some index access]", "CQ": ["Is it necessary for an array generator to have a 'has_quality' relationship with some instance of index access?", "Can every array generator be characterized by the existence of at least one 'has_quality' link to index access?", "Does the definition of array generator require that there is at least one quality associated with index access?"]}, {"axiom": "array generator propertyRestrictions [has_quality some non-unique values]", "CQ": ["Is it required that an array generator must have at least one 'has_quality' relationship with non-unique values?", "Can an array generator exist without possessing the 'has_quality' property that points to non-unique values?", "Does every instance of array generator necessarily exhibit the 'has_quality' property with non-unique values in some capacity?"]}]}
{"ontology": "OntoDT", "class": "set generator", "axiom": {"subClassOf": [], "propertyRestrictions": ["[has_quality some access by value]", "[has_quality some unique values]"]}, "datatype": "Type1", "TCQ": ["Is every set generator classified under homogenous unordered aggregate generator with variable size?", "Which specific generators fall under the category of homogenous unordered aggregate generator with variable size?", "What broader categories include set generator as a subclass?"], "VCQ": ["Does every set generator require at least one 'has_quality' relationship with an entity of type 'access by value'?", "Is it necessary that a set generator possesses the 'has_quality' property that relates specifically to 'access by value'?", "Is the presence of the 'has_quality' property with the value 'access by value' sufficient for something to be considered a set generator?", "Is it required that every set generator possesses at least one unique value as a quality?", "Can a set generator's 'has_quality' relation be satisfied only by unique values?", "Are unique values necessarily present among the qualities assigned to any set generator?", "Is every set generator classified under homogenous unordered aggregate generator with variable size?", "Which specific generators fall under the category of homogenous unordered aggregate generator with variable size?", "What broader categories include set generator as a subclass?"], "Taxiom": "set generator subClassOf homogenous unordered aggregate generator with variable size", "CQ": [{"axiom": "set generator subClassOf homogenous unordered aggregate generator with variable size", "CQ": ["Is every set generator classified under homogenous unordered aggregate generator with variable size?", "Which specific generators fall under the category of homogenous unordered aggregate generator with variable size?", "What broader categories include set generator as a subclass?"]}, {"axiom": "set generator propertyRestrictions [has_quality some access by value]", "CQ": ["Does every set generator require at least one 'has_quality' relationship with an entity of type 'access by value'?", "Is it necessary that a set generator possesses the 'has_quality' property that relates specifically to 'access by value'?", "Is the presence of the 'has_quality' property with the value 'access by value' sufficient for something to be considered a set generator?"]}, {"axiom": "set generator propertyRestrictions [has_quality some unique values]", "CQ": ["Is it required that every set generator possesses at least one unique value as a quality?", "Can a set generator's 'has_quality' relation be satisfied only by unique values?", "Are unique values necessarily present among the qualities assigned to any set generator?"]}]}
{"ontology": "OntoDT", "class": "table generator", "axiom": {"subClassOf": ["heterogenous aggregate generator"], "propertyRestrictions": ["[has_quality some variable size]", "[has_quality some unordered aggregate]", "[has_quality some two dimensional]"]}, "datatype": "Type1", "TCQ": ["Must a table generator possess at least one quality that is not unique among its values?", "Can a table generator exhibit qualities where the same value is shared by more than one instance?", "Is it required for a table generator to have the property 'has_quality' associated with values that are not unique?"], "VCQ": ["Is table generator classified under the broader category of heterogenous aggregate generator?", "What specific types are encompassed by heterogenous aggregate generator, including table generator?", "To which higher-level categories does table generator belong within the ontology?", "Is it required that every table generator possesses at least one variable size as a quality?", "Does a table generator necessarily have the property ‘has_quality’ associated with some variable size?", "Must all table generators be characterized by having a quality that is a variable size?", "Is every table generator required to have at least one quality that is an unordered aggregate?", "Can a table generator ever lack the property 'has_quality' with an unordered aggregate as a value?", "Does the existence of the 'has_quality' relationship between a table generator and an unordered aggregate imply that unordered aggregate is a necessary quality for all table generators?", "Is every table generator required to have at least one quality that is two dimensional?", "Can a table generator possess qualities other than being two dimensional?", "Does a two dimensional quality necessarily apply to all table generators through the has_quality relationship?", "Must a table generator possess at least one quality that is not unique among its values?", "Can a table generator exhibit qualities where the same value is shared by more than one instance?", "Is it required for a table generator to have the property 'has_quality' associated with values that are not unique?"], "Taxiom": "table generator propertyRestrictions [has_quality some non-unique values]", "CQ": [{"axiom": "table generator subClassOf heterogenous aggregate generator", "CQ": ["Is table generator classified under the broader category of heterogenous aggregate generator?", "What specific types are encompassed by heterogenous aggregate generator, including table generator?", "To which higher-level categories does table generator belong within the ontology?"]}, {"axiom": "table generator propertyRestrictions [has_quality some non-unique values]", "CQ": ["Must a table generator possess at least one quality that is not unique among its values?", "Can a table generator exhibit qualities where the same value is shared by more than one instance?", "Is it required for a table generator to have the property 'has_quality' associated with values that are not unique?"]}, {"axiom": "table generator propertyRestrictions [has_quality some variable size]", "CQ": ["Is it required that every table generator possesses at least one variable size as a quality?", "Does a table generator necessarily have the property ‘has_quality’ associated with some variable size?", "Must all table generators be characterized by having a quality that is a variable size?"]}, {"axiom": "table generator propertyRestrictions [has_quality some unordered aggregate]", "CQ": ["Is every table generator required to have at least one quality that is an unordered aggregate?", "Can a table generator ever lack the property 'has_quality' with an unordered aggregate as a value?", "Does the existence of the 'has_quality' relationship between a table generator and an unordered aggregate imply that unordered aggregate is a necessary quality for all table generators?"]}, {"axiom": "table generator propertyRestrictions [has_quality some two dimensional]", "CQ": ["Is every table generator required to have at least one quality that is two dimensional?", "Can a table generator possess qualities other than being two dimensional?", "Does a two dimensional quality necessarily apply to all table generators through the has_quality relationship?"]}]}
{"ontology": "OntoDT", "class": "choice generator", "axiom": {"subClassOf": [], "propertyRestrictions": ["[is_member_of some choice datatype]"]}, "datatype": "Type1", "TCQ": ["Is every choice generator categorized under non-aggregate generator?", "Which generator types fall under the broader class of non-aggregate generator?", "What more general classes include choice generator as a subclass?"], "VCQ": ["Is it required that a choice generator possesses at least one is_member_of relationship with an instance of the choice datatype?", "Can a choice generator exist without being linked to any element from the choice datatype through the is_member_of property?", "Are all choice generators necessarily associated via is_member_of with members from the specified choice datatype?", "Is every choice generator categorized under non-aggregate generator?", "Which generator types fall under the broader class of non-aggregate generator?", "What more general classes include choice generator as a subclass?"], "Taxiom": "choice generator subClassOf non-aggregate generator", "CQ": [{"axiom": "choice generator subClassOf non-aggregate generator", "CQ": ["Is every choice generator categorized under non-aggregate generator?", "Which generator types fall under the broader class of non-aggregate generator?", "What more general classes include choice generator as a subclass?"]}, {"axiom": "choice generator propertyRestrictions [is_member_of some choice datatype]", "CQ": ["Is it required that a choice generator possesses at least one is_member_of relationship with an instance of the choice datatype?", "Can a choice generator exist without being linked to any element from the choice datatype through the is_member_of property?", "Are all choice generators necessarily associated via is_member_of with members from the specified choice datatype?"]}]}
{"ontology": "OntoDT", "class": "class datatype", "axiom": {"subClassOf": ["heterogenous aggregate datatype"], "disjointWith": [], "propertyRestrictions": ["[has_operation some AttributeSelect:class]", "[has_operation some AttributeReplace:class]", "[has_operation some Equal:class]", "[has_member some class generator]", "[has_quality some non-ordered]", "[has_quality some non-numeric]", "[has_member some attribute-list]"]}, "datatype": "Type1", "TCQ": ["What formal separation exists between class datatypes and record (tuple) datatypes in the ontology?", "Can an entity simultaneously be classified as both a class datatype and a record (tuple) datatype?", "Which datatypes are specified as being incompatible with class datatypes?"], "VCQ": ["Is class datatype classified under the group of heterogenous aggregate datatype?", "Which datatypes are specialized forms of heterogenous aggregate datatype, including class datatype?", "What broader datatype categories encompass class datatype?", "Is every instance of class required to have at least one has_operation relationship to an AttributeSelect?", "Can a class exist without having an operation that is of type AttributeSelect?", "Are classes defined such that they may have the has_operation property only with instances of AttributeSelect?", "Is every instance of the class required to participate in at least one 'has_operation' relationship with an AttributeReplace instance?", "Does the class necessarily have some association via 'has_operation' to objects categorized as AttributeReplace?", "Can a member of this class exist without having the 'has_operation' property linking it to AttributeReplace?", "Is every instance of class required to participate in at least one has_operation relationship with an individual of Equal:class?", "Must class necessarily have some association via has_operation with Equal:class?", "Can an individual of class exist without a has_operation link to any Equal:class?", "Is every instance of 'propertyRestrictions' required to have at least one value for 'has_member' that is a 'generator'?", "Does 'propertyRestrictions' necessarily include a 'generator' through the 'has_member' property?", "Can an instance of 'propertyRestrictions' exist without being related to a 'generator' via 'has_member'?", "Is it required that every instance in the class has the 'has_quality' property relating to at least one instance of 'non-ordered'?", "Does membership in the class entail possessing the 'has_quality' relationship with an entity of type 'non-ordered'?", "Can a class member exist without having the 'has_quality' attribute associated with something classified as 'non-ordered'?", "Is every instance of 'class' required to have at least one 'has_quality' property relating to a 'non-numeric' value?", "Must all entities of type 'class' possess some 'has_quality' relationship to a non-numeric attribute?", "Does the existence of the 'class' category entail that its members always exhibit at least one non-numeric quality via the 'has_quality' property?", "Are all instances of the class required to have at least one member with an attribute from the attribute-list due to the has_member property?", "Does every member connected to the class via has_member necessarily possess at least one attribute from the attribute-list?", "Is it always the case that the class includes some entity related by has_member to any attribute specified in the attribute-list?", "What formal separation exists between class datatypes and record (tuple) datatypes in the ontology?", "Can an entity simultaneously be classified as both a class datatype and a record (tuple) datatype?", "Which datatypes are specified as being incompatible with class datatypes?"], "Taxiom": "class datatype disjointWith record (tuple) datatype", "CQ": [{"axiom": "class datatype subClassOf heterogenous aggregate datatype", "CQ": ["Is class datatype classified under the group of heterogenous aggregate datatype?", "Which datatypes are specialized forms of heterogenous aggregate datatype, including class datatype?", "What broader datatype categories encompass class datatype?"]}, {"axiom": "class datatype disjointWith record (tuple) datatype", "CQ": ["What formal separation exists between class datatypes and record (tuple) datatypes in the ontology?", "Can an entity simultaneously be classified as both a class datatype and a record (tuple) datatype?", "Which datatypes are specified as being incompatible with class datatypes?"]}, {"axiom": "class datatype propertyRestrictions [has_operation some AttributeSelect:class]", "CQ": ["Is every instance of class required to have at least one has_operation relationship to an AttributeSelect?", "Can a class exist without having an operation that is of type AttributeSelect?", "Are classes defined such that they may have the has_operation property only with instances of AttributeSelect?"]}, {"axiom": "class datatype propertyRestrictions [has_operation some AttributeReplace:class]", "CQ": ["Is every instance of the class required to participate in at least one 'has_operation' relationship with an AttributeReplace instance?", "Does the class necessarily have some association via 'has_operation' to objects categorized as AttributeReplace?", "Can a member of this class exist without having the 'has_operation' property linking it to AttributeReplace?"]}, {"axiom": "class datatype propertyRestrictions [has_operation some Equal:class]", "CQ": ["Is every instance of class required to participate in at least one has_operation relationship with an individual of Equal:class?", "Must class necessarily have some association via has_operation with Equal:class?", "Can an individual of class exist without a has_operation link to any Equal:class?"]}, {"axiom": "class datatype propertyRestrictions [has_member some class generator]", "CQ": ["Is every instance of 'propertyRestrictions' required to have at least one value for 'has_member' that is a 'generator'?", "Does 'propertyRestrictions' necessarily include a 'generator' through the 'has_member' property?", "Can an instance of 'propertyRestrictions' exist without being related to a 'generator' via 'has_member'?"]}, {"axiom": "class datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is it required that every instance in the class has the 'has_quality' property relating to at least one instance of 'non-ordered'?", "Does membership in the class entail possessing the 'has_quality' relationship with an entity of type 'non-ordered'?", "Can a class member exist without having the 'has_quality' attribute associated with something classified as 'non-ordered'?"]}, {"axiom": "class datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Is every instance of 'class' required to have at least one 'has_quality' property relating to a 'non-numeric' value?", "Must all entities of type 'class' possess some 'has_quality' relationship to a non-numeric attribute?", "Does the existence of the 'class' category entail that its members always exhibit at least one non-numeric quality via the 'has_quality' property?"]}, {"axiom": "class datatype propertyRestrictions [has_member some attribute-list]", "CQ": ["Are all instances of the class required to have at least one member with an attribute from the attribute-list due to the has_member property?", "Does every member connected to the class via has_member necessarily possess at least one attribute from the attribute-list?", "Is it always the case that the class includes some entity related by has_member to any attribute specified in the attribute-list?"]}]}
{"ontology": "OntoDT", "class": "discrete-value identifier", "axiom": {"subClassOf": ["identifier"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Does every discrete-value identifier necessarily have a value for the property 'propertyRestrictions' that is a literal?", "Is it required that each discrete-value identifier possesses at least one propertyRestrictions value belonging to rdfs:Literal?", "Can a discrete-value identifier exist without having propertyRestrictions set to any literal value?"], "VCQ": ["Are all discrete-value identifiers classified under the identifier category?", "Which identifier types are more specific, such as discrete-value identifier?", "What broader class contains discrete-value identifier as a member?", "Does every discrete-value identifier necessarily have a value for the property 'propertyRestrictions' that is a literal?", "Is it required that each discrete-value identifier possesses at least one propertyRestrictions value belonging to rdfs:Literal?", "Can a discrete-value identifier exist without having propertyRestrictions set to any literal value?"], "Taxiom": "discrete-value identifier propertyRestrictions [has-value some rdfs:Literal]", "CQ": [{"axiom": "discrete-value identifier subClassOf identifier", "CQ": ["Are all discrete-value identifiers classified under the identifier category?", "Which identifier types are more specific, such as discrete-value identifier?", "What broader class contains discrete-value identifier as a member?"]}, {"axiom": "discrete-value identifier propertyRestrictions [has-value some rdfs:Literal]", "CQ": ["Does every discrete-value identifier necessarily have a value for the property 'propertyRestrictions' that is a literal?", "Is it required that each discrete-value identifier possesses at least one propertyRestrictions value belonging to rdfs:Literal?", "Can a discrete-value identifier exist without having propertyRestrictions set to any literal value?"]}]}
{"ontology": "OntoDT", "class": "homogenity", "axiom": {"subClassOf": ["aggregate generator property"], "disjointWith": ["agregate size", "uniqueness", "component mandatoriness", "structurness", "access type"], "equivalentClass": ["(homogenous or heterogenous)"]}, "datatype": "Type1", "TCQ": ["How are homogeneity and recursiveness formally related within the ontology?", "Is there an instance that can possess both homogeneity and recursiveness?", "Which classes are stated to be incompatible with homogeneity?"], "VCQ": ["Is homogenity classified under the aggregate generator property category?", "What specific properties are distinguished as subclasses of aggregate generator property, including homogenity?", "Which higher-level property categories encompass homogenity?", "Are there any entities that can simultaneously belong to both the 'homogenity' and 'agregate size' classes?", "Which ontology classes are specified as mutually exclusive with 'agregate size'?", "How does the ontology formally distinguish between 'homogenity' and 'agregate size'?", "How is the concept of homogenity formally separated from uniqueness in the ontology?", "Is there any entity that can simultaneously possess both homogenity and uniqueness?", "Which other concepts are specified as mutually exclusive with homogenity?", "How does the ontology treat the connection between homogenity and component mandatoriness?", "Is it valid for an entity to possess both homogenity and component mandatoriness simultaneously?", "Which concepts are formally specified as incompatible with component mandatoriness within the ontology?", "How are homogenity and structurness represented in relation to each other within the ontology?", "Is any entity allowed to possess both homogenity and structurness simultaneously?", "Which classes are defined as mutually exclusive with structurness?", "How does the ontology differentiate between homogenity and access type as separate concepts?", "Is it permissible for an entity to be classified simultaneously as homogenity and access type?", "Which classes are stated to be mutually exclusive with access type?", "Is every instance classified as homogenity necessarily either homogenous or heterogenous?", "Is the class homogenity equivalent to the union of homogenous and heterogenous?", "Can anything be considered homogenity that does not fall under either homogenous or heterogenous?", "How are homogeneity and recursiveness formally related within the ontology?", "Is there an instance that can possess both homogeneity and recursiveness?", "Which classes are stated to be incompatible with homogeneity?"], "Taxiom": "homogenity disjointWith recursiveness", "CQ": [{"axiom": "homogenity subClassOf aggregate generator property", "CQ": ["Is homogenity classified under the aggregate generator property category?", "What specific properties are distinguished as subclasses of aggregate generator property, including homogenity?", "Which higher-level property categories encompass homogenity?"]}, {"axiom": "homogenity disjointWith agregate size", "CQ": ["Are there any entities that can simultaneously belong to both the 'homogenity' and 'agregate size' classes?", "Which ontology classes are specified as mutually exclusive with 'agregate size'?", "How does the ontology formally distinguish between 'homogenity' and 'agregate size'?"]}, {"axiom": "homogenity disjointWith uniqueness", "CQ": ["How is the concept of homogenity formally separated from uniqueness in the ontology?", "Is there any entity that can simultaneously possess both homogenity and uniqueness?", "Which other concepts are specified as mutually exclusive with homogenity?"]}, {"axiom": "homogenity disjointWith component mandatoriness", "CQ": ["How does the ontology treat the connection between homogenity and component mandatoriness?", "Is it valid for an entity to possess both homogenity and component mandatoriness simultaneously?", "Which concepts are formally specified as incompatible with component mandatoriness within the ontology?"]}, {"axiom": "homogenity disjointWith structurness", "CQ": ["How are homogenity and structurness represented in relation to each other within the ontology?", "Is any entity allowed to possess both homogenity and structurness simultaneously?", "Which classes are defined as mutually exclusive with structurness?"]}, {"axiom": "homogenity disjointWith recursiveness", "CQ": ["How are homogeneity and recursiveness formally related within the ontology?", "Is there an instance that can possess both homogeneity and recursiveness?", "Which classes are stated to be incompatible with homogeneity?"]}, {"axiom": "homogenity disjointWith access type", "CQ": ["How does the ontology differentiate between homogenity and access type as separate concepts?", "Is it permissible for an entity to be classified simultaneously as homogenity and access type?", "Which classes are stated to be mutually exclusive with access type?"]}, {"axiom": "homogenity equivalentClass (homogenous or heterogenous)", "CQ": ["Is every instance classified as homogenity necessarily either homogenous or heterogenous?", "Is the class homogenity equivalent to the union of homogenous and heterogenous?", "Can anything be considered homogenity that does not fall under either homogenous or heterogenous?"]}]}
{"ontology": "OntoDT", "class": "component mandatoriness", "axiom": {"subClassOf": ["aggregate generator property"], "disjointWith": ["recursiveness", "access type"], "equivalentClass": ["(component mandatory or component non-mandatory)"]}, "datatype": "Type1", "TCQ": ["How does the ontology distinguish between component mandatoriness and structurness?", "Is there any entity that can simultaneously possess both component mandatoriness and structurness?", "Which concepts are defined as mutually exclusive with structurness?"], "VCQ": ["Is every instance of component mandatoriness necessarily an instance of aggregate generator property?", "What properties are considered more specific subclasses under aggregate generator property?", "Which broader property categories encompass component mandatoriness?", "How does the ontology differentiate between component mandatoriness and recursiveness?", "Is any element allowed to possess both the properties of component mandatoriness and recursiveness?", "Which concepts are specified as disjoint with recursiveness in the ontology?", "What logical separation is established between component mandatoriness and access type in the ontology?", "Is any entity allowed to simultaneously belong to both the component mandatoriness and access type categories?", "Which classes, aside from access type, are specified as mutually exclusive with component mandatoriness?", "Is component mandatoriness defined as either component mandatory or component non-mandatory?", "Is the class component mandatoriness equivalent to the union of component mandatory and component non-mandatory?", "Can any instance of component mandatoriness be classified as either component mandatory or component non-mandatory, but not outside these two categories?", "How does the ontology distinguish between component mandatoriness and structurness?", "Is there any entity that can simultaneously possess both component mandatoriness and structurness?", "Which concepts are defined as mutually exclusive with structurness?"], "Taxiom": "component mandatoriness disjointWith structurness", "CQ": [{"axiom": "component mandatoriness subClassOf aggregate generator property", "CQ": ["Is every instance of component mandatoriness necessarily an instance of aggregate generator property?", "What properties are considered more specific subclasses under aggregate generator property?", "Which broader property categories encompass component mandatoriness?"]}, {"axiom": "component mandatoriness disjointWith structurness", "CQ": ["How does the ontology distinguish between component mandatoriness and structurness?", "Is there any entity that can simultaneously possess both component mandatoriness and structurness?", "Which concepts are defined as mutually exclusive with structurness?"]}, {"axiom": "component mandatoriness disjointWith recursiveness", "CQ": ["How does the ontology differentiate between component mandatoriness and recursiveness?", "Is any element allowed to possess both the properties of component mandatoriness and recursiveness?", "Which concepts are specified as disjoint with recursiveness in the ontology?"]}, {"axiom": "component mandatoriness disjointWith access type", "CQ": ["What logical separation is established between component mandatoriness and access type in the ontology?", "Is any entity allowed to simultaneously belong to both the component mandatoriness and access type categories?", "Which classes, aside from access type, are specified as mutually exclusive with component mandatoriness?"]}, {"axiom": "component mandatoriness equivalentClass (component mandatory or component non-mandatory)", "CQ": ["Is component mandatoriness defined as either component mandatory or component non-mandatory?", "Is the class component mandatoriness equivalent to the union of component mandatory and component non-mandatory?", "Can any instance of component mandatoriness be classified as either component mandatory or component non-mandatory, but not outside these two categories?"]}]}
{"ontology": "OntoDT", "class": "access type", "axiom": {"subClassOf": [], "equivalentClass": ["(direct access property or indirect acess property)"]}, "datatype": "Type1", "TCQ": ["Is access type categorized under aggregate generator property?", "Which types are more specific than aggregate generator property, such as access type?", "What broader property classes include access type as a specialized type?"], "VCQ": ["Is an access type defined as either a direct access property or an indirect access property?", "Are all instances of access type necessarily classified as direct access property, indirect access property, or both?", "Can access type be characterized as the union of direct access property and indirect access property?", "Is access type categorized under aggregate generator property?", "Which types are more specific than aggregate generator property, such as access type?", "What broader property classes include access type as a specialized type?"], "Taxiom": "access type subClassOf aggregate generator property", "CQ": [{"axiom": "access type subClassOf aggregate generator property", "CQ": ["Is access type categorized under aggregate generator property?", "Which types are more specific than aggregate generator property, such as access type?", "What broader property classes include access type as a specialized type?"]}, {"axiom": "access type equivalentClass (direct access property or indirect acess property)", "CQ": ["Is an access type defined as either a direct access property or an indirect access property?", "Are all instances of access type necessarily classified as direct access property, indirect access property, or both?", "Can access type be characterized as the union of direct access property and indirect access property?"]}]}
{"ontology": "OntoDT", "class": "generated datatype", "axiom": {"subClassOf": ["datatype"], "disjointWith": [], "propertyRestrictions": ["[has_member some generated datatype generator]"]}, "datatype": "Type1", "TCQ": ["How does the ontology distinguish between generated datatype and defined datatype?", "Is any entity allowed to be classified simultaneously as a generated datatype and a defined datatype?", "Which datatypes are specified as being mutually exclusive with generated datatype?"], "VCQ": ["Does the class generated datatype represent a more specific form of datatype?", "What are the immediate subclasses found within datatype, including generated datatype?", "Which general classification does generated datatype fall under in the ontology?", "Is it required that every instance with ‘has_member’ property must be associated with at least one item of type ‘generator’?", "Does having at least one relation via ‘has_member’ to a ‘generator’ entity suffice to fulfill the restriction?", "Are there any cases where an entity satisfies ‘has_member some generator’ without being linked to at least one ‘generator’?", "How does the ontology distinguish between generated datatype and defined datatype?", "Is any entity allowed to be classified simultaneously as a generated datatype and a defined datatype?", "Which datatypes are specified as being mutually exclusive with generated datatype?"], "Taxiom": "generated datatype disjointWith defined datatype", "CQ": [{"axiom": "generated datatype subClassOf datatype", "CQ": ["Does the class generated datatype represent a more specific form of datatype?", "What are the immediate subclasses found within datatype, including generated datatype?", "Which general classification does generated datatype fall under in the ontology?"]}, {"axiom": "generated datatype disjointWith defined datatype", "CQ": ["How does the ontology distinguish between generated datatype and defined datatype?", "Is any entity allowed to be classified simultaneously as a generated datatype and a defined datatype?", "Which datatypes are specified as being mutually exclusive with generated datatype?"]}, {"axiom": "generated datatype propertyRestrictions [has_member some generated datatype generator]", "CQ": ["Is it required that every instance with ‘has_member’ property must be associated with at least one item of type ‘generator’?", "Does having at least one relation via ‘has_member’ to a ‘generator’ entity suffice to fulfill the restriction?", "Are there any cases where an entity satisfies ‘has_member some generator’ without being linked to at least one ‘generator’?"]}]}
{"ontology": "OntoDT", "class": "field component", "axiom": {"subClassOf": [], "propertyRestrictions": ["[role_of some datatype]", "[has_identifier some field identifier]"]}, "datatype": "Type1", "TCQ": ["Does field component fall under the category of datatype role?", "What components are classified as more specific types within datatype role, including field component?", "Which broader categories encompass field component as a subclass?"], "VCQ": ["Is every field component required to have the property 'role_of' with at least one datatype?", "Can a field component exist without being related to any datatype through the 'role_of' property?", "Does the definition of field component allow for multiple instances of the 'role_of' property linking to different datatypes?", "Is it required for every field component to have at least one identifier via the 'has_identifier' property?", "Can a field component exist without possessing any field identifier assigned by 'has_identifier'?", "Does the presence of a field identifier through 'has_identifier' necessarily pertain to all field components?", "Does field component fall under the category of datatype role?", "What components are classified as more specific types within datatype role, including field component?", "Which broader categories encompass field component as a subclass?"], "Taxiom": "field component subClassOf datatype role", "CQ": [{"axiom": "field component subClassOf datatype role", "CQ": ["Does field component fall under the category of datatype role?", "What components are classified as more specific types within datatype role, including field component?", "Which broader categories encompass field component as a subclass?"]}, {"axiom": "field component propertyRestrictions [role_of some datatype]", "CQ": ["Is every field component required to have the property 'role_of' with at least one datatype?", "Can a field component exist without being related to any datatype through the 'role_of' property?", "Does the definition of field component allow for multiple instances of the 'role_of' property linking to different datatypes?"]}, {"axiom": "field component propertyRestrictions [has_identifier some field identifier]", "CQ": ["Is it required for every field component to have at least one identifier via the 'has_identifier' property?", "Can a field component exist without possessing any field identifier assigned by 'has_identifier'?", "Does the presence of a field identifier through 'has_identifier' necessarily pertain to all field components?"]}]}
{"ontology": "OntoDT", "class": "alternative component", "axiom": {"subClassOf": [], "propertyRestrictions": ["[has_member some tag-value list]", "[has_member some alternative-type]"]}, "datatype": "Type1", "TCQ": ["Which datatype roles include alternative components as their subclasses?", "Is alternative component categorized under the superclass datatype role?", "What general classes encompass alternative component within their hierarchy?"], "VCQ": ["Is it required that an alternative component must have at least one member belonging to a tag-value list?", "Can an alternative component exist without having any member that is included in a tag-value list?", "Are all alternative components necessarily associated with the has_member property linked to some tag-value list?", "Is it necessary for an alternative component to have at least one member that is of type alternative-type?", "Does every alternative component include some member classified as an alternative-type?", "Can an alternative component exist without having any member that is an alternative-type?", "Which datatype roles include alternative components as their subclasses?", "Is alternative component categorized under the superclass datatype role?", "What general classes encompass alternative component within their hierarchy?"], "Taxiom": "alternative component subClassOf datatype role", "CQ": [{"axiom": "alternative component subClassOf datatype role", "CQ": ["Which datatype roles include alternative components as their subclasses?", "Is alternative component categorized under the superclass datatype role?", "What general classes encompass alternative component within their hierarchy?"]}, {"axiom": "alternative component propertyRestrictions [has_member some tag-value list]", "CQ": ["Is it required that an alternative component must have at least one member belonging to a tag-value list?", "Can an alternative component exist without having any member that is included in a tag-value list?", "Are all alternative components necessarily associated with the has_member property linked to some tag-value list?"]}, {"axiom": "alternative component propertyRestrictions [has_member some alternative-type]", "CQ": ["Is it necessary for an alternative component to have at least one member that is of type alternative-type?", "Does every alternative component include some member classified as an alternative-type?", "Can an alternative component exist without having any member that is an alternative-type?"]}]}
{"ontology": "OntoDT", "class": "index-type", "axiom": {"subClassOf": ["datatype role"], "propertyRestrictions": ["[has_member some index upperbound]", "[is_member_of some index-type list]", "[has_member some index lowerbound]"]}, "datatype": "Type1", "TCQ": ["Is it required that every index-type has at least one role_of relationship to a datatype?", "Can an index-type exist without being associated through role_of to any datatype?", "Does the presence of a role_of link with a datatype distinguish index-type from other classes?"], "VCQ": ["Is index-type classified as a more specific type under the general category of datatype role?", "Which specialized types are categorized beneath datatype role, such as index-type?", "What broader categories encompass index-type within the ontology?", "Must every instance of index-type have at least one 'has_member' relationship to an instance of index upperbound?", "Is it required for an index-type to include at least one member that is classified as index upperbound via the 'has_member' property?", "Can an index-type be considered valid if it lacks any 'has_member' connection to an index upperbound?", "Is every index-type entity required to be a member of at least one index-type list?", "Can an index-type exist without being associated via is_member_of to any index-type list?", "Does the definition of index-type necessitate a relationship through is_member_of to an index-type list?", "Is it required for propertyRestrictions to have at least one has_member relationship to an index in the lowerbound category?", "Does every instance of propertyRestrictions include a member of type index whose value meets the lowerbound constraint?", "Can propertyRestrictions exist without having any has_member connections to an index corresponding to lowerbound?", "Is it required that every index-type has at least one role_of relationship to a datatype?", "Can an index-type exist without being associated through role_of to any datatype?", "Does the presence of a role_of link with a datatype distinguish index-type from other classes?"], "Taxiom": "index-type propertyRestrictions [role_of some datatype]", "CQ": [{"axiom": "index-type subClassOf datatype role", "CQ": ["Is index-type classified as a more specific type under the general category of datatype role?", "Which specialized types are categorized beneath datatype role, such as index-type?", "What broader categories encompass index-type within the ontology?"]}, {"axiom": "index-type propertyRestrictions [has_member some index upperbound]", "CQ": ["Must every instance of index-type have at least one 'has_member' relationship to an instance of index upperbound?", "Is it required for an index-type to include at least one member that is classified as index upperbound via the 'has_member' property?", "Can an index-type be considered valid if it lacks any 'has_member' connection to an index upperbound?"]}, {"axiom": "index-type propertyRestrictions [is_member_of some index-type list]", "CQ": ["Is every index-type entity required to be a member of at least one index-type list?", "Can an index-type exist without being associated via is_member_of to any index-type list?", "Does the definition of index-type necessitate a relationship through is_member_of to an index-type list?"]}, {"axiom": "index-type propertyRestrictions [role_of some datatype]", "CQ": ["Is it required that every index-type has at least one role_of relationship to a datatype?", "Can an index-type exist without being associated through role_of to any datatype?", "Does the presence of a role_of link with a datatype distinguish index-type from other classes?"]}, {"axiom": "index-type propertyRestrictions [has_member some index lowerbound]", "CQ": ["Is it required for propertyRestrictions to have at least one has_member relationship to an index in the lowerbound category?", "Does every instance of propertyRestrictions include a member of type index whose value meets the lowerbound constraint?", "Can propertyRestrictions exist without having any has_member connections to an index corresponding to lowerbound?"]}]}
{"ontology": "OntoDT", "class": "real field-list", "axiom": {"subClassOf": ["field-list"], "disjointWith": ["boolean field-list"], "propertyRestrictions": ["[has_member some real field component]"]}, "datatype": "Type1", "TCQ": ["What is the logical separation between real field-list and discrete field-list according to the ontology?", "Is any field-list instance permitted to belong to both real and discrete field-list classes?", "Which entities are declared as mutually exclusive with discrete field-list within the ontology?"], "VCQ": ["Is real field-list categorized under the scope of field-list?", "Which specialized field-list types encompass real field-list?", "What broader classes include real field-list within their hierarchy?", "What ontological separation is defined between real field-list and boolean field-list?", "Is an entity allowed to be classified under both real field-list and boolean field-list categories?", "Which field-list types are formally specified as disjoint with boolean field-list?", "Is every real field-list required to have at least one member that is a real field component?", "Does the property 'has_member' applied to a real field-list necessarily include some real field component?", "Can a real field-list exist without having any members from the class of real field components?", "What is the logical separation between real field-list and discrete field-list according to the ontology?", "Is any field-list instance permitted to belong to both real and discrete field-list classes?", "Which entities are declared as mutually exclusive with discrete field-list within the ontology?"], "Taxiom": "real field-list disjointWith discrete field-list", "CQ": [{"axiom": "real field-list subClassOf field-list", "CQ": ["Is real field-list categorized under the scope of field-list?", "Which specialized field-list types encompass real field-list?", "What broader classes include real field-list within their hierarchy?"]}, {"axiom": "real field-list disjointWith boolean field-list", "CQ": ["What ontological separation is defined between real field-list and boolean field-list?", "Is an entity allowed to be classified under both real field-list and boolean field-list categories?", "Which field-list types are formally specified as disjoint with boolean field-list?"]}, {"axiom": "real field-list disjointWith discrete field-list", "CQ": ["What is the logical separation between real field-list and discrete field-list according to the ontology?", "Is any field-list instance permitted to belong to both real and discrete field-list classes?", "Which entities are declared as mutually exclusive with discrete field-list within the ontology?"]}, {"axiom": "real field-list propertyRestrictions [has_member some real field component]", "CQ": ["Is every real field-list required to have at least one member that is a real field component?", "Does the property 'has_member' applied to a real field-list necessarily include some real field component?", "Can a real field-list exist without having any members from the class of real field components?"]}]}
{"ontology": "OntoDT", "class": "primitive field-list", "axiom": {"subClassOf": ["field-list"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Is every primitive field-list required to have at least one 'has_member' relationship with a primitive field component?", "Can a primitive field-list exist if it does not include any primitive field component as a member?", "Does the existence of a 'primitive field-list' imply the presence of a related 'primitive field component' via the 'has_member' property?"], "VCQ": ["Is primitive field-list included in the set of subclasses of field-list?", "What more general class does primitive field-list belong to within the ontology?", "Which lists are classified as more specific instances under field-list, such as primitive field-list?", "Is every primitive field-list required to have at least one 'has_member' relationship with a primitive field component?", "Can a primitive field-list exist if it does not include any primitive field component as a member?", "Does the existence of a 'primitive field-list' imply the presence of a related 'primitive field component' via the 'has_member' property?"], "Taxiom": "primitive field-list propertyRestrictions [has_member some primitive field component]", "CQ": [{"axiom": "primitive field-list subClassOf field-list", "CQ": ["Is primitive field-list included in the set of subclasses of field-list?", "What more general class does primitive field-list belong to within the ontology?", "Which lists are classified as more specific instances under field-list, such as primitive field-list?"]}, {"axiom": "primitive field-list propertyRestrictions [has_member some primitive field component]", "CQ": ["Is every primitive field-list required to have at least one 'has_member' relationship with a primitive field component?", "Can a primitive field-list exist if it does not include any primitive field component as a member?", "Does the existence of a 'primitive field-list' imply the presence of a related 'primitive field component' via the 'has_member' property?"]}]}
{"ontology": "OntoDT", "class": "dyadic operation", "axiom": {"subClassOf": ["characterizing operation"], "disjointWith": ["niladic operation", "n-adic operation"]}, "datatype": "Type1", "TCQ": ["How does the ontology differentiate dyadic operations from monadic operations?", "Is it permissible for an operation to be classified as both dyadic and monadic according to the ontology?", "Which operation types are defined as mutually exclusive with monadic operations in the knowledge model?"], "VCQ": ["Is every dyadic operation encompassed by the category of characterizing operation?", "What operations fall under the broader class of characterizing operation, including dyadic operation?", "Which more general operation types include dyadic operation?", "How are dyadic operations and niladic operations classified with respect to each other in the ontology?", "Is there an entity that can be considered both a dyadic operation and a niladic operation?", "Which operation types are defined as disjoint with dyadic operations?", "What is the ontological separation between dyadic operation and n-adic operation?", "Is any mathematical operation classified as both a dyadic operation and an n-adic operation?", "Which operation types are stated as disjoint with n-adic operation in the ontology?", "How does the ontology differentiate dyadic operations from monadic operations?", "Is it permissible for an operation to be classified as both dyadic and monadic according to the ontology?", "Which operation types are defined as mutually exclusive with monadic operations in the knowledge model?"], "Taxiom": "dyadic operation disjointWith monadic operation", "CQ": [{"axiom": "dyadic operation subClassOf characterizing operation", "CQ": ["Is every dyadic operation encompassed by the category of characterizing operation?", "What operations fall under the broader class of characterizing operation, including dyadic operation?", "Which more general operation types include dyadic operation?"]}, {"axiom": "dyadic operation disjointWith niladic operation", "CQ": ["How are dyadic operations and niladic operations classified with respect to each other in the ontology?", "Is there an entity that can be considered both a dyadic operation and a niladic operation?", "Which operation types are defined as disjoint with dyadic operations?"]}, {"axiom": "dyadic operation disjointWith monadic operation", "CQ": ["How does the ontology differentiate dyadic operations from monadic operations?", "Is it permissible for an operation to be classified as both dyadic and monadic according to the ontology?", "Which operation types are defined as mutually exclusive with monadic operations in the knowledge model?"]}, {"axiom": "dyadic operation disjointWith n-adic operation", "CQ": ["What is the ontological separation between dyadic operation and n-adic operation?", "Is any mathematical operation classified as both a dyadic operation and an n-adic operation?", "Which operation types are stated as disjoint with n-adic operation in the ontology?"]}]}
{"ontology": "OntoDT", "class": "monadic operation", "axiom": {"subClassOf": ["characterizing operation"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["How does the ontology formally distinguish between monadic operations and n-adic operations?", "Is it permitted for an operation to be both monadic and n-adic simultaneously within the ontology framework?", "Which types of operations are specified as being mutually exclusive with n-adic operations?"], "VCQ": ["Does a monadic operation fall under the category of characterizing operation?", "Which operations are classified as specializations of characterizing operation, such as monadic operation?", "To which higher-level operation types does monadic operation belong?", "How does the ontology formally distinguish between monadic operations and n-adic operations?", "Is it permitted for an operation to be both monadic and n-adic simultaneously within the ontology framework?", "Which types of operations are specified as being mutually exclusive with n-adic operations?"], "Taxiom": "monadic operation disjointWith n-adic operation", "CQ": [{"axiom": "monadic operation subClassOf characterizing operation", "CQ": ["Does a monadic operation fall under the category of characterizing operation?", "Which operations are classified as specializations of characterizing operation, such as monadic operation?", "To which higher-level operation types does monadic operation belong?"]}, {"axiom": "monadic operation disjointWith n-adic operation", "CQ": ["How does the ontology formally distinguish between monadic operations and n-adic operations?", "Is it permitted for an operation to be both monadic and n-adic simultaneously within the ontology framework?", "Which types of operations are specified as being mutually exclusive with n-adic operations?"]}]}
{"ontology": "OntoDT", "class": "procedure-parameter-list", "axiom": {"subClassOf": [], "propertyRestrictions": ["[has_member some procedure-paremeter declaration]"]}, "datatype": "Type1", "TCQ": ["Is procedure-parameter-list categorized under list specification?", "Which specific types fall under the category of list specification, and does procedure-parameter-list appear among them?", "What broader classifications include procedure-parameter-list?"], "VCQ": ["Must every procedure-parameter-list include at least one member that is a procedure-parameter declaration?", "Is the presence of a procedure-parameter declaration as a member required for an instance to be recognized as a procedure-parameter-list?", "Can a procedure-parameter-list exist without having any procedure-parameter declaration as a member?", "Is procedure-parameter-list categorized under list specification?", "Which specific types fall under the category of list specification, and does procedure-parameter-list appear among them?", "What broader classifications include procedure-parameter-list?"], "Taxiom": "procedure-parameter-list subClassOf list specification", "CQ": [{"axiom": "procedure-parameter-list subClassOf list specification", "CQ": ["Is procedure-parameter-list categorized under list specification?", "Which specific types fall under the category of list specification, and does procedure-parameter-list appear among them?", "What broader classifications include procedure-parameter-list?"]}, {"axiom": "procedure-parameter-list propertyRestrictions [has_member some procedure-paremeter declaration]", "CQ": ["Must every procedure-parameter-list include at least one member that is a procedure-parameter declaration?", "Is the presence of a procedure-parameter declaration as a member required for an instance to be recognized as a procedure-parameter-list?", "Can a procedure-parameter-list exist without having any procedure-parameter declaration as a member?"]}]}
{"ontology": "OntoDT", "class": "extended-value-list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Is every instance of an extended-value-list required to have at least one has_identifier relationship with an extended-value identifier?", "Can an extended-value-list exist without being linked by has_identifier to an extended-value identifier?", "Does the presence of the has_identifier property between an extended-value-list and an extended-value identifier define the membership of extended-value-list in the ontology?"], "VCQ": ["Is extended-value-list encompassed by the broader category of list specification?", "What are the more specialized forms of list specification, particularly those including extended-value-list?", "Which higher-level categories does extended-value-list fall under within the ontology?", "Is every instance of an extended-value-list required to have at least one has_identifier relationship with an extended-value identifier?", "Can an extended-value-list exist without being linked by has_identifier to an extended-value identifier?", "Does the presence of the has_identifier property between an extended-value-list and an extended-value identifier define the membership of extended-value-list in the ontology?"], "Taxiom": "extended-value-list propertyRestrictions [has_identifier some extended-value identifier]", "CQ": [{"axiom": "extended-value-list subClassOf list specification", "CQ": ["Is extended-value-list encompassed by the broader category of list specification?", "What are the more specialized forms of list specification, particularly those including extended-value-list?", "Which higher-level categories does extended-value-list fall under within the ontology?"]}, {"axiom": "extended-value-list propertyRestrictions [has_identifier some extended-value identifier]", "CQ": ["Is every instance of an extended-value-list required to have at least one has_identifier relationship with an extended-value identifier?", "Can an extended-value-list exist without being linked by has_identifier to an extended-value identifier?", "Does the presence of the has_identifier property between an extended-value-list and an extended-value identifier define the membership of extended-value-list in the ontology?"]}]}
{"ontology": "OntoDT", "class": "field-list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Must every field-list include at least one field component as a member?", "Is it required for the has_member property of a field-list to relate to a field component?", "Can a field-list exist without having any field component as its member?"], "VCQ": ["Is field-list classified as a subtype of list specification?", "What broader category does field-list fall under within the list specification hierarchy?", "Which list specification subclasses encompass field-list?", "Must every field-list include at least one field component as a member?", "Is it required for the has_member property of a field-list to relate to a field component?", "Can a field-list exist without having any field component as its member?"], "Taxiom": "field-list propertyRestrictions [has_member some field component]", "CQ": [{"axiom": "field-list subClassOf list specification", "CQ": ["Is field-list classified as a subtype of list specification?", "What broader category does field-list fall under within the list specification hierarchy?", "Which list specification subclasses encompass field-list?"]}, {"axiom": "field-list propertyRestrictions [has_member some field component]", "CQ": ["Must every field-list include at least one field component as a member?", "Is it required for the has_member property of a field-list to relate to a field component?", "Can a field-list exist without having any field component as its member?"]}]}
{"ontology": "OntoDT", "class": "homogenous aggregate datatype with variable size", "axiom": {"subClassOf": [], "propertyRestrictions": ["[has_member some homogenous aggregate generator with variable size]"]}, "datatype": "Type1", "TCQ": ["Can a homogenous aggregate datatype with variable size be classified under homogenous aggregate datatype?", "What are the specific types categorized as homogenous aggregate datatype, including those with variable size?", "Which general datatype categories include homogenous aggregate datatype with variable size as a specialization?"], "VCQ": ["Is it necessary for a homogenous aggregate datatype with variable size to have at least one member that is a homogenous aggregate generator with variable size?", "Does every homogenous aggregate datatype with variable size always include some homogenous aggregate generator with variable size as a member?", "Can a homogenous aggregate datatype with variable size exist without containing any homogenous aggregate generator with variable size as a member?", "Can a homogenous aggregate datatype with variable size be classified under homogenous aggregate datatype?", "What are the specific types categorized as homogenous aggregate datatype, including those with variable size?", "Which general datatype categories include homogenous aggregate datatype with variable size as a specialization?"], "Taxiom": "homogenous aggregate datatype with variable size subClassOf homogenous aggregate datatype", "CQ": [{"axiom": "homogenous aggregate datatype with variable size subClassOf homogenous aggregate datatype", "CQ": ["Can a homogenous aggregate datatype with variable size be classified under homogenous aggregate datatype?", "What are the specific types categorized as homogenous aggregate datatype, including those with variable size?", "Which general datatype categories include homogenous aggregate datatype with variable size as a specialization?"]}, {"axiom": "homogenous aggregate datatype with variable size propertyRestrictions [has_member some homogenous aggregate generator with variable size]", "CQ": ["Is it necessary for a homogenous aggregate datatype with variable size to have at least one member that is a homogenous aggregate generator with variable size?", "Does every homogenous aggregate datatype with variable size always include some homogenous aggregate generator with variable size as a member?", "Can a homogenous aggregate datatype with variable size exist without containing any homogenous aggregate generator with variable size as a member?"]}]}
{"ontology": "OntoDT", "class": "integer datatype", "axiom": {"subClassOf": ["numeric ordered primitive datatype"], "disjointWith": [], "propertyRestrictions": ["[has_operation some NonNegative:integer]", "[has_quality some ordered]", "[has_operation some Equal:integer]", "[has_operation some InOrder:interger]", "[has_quality some numeric]", "[has_quality some exact]", "[has_operation some Add:integer]", "[has_quality some unbounded]", "[has_operation some Multiply:integer]", "[has_operation some Negate:integer]"]}, "datatype": "Type1", "TCQ": ["What logical separation is established between integer datatype and rational datatype in the ontology?", "Can a datatype simultaneously be classified as both integer and rational?", "Which datatypes are explicitly specified as incompatible with rational datatype?"], "VCQ": ["Does integer datatype fall under the broader classification of numeric ordered primitive datatype?", "What specific datatypes are categorized as subclasses of numeric ordered primitive datatype, including integer datatype?", "Which higher-level datatype groups encompass integer datatype?", "Is it required that an integer entity possesses at least one 'has_operation' value that is a non-negative integer?", "Can an integer instance exist without having any association to 'has_operation' with a non-negative integer value?", "Does the scope of 'has_operation' for an integer specifically include only non-negative integer values?", "Must every integer possess at least one 'has_quality' relationship with an entity classified as ordered?", "Is the presence of the 'ordered' quality through the 'has_quality' property a necessary characteristic for all integers?", "Do integers require a 'has_quality' association that entails the existence of the 'ordered' attribute?", "Must every instance related to 'has_operation' include at least one connection to an integer value through the 'Equal' restriction?", "Is it necessary for the property 'has_operation' of an individual to relate that individual to an integer satisfying the 'Equal' constraint?", "Are all individuals with the 'has_operation' property required to demonstrate the existence of an 'Equal' integer value?", "Must every instance with an integer datatype have at least one 'has_operation' property relating it to an integer in the set InOrder?", "Is it required for entities described by this axiom to possess some operation involving an integer classified as InOrder?", "Can an entity with an integer datatype exist in this ontology without being linked by 'has_operation' to at least one InOrder integer value?", "Must every integer possess at least one quality value that is numeric?", "Is it required for instances of integer to be associated with a numeric quality through the has_quality property?", "Can an integer exist without having the has_quality property linking it to a numeric value?", "Is it necessary for an integer to have the 'has_quality' property with at least one value of 'exact'?", "Does every integer always possess the 'has_quality' property linked to 'exact', or can it be associated with other qualities as well?", "Are there integers that do not have any 'has_quality' relationship with 'exact'?", "Must every instance with an integer datatype property have at least one 'has_operation' relationship to an Add operation of type integer?", "Is it required that any entity with an integer property value performs an Add operation involving integers?", "Does the presence of an integer datatype property imply an association with the 'has_operation' property linking to an Add:integer?", "Is it required that every integer possesses at least one 'has_quality' relation to some value within the scope of 'unbounded'?", "Does the definition of integer entail the existence of a 'has_quality' property with an unbounded value?", "Must an integer always be associated with at least one unbounded quality through the 'has_quality' property?", "Is it necessary for an integer to have at least one 'has_operation' relationship with a Multiply operation involving another integer?", "Does every instance of integer participate in a 'has_operation' property where the operation performed is multiplication with another integer?", "Are there integers that do not engage in any 'has_operation' relation with a Multiply operation involving an integer?", "Is it required that an integer has at least one operation involving negation?", "Can every integer be associated with some operation categorized as negation?", "Does the existence of a negation operation apply to all members of the integer class?", "What logical separation is established between integer datatype and rational datatype in the ontology?", "Can a datatype simultaneously be classified as both integer and rational?", "Which datatypes are explicitly specified as incompatible with rational datatype?"], "Taxiom": "integer datatype disjointWith rational datatype", "CQ": [{"axiom": "integer datatype subClassOf numeric ordered primitive datatype", "CQ": ["Does integer datatype fall under the broader classification of numeric ordered primitive datatype?", "What specific datatypes are categorized as subclasses of numeric ordered primitive datatype, including integer datatype?", "Which higher-level datatype groups encompass integer datatype?"]}, {"axiom": "integer datatype disjointWith rational datatype", "CQ": ["What logical separation is established between integer datatype and rational datatype in the ontology?", "Can a datatype simultaneously be classified as both integer and rational?", "Which datatypes are explicitly specified as incompatible with rational datatype?"]}, {"axiom": "integer datatype propertyRestrictions [has_operation some NonNegative:integer]", "CQ": ["Is it required that an integer entity possesses at least one 'has_operation' value that is a non-negative integer?", "Can an integer instance exist without having any association to 'has_operation' with a non-negative integer value?", "Does the scope of 'has_operation' for an integer specifically include only non-negative integer values?"]}, {"axiom": "integer datatype propertyRestrictions [has_quality some ordered]", "CQ": ["Must every integer possess at least one 'has_quality' relationship with an entity classified as ordered?", "Is the presence of the 'ordered' quality through the 'has_quality' property a necessary characteristic for all integers?", "Do integers require a 'has_quality' association that entails the existence of the 'ordered' attribute?"]}, {"axiom": "integer datatype propertyRestrictions [has_operation some Equal:integer]", "CQ": ["Must every instance related to 'has_operation' include at least one connection to an integer value through the 'Equal' restriction?", "Is it necessary for the property 'has_operation' of an individual to relate that individual to an integer satisfying the 'Equal' constraint?", "Are all individuals with the 'has_operation' property required to demonstrate the existence of an 'Equal' integer value?"]}, {"axiom": "integer datatype propertyRestrictions [has_operation some InOrder:interger]", "CQ": ["Must every instance with an integer datatype have at least one 'has_operation' property relating it to an integer in the set InOrder?", "Is it required for entities described by this axiom to possess some operation involving an integer classified as InOrder?", "Can an entity with an integer datatype exist in this ontology without being linked by 'has_operation' to at least one InOrder integer value?"]}, {"axiom": "integer datatype propertyRestrictions [has_quality some numeric]", "CQ": ["Must every integer possess at least one quality value that is numeric?", "Is it required for instances of integer to be associated with a numeric quality through the has_quality property?", "Can an integer exist without having the has_quality property linking it to a numeric value?"]}, {"axiom": "integer datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it necessary for an integer to have the 'has_quality' property with at least one value of 'exact'?", "Does every integer always possess the 'has_quality' property linked to 'exact', or can it be associated with other qualities as well?", "Are there integers that do not have any 'has_quality' relationship with 'exact'?"]}, {"axiom": "integer datatype propertyRestrictions [has_operation some Add:integer]", "CQ": ["Must every instance with an integer datatype property have at least one 'has_operation' relationship to an Add operation of type integer?", "Is it required that any entity with an integer property value performs an Add operation involving integers?", "Does the presence of an integer datatype property imply an association with the 'has_operation' property linking to an Add:integer?"]}, {"axiom": "integer datatype propertyRestrictions [has_quality some unbounded]", "CQ": ["Is it required that every integer possesses at least one 'has_quality' relation to some value within the scope of 'unbounded'?", "Does the definition of integer entail the existence of a 'has_quality' property with an unbounded value?", "Must an integer always be associated with at least one unbounded quality through the 'has_quality' property?"]}, {"axiom": "integer datatype propertyRestrictions [has_operation some Multiply:integer]", "CQ": ["Is it necessary for an integer to have at least one 'has_operation' relationship with a Multiply operation involving another integer?", "Does every instance of integer participate in a 'has_operation' property where the operation performed is multiplication with another integer?", "Are there integers that do not engage in any 'has_operation' relation with a Multiply operation involving an integer?"]}, {"axiom": "integer datatype propertyRestrictions [has_operation some Negate:integer]", "CQ": ["Is it required that an integer has at least one operation involving negation?", "Can every integer be associated with some operation categorized as negation?", "Does the existence of a negation operation apply to all members of the integer class?"]}]}
{"ontology": "OntoDT", "class": "aggregate generator", "axiom": {"subClassOf": [], "equivalentClass": ["(array generator or bag generator or class generator or record generator or sequence generator or set generator or table generator)"]}, "datatype": "Type1", "TCQ": ["Does every aggregate generator fall under the category of generated datatype generator?", "Which generator types are encompassed by the generated datatype generator class?", "To which higher-level classes does aggregate generator pertain within the ontology?"], "VCQ": ["Is an aggregate generator defined as a generator that is either an array generator, a bag generator, a class generator, a record generator, a sequence generator, a set generator, or a table generator?", "Does every aggregate generator fall into at least one of the categories: array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator?", "Can any generator that is an array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator be classified as an aggregate generator?", "Does every aggregate generator fall under the category of generated datatype generator?", "Which generator types are encompassed by the generated datatype generator class?", "To which higher-level classes does aggregate generator pertain within the ontology?"], "Taxiom": "aggregate generator subClassOf generated datatype generator", "CQ": [{"axiom": "aggregate generator subClassOf generated datatype generator", "CQ": ["Does every aggregate generator fall under the category of generated datatype generator?", "Which generator types are encompassed by the generated datatype generator class?", "To which higher-level classes does aggregate generator pertain within the ontology?"]}, {"axiom": "aggregate generator equivalentClass (array generator or bag generator or class generator or record generator or sequence generator or set generator or table generator)", "CQ": ["Is an aggregate generator defined as a generator that is either an array generator, a bag generator, a class generator, a record generator, a sequence generator, a set generator, or a table generator?", "Does every aggregate generator fall into at least one of the categories: array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator?", "Can any generator that is an array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator be classified as an aggregate generator?"]}]}
{"ontology": "OntoDT", "class": "cardinality", "axiom": {"subClassOf": ["datatype property"], "disjointWith": ["order", "equality"], "equivalentClass": ["(countable or finite or uncountable)"]}, "datatype": "Type1", "TCQ": ["How does the ontology distinguish between cardinality and boundedness as separate concepts?", "Is any entity permitted to belong to both cardinality and boundedness categories simultaneously?", "Which other classes, apart from boundedness, are defined as mutually exclusive with cardinality?"], "VCQ": ["Is cardinality categorized as a specific type of datatype property?", "Which datatype properties have cardinality as a specialized form?", "What general categories encompass cardinality in the context of datatype properties?", "How does the ontology specify the incompatibility between cardinality and order?", "Is it logically consistent in the ontology for an entity to simultaneously possess both cardinality and order properties?", "Which classes or concepts are explicitly defined as disjoint with cardinality?", "What logical separation is specified between cardinality and equality in the ontology?", "Is there any entity that can belong to both the concepts of cardinality and equality simultaneously?", "Which ontology classes are formally defined as disjoint with equality?", "Is cardinality equivalent to the union of countable, finite, and uncountable concepts?", "Can every instance classified under cardinality be either countable, finite, or uncountable?", "Does cardinality include only those entities that are finite, countable, or uncountable, with no others?", "How does the ontology distinguish between cardinality and boundedness as separate concepts?", "Is any entity permitted to belong to both cardinality and boundedness categories simultaneously?", "Which other classes, apart from boundedness, are defined as mutually exclusive with cardinality?"], "Taxiom": "cardinality disjointWith boundedness", "CQ": [{"axiom": "cardinality subClassOf datatype property", "CQ": ["Is cardinality categorized as a specific type of datatype property?", "Which datatype properties have cardinality as a specialized form?", "What general categories encompass cardinality in the context of datatype properties?"]}, {"axiom": "cardinality disjointWith order", "CQ": ["How does the ontology specify the incompatibility between cardinality and order?", "Is it logically consistent in the ontology for an entity to simultaneously possess both cardinality and order properties?", "Which classes or concepts are explicitly defined as disjoint with cardinality?"]}, {"axiom": "cardinality disjointWith boundedness", "CQ": ["How does the ontology distinguish between cardinality and boundedness as separate concepts?", "Is any entity permitted to belong to both cardinality and boundedness categories simultaneously?", "Which other classes, apart from boundedness, are defined as mutually exclusive with cardinality?"]}, {"axiom": "cardinality disjointWith equality", "CQ": ["What logical separation is specified between cardinality and equality in the ontology?", "Is there any entity that can belong to both the concepts of cardinality and equality simultaneously?", "Which ontology classes are formally defined as disjoint with equality?"]}, {"axiom": "cardinality equivalentClass (countable or finite or uncountable)", "CQ": ["Is cardinality equivalent to the union of countable, finite, and uncountable concepts?", "Can every instance classified under cardinality be either countable, finite, or uncountable?", "Does cardinality include only those entities that are finite, countable, or uncountable, with no others?"]}]}
{"ontology": "OntoDT", "class": "vector datatype", "axiom": {"subClassOf": ["array datatype"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Is every instance with a 'has_member' relation to a vector required to be associated with a vector generator?", "Can an entity with the 'has_member' property pointing to a vector be something other than a vector generator?", "Are all entities that have members of type vector necessarily linked to a vector generator through the 'has_member' property?"], "VCQ": ["Is every vector datatype classified as a kind of array datatype?", "What types of array datatype encompass vector datatype as a more specific type?", "Which broader datatype categories include vector datatype as a member?", "Is every instance with a 'has_member' relation to a vector required to be associated with a vector generator?", "Can an entity with the 'has_member' property pointing to a vector be something other than a vector generator?", "Are all entities that have members of type vector necessarily linked to a vector generator through the 'has_member' property?"], "Taxiom": "vector datatype propertyRestrictions [has_member some vector generator]", "CQ": [{"axiom": "vector datatype subClassOf array datatype", "CQ": ["Is every vector datatype classified as a kind of array datatype?", "What types of array datatype encompass vector datatype as a more specific type?", "Which broader datatype categories include vector datatype as a member?"]}, {"axiom": "vector datatype propertyRestrictions [has_member some vector generator]", "CQ": ["Is every instance with a 'has_member' relation to a vector required to be associated with a vector generator?", "Can an entity with the 'has_member' property pointing to a vector be something other than a vector generator?", "Are all entities that have members of type vector necessarily linked to a vector generator through the 'has_member' property?"]}]}
{"ontology": "OntoDT", "class": "boolean field component", "axiom": {"subClassOf": ["primitive field component"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Is it required that the 'component' property of a boolean field always relates only to values of the boolean datatype?", "Can a boolean field have a 'component' relationship to any entity that is not of boolean datatype?", "Does every instance of a boolean field necessarily possess at least one 'component' that is a boolean datatype?"], "VCQ": ["Is boolean field component categorized under primitive field component?", "Which field components are encompassed by primitive field component, such as boolean field component?", "Under which higher-level components does boolean field component fall?", "Is it required that the 'component' property of a boolean field always relates only to values of the boolean datatype?", "Can a boolean field have a 'component' relationship to any entity that is not of boolean datatype?", "Does every instance of a boolean field necessarily possess at least one 'component' that is a boolean datatype?"], "Taxiom": "boolean field component propertyRestrictions [role_of some boolean datatype]", "CQ": [{"axiom": "boolean field component subClassOf primitive field component", "CQ": ["Is boolean field component categorized under primitive field component?", "Which field components are encompassed by primitive field component, such as boolean field component?", "Under which higher-level components does boolean field component fall?"]}, {"axiom": "boolean field component propertyRestrictions [role_of some boolean datatype]", "CQ": ["Is it required that the 'component' property of a boolean field always relates only to values of the boolean datatype?", "Can a boolean field have a 'component' relationship to any entity that is not of boolean datatype?", "Does every instance of a boolean field necessarily possess at least one 'component' that is a boolean datatype?"]}]}
{"ontology": "OntoDT", "class": "procedure datatype", "axiom": {"subClassOf": ["non-aggregate datatype"], "propertyRestrictions": ["[has_quality some non-numeric]", "[has_member some procedure generator]", "[has_quality some exact]", "[has_member some procedure-parameter-list]", "[has_operation some Equal:procedure]", "[has_quality some non-ordered]", "[has_operation some Invoke:procedure]"]}, "datatype": "Type1", "TCQ": ["Does every procedure necessarily have at least one return-parameter specified as a member?", "Is it required for a procedure to have the property 'has_member' relating to a return-parameter specification?", "Can there exist a procedure without an associated return-parameter specification via the 'has_member' property?"], "VCQ": ["Is every procedure datatype classified under non-aggregate datatypes?", "Which datatypes are categorized as specializations of non-aggregate datatype, including procedure datatype?", "What higher-level datatype categories encompass procedure datatype?", "Is it required that every procedure has at least one quality that is non-numeric?", "Could a procedure exist without having any non-numeric quality?", "Must the value of the 'has_quality' property for procedures always include some non-numeric attribute?", "Is it necessary for a procedure to have at least one member that is a procedure generator?", "Does every instance of procedure include some relationship via 'has_member' to a procedure generator?", "Can a procedure exist without having a 'has_member' link to any procedure generator?", "Is it required that any procedure always possesses at least one 'has_quality' attribute with the value 'exact'?", "Can a procedure be classified under this ontology if it does not have the 'has_quality' property set to 'exact'?", "Is the assignment of the 'exact' value within the 'has_quality' property obligatory for every procedure instance?", "Is every procedure required to have at least one member from procedure-parameter-list via the has_member property?", "Must a procedure always relate to a procedure-parameter-list through has_member?", "Does the definition of procedure entail the existence of some associated procedure-parameter-list using has_member?", "Is it required that every instance of procedure has at least one has_operation relationship to Equal:procedure?", "Can a procedure exist without being associated with Equal:procedure via the has_operation property?", "Does the presence of the has_operation property with Equal:procedure guarantee that an entity is classified as procedure?", "Is every procedure required to have at least one has_quality relationship to a non-ordered value?", "Can a procedure exist without exhibiting the has_quality property to a non-ordered entity?", "Does the property restriction on procedures mean that non-ordered qualities are necessarily associated with them via has_quality?", "Is it required that every procedure has at least one has_operation relation to an Invoke:procedure?", "Can a procedure exist without being related via has_operation to any Invoke:procedure?", "Are procedures always associated through the has_operation property with at least one instance of Invoke:procedure?", "Does every procedure necessarily have at least one return-parameter specified as a member?", "Is it required for a procedure to have the property 'has_member' relating to a return-parameter specification?", "Can there exist a procedure without an associated return-parameter specification via the 'has_member' property?"], "Taxiom": "procedure datatype propertyRestrictions [has_member some return-parameter specification]", "CQ": [{"axiom": "procedure datatype subClassOf non-aggregate datatype", "CQ": ["Is every procedure datatype classified under non-aggregate datatypes?", "Which datatypes are categorized as specializations of non-aggregate datatype, including procedure datatype?", "What higher-level datatype categories encompass procedure datatype?"]}, {"axiom": "procedure datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Is it required that every procedure has at least one quality that is non-numeric?", "Could a procedure exist without having any non-numeric quality?", "Must the value of the 'has_quality' property for procedures always include some non-numeric attribute?"]}, {"axiom": "procedure datatype propertyRestrictions [has_member some procedure generator]", "CQ": ["Is it necessary for a procedure to have at least one member that is a procedure generator?", "Does every instance of procedure include some relationship via 'has_member' to a procedure generator?", "Can a procedure exist without having a 'has_member' link to any procedure generator?"]}, {"axiom": "procedure datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it required that any procedure always possesses at least one 'has_quality' attribute with the value 'exact'?", "Can a procedure be classified under this ontology if it does not have the 'has_quality' property set to 'exact'?", "Is the assignment of the 'exact' value within the 'has_quality' property obligatory for every procedure instance?"]}, {"axiom": "procedure datatype propertyRestrictions [has_member some procedure-parameter-list]", "CQ": ["Is every procedure required to have at least one member from procedure-parameter-list via the has_member property?", "Must a procedure always relate to a procedure-parameter-list through has_member?", "Does the definition of procedure entail the existence of some associated procedure-parameter-list using has_member?"]}, {"axiom": "procedure datatype propertyRestrictions [has_member some return-parameter specification]", "CQ": ["Does every procedure necessarily have at least one return-parameter specified as a member?", "Is it required for a procedure to have the property 'has_member' relating to a return-parameter specification?", "Can there exist a procedure without an associated return-parameter specification via the 'has_member' property?"]}, {"axiom": "procedure datatype propertyRestrictions [has_operation some Equal:procedure]", "CQ": ["Is it required that every instance of procedure has at least one has_operation relationship to Equal:procedure?", "Can a procedure exist without being associated with Equal:procedure via the has_operation property?", "Does the presence of the has_operation property with Equal:procedure guarantee that an entity is classified as procedure?"]}, {"axiom": "procedure datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is every procedure required to have at least one has_quality relationship to a non-ordered value?", "Can a procedure exist without exhibiting the has_quality property to a non-ordered entity?", "Does the property restriction on procedures mean that non-ordered qualities are necessarily associated with them via has_quality?"]}, {"axiom": "procedure datatype propertyRestrictions [has_operation some Invoke:procedure]", "CQ": ["Is it required that every procedure has at least one has_operation relation to an Invoke:procedure?", "Can a procedure exist without being related via has_operation to any Invoke:procedure?", "Are procedures always associated through the has_operation property with at least one instance of Invoke:procedure?"]}]}
{"ontology": "OntoDT", "class": "upper bound", "axiom": {"subClassOf": ["bound"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Is it required that an upper bound always has exactly one property restriction with a value of type integer?", "Can an upper bound possess more than one property restriction assigned to integer values?", "Are multiple xsd:integer values allowed for the property restriction in the context of an upper bound?"], "VCQ": ["Does upper bound belong to the more general category of bound?", "What specific concepts are subclasses under the class bound, such as upper bound?", "Which broader categories encompass upper bound as a member?", "Is it required that an upper bound always has exactly one property restriction with a value of type integer?", "Can an upper bound possess more than one property restriction assigned to integer values?", "Are multiple xsd:integer values allowed for the property restriction in the context of an upper bound?"], "Taxiom": "upper bound propertyRestrictions [has-value exactly 1 xsd:integer]", "CQ": [{"axiom": "upper bound subClassOf bound", "CQ": ["Does upper bound belong to the more general category of bound?", "What specific concepts are subclasses under the class bound, such as upper bound?", "Which broader categories encompass upper bound as a member?"]}, {"axiom": "upper bound propertyRestrictions [has-value exactly 1 xsd:integer]", "CQ": ["Is it required that an upper bound always has exactly one property restriction with a value of type integer?", "Can an upper bound possess more than one property restriction assigned to integer values?", "Are multiple xsd:integer values allowed for the property restriction in the context of an upper bound?"]}]}
{"ontology": "OntoDT", "class": "index upperbound", "axiom": {"subClassOf": [], "propertyRestrictions": ["[has-value exactly 1 xsd:integer]"]}, "datatype": "Type1", "TCQ": ["Is bound a superclass encompassing index upperbound?", "Which subclasses does bound include, such as index upperbound?", "To what broader categories does index upperbound belong?"], "VCQ": ["Is an index upperbound characterized by having exactly one value of type xsd:integer for its property restrictions?", "Can an index upperbound have more than one xsd:integer value as a property restriction?", "Must the property restriction for index upperbound be limited to a single xsd:integer value?", "Is bound a superclass encompassing index upperbound?", "Which subclasses does bound include, such as index upperbound?", "To what broader categories does index upperbound belong?"], "Taxiom": "index upperbound subClassOf bound", "CQ": [{"axiom": "index upperbound subClassOf bound", "CQ": ["Is bound a superclass encompassing index upperbound?", "Which subclasses does bound include, such as index upperbound?", "To what broader categories does index upperbound belong?"]}, {"axiom": "index upperbound propertyRestrictions [has-value exactly 1 xsd:integer]", "CQ": ["Is an index upperbound characterized by having exactly one value of type xsd:integer for its property restrictions?", "Can an index upperbound have more than one xsd:integer value as a property restriction?", "Must the property restriction for index upperbound be limited to a single xsd:integer value?"]}]}
{"ontology": "OntoDT", "class": "boolean datatype", "axiom": {"subClassOf": ["non-numeric unordered primitive datatype"], "propertyRestrictions": ["[has_quality some non-ordered]", "[has_quality some non-numeric]", "[has_quality some exact]", "[has_operation some Not:boolean]", "[has_operation some Or:boolean]", "[has_operation some Equal:boolean]"]}, "datatype": "Type1", "TCQ": ["Is it required that an entity with the has_operation property is associated with the boolean value 'And'?", "Must every instance with a has_operation property necessarily involve the 'And' boolean operation?", "Can an entity be considered valid if its has_operation property is linked to a boolean value other than 'And'?"], "VCQ": ["Is boolean datatype classified under the category of non-numeric unordered primitive datatypes?", "Which datatypes are subclasses of non-numeric unordered primitive datatype, and does this list include boolean datatype?", "To which higher-level categories does boolean datatype belong within the datatype hierarchy?", "Is every instance with the property 'has_quality' necessarily associated with at least one 'non-ordered' value?", "Does the presence of 'has_quality' for an entity imply it must exhibit some form of 'non-ordered' quality?", "Can an entity qualify if it does not have the 'has_quality' property linked to a 'non-ordered' value?", "Must everything with the 'has_quality' property possess at least one non-numeric value?", "Is it required that any instance with a 'has_quality' relationship be associated with a non-numeric quality?", "Can there be an entity related by 'has_quality' that does not have a non-numeric quality?", "Must every instance with a 'has_quality' property possess at least one 'exact' quality?", "Is it required that entities described by this class have the 'has_quality' relation to some individual of type 'exact'?", "Can any instance of this class lack the 'has_quality' property linking it to an 'exact' quality?", "Is it required for an entity with the 'has_operation' property to have at least one instance where the value is not boolean?", "Can an entity possess the 'has_operation' property only if its value is other than boolean?", "Are there restrictions that exclude boolean values for the 'has_operation' property on this entity?", "Is it necessary for an entity in this class to have the 'has_operation' property with some value of type boolean?", "Can the 'has_operation' property associated with this class ever have a value that is not of boolean type?", "Does membership in this class imply the existence of at least one 'has_operation' relationship with a boolean value?", "Is it required that boolean datatype entities must participate in at least one 'has_operation' relation with an individual from the class Equal?", "Are all boolean datatype instances constrained to exhibit a 'has_operation' link to something classified as Equal?", "Must any instance defined by boolean always possess a 'has_operation' association with a member of Equal?", "Is it required that an entity with the has_operation property is associated with the boolean value 'And'?", "Must every instance with a has_operation property necessarily involve the 'And' boolean operation?", "Can an entity be considered valid if its has_operation property is linked to a boolean value other than 'And'?"], "Taxiom": "boolean datatype propertyRestrictions [has_operation some And:boolean]", "CQ": [{"axiom": "boolean datatype subClassOf non-numeric unordered primitive datatype", "CQ": ["Is boolean datatype classified under the category of non-numeric unordered primitive datatypes?", "Which datatypes are subclasses of non-numeric unordered primitive datatype, and does this list include boolean datatype?", "To which higher-level categories does boolean datatype belong within the datatype hierarchy?"]}, {"axiom": "boolean datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is every instance with the property 'has_quality' necessarily associated with at least one 'non-ordered' value?", "Does the presence of 'has_quality' for an entity imply it must exhibit some form of 'non-ordered' quality?", "Can an entity qualify if it does not have the 'has_quality' property linked to a 'non-ordered' value?"]}, {"axiom": "boolean datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Must everything with the 'has_quality' property possess at least one non-numeric value?", "Is it required that any instance with a 'has_quality' relationship be associated with a non-numeric quality?", "Can there be an entity related by 'has_quality' that does not have a non-numeric quality?"]}, {"axiom": "boolean datatype propertyRestrictions [has_quality some exact]", "CQ": ["Must every instance with a 'has_quality' property possess at least one 'exact' quality?", "Is it required that entities described by this class have the 'has_quality' relation to some individual of type 'exact'?", "Can any instance of this class lack the 'has_quality' property linking it to an 'exact' quality?"]}, {"axiom": "boolean datatype propertyRestrictions [has_operation some Not:boolean]", "CQ": ["Is it required for an entity with the 'has_operation' property to have at least one instance where the value is not boolean?", "Can an entity possess the 'has_operation' property only if its value is other than boolean?", "Are there restrictions that exclude boolean values for the 'has_operation' property on this entity?"]}, {"axiom": "boolean datatype propertyRestrictions [has_operation some And:boolean]", "CQ": ["Is it required that an entity with the has_operation property is associated with the boolean value 'And'?", "Must every instance with a has_operation property necessarily involve the 'And' boolean operation?", "Can an entity be considered valid if its has_operation property is linked to a boolean value other than 'And'?"]}, {"axiom": "boolean datatype propertyRestrictions [has_operation some Or:boolean]", "CQ": ["Is it necessary for an entity in this class to have the 'has_operation' property with some value of type boolean?", "Can the 'has_operation' property associated with this class ever have a value that is not of boolean type?", "Does membership in this class imply the existence of at least one 'has_operation' relationship with a boolean value?"]}, {"axiom": "boolean datatype propertyRestrictions [has_operation some Equal:boolean]", "CQ": ["Is it required that boolean datatype entities must participate in at least one 'has_operation' relation with an individual from the class Equal?", "Are all boolean datatype instances constrained to exhibit a 'has_operation' link to something classified as Equal?", "Must any instance defined by boolean always possess a 'has_operation' association with a member of Equal?"]}]}
{"ontology": "OntoDT", "class": "discrete base type", "axiom": {"subClassOf": ["base type"], "disjointWith": [], "propertyRestrictions": ["[role_of some discrete datatype]"]}, "datatype": "Type1", "TCQ": ["What is the logical separation between discrete base type and real base type in the ontology?", "Can a data type be defined as both discrete and real simultaneously?", "Which base types are explicitly declared as disjoint with real base type?"], "VCQ": ["Is discrete base type classified under the broader category of base type?", "Which types are more specific instances of base type, such as discrete base type?", "What broader type categories does discrete base type fall within?", "Is every instance of discrete base type required to fulfill the role_of property with at least one discrete datatype?", "Does discrete base type necessarily participate in the role_of relationship with some member of the discrete datatype class?", "Are there any instances of discrete base type that do not have a role_of relation to any discrete datatype?", "What is the logical separation between discrete base type and real base type in the ontology?", "Can a data type be defined as both discrete and real simultaneously?", "Which base types are explicitly declared as disjoint with real base type?"], "Taxiom": "discrete base type disjointWith real base type", "CQ": [{"axiom": "discrete base type subClassOf base type", "CQ": ["Is discrete base type classified under the broader category of base type?", "Which types are more specific instances of base type, such as discrete base type?", "What broader type categories does discrete base type fall within?"]}, {"axiom": "discrete base type disjointWith real base type", "CQ": ["What is the logical separation between discrete base type and real base type in the ontology?", "Can a data type be defined as both discrete and real simultaneously?", "Which base types are explicitly declared as disjoint with real base type?"]}, {"axiom": "discrete base type propertyRestrictions [role_of some discrete datatype]", "CQ": ["Is every instance of discrete base type required to fulfill the role_of property with at least one discrete datatype?", "Does discrete base type necessarily participate in the role_of relationship with some member of the discrete datatype class?", "Are there any instances of discrete base type that do not have a role_of relation to any discrete datatype?"]}]}
{"ontology": "OntoDT", "class": "record of boolean datatype", "axiom": {"subClassOf": ["record (tuple) datatype"], "disjointWith": ["record of real datatype"], "propertyRestrictions": ["[has_member some boolean field-list]"]}, "datatype": "Type1", "TCQ": ["What ontological separation exists between records of boolean datatype and records of discrete datatype?", "Is it allowable for a single record to possess both boolean and discrete datatypes?", "Which other record types are formally incompatible with records of discrete datatype?"], "VCQ": ["Is record of boolean datatype recognized as a specific kind of record (tuple) datatype?", "Which data types fall under the category of record (tuple) datatype, including those that handle booleans?", "What broader data type hierarchies encompass the record of boolean datatype?", "What logical separation is established between records of boolean datatype and records of real datatype within the ontology?", "Is it possible for a record to simultaneously belong to both boolean and real datatypes?", "Which record types are declared as disjoint with those of real datatype?", "Is it required that a record includes at least one value for the field 'has_member' and that this value is of boolean type?", "Must every record assign the 'has_member' property exclusively to fields of type boolean?", "Can a record instance exist without providing a boolean value for the 'has_member' property?", "What ontological separation exists between records of boolean datatype and records of discrete datatype?", "Is it allowable for a single record to possess both boolean and discrete datatypes?", "Which other record types are formally incompatible with records of discrete datatype?"], "Taxiom": "record of boolean datatype disjointWith record of discrete datatype", "CQ": [{"axiom": "record of boolean datatype subClassOf record (tuple) datatype", "CQ": ["Is record of boolean datatype recognized as a specific kind of record (tuple) datatype?", "Which data types fall under the category of record (tuple) datatype, including those that handle booleans?", "What broader data type hierarchies encompass the record of boolean datatype?"]}, {"axiom": "record of boolean datatype disjointWith record of real datatype", "CQ": ["What logical separation is established between records of boolean datatype and records of real datatype within the ontology?", "Is it possible for a record to simultaneously belong to both boolean and real datatypes?", "Which record types are declared as disjoint with those of real datatype?"]}, {"axiom": "record of boolean datatype disjointWith record of discrete datatype", "CQ": ["What ontological separation exists between records of boolean datatype and records of discrete datatype?", "Is it allowable for a single record to possess both boolean and discrete datatypes?", "Which other record types are formally incompatible with records of discrete datatype?"]}, {"axiom": "record of boolean datatype propertyRestrictions [has_member some boolean field-list]", "CQ": ["Is it required that a record includes at least one value for the field 'has_member' and that this value is of boolean type?", "Must every record assign the 'has_member' property exclusively to fields of type boolean?", "Can a record instance exist without providing a boolean value for the 'has_member' property?"]}]}
{"ontology": "OntoDT", "class": "record of discrete datatype", "axiom": {"subClassOf": ["record (tuple) datatype"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Must every record of discrete datatype necessarily have at least one has_member relationship to an entity within discrete field-list?", "Is it obligatory for a record of discrete datatype to include a member from the discrete field-list through the has_member property?", "Can a record of discrete datatype exist without the has_member property linking it to some element of the discrete field-list?"], "VCQ": ["Is record of discrete datatype a member of the broader class of record (tuple) datatype?", "What are the more specialized datatypes found within the category record (tuple) datatype, including record of discrete datatype?", "Which higher-level datatype groups does record of discrete datatype fall under?", "Must every record of discrete datatype necessarily have at least one has_member relationship to an entity within discrete field-list?", "Is it obligatory for a record of discrete datatype to include a member from the discrete field-list through the has_member property?", "Can a record of discrete datatype exist without the has_member property linking it to some element of the discrete field-list?"], "Taxiom": "record of discrete datatype propertyRestrictions [has_member some discrete field-list]", "CQ": [{"axiom": "record of discrete datatype subClassOf record (tuple) datatype", "CQ": ["Is record of discrete datatype a member of the broader class of record (tuple) datatype?", "What are the more specialized datatypes found within the category record (tuple) datatype, including record of discrete datatype?", "Which higher-level datatype groups does record of discrete datatype fall under?"]}, {"axiom": "record of discrete datatype propertyRestrictions [has_member some discrete field-list]", "CQ": ["Must every record of discrete datatype necessarily have at least one has_member relationship to an entity within discrete field-list?", "Is it obligatory for a record of discrete datatype to include a member from the discrete field-list through the has_member property?", "Can a record of discrete datatype exist without the has_member property linking it to some element of the discrete field-list?"]}]}
{"ontology": "OntoDT", "class": "set of discrete datatype", "axiom": {"subClassOf": ["set datatype"], "disjointWith": [], "propertyRestrictions": ["[has_member some discrete base type]"]}, "datatype": "Type1", "TCQ": ["What logical separation does the ontology specify between sets of discrete and sets of real datatypes?", "Is any datatype set classified simultaneously as both discrete and real within the ontology?", "Which other sets of datatypes are explicitly defined as disjoint with sets of real datatypes?"], "VCQ": ["Is every set of discrete datatype also categorized as a set datatype?", "Which types are direct specializations under set datatype, such as set of discrete datatype?", "To which general datatype categories does set of discrete datatype belong?", "Must every instance in the set have at least one member of the specified discrete base type through the property 'has_member'?", "Is it required that all elements related by 'has_member' belong to the discrete base type defined for the set?", "Can any element in the set have a 'has_member' relationship to a value outside the defined discrete base type?", "What logical separation does the ontology specify between sets of discrete and sets of real datatypes?", "Is any datatype set classified simultaneously as both discrete and real within the ontology?", "Which other sets of datatypes are explicitly defined as disjoint with sets of real datatypes?"], "Taxiom": "set of discrete datatype disjointWith set of real datatype", "CQ": [{"axiom": "set of discrete datatype subClassOf set datatype", "CQ": ["Is every set of discrete datatype also categorized as a set datatype?", "Which types are direct specializations under set datatype, such as set of discrete datatype?", "To which general datatype categories does set of discrete datatype belong?"]}, {"axiom": "set of discrete datatype disjointWith set of real datatype", "CQ": ["What logical separation does the ontology specify between sets of discrete and sets of real datatypes?", "Is any datatype set classified simultaneously as both discrete and real within the ontology?", "Which other sets of datatypes are explicitly defined as disjoint with sets of real datatypes?"]}, {"axiom": "set of discrete datatype propertyRestrictions [has_member some discrete base type]", "CQ": ["Must every instance in the set have at least one member of the specified discrete base type through the property 'has_member'?", "Is it required that all elements related by 'has_member' belong to the discrete base type defined for the set?", "Can any element in the set have a 'has_member' relationship to a value outside the defined discrete base type?"]}]}
{"ontology": "OntoDT", "class": "aggregate datatype", "axiom": {"subClassOf": ["generated datatype"], "disjointWith": [], "propertyRestrictions": ["[has_member some aggregate generator]"]}, "datatype": "Type1", "TCQ": ["How does the ontology differentiate between aggregate datatypes and non-aggregate datatypes?", "Is there any datatype that belongs to both aggregate and non-aggregate categories?", "Which datatype categories are formally recognized as distinct from aggregate datatypes?"], "VCQ": ["Is aggregate datatype classified as a more specific type under generated datatype?", "Which datatypes are narrower than generated datatype, such as aggregate datatype?", "To what broader datatype category does aggregate datatype belong?", "Is it required for an aggregate to have at least one member that is an aggregate generator?", "Does every aggregate necessarily include some entity related by 'has_member' to the class aggregate generator?", "Can an aggregate exist without having a 'has_member' relationship to any aggregate generator?", "How does the ontology differentiate between aggregate datatypes and non-aggregate datatypes?", "Is there any datatype that belongs to both aggregate and non-aggregate categories?", "Which datatype categories are formally recognized as distinct from aggregate datatypes?"], "Taxiom": "aggregate datatype disjointWith non-aggregate datatype", "CQ": [{"axiom": "aggregate datatype subClassOf generated datatype", "CQ": ["Is aggregate datatype classified as a more specific type under generated datatype?", "Which datatypes are narrower than generated datatype, such as aggregate datatype?", "To what broader datatype category does aggregate datatype belong?"]}, {"axiom": "aggregate datatype disjointWith non-aggregate datatype", "CQ": ["How does the ontology differentiate between aggregate datatypes and non-aggregate datatypes?", "Is there any datatype that belongs to both aggregate and non-aggregate categories?", "Which datatype categories are formally recognized as distinct from aggregate datatypes?"]}, {"axiom": "aggregate datatype propertyRestrictions [has_member some aggregate generator]", "CQ": ["Is it required for an aggregate to have at least one member that is an aggregate generator?", "Does every aggregate necessarily include some entity related by 'has_member' to the class aggregate generator?", "Can an aggregate exist without having a 'has_member' relationship to any aggregate generator?"]}]}
{"ontology": "OntoDT", "class": "date and time datatype", "axiom": {"subClassOf": ["non-numeric ordered primitive datatype"], "disjointWith": [], "propertyRestrictions": ["[has_operation some Extend:time&date]", "[has_operation some Equal:time&date]", "[has_operation some InOrder:time&date]", "[has_member some date-time unit]", "[has_operation some Difference:time&date]", "[has_quality some unbounded]", "[has_member some date-time radix]", "[has_quality some exact]", "[has_operation some Round:time&date]", "[has_member some date-time factor]"]}, "datatype": "Type1", "TCQ": ["How does the ontology differentiate between date and time datatypes and ordinal datatypes?", "Is any datatype instance allowed to be classified as both date and time and ordinal at once?", "Which datatypes are specified as mutually exclusive with ordinal datatype?"], "VCQ": ["Is date and time datatype classified under non-numeric ordered primitive datatypes?", "What primitive datatypes are more specific subclasses of non-numeric ordered ordered primitive datatype, such as date and time datatype?", "Which broader non-numeric datatype categories include date and time datatype as a subclass?", "Is it required that a date and time entity must have an operation associated with some instances of Extend:time&date?", "Can every date and time entity possess at least one 'has_operation' relationship linked to Extend:time&date?", "Are there any restrictions on a date and time entity having the 'has_operation' property only with values from Extend:time&date?", "Must every instance with a date and time property have at least one operation equal to a time and date?", "Does an individual with a date and time attribute always require the presence of an operation defined as Equal:time&date?", "Is it necessary for any entity possessing the date and time datatype property to engage in some operation characterized by equality with time and date?", "Is it mandatory for any instance with a date and time to participate in at least one 'has_operation' relationship with an individual of type InOrder:time&date?", "Can an entity described by date and time exist without having a 'has_operation' link to InOrder:time&date?", "Does the ontology require that every instance with a 'date and time' attribute be related through 'has_operation' to at least one instance of InOrder:time&date?", "Is it required that every instance with the date and time datatype property includes at least one member representing a date-time unit?", "Does the presence of the 'has_member' relationship with a date-time unit establish the existence of the date and time datatype property in an entity?", "Must any entity described by the date and time datatype property have at least one associated date-time unit as a member?", "Is it required that an entity with a date and time has at least one 'has_operation' relationship with an instance of Difference:time&date?", "Can a date and time entity exist without any 'has_operation' linking it to the concept of Difference:time&date?", "Must every date and time entity perform at least one operation classified under Difference:time&date?", "Is it required that every instance with a date and time datatype property has at least one 'has_quality' relationship to something unbounded?", "Are all values of the 'has_quality' property for date and time datatype objects necessarily unbounded?", "Does the existence of a 'has_quality' relation to an unbounded entity define or constrain the usage of date and time datatype properties?", "Is it required that has_member property of a date and time datatype always relates to at least one date-time radix?", "Does every date and time datatype necessarily include a member that is a date-time radix?", "Can a date and time datatype exist without being linked via has_member to any date-time radix?", "Is every instance of the date and time datatype required to have the 'has_quality' property with at least one value of type 'exact'?", "Does the model allow a date and time value to exist without associating any 'exact' quality via the 'has_quality' property?", "Are there instances where the 'has_quality' property for date and time datatype can refer to a quality other than 'exact'?", "Is it required that an entity with a time and date restriction has at least one 'has_operation' property related to a Round instance with specified time and date?", "Can an entity with this property restriction have an operation that is not associated with a Round instance defined by time and date?", "Does the presence of the 'has_operation' property for an entity imply the existence of a Round event with corresponding time and date values?", "Must every instance related via 'has_member' possess a date-time factor?", "Does the presence of a date-time factor suffice for membership via 'has_member'?", "Is it necessary for members linked by 'has_member' to have at least one date-time factor associated with them?", "How does the ontology differentiate between date and time datatypes and ordinal datatypes?", "Is any datatype instance allowed to be classified as both date and time and ordinal at once?", "Which datatypes are specified as mutually exclusive with ordinal datatype?"], "Taxiom": "date and time datatype disjointWith ordinal datatype", "CQ": [{"axiom": "date and time datatype subClassOf non-numeric ordered primitive datatype", "CQ": ["Is date and time datatype classified under non-numeric ordered primitive datatypes?", "What primitive datatypes are more specific subclasses of non-numeric ordered ordered primitive datatype, such as date and time datatype?", "Which broader non-numeric datatype categories include date and time datatype as a subclass?"]}, {"axiom": "date and time datatype disjointWith ordinal datatype", "CQ": ["How does the ontology differentiate between date and time datatypes and ordinal datatypes?", "Is any datatype instance allowed to be classified as both date and time and ordinal at once?", "Which datatypes are specified as mutually exclusive with ordinal datatype?"]}, {"axiom": "date and time datatype propertyRestrictions [has_operation some Extend:time&date]", "CQ": ["Is it required that a date and time entity must have an operation associated with some instances of Extend:time&date?", "Can every date and time entity possess at least one 'has_operation' relationship linked to Extend:time&date?", "Are there any restrictions on a date and time entity having the 'has_operation' property only with values from Extend:time&date?"]}, {"axiom": "date and time datatype propertyRestrictions [has_operation some Equal:time&date]", "CQ": ["Must every instance with a date and time property have at least one operation equal to a time and date?", "Does an individual with a date and time attribute always require the presence of an operation defined as Equal:time&date?", "Is it necessary for any entity possessing the date and time datatype property to engage in some operation characterized by equality with time and date?"]}, {"axiom": "date and time datatype propertyRestrictions [has_operation some InOrder:time&date]", "CQ": ["Is it mandatory for any instance with a date and time to participate in at least one 'has_operation' relationship with an individual of type InOrder:time&date?", "Can an entity described by date and time exist without having a 'has_operation' link to InOrder:time&date?", "Does the ontology require that every instance with a 'date and time' attribute be related through 'has_operation' to at least one instance of InOrder:time&date?"]}, {"axiom": "date and time datatype propertyRestrictions [has_member some date-time unit]", "CQ": ["Is it required that every instance with the date and time datatype property includes at least one member representing a date-time unit?", "Does the presence of the 'has_member' relationship with a date-time unit establish the existence of the date and time datatype property in an entity?", "Must any entity described by the date and time datatype property have at least one associated date-time unit as a member?"]}, {"axiom": "date and time datatype propertyRestrictions [has_operation some Difference:time&date]", "CQ": ["Is it required that an entity with a date and time has at least one 'has_operation' relationship with an instance of Difference:time&date?", "Can a date and time entity exist without any 'has_operation' linking it to the concept of Difference:time&date?", "Must every date and time entity perform at least one operation classified under Difference:time&date?"]}, {"axiom": "date and time datatype propertyRestrictions [has_quality some unbounded]", "CQ": ["Is it required that every instance with a date and time datatype property has at least one 'has_quality' relationship to something unbounded?", "Are all values of the 'has_quality' property for date and time datatype objects necessarily unbounded?", "Does the existence of a 'has_quality' relation to an unbounded entity define or constrain the usage of date and time datatype properties?"]}, {"axiom": "date and time datatype propertyRestrictions [has_member some date-time radix]", "CQ": ["Is it required that has_member property of a date and time datatype always relates to at least one date-time radix?", "Does every date and time datatype necessarily include a member that is a date-time radix?", "Can a date and time datatype exist without being linked via has_member to any date-time radix?"]}, {"axiom": "date and time datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is every instance of the date and time datatype required to have the 'has_quality' property with at least one value of type 'exact'?", "Does the model allow a date and time value to exist without associating any 'exact' quality via the 'has_quality' property?", "Are there instances where the 'has_quality' property for date and time datatype can refer to a quality other than 'exact'?"]}, {"axiom": "date and time datatype propertyRestrictions [has_operation some Round:time&date]", "CQ": ["Is it required that an entity with a time and date restriction has at least one 'has_operation' property related to a Round instance with specified time and date?", "Can an entity with this property restriction have an operation that is not associated with a Round instance defined by time and date?", "Does the presence of the 'has_operation' property for an entity imply the existence of a Round event with corresponding time and date values?"]}, {"axiom": "date and time datatype propertyRestrictions [has_member some date-time factor]", "CQ": ["Must every instance related via 'has_member' possess a date-time factor?", "Does the presence of a date-time factor suffice for membership via 'has_member'?", "Is it necessary for members linked by 'has_member' to have at least one date-time factor associated with them?"]}]}
{"ontology": "OntoDT", "class": "size", "axiom": {"subClassOf": ["value expression"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Does an entity with the 'size' property have exactly one value of type integer?", "Is it required that the 'size' attribute for each instance contains only a single integer value?", "Can an instance be described as having more than one integer value for the 'size' property?"], "VCQ": ["Is size categorized under value expression?", "What broader category encompasses size in this ontology?", "Which more specific concepts are grouped as subtypes of value expression, such as size?", "Does an entity with the 'size' property have exactly one value of type integer?", "Is it required that the 'size' attribute for each instance contains only a single integer value?", "Can an instance be described as having more than one integer value for the 'size' property?"], "Taxiom": "size propertyRestrictions [has-value exactly 1 xsd:integer]", "CQ": [{"axiom": "size subClassOf value expression", "CQ": ["Is size categorized under value expression?", "What broader category encompasses size in this ontology?", "Which more specific concepts are grouped as subtypes of value expression, such as size?"]}, {"axiom": "size propertyRestrictions [has-value exactly 1 xsd:integer]", "CQ": ["Does an entity with the 'size' property have exactly one value of type integer?", "Is it required that the 'size' attribute for each instance contains only a single integer value?", "Can an instance be described as having more than one integer value for the 'size' property?"]}]}
{"ontology": "OntoDT", "class": "complex datatype", "axiom": {"subClassOf": ["numeric primitive datatype"], "disjointWith": [], "propertyRestrictions": ["[has_operation some Reciprocal:complex]", "[has_operation some Negate:complex]", "[has_quality some non-ordered]", "[has_member some complex radix]", "[has_quality some numeric]", "[has_operation some SquareRoot:complex]", "[has_operation some Multiply:complex]", "[has_operation some Add:complex]", "[has_quality some approximate]", "[has_operation some Promote:complex]", "[has_member some complex factor]", "[has_operation some Equal:complex]"]}, "datatype": "Type1", "TCQ": ["What entities are prevented from being both complex datatype and numeric ordered primitive datatype within the ontology?", "Is there any overlap permitted between instances of complex datatype and numeric ordered primitive datatype?", "Which datatype categories are expressly defined as disjoint with numeric ordered primitive datatype?"], "VCQ": ["Can a complex datatype be classified under numeric primitive datatypes?", "Which datatypes fall under the broader class of numeric primitive datatypes, specifically including complex datatype?", "What are the parent classes associated with complex datatype?", "Does every instance of complex datatype propertyRestrictions require at least one 'has_operation' relationship to a Reciprocal instance?", "Is it possible for complex datatype propertyRestrictions to have the 'has_operation' property only if the value is of type Reciprocal?", "Must complex datatype propertyRestrictions always involve an operation that is classified as Reciprocal?", "Must every entity with the property 'has_operation' necessarily involve a Negate operation?", "Can an entity exist without having the 'has_operation' property to a Negate operation?", "Are all instances with the 'has_operation' property required to perform at least one Negate operation?", "Is it required that every instance with a 'has_quality' relation possesses at least one 'non-ordered' quality?", "Must all entities associated via 'has_quality' necessarily exhibit the characteristic of being non-ordered?", "Can an entity without any 'non-ordered' quality be linked by the 'has_quality' property?", "Is it required that an entity with the complex property restriction has at least one member that is a complex radix?", "Can an instance with the property 'has_member' be associated with objects that are not of type complex radix?", "Does the existence of a complex member with the radix property guarantee satisfaction of the complex datatype property restriction?", "Is it required that entities with complex datatype propertyRestrictions have at least one 'has_quality' property with a numeric value?", "Can an instance of complex datatype propertyRestrictions lack the 'has_quality' property with a numeric datatype?", "Are all qualities associated through 'has_quality' for complex datatype propertyRestrictions necessarily numeric?", "Is it required that complex entities possess at least one operation corresponding to the square root function?", "Can a complex entity exist without having the has_operation property with a SquareRoot function?", "Are all instances defined by the necessity that some operation must be a SquareRoot on complexes?", "Is every instance of complex datatype propertyRestrictions required to have at least one has_operation relationship with Multiply:complex?", "Does complex datatype propertyRestrictions necessitate the existence of a Multiply:complex operation among its operations?", "Must an entity classified as complex datatype propertyRestrictions possess a has_operation link to a Multiply:complex instance?", "Is it required that an entity with complex datatype propertyRestrictions must have at least one has_operation relation to an instance of Add:complex?", "Can complex datatype propertyRestrictions exist without the presence of the has_operation property linking to Add:complex?", "Does the presence of the has_operation property with Add:complex suffice to classify something under complex datatype propertyRestrictions?", "Is every complex entity required to have at least one quality that is approximate?", "Does the existence of a complex entity entail the presence of some approximate quality?", "Can a complex entity exist without being associated with an approximate quality?", "Is it necessary for an entity to have at least one 'has_operation' relationship with a Promote:complex for it to satisfy the axiom?", "Can an entity exist without participating in any 'has_operation' involving a Promote:complex?", "Does the axiom require that every instance related via 'has_operation' must be of type Promote:complex?", "Is it necessary for complex to have at least one has_member relationship with an instance of complex factor?", "Can a complex exist without being associated via has_member to a complex factor?", "Does every instance of complex require the presence of a has_member link to some complex factor?", "Does every instance satisfying the class necessarily have at least one 'has_operation' relation involving an operation of type Equal:complex?", "Is it possible for any instance of the class to lack a 'has_operation' to an Equal:complex operation?", "Are all members of this class required to participate in at least one 'has_operation' relation with an operand of Equal:complex type?", "What entities are prevented from being both complex datatype and numeric ordered primitive datatype within the ontology?", "Is there any overlap permitted between instances of complex datatype and numeric ordered primitive datatype?", "Which datatype categories are expressly defined as disjoint with numeric ordered primitive datatype?"], "Taxiom": "complex datatype disjointWith numeric ordered primitive datatype", "CQ": [{"axiom": "complex datatype subClassOf numeric primitive datatype", "CQ": ["Can a complex datatype be classified under numeric primitive datatypes?", "Which datatypes fall under the broader class of numeric primitive datatypes, specifically including complex datatype?", "What are the parent classes associated with complex datatype?"]}, {"axiom": "complex datatype disjointWith numeric ordered primitive datatype", "CQ": ["What entities are prevented from being both complex datatype and numeric ordered primitive datatype within the ontology?", "Is there any overlap permitted between instances of complex datatype and numeric ordered primitive datatype?", "Which datatype categories are expressly defined as disjoint with numeric ordered primitive datatype?"]}, {"axiom": "complex datatype propertyRestrictions [has_operation some Reciprocal:complex]", "CQ": ["Does every instance of complex datatype propertyRestrictions require at least one 'has_operation' relationship to a Reciprocal instance?", "Is it possible for complex datatype propertyRestrictions to have the 'has_operation' property only if the value is of type Reciprocal?", "Must complex datatype propertyRestrictions always involve an operation that is classified as Reciprocal?"]}, {"axiom": "complex datatype propertyRestrictions [has_operation some Negate:complex]", "CQ": ["Must every entity with the property 'has_operation' necessarily involve a Negate operation?", "Can an entity exist without having the 'has_operation' property to a Negate operation?", "Are all instances with the 'has_operation' property required to perform at least one Negate operation?"]}, {"axiom": "complex datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is it required that every instance with a 'has_quality' relation possesses at least one 'non-ordered' quality?", "Must all entities associated via 'has_quality' necessarily exhibit the characteristic of being non-ordered?", "Can an entity without any 'non-ordered' quality be linked by the 'has_quality' property?"]}, {"axiom": "complex datatype propertyRestrictions [has_member some complex radix]", "CQ": ["Is it required that an entity with the complex property restriction has at least one member that is a complex radix?", "Can an instance with the property 'has_member' be associated with objects that are not of type complex radix?", "Does the existence of a complex member with the radix property guarantee satisfaction of the complex datatype property restriction?"]}, {"axiom": "complex datatype propertyRestrictions [has_quality some numeric]", "CQ": ["Is it required that entities with complex datatype propertyRestrictions have at least one 'has_quality' property with a numeric value?", "Can an instance of complex datatype propertyRestrictions lack the 'has_quality' property with a numeric datatype?", "Are all qualities associated through 'has_quality' for complex datatype propertyRestrictions necessarily numeric?"]}, {"axiom": "complex datatype propertyRestrictions [has_operation some SquareRoot:complex]", "CQ": ["Is it required that complex entities possess at least one operation corresponding to the square root function?", "Can a complex entity exist without having the has_operation property with a SquareRoot function?", "Are all instances defined by the necessity that some operation must be a SquareRoot on complexes?"]}, {"axiom": "complex datatype propertyRestrictions [has_operation some Multiply:complex]", "CQ": ["Is every instance of complex datatype propertyRestrictions required to have at least one has_operation relationship with Multiply:complex?", "Does complex datatype propertyRestrictions necessitate the existence of a Multiply:complex operation among its operations?", "Must an entity classified as complex datatype propertyRestrictions possess a has_operation link to a Multiply:complex instance?"]}, {"axiom": "complex datatype propertyRestrictions [has_operation some Add:complex]", "CQ": ["Is it required that an entity with complex datatype propertyRestrictions must have at least one has_operation relation to an instance of Add:complex?", "Can complex datatype propertyRestrictions exist without the presence of the has_operation property linking to Add:complex?", "Does the presence of the has_operation property with Add:complex suffice to classify something under complex datatype propertyRestrictions?"]}, {"axiom": "complex datatype propertyRestrictions [has_quality some approximate]", "CQ": ["Is every complex entity required to have at least one quality that is approximate?", "Does the existence of a complex entity entail the presence of some approximate quality?", "Can a complex entity exist without being associated with an approximate quality?"]}, {"axiom": "complex datatype propertyRestrictions [has_operation some Promote:complex]", "CQ": ["Is it necessary for an entity to have at least one 'has_operation' relationship with a Promote:complex for it to satisfy the axiom?", "Can an entity exist without participating in any 'has_operation' involving a Promote:complex?", "Does the axiom require that every instance related via 'has_operation' must be of type Promote:complex?"]}, {"axiom": "complex datatype propertyRestrictions [has_member some complex factor]", "CQ": ["Is it necessary for complex to have at least one has_member relationship with an instance of complex factor?", "Can a complex exist without being associated via has_member to a complex factor?", "Does every instance of complex require the presence of a has_member link to some complex factor?"]}, {"axiom": "complex datatype propertyRestrictions [has_operation some Equal:complex]", "CQ": ["Does every instance satisfying the class necessarily have at least one 'has_operation' relation involving an operation of type Equal:complex?", "Is it possible for any instance of the class to lack a 'has_operation' to an Equal:complex operation?", "Are all members of this class required to participate in at least one 'has_operation' relation with an operand of Equal:complex type?"]}]}
{"ontology": "OntoDT", "class": "sequence of real datatype", "axiom": {"subClassOf": [], "propertyRestrictions": ["[has_member some real base type]"]}, "datatype": "Type1", "TCQ": ["Is sequence of real datatype a specialization of sequence datatype?", "Which datatypes fall under the general class of sequence datatype, including sequence of real datatype?", "What broader datatype categories encompass sequence of real datatype?"], "VCQ": ["Is every instance of 'sequence of real' required to have at least one 'has_member' value of real base type?", "Can a 'sequence of real' exist without being related through 'has_member' to any real base type element?", "Does the property 'has_member' necessarily associate every 'sequence of real' with instances belonging to the real base type?", "Is sequence of real datatype a specialization of sequence datatype?", "Which datatypes fall under the general class of sequence datatype, including sequence of real datatype?", "What broader datatype categories encompass sequence of real datatype?"], "Taxiom": "sequence of real datatype subClassOf sequence datatype", "CQ": [{"axiom": "sequence of real datatype subClassOf sequence datatype", "CQ": ["Is sequence of real datatype a specialization of sequence datatype?", "Which datatypes fall under the general class of sequence datatype, including sequence of real datatype?", "What broader datatype categories encompass sequence of real datatype?"]}, {"axiom": "sequence of real datatype propertyRestrictions [has_member some real base type]", "CQ": ["Is every instance of 'sequence of real' required to have at least one 'has_member' value of real base type?", "Can a 'sequence of real' exist without being related through 'has_member' to any real base type element?", "Does the property 'has_member' necessarily associate every 'sequence of real' with instances belonging to the real base type?"]}]}
{"ontology": "OntoDT", "class": "bag datatype", "axiom": {"subClassOf": ["homogenous  unordered aggregate datatype with variable size"], "disjointWith": [], "propertyRestrictions": ["[has_quality some non-ordered]", "[has_operation some Select:bag]", "[has_operation some Insert:bag]", "[has_member some base type]", "[has_operation some Delete:bag]", "[has_operation some IsEmpty:bag]", "[has_operation some Equal:bag]", "[has_member some bag generator]", "[has_quality some non-numeric]", "[has_operation some Serialize:bag]", "[has_quality some exact]"]}, "datatype": "Type1", "TCQ": ["How does the ontology formally distinguish between bag datatype and set datatype?", "Is it allowed for a datatype to be classified as both a bag and a set within the ontology?", "What other datatypes, besides set datatype, are declared as mutually exclusive with bag datatype?"], "VCQ": ["Is bag datatype an example of homogenous unordered aggregate datatype with variable size?", "What are the specific types classified under homogenous unordered aggregate datatype with variable size?", "Which higher-level datatype categories include bag datatype?", "Is every bag required to have the quality of being non-ordered?", "Can a bag exist without possessing the non-ordered quality?", "Does classification as a bag necessarily entail having at least one non-ordered quality?", "Is it required that every bag instance must perform at least one 'Select:bag' operation?", "Can any bag have an operation other than 'Select:bag', or is 'Select:bag' the only necessary operation for bags?", "Does the existence of the 'has_operation' property for a bag necessarily imply the presence of a 'Select:bag' operation?", "Is it required for every bag to have at least one operation of type Insert?", "Can a bag exist without being associated with an Insert operation via the has_operation property?", "Are all instances of bag linked through has_operation to at least one Insert process?", "Is it required that a bag contains at least one member of the base type?", "Can a bag exist without having any members of the specified base type?", "Does every instance of a bag have the has_member property linking to an individual of the base type?", "Is it required for a bag to support at least one 'has_operation' relation to Delete:bag?", "Must every bag possess a 'has_operation' link with some instance of Delete:bag?", "Does the existence of a bag imply involvement in a 'has_operation' connection to a Delete:bag instance?", "Must every instance of 'bag' have at least one 'has_operation' relationship to 'IsEmpty:bag'?", "Does the presence of 'has_operation' relating to 'IsEmpty:bag' define all bags?", "Is it necessary for a 'bag' to perform the 'IsEmpty:bag' operation?", "Does every bag require at least one operation characterized as Equal?", "Is it necessary for a bag to always have an operation involving Equal?", "Can a bag exist without having any operation of the type Equal?", "Does every bag necessarily have at least one member associated with a bag generator?", "Is it required for a bag to possess a member that is related to a bag generator through the has_member property?", "Can a bag exist without having any connection via has_member to a bag generator?", "Is every bag required to have at least one value for the has_quality property that is non-numeric?", "Must a bag possess a non-numeric quality according to its has_quality property?", "Does the ontology assert that there exists a non-numeric instance for the has_quality property of a bag?", "Is it required that a bag entity must support at least one operation of type Serialize specific to bag?", "Does every bag possess an operational capability solely related to serialization as defined by Serialize:bag?", "Can a bag exist within the ontology without having the has_operation property linked to Serialize:bag?", "Is it required that every bag has at least one quality specified as exact?", "Can a bag possess the quality 'exact' as defined by the property restriction?", "Does the ontology constrain bags such that they must be associated with the quality 'exact' through the has_quality property?", "How does the ontology formally distinguish between bag datatype and set datatype?", "Is it allowed for a datatype to be classified as both a bag and a set within the ontology?", "What other datatypes, besides set datatype, are declared as mutually exclusive with bag datatype?"], "Taxiom": "bag datatype disjointWith set datatype", "CQ": [{"axiom": "bag datatype subClassOf homogenous  unordered aggregate datatype with variable size", "CQ": ["Is bag datatype an example of homogenous unordered aggregate datatype with variable size?", "What are the specific types classified under homogenous unordered aggregate datatype with variable size?", "Which higher-level datatype categories include bag datatype?"]}, {"axiom": "bag datatype disjointWith set datatype", "CQ": ["How does the ontology formally distinguish between bag datatype and set datatype?", "Is it allowed for a datatype to be classified as both a bag and a set within the ontology?", "What other datatypes, besides set datatype, are declared as mutually exclusive with bag datatype?"]}, {"axiom": "bag datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is every bag required to have the quality of being non-ordered?", "Can a bag exist without possessing the non-ordered quality?", "Does classification as a bag necessarily entail having at least one non-ordered quality?"]}, {"axiom": "bag datatype propertyRestrictions [has_operation some Select:bag]", "CQ": ["Is it required that every bag instance must perform at least one 'Select:bag' operation?", "Can any bag have an operation other than 'Select:bag', or is 'Select:bag' the only necessary operation for bags?", "Does the existence of the 'has_operation' property for a bag necessarily imply the presence of a 'Select:bag' operation?"]}, {"axiom": "bag datatype propertyRestrictions [has_operation some Insert:bag]", "CQ": ["Is it required for every bag to have at least one operation of type Insert?", "Can a bag exist without being associated with an Insert operation via the has_operation property?", "Are all instances of bag linked through has_operation to at least one Insert process?"]}, {"axiom": "bag datatype propertyRestrictions [has_member some base type]", "CQ": ["Is it required that a bag contains at least one member of the base type?", "Can a bag exist without having any members of the specified base type?", "Does every instance of a bag have the has_member property linking to an individual of the base type?"]}, {"axiom": "bag datatype propertyRestrictions [has_operation some Delete:bag]", "CQ": ["Is it required for a bag to support at least one 'has_operation' relation to Delete:bag?", "Must every bag possess a 'has_operation' link with some instance of Delete:bag?", "Does the existence of a bag imply involvement in a 'has_operation' connection to a Delete:bag instance?"]}, {"axiom": "bag datatype propertyRestrictions [has_operation some IsEmpty:bag]", "CQ": ["Must every instance of 'bag' have at least one 'has_operation' relationship to 'IsEmpty:bag'?", "Does the presence of 'has_operation' relating to 'IsEmpty:bag' define all bags?", "Is it necessary for a 'bag' to perform the 'IsEmpty:bag' operation?"]}, {"axiom": "bag datatype propertyRestrictions [has_operation some Equal:bag]", "CQ": ["Does every bag require at least one operation characterized as Equal?", "Is it necessary for a bag to always have an operation involving Equal?", "Can a bag exist without having any operation of the type Equal?"]}, {"axiom": "bag datatype propertyRestrictions [has_member some bag generator]", "CQ": ["Does every bag necessarily have at least one member associated with a bag generator?", "Is it required for a bag to possess a member that is related to a bag generator through the has_member property?", "Can a bag exist without having any connection via has_member to a bag generator?"]}, {"axiom": "bag datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Is every bag required to have at least one value for the has_quality property that is non-numeric?", "Must a bag possess a non-numeric quality according to its has_quality property?", "Does the ontology assert that there exists a non-numeric instance for the has_quality property of a bag?"]}, {"axiom": "bag datatype propertyRestrictions [has_operation some Serialize:bag]", "CQ": ["Is it required that a bag entity must support at least one operation of type Serialize specific to bag?", "Does every bag possess an operational capability solely related to serialization as defined by Serialize:bag?", "Can a bag exist within the ontology without having the has_operation property linked to Serialize:bag?"]}, {"axiom": "bag datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it required that every bag has at least one quality specified as exact?", "Can a bag possess the quality 'exact' as defined by the property restriction?", "Does the ontology constrain bags such that they must be associated with the quality 'exact' through the has_quality property?"]}]}
{"ontology": "OntoDT", "class": "node component", "axiom": {"subClassOf": ["graph aggregate component"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["What is the formal distinction between node component and edge component within the ontology?", "Is there any entity that can simultaneously be classified as both node component and edge component?", "Which other classes are specified as disjoint with edge component?"], "VCQ": ["Is node component an instance of the broader class of graph aggregate component?", "Which components are classified as specializations of graph aggregate component, including node component?", "What higher-level categories encompass node component in the ontology?", "What is the formal distinction between node component and edge component within the ontology?", "Is there any entity that can simultaneously be classified as both node component and edge component?", "Which other classes are specified as disjoint with edge component?"], "Taxiom": "node component disjointWith edge component", "CQ": [{"axiom": "node component subClassOf graph aggregate component", "CQ": ["Is node component an instance of the broader class of graph aggregate component?", "Which components are classified as specializations of graph aggregate component, including node component?", "What higher-level categories encompass node component in the ontology?"]}, {"axiom": "node component disjointWith edge component", "CQ": ["What is the formal distinction between node component and edge component within the ontology?", "Is there any entity that can simultaneously be classified as both node component and edge component?", "Which other classes are specified as disjoint with edge component?"]}]}
{"ontology": "OntoDT", "class": "non-numeric primitive datatype", "axiom": {"subClassOf": ["primitive datatype"], "disjointWith": [], "propertyRestrictions": ["[has_quality some non-numeric]"]}, "datatype": "Type1", "TCQ": ["How are non-numeric primitive datatypes and numeric primitive datatypes differentiated within the ontology?", "Is there any datatype in the ontology that qualifies as both numeric and non-numeric primitive datatype?", "Which datatypes are asserted as disjoint with numeric primitive datatypes?"], "VCQ": ["Is non-numeric primitive datatype categorized under primitive datatype?", "Which types are included as subclasses of primitive datatype, such as non-numeric primitive datatype?", "What are the broader categories that encompass non-numeric primitive datatype?", "Is it necessary for a resource to have at least one 'has_quality' property value of non-numeric type?", "Does the use of the 'has_quality' property guarantee assignment with only non-numeric values?", "Can an entity exist without any non-numeric value for its 'has_quality' property?", "How are non-numeric primitive datatypes and numeric primitive datatypes differentiated within the ontology?", "Is there any datatype in the ontology that qualifies as both numeric and non-numeric primitive datatype?", "Which datatypes are asserted as disjoint with numeric primitive datatypes?"], "Taxiom": "non-numeric primitive datatype disjointWith numeric primitive datatype", "CQ": [{"axiom": "non-numeric primitive datatype subClassOf primitive datatype", "CQ": ["Is non-numeric primitive datatype categorized under primitive datatype?", "Which types are included as subclasses of primitive datatype, such as non-numeric primitive datatype?", "What are the broader categories that encompass non-numeric primitive datatype?"]}, {"axiom": "non-numeric primitive datatype disjointWith numeric primitive datatype", "CQ": ["How are non-numeric primitive datatypes and numeric primitive datatypes differentiated within the ontology?", "Is there any datatype in the ontology that qualifies as both numeric and non-numeric primitive datatype?", "Which datatypes are asserted as disjoint with numeric primitive datatypes?"]}, {"axiom": "non-numeric primitive datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Is it necessary for a resource to have at least one 'has_quality' property value of non-numeric type?", "Does the use of the 'has_quality' property guarantee assignment with only non-numeric values?", "Can an entity exist without any non-numeric value for its 'has_quality' property?"]}]}
{"ontology": "OntoDT", "class": "heterogenous aggregate generator", "axiom": {"subClassOf": [], "equivalentClass": ["(class generator or record generator or table datatype)"], "propertyRestrictions": ["[has_quality some heterogenous]"]}, "datatype": "Type1", "TCQ": ["Is a heterogenous aggregate generator classified as a kind of aggregate generator?", "Which aggregate generator types encompass heterogenous aggregate generators as subclasses?", "What broader generator categories include heterogenous aggregate generator within their hierarchy?"], "VCQ": ["Is every heterogenous aggregate generator necessarily classified as either a class generator, a record generator, or a table datatype?", "Is the class heterogenous aggregate generator logically equivalent to the union of class generator, record generator, and table datatype?", "Does heterogenous aggregate generator include any entities besides those identified as class generator, record generator, or table datatype?", "Must every heterogenous aggregate generator possess at least one quality classified as heterogenous?", "Is it required that a heterogenous aggregate generator exhibits the 'has_quality' relationship with an entity identified as heterogenous?", "Does a heterogenous aggregate generator necessarily have some quality falling within the heterogenous category?", "Is a heterogenous aggregate generator classified as a kind of aggregate generator?", "Which aggregate generator types encompass heterogenous aggregate generators as subclasses?", "What broader generator categories include heterogenous aggregate generator within their hierarchy?"], "Taxiom": "heterogenous aggregate generator subClassOf aggregate generator", "CQ": [{"axiom": "heterogenous aggregate generator subClassOf aggregate generator", "CQ": ["Is a heterogenous aggregate generator classified as a kind of aggregate generator?", "Which aggregate generator types encompass heterogenous aggregate generators as subclasses?", "What broader generator categories include heterogenous aggregate generator within their hierarchy?"]}, {"axiom": "heterogenous aggregate generator equivalentClass (class generator or record generator or table datatype)", "CQ": ["Is every heterogenous aggregate generator necessarily classified as either a class generator, a record generator, or a table datatype?", "Is the class heterogenous aggregate generator logically equivalent to the union of class generator, record generator, and table datatype?", "Does heterogenous aggregate generator include any entities besides those identified as class generator, record generator, or table datatype?"]}, {"axiom": "heterogenous aggregate generator propertyRestrictions [has_quality some heterogenous]", "CQ": ["Must every heterogenous aggregate generator possess at least one quality classified as heterogenous?", "Is it required that a heterogenous aggregate generator exhibits the 'has_quality' relationship with an entity identified as heterogenous?", "Does a heterogenous aggregate generator necessarily have some quality falling within the heterogenous category?"]}]}
{"ontology": "OntoDT", "class": "homogenous aggregate datatype", "axiom": {"subClassOf": ["aggregate datatype"], "disjointWith": [], "propertyRestrictions": ["[has_member some homogenous aggregate generator]"]}, "datatype": "Type1", "TCQ": ["How is the concept of homogenous aggregate datatype differentiated from heterogenous aggregate datatype within the ontology?", "Could any datatype be classified simultaneously as both a homogenous aggregate and a heterogenous aggregate?", "Which datatypes, in addition to heterogenous aggregate datatype, are specified as disjoint with homogenous aggregate datatype?"], "VCQ": ["Is homogenous aggregate datatype categorized under aggregate datatype?", "Which specific types are included as subclasses of aggregate datatype?", "What broader categories encompass homogenous aggregate datatype?", "Is every homogenous aggregate required to have at least one member that is a homogenous aggregate generator?", "Does a homogenous aggregate necessarily possess the property 'has_member' with respect to a homogenous aggregate generator?", "Can a homogenous aggregate exist without any association via 'has_member' to a homogenous aggregate generator?", "How is the concept of homogenous aggregate datatype differentiated from heterogenous aggregate datatype within the ontology?", "Could any datatype be classified simultaneously as both a homogenous aggregate and a heterogenous aggregate?", "Which datatypes, in addition to heterogenous aggregate datatype, are specified as disjoint with homogenous aggregate datatype?"], "Taxiom": "homogenous aggregate datatype disjointWith heterogenous aggregate datatype", "CQ": [{"axiom": "homogenous aggregate datatype subClassOf aggregate datatype", "CQ": ["Is homogenous aggregate datatype categorized under aggregate datatype?", "Which specific types are included as subclasses of aggregate datatype?", "What broader categories encompass homogenous aggregate datatype?"]}, {"axiom": "homogenous aggregate datatype disjointWith heterogenous aggregate datatype", "CQ": ["How is the concept of homogenous aggregate datatype differentiated from heterogenous aggregate datatype within the ontology?", "Could any datatype be classified simultaneously as both a homogenous aggregate and a heterogenous aggregate?", "Which datatypes, in addition to heterogenous aggregate datatype, are specified as disjoint with homogenous aggregate datatype?"]}, {"axiom": "homogenous aggregate datatype propertyRestrictions [has_member some homogenous aggregate generator]", "CQ": ["Is every homogenous aggregate required to have at least one member that is a homogenous aggregate generator?", "Does a homogenous aggregate necessarily possess the property 'has_member' with respect to a homogenous aggregate generator?", "Can a homogenous aggregate exist without any association via 'has_member' to a homogenous aggregate generator?"]}]}
{"ontology": "OntoDT", "class": "indirect acess property", "axiom": {"subClassOf": ["access type"], "equivalentClass": []}, "datatype": "Type1", "TCQ": ["Is an indirect access property necessarily either an access by value, an implementation dependent access, or a position access?", "Is the class of indirect access property equivalent to the union of access by value, implementation dependent access, and position access?", "Are there any types of access that are not covered by access by value, implementation dependent access, or position access when defining indirect access property?"], "VCQ": ["Does indirect acess property fall under the broader classification of access type?", "Which categories are more specific than access type, including indirect acess property?", "What overarching types does indirect acess property belong to?", "Is an indirect access property necessarily either an access by value, an implementation dependent access, or a position access?", "Is the class of indirect access property equivalent to the union of access by value, implementation dependent access, and position access?", "Are there any types of access that are not covered by access by value, implementation dependent access, or position access when defining indirect access property?"], "Taxiom": "indirect acess property equivalentClass (access by value or implementation dependent access or position access)", "CQ": [{"axiom": "indirect acess property subClassOf access type", "CQ": ["Does indirect acess property fall under the broader classification of access type?", "Which categories are more specific than access type, including indirect acess property?", "What overarching types does indirect acess property belong to?"]}, {"axiom": "indirect acess property equivalentClass (access by value or implementation dependent access or position access)", "CQ": ["Is an indirect access property necessarily either an access by value, an implementation dependent access, or a position access?", "Is the class of indirect access property equivalent to the union of access by value, implementation dependent access, and position access?", "Are there any types of access that are not covered by access by value, implementation dependent access, or position access when defining indirect access property?"]}]}
{"ontology": "OntoDT", "class": "unbounded above", "axiom": {"subClassOf": ["unbounded"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["How does the ontology establish separation between unbounded above and unbounded below?", "Is any entity classified as both unbounded above and unbounded below within the ontology?", "Which classes are defined as mutually exclusive with unbounded above?"], "VCQ": ["Does unbounded above fall within the broader class of unbounded?", "Which subclasses are encompassed by the category unbounded, including unbounded above?", "What is the direct superclass of unbounded above?", "How does the ontology establish separation between unbounded above and unbounded below?", "Is any entity classified as both unbounded above and unbounded below within the ontology?", "Which classes are defined as mutually exclusive with unbounded above?"], "Taxiom": "unbounded above disjointWith unbounded below", "CQ": [{"axiom": "unbounded above subClassOf unbounded", "CQ": ["Does unbounded above fall within the broader class of unbounded?", "Which subclasses are encompassed by the category unbounded, including unbounded above?", "What is the direct superclass of unbounded above?"]}, {"axiom": "unbounded above disjointWith unbounded below", "CQ": ["How does the ontology establish separation between unbounded above and unbounded below?", "Is any entity classified as both unbounded above and unbounded below within the ontology?", "Which classes are defined as mutually exclusive with unbounded above?"]}]}
{"ontology": "OntoDT", "class": "approximate", "axiom": {"subClassOf": ["exactness"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["What logical separation is established between approximate and exact in the ontology?", "Is it valid for an entity to be classified as both approximate and exact simultaneously?", "Which classes are explicitly defined as incompatible with exact?"], "VCQ": ["How does approximate relate hierarchically to exactness?", "Which categories are more specific than exactness, such as approximate?", "In which broader classes is approximate included?", "What logical separation is established between approximate and exact in the ontology?", "Is it valid for an entity to be classified as both approximate and exact simultaneously?", "Which classes are explicitly defined as incompatible with exact?"], "Taxiom": "approximate disjointWith exact", "CQ": [{"axiom": "approximate subClassOf exactness", "CQ": ["How does approximate relate hierarchically to exactness?", "Which categories are more specific than exactness, such as approximate?", "In which broader classes is approximate included?"]}, {"axiom": "approximate disjointWith exact", "CQ": ["What logical separation is established between approximate and exact in the ontology?", "Is it valid for an entity to be classified as both approximate and exact simultaneously?", "Which classes are explicitly defined as incompatible with exact?"]}]}
{"ontology": "OntoDT", "class": "ordered", "axiom": {"subClassOf": ["order"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["What formal separation exists between ordered and non-ordered entities within the ontology?", "Is any instance permitted to belong simultaneously to both ordered and non-ordered types?", "Which classes are declared as disjoint with ordered in the ontology?"], "VCQ": ["Is ordered classified as a specific type of order?", "Which subclasses are defined under the class order, including ordered?", "What general classes does ordered inherit from?", "What formal separation exists between ordered and non-ordered entities within the ontology?", "Is any instance permitted to belong simultaneously to both ordered and non-ordered types?", "Which classes are declared as disjoint with ordered in the ontology?"], "Taxiom": "ordered disjointWith non-ordered", "CQ": [{"axiom": "ordered subClassOf order", "CQ": ["Is ordered classified as a specific type of order?", "Which subclasses are defined under the class order, including ordered?", "What general classes does ordered inherit from?"]}, {"axiom": "ordered disjointWith non-ordered", "CQ": ["What formal separation exists between ordered and non-ordered entities within the ontology?", "Is any instance permitted to belong simultaneously to both ordered and non-ordered types?", "Which classes are declared as disjoint with ordered in the ontology?"]}]}
{"ontology": "OntoDT", "class": "Difference:set", "axiom": {"subClassOf": ["difference operation"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["What entities are considered mutually exclusive between Difference:set and Difference:time&date in the ontology?", "Is there any instance that could simultaneously belong to both Difference:set and Difference:time&date?", "Which classes does the ontology specify as being disjoint with Difference:set?"], "VCQ": ["Does the Difference:set concept fall under the broader category of difference operation?", "Which specific types are classified as subclasses of difference operation, and does Difference:set belong among them?", "What general operations encompass Difference:set as a specialized form?", "What entities are considered mutually exclusive between Difference:set and Difference:time&date in the ontology?", "Is there any instance that could simultaneously belong to both Difference:set and Difference:time&date?", "Which classes does the ontology specify as being disjoint with Difference:set?"], "Taxiom": "Difference:set disjointWith Difference:time&date", "CQ": [{"axiom": "Difference:set subClassOf difference operation", "CQ": ["Does the Difference:set concept fall under the broader category of difference operation?", "Which specific types are classified as subclasses of difference operation, and does Difference:set belong among them?", "What general operations encompass Difference:set as a specialized form?"]}, {"axiom": "Difference:set disjointWith Difference:time&date", "CQ": ["What entities are considered mutually exclusive between Difference:set and Difference:time&date in the ontology?", "Is there any instance that could simultaneously belong to both Difference:set and Difference:time&date?", "Which classes does the ontology specify as being disjoint with Difference:set?"]}]}
{"ontology": "OntoDT", "class": "Insert:bag", "axiom": {"subClassOf": ["insert operation"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["What is the ontological distinction between Insert:bag and Insert:table?", "Can an individual simultaneously be classified as both Insert:bag and Insert:table?", "Which classes are explicitly declared as disjoint with Insert:bag?"], "VCQ": ["Is Insert:bag classified as a subtype of insert operation?", "Which operations are subsumed under insert operation, such as Insert:bag?", "To what broader operational classes does Insert:bag belong?", "What is the ontological distinction between Insert:bag and Insert:table?", "Can an individual simultaneously be classified as both Insert:bag and Insert:table?", "Which classes are explicitly declared as disjoint with Insert:bag?"], "Taxiom": "Insert:bag disjointWith Insert:table", "CQ": [{"axiom": "Insert:bag subClassOf insert operation", "CQ": ["Is Insert:bag classified as a subtype of insert operation?", "Which operations are subsumed under insert operation, such as Insert:bag?", "To what broader operational classes does Insert:bag belong?"]}, {"axiom": "Insert:bag disjointWith Insert:table", "CQ": ["What is the ontological distinction between Insert:bag and Insert:table?", "Can an individual simultaneously be classified as both Insert:bag and Insert:table?", "Which classes are explicitly declared as disjoint with Insert:bag?"]}]}
{"ontology": "OntoDT", "class": "NonNegative:integer", "axiom": {"subClassOf": ["nonNegative operation"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["What logical separation is asserted between NonNegative:integer and NonNegative:rational within the ontology?", "Is there any instance that could simultaneously belong to both NonNegative:integer and NonNegative:rational classes?", "Which classes are declared as disjoint with NonNegative:rational in the ontology?"], "VCQ": ["Is NonNegative:integer categorized under nonNegative operation?", "Which subclasses are specified beneath nonNegative operation, such as NonNegative:integer?", "To what higher-level groups does NonNegative:integer correspond within the ontology?", "What logical separation is asserted between NonNegative:integer and NonNegative:rational within the ontology?", "Is there any instance that could simultaneously belong to both NonNegative:integer and NonNegative:rational classes?", "Which classes are declared as disjoint with NonNegative:rational in the ontology?"], "Taxiom": "NonNegative:integer disjointWith NonNegative:rational", "CQ": [{"axiom": "NonNegative:integer subClassOf nonNegative operation", "CQ": ["Is NonNegative:integer categorized under nonNegative operation?", "Which subclasses are specified beneath nonNegative operation, such as NonNegative:integer?", "To what higher-level groups does NonNegative:integer correspond within the ontology?"]}, {"axiom": "NonNegative:integer disjointWith NonNegative:rational", "CQ": ["What logical separation is asserted between NonNegative:integer and NonNegative:rational within the ontology?", "Is there any instance that could simultaneously belong to both NonNegative:integer and NonNegative:rational classes?", "Which classes are declared as disjoint with NonNegative:rational in the ontology?"]}]}
{"ontology": "OntoDT", "class": "Serialize:bag", "axiom": {"subClassOf": ["serialize operation"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["What distinguishes the classes Serialize:bag and Serialize:table within the ontology?", "Is it allowed for an instance to be both a Serialize:bag and a Serialize:table?", "Which classes are defined to be disjoint with Serialize:table?"], "VCQ": ["Does Serialize:bag represent a specific type of serialize operation?", "Which operations fall under the more general category of serialize operation, such as Serialize:bag?", "What broader operational categories include Serialize:bag as a specialized form?", "What distinguishes the classes Serialize:bag and Serialize:table within the ontology?", "Is it allowed for an instance to be both a Serialize:bag and a Serialize:table?", "Which classes are defined to be disjoint with Serialize:table?"], "Taxiom": "Serialize:bag disjointWith Serialize:table", "CQ": [{"axiom": "Serialize:bag subClassOf serialize operation", "CQ": ["Does Serialize:bag represent a specific type of serialize operation?", "Which operations fall under the more general category of serialize operation, such as Serialize:bag?", "What broader operational categories include Serialize:bag as a specialized form?"]}, {"axiom": "Serialize:bag disjointWith Serialize:table", "CQ": ["What distinguishes the classes Serialize:bag and Serialize:table within the ontology?", "Is it allowed for an instance to be both a Serialize:bag and a Serialize:table?", "Which classes are defined to be disjoint with Serialize:table?"]}]}
{"ontology": "OntoDT", "class": "index access", "axiom": {"subClassOf": ["direct access property"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["How does the ontology differentiate index access from key access?", "Is there an entity that can be classified simultaneously as supporting both index access and key access?", "Which access types are explicitly defined as incompatible with key access?"], "VCQ": ["Is direct access property a generalization of index access?", "Which specific access properties are classified under direct access property, including index access?", "To which parent property categories does index access belong?", "How does the ontology differentiate index access from key access?", "Is there an entity that can be classified simultaneously as supporting both index access and key access?", "Which access types are explicitly defined as incompatible with key access?"], "Taxiom": "index access disjointWith key access", "CQ": [{"axiom": "index access subClassOf direct access property", "CQ": ["Is direct access property a generalization of index access?", "Which specific access properties are classified under direct access property, including index access?", "To which parent property categories does index access belong?"]}, {"axiom": "index access disjointWith key access", "CQ": ["How does the ontology differentiate index access from key access?", "Is there an entity that can be classified simultaneously as supporting both index access and key access?", "Which access types are explicitly defined as incompatible with key access?"]}]}
{"ontology": "OntoDT", "class": "identifier not unique", "axiom": {"subClassOf": ["aggregate-imposed identifier uniqueness"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["How does the ontology distinguish between 'identifier not unique' and 'identifier unique'?", "Is any instance allowed to have both 'identifier not unique' and 'identifier unique' classifications?", "Which classes are specified as mutually exclusive with 'identifier unique'?"], "VCQ": ["Is aggregate-imposed identifier uniqueness a generalization of identifier not unique?", "Which identifier uniqueness constraints include identifier not unique as a special case?", "What broader identifier uniqueness categories encompass identifier not unique?", "How does the ontology distinguish between 'identifier not unique' and 'identifier unique'?", "Is any instance allowed to have both 'identifier not unique' and 'identifier unique' classifications?", "Which classes are specified as mutually exclusive with 'identifier unique'?"], "Taxiom": "identifier not unique disjointWith identifier unique", "CQ": [{"axiom": "identifier not unique subClassOf aggregate-imposed identifier uniqueness", "CQ": ["Is aggregate-imposed identifier uniqueness a generalization of identifier not unique?", "Which identifier uniqueness constraints include identifier not unique as a special case?", "What broader identifier uniqueness categories encompass identifier not unique?"]}, {"axiom": "identifier not unique disjointWith identifier unique", "CQ": ["How does the ontology distinguish between 'identifier not unique' and 'identifier unique'?", "Is any instance allowed to have both 'identifier not unique' and 'identifier unique' classifications?", "Which classes are specified as mutually exclusive with 'identifier unique'?"]}]}
{"ontology": "OntoDT", "class": "component mandatory", "axiom": {"subClassOf": ["component mandatoriness"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["What is the formal separation between component mandatory and component non-mandatory in the ontology?", "Can an entity be classified as both a mandatory and a non-mandatory component simultaneously?", "Which components are explicitly stated as disjoint with component non-mandatory?"], "VCQ": ["Is component mandatoriness a more general category than component mandatory?", "Which concepts are classified as specializations of component mandatoriness, such as component mandatory?", "What broader classes include component mandatory as a specific instance?", "What is the formal separation between component mandatory and component non-mandatory in the ontology?", "Can an entity be classified as both a mandatory and a non-mandatory component simultaneously?", "Which components are explicitly stated as disjoint with component non-mandatory?"], "Taxiom": "component mandatory disjointWith component non-mandatory", "CQ": [{"axiom": "component mandatory subClassOf component mandatoriness", "CQ": ["Is component mandatoriness a more general category than component mandatory?", "Which concepts are classified as specializations of component mandatoriness, such as component mandatory?", "What broader classes include component mandatory as a specific instance?"]}, {"axiom": "component mandatory disjointWith component non-mandatory", "CQ": ["What is the formal separation between component mandatory and component non-mandatory in the ontology?", "Can an entity be classified as both a mandatory and a non-mandatory component simultaneously?", "Which components are explicitly stated as disjoint with component non-mandatory?"]}]}
{"ontology": "OntoDT", "class": "recursive", "axiom": {"subClassOf": ["recursiveness"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["How does the ontology distinguish between recursive and non-recursive classes?", "Is any entity classified as both recursive and non-recursive in the ontology?", "Which classes are formally specified as disjoint with non-recursive?"], "VCQ": ["Does recursive belong to the broader category of recursiveness?", "Which specific concepts are categorized under recursiveness, including recursive?", "What are the more general categories that encompass the recursive concept?", "How does the ontology distinguish between recursive and non-recursive classes?", "Is any entity classified as both recursive and non-recursive in the ontology?", "Which classes are formally specified as disjoint with non-recursive?"], "Taxiom": "recursive disjointWith non-recursive", "CQ": [{"axiom": "recursive subClassOf recursiveness", "CQ": ["Does recursive belong to the broader category of recursiveness?", "Which specific concepts are categorized under recursiveness, including recursive?", "What are the more general categories that encompass the recursive concept?"]}, {"axiom": "recursive disjointWith non-recursive", "CQ": ["How does the ontology distinguish between recursive and non-recursive classes?", "Is any entity classified as both recursive and non-recursive in the ontology?", "Which classes are formally specified as disjoint with non-recursive?"]}]}
{"ontology": "OntoDT", "class": "descriptive field identifier", "axiom": {"subClassOf": ["field identifier"], "disjointWith": []}, "datatype": "Type1", "TCQ": ["Are there any instances that can belong to both descriptive field identifier and target field identifier?", "Which classes are asserted to be mutually exclusive with target field identifier?", "What formal constraint distinguishes descriptive field identifier from target field identifier in the ontology?"], "VCQ": ["Does descriptive field identifier fall under the category of field identifier?", "Which field identifier subclasses include descriptive field identifier?", "What are the hierarchical parents of descriptive field identifier in relation to field identifier?", "Are there any instances that can belong to both descriptive field identifier and target field identifier?", "Which classes are asserted to be mutually exclusive with target field identifier?", "What formal constraint distinguishes descriptive field identifier from target field identifier in the ontology?"], "Taxiom": "descriptive field identifier disjointWith target field identifier", "CQ": [{"axiom": "descriptive field identifier subClassOf field identifier", "CQ": ["Does descriptive field identifier fall under the category of field identifier?", "Which field identifier subclasses include descriptive field identifier?", "What are the hierarchical parents of descriptive field identifier in relation to field identifier?"]}, {"axiom": "descriptive field identifier disjointWith target field identifier", "CQ": ["Are there any instances that can belong to both descriptive field identifier and target field identifier?", "Which classes are asserted to be mutually exclusive with target field identifier?", "What formal constraint distinguishes descriptive field identifier from target field identifier in the ontology?"]}]}
{"ontology": "OntoDT", "class": "descriptive record of primitives field component", "axiom": {"subClassOf": ["labeled dataset descriptive field component"], "propertyRestrictions": []}, "datatype": "Type1", "TCQ": ["Does every descriptive record of primitives field component necessarily have a role_of relation with some record of primitives datatype?", "Are all instances of descriptive record of primitives field component required to participate in at least one role_of relation with a record of primitives datatype?", "Is it possible for a descriptive record of primitives field component not to be related via role_of to any record of primitives datatype?"], "VCQ": ["Is every descriptive record of primitives field component included within labeled dataset descriptive field component?", "Which field components fall under the category of labeled dataset descriptive field component?", "What broader classification encompasses descriptive record of primitives field component?", "Does every descriptive record of primitives field component necessarily have a role_of relation with some record of primitives datatype?", "Are all instances of descriptive record of primitives field component required to participate in at least one role_of relation with a record of primitives datatype?", "Is it possible for a descriptive record of primitives field component not to be related via role_of to any record of primitives datatype?"], "Taxiom": "descriptive record of primitives field component propertyRestrictions [role_of some record of primitives datatype]", "CQ": [{"axiom": "descriptive record of primitives field component subClassOf labeled dataset descriptive field component", "CQ": ["Is every descriptive record of primitives field component included within labeled dataset descriptive field component?", "Which field components fall under the category of labeled dataset descriptive field component?", "What broader classification encompasses descriptive record of primitives field component?"]}, {"axiom": "descriptive record of primitives field component propertyRestrictions [role_of some record of primitives datatype]", "CQ": ["Does every descriptive record of primitives field component necessarily have a role_of relation with some record of primitives datatype?", "Are all instances of descriptive record of primitives field component required to participate in at least one role_of relation with a record of primitives datatype?", "Is it possible for a descriptive record of primitives field component not to be related via role_of to any record of primitives datatype?"]}]}
{"ontology": "OntoDT", "class": "descriptive record of discrete field component", "axiom": {"subClassOf": [], "propertyRestrictions": ["[role_of some record of discrete datatype]"]}, "datatype": "Type1", "TCQ": ["Is every descriptive record of discrete field component classified under labeled dataset descriptive field component?", "Which entities fall under the labeled dataset descriptive field component category, such as descriptive record of discrete field component?", "What broader categories include descriptive record of discrete field component as a member?"], "VCQ": ["Is it required that a descriptive record of a discrete field component has a property 'role_of' that relates only to a record of a discrete datatype?", "Can a descriptive record of a discrete field component possess the 'role_of' property exclusively with instances of a record of discrete datatype?", "Does every record representing a discrete field component utilize 'role_of' solely in reference to records classified as discrete datatypes?", "Is every descriptive record of discrete field component classified under labeled dataset descriptive field component?", "Which entities fall under the labeled dataset descriptive field component category, such as descriptive record of discrete field component?", "What broader categories include descriptive record of discrete field component as a member?"], "Taxiom": "descriptive record of discrete field component subClassOf labeled dataset descriptive field component", "CQ": [{"axiom": "descriptive record of discrete field component subClassOf labeled dataset descriptive field component", "CQ": ["Is every descriptive record of discrete field component classified under labeled dataset descriptive field component?", "Which entities fall under the labeled dataset descriptive field component category, such as descriptive record of discrete field component?", "What broader categories include descriptive record of discrete field component as a member?"]}, {"axiom": "descriptive record of discrete field component propertyRestrictions [role_of some record of discrete datatype]", "CQ": ["Is it required that a descriptive record of a discrete field component has a property 'role_of' that relates only to a record of a discrete datatype?", "Can a descriptive record of a discrete field component possess the 'role_of' property exclusively with instances of a record of discrete datatype?", "Does every record representing a discrete field component utilize 'role_of' solely in reference to records classified as discrete datatypes?"]}]}
{"ontology": "OntoDT", "class": "list specification", "axiom": {"subClassOf": ["specification"]}, "datatype": "Type4", "TCQ": ["Is list specification classified as a type of specification?", "What categories of specifications include list specification as a more specific instance?", "Which broader specification classes does list specification belong to?"], "VCQ": ["Is list specification classified as a type of specification?", "What categories of specifications include list specification as a more specific instance?", "Which broader specification classes does list specification belong to?"], "Taxiom": "None", "CQ": [{"axiom": "list specification subClassOf specification", "CQ": ["Is list specification classified as a type of specification?", "What categories of specifications include list specification as a more specific instance?", "Which broader specification classes does list specification belong to?"]}]}
{"ontology": "OntoDT", "class": "value space", "axiom": {"subClassOf": ["specification"]}, "datatype": "Type4", "TCQ": ["What higher-level categories does value space belong to?", "Which specifications have value space as a specialized form?", "Are all value spaces encompassed within the specification category?"], "VCQ": ["What higher-level categories does value space belong to?", "Which specifications have value space as a specialized form?", "Are all value spaces encompassed within the specification category?"], "Taxiom": "None", "CQ": [{"axiom": "value space subClassOf specification", "CQ": ["What higher-level categories does value space belong to?", "Which specifications have value space as a specialized form?", "Are all value spaces encompassed within the specification category?"]}]}
{"ontology": "OntoDT", "class": "tag-value list", "axiom": {"subClassOf": ["specification"]}, "datatype": "Type4", "TCQ": ["What more general categories does tag-value list fall under in the ontology?", "Does every tag-value list represent a form of specification?", "Which entities are classified as subtypes of specification, such as tag-value list?"], "VCQ": ["Does every tag-value list represent a form of specification?", "What more general categories does tag-value list fall under in the ontology?", "Which entities are classified as subtypes of specification, such as tag-value list?"], "Taxiom": "None", "CQ": [{"axiom": "tag-value list subClassOf specification", "CQ": ["Does every tag-value list represent a form of specification?", "What more general categories does tag-value list fall under in the ontology?", "Which entities are classified as subtypes of specification, such as tag-value list?"]}]}
{"ontology": "OntoDT", "class": "direction", "axiom": {"subClassOf": ["specification"]}, "datatype": "Type4", "TCQ": ["What more specific subclasses exist under specification, such as direction?", "Does the concept direction fall under the broader category of specification?", "Which general categories include direction as a member?"], "VCQ": ["Does the concept direction fall under the broader category of specification?", "What more specific subclasses exist under specification, such as direction?", "Which general categories include direction as a member?"], "Taxiom": "None", "CQ": [{"axiom": "direction subClassOf specification", "CQ": ["Does the concept direction fall under the broader category of specification?", "What more specific subclasses exist under specification, such as direction?", "Which general categories include direction as a member?"]}]}
{"ontology": "OntoDT", "class": "select-item specification", "axiom": {"subClassOf": ["specification"]}, "datatype": "Type4", "TCQ": ["Which specific types of specification encompass select-item specification?", "What broader specification categories include select-item specification as a subclass?", "Is select-item specification categorized under the broader group of specification?"], "VCQ": ["Is select-item specification categorized under the broader group of specification?", "Which specific types of specification encompass select-item specification?", "What broader specification categories include select-item specification as a subclass?"], "Taxiom": "None", "CQ": [{"axiom": "select-item specification subClassOf specification", "CQ": ["Is select-item specification categorized under the broader group of specification?", "Which specific types of specification encompass select-item specification?", "What broader specification categories include select-item specification as a subclass?"]}]}
{"ontology": "OntoDT", "class": "datatype generator", "axiom": {"subClassOf": ["directive information entity"]}, "datatype": "Type4", "TCQ": ["Which higher-level categories encompass datatype generator?", "What entities are direct or indirect subclasses of directive information entity, specifically including datatype generator?", "Is datatype generator included within the broader class of directive information entity?"], "VCQ": ["Is datatype generator included within the broader class of directive information entity?", "What entities are direct or indirect subclasses of directive information entity, specifically including datatype generator?", "Which higher-level categories encompass datatype generator?"], "Taxiom": "None", "CQ": [{"axiom": "datatype generator subClassOf directive information entity", "CQ": ["Is datatype generator included within the broader class of directive information entity?", "What entities are direct or indirect subclasses of directive information entity, specifically including datatype generator?", "Which higher-level categories encompass datatype generator?"]}]}
{"ontology": "OntoDT", "class": "characterizing operation", "axiom": {"subClassOf": ["directive information entity"]}, "datatype": "Type4", "TCQ": ["Is characterizing operation a more specific kind of directive information entity?", "Which broader classifications include characterizing operation as a subclass?", "What entities are covered under directive information entity, such as characterizing operation?"], "VCQ": ["Is characterizing operation a more specific kind of directive information entity?", "What entities are covered under directive information entity, such as characterizing operation?", "Which broader classifications include characterizing operation as a subclass?"], "Taxiom": "None", "CQ": [{"axiom": "characterizing operation subClassOf directive information entity", "CQ": ["Is characterizing operation a more specific kind of directive information entity?", "What entities are covered under directive information entity, such as characterizing operation?", "Which broader classifications include characterizing operation as a subclass?"]}]}
{"ontology": "OntoDT", "class": "data representational model", "axiom": {"subClassOf": ["directive information entity"]}, "datatype": "Type4", "TCQ": ["What overarching entity types include data representational model within their classification?", "Which entities are categorized as more specific forms of directive information entity, such as data representational model?", "Does a data representational model fall under the broader grouping of directive information entity?"], "VCQ": ["Does a data representational model fall under the broader grouping of directive information entity?", "Which entities are categorized as more specific forms of directive information entity, such as data representational model?", "What overarching entity types include data representational model within their classification?"], "Taxiom": "None", "CQ": [{"axiom": "data representational model subClassOf directive information entity", "CQ": ["Does a data representational model fall under the broader grouping of directive information entity?", "Which entities are categorized as more specific forms of directive information entity, such as data representational model?", "What overarching entity types include data representational model within their classification?"]}]}
{"ontology": "OntoDT", "class": "explicit subtype generator", "axiom": {"subClassOf": ["subtype generator"]}, "datatype": "Type4", "TCQ": ["Which subclasses fall within the category of subtype generator, including explicit subtype generator?", "Is explicit subtype generator classified under subtype generator?", "What broader classes encompass explicit subtype generator?"], "VCQ": ["Is explicit subtype generator classified under subtype generator?", "Which subclasses fall within the category of subtype generator, including explicit subtype generator?", "What broader classes encompass explicit subtype generator?"], "Taxiom": "None", "CQ": [{"axiom": "explicit subtype generator subClassOf subtype generator", "CQ": ["Is explicit subtype generator classified under subtype generator?", "Which subclasses fall within the category of subtype generator, including explicit subtype generator?", "What broader classes encompass explicit subtype generator?"]}]}
{"ontology": "OntoDT", "class": "natural number", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["What broader datatype classifications include natural number as a subclass?", "Which datatypes encompass natural number as a specialized type?", "Is natural number categorized under defined datatype?"], "VCQ": ["Is natural number categorized under defined datatype?", "Which datatypes encompass natural number as a specialized type?", "What broader datatype classifications include natural number as a subclass?"], "Taxiom": "None", "CQ": [{"axiom": "natural number subClassOf defined datatype", "CQ": ["Is natural number categorized under defined datatype?", "Which datatypes encompass natural number as a specialized type?", "What broader datatype classifications include natural number as a subclass?"]}]}
{"ontology": "OntoDT", "class": "modulo", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["What broader categories encompass modulo under defined datatype?", "Is modulo classified as a kind of defined datatype?", "Which defined datatypes have modulo as a specific subtype?"], "VCQ": ["Is modulo classified as a kind of defined datatype?", "Which defined datatypes have modulo as a specific subtype?", "What broader categories encompass modulo under defined datatype?"], "Taxiom": "None", "CQ": [{"axiom": "modulo subClassOf defined datatype", "CQ": ["Is modulo classified as a kind of defined datatype?", "Which defined datatypes have modulo as a specific subtype?", "What broader categories encompass modulo under defined datatype?"]}]}
{"ontology": "OntoDT", "class": "bit", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["Is bit classified under the general group of defined datatype?", "Which datatypes are more specific types within defined datatype, including bit?", "To what broader datatype categories does bit belong?"], "VCQ": ["Is bit classified under the general group of defined datatype?", "Which datatypes are more specific types within defined datatype, including bit?", "To what broader datatype categories does bit belong?"], "Taxiom": "None", "CQ": [{"axiom": "bit subClassOf defined datatype", "CQ": ["Is bit classified under the general group of defined datatype?", "Which datatypes are more specific types within defined datatype, including bit?", "To what broader datatype categories does bit belong?"]}]}
{"ontology": "OntoDT", "class": "bit string", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["What higher-level datatypes does bit string fall under in the ontology?", "Which datatypes are classified as specializations of defined datatype, including bit string?", "Is bit string categorized under defined datatype?"], "VCQ": ["Is bit string categorized under defined datatype?", "Which datatypes are classified as specializations of defined datatype, including bit string?", "What higher-level datatypes does bit string fall under in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "bit string subClassOf defined datatype", "CQ": ["Is bit string categorized under defined datatype?", "Which datatypes are classified as specializations of defined datatype, including bit string?", "What higher-level datatypes does bit string fall under in the ontology?"]}]}
{"ontology": "OntoDT", "class": "character string", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["Is character string classified as a subtype of defined datatype?", "What general datatypes does character string fall under within the ontology?", "Which datatypes are encompassed under defined datatype, including character string?"], "VCQ": ["Is character string classified as a subtype of defined datatype?", "Which datatypes are encompassed under defined datatype, including character string?", "What general datatypes does character string fall under within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "character string subClassOf defined datatype", "CQ": ["Is character string classified as a subtype of defined datatype?", "Which datatypes are encompassed under defined datatype, including character string?", "What general datatypes does character string fall under within the ontology?"]}]}
{"ontology": "OntoDT", "class": "time interval", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["Does time interval fall within the category defined by defined datatype?", "What specific types are classified under defined datatype, including time interval?", "Which broader categories encompass time interval as a specific instance?"], "VCQ": ["Does time interval fall within the category defined by defined datatype?", "What specific types are classified under defined datatype, including time interval?", "Which broader categories encompass time interval as a specific instance?"], "Taxiom": "None", "CQ": [{"axiom": "time interval subClassOf defined datatype", "CQ": ["Does time interval fall within the category defined by defined datatype?", "What specific types are classified under defined datatype, including time interval?", "Which broader categories encompass time interval as a specific instance?"]}]}
{"ontology": "OntoDT", "class": "octet", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["Is octet a defined subtype within the category of defined datatype?", "To which higher-level datatypes does octet belong according to the ontology hierarchy?", "Which datatypes are specified as subclasses of defined datatype, including octet?"], "VCQ": ["Is octet a defined subtype within the category of defined datatype?", "Which datatypes are specified as subclasses of defined datatype, including octet?", "To which higher-level datatypes does octet belong according to the ontology hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "octet subClassOf defined datatype", "CQ": ["Is octet a defined subtype within the category of defined datatype?", "Which datatypes are specified as subclasses of defined datatype, including octet?", "To which higher-level datatypes does octet belong according to the ontology hierarchy?"]}]}
{"ontology": "OntoDT", "class": "octet string", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["Which data types fall under the category of defined datatype, such as octet string?", "What broader data categories include octet string as a member?", "Is octet string classified as a specialized type of defined datatype?"], "VCQ": ["Is octet string classified as a specialized type of defined datatype?", "Which data types fall under the category of defined datatype, such as octet string?", "What broader data categories include octet string as a member?"], "Taxiom": "None", "CQ": [{"axiom": "octet string subClassOf defined datatype", "CQ": ["Is octet string classified as a specialized type of defined datatype?", "Which data types fall under the category of defined datatype, such as octet string?", "What broader data categories include octet string as a member?"]}]}
{"ontology": "OntoDT", "class": "private", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["Which specific types are classified as defined datatype, such as private?", "What broader classes does private belong to in this ontology?", "Does private fall under the general category of defined datatype?"], "VCQ": ["Does private fall under the general category of defined datatype?", "Which specific types are classified as defined datatype, such as private?", "What broader classes does private belong to in this ontology?"], "Taxiom": "None", "CQ": [{"axiom": "private subClassOf defined datatype", "CQ": ["Does private fall under the general category of defined datatype?", "Which specific types are classified as defined datatype, such as private?", "What broader classes does private belong to in this ontology?"]}]}
{"ontology": "OntoDT", "class": "object identifier", "axiom": {"subClassOf": ["defined datatype"]}, "datatype": "Type4", "TCQ": ["Is every object identifier necessarily classified as a defined datatype?", "To what broader datatype classes does object identifier belong?", "Which defined datatypes have object identifier as a specific specialization?"], "VCQ": ["Is every object identifier necessarily classified as a defined datatype?", "Which defined datatypes have object identifier as a specific specialization?", "To what broader datatype classes does object identifier belong?"], "Taxiom": "None", "CQ": [{"axiom": "object identifier subClassOf defined datatype", "CQ": ["Is every object identifier necessarily classified as a defined datatype?", "Which defined datatypes have object identifier as a specific specialization?", "To what broader datatype classes does object identifier belong?"]}]}
{"ontology": "OntoDT", "class": "stack", "axiom": {"subClassOf": ["defined generator"]}, "datatype": "Type4", "TCQ": ["Which entities are identified as subclasses under defined generator, such as stack?", "Is stack categorized as a specific type of defined generator?", "What are the broader categories or superclasses to which stack belongs?"], "VCQ": ["Is stack categorized as a specific type of defined generator?", "Which entities are identified as subclasses under defined generator, such as stack?", "What are the broader categories or superclasses to which stack belongs?"], "Taxiom": "None", "CQ": [{"axiom": "stack subClassOf defined generator", "CQ": ["Is stack categorized as a specific type of defined generator?", "Which entities are identified as subclasses under defined generator, such as stack?", "What are the broader categories or superclasses to which stack belongs?"]}]}
{"ontology": "OntoDT", "class": "tree", "axiom": {"subClassOf": ["defined generator"]}, "datatype": "Type4", "TCQ": ["What entities are specified as subclasses of defined generator, such as tree?", "Is tree classified as a type of defined generator?", "Which broader classes does tree pertain to within the context of defined generator?"], "VCQ": ["Is tree classified as a type of defined generator?", "What entities are specified as subclasses of defined generator, such as tree?", "Which broader classes does tree pertain to within the context of defined generator?"], "Taxiom": "None", "CQ": [{"axiom": "tree subClassOf defined generator", "CQ": ["Is tree classified as a type of defined generator?", "What entities are specified as subclasses of defined generator, such as tree?", "Which broader classes does tree pertain to within the context of defined generator?"]}]}
{"ontology": "OntoDT", "class": "optional", "axiom": {"subClassOf": ["defined generator"]}, "datatype": "Type4", "TCQ": ["Which defined generator types encompass optional as a subclass?", "Does optional fall under the defined generator category?", "What broader classes include optional within the context of defined generator classifications?"], "VCQ": ["Does optional fall under the defined generator category?", "Which defined generator types encompass optional as a subclass?", "What broader classes include optional within the context of defined generator classifications?"], "Taxiom": "None", "CQ": [{"axiom": "optional subClassOf defined generator", "CQ": ["Does optional fall under the defined generator category?", "Which defined generator types encompass optional as a subclass?", "What broader classes include optional within the context of defined generator classifications?"]}]}
{"ontology": "OntoDT", "class": "directed labeled graph datatype generator", "axiom": {"subClassOf": ["defined generator"]}, "datatype": "Type4", "TCQ": ["Is every directed labeled graph datatype generator inherently classified as a defined generator?", "To what higher-level generator classes does directed labeled graph datatype generator belong?", "Which specific generator types are categorized under defined generator, such as directed labeled graph datatype generator?"], "VCQ": ["Is every directed labeled graph datatype generator inherently classified as a defined generator?", "Which specific generator types are categorized under defined generator, such as directed labeled graph datatype generator?", "To what higher-level generator classes does directed labeled graph datatype generator belong?"], "Taxiom": "None", "CQ": [{"axiom": "directed labeled graph datatype generator subClassOf defined generator", "CQ": ["Is every directed labeled graph datatype generator inherently classified as a defined generator?", "Which specific generator types are categorized under defined generator, such as directed labeled graph datatype generator?", "To what higher-level generator classes does directed labeled graph datatype generator belong?"]}]}
{"ontology": "OntoDT", "class": "non-directed labeled graph generator", "axiom": {"subClassOf": ["defined generator"]}, "datatype": "Type4", "TCQ": ["What broader generator classifications include non-directed labeled graph generator?", "Which generator types are subclasses of defined generator?", "Does a non-directed labeled graph generator fall under the category of defined generators?"], "VCQ": ["Does a non-directed labeled graph generator fall under the category of defined generators?", "Which generator types are subclasses of defined generator?", "What broader generator classifications include non-directed labeled graph generator?"], "Taxiom": "None", "CQ": [{"axiom": "non-directed labeled graph generator subClassOf defined generator", "CQ": ["Does a non-directed labeled graph generator fall under the category of defined generators?", "Which generator types are subclasses of defined generator?", "What broader generator classifications include non-directed labeled graph generator?"]}]}
{"ontology": "OntoDT", "class": "vector generator", "axiom": {"subClassOf": ["defined generator"]}, "datatype": "Type4", "TCQ": ["Which generators fall under the defined generator category, such as vector generator?", "What hierarchical categories include vector generator as a member?", "Is a vector generator classified as a type of defined generator?"], "VCQ": ["Is a vector generator classified as a type of defined generator?", "Which generators fall under the defined generator category, such as vector generator?", "What hierarchical categories include vector generator as a member?"], "Taxiom": "None", "CQ": [{"axiom": "vector generator subClassOf defined generator", "CQ": ["Is a vector generator classified as a type of defined generator?", "Which generators fall under the defined generator category, such as vector generator?", "What hierarchical categories include vector generator as a member?"]}]}
{"ontology": "OntoDT", "class": "procedure generator", "axiom": {"subClassOf": ["non-aggregate generator"]}, "datatype": "Type4", "TCQ": ["Does a procedure generator fall under the classification of non-aggregate generator?", "To which broader generator categories does procedure generator belong?", "Which types of generators are specific forms of non-aggregate generator, such as procedure generator?"], "VCQ": ["Does a procedure generator fall under the classification of non-aggregate generator?", "Which types of generators are specific forms of non-aggregate generator, such as procedure generator?", "To which broader generator categories does procedure generator belong?"], "Taxiom": "None", "CQ": [{"axiom": "procedure generator subClassOf non-aggregate generator", "CQ": ["Does a procedure generator fall under the classification of non-aggregate generator?", "Which types of generators are specific forms of non-aggregate generator, such as procedure generator?", "To which broader generator categories does procedure generator belong?"]}]}
{"ontology": "OntoDT", "class": "attribute identifier", "axiom": {"subClassOf": ["identifier"]}, "datatype": "Type4", "TCQ": ["What higher-level classes is attribute identifier associated with?", "Is attribute identifier classified under the broader group of identifier?", "Which specific types are encompassed by the identifier category, including attribute identifier?"], "VCQ": ["Is attribute identifier classified under the broader group of identifier?", "Which specific types are encompassed by the identifier category, including attribute identifier?", "What higher-level classes is attribute identifier associated with?"], "Taxiom": "None", "CQ": [{"axiom": "attribute identifier subClassOf identifier", "CQ": ["Is attribute identifier classified under the broader group of identifier?", "Which specific types are encompassed by the identifier category, including attribute identifier?", "What higher-level classes is attribute identifier associated with?"]}]}
{"ontology": "OntoDT", "class": "parameter identifier", "axiom": {"subClassOf": ["identifier"]}, "datatype": "Type4", "TCQ": ["Is parameter identifier classified as a more specific instance within the category of identifier?", "Which subclasses exist under identifier, and does parameter identifier appear among them?", "What general categories encompass parameter identifier as a member?"], "VCQ": ["Is parameter identifier classified as a more specific instance within the category of identifier?", "Which subclasses exist under identifier, and does parameter identifier appear among them?", "What general categories encompass parameter identifier as a member?"], "Taxiom": "None", "CQ": [{"axiom": "parameter identifier subClassOf identifier", "CQ": ["Is parameter identifier classified as a more specific instance within the category of identifier?", "Which subclasses exist under identifier, and does parameter identifier appear among them?", "What general categories encompass parameter identifier as a member?"]}]}
{"ontology": "OntoDT", "class": "extended-value identifier", "axiom": {"subClassOf": ["identifier"]}, "datatype": "Type4", "TCQ": ["Is every extended-value identifier classified as an identifier?", "What higher-level classes does extended-value identifier fall under within the identifier hierarchy?", "Which subclasses of identifier encompass extended-value identifier?"], "VCQ": ["Is every extended-value identifier classified as an identifier?", "Which subclasses of identifier encompass extended-value identifier?", "What higher-level classes does extended-value identifier fall under within the identifier hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "extended-value identifier subClassOf identifier", "CQ": ["Is every extended-value identifier classified as an identifier?", "Which subclasses of identifier encompass extended-value identifier?", "What higher-level classes does extended-value identifier fall under within the identifier hierarchy?"]}]}
{"ontology": "OntoDT", "class": "character-set identifier", "axiom": {"subClassOf": ["identifier"]}, "datatype": "Type4", "TCQ": ["What broader classes does character-set identifier fall under in the ontology?", "Which identifier types include character-set identifier as a specialization?", "Is every character-set identifier also categorized as an identifier?"], "VCQ": ["Is every character-set identifier also categorized as an identifier?", "Which identifier types include character-set identifier as a specialization?", "What broader classes does character-set identifier fall under in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "character-set identifier subClassOf identifier", "CQ": ["Is every character-set identifier also categorized as an identifier?", "Which identifier types include character-set identifier as a specialization?", "What broader classes does character-set identifier fall under in the ontology?"]}]}
{"ontology": "OntoDT", "class": "field identifier", "axiom": {"subClassOf": ["identifier"]}, "datatype": "Type4", "TCQ": ["To which higher-level classes is field identifier related?", "Does field identifier fall under the broader classification of identifier?", "What specific subtypes exist within the identifier category, including field identifier?"], "VCQ": ["Does field identifier fall under the broader classification of identifier?", "What specific subtypes exist within the identifier category, including field identifier?", "To which higher-level classes is field identifier related?"], "Taxiom": "None", "CQ": [{"axiom": "field identifier subClassOf identifier", "CQ": ["Does field identifier fall under the broader classification of identifier?", "What specific subtypes exist within the identifier category, including field identifier?", "To which higher-level classes is field identifier related?"]}]}
{"ontology": "OntoDT", "class": "date-time factor", "axiom": {"subClassOf": ["factor"]}, "datatype": "Type4", "TCQ": ["What factors are more specific than factor, such as date-time factor?", "Which higher-level categories include date-time factor?", "Is date-time factor classified as a type under factor?"], "VCQ": ["Is date-time factor classified as a type under factor?", "What factors are more specific than factor, such as date-time factor?", "Which higher-level categories include date-time factor?"], "Taxiom": "None", "CQ": [{"axiom": "date-time factor subClassOf factor", "CQ": ["Is date-time factor classified as a type under factor?", "What factors are more specific than factor, such as date-time factor?", "Which higher-level categories include date-time factor?"]}]}
{"ontology": "OntoDT", "class": "scaled factor", "axiom": {"subClassOf": ["factor"]}, "datatype": "Type4", "TCQ": ["Which subcategories fall under factor, including scaled factor?", "Is scaled factor classified as a specific kind of factor?", "What broader class does scaled factor conceptually fall under?"], "VCQ": ["Is scaled factor classified as a specific kind of factor?", "Which subcategories fall under factor, including scaled factor?", "What broader class does scaled factor conceptually fall under?"], "Taxiom": "None", "CQ": [{"axiom": "scaled factor subClassOf factor", "CQ": ["Is scaled factor classified as a specific kind of factor?", "Which subcategories fall under factor, including scaled factor?", "What broader class does scaled factor conceptually fall under?"]}]}
{"ontology": "OntoDT", "class": "real factor", "axiom": {"subClassOf": ["factor"]}, "datatype": "Type4", "TCQ": ["Is real factor categorized under the broader class of factor?", "Which subclasses comprise the set defined by factor, including real factor?", "To which general classes does real factor belong within the context of factors?"], "VCQ": ["Is real factor categorized under the broader class of factor?", "Which subclasses comprise the set defined by factor, including real factor?", "To which general classes does real factor belong within the context of factors?"], "Taxiom": "None", "CQ": [{"axiom": "real factor subClassOf factor", "CQ": ["Is real factor categorized under the broader class of factor?", "Which subclasses comprise the set defined by factor, including real factor?", "To which general classes does real factor belong within the context of factors?"]}]}
{"ontology": "OntoDT", "class": "complex factor", "axiom": {"subClassOf": ["factor"]}, "datatype": "Type4", "TCQ": ["What are the broader class hierarchies that complex factor falls under?", "Which subclasses are encompassed by factor, such as complex factor?", "Does complex factor represent a specific kind under the general category of factor?"], "VCQ": ["Does complex factor represent a specific kind under the general category of factor?", "Which subclasses are encompassed by factor, such as complex factor?", "What are the broader class hierarchies that complex factor falls under?"], "Taxiom": "None", "CQ": [{"axiom": "complex factor subClassOf factor", "CQ": ["Does complex factor represent a specific kind under the general category of factor?", "Which subclasses are encompassed by factor, such as complex factor?", "What are the broader class hierarchies that complex factor falls under?"]}]}
{"ontology": "OntoDT", "class": "graph aggregate component", "axiom": {"subClassOf": ["aggregate field component"]}, "datatype": "Type4", "TCQ": ["Is graph aggregate component classified under the broader category of aggregate field component?", "What parent categories encompass graph aggregate component?", "Which aggregate field component subclasses include graph aggregate component?"], "VCQ": ["Is graph aggregate component classified under the broader category of aggregate field component?", "Which aggregate field component subclasses include graph aggregate component?", "What parent categories encompass graph aggregate component?"], "Taxiom": "None", "CQ": [{"axiom": "graph aggregate component subClassOf aggregate field component", "CQ": ["Is graph aggregate component classified under the broader category of aggregate field component?", "Which aggregate field component subclasses include graph aggregate component?", "What parent categories encompass graph aggregate component?"]}]}
{"ontology": "OntoDT", "class": "n-adic operation", "axiom": {"subClassOf": ["characterizing operation"]}, "datatype": "Type4", "TCQ": ["Is n-adic operation categorized under characterizing operation?", "Which operations are specific types of characterizing operation, such as n-adic operation?", "What broader operational categories include n-adic operation?"], "VCQ": ["Is n-adic operation categorized under characterizing operation?", "Which operations are specific types of characterizing operation, such as n-adic operation?", "What broader operational categories include n-adic operation?"], "Taxiom": "None", "CQ": [{"axiom": "n-adic operation subClassOf characterizing operation", "CQ": ["Is n-adic operation categorized under characterizing operation?", "Which operations are specific types of characterizing operation, such as n-adic operation?", "What broader operational categories include n-adic operation?"]}]}
{"ontology": "OntoDT", "class": "defined generator parameter-list", "axiom": {"subClassOf": ["list specification"]}, "datatype": "Type4", "TCQ": ["Is defined generator parameter-list categorized under list specification?", "What are the more specialized types within list specification, such as defined generator parameter-list?", "To which higher-level group does defined generator parameter-list conceptually belong?"], "VCQ": ["Is defined generator parameter-list categorized under list specification?", "What are the more specialized types within list specification, such as defined generator parameter-list?", "To which higher-level group does defined generator parameter-list conceptually belong?"], "Taxiom": "None", "CQ": [{"axiom": "defined generator parameter-list subClassOf list specification", "CQ": ["Is defined generator parameter-list categorized under list specification?", "What are the more specialized types within list specification, such as defined generator parameter-list?", "To which higher-level group does defined generator parameter-list conceptually belong?"]}]}
{"ontology": "OntoDT", "class": "DAG datatype generator", "axiom": {"subClassOf": ["directed labeled graph datatype generator"]}, "datatype": "Type4", "TCQ": ["Is DAG datatype generator classified under directed labeled graph datatype generator?", "What broader datatype generator classes include DAG datatype generator?", "Which generators are categorized as subclasses of directed labeled graph datatype generator?"], "VCQ": ["Is DAG datatype generator classified under directed labeled graph datatype generator?", "Which generators are categorized as subclasses of directed labeled graph datatype generator?", "What broader datatype generator classes include DAG datatype generator?"], "Taxiom": "None", "CQ": [{"axiom": "DAG datatype generator subClassOf directed labeled graph datatype generator", "CQ": ["Is DAG datatype generator classified under directed labeled graph datatype generator?", "Which generators are categorized as subclasses of directed labeled graph datatype generator?", "What broader datatype generator classes include DAG datatype generator?"]}]}
{"ontology": "OntoDT", "class": "identifier", "axiom": {"subClassOf": ["information artifact entity"]}, "datatype": "Type4", "TCQ": ["Which higher-level categories encompass identifier?", "What types are classified under information artifact entity, including identifier?", "Does identifier belong to the broader group of information artifact entity?"], "VCQ": ["Does identifier belong to the broader group of information artifact entity?", "What types are classified under information artifact entity, including identifier?", "Which higher-level categories encompass identifier?"], "Taxiom": "None", "CQ": [{"axiom": "identifier subClassOf information artifact entity", "CQ": ["Does identifier belong to the broader group of information artifact entity?", "What types are classified under information artifact entity, including identifier?", "Which higher-level categories encompass identifier?"]}]}
{"ontology": "OntoDT", "class": "value expression", "axiom": {"subClassOf": ["information artifact entity"]}, "datatype": "Type4", "TCQ": ["Does value expression inherit characteristics from information artifact entity?", "Which subclasses are defined within the scope of information artifact entity, such as value expression?", "What general class does value expression fall under within the context of information artifact entity?"], "VCQ": ["What general class does value expression fall under within the context of information artifact entity?", "Which subclasses are defined within the scope of information artifact entity, such as value expression?", "Does value expression inherit characteristics from information artifact entity?"], "Taxiom": "None", "CQ": [{"axiom": "value expression subClassOf information artifact entity", "CQ": ["What general class does value expression fall under within the context of information artifact entity?", "Which subclasses are defined within the scope of information artifact entity, such as value expression?", "Does value expression inherit characteristics from information artifact entity?"]}]}
{"ontology": "OntoDT", "class": "label", "axiom": {"subClassOf": ["information artifact entity"]}, "datatype": "Type4", "TCQ": ["What are the more general classes that label is classified under?", "Is label a specific type of information artifact entity?", "Which information artifact entities include label as a subclass?"], "VCQ": ["Is label a specific type of information artifact entity?", "Which information artifact entities include label as a subclass?", "What are the more general classes that label is classified under?"], "Taxiom": "None", "CQ": [{"axiom": "label subClassOf information artifact entity", "CQ": ["Is label a specific type of information artifact entity?", "Which information artifact entities include label as a subclass?", "What are the more general classes that label is classified under?"]}]}
{"ontology": "OntoDT", "class": "directive information entity", "axiom": {"subClassOf": ["information artifact entity"]}, "datatype": "Type4", "TCQ": ["Which specific subtypes of information artifact entity include directive information entity as a member?", "What are the direct and indirect parent classes of directive information entity?", "Is directive information entity classified under the broader group of information artifact entity?"], "VCQ": ["Is directive information entity classified under the broader group of information artifact entity?", "Which specific subtypes of information artifact entity include directive information entity as a member?", "What are the direct and indirect parent classes of directive information entity?"], "Taxiom": "None", "CQ": [{"axiom": "directive information entity subClassOf information artifact entity", "CQ": ["Is directive information entity classified under the broader group of information artifact entity?", "Which specific subtypes of information artifact entity include directive information entity as a member?", "What are the direct and indirect parent classes of directive information entity?"]}]}
{"ontology": "OntoDT", "class": "representation", "axiom": {"subClassOf": ["information artifact entity"]}, "datatype": "Type4", "TCQ": ["What are the broader categories that encompass representation?", "Is representation a more specific type within the category of information artifact entity?", "Which subclasses fall under information artifact entity, such as representation?"], "VCQ": ["Is representation a more specific type within the category of information artifact entity?", "Which subclasses fall under information artifact entity, such as representation?", "What are the broader categories that encompass representation?"], "Taxiom": "None", "CQ": [{"axiom": "representation subClassOf information artifact entity", "CQ": ["Is representation a more specific type within the category of information artifact entity?", "Which subclasses fall under information artifact entity, such as representation?", "What are the broader categories that encompass representation?"]}]}
{"ontology": "OntoDT", "class": "specification", "axiom": {"subClassOf": ["information artifact entity"]}, "datatype": "Type4", "TCQ": ["What general categories encompass specification in the ontology?", "Which entities are recognized as more specific forms of information artifact entity, including specification?", "Is specification categorized under information artifact entity?"], "VCQ": ["Is specification categorized under information artifact entity?", "Which entities are recognized as more specific forms of information artifact entity, including specification?", "What general categories encompass specification in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "specification subClassOf information artifact entity", "CQ": ["Is specification categorized under information artifact entity?", "Which entities are recognized as more specific forms of information artifact entity, including specification?", "What general categories encompass specification in the ontology?"]}]}
{"ontology": "OntoDT", "class": "equality", "axiom": {"subClassOf": ["datatype property"]}, "datatype": "Type4", "TCQ": ["What are the broader property categories that include equality?", "Which datatype properties encompass equality as a more specific type?", "Is equality classified as a kind of datatype property?"], "VCQ": ["Is equality classified as a kind of datatype property?", "Which datatype properties encompass equality as a more specific type?", "What are the broader property categories that include equality?"], "Taxiom": "None", "CQ": [{"axiom": "equality subClassOf datatype property", "CQ": ["Is equality classified as a kind of datatype property?", "Which datatype properties encompass equality as a more specific type?", "What are the broader property categories that include equality?"]}]}
{"ontology": "OntoDT", "class": "maximum-size", "axiom": {"subClassOf": ["size"]}, "datatype": "Type4", "TCQ": ["Does maximum-size fall under the broader classification of size?", "Which higher-level categories encompass maximum-size?", "What are the specific types categorized within size, including maximum-size?"], "VCQ": ["Does maximum-size fall under the broader classification of size?", "What are the specific types categorized within size, including maximum-size?", "Which higher-level categories encompass maximum-size?"], "Taxiom": "None", "CQ": [{"axiom": "maximum-size subClassOf size", "CQ": ["Does maximum-size fall under the broader classification of size?", "What are the specific types categorized within size, including maximum-size?", "Which higher-level categories encompass maximum-size?"]}]}
{"ontology": "OntoDT", "class": "minimum-size", "axiom": {"subClassOf": ["size"]}, "datatype": "Type4", "TCQ": ["Under which broader category is minimum-size classified?", "Which concepts are encompassed within size and include minimum-size as a subclass?", "Does minimum-size represent a specialization of size?"], "VCQ": ["Does minimum-size represent a specialization of size?", "Which concepts are encompassed within size and include minimum-size as a subclass?", "Under which broader category is minimum-size classified?"], "Taxiom": "None", "CQ": [{"axiom": "minimum-size subClassOf size", "CQ": ["Does minimum-size represent a specialization of size?", "Which concepts are encompassed within size and include minimum-size as a subclass?", "Under which broader category is minimum-size classified?"]}]}
{"ontology": "OntoDT", "class": "aggregate generator property", "axiom": {"subClassOf": ["quality"]}, "datatype": "Type4", "TCQ": ["What are the more general categories that encompass aggregate generator property?", "Which property types fall under the superclass quality, including aggregate generator property?", "Is every aggregate generator property classified under the broader category of quality?"], "VCQ": ["Is every aggregate generator property classified under the broader category of quality?", "Which property types fall under the superclass quality, including aggregate generator property?", "What are the more general categories that encompass aggregate generator property?"], "Taxiom": "None", "CQ": [{"axiom": "aggregate generator property subClassOf quality", "CQ": ["Is every aggregate generator property classified under the broader category of quality?", "Which property types fall under the superclass quality, including aggregate generator property?", "What are the more general categories that encompass aggregate generator property?"]}]}
{"ontology": "OntoDT", "class": "datatype property", "axiom": {"subClassOf": ["quality"]}, "datatype": "Type4", "TCQ": ["Does every datatype property fall under the category of quality?", "Which properties are classified as more specific than quality, including datatype property?", "To which upper-level categories does datatype property belong within the ontology?"], "VCQ": ["Does every datatype property fall under the category of quality?", "Which properties are classified as more specific than quality, including datatype property?", "To which upper-level categories does datatype property belong within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "datatype property subClassOf quality", "CQ": ["Does every datatype property fall under the category of quality?", "Which properties are classified as more specific than quality, including datatype property?", "To which upper-level categories does datatype property belong within the ontology?"]}]}
{"ontology": "OntoDT", "class": "subtype generator", "axiom": {"subClassOf": ["datatype generator"]}, "datatype": "Type4", "TCQ": ["Is subtype generator an example of datatype generator?", "Which generators are classified under datatype generator, including subtype generator?", "What general generator categories encompass subtype generator?"], "VCQ": ["Is subtype generator an example of datatype generator?", "Which generators are classified under datatype generator, including subtype generator?", "What general generator categories encompass subtype generator?"], "Taxiom": "None", "CQ": [{"axiom": "subtype generator subClassOf datatype generator", "CQ": ["Is subtype generator an example of datatype generator?", "Which generators are classified under datatype generator, including subtype generator?", "What general generator categories encompass subtype generator?"]}]}
{"ontology": "OntoDT", "class": "date-time unit", "axiom": {"subClassOf": ["label"]}, "datatype": "Type4", "TCQ": ["What specific subclasses are classified under label, such as date-time unit?", "Which concept categories does date-time unit derive from, including label?", "Is date-time unit encompassed within the hierarchy of label?"], "VCQ": ["Is date-time unit encompassed within the hierarchy of label?", "Which concept categories does date-time unit derive from, including label?", "What specific subclasses are classified under label, such as date-time unit?"], "Taxiom": "None", "CQ": [{"axiom": "date-time unit subClassOf label", "CQ": ["Is date-time unit encompassed within the hierarchy of label?", "Which concept categories does date-time unit derive from, including label?", "What specific subclasses are classified under label, such as date-time unit?"]}]}
{"ontology": "OntoDT", "class": "date-time radix", "axiom": {"subClassOf": ["radix"]}, "datatype": "Type4", "TCQ": ["Is date-time radix classified under the broader group of radix?", "Which specialized forms are encompassed by the class radix, such as date-time radix?", "What larger categories does date-time radix fall under in this ontology?"], "VCQ": ["Is date-time radix classified under the broader group of radix?", "Which specialized forms are encompassed by the class radix, such as date-time radix?", "What larger categories does date-time radix fall under in this ontology?"], "Taxiom": "None", "CQ": [{"axiom": "date-time radix subClassOf radix", "CQ": ["Is date-time radix classified under the broader group of radix?", "Which specialized forms are encompassed by the class radix, such as date-time radix?", "What larger categories does date-time radix fall under in this ontology?"]}]}
{"ontology": "OntoDT", "class": "complex radix", "axiom": {"subClassOf": ["radix"]}, "datatype": "Type4", "TCQ": ["What are the parent categories that encompass complex radix?", "Which specific types fall under the broader class of radix?", "Is complex radix classified as a subtype under the category of radix?"], "VCQ": ["Is complex radix classified as a subtype under the category of radix?", "Which specific types fall under the broader class of radix?", "What are the parent categories that encompass complex radix?"], "Taxiom": "None", "CQ": [{"axiom": "complex radix subClassOf radix", "CQ": ["Is complex radix classified as a subtype under the category of radix?", "Which specific types fall under the broader class of radix?", "What are the parent categories that encompass complex radix?"]}]}
{"ontology": "OntoDT", "class": "real radix", "axiom": {"subClassOf": ["radix"]}, "datatype": "Type4", "TCQ": ["Does real radix fall under the broader classification of radix?", "Which specific types are categorized within radix, such as real radix?", "What general classifications encompass real radix?"], "VCQ": ["Does real radix fall under the broader classification of radix?", "Which specific types are categorized within radix, such as real radix?", "What general classifications encompass real radix?"], "Taxiom": "None", "CQ": [{"axiom": "real radix subClassOf radix", "CQ": ["Does real radix fall under the broader classification of radix?", "Which specific types are categorized within radix, such as real radix?", "What general classifications encompass real radix?"]}]}
{"ontology": "OntoDT", "class": "scaled radix", "axiom": {"subClassOf": ["radix"]}, "datatype": "Type4", "TCQ": ["To which overarching categories is scaled radix assigned within the taxonomy?", "Which classifications are recognized as specializations of radix, such as scaled radix?", "Does scaled radix fall under the broader concept of radix?"], "VCQ": ["Does scaled radix fall under the broader concept of radix?", "Which classifications are recognized as specializations of radix, such as scaled radix?", "To which overarching categories is scaled radix assigned within the taxonomy?"], "Taxiom": "None", "CQ": [{"axiom": "scaled radix subClassOf radix", "CQ": ["Does scaled radix fall under the broader concept of radix?", "Which classifications are recognized as specializations of radix, such as scaled radix?", "To which overarching categories is scaled radix assigned within the taxonomy?"]}]}
{"ontology": "OntoDT", "class": "factor", "axiom": {"subClassOf": ["value expression"]}, "datatype": "Type4", "TCQ": ["To which broader classifications does factor belong within the ontology?", "Which entities are classified under value expression, such as factor?", "Does every factor represent a form of value expression?"], "VCQ": ["Does every factor represent a form of value expression?", "Which entities are classified under value expression, such as factor?", "To which broader classifications does factor belong within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "factor subClassOf value expression", "CQ": ["Does every factor represent a form of value expression?", "Which entities are classified under value expression, such as factor?", "To which broader classifications does factor belong within the ontology?"]}]}
{"ontology": "OntoDT", "class": "radix", "axiom": {"subClassOf": ["value expression"]}, "datatype": "Type4", "TCQ": ["Can radix be classified as a kind of value expression?", "Which entities are subclasses under value expression, such as radix?", "What are the general categories that radix is a member of within the ontology?"], "VCQ": ["Can radix be classified as a kind of value expression?", "Which entities are subclasses under value expression, such as radix?", "What are the general categories that radix is a member of within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "radix subClassOf value expression", "CQ": ["Can radix be classified as a kind of value expression?", "Which entities are subclasses under value expression, such as radix?", "What are the general categories that radix is a member of within the ontology?"]}]}
{"ontology": "OntoDT", "class": "bound", "axiom": {"subClassOf": ["value expression"]}, "datatype": "Type4", "TCQ": ["Which subclasses fall under value expression, and does bound appear among them?", "What general class hierarchies encompass bound, considering its relation to value expression?", "Is value expression a broader category that includes bound as a more specific concept?"], "VCQ": ["Is value expression a broader category that includes bound as a more specific concept?", "Which subclasses fall under value expression, and does bound appear among them?", "What general class hierarchies encompass bound, considering its relation to value expression?"], "Taxiom": "None", "CQ": [{"axiom": "bound subClassOf value expression", "CQ": ["Is value expression a broader category that includes bound as a more specific concept?", "Which subclasses fall under value expression, and does bound appear among them?", "What general class hierarchies encompass bound, considering its relation to value expression?"]}]}
{"ontology": "OntoDT", "class": "edge component", "axiom": {"subClassOf": ["graph aggregate component"]}, "datatype": "Type4", "TCQ": ["To what broader structural groups does edge component pertain?", "Is edge component included within the hierarchy of graph aggregate component?", "Which components are classified as specializations of graph aggregate component, specifically noting edge component?"], "VCQ": ["Is edge component included within the hierarchy of graph aggregate component?", "Which components are classified as specializations of graph aggregate component, specifically noting edge component?", "To what broader structural groups does edge component pertain?"], "Taxiom": "None", "CQ": [{"axiom": "edge component subClassOf graph aggregate component", "CQ": ["Is edge component included within the hierarchy of graph aggregate component?", "Which components are classified as specializations of graph aggregate component, specifically noting edge component?", "To what broader structural groups does edge component pertain?"]}]}
{"ontology": "OntoDT", "class": "labeled dataset descriptive field component", "axiom": {"subClassOf": ["field component"]}, "datatype": "Type4", "TCQ": ["Is every labeled dataset descriptive field component classified under the field component category?", "Which components are more specific exemplars of field component, including labeled dataset descriptive field component?", "What categories encompass labeled dataset descriptive field component as a more specific element?"], "VCQ": ["Is every labeled dataset descriptive field component classified under the field component category?", "What categories encompass labeled dataset descriptive field component as a more specific element?", "Which components are more specific exemplars of field component, including labeled dataset descriptive field component?"], "Taxiom": "None", "CQ": [{"axiom": "labeled dataset descriptive field component subClassOf field component", "CQ": ["Is every labeled dataset descriptive field component classified under the field component category?", "What categories encompass labeled dataset descriptive field component as a more specific element?", "Which components are more specific exemplars of field component, including labeled dataset descriptive field component?"]}]}
{"ontology": "OntoDT", "class": "labeled dataset target field component", "axiom": {"subClassOf": ["field component"]}, "datatype": "Type4", "TCQ": ["To which broader groups does labeled dataset target field component belong within the hierarchy of field component?", "Is every labeled dataset target field component a specific kind of field component?", "Which entities are classified as field component subclasses, such as labeled dataset target field component?"], "VCQ": ["Is every labeled dataset target field component a specific kind of field component?", "Which entities are classified as field component subclasses, such as labeled dataset target field component?", "To which broader groups does labeled dataset target field component belong within the hierarchy of field component?"], "Taxiom": "None", "CQ": [{"axiom": "labeled dataset target field component subClassOf field component", "CQ": ["Is every labeled dataset target field component a specific kind of field component?", "Which entities are classified as field component subclasses, such as labeled dataset target field component?", "To which broader groups does labeled dataset target field component belong within the hierarchy of field component?"]}]}
{"ontology": "OntoDT", "class": "add operation", "axiom": {"subClassOf": ["dyadic aritmetic operation"]}, "datatype": "Type4", "TCQ": ["Which operations are subclasses of dyadic arithmetic operation, such as add operation?", "What broader classifications include add operation as a specific example?", "Does the add operation fall under the category of dyadic arithmetic operations?"], "VCQ": ["Does the add operation fall under the category of dyadic arithmetic operations?", "Which operations are subclasses of dyadic arithmetic operation, such as add operation?", "What broader classifications include add operation as a specific example?"], "Taxiom": "None", "CQ": [{"axiom": "add operation subClassOf dyadic aritmetic operation", "CQ": ["Does the add operation fall under the category of dyadic arithmetic operations?", "Which operations are subclasses of dyadic arithmetic operation, such as add operation?", "What broader classifications include add operation as a specific example?"]}]}
{"ontology": "OntoDT", "class": "multiply operation", "axiom": {"subClassOf": ["dyadic aritmetic operation"]}, "datatype": "Type4", "TCQ": ["What broader classes encompass multiply operation in the context of arithmetic operations?", "Which operations are defined as specializations of dyadic arithmetic operation, such as multiply operation?", "Is multiply operation categorized under dyadic arithmetic operation?"], "VCQ": ["Is multiply operation categorized under dyadic arithmetic operation?", "Which operations are defined as specializations of dyadic arithmetic operation, such as multiply operation?", "What broader classes encompass multiply operation in the context of arithmetic operations?"], "Taxiom": "None", "CQ": [{"axiom": "multiply operation subClassOf dyadic aritmetic operation", "CQ": ["Is multiply operation categorized under dyadic arithmetic operation?", "Which operations are defined as specializations of dyadic arithmetic operation, such as multiply operation?", "What broader classes encompass multiply operation in the context of arithmetic operations?"]}]}
{"ontology": "OntoDT", "class": "Divide:scaled", "axiom": {"subClassOf": ["dyadic aritmetic operation"]}, "datatype": "Type4", "TCQ": ["What specific operations are subclasses of dyadic arithmetic operation, and does Divide:scaled appear among them?", "Which broader arithmetic operation classes include Divide:scaled as a specialized form?", "Is Divide:scaled categorized under dyadic arithmetic operation?"], "VCQ": ["Is Divide:scaled categorized under dyadic arithmetic operation?", "What specific operations are subclasses of dyadic arithmetic operation, and does Divide:scaled appear among them?", "Which broader arithmetic operation classes include Divide:scaled as a specialized form?"], "Taxiom": "None", "CQ": [{"axiom": "Divide:scaled subClassOf dyadic aritmetic operation", "CQ": ["Is Divide:scaled categorized under dyadic arithmetic operation?", "What specific operations are subclasses of dyadic arithmetic operation, and does Divide:scaled appear among them?", "Which broader arithmetic operation classes include Divide:scaled as a specialized form?"]}]}
{"ontology": "OntoDT", "class": "delete operation", "axiom": {"subClassOf": ["dyadic updating operation"]}, "datatype": "Type4", "TCQ": ["Which higher-level operation types encompass delete operation in their hierarchy?", "Is every delete operation classified as a kind of dyadic updating operation?", "What operations belong under the broader category of dyadic updating operation, specifically including delete operation?"], "VCQ": ["Is every delete operation classified as a kind of dyadic updating operation?", "What operations belong under the broader category of dyadic updating operation, specifically including delete operation?", "Which higher-level operation types encompass delete operation in their hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "delete operation subClassOf dyadic updating operation", "CQ": ["Is every delete operation classified as a kind of dyadic updating operation?", "What operations belong under the broader category of dyadic updating operation, specifically including delete operation?", "Which higher-level operation types encompass delete operation in their hierarchy?"]}]}
{"ontology": "OntoDT", "class": "insert operation", "axiom": {"subClassOf": ["dyadic updating operation"]}, "datatype": "Type4", "TCQ": ["Which specific operations are recognized under the category of dyadic updating operation?", "Is insert operation classified as a kind of dyadic updating operation?", "What broader operational categories does insert operation fall under?"], "VCQ": ["Is insert operation classified as a kind of dyadic updating operation?", "Which specific operations are recognized under the category of dyadic updating operation?", "What broader operational categories does insert operation fall under?"], "Taxiom": "None", "CQ": [{"axiom": "insert operation subClassOf dyadic updating operation", "CQ": ["Is insert operation classified as a kind of dyadic updating operation?", "Which specific operations are recognized under the category of dyadic updating operation?", "What broader operational categories does insert operation fall under?"]}]}
{"ontology": "OntoDT", "class": "Append:sequence", "axiom": {"subClassOf": ["dyadic updating operation"]}, "datatype": "Type4", "TCQ": ["Which operations are categorized under dyadic updating operation, such as Append:sequence?", "Is Append:sequence classified as a specialized form of dyadic updating operation?", "What are the broader classes that encompass Append:sequence?"], "VCQ": ["Is Append:sequence classified as a specialized form of dyadic updating operation?", "Which operations are categorized under dyadic updating operation, such as Append:sequence?", "What are the broader classes that encompass Append:sequence?"], "Taxiom": "None", "CQ": [{"axiom": "Append:sequence subClassOf dyadic updating operation", "CQ": ["Is Append:sequence classified as a specialized form of dyadic updating operation?", "Which operations are categorized under dyadic updating operation, such as Append:sequence?", "What are the broader classes that encompass Append:sequence?"]}]}
{"ontology": "OntoDT", "class": "AttributeFunctionOverride:class", "axiom": {"subClassOf": ["dyadic updating operation"]}, "datatype": "Type4", "TCQ": ["Which types exhibit a more specific scope than dyadic updating operation, such as AttributeFunctionOverride:class?", "What overarching types does AttributeFunctionOverride:class inherit from within the ontology?", "Does AttributeFunctionOverride:class fall under the broader category of dyadic updating operation?"], "VCQ": ["Does AttributeFunctionOverride:class fall under the broader category of dyadic updating operation?", "Which types exhibit a more specific scope than dyadic updating operation, such as AttributeFunctionOverride:class?", "What overarching types does AttributeFunctionOverride:class inherit from within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "AttributeFunctionOverride:class subClassOf dyadic updating operation", "CQ": ["Does AttributeFunctionOverride:class fall under the broader category of dyadic updating operation?", "Which types exhibit a more specific scope than dyadic updating operation, such as AttributeFunctionOverride:class?", "What overarching types does AttributeFunctionOverride:class inherit from within the ontology?"]}]}
{"ontology": "OntoDT", "class": "AttributeReplace:class", "axiom": {"subClassOf": ["dyadic updating operation"]}, "datatype": "Type4", "TCQ": ["Which concepts are more specific forms of dyadic updating operation, such as AttributeReplace:class?", "What are the higher-level classes that encompass AttributeReplace:class?", "Is AttributeReplace:class categorized under the broader group of dyadic updating operations?"], "VCQ": ["Is AttributeReplace:class categorized under the broader group of dyadic updating operations?", "Which concepts are more specific forms of dyadic updating operation, such as AttributeReplace:class?", "What are the higher-level classes that encompass AttributeReplace:class?"], "Taxiom": "None", "CQ": [{"axiom": "AttributeReplace:class subClassOf dyadic updating operation", "CQ": ["Is AttributeReplace:class categorized under the broader group of dyadic updating operations?", "Which concepts are more specific forms of dyadic updating operation, such as AttributeReplace:class?", "What are the higher-level classes that encompass AttributeReplace:class?"]}]}
{"ontology": "OntoDT", "class": "FieldReplace:record", "axiom": {"subClassOf": ["dyadic updating operation"]}, "datatype": "Type4", "TCQ": ["What higher-level operation types encompass FieldReplace:record?", "Is FieldReplace:record categorized under the group of dyadic updating operations?", "Which dyadic updating operation subclasses include FieldReplace:record?"], "VCQ": ["Is FieldReplace:record categorized under the group of dyadic updating operations?", "Which dyadic updating operation subclasses include FieldReplace:record?", "What higher-level operation types encompass FieldReplace:record?"], "Taxiom": "None", "CQ": [{"axiom": "FieldReplace:record subClassOf dyadic updating operation", "CQ": ["Is FieldReplace:record categorized under the group of dyadic updating operations?", "Which dyadic updating operation subclasses include FieldReplace:record?", "What higher-level operation types encompass FieldReplace:record?"]}]}
{"ontology": "OntoDT", "class": "difference operation", "axiom": {"subClassOf": ["dyadic operation"]}, "datatype": "Type4", "TCQ": ["Which operations are classified as more specific types under dyadic operations, including difference operations?", "Does the class of difference operations fall within the broader group of dyadic operations?", "What broader operation categories encompass the difference operation?"], "VCQ": ["Does the class of difference operations fall within the broader group of dyadic operations?", "Which operations are classified as more specific types under dyadic operations, including difference operations?", "What broader operation categories encompass the difference operation?"], "Taxiom": "None", "CQ": [{"axiom": "difference operation subClassOf dyadic operation", "CQ": ["Does the class of difference operations fall within the broader group of dyadic operations?", "Which operations are classified as more specific types under dyadic operations, including difference operations?", "What broader operation categories encompass the difference operation?"]}]}
{"ontology": "OntoDT", "class": "dyadic select operation", "axiom": {"subClassOf": ["dyadic operation"]}, "datatype": "Type4", "TCQ": ["Is every dyadic select operation also classified as a dyadic operation?", "Which specialized operations fall under the category of dyadic operation, including dyadic select operation?", "To what broader classes does dyadic select operation belong within the operation hierarchy?"], "VCQ": ["Is every dyadic select operation also classified as a dyadic operation?", "Which specialized operations fall under the category of dyadic operation, including dyadic select operation?", "To what broader classes does dyadic select operation belong within the operation hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "dyadic select operation subClassOf dyadic operation", "CQ": ["Is every dyadic select operation also classified as a dyadic operation?", "Which specialized operations fall under the category of dyadic operation, including dyadic select operation?", "To what broader classes does dyadic select operation belong within the operation hierarchy?"]}]}
{"ontology": "OntoDT", "class": "dyadic aritmetic operation", "axiom": {"subClassOf": ["dyadic operation"]}, "datatype": "Type4", "TCQ": ["Is every dyadic arithmetic operation classified under dyadic operation?", "Which broader classes include dyadic arithmetic operation within their hierarchy?", "What other subclasses fall under dyadic operation alongside dyadic arithmetic operation?"], "VCQ": ["Is every dyadic arithmetic operation classified under dyadic operation?", "What other subclasses fall under dyadic operation alongside dyadic arithmetic operation?", "Which broader classes include dyadic arithmetic operation within their hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "dyadic aritmetic operation subClassOf dyadic operation", "CQ": ["Is every dyadic arithmetic operation classified under dyadic operation?", "What other subclasses fall under dyadic operation alongside dyadic arithmetic operation?", "Which broader classes include dyadic arithmetic operation within their hierarchy?"]}]}
{"ontology": "OntoDT", "class": "dyadic logical operation", "axiom": {"subClassOf": ["dyadic operation"]}, "datatype": "Type4", "TCQ": ["Does every dyadic logical operation fall under the category of dyadic operation?", "Which specific operations are classified as subclasses of dyadic operation, including dyadic logical operation?", "What are the broader categories that encompass dyadic logical operation?"], "VCQ": ["Does every dyadic logical operation fall under the category of dyadic operation?", "Which specific operations are classified as subclasses of dyadic operation, including dyadic logical operation?", "What are the broader categories that encompass dyadic logical operation?"], "Taxiom": "None", "CQ": [{"axiom": "dyadic logical operation subClassOf dyadic operation", "CQ": ["Does every dyadic logical operation fall under the category of dyadic operation?", "Which specific operations are classified as subclasses of dyadic operation, including dyadic logical operation?", "What are the broader categories that encompass dyadic logical operation?"]}]}
{"ontology": "OntoDT", "class": "dyadic set operation", "axiom": {"subClassOf": ["dyadic operation"]}, "datatype": "Type4", "TCQ": ["Which specific types fall under the class dyadic operation, such as dyadic set operation?", "What categories are broader than dyadic set operation, including dyadic operation?", "Is every dyadic set operation also classified as a dyadic operation?"], "VCQ": ["Is every dyadic set operation also classified as a dyadic operation?", "What categories are broader than dyadic set operation, including dyadic operation?", "Which specific types fall under the class dyadic operation, such as dyadic set operation?"], "Taxiom": "None", "CQ": [{"axiom": "dyadic set operation subClassOf dyadic operation", "CQ": ["Is every dyadic set operation also classified as a dyadic operation?", "What categories are broader than dyadic set operation, including dyadic operation?", "Which specific types fall under the class dyadic operation, such as dyadic set operation?"]}]}
{"ontology": "OntoDT", "class": "dyadic updating operation", "axiom": {"subClassOf": ["dyadic operation"]}, "datatype": "Type4", "TCQ": ["Under which more general operation classifications does dyadic updating operation fall?", "Which operations are encompassed by the broader class of dyadic operation, including dyadic updating operation?", "Does dyadic updating operation represent a specialized form of dyadic operation?"], "VCQ": ["Does dyadic updating operation represent a specialized form of dyadic operation?", "Which operations are encompassed by the broader class of dyadic operation, including dyadic updating operation?", "Under which more general operation classifications does dyadic updating operation fall?"], "Taxiom": "None", "CQ": [{"axiom": "dyadic updating operation subClassOf dyadic operation", "CQ": ["Does dyadic updating operation represent a specialized form of dyadic operation?", "Which operations are encompassed by the broader class of dyadic operation, including dyadic updating operation?", "Under which more general operation classifications does dyadic updating operation fall?"]}]}
{"ontology": "OntoDT", "class": "dyadic comparison operation", "axiom": {"subClassOf": ["dyadic operation"]}, "datatype": "Type4", "TCQ": ["Which broader categories encompass dyadic comparison operation?", "Are all dyadic comparison operations types of dyadic operations?", "What specific operations are classified under dyadic operation, including dyadic comparison operation?"], "VCQ": ["Are all dyadic comparison operations types of dyadic operations?", "What specific operations are classified under dyadic operation, including dyadic comparison operation?", "Which broader categories encompass dyadic comparison operation?"], "Taxiom": "None", "CQ": [{"axiom": "dyadic comparison operation subClassOf dyadic operation", "CQ": ["Are all dyadic comparison operations types of dyadic operations?", "What specific operations are classified under dyadic operation, including dyadic comparison operation?", "Which broader categories encompass dyadic comparison operation?"]}]}
{"ontology": "OntoDT", "class": "dyadic retrieve operation", "axiom": {"subClassOf": ["dyadic operation"]}, "datatype": "Type4", "TCQ": ["What broader classes does dyadic retrieve operation belong to within the operation hierarchy?", "Which types of operations are more specific than dyadic operation, such as dyadic retrieve operation?", "Does every dyadic retrieve operation fall under the category of dyadic operation?"], "VCQ": ["Does every dyadic retrieve operation fall under the category of dyadic operation?", "Which types of operations are more specific than dyadic operation, such as dyadic retrieve operation?", "What broader classes does dyadic retrieve operation belong to within the operation hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "dyadic retrieve operation subClassOf dyadic operation", "CQ": ["Does every dyadic retrieve operation fall under the category of dyadic operation?", "Which types of operations are more specific than dyadic operation, such as dyadic retrieve operation?", "What broader classes does dyadic retrieve operation belong to within the operation hierarchy?"]}]}
{"ontology": "OntoDT", "class": "equal operation", "axiom": {"subClassOf": ["dyadic comparison operation"]}, "datatype": "Type4", "TCQ": ["What operations fall under the category of dyadic comparison operation, such as equal operation?", "Is equal operation classified as a type of dyadic comparison operation?", "To which broader operational classes does equal operation belong?"], "VCQ": ["Is equal operation classified as a type of dyadic comparison operation?", "What operations fall under the category of dyadic comparison operation, such as equal operation?", "To which broader operational classes does equal operation belong?"], "Taxiom": "None", "CQ": [{"axiom": "equal operation subClassOf dyadic comparison operation", "CQ": ["Is equal operation classified as a type of dyadic comparison operation?", "What operations fall under the category of dyadic comparison operation, such as equal operation?", "To which broader operational classes does equal operation belong?"]}]}
{"ontology": "OntoDT", "class": "in order operation", "axiom": {"subClassOf": ["dyadic comparison operation"]}, "datatype": "Type4", "TCQ": ["Which operations are recognized as specializations of dyadic comparison operation, such as in order operation?", "What broader operation types encompass in order operation?", "Does in order operation fall under the category of dyadic comparison operation?"], "VCQ": ["Does in order operation fall under the category of dyadic comparison operation?", "Which operations are recognized as specializations of dyadic comparison operation, such as in order operation?", "What broader operation types encompass in order operation?"], "Taxiom": "None", "CQ": [{"axiom": "in order operation subClassOf dyadic comparison operation", "CQ": ["Does in order operation fall under the category of dyadic comparison operation?", "Which operations are recognized as specializations of dyadic comparison operation, such as in order operation?", "What broader operation types encompass in order operation?"]}]}
{"ontology": "OntoDT", "class": "isEmpty operation", "axiom": {"subClassOf": ["boolean operation"]}, "datatype": "Type4", "TCQ": ["Are all isEmpty operations classified under the category of boolean operations?", "Which operations are considered specializations of boolean operation, such as isEmpty operation?", "What broader operation categories encompass isEmpty operation within the ontology?"], "VCQ": ["Are all isEmpty operations classified under the category of boolean operations?", "Which operations are considered specializations of boolean operation, such as isEmpty operation?", "What broader operation categories encompass isEmpty operation within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "isEmpty operation subClassOf boolean operation", "CQ": ["Are all isEmpty operations classified under the category of boolean operations?", "Which operations are considered specializations of boolean operation, such as isEmpty operation?", "What broader operation categories encompass isEmpty operation within the ontology?"]}]}
{"ontology": "OntoDT", "class": "nonNegative operation", "axiom": {"subClassOf": ["boolean operation"]}, "datatype": "Type4", "TCQ": ["Which operations are more specific instances of boolean operation, such as nonNegative operation?", "To which broader operation types does nonNegative operation belong?", "Is every nonNegative operation encompassed within the category of boolean operation?"], "VCQ": ["Is every nonNegative operation encompassed within the category of boolean operation?", "Which operations are more specific instances of boolean operation, such as nonNegative operation?", "To which broader operation types does nonNegative operation belong?"], "Taxiom": "None", "CQ": [{"axiom": "nonNegative operation subClassOf boolean operation", "CQ": ["Is every nonNegative operation encompassed within the category of boolean operation?", "Which operations are more specific instances of boolean operation, such as nonNegative operation?", "To which broader operation types does nonNegative operation belong?"]}]}
{"ontology": "OntoDT", "class": "SetOf:set", "axiom": {"subClassOf": ["boolean operation"]}, "datatype": "Type4", "TCQ": ["Does SetOf:set represent a subclass within the domain of boolean operation?", "Which boolean operations include SetOf:set as a more specific category?", "What are the more general classes that SetOf:set belongs to?"], "VCQ": ["Which boolean operations include SetOf:set as a more specific category?", "What are the more general classes that SetOf:set belongs to?", "Does SetOf:set represent a subclass within the domain of boolean operation?"], "Taxiom": "None", "CQ": [{"axiom": "SetOf:set subClassOf boolean operation", "CQ": ["Which boolean operations include SetOf:set as a more specific category?", "What are the more general classes that SetOf:set belongs to?", "Does SetOf:set represent a subclass within the domain of boolean operation?"]}]}
{"ontology": "OntoDT", "class": "negate operation", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["Which types of operations are classified as specializations of monadic operation, including negate operation?", "To which higher-level operation classes does negate operation pertain?", "Is every negate operation encompassed within the category of monadic operations?"], "VCQ": ["Is every negate operation encompassed within the category of monadic operations?", "Which types of operations are classified as specializations of monadic operation, including negate operation?", "To which higher-level operation classes does negate operation pertain?"], "Taxiom": "None", "CQ": [{"axiom": "negate operation subClassOf monadic operation", "CQ": ["Is every negate operation encompassed within the category of monadic operations?", "Which types of operations are classified as specializations of monadic operation, including negate operation?", "To which higher-level operation classes does negate operation pertain?"]}]}
{"ontology": "OntoDT", "class": "promote operation", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["What specific operations are subclasses of monadic operation, including promote operation?", "Which broader categories encompass promote operation?", "Does promote operation fall under the general category of monadic operation?"], "VCQ": ["Does promote operation fall under the general category of monadic operation?", "What specific operations are subclasses of monadic operation, including promote operation?", "Which broader categories encompass promote operation?"], "Taxiom": "None", "CQ": [{"axiom": "promote operation subClassOf monadic operation", "CQ": ["Does promote operation fall under the general category of monadic operation?", "What specific operations are subclasses of monadic operation, including promote operation?", "Which broader categories encompass promote operation?"]}]}
{"ontology": "OntoDT", "class": "serialize operation", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["What specific types of monadic operation include serialize operation as a subclass?", "Which general operation categories encompass serialize operation?", "Is serialize operation classified under the broader category of monadic operation?"], "VCQ": ["Is serialize operation classified under the broader category of monadic operation?", "What specific types of monadic operation include serialize operation as a subclass?", "Which general operation categories encompass serialize operation?"], "Taxiom": "None", "CQ": [{"axiom": "serialize operation subClassOf monadic operation", "CQ": ["Is serialize operation classified under the broader category of monadic operation?", "What specific types of monadic operation include serialize operation as a subclass?", "Which general operation categories encompass serialize operation?"]}]}
{"ontology": "OntoDT", "class": "successor operation", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["What higher-level operation categories does successor operation belong to?", "Which specific operations fall under the more general category of monadic operation, such as successor operation?", "Is successor operation included in the set of operations classified as monadic operation?"], "VCQ": ["Is successor operation included in the set of operations classified as monadic operation?", "Which specific operations fall under the more general category of monadic operation, such as successor operation?", "What higher-level operation categories does successor operation belong to?"], "Taxiom": "None", "CQ": [{"axiom": "successor operation subClassOf monadic operation", "CQ": ["Is successor operation included in the set of operations classified as monadic operation?", "Which specific operations fall under the more general category of monadic operation, such as successor operation?", "What higher-level operation categories does successor operation belong to?"]}]}
{"ontology": "OntoDT", "class": "Cast:choice", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["To which more general operation classes does Cast:choice belong?", "Which operations are classified as specializations of monadic operation, such as Cast:choice?", "Does Cast:choice fall under the category of monadic operation?"], "VCQ": ["Does Cast:choice fall under the category of monadic operation?", "Which operations are classified as specializations of monadic operation, such as Cast:choice?", "To which more general operation classes does Cast:choice belong?"], "Taxiom": "None", "CQ": [{"axiom": "Cast:choice subClassOf monadic operation", "CQ": ["Does Cast:choice fall under the category of monadic operation?", "Which operations are classified as specializations of monadic operation, such as Cast:choice?", "To which more general operation classes does Cast:choice belong?"]}]}
{"ontology": "OntoDT", "class": "Dereference:pointer", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["What general operation categories encompass Dereference:pointer?", "Is Dereference:pointer categorized as a type of monadic operation?", "Which specific operations are subclasses of monadic operation, such as Dereference:pointer?"], "VCQ": ["Is Dereference:pointer categorized as a type of monadic operation?", "Which specific operations are subclasses of monadic operation, such as Dereference:pointer?", "What general operation categories encompass Dereference:pointer?"], "Taxiom": "None", "CQ": [{"axiom": "Dereference:pointer subClassOf monadic operation", "CQ": ["Is Dereference:pointer categorized as a type of monadic operation?", "Which specific operations are subclasses of monadic operation, such as Dereference:pointer?", "What general operation categories encompass Dereference:pointer?"]}]}
{"ontology": "OntoDT", "class": "Discriminant:choice", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["Which concepts are more specifically classified than monadic operation, for example, Discriminant:choice?", "Is Discriminant:choice categorized under the broader concept of monadic operation?", "To what higher-level operational categories does Discriminant:choice belong?"], "VCQ": ["Is Discriminant:choice categorized under the broader concept of monadic operation?", "Which concepts are more specifically classified than monadic operation, for example, Discriminant:choice?", "To what higher-level operational categories does Discriminant:choice belong?"], "Taxiom": "None", "CQ": [{"axiom": "Discriminant:choice subClassOf monadic operation", "CQ": ["Is Discriminant:choice categorized under the broader concept of monadic operation?", "Which concepts are more specifically classified than monadic operation, for example, Discriminant:choice?", "To what higher-level operational categories does Discriminant:choice belong?"]}]}
{"ontology": "OntoDT", "class": "Extend:time&date", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["What broader category does Extend:time&date belong to within the classification of operations?", "Which operations are included as subclasses under monadic operation, such as Extend:time&date?", "Is Extend:time&date a specific type of monadic operation?"], "VCQ": ["Is Extend:time&date a specific type of monadic operation?", "Which operations are included as subclasses under monadic operation, such as Extend:time&date?", "What broader category does Extend:time&date belong to within the classification of operations?"], "Taxiom": "None", "CQ": [{"axiom": "Extend:time&date subClassOf monadic operation", "CQ": ["Is Extend:time&date a specific type of monadic operation?", "Which operations are included as subclasses under monadic operation, such as Extend:time&date?", "What broader category does Extend:time&date belong to within the classification of operations?"]}]}
{"ontology": "OntoDT", "class": "Invoke:procedure", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["What specific operations are included as subclasses of monadic operation, such as Invoke:procedure?", "Is Invoke:procedure categorized under the broader class of monadic operation?", "Which more general concepts is Invoke:procedure classified under within the ontology?"], "VCQ": ["Is Invoke:procedure categorized under the broader class of monadic operation?", "What specific operations are included as subclasses of monadic operation, such as Invoke:procedure?", "Which more general concepts is Invoke:procedure classified under within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Invoke:procedure subClassOf monadic operation", "CQ": ["Is Invoke:procedure categorized under the broader class of monadic operation?", "What specific operations are included as subclasses of monadic operation, such as Invoke:procedure?", "Which more general concepts is Invoke:procedure classified under within the ontology?"]}]}
{"ontology": "OntoDT", "class": "Not:boolean", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["What are the more general operation types that encompass Not:boolean?", "Does Not:boolean fall under the category of monadic operation?", "Which operations are classified as subclasses of monadic operation, including Not:boolean?"], "VCQ": ["Does Not:boolean fall under the category of monadic operation?", "Which operations are classified as subclasses of monadic operation, including Not:boolean?", "What are the more general operation types that encompass Not:boolean?"], "Taxiom": "None", "CQ": [{"axiom": "Not:boolean subClassOf monadic operation", "CQ": ["Does Not:boolean fall under the category of monadic operation?", "Which operations are classified as subclasses of monadic operation, including Not:boolean?", "What are the more general operation types that encompass Not:boolean?"]}]}
{"ontology": "OntoDT", "class": "monadic aritmetic operation", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["Is monadic arithmetic operation a specific kind of monadic operation?", "Which operations are direct specializations of monadic operation, such as monadic arithmetic operation?", "To which broader categories does monadic arithmetic operation belong?"], "VCQ": ["Is monadic arithmetic operation a specific kind of monadic operation?", "Which operations are direct specializations of monadic operation, such as monadic arithmetic operation?", "To which broader categories does monadic arithmetic operation belong?"], "Taxiom": "None", "CQ": [{"axiom": "monadic aritmetic operation subClassOf monadic operation", "CQ": ["Is monadic arithmetic operation a specific kind of monadic operation?", "Which operations are direct specializations of monadic operation, such as monadic arithmetic operation?", "To which broader categories does monadic arithmetic operation belong?"]}]}
{"ontology": "OntoDT", "class": "monadic retrive operation", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["Which specific operations are encompassed by the category monadic operation, such as monadic retrive operation?", "Is monadic retrive operation classified within the broader group of monadic operation?", "What more general types does monadic retrive operation fall under?"], "VCQ": ["Is monadic retrive operation classified within the broader group of monadic operation?", "Which specific operations are encompassed by the category monadic operation, such as monadic retrive operation?", "What more general types does monadic retrive operation fall under?"], "Taxiom": "None", "CQ": [{"axiom": "monadic retrive operation subClassOf monadic operation", "CQ": ["Is monadic retrive operation classified within the broader group of monadic operation?", "Which specific operations are encompassed by the category monadic operation, such as monadic retrive operation?", "What more general types does monadic retrive operation fall under?"]}]}
{"ontology": "OntoDT", "class": "map operation", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["What more general types include map operation as a member within their hierarchy?", "Does map operation fall under the category of monadic operation?", "Which operations are classified as specializations of monadic operation, such as map operation?"], "VCQ": ["Does map operation fall under the category of monadic operation?", "Which operations are classified as specializations of monadic operation, such as map operation?", "What more general types include map operation as a member within their hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "map operation subClassOf monadic operation", "CQ": ["Does map operation fall under the category of monadic operation?", "Which operations are classified as specializations of monadic operation, such as map operation?", "What more general types include map operation as a member within their hierarchy?"]}]}
{"ontology": "OntoDT", "class": "boolean operation", "axiom": {"subClassOf": ["monadic operation"]}, "datatype": "Type4", "TCQ": ["Into which broader operation classes does boolean operation fall?", "Which operation types are defined as more specific forms within monadic operation, such as boolean operation?", "Is every boolean operation classified as a type of monadic operation?"], "VCQ": ["Is every boolean operation classified as a type of monadic operation?", "Which operation types are defined as more specific forms within monadic operation, such as boolean operation?", "Into which broader operation classes does boolean operation fall?"], "Taxiom": "None", "CQ": [{"axiom": "boolean operation subClassOf monadic operation", "CQ": ["Is every boolean operation classified as a type of monadic operation?", "Which operation types are defined as more specific forms within monadic operation, such as boolean operation?", "Into which broader operation classes does boolean operation fall?"]}]}
{"ontology": "OntoDT", "class": "reciprocial operation", "axiom": {"subClassOf": ["monadic aritmetic operation"]}, "datatype": "Type4", "TCQ": ["Is every reciprocial operation classified under monadic aritmetic operation?", "What types of operations are subsumed by monadic aritmetic operation, specifically including reciprocial operation?", "Which broader arithmetic operation categories encompass reciprocial operation?"], "VCQ": ["Is every reciprocial operation classified under monadic aritmetic operation?", "What types of operations are subsumed by monadic aritmetic operation, specifically including reciprocial operation?", "Which broader arithmetic operation categories encompass reciprocial operation?"], "Taxiom": "None", "CQ": [{"axiom": "reciprocial operation subClassOf monadic aritmetic operation", "CQ": ["Is every reciprocial operation classified under monadic aritmetic operation?", "What types of operations are subsumed by monadic aritmetic operation, specifically including reciprocial operation?", "Which broader arithmetic operation categories encompass reciprocial operation?"]}]}
{"ontology": "OntoDT", "class": "round operation", "axiom": {"subClassOf": ["monadic aritmetic operation"]}, "datatype": "Type4", "TCQ": ["Is round operation categorized as a type of monadic aritmetic operation?", "To which broader operation classes does round operation conceptually relate?", "Which operations are classified under monadic aritmetic operation, including round operation?"], "VCQ": ["Is round operation categorized as a type of monadic aritmetic operation?", "Which operations are classified under monadic aritmetic operation, including round operation?", "To which broader operation classes does round operation conceptually relate?"], "Taxiom": "None", "CQ": [{"axiom": "round operation subClassOf monadic aritmetic operation", "CQ": ["Is round operation categorized as a type of monadic aritmetic operation?", "Which operations are classified under monadic aritmetic operation, including round operation?", "To which broader operation classes does round operation conceptually relate?"]}]}
{"ontology": "OntoDT", "class": "SquareRoot:complex", "axiom": {"subClassOf": ["monadic aritmetic operation"]}, "datatype": "Type4", "TCQ": ["Which operations are subclasses of monadic aritmetic operation, such as SquareRoot:complex?", "Is SquareRoot:complex classified as a specific kind of monadic aritmetic operation?", "What more general categories encompass SquareRoot:complex in the context of arithmetic operations?"], "VCQ": ["Is SquareRoot:complex classified as a specific kind of monadic aritmetic operation?", "Which operations are subclasses of monadic aritmetic operation, such as SquareRoot:complex?", "What more general categories encompass SquareRoot:complex in the context of arithmetic operations?"], "Taxiom": "None", "CQ": [{"axiom": "SquareRoot:complex subClassOf monadic aritmetic operation", "CQ": ["Is SquareRoot:complex classified as a specific kind of monadic aritmetic operation?", "Which operations are subclasses of monadic aritmetic operation, such as SquareRoot:complex?", "What more general categories encompass SquareRoot:complex in the context of arithmetic operations?"]}]}
{"ontology": "OntoDT", "class": "monadic select operation", "axiom": {"subClassOf": ["monadic retrive operation"]}, "datatype": "Type4", "TCQ": ["To which parent operation class does monadic select operation belong?", "Which operations fall under the specialization of monadic retrive operation, such as monadic select operation?", "Is monadic select operation categorized as a kind of monadic retrive operation?"], "VCQ": ["Is monadic select operation categorized as a kind of monadic retrive operation?", "Which operations fall under the specialization of monadic retrive operation, such as monadic select operation?", "To which parent operation class does monadic select operation belong?"], "Taxiom": "None", "CQ": [{"axiom": "monadic select operation subClassOf monadic retrive operation", "CQ": ["Is monadic select operation categorized as a kind of monadic retrive operation?", "Which operations fall under the specialization of monadic retrive operation, such as monadic select operation?", "To which parent operation class does monadic select operation belong?"]}]}
{"ontology": "OntoDT", "class": "AttributeFunctionInvocation:class", "axiom": {"subClassOf": ["monadic retrive operation"]}, "datatype": "Type4", "TCQ": ["Is AttributeFunctionInvocation:class classified under the general category of monadic retrieve operation?", "Which specialized forms of monadic retrive operation exist, including AttributeFunctionInvocation:class?", "What broader operation categories encompass AttributeFunctionInvocation:class?"], "VCQ": ["Is AttributeFunctionInvocation:class classified under the general category of monadic retrieve operation?", "Which specialized forms of monadic retrive operation exist, including AttributeFunctionInvocation:class?", "What broader operation categories encompass AttributeFunctionInvocation:class?"], "Taxiom": "None", "CQ": [{"axiom": "AttributeFunctionInvocation:class subClassOf monadic retrive operation", "CQ": ["Is AttributeFunctionInvocation:class classified under the general category of monadic retrieve operation?", "Which specialized forms of monadic retrive operation exist, including AttributeFunctionInvocation:class?", "What broader operation categories encompass AttributeFunctionInvocation:class?"]}]}
{"ontology": "OntoDT", "class": "AttributeSelect:class", "axiom": {"subClassOf": ["monadic retrive operation"]}, "datatype": "Type4", "TCQ": ["Which operations encompass AttributeSelect:class as a specific type within monadic retrieve operations?", "Is AttributeSelect:class classified under monadic retrieve operation?", "To what broader categories related to retrieval does AttributeSelect:class belong?"], "VCQ": ["Is AttributeSelect:class classified under monadic retrieve operation?", "Which operations encompass AttributeSelect:class as a specific type within monadic retrieve operations?", "To what broader categories related to retrieval does AttributeSelect:class belong?"], "Taxiom": "None", "CQ": [{"axiom": "AttributeSelect:class subClassOf monadic retrive operation", "CQ": ["Is AttributeSelect:class classified under monadic retrieve operation?", "Which operations encompass AttributeSelect:class as a specific type within monadic retrieve operations?", "To what broader categories related to retrieval does AttributeSelect:class belong?"]}]}
{"ontology": "OntoDT", "class": "FieldSelect:record", "axiom": {"subClassOf": ["monadic retrive operation"]}, "datatype": "Type4", "TCQ": ["What more general operations does FieldSelect:record inherit properties from?", "Is FieldSelect:record classified as a specialized form of monadic retrive operation?", "Which monadic retrive operation subclasses encompass FieldSelect:record?"], "VCQ": ["Is FieldSelect:record classified as a specialized form of monadic retrive operation?", "Which monadic retrive operation subclasses encompass FieldSelect:record?", "What more general operations does FieldSelect:record inherit properties from?"], "Taxiom": "None", "CQ": [{"axiom": "FieldSelect:record subClassOf monadic retrive operation", "CQ": ["Is FieldSelect:record classified as a specialized form of monadic retrive operation?", "Which monadic retrive operation subclasses encompass FieldSelect:record?", "What more general operations does FieldSelect:record inherit properties from?"]}]}
{"ontology": "OntoDT", "class": "Head:sequence", "axiom": {"subClassOf": ["monadic retrive operation"]}, "datatype": "Type4", "TCQ": ["Does Head:sequence fall under the broader classification of monadic retrive operation?", "Which operations are considered more specific variants of monadic retrive operation, such as Head:sequence?", "To which general operational categories does Head:sequence belong?"], "VCQ": ["Does Head:sequence fall under the broader classification of monadic retrive operation?", "Which operations are considered more specific variants of monadic retrive operation, such as Head:sequence?", "To which general operational categories does Head:sequence belong?"], "Taxiom": "None", "CQ": [{"axiom": "Head:sequence subClassOf monadic retrive operation", "CQ": ["Does Head:sequence fall under the broader classification of monadic retrive operation?", "Which operations are considered more specific variants of monadic retrive operation, such as Head:sequence?", "To which general operational categories does Head:sequence belong?"]}]}
{"ontology": "OntoDT", "class": "Tail:sequence", "axiom": {"subClassOf": ["monadic retrive operation"]}, "datatype": "Type4", "TCQ": ["What broader operation categories include Tail:sequence?", "Does Tail:sequence fall under the category of monadic retrive operation?", "Which operations are considered more specific forms of monadic retrive operation, such as Tail:sequence?"], "VCQ": ["Does Tail:sequence fall under the category of monadic retrive operation?", "Which operations are considered more specific forms of monadic retrive operation, such as Tail:sequence?", "What broader operation categories include Tail:sequence?"], "Taxiom": "None", "CQ": [{"axiom": "Tail:sequence subClassOf monadic retrive operation", "CQ": ["Does Tail:sequence fall under the category of monadic retrive operation?", "Which operations are considered more specific forms of monadic retrive operation, such as Tail:sequence?", "What broader operation categories include Tail:sequence?"]}]}
{"ontology": "OntoDT", "class": "countable", "axiom": {"subClassOf": ["cardinality"]}, "datatype": "Type4", "TCQ": ["Is every countable entity also classified under cardinality?", "Which types are included under the broader category of cardinality, including countable?", "To which general concepts does the class countable belong?"], "VCQ": ["Is every countable entity also classified under cardinality?", "Which types are included under the broader category of cardinality, including countable?", "To which general concepts does the class countable belong?"], "Taxiom": "None", "CQ": [{"axiom": "countable subClassOf cardinality", "CQ": ["Is every countable entity also classified under cardinality?", "Which types are included under the broader category of cardinality, including countable?", "To which general concepts does the class countable belong?"]}]}
{"ontology": "OntoDT", "class": "finite", "axiom": {"subClassOf": ["cardinality"]}, "datatype": "Type4", "TCQ": ["Is finite categorized under the broader concept of cardinality?", "What are the more general classes associated with finite?", "Which subtypes are encompassed by cardinality, including finite?"], "VCQ": ["Is finite categorized under the broader concept of cardinality?", "Which subtypes are encompassed by cardinality, including finite?", "What are the more general classes associated with finite?"], "Taxiom": "None", "CQ": [{"axiom": "finite subClassOf cardinality", "CQ": ["Is finite categorized under the broader concept of cardinality?", "Which subtypes are encompassed by cardinality, including finite?", "What are the more general classes associated with finite?"]}]}
{"ontology": "OntoDT", "class": "uncountable", "axiom": {"subClassOf": ["cardinality"]}, "datatype": "Type4", "TCQ": ["Does uncountable represent a more specific form under the general concept of cardinality?", "Into which broader classes does uncountable fall within the cardinality hierarchy?", "What types of cardinality include uncountable as a subclass?"], "VCQ": ["Does uncountable represent a more specific form under the general concept of cardinality?", "What types of cardinality include uncountable as a subclass?", "Into which broader classes does uncountable fall within the cardinality hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "uncountable subClassOf cardinality", "CQ": ["Does uncountable represent a more specific form under the general concept of cardinality?", "What types of cardinality include uncountable as a subclass?", "Into which broader classes does uncountable fall within the cardinality hierarchy?"]}]}
{"ontology": "OntoDT", "class": "bounded below", "axiom": {"subClassOf": ["bounded"]}, "datatype": "Type4", "TCQ": ["Which concepts are more specific than bounded, such as bounded below?", "Is every instance of bounded below also an instance of bounded?", "What broader categories does bounded below belong to within the ontology?"], "VCQ": ["Is every instance of bounded below also an instance of bounded?", "Which concepts are more specific than bounded, such as bounded below?", "What broader categories does bounded below belong to within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "bounded below subClassOf bounded", "CQ": ["Is every instance of bounded below also an instance of bounded?", "Which concepts are more specific than bounded, such as bounded below?", "What broader categories does bounded below belong to within the ontology?"]}]}
{"ontology": "OntoDT", "class": "unbounded below", "axiom": {"subClassOf": ["unbounded"]}, "datatype": "Type4", "TCQ": ["What specific concepts are considered subclasses of unbounded, such as unbounded below?", "Is unbounded a broader class that encompasses unbounded below?", "Which higher-level categories include unbounded below?"], "VCQ": ["Is unbounded a broader class that encompasses unbounded below?", "What specific concepts are considered subclasses of unbounded, such as unbounded below?", "Which higher-level categories include unbounded below?"], "Taxiom": "None", "CQ": [{"axiom": "unbounded below subClassOf unbounded", "CQ": ["Is unbounded a broader class that encompasses unbounded below?", "What specific concepts are considered subclasses of unbounded, such as unbounded below?", "Which higher-level categories include unbounded below?"]}]}
{"ontology": "OntoDT", "class": "unbounded", "axiom": {"subClassOf": ["boundedness"]}, "datatype": "Type4", "TCQ": ["Which subclasses fall under the category of boundedness, including unbounded?", "To which more general categories does unbounded belong?", "Is unbounded a specialized concept within the broader class of boundedness?"], "VCQ": ["Is unbounded a specialized concept within the broader class of boundedness?", "Which subclasses fall under the category of boundedness, including unbounded?", "To which more general categories does unbounded belong?"], "Taxiom": "None", "CQ": [{"axiom": "unbounded subClassOf boundedness", "CQ": ["Is unbounded a specialized concept within the broader class of boundedness?", "Which subclasses fall under the category of boundedness, including unbounded?", "To which more general categories does unbounded belong?"]}]}
{"ontology": "OntoDT", "class": "exact", "axiom": {"subClassOf": ["exactness"]}, "datatype": "Type4", "TCQ": ["Which classes are subsumed by exactness, including exact?", "Under which broader categories does exact fall within the ontology?", "What is the hierarchical connection between exact and exactness?"], "VCQ": ["What is the hierarchical connection between exact and exactness?", "Which classes are subsumed by exactness, including exact?", "Under which broader categories does exact fall within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "exact subClassOf exactness", "CQ": ["What is the hierarchical connection between exact and exactness?", "Which classes are subsumed by exactness, including exact?", "Under which broader categories does exact fall within the ontology?"]}]}
{"ontology": "OntoDT", "class": "non-numeric", "axiom": {"subClassOf": ["numericalness"]}, "datatype": "Type4", "TCQ": ["Does non-numeric fall under the broader classification of numericalness?", "What are the broader categories that non-numeric is a part of within this ontology?", "Which subclasses does numericalness encompass, specifically including non-numeric?"], "VCQ": ["Does non-numeric fall under the broader classification of numericalness?", "Which subclasses does numericalness encompass, specifically including non-numeric?", "What are the broader categories that non-numeric is a part of within this ontology?"], "Taxiom": "None", "CQ": [{"axiom": "non-numeric subClassOf numericalness", "CQ": ["Does non-numeric fall under the broader classification of numericalness?", "Which subclasses does numericalness encompass, specifically including non-numeric?", "What are the broader categories that non-numeric is a part of within this ontology?"]}]}
{"ontology": "OntoDT", "class": "non-ordered", "axiom": {"subClassOf": ["order"]}, "datatype": "Type4", "TCQ": ["Which broader types encompass non-ordered within the ontology structure?", "What categories fall under order as subclasses, including non-ordered?", "Can non-ordered be classified under the concept of order?"], "VCQ": ["Can non-ordered be classified under the concept of order?", "What categories fall under order as subclasses, including non-ordered?", "Which broader types encompass non-ordered within the ontology structure?"], "Taxiom": "None", "CQ": [{"axiom": "non-ordered subClassOf order", "CQ": ["Can non-ordered be classified under the concept of order?", "What categories fall under order as subclasses, including non-ordered?", "Which broader types encompass non-ordered within the ontology structure?"]}]}
{"ontology": "OntoDT", "class": "Add:complex", "axiom": {"subClassOf": ["add operation"]}, "datatype": "Type4", "TCQ": ["Which types of add operation include Add:complex as a specialization?", "What broader classes encompass Add:complex within the ontology?", "Does Add:complex fall under the category of add operation?"], "VCQ": ["Does Add:complex fall under the category of add operation?", "Which types of add operation include Add:complex as a specialization?", "What broader classes encompass Add:complex within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Add:complex subClassOf add operation", "CQ": ["Does Add:complex fall under the category of add operation?", "Which types of add operation include Add:complex as a specialization?", "What broader classes encompass Add:complex within the ontology?"]}]}
{"ontology": "OntoDT", "class": "Add:integer", "axiom": {"subClassOf": ["add operation"]}, "datatype": "Type4", "TCQ": ["Which broader groups encompass Add:integer within the classification hierarchy?", "What operations are more specific than add operation, including Add:integer?", "Is Add:integer categorized under add operation in the ontology?"], "VCQ": ["Is Add:integer categorized under add operation in the ontology?", "What operations are more specific than add operation, including Add:integer?", "Which broader groups encompass Add:integer within the classification hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "Add:integer subClassOf add operation", "CQ": ["Is Add:integer categorized under add operation in the ontology?", "What operations are more specific than add operation, including Add:integer?", "Which broader groups encompass Add:integer within the classification hierarchy?"]}]}
{"ontology": "OntoDT", "class": "Add:rational", "axiom": {"subClassOf": ["add operation"]}, "datatype": "Type4", "TCQ": ["What kinds of add operation exist as subclasses, such as Add:rational?", "Is add operation a broader class encompassing Add:rational?", "Which general classification does Add:rational fall under in the context of operations?"], "VCQ": ["Is add operation a broader class encompassing Add:rational?", "What kinds of add operation exist as subclasses, such as Add:rational?", "Which general classification does Add:rational fall under in the context of operations?"], "Taxiom": "None", "CQ": [{"axiom": "Add:rational subClassOf add operation", "CQ": ["Is add operation a broader class encompassing Add:rational?", "What kinds of add operation exist as subclasses, such as Add:rational?", "Which general classification does Add:rational fall under in the context of operations?"]}]}
{"ontology": "OntoDT", "class": "Add:real", "axiom": {"subClassOf": ["add operation"]}, "datatype": "Type4", "TCQ": ["What operations fall under the subclass Add:real within add operation?", "Is Add:real categorized as a type of add operation?", "Which parent concepts encompass Add:real?"], "VCQ": ["Is Add:real categorized as a type of add operation?", "What operations fall under the subclass Add:real within add operation?", "Which parent concepts encompass Add:real?"], "Taxiom": "None", "CQ": [{"axiom": "Add:real subClassOf add operation", "CQ": ["Is Add:real categorized as a type of add operation?", "What operations fall under the subclass Add:real within add operation?", "Which parent concepts encompass Add:real?"]}]}
{"ontology": "OntoDT", "class": "Add:scaled", "axiom": {"subClassOf": ["add operation"]}, "datatype": "Type4", "TCQ": ["Is add:scaled categorized as a specialized form of add operation?", "What broader operations include add:scaled as a member?", "Which subtypes are encompassed by add operation, including add:scaled?"], "VCQ": ["Is add:scaled categorized as a specialized form of add operation?", "Which subtypes are encompassed by add operation, including add:scaled?", "What broader operations include add:scaled as a member?"], "Taxiom": "None", "CQ": [{"axiom": "Add:scaled subClassOf add operation", "CQ": ["Is add:scaled categorized as a specialized form of add operation?", "Which subtypes are encompassed by add operation, including add:scaled?", "What broader operations include add:scaled as a member?"]}]}
{"ontology": "OntoDT", "class": "Delete:table", "axiom": {"subClassOf": ["delete operation"]}, "datatype": "Type4", "TCQ": ["Is Delete:table categorized under delete operation?", "Which operations are classified as subtypes of delete operation, such as Delete:table?", "What broader operation category encompasses Delete:table?"], "VCQ": ["Is Delete:table categorized under delete operation?", "Which operations are classified as subtypes of delete operation, such as Delete:table?", "What broader operation category encompasses Delete:table?"], "Taxiom": "None", "CQ": [{"axiom": "Delete:table subClassOf delete operation", "CQ": ["Is Delete:table categorized under delete operation?", "Which operations are classified as subtypes of delete operation, such as Delete:table?", "What broader operation category encompasses Delete:table?"]}]}
{"ontology": "OntoDT", "class": "Difference:time&date", "axiom": {"subClassOf": ["difference operation"]}, "datatype": "Type4", "TCQ": ["Is Difference:time&date categorized as a type of difference operation?", "Which higher-level operations does Difference:time&date fall under within the ontology?", "What difference operations have Difference:time&date as a more specific subclass?"], "VCQ": ["Is Difference:time&date categorized as a type of difference operation?", "What difference operations have Difference:time&date as a more specific subclass?", "Which higher-level operations does Difference:time&date fall under within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Difference:time&date subClassOf difference operation", "CQ": ["Is Difference:time&date categorized as a type of difference operation?", "What difference operations have Difference:time&date as a more specific subclass?", "Which higher-level operations does Difference:time&date fall under within the ontology?"]}]}
{"ontology": "OntoDT", "class": "Select:table", "axiom": {"subClassOf": ["dyadic select operation"]}, "datatype": "Type4", "TCQ": ["Which higher-level categories does Select:table fall under within the ontology?", "Is Select:table classified as a type of dyadic select operation?", "What are the specific select operations categorized under dyadic select operation, such as Select:table?"], "VCQ": ["Is Select:table classified as a type of dyadic select operation?", "What are the specific select operations categorized under dyadic select operation, such as Select:table?", "Which higher-level categories does Select:table fall under within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Select:table subClassOf dyadic select operation", "CQ": ["Is Select:table classified as a type of dyadic select operation?", "What are the specific select operations categorized under dyadic select operation, such as Select:table?", "Which higher-level categories does Select:table fall under within the ontology?"]}]}
{"ontology": "OntoDT", "class": "Equal:array", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which operations are specified as subclasses within equal operation?", "Is Equal:array classified under equal operation in the ontology?", "What broader operation categories include Equal:array as a specialized form?"], "VCQ": ["Is Equal:array classified under equal operation in the ontology?", "Which operations are specified as subclasses within equal operation?", "What broader operation categories include Equal:array as a specialized form?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:array subClassOf equal operation", "CQ": ["Is Equal:array classified under equal operation in the ontology?", "Which operations are specified as subclasses within equal operation?", "What broader operation categories include Equal:array as a specialized form?"]}]}
{"ontology": "OntoDT", "class": "Equal:bag", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which higher-level operation categories encompass Equal:bag?", "Is Equal:bag classified under the category of equal operation?", "What specific operations are subsumed by equal operation, including Equal:bag?"], "VCQ": ["Is Equal:bag classified under the category of equal operation?", "What specific operations are subsumed by equal operation, including Equal:bag?", "Which higher-level operation categories encompass Equal:bag?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:bag subClassOf equal operation", "CQ": ["Is Equal:bag classified under the category of equal operation?", "What specific operations are subsumed by equal operation, including Equal:bag?", "Which higher-level operation categories encompass Equal:bag?"]}]}
{"ontology": "OntoDT", "class": "Equal:boolean", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which concepts are classified as more specific versions under equal operation, including Equal:boolean?", "Into which broader categories can Equal:boolean be grouped?", "Does Equal:boolean represent a specialized type of equal operation?"], "VCQ": ["Does Equal:boolean represent a specialized type of equal operation?", "Which concepts are classified as more specific versions under equal operation, including Equal:boolean?", "Into which broader categories can Equal:boolean be grouped?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:boolean subClassOf equal operation", "CQ": ["Does Equal:boolean represent a specialized type of equal operation?", "Which concepts are classified as more specific versions under equal operation, including Equal:boolean?", "Into which broader categories can Equal:boolean be grouped?"]}]}
{"ontology": "OntoDT", "class": "Equal:character", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Is Equal:character classified as a kind of equal operation?", "What are the parent classes for Equal:character within the ontology?", "Which specific operations fall under the category of equal operation, such as Equal:character?"], "VCQ": ["Is Equal:character classified as a kind of equal operation?", "Which specific operations fall under the category of equal operation, such as Equal:character?", "What are the parent classes for Equal:character within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:character subClassOf equal operation", "CQ": ["Is Equal:character classified as a kind of equal operation?", "Which specific operations fall under the category of equal operation, such as Equal:character?", "What are the parent classes for Equal:character within the ontology?"]}]}
{"ontology": "OntoDT", "class": "Equal:choice", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Is Equal:choice classified under the broader category of equal operation?", "What more general categories encompass Equal:choice within the ontology?", "Which operations are considered specializations of equal operation, including Equal:choice?"], "VCQ": ["Is Equal:choice classified under the broader category of equal operation?", "Which operations are considered specializations of equal operation, including Equal:choice?", "What more general categories encompass Equal:choice within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:choice subClassOf equal operation", "CQ": ["Is Equal:choice classified under the broader category of equal operation?", "Which operations are considered specializations of equal operation, including Equal:choice?", "What more general categories encompass Equal:choice within the ontology?"]}]}
{"ontology": "OntoDT", "class": "Equal:class", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which specific types are classified beneath equal operation, including Equal:class?", "Is Equal:class categorized under equal operation?", "What operations are broader in scope than Equal:class?"], "VCQ": ["Is Equal:class categorized under equal operation?", "What operations are broader in scope than Equal:class?", "Which specific types are classified beneath equal operation, including Equal:class?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:class subClassOf equal operation", "CQ": ["Is Equal:class categorized under equal operation?", "What operations are broader in scope than Equal:class?", "Which specific types are classified beneath equal operation, including Equal:class?"]}]}
{"ontology": "OntoDT", "class": "Equal:complex", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Is Equal:complex categorized under equal operation?", "Which equal operations have more specific types such as Equal:complex?", "What broader operation classes encapsulate Equal:complex?"], "VCQ": ["Is Equal:complex categorized under equal operation?", "Which equal operations have more specific types such as Equal:complex?", "What broader operation classes encapsulate Equal:complex?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:complex subClassOf equal operation", "CQ": ["Is Equal:complex categorized under equal operation?", "Which equal operations have more specific types such as Equal:complex?", "What broader operation classes encapsulate Equal:complex?"]}]}
{"ontology": "OntoDT", "class": "Equal:enumerated", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["To what more general operation classes does Equal:enumerated belong?", "Does Equal:enumerated represent a specialized form of equal operation?", "Which operations are classified as subtypes under equal operation, including Equal:enumerated?"], "VCQ": ["Does Equal:enumerated represent a specialized form of equal operation?", "Which operations are classified as subtypes under equal operation, including Equal:enumerated?", "To what more general operation classes does Equal:enumerated belong?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:enumerated subClassOf equal operation", "CQ": ["Does Equal:enumerated represent a specialized form of equal operation?", "Which operations are classified as subtypes under equal operation, including Equal:enumerated?", "To what more general operation classes does Equal:enumerated belong?"]}]}
{"ontology": "OntoDT", "class": "Equal:integer", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which subclasses are encompassed by equal operation, such as Equal:integer?", "What more general classes include Equal:integer within their hierarchy?", "Is Equal:integer categorized under the broader class of equal operation?"], "VCQ": ["Is Equal:integer categorized under the broader class of equal operation?", "Which subclasses are encompassed by equal operation, such as Equal:integer?", "What more general classes include Equal:integer within their hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:integer subClassOf equal operation", "CQ": ["Is Equal:integer categorized under the broader class of equal operation?", "Which subclasses are encompassed by equal operation, such as Equal:integer?", "What more general classes include Equal:integer within their hierarchy?"]}]}
{"ontology": "OntoDT", "class": "Equal:ordinal", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["What parent operation categories does Equal:ordinal pertain to?", "Does Equal:ordinal fall under the category of equal operation?", "Which specific operations are specialized forms of equal operation, such as Equal:ordinal?"], "VCQ": ["Does Equal:ordinal fall under the category of equal operation?", "Which specific operations are specialized forms of equal operation, such as Equal:ordinal?", "What parent operation categories does Equal:ordinal pertain to?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:ordinal subClassOf equal operation", "CQ": ["Does Equal:ordinal fall under the category of equal operation?", "Which specific operations are specialized forms of equal operation, such as Equal:ordinal?", "What parent operation categories does Equal:ordinal pertain to?"]}]}
{"ontology": "OntoDT", "class": "Equal:pointer", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["What specific operations are subclasses of equal operation, including Equal:pointer?", "To which higher-level operation types does Equal:pointer belong?", "Does Equal:pointer fall under the category of equal operation?"], "VCQ": ["Does Equal:pointer fall under the category of equal operation?", "What specific operations are subclasses of equal operation, including Equal:pointer?", "To which higher-level operation types does Equal:pointer belong?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:pointer subClassOf equal operation", "CQ": ["Does Equal:pointer fall under the category of equal operation?", "What specific operations are subclasses of equal operation, including Equal:pointer?", "To which higher-level operation types does Equal:pointer belong?"]}]}
{"ontology": "OntoDT", "class": "Equal:procedure", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["What broader classes encompass Equal:procedure within the hierarchy?", "Which equal operations have more specific subclasses such as Equal:procedure?", "Does Equal:procedure represent a specific type of equal operation?"], "VCQ": ["Does Equal:procedure represent a specific type of equal operation?", "Which equal operations have more specific subclasses such as Equal:procedure?", "What broader classes encompass Equal:procedure within the hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:procedure subClassOf equal operation", "CQ": ["Does Equal:procedure represent a specific type of equal operation?", "Which equal operations have more specific subclasses such as Equal:procedure?", "What broader classes encompass Equal:procedure within the hierarchy?"]}]}
{"ontology": "OntoDT", "class": "Equal:rational", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which operations are categorized as more specific types within equal operation, such as Equal:rational?", "To which more general operation classes does Equal:rational belong?", "Does Equal:rational fall under the broader concept of equal operation?"], "VCQ": ["Does Equal:rational fall under the broader concept of equal operation?", "Which operations are categorized as more specific types within equal operation, such as Equal:rational?", "To which more general operation classes does Equal:rational belong?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:rational subClassOf equal operation", "CQ": ["Does Equal:rational fall under the broader concept of equal operation?", "Which operations are categorized as more specific types within equal operation, such as Equal:rational?", "To which more general operation classes does Equal:rational belong?"]}]}
{"ontology": "OntoDT", "class": "Equal:real", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which specific equal operations include Equal:real as a subclass?", "What are the broader categories under which Equal:real is organized?", "Is Equal:real classified as a kind of equal operation?"], "VCQ": ["Is Equal:real classified as a kind of equal operation?", "Which specific equal operations include Equal:real as a subclass?", "What are the broader categories under which Equal:real is organized?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:real subClassOf equal operation", "CQ": ["Is Equal:real classified as a kind of equal operation?", "Which specific equal operations include Equal:real as a subclass?", "What are the broader categories under which Equal:real is organized?"]}]}
{"ontology": "OntoDT", "class": "Equal:record", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which entities are direct specializations of equal operation, such as Equal:record?", "Does Equal:record fall under the broader class of equal operation?", "What general concepts encompass Equal:record in the ontology?"], "VCQ": ["Does Equal:record fall under the broader class of equal operation?", "Which entities are direct specializations of equal operation, such as Equal:record?", "What general concepts encompass Equal:record in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:record subClassOf equal operation", "CQ": ["Does Equal:record fall under the broader class of equal operation?", "Which entities are direct specializations of equal operation, such as Equal:record?", "What general concepts encompass Equal:record in the ontology?"]}]}
{"ontology": "OntoDT", "class": "Equal:scaled", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which operations are included as subclasses within equal operation, such as Equal:scaled?", "To what broader operation categories does Equal:scaled belong according to the ontology?", "Is Equal:scaled categorized under equal operation in the ontology?"], "VCQ": ["Is Equal:scaled categorized under equal operation in the ontology?", "Which operations are included as subclasses within equal operation, such as Equal:scaled?", "To what broader operation categories does Equal:scaled belong according to the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:scaled subClassOf equal operation", "CQ": ["Is Equal:scaled categorized under equal operation in the ontology?", "Which operations are included as subclasses within equal operation, such as Equal:scaled?", "To what broader operation categories does Equal:scaled belong according to the ontology?"]}]}
{"ontology": "OntoDT", "class": "Equal:sequence", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which specific operations are categorized as equal operations, such as Equal:sequence?", "Does Equal:sequence fall under the category of equal operation?", "What broader categories include Equal:sequence as a more specific subclass?"], "VCQ": ["Does Equal:sequence fall under the category of equal operation?", "Which specific operations are categorized as equal operations, such as Equal:sequence?", "What broader categories include Equal:sequence as a more specific subclass?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:sequence subClassOf equal operation", "CQ": ["Does Equal:sequence fall under the category of equal operation?", "Which specific operations are categorized as equal operations, such as Equal:sequence?", "What broader categories include Equal:sequence as a more specific subclass?"]}]}
{"ontology": "OntoDT", "class": "Equal:set", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which operations are broader in scope than Equal:set under equal operation?", "Is Equal:set classified as a subclass within equal operation?", "What specific subcategories are encompassed by equal operation, including Equal:set?"], "VCQ": ["Is Equal:set classified as a subclass within equal operation?", "Which operations are broader in scope than Equal:set under equal operation?", "What specific subcategories are encompassed by equal operation, including Equal:set?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:set subClassOf equal operation", "CQ": ["Is Equal:set classified as a subclass within equal operation?", "Which operations are broader in scope than Equal:set under equal operation?", "What specific subcategories are encompassed by equal operation, including Equal:set?"]}]}
{"ontology": "OntoDT", "class": "Equal:discrete", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Is Equal:discrete classified under the general category of equal operation?", "What are the broader operation categories encompassing Equal:discrete?", "Which operations are considered specific types within equal operation, such as Equal:discrete?"], "VCQ": ["Is Equal:discrete classified under the general category of equal operation?", "Which operations are considered specific types within equal operation, such as Equal:discrete?", "What are the broader operation categories encompassing Equal:discrete?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:discrete subClassOf equal operation", "CQ": ["Is Equal:discrete classified under the general category of equal operation?", "Which operations are considered specific types within equal operation, such as Equal:discrete?", "What are the broader operation categories encompassing Equal:discrete?"]}]}
{"ontology": "OntoDT", "class": "Equal:table", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Does Equal:table fall under the category of equal operation?", "What overarching categories does Equal:table belong to within the ontology?", "Which operations are subcategories of equal operation, specifically including Equal:table?"], "VCQ": ["Does Equal:table fall under the category of equal operation?", "Which operations are subcategories of equal operation, specifically including Equal:table?", "What overarching categories does Equal:table belong to within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:table subClassOf equal operation", "CQ": ["Does Equal:table fall under the category of equal operation?", "Which operations are subcategories of equal operation, specifically including Equal:table?", "What overarching categories does Equal:table belong to within the ontology?"]}]}
{"ontology": "OntoDT", "class": "Equal:time&date", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Is equal:time&date classified as a type of equal operation?", "Which specific operations are categorized under equal operation, such as equal:time&date?", "What broader operational categories encompass equal:time&date?"], "VCQ": ["Is equal:time&date classified as a type of equal operation?", "Which specific operations are categorized under equal operation, such as equal:time&date?", "What broader operational categories encompass equal:time&date?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:time&date subClassOf equal operation", "CQ": ["Is equal:time&date classified as a type of equal operation?", "Which specific operations are categorized under equal operation, such as equal:time&date?", "What broader operational categories encompass equal:time&date?"]}]}
{"ontology": "OntoDT", "class": "Equal:void", "axiom": {"subClassOf": ["equal operation"]}, "datatype": "Type4", "TCQ": ["Which concepts are included as narrower types under equal operation, such as Equal:void?", "Does Equal:void represent a specialized form of equal operation?", "Of which broader categories is Equal:void a member in relation to equal operation?"], "VCQ": ["Does Equal:void represent a specialized form of equal operation?", "Which concepts are included as narrower types under equal operation, such as Equal:void?", "Of which broader categories is Equal:void a member in relation to equal operation?"], "Taxiom": "None", "CQ": [{"axiom": "Equal:void subClassOf equal operation", "CQ": ["Does Equal:void represent a specialized form of equal operation?", "Which concepts are included as narrower types under equal operation, such as Equal:void?", "Of which broader categories is Equal:void a member in relation to equal operation?"]}]}
{"ontology": "OntoDT", "class": "InOrder:enumerated", "axiom": {"subClassOf": ["in order operation"]}, "datatype": "Type4", "TCQ": ["Which specialized operations are classified as in order operation, including InOrder:enumerated?", "Does InOrder:enumerated fall under the category of in order operation?", "What broader operational classifications include InOrder:enumerated as a subtype?"], "VCQ": ["Does InOrder:enumerated fall under the category of in order operation?", "Which specialized operations are classified as in order operation, including InOrder:enumerated?", "What broader operational classifications include InOrder:enumerated as a subtype?"], "Taxiom": "None", "CQ": [{"axiom": "InOrder:enumerated subClassOf in order operation", "CQ": ["Does InOrder:enumerated fall under the category of in order operation?", "Which specialized operations are classified as in order operation, including InOrder:enumerated?", "What broader operational classifications include InOrder:enumerated as a subtype?"]}]}
{"ontology": "OntoDT", "class": "InOrder:interger", "axiom": {"subClassOf": ["in order operation"]}, "datatype": "Type4", "TCQ": ["Does InOrder:integer represent a specific kind of in order operation?", "What broader categories does InOrder:integer fall under within in order operation?", "Which in order operation subclasses include InOrder:integer?"], "VCQ": ["Does InOrder:integer represent a specific kind of in order operation?", "Which in order operation subclasses include InOrder:integer?", "What broader categories does InOrder:integer fall under within in order operation?"], "Taxiom": "None", "CQ": [{"axiom": "InOrder:interger subClassOf in order operation", "CQ": ["Does InOrder:integer represent a specific kind of in order operation?", "Which in order operation subclasses include InOrder:integer?", "What broader categories does InOrder:integer fall under within in order operation?"]}]}
{"ontology": "OntoDT", "class": "InOrder:ordinal", "axiom": {"subClassOf": ["in order operation"]}, "datatype": "Type4", "TCQ": ["Is in order operation a broader category that includes InOrder:ordinal as a specific type?", "What are all the subclasses under in order operation, and does that list include InOrder:ordinal?", "Which general operations is InOrder:ordinal classified under?"], "VCQ": ["Is in order operation a broader category that includes InOrder:ordinal as a specific type?", "What are all the subclasses under in order operation, and does that list include InOrder:ordinal?", "Which general operations is InOrder:ordinal classified under?"], "Taxiom": "None", "CQ": [{"axiom": "InOrder:ordinal subClassOf in order operation", "CQ": ["Is in order operation a broader category that includes InOrder:ordinal as a specific type?", "What are all the subclasses under in order operation, and does that list include InOrder:ordinal?", "Which general operations is InOrder:ordinal classified under?"]}]}
{"ontology": "OntoDT", "class": "InOrder:rational", "axiom": {"subClassOf": ["in order operation"]}, "datatype": "Type4", "TCQ": ["Which general operations encompass InOrder:rational as a subclass?", "Is InOrder:rational categorized as a type of in order operation?", "What in order operations have InOrder:rational as a more specific instance?"], "VCQ": ["Is InOrder:rational categorized as a type of in order operation?", "What in order operations have InOrder:rational as a more specific instance?", "Which general operations encompass InOrder:rational as a subclass?"], "Taxiom": "None", "CQ": [{"axiom": "InOrder:rational subClassOf in order operation", "CQ": ["Is InOrder:rational categorized as a type of in order operation?", "What in order operations have InOrder:rational as a more specific instance?", "Which general operations encompass InOrder:rational as a subclass?"]}]}
{"ontology": "OntoDT", "class": "InOrder:real", "axiom": {"subClassOf": ["in order operation"]}, "datatype": "Type4", "TCQ": ["Is InOrder:real classified under in order operation?", "What specific types are encompassed by in order operation, including InOrder:real?", "Which broader categories subsume InOrder:real in the ontology?"], "VCQ": ["Is InOrder:real classified under in order operation?", "What specific types are encompassed by in order operation, including InOrder:real?", "Which broader categories subsume InOrder:real in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "InOrder:real subClassOf in order operation", "CQ": ["Is InOrder:real classified under in order operation?", "What specific types are encompassed by in order operation, including InOrder:real?", "Which broader categories subsume InOrder:real in the ontology?"]}]}
{"ontology": "OntoDT", "class": "InOrder:scaled", "axiom": {"subClassOf": ["in order operation"]}, "datatype": "Type4", "TCQ": ["Which upper-level operations encompass InOrder:scaled?", "Does InOrder:scaled fall under the category of in order operation?", "What are the specific subtypes classified under in order operation, such as InOrder:scaled?"], "VCQ": ["Does InOrder:scaled fall under the category of in order operation?", "What are the specific subtypes classified under in order operation, such as InOrder:scaled?", "Which upper-level operations encompass InOrder:scaled?"], "Taxiom": "None", "CQ": [{"axiom": "InOrder:scaled subClassOf in order operation", "CQ": ["Does InOrder:scaled fall under the category of in order operation?", "What are the specific subtypes classified under in order operation, such as InOrder:scaled?", "Which upper-level operations encompass InOrder:scaled?"]}]}
{"ontology": "OntoDT", "class": "InOrder:time&date", "axiom": {"subClassOf": ["in order operation"]}, "datatype": "Type4", "TCQ": ["Is InOrder:time&date recognized as a specific form of in order operation?", "Which in order operations include more specialized types such as InOrder:time&date?", "To what higher-level categories does InOrder:time&date belong within the hierarchy of in order operation?"], "VCQ": ["Is InOrder:time&date recognized as a specific form of in order operation?", "Which in order operations include more specialized types such as InOrder:time&date?", "To what higher-level categories does InOrder:time&date belong within the hierarchy of in order operation?"], "Taxiom": "None", "CQ": [{"axiom": "InOrder:time&date subClassOf in order operation", "CQ": ["Is InOrder:time&date recognized as a specific form of in order operation?", "Which in order operations include more specialized types such as InOrder:time&date?", "To what higher-level categories does InOrder:time&date belong within the hierarchy of in order operation?"]}]}
{"ontology": "OntoDT", "class": "Insert:table", "axiom": {"subClassOf": ["insert operation"]}, "datatype": "Type4", "TCQ": ["What broader categories encompass Insert:table as a member?", "Is Insert:table classified as a specific form of insert operation?", "Which operations are categorized as specializations of insert operation, including Insert:table?"], "VCQ": ["Is Insert:table classified as a specific form of insert operation?", "Which operations are categorized as specializations of insert operation, including Insert:table?", "What broader categories encompass Insert:table as a member?"], "Taxiom": "None", "CQ": [{"axiom": "Insert:table subClassOf insert operation", "CQ": ["Is Insert:table classified as a specific form of insert operation?", "Which operations are categorized as specializations of insert operation, including Insert:table?", "What broader categories encompass Insert:table as a member?"]}]}
{"ontology": "OntoDT", "class": "Multiply:complex", "axiom": {"subClassOf": ["multiply operation"]}, "datatype": "Type4", "TCQ": ["Is multiply:complex classified under multiply operation types?", "What operations are considered subclasses of multiply operation?", "Which higher-level operation categories encompass multiply:complex?"], "VCQ": ["Is multiply:complex classified under multiply operation types?", "What operations are considered subclasses of multiply operation?", "Which higher-level operation categories encompass multiply:complex?"], "Taxiom": "None", "CQ": [{"axiom": "Multiply:complex subClassOf multiply operation", "CQ": ["Is multiply:complex classified under multiply operation types?", "What operations are considered subclasses of multiply operation?", "Which higher-level operation categories encompass multiply:complex?"]}]}
{"ontology": "OntoDT", "class": "Multiply:integer", "axiom": {"subClassOf": ["multiply operation"]}, "datatype": "Type4", "TCQ": ["Within what more general operation types is Multiply:integer included?", "Which specialized operations are considered subclasses of multiply operation, such as Multiply:integer?", "Is Multiply:integer classified under the broader category of multiply operation?"], "VCQ": ["Is Multiply:integer classified under the broader category of multiply operation?", "Which specialized operations are considered subclasses of multiply operation, such as Multiply:integer?", "Within what more general operation types is Multiply:integer included?"], "Taxiom": "None", "CQ": [{"axiom": "Multiply:integer subClassOf multiply operation", "CQ": ["Is Multiply:integer classified under the broader category of multiply operation?", "Which specialized operations are considered subclasses of multiply operation, such as Multiply:integer?", "Within what more general operation types is Multiply:integer included?"]}]}
{"ontology": "OntoDT", "class": "Multiply:rational", "axiom": {"subClassOf": ["multiply operation"]}, "datatype": "Type4", "TCQ": ["What multiply operations encompass multiply:rational as a more specific subcategory?", "To which general operation types does multiply:rational belong?", "Is multiply:rational included among the operations classified as multiply operation?"], "VCQ": ["Is multiply:rational included among the operations classified as multiply operation?", "What multiply operations encompass multiply:rational as a more specific subcategory?", "To which general operation types does multiply:rational belong?"], "Taxiom": "None", "CQ": [{"axiom": "Multiply:rational subClassOf multiply operation", "CQ": ["Is multiply:rational included among the operations classified as multiply operation?", "What multiply operations encompass multiply:rational as a more specific subcategory?", "To which general operation types does multiply:rational belong?"]}]}
{"ontology": "OntoDT", "class": "Multiply:real", "axiom": {"subClassOf": ["multiply operation"]}, "datatype": "Type4", "TCQ": ["Is Multiply:real categorized as a multiply operation?", "Into what broader classes is Multiply:real hierarchically organized?", "Which multiply operations encompass Multiply:real as a specialized form?"], "VCQ": ["Is Multiply:real categorized as a multiply operation?", "Which multiply operations encompass Multiply:real as a specialized form?", "Into what broader classes is Multiply:real hierarchically organized?"], "Taxiom": "None", "CQ": [{"axiom": "Multiply:real subClassOf multiply operation", "CQ": ["Is Multiply:real categorized as a multiply operation?", "Which multiply operations encompass Multiply:real as a specialized form?", "Into what broader classes is Multiply:real hierarchically organized?"]}]}
{"ontology": "OntoDT", "class": "Multiply:scaled", "axiom": {"subClassOf": ["multiply operation"]}, "datatype": "Type4", "TCQ": ["Is Multiply:scaled categorized as a type of multiply operation?", "Which specific multiply operations include Multiply:scaled as a subclass?", "What general multiply operation categories encompass Multiply:scaled?"], "VCQ": ["Is Multiply:scaled categorized as a type of multiply operation?", "Which specific multiply operations include Multiply:scaled as a subclass?", "What general multiply operation categories encompass Multiply:scaled?"], "Taxiom": "None", "CQ": [{"axiom": "Multiply:scaled subClassOf multiply operation", "CQ": ["Is Multiply:scaled categorized as a type of multiply operation?", "Which specific multiply operations include Multiply:scaled as a subclass?", "What general multiply operation categories encompass Multiply:scaled?"]}]}
{"ontology": "OntoDT", "class": "And:boolean", "axiom": {"subClassOf": ["dyadic logical operation"]}, "datatype": "Type4", "TCQ": ["Which logical operations exist as subclasses of dyadic logical operation, And:boolean among them?", "Does And:boolean fall under the classification of dyadic logical operation?", "What general categories encompass And:boolean within logical operations?"], "VCQ": ["Does And:boolean fall under the classification of dyadic logical operation?", "Which logical operations exist as subclasses of dyadic logical operation, And:boolean among them?", "What general categories encompass And:boolean within logical operations?"], "Taxiom": "None", "CQ": [{"axiom": "And:boolean subClassOf dyadic logical operation", "CQ": ["Does And:boolean fall under the classification of dyadic logical operation?", "Which logical operations exist as subclasses of dyadic logical operation, And:boolean among them?", "What general categories encompass And:boolean within logical operations?"]}]}
{"ontology": "OntoDT", "class": "Or:boolean", "axiom": {"subClassOf": ["dyadic logical operation"]}, "datatype": "Type4", "TCQ": ["What dyadic logical operations include Or:boolean as a specific type?", "Which more general logical operation classes encompass Or:boolean?", "Does Or:boolean fall under the general category of dyadic logical operation?"], "VCQ": ["Does Or:boolean fall under the general category of dyadic logical operation?", "What dyadic logical operations include Or:boolean as a specific type?", "Which more general logical operation classes encompass Or:boolean?"], "Taxiom": "None", "CQ": [{"axiom": "Or:boolean subClassOf dyadic logical operation", "CQ": ["Does Or:boolean fall under the general category of dyadic logical operation?", "What dyadic logical operations include Or:boolean as a specific type?", "Which more general logical operation classes encompass Or:boolean?"]}]}
{"ontology": "OntoDT", "class": "Fetch:table", "axiom": {"subClassOf": ["dyadic retrieve operation"]}, "datatype": "Type4", "TCQ": ["Is Fetch:table recognized as a specific type of dyadic retrieve operation?", "Which broader categories encompass Fetch:table as a member?", "What operations are classified under dyadic retrieve operation, including Fetch:table?"], "VCQ": ["Is Fetch:table recognized as a specific type of dyadic retrieve operation?", "What operations are classified under dyadic retrieve operation, including Fetch:table?", "Which broader categories encompass Fetch:table as a member?"], "Taxiom": "None", "CQ": [{"axiom": "Fetch:table subClassOf dyadic retrieve operation", "CQ": ["Is Fetch:table recognized as a specific type of dyadic retrieve operation?", "What operations are classified under dyadic retrieve operation, including Fetch:table?", "Which broader categories encompass Fetch:table as a member?"]}]}
{"ontology": "OntoDT", "class": "Tag:choice", "axiom": {"subClassOf": ["dyadic retrieve operation"]}, "datatype": "Type4", "TCQ": ["To which broader operational category does Tag:choice belong?", "Is Tag:choice categorized under dyadic retrieve operation?", "Which operations fall under the dyadic retrieve operation class?"], "VCQ": ["Is Tag:choice categorized under dyadic retrieve operation?", "Which operations fall under the dyadic retrieve operation class?", "To which broader operational category does Tag:choice belong?"], "Taxiom": "None", "CQ": [{"axiom": "Tag:choice subClassOf dyadic retrieve operation", "CQ": ["Is Tag:choice categorized under dyadic retrieve operation?", "Which operations fall under the dyadic retrieve operation class?", "To which broader operational category does Tag:choice belong?"]}]}
{"ontology": "OntoDT", "class": "Intersection:set", "axiom": {"subClassOf": ["dyadic set operation"]}, "datatype": "Type4", "TCQ": ["What broader categories encompass Intersection:set within the hierarchy of set operations?", "Is Intersection:set classified as a type of dyadic set operation?", "Which set operations fall under the category of dyadic set operation, including Intersection:set?"], "VCQ": ["Is Intersection:set classified as a type of dyadic set operation?", "Which set operations fall under the category of dyadic set operation, including Intersection:set?", "What broader categories encompass Intersection:set within the hierarchy of set operations?"], "Taxiom": "None", "CQ": [{"axiom": "Intersection:set subClassOf dyadic set operation", "CQ": ["Is Intersection:set classified as a type of dyadic set operation?", "Which set operations fall under the category of dyadic set operation, including Intersection:set?", "What broader categories encompass Intersection:set within the hierarchy of set operations?"]}]}
{"ontology": "OntoDT", "class": "Lsln:set", "axiom": {"subClassOf": ["dyadic set operation"]}, "datatype": "Type4", "TCQ": ["To which higher-level set operation categories does Lsln:set belong?", "Is Lsln:set categorized as a type of dyadic set operation?", "What specific set operations are subclasses of dyadic set operation, Lsln:set included?"], "VCQ": ["Is Lsln:set categorized as a type of dyadic set operation?", "What specific set operations are subclasses of dyadic set operation, Lsln:set included?", "To which higher-level set operation categories does Lsln:set belong?"], "Taxiom": "None", "CQ": [{"axiom": "Lsln:set subClassOf dyadic set operation", "CQ": ["Is Lsln:set categorized as a type of dyadic set operation?", "What specific set operations are subclasses of dyadic set operation, Lsln:set included?", "To which higher-level set operation categories does Lsln:set belong?"]}]}
{"ontology": "OntoDT", "class": "Subset:set", "axiom": {"subClassOf": ["dyadic set operation"]}, "datatype": "Type4", "TCQ": ["Which specialized operations are contained within the class dyadic set operation?", "Is Subset:set categorized under the broader class of dyadic set operation?", "Into which higher-level set operation categories does Subset:set fall?"], "VCQ": ["Is Subset:set categorized under the broader class of dyadic set operation?", "Which specialized operations are contained within the class dyadic set operation?", "Into which higher-level set operation categories does Subset:set fall?"], "Taxiom": "None", "CQ": [{"axiom": "Subset:set subClassOf dyadic set operation", "CQ": ["Is Subset:set categorized under the broader class of dyadic set operation?", "Which specialized operations are contained within the class dyadic set operation?", "Into which higher-level set operation categories does Subset:set fall?"]}]}
{"ontology": "OntoDT", "class": "Union:set", "axiom": {"subClassOf": ["dyadic set operation"]}, "datatype": "Type4", "TCQ": ["Which set operations are categorized under dyadic set operation, including Union:set?", "Is Union:set classified as a kind of dyadic set operation?", "To which upper-level operation types does Union:set belong?"], "VCQ": ["Is Union:set classified as a kind of dyadic set operation?", "Which set operations are categorized under dyadic set operation, including Union:set?", "To which upper-level operation types does Union:set belong?"], "Taxiom": "None", "CQ": [{"axiom": "Union:set subClassOf dyadic set operation", "CQ": ["Is Union:set classified as a kind of dyadic set operation?", "Which set operations are categorized under dyadic set operation, including Union:set?", "To which upper-level operation types does Union:set belong?"]}]}
{"ontology": "OntoDT", "class": "IsEmpty:bag", "axiom": {"subClassOf": ["isEmpty operation"]}, "datatype": "Type4", "TCQ": ["Does IsEmpty:bag fall under the broader classification of isEmpty operation?", "What operations are more specific variants of isEmpty operation, such as IsEmpty:bag?", "To which upper-level operation categories does IsEmpty:bag pertain?"], "VCQ": ["Does IsEmpty:bag fall under the broader classification of isEmpty operation?", "What operations are more specific variants of isEmpty operation, such as IsEmpty:bag?", "To which upper-level operation categories does IsEmpty:bag pertain?"], "Taxiom": "None", "CQ": [{"axiom": "IsEmpty:bag subClassOf isEmpty operation", "CQ": ["Does IsEmpty:bag fall under the broader classification of isEmpty operation?", "What operations are more specific variants of isEmpty operation, such as IsEmpty:bag?", "To which upper-level operation categories does IsEmpty:bag pertain?"]}]}
{"ontology": "OntoDT", "class": "IsEmpty:sequence", "axiom": {"subClassOf": ["isEmpty operation"]}, "datatype": "Type4", "TCQ": ["Is IsEmpty:sequence categorized as a specialization of the isEmpty operation?", "Which operations encompass IsEmpty:sequence as a more specific form?", "What broader operation classes does IsEmpty:sequence fall under?"], "VCQ": ["Is IsEmpty:sequence categorized as a specialization of the isEmpty operation?", "Which operations encompass IsEmpty:sequence as a more specific form?", "What broader operation classes does IsEmpty:sequence fall under?"], "Taxiom": "None", "CQ": [{"axiom": "IsEmpty:sequence subClassOf isEmpty operation", "CQ": ["Is IsEmpty:sequence categorized as a specialization of the isEmpty operation?", "Which operations encompass IsEmpty:sequence as a more specific form?", "What broader operation classes does IsEmpty:sequence fall under?"]}]}
{"ontology": "OntoDT", "class": "IsEmpty:table", "axiom": {"subClassOf": ["isEmpty operation"]}, "datatype": "Type4", "TCQ": ["What higher-level operations encompass IsEmpty:table?", "Does IsEmpty:table fall under the broader concept of isEmpty operation?", "Which operations are classified as subtypes of isEmpty operation, including IsEmpty:table?"], "VCQ": ["Does IsEmpty:table fall under the broader concept of isEmpty operation?", "Which operations are classified as subtypes of isEmpty operation, including IsEmpty:table?", "What higher-level operations encompass IsEmpty:table?"], "Taxiom": "None", "CQ": [{"axiom": "IsEmpty:table subClassOf isEmpty operation", "CQ": ["Does IsEmpty:table fall under the broader concept of isEmpty operation?", "Which operations are classified as subtypes of isEmpty operation, including IsEmpty:table?", "What higher-level operations encompass IsEmpty:table?"]}]}
{"ontology": "OntoDT", "class": "Select:set", "axiom": {"subClassOf": ["monadic select operation"]}, "datatype": "Type4", "TCQ": ["Which higher-level classes encompass Select:set in the ontology?", "Does Select:set represent a specific type of monadic select operation?", "What kinds of operations fall under the category of monadic select operation, including Select:set?"], "VCQ": ["Does Select:set represent a specific type of monadic select operation?", "What kinds of operations fall under the category of monadic select operation, including Select:set?", "Which higher-level classes encompass Select:set in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Select:set subClassOf monadic select operation", "CQ": ["Does Select:set represent a specific type of monadic select operation?", "What kinds of operations fall under the category of monadic select operation, including Select:set?", "Which higher-level classes encompass Select:set in the ontology?"]}]}
{"ontology": "OntoDT", "class": "Negate:complex", "axiom": {"subClassOf": ["negate operation"]}, "datatype": "Type4", "TCQ": ["What higher-level concepts encompass Negate:complex in this ontology?", "Is Negate:complex categorized as a subtype of negate operation?", "Within the domain of negate operation, which subordinate classes exist aside from Negate:complex?"], "VCQ": ["Is Negate:complex categorized as a subtype of negate operation?", "Within the domain of negate operation, which subordinate classes exist aside from Negate:complex?", "What higher-level concepts encompass Negate:complex in this ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Negate:complex subClassOf negate operation", "CQ": ["Is Negate:complex categorized as a subtype of negate operation?", "Within the domain of negate operation, which subordinate classes exist aside from Negate:complex?", "What higher-level concepts encompass Negate:complex in this ontology?"]}]}
{"ontology": "OntoDT", "class": "Negate:integer", "axiom": {"subClassOf": ["negate operation"]}, "datatype": "Type4", "TCQ": ["Which operations are categorized under negate operation, specifically including Negate:integer?", "Is Negate:integer a type of negate operation?", "What broader classes does Negate:integer belong to?"], "VCQ": ["Is Negate:integer a type of negate operation?", "Which operations are categorized under negate operation, specifically including Negate:integer?", "What broader classes does Negate:integer belong to?"], "Taxiom": "None", "CQ": [{"axiom": "Negate:integer subClassOf negate operation", "CQ": ["Is Negate:integer a type of negate operation?", "Which operations are categorized under negate operation, specifically including Negate:integer?", "What broader classes does Negate:integer belong to?"]}]}
{"ontology": "OntoDT", "class": "Negate:rational", "axiom": {"subClassOf": ["negate operation"]}, "datatype": "Type4", "TCQ": ["What are the broader classes that encompass Negate:rational?", "Which specific operations are categorized beneath negate operation, such as Negate:rational?", "Does Negate:rational fall under the classification of negate operation?"], "VCQ": ["Does Negate:rational fall under the classification of negate operation?", "Which specific operations are categorized beneath negate operation, such as Negate:rational?", "What are the broader classes that encompass Negate:rational?"], "Taxiom": "None", "CQ": [{"axiom": "Negate:rational subClassOf negate operation", "CQ": ["Does Negate:rational fall under the classification of negate operation?", "Which specific operations are categorized beneath negate operation, such as Negate:rational?", "What are the broader classes that encompass Negate:rational?"]}]}
{"ontology": "OntoDT", "class": "Negate:real", "axiom": {"subClassOf": ["negate operation"]}, "datatype": "Type4", "TCQ": ["Under which hierarchical categories can Negate:real be grouped?", "Does Negate:real fall under the general class of negate operation?", "Which operations are classified as specific types of negate operation, including Negate:real?"], "VCQ": ["Does Negate:real fall under the general class of negate operation?", "Which operations are classified as specific types of negate operation, including Negate:real?", "Under which hierarchical categories can Negate:real be grouped?"], "Taxiom": "None", "CQ": [{"axiom": "Negate:real subClassOf negate operation", "CQ": ["Does Negate:real fall under the general class of negate operation?", "Which operations are classified as specific types of negate operation, including Negate:real?", "Under which hierarchical categories can Negate:real be grouped?"]}]}
{"ontology": "OntoDT", "class": "Negate:scaled", "axiom": {"subClassOf": ["negate operation"]}, "datatype": "Type4", "TCQ": ["What are the general operation types to which Negate:scaled is related?", "Which specific operations are categorized as variants of negate operation, such as Negate:scaled?", "Does Negate:scaled fall under the broader classification of negate operation?"], "VCQ": ["Does Negate:scaled fall under the broader classification of negate operation?", "Which specific operations are categorized as variants of negate operation, such as Negate:scaled?", "What are the general operation types to which Negate:scaled is related?"], "Taxiom": "None", "CQ": [{"axiom": "Negate:scaled subClassOf negate operation", "CQ": ["Does Negate:scaled fall under the broader classification of negate operation?", "Which specific operations are categorized as variants of negate operation, such as Negate:scaled?", "What are the general operation types to which Negate:scaled is related?"]}]}
{"ontology": "OntoDT", "class": "NonNegative:rational", "axiom": {"subClassOf": ["nonNegative operation"]}, "datatype": "Type4", "TCQ": ["Which broader operation classes include NonNegative:rational as a member?", "Is NonNegative:rational categorized as a type of nonNegative operation?", "What specific operations are subclasses under nonNegative operation, such as NonNegative:rational?"], "VCQ": ["Is NonNegative:rational categorized as a type of nonNegative operation?", "What specific operations are subclasses under nonNegative operation, such as NonNegative:rational?", "Which broader operation classes include NonNegative:rational as a member?"], "Taxiom": "None", "CQ": [{"axiom": "NonNegative:rational subClassOf nonNegative operation", "CQ": ["Is NonNegative:rational categorized as a type of nonNegative operation?", "What specific operations are subclasses under nonNegative operation, such as NonNegative:rational?", "Which broader operation classes include NonNegative:rational as a member?"]}]}
{"ontology": "OntoDT", "class": "Promote:complex", "axiom": {"subClassOf": ["promote operation"]}, "datatype": "Type4", "TCQ": ["Which promote operations have more specific subclasses, such as Promote:complex?", "Under which categories of promote operation does Promote:complex fall?", "Is Promote:complex an instance within the promote operation hierarchy?"], "VCQ": ["Is Promote:complex an instance within the promote operation hierarchy?", "Which promote operations have more specific subclasses, such as Promote:complex?", "Under which categories of promote operation does Promote:complex fall?"], "Taxiom": "None", "CQ": [{"axiom": "Promote:complex subClassOf promote operation", "CQ": ["Is Promote:complex an instance within the promote operation hierarchy?", "Which promote operations have more specific subclasses, such as Promote:complex?", "Under which categories of promote operation does Promote:complex fall?"]}]}
{"ontology": "OntoDT", "class": "Promote:rational", "axiom": {"subClassOf": ["promote operation"]}, "datatype": "Type4", "TCQ": ["What promote operations have Promote:rational as a specific instance or subclass?", "Under which broader operation classes does Promote:rational fall?", "Is Promote:rational categorized as a subtype of promote operation?"], "VCQ": ["Is Promote:rational categorized as a subtype of promote operation?", "What promote operations have Promote:rational as a specific instance or subclass?", "Under which broader operation classes does Promote:rational fall?"], "Taxiom": "None", "CQ": [{"axiom": "Promote:rational subClassOf promote operation", "CQ": ["Is Promote:rational categorized as a subtype of promote operation?", "What promote operations have Promote:rational as a specific instance or subclass?", "Under which broader operation classes does Promote:rational fall?"]}]}
{"ontology": "OntoDT", "class": "Promote:real", "axiom": {"subClassOf": ["promote operation"]}, "datatype": "Type4", "TCQ": ["What higher-level classes does Promote:real fall under in the promote operation hierarchy?", "Which promote operations encompass subtypes such as Promote:real?", "Is Promote:real classified under the category of promote operation?"], "VCQ": ["Is Promote:real classified under the category of promote operation?", "Which promote operations encompass subtypes such as Promote:real?", "What higher-level classes does Promote:real fall under in the promote operation hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "Promote:real subClassOf promote operation", "CQ": ["Is Promote:real classified under the category of promote operation?", "Which promote operations encompass subtypes such as Promote:real?", "What higher-level classes does Promote:real fall under in the promote operation hierarchy?"]}]}
{"ontology": "OntoDT", "class": "Reciprocal:rational", "axiom": {"subClassOf": ["reciprocial operation"]}, "datatype": "Type4", "TCQ": ["Is reciprocal:rational classified under the broader category of reciprocial operation?", "Which specific operations are categorized as subtypes of reciprocial operation, and does this include reciprocal:rational?", "What are the more general operation classes to which reciprocal:rational belongs?"], "VCQ": ["Is reciprocal:rational classified under the broader category of reciprocial operation?", "Which specific operations are categorized as subtypes of reciprocial operation, and does this include reciprocal:rational?", "What are the more general operation classes to which reciprocal:rational belongs?"], "Taxiom": "None", "CQ": [{"axiom": "Reciprocal:rational subClassOf reciprocial operation", "CQ": ["Is reciprocal:rational classified under the broader category of reciprocial operation?", "Which specific operations are categorized as subtypes of reciprocial operation, and does this include reciprocal:rational?", "What are the more general operation classes to which reciprocal:rational belongs?"]}]}
{"ontology": "OntoDT", "class": "Reciprocal:real", "axiom": {"subClassOf": ["reciprocial operation"]}, "datatype": "Type4", "TCQ": ["Which operations are encompassed as more specific types of reciprocial operation, such as Reciprocal:real?", "What are the direct parent categories for Reciprocal:real?", "Is Reciprocal:real classified under the broader category of reciprocial operation?"], "VCQ": ["Is Reciprocal:real classified under the broader category of reciprocial operation?", "Which operations are encompassed as more specific types of reciprocial operation, such as Reciprocal:real?", "What are the direct parent categories for Reciprocal:real?"], "Taxiom": "None", "CQ": [{"axiom": "Reciprocal:real subClassOf reciprocial operation", "CQ": ["Is Reciprocal:real classified under the broader category of reciprocial operation?", "Which operations are encompassed as more specific types of reciprocial operation, such as Reciprocal:real?", "What are the direct parent categories for Reciprocal:real?"]}]}
{"ontology": "OntoDT", "class": "Reciprocal:complex", "axiom": {"subClassOf": ["reciprocial operation"]}, "datatype": "Type4", "TCQ": ["What specific operations fall under the category of reciprocial operation, including Reciprocal:complex?", "Is Reciprocal:complex classified as a subtype of reciprocial operation?", "Which broader operation classes does Reciprocal:complex belong to within the ontology?"], "VCQ": ["Is Reciprocal:complex classified as a subtype of reciprocial operation?", "What specific operations fall under the category of reciprocial operation, including Reciprocal:complex?", "Which broader operation classes does Reciprocal:complex belong to within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Reciprocal:complex subClassOf reciprocial operation", "CQ": ["Is Reciprocal:complex classified as a subtype of reciprocial operation?", "What specific operations fall under the category of reciprocial operation, including Reciprocal:complex?", "Which broader operation classes does Reciprocal:complex belong to within the ontology?"]}]}
{"ontology": "OntoDT", "class": "Round:time&date", "axiom": {"subClassOf": ["round operation"]}, "datatype": "Type4", "TCQ": ["Does Round:time&date fall under the category of round operation?", "Which broader operations encompass Round:time&date as a subtype?", "What specific types are classified as round operation, and does Round:time&date belong to this group?"], "VCQ": ["Does Round:time&date fall under the category of round operation?", "What specific types are classified as round operation, and does Round:time&date belong to this group?", "Which broader operations encompass Round:time&date as a subtype?"], "Taxiom": "None", "CQ": [{"axiom": "Round:time&date subClassOf round operation", "CQ": ["Does Round:time&date fall under the category of round operation?", "What specific types are classified as round operation, and does Round:time&date belong to this group?", "Which broader operations encompass Round:time&date as a subtype?"]}]}
{"ontology": "OntoDT", "class": "Serialize:table", "axiom": {"subClassOf": ["serialize operation"]}, "datatype": "Type4", "TCQ": ["What kinds of operations fall under the category of serialize operation, specifically including Serialize:table?", "Is Serialize:table categorized as a type of serialize operation?", "Which more general operation types encompass Serialize:table?"], "VCQ": ["Is Serialize:table categorized as a type of serialize operation?", "What kinds of operations fall under the category of serialize operation, specifically including Serialize:table?", "Which more general operation types encompass Serialize:table?"], "Taxiom": "None", "CQ": [{"axiom": "Serialize:table subClassOf serialize operation", "CQ": ["Is Serialize:table categorized as a type of serialize operation?", "What kinds of operations fall under the category of serialize operation, specifically including Serialize:table?", "Which more general operation types encompass Serialize:table?"]}]}
{"ontology": "OntoDT", "class": "Successor:ordinal", "axiom": {"subClassOf": ["successor operation"]}, "datatype": "Type4", "TCQ": ["Which subclasses are encompassed within the category of successor operation, including Successor:ordinal?", "To what broader parent classes does Successor:ordinal belong in the ontology?", "Is Successor:ordinal classified as a specific type of successor operation?"], "VCQ": ["Is Successor:ordinal classified as a specific type of successor operation?", "Which subclasses are encompassed within the category of successor operation, including Successor:ordinal?", "To what broader parent classes does Successor:ordinal belong in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "Successor:ordinal subClassOf successor operation", "CQ": ["Is Successor:ordinal classified as a specific type of successor operation?", "Which subclasses are encompassed within the category of successor operation, including Successor:ordinal?", "To what broader parent classes does Successor:ordinal belong in the ontology?"]}]}
{"ontology": "OntoDT", "class": "MapToBag:table", "axiom": {"subClassOf": ["map operation"]}, "datatype": "Type4", "TCQ": ["What broader operations is MapToBag:table categorized under according to the ontology?", "Is MapToBag:table classified under map operation in the ontology?", "Which specific operations are included as subclasses of map operation, such as MapToBag:table?"], "VCQ": ["Is MapToBag:table classified under map operation in the ontology?", "Which specific operations are included as subclasses of map operation, such as MapToBag:table?", "What broader operations is MapToBag:table categorized under according to the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "MapToBag:table subClassOf map operation", "CQ": ["Is MapToBag:table classified under map operation in the ontology?", "Which specific operations are included as subclasses of map operation, such as MapToBag:table?", "What broader operations is MapToBag:table categorized under according to the ontology?"]}]}
{"ontology": "OntoDT", "class": "MapToTable:table", "axiom": {"subClassOf": ["map operation"]}, "datatype": "Type4", "TCQ": ["What broader concepts does MapToTable:table relate to in this context?", "Is MapToTable:table classified as a kind of map operation?", "Which operations fall under the category of map operation, including MapToTable:table?"], "VCQ": ["Is MapToTable:table classified as a kind of map operation?", "Which operations fall under the category of map operation, including MapToTable:table?", "What broader concepts does MapToTable:table relate to in this context?"], "Taxiom": "None", "CQ": [{"axiom": "MapToTable:table subClassOf map operation", "CQ": ["Is MapToTable:table classified as a kind of map operation?", "Which operations fall under the category of map operation, including MapToTable:table?", "What broader concepts does MapToTable:table relate to in this context?"]}]}
{"ontology": "OntoDT", "class": "Replace:array", "axiom": {"subClassOf": ["n-adic operation"]}, "datatype": "Type4", "TCQ": ["Is Replace:array classified as a type of n-adic operation?", "What are the specific subtypes of n-adic operation, including Replace:array?", "Which broader categories encompass Replace:array?"], "VCQ": ["Is Replace:array classified as a type of n-adic operation?", "What are the specific subtypes of n-adic operation, including Replace:array?", "Which broader categories encompass Replace:array?"], "Taxiom": "None", "CQ": [{"axiom": "Replace:array subClassOf n-adic operation", "CQ": ["Is Replace:array classified as a type of n-adic operation?", "What are the specific subtypes of n-adic operation, including Replace:array?", "Which broader categories encompass Replace:array?"]}]}
{"ontology": "OntoDT", "class": "Empty:bag", "axiom": {"subClassOf": ["niladic operation"]}, "datatype": "Type4", "TCQ": ["Is Empty:bag classified under niladic operation?", "Which operations fall under the category of niladic operation, including Empty:bag?", "What higher-level operation categories does Empty:bag belong to?"], "VCQ": ["Is Empty:bag classified under niladic operation?", "Which operations fall under the category of niladic operation, including Empty:bag?", "What higher-level operation categories does Empty:bag belong to?"], "Taxiom": "None", "CQ": [{"axiom": "Empty:bag subClassOf niladic operation", "CQ": ["Is Empty:bag classified under niladic operation?", "Which operations fall under the category of niladic operation, including Empty:bag?", "What higher-level operation categories does Empty:bag belong to?"]}]}
{"ontology": "OntoDT", "class": "Empty:sequence", "axiom": {"subClassOf": ["niladic operation"]}, "datatype": "Type4", "TCQ": ["Is Empty:sequence classified under the category of niladic operation?", "Which operations are subclasses of niladic operation, including Empty:sequence?", "Which more general operation categories encompass Empty:sequence?"], "VCQ": ["Is Empty:sequence classified under the category of niladic operation?", "Which operations are subclasses of niladic operation, including Empty:sequence?", "Which more general operation categories encompass Empty:sequence?"], "Taxiom": "None", "CQ": [{"axiom": "Empty:sequence subClassOf niladic operation", "CQ": ["Is Empty:sequence classified under the category of niladic operation?", "Which operations are subclasses of niladic operation, including Empty:sequence?", "Which more general operation categories encompass Empty:sequence?"]}]}
{"ontology": "OntoDT", "class": "Empty:set", "axiom": {"subClassOf": ["niladic operation"]}, "datatype": "Type4", "TCQ": ["Is Empty:set categorized as a type of niladic operation?", "What broader classes encompass Empty:set within the hierarchy of niladic operations?", "Which specific niladic operations include Empty:set as a subclass?"], "VCQ": ["Is Empty:set categorized as a type of niladic operation?", "Which specific niladic operations include Empty:set as a subclass?", "What broader classes encompass Empty:set within the hierarchy of niladic operations?"], "Taxiom": "None", "CQ": [{"axiom": "Empty:set subClassOf niladic operation", "CQ": ["Is Empty:set categorized as a type of niladic operation?", "Which specific niladic operations include Empty:set as a subclass?", "What broader classes encompass Empty:set within the hierarchy of niladic operations?"]}]}
{"ontology": "OntoDT", "class": "Empty:table", "axiom": {"subClassOf": ["niladic operation"]}, "datatype": "Type4", "TCQ": ["Which niladic operations have Empty:table as a more specific type?", "What broader operation categories encompass Empty:table?", "Does Empty:table fall under the category of niladic operations?"], "VCQ": ["Does Empty:table fall under the category of niladic operations?", "Which niladic operations have Empty:table as a more specific type?", "What broader operation categories encompass Empty:table?"], "Taxiom": "None", "CQ": [{"axiom": "Empty:table subClassOf niladic operation", "CQ": ["Does Empty:table fall under the category of niladic operations?", "Which niladic operations have Empty:table as a more specific type?", "What broader operation categories encompass Empty:table?"]}]}
{"ontology": "OntoDT", "class": "key access", "axiom": {"subClassOf": ["direct access property"]}, "datatype": "Type4", "TCQ": ["What are the more general property types that encompass key access?", "Which access properties fall under the category of direct access property, including key access?", "Is key access classified as a direct access property?"], "VCQ": ["Is key access classified as a direct access property?", "Which access properties fall under the category of direct access property, including key access?", "What are the more general property types that encompass key access?"], "Taxiom": "None", "CQ": [{"axiom": "key access subClassOf direct access property", "CQ": ["Is key access classified as a direct access property?", "Which access properties fall under the category of direct access property, including key access?", "What are the more general property types that encompass key access?"]}]}
{"ontology": "OntoDT", "class": "access by value", "axiom": {"subClassOf": ["indirect acess property"]}, "datatype": "Type4", "TCQ": ["Is access by value categorized under indirect access property?", "What more general properties include access by value as a specialization?", "Which types of properties fall within the scope of indirect access property?"], "VCQ": ["Is access by value categorized under indirect access property?", "Which types of properties fall within the scope of indirect access property?", "What more general properties include access by value as a specialization?"], "Taxiom": "None", "CQ": [{"axiom": "access by value subClassOf indirect acess property", "CQ": ["Is access by value categorized under indirect access property?", "Which types of properties fall within the scope of indirect access property?", "What more general properties include access by value as a specialization?"]}]}
{"ontology": "OntoDT", "class": "implementation dependent access", "axiom": {"subClassOf": ["indirect acess property"]}, "datatype": "Type4", "TCQ": ["Which access properties are more specific than indirect access property, such as implementation dependent access?", "To which broader types does implementation dependent access conceptually relate?", "Does implementation dependent access fall within the category of indirect access property?"], "VCQ": ["Does implementation dependent access fall within the category of indirect access property?", "Which access properties are more specific than indirect access property, such as implementation dependent access?", "To which broader types does implementation dependent access conceptually relate?"], "Taxiom": "None", "CQ": [{"axiom": "implementation dependent access subClassOf indirect acess property", "CQ": ["Does implementation dependent access fall within the category of indirect access property?", "Which access properties are more specific than indirect access property, such as implementation dependent access?", "To which broader types does implementation dependent access conceptually relate?"]}]}
{"ontology": "OntoDT", "class": "position access", "axiom": {"subClassOf": ["indirect acess property"]}, "datatype": "Type4", "TCQ": ["Which properties are subclasses under the indirect access property category?", "Is position access a type of indirect access property?", "What more general property categories does position access belong to?"], "VCQ": ["Is position access a type of indirect access property?", "Which properties are subclasses under the indirect access property category?", "What more general property categories does position access belong to?"], "Taxiom": "None", "CQ": [{"axiom": "position access subClassOf indirect acess property", "CQ": ["Is position access a type of indirect access property?", "Which properties are subclasses under the indirect access property category?", "What more general property categories does position access belong to?"]}]}
{"ontology": "OntoDT", "class": "unordered aggregate", "axiom": {"subClassOf": ["aggregate imposed ordering"]}, "datatype": "Type4", "TCQ": ["Is aggregate imposed ordering a superclass of unordered aggregate?", "To which broader aggregation categories does unordered aggregate belong?", "Which specific types of aggregate imposed ordering include unordered aggregate as a subclass?"], "VCQ": ["Is aggregate imposed ordering a superclass of unordered aggregate?", "Which specific types of aggregate imposed ordering include unordered aggregate as a subclass?", "To which broader aggregation categories does unordered aggregate belong?"], "Taxiom": "None", "CQ": [{"axiom": "unordered aggregate subClassOf aggregate imposed ordering", "CQ": ["Is aggregate imposed ordering a superclass of unordered aggregate?", "Which specific types of aggregate imposed ordering include unordered aggregate as a subclass?", "To which broader aggregation categories does unordered aggregate belong?"]}]}
{"ontology": "OntoDT", "class": "identifier unique", "axiom": {"subClassOf": ["aggregate-imposed identifier uniqueness"]}, "datatype": "Type4", "TCQ": ["Does identifier unique fall under the broader classification of aggregate-imposed identifier uniqueness?", "What more general categories encompass identifier unique within the ontology?", "Which kinds of identifier uniqueness are specified as subclasses of aggregate-imposed identifier uniqueness?"], "VCQ": ["Does identifier unique fall under the broader classification of aggregate-imposed identifier uniqueness?", "Which kinds of identifier uniqueness are specified as subclasses of aggregate-imposed identifier uniqueness?", "What more general categories encompass identifier unique within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "identifier unique subClassOf aggregate-imposed identifier uniqueness", "CQ": ["Does identifier unique fall under the broader classification of aggregate-imposed identifier uniqueness?", "Which kinds of identifier uniqueness are specified as subclasses of aggregate-imposed identifier uniqueness?", "What more general categories encompass identifier unique within the ontology?"]}]}
{"ontology": "OntoDT", "class": "variable size", "axiom": {"subClassOf": ["agregate size"]}, "datatype": "Type4", "TCQ": ["Which specific types are encompassed by aggregate size, such as variable size?", "Does variable size fall under the broader classification of aggregate size?", "To what higher-level groups does variable size belong according to the ontology?"], "VCQ": ["Does variable size fall under the broader classification of aggregate size?", "Which specific types are encompassed by aggregate size, such as variable size?", "To what higher-level groups does variable size belong according to the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "variable size subClassOf agregate size", "CQ": ["Does variable size fall under the broader classification of aggregate size?", "Which specific types are encompassed by aggregate size, such as variable size?", "To what higher-level groups does variable size belong according to the ontology?"]}]}
{"ontology": "OntoDT", "class": "component non-mandatory", "axiom": {"subClassOf": ["component mandatoriness"]}, "datatype": "Type4", "TCQ": ["What broader mandatoriness categories encompass component non-mandatory?", "To which general mandatoriness classifications does component non-mandatory belong?", "Which types are more specific than component mandatoriness, including component non-mandatory?"], "VCQ": ["What broader mandatoriness categories encompass component non-mandatory?", "Which types are more specific than component mandatoriness, including component non-mandatory?", "To which general mandatoriness classifications does component non-mandatory belong?"], "Taxiom": "None", "CQ": [{"axiom": "component non-mandatory subClassOf component mandatoriness", "CQ": ["What broader mandatoriness categories encompass component non-mandatory?", "Which types are more specific than component mandatoriness, including component non-mandatory?", "To which general mandatoriness classifications does component non-mandatory belong?"]}]}
{"ontology": "OntoDT", "class": "one dimensional", "axiom": {"subClassOf": ["dimensionality"]}, "datatype": "Type4", "TCQ": ["Is one dimensional classified as a specialized form under dimensionality?", "Which concepts are encompassed under dimensionality, such as one dimensional?", "What broader type does one dimensional inherit from in the dimensional hierarchy?"], "VCQ": ["Is one dimensional classified as a specialized form under dimensionality?", "Which concepts are encompassed under dimensionality, such as one dimensional?", "What broader type does one dimensional inherit from in the dimensional hierarchy?"], "Taxiom": "None", "CQ": [{"axiom": "one dimensional subClassOf dimensionality", "CQ": ["Is one dimensional classified as a specialized form under dimensionality?", "Which concepts are encompassed under dimensionality, such as one dimensional?", "What broader type does one dimensional inherit from in the dimensional hierarchy?"]}]}
{"ontology": "OntoDT", "class": "two dimensional", "axiom": {"subClassOf": ["dimensionality"]}, "datatype": "Type4", "TCQ": ["Which general category encompasses two dimensional in the ontology?", "Is two dimensional a more specific type of dimensionality?", "What are the subclasses categorized under dimensionality, such as two dimensional?"], "VCQ": ["Is two dimensional a more specific type of dimensionality?", "What are the subclasses categorized under dimensionality, such as two dimensional?", "Which general category encompasses two dimensional in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "two dimensional subClassOf dimensionality", "CQ": ["Is two dimensional a more specific type of dimensionality?", "What are the subclasses categorized under dimensionality, such as two dimensional?", "Which general category encompasses two dimensional in the ontology?"]}]}
{"ontology": "OntoDT", "class": "multi dimensional", "axiom": {"subClassOf": ["dimensionality"]}, "datatype": "Type4", "TCQ": ["Is multi dimensional categorized under the broader concept of dimensionality?", "To which higher-level classes does multi dimensional belong in the context of dimensionality?", "Which subclasses are encompassed by dimensionality, such as multi dimensional?"], "VCQ": ["Is multi dimensional categorized under the broader concept of dimensionality?", "Which subclasses are encompassed by dimensionality, such as multi dimensional?", "To which higher-level classes does multi dimensional belong in the context of dimensionality?"], "Taxiom": "None", "CQ": [{"axiom": "multi dimensional subClassOf dimensionality", "CQ": ["Is multi dimensional categorized under the broader concept of dimensionality?", "Which subclasses are encompassed by dimensionality, such as multi dimensional?", "To which higher-level classes does multi dimensional belong in the context of dimensionality?"]}]}
{"ontology": "OntoDT", "class": "heterogenous", "axiom": {"subClassOf": ["homogenity"]}, "datatype": "Type4", "TCQ": ["What broader classes is heterogenous associated with in the ontology?", "Which subclasses fall under the concept of homogenity, such as heterogenous?", "Is heterogenous included as a specific type under homogenity?"], "VCQ": ["Is heterogenous included as a specific type under homogenity?", "Which subclasses fall under the concept of homogenity, such as heterogenous?", "What broader classes is heterogenous associated with in the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "heterogenous subClassOf homogenity", "CQ": ["Is heterogenous included as a specific type under homogenity?", "Which subclasses fall under the concept of homogenity, such as heterogenous?", "What broader classes is heterogenous associated with in the ontology?"]}]}
{"ontology": "OntoDT", "class": "non-recursive", "axiom": {"subClassOf": ["recursiveness"]}, "datatype": "Type4", "TCQ": ["Which higher-order classes does non-recursive fall under?", "What categories are directly encompassed by recursiveness, including non-recursive?", "Is non-recursive categorized under recursiveness as a more specific classification?"], "VCQ": ["Is non-recursive categorized under recursiveness as a more specific classification?", "What categories are directly encompassed by recursiveness, including non-recursive?", "Which higher-order classes does non-recursive fall under?"], "Taxiom": "None", "CQ": [{"axiom": "non-recursive subClassOf recursiveness", "CQ": ["Is non-recursive categorized under recursiveness as a more specific classification?", "What categories are directly encompassed by recursiveness, including non-recursive?", "Which higher-order classes does non-recursive fall under?"]}]}
{"ontology": "OntoDT", "class": "structured", "axiom": {"subClassOf": ["structurness"]}, "datatype": "Type4", "TCQ": ["Is structurness a direct superclass of structured?", "Which higher-level categories encompass the concept of structured?", "What more specific classes fall under structurness, such as structured?"], "VCQ": ["Is structurness a direct superclass of structured?", "What more specific classes fall under structurness, such as structured?", "Which higher-level categories encompass the concept of structured?"], "Taxiom": "None", "CQ": [{"axiom": "structured subClassOf structurness", "CQ": ["Is structurness a direct superclass of structured?", "What more specific classes fall under structurness, such as structured?", "Which higher-level categories encompass the concept of structured?"]}]}
{"ontology": "OntoDT", "class": "unstructured", "axiom": {"subClassOf": ["structurness"]}, "datatype": "Type4", "TCQ": ["Which types are categorized more specifically than structurness, such as unstructured?", "To what higher-level groupings does unstructured pertain?", "Does unstructured fall under the category of structurness?"], "VCQ": ["Does unstructured fall under the category of structurness?", "Which types are categorized more specifically than structurness, such as unstructured?", "To what higher-level groupings does unstructured pertain?"], "Taxiom": "None", "CQ": [{"axiom": "unstructured subClassOf structurness", "CQ": ["Does unstructured fall under the category of structurness?", "Which types are categorized more specifically than structurness, such as unstructured?", "To what higher-level groupings does unstructured pertain?"]}]}
{"ontology": "OntoDT", "class": "semi-structured", "axiom": {"subClassOf": ["structurness"]}, "datatype": "Type4", "TCQ": ["What broader categories encompass semi-structured within the ontology?", "Is semi-structured classified as a type of structurness?", "Which subclasses of structurness include semi-structured?"], "VCQ": ["Is semi-structured classified as a type of structurness?", "Which subclasses of structurness include semi-structured?", "What broader categories encompass semi-structured within the ontology?"], "Taxiom": "None", "CQ": [{"axiom": "semi-structured subClassOf structurness", "CQ": ["Is semi-structured classified as a type of structurness?", "Which subclasses of structurness include semi-structured?", "What broader categories encompass semi-structured within the ontology?"]}]}
{"ontology": "OntoDT", "class": "unique values", "axiom": {"subClassOf": ["uniqueness"]}, "datatype": "Type4", "TCQ": ["What are the broader classes that unique values are classified under?", "Are unique values considered a specific type of uniqueness?", "Which subclasses fall under the category of uniqueness, including unique values?"], "VCQ": ["Are unique values considered a specific type of uniqueness?", "Which subclasses fall under the category of uniqueness, including unique values?", "What are the broader classes that unique values are classified under?"], "Taxiom": "None", "CQ": [{"axiom": "unique values subClassOf uniqueness", "CQ": ["Are unique values considered a specific type of uniqueness?", "Which subclasses fall under the category of uniqueness, including unique values?", "What are the broader classes that unique values are classified under?"]}]}
{"ontology": "OntoDT", "class": "target field identifier", "axiom": {"subClassOf": ["field identifier"]}, "datatype": "Type4", "TCQ": ["What higher-level field identifiers categorize target field identifier?", "Does target field identifier belong to the broader group defined by field identifier?", "Which field identifier subtypes encompass target field identifier as a member?"], "VCQ": ["Does target field identifier belong to the broader group defined by field identifier?", "Which field identifier subtypes encompass target field identifier as a member?", "What higher-level field identifiers categorize target field identifier?"], "Taxiom": "None", "CQ": [{"axiom": "target field identifier subClassOf field identifier", "CQ": ["Does target field identifier belong to the broader group defined by field identifier?", "Which field identifier subtypes encompass target field identifier as a member?", "What higher-level field identifiers categorize target field identifier?"]}]}
{"ontology": "OntoDT", "class": "positive integer", "axiom": {"subClassOf": ["extended datatype"]}, "datatype": "Type4", "TCQ": ["Is positive integer classified as a more specific type under extended datatype?", "Which datatypes fall within the category of extended datatype, encompassing positive integer?", "What broader datatype groups does positive integer inherit from?"], "VCQ": ["Is positive integer classified as a more specific type under extended datatype?", "Which datatypes fall within the category of extended datatype, encompassing positive integer?", "What broader datatype groups does positive integer inherit from?"], "Taxiom": "None", "CQ": [{"axiom": "positive integer subClassOf extended datatype", "CQ": ["Is positive integer classified as a more specific type under extended datatype?", "Which datatypes fall within the category of extended datatype, encompassing positive integer?", "What broader datatype groups does positive integer inherit from?"]}]}
{"ontology": "OntoDT", "class": "positive integer range generator", "axiom": {"subClassOf": ["range subtype generator"]}, "datatype": "Type4", "TCQ": ["Is every positive integer range generator categorized under range subtype generator?", "Which specialized generators are classified beneath range subtype generator, including positive integer range generator?", "Under which broader generator types does positive integer range generator fall?"], "VCQ": ["Is every positive integer range generator categorized under range subtype generator?", "Which specialized generators are classified beneath range subtype generator, including positive integer range generator?", "Under which broader generator types does positive integer range generator fall?"], "Taxiom": "None", "CQ": [{"axiom": "positive integer range generator subClassOf range subtype generator", "CQ": ["Is every positive integer range generator categorized under range subtype generator?", "Which specialized generators are classified beneath range subtype generator, including positive integer range generator?", "Under which broader generator types does positive integer range generator fall?"]}]}
{"ontology": "OntoDT", "class": "return-parameter specification", "axiom": {"subClassOf": ["specification"], "propertyRestrictions": ["[has_member some datatype]", "[has_identifier only parameter identifier]"]}, "datatype": "Type3", "TCQ": ["Must every return-parameter specification have at least one identifier specified via the has_identifier property?", "Is it required for a return-parameter specification to possess a parameter identifier through the has_identifier relationship?", "Does a return-parameter specification entail the existence of some associated parameter identifier via has_identifier?"], "VCQ": ["Does return-parameter specification fall under the broader category of specification?", "What types are classified as specializations of specification, such as return-parameter specification?", "Which overarching categories include return-parameter specification as a member?", "Is every return-parameter specification required to have at least one member of type datatype via the has_member property?", "Can a return-parameter specification exist without being associated with any datatype through the has_member relation?", "Does the ontology allow a return-parameter specification to have has_member only for datatype instances?", "Must every return-parameter specification have at least one identifier specified via the has_identifier property?", "Is it required for a return-parameter specification to possess a parameter identifier through the has_identifier relationship?", "Does a return-parameter specification entail the existence of some associated parameter identifier via has_identifier?"], "Taxiom": "return-parameter specification propertyRestrictions [has_identifier some parameter identifier]", "CQ": [{"axiom": "return-parameter specification subClassOf specification", "CQ": ["Does return-parameter specification fall under the broader category of specification?", "What types are classified as specializations of specification, such as return-parameter specification?", "Which overarching categories include return-parameter specification as a member?"]}, {"axiom": "return-parameter specification propertyRestrictions [has_member some datatype]", "CQ": ["Is every return-parameter specification required to have at least one member of type datatype via the has_member property?", "Can a return-parameter specification exist without being associated with any datatype through the has_member relation?", "Does the ontology allow a return-parameter specification to have has_member only for datatype instances?"]}, {"axiom": "return-parameter specification propertyRestrictions [has_identifier some parameter identifier]", "CQ": ["Must every return-parameter specification have at least one identifier specified via the has_identifier property?", "Is it required for a return-parameter specification to possess a parameter identifier through the has_identifier relationship?", "Does a return-parameter specification entail the existence of some associated parameter identifier via has_identifier?"]}]}
{"ontology": "OntoDT", "class": "excluding subtype generator", "axiom": {"subClassOf": ["subtype generator"], "propertyRestrictions": ["[has_member only select-list]"]}, "datatype": "Type3", "TCQ": ["Does the concept 'excluding subtype generator' necessarily include at least one member from the 'select-list' via the 'has_member' property?", "Is it required that every 'excluding subtype generator' entity is related through 'has_member' to an instance belonging to the 'select-list'?", "Could an 'excluding subtype generator' exist without linking to at least one element of the 'select-list' through 'has_member'?"], "VCQ": ["Does excluding subtype generator fall under the category of subtype generator?", "What specific subclasses are identified within subtype generator, apart from excluding subtype generator?", "Which broader types does excluding subtype generator pertain to?", "Does the concept 'excluding subtype generator' necessarily include at least one member from the 'select-list' via the 'has_member' property?", "Is it required that every 'excluding subtype generator' entity is related through 'has_member' to an instance belonging to the 'select-list'?", "Could an 'excluding subtype generator' exist without linking to at least one element of the 'select-list' through 'has_member'?"], "Taxiom": "excluding subtype generator propertyRestrictions [has_member some select-list]", "CQ": [{"axiom": "excluding subtype generator subClassOf subtype generator", "CQ": ["Does excluding subtype generator fall under the category of subtype generator?", "What specific subclasses are identified within subtype generator, apart from excluding subtype generator?", "Which broader types does excluding subtype generator pertain to?"]}, {"axiom": "excluding subtype generator propertyRestrictions [has_member some select-list]", "CQ": ["Does the concept 'excluding subtype generator' necessarily include at least one member from the 'select-list' via the 'has_member' property?", "Is it required that every 'excluding subtype generator' entity is related through 'has_member' to an instance belonging to the 'select-list'?", "Could an 'excluding subtype generator' exist without linking to at least one element of the 'select-list' through 'has_member'?"]}]}
{"ontology": "OntoDT", "class": "selection subtype generator", "axiom": {"subClassOf": ["subtype generator"], "propertyRestrictions": ["[has_member only select-list]"]}, "datatype": "Type3", "TCQ": ["Does every selection necessarily include at least one member from the select-list?", "Is it required for any selection to have a member that is part of the select-list?", "Can a selection exist without having any member drawn from the select-list?"], "VCQ": ["Does selection subtype generator fall under the broader category of subtype generator?", "What specific types are encompassed by subtype generator, including selection subtype generator?", "Which higher-level categories include selection subtype generator as a member?", "Does every selection necessarily include at least one member from the select-list?", "Is it required for any selection to have a member that is part of the select-list?", "Can a selection exist without having any member drawn from the select-list?"], "Taxiom": "selection subtype generator propertyRestrictions [has_member some select-list]", "CQ": [{"axiom": "selection subtype generator subClassOf subtype generator", "CQ": ["Does selection subtype generator fall under the broader category of subtype generator?", "What specific types are encompassed by subtype generator, including selection subtype generator?", "Which higher-level categories include selection subtype generator as a member?"]}, {"axiom": "selection subtype generator propertyRestrictions [has_member some select-list]", "CQ": ["Does every selection necessarily include at least one member from the select-list?", "Is it required for any selection to have a member that is part of the select-list?", "Can a selection exist without having any member drawn from the select-list?"]}]}
{"ontology": "OntoDT", "class": "labeled graph datatype", "axiom": {"subClassOf": ["defined datatype"], "propertyRestrictions": ["[has_member only directed labeled graph datatype generator]"]}, "datatype": "Type3", "TCQ": ["Must every labeled graph with propertyRestrictions have at least one has_member relation to a directed labeled graph datatype generator?", "Is it required for any labeled graph with propertyRestrictions to be associated, via has_member, with a directed labeled graph datatype generator?", "Can a labeled graph with propertyRestrictions exist without having the has_member property relating it to a directed labeled graph datatype generator?"], "VCQ": ["Is labeled graph datatype classified as a kind of defined datatype?", "What are the subtypes encompassed by defined datatype, such as labeled graph datatype?", "Which more general types include labeled graph datatype as a member?", "Must every labeled graph with propertyRestrictions have at least one has_member relation to a directed labeled graph datatype generator?", "Is it required for any labeled graph with propertyRestrictions to be associated, via has_member, with a directed labeled graph datatype generator?", "Can a labeled graph with propertyRestrictions exist without having the has_member property relating it to a directed labeled graph datatype generator?"], "Taxiom": "labeled graph datatype propertyRestrictions [has_member some directed labeled graph datatype generator]", "CQ": [{"axiom": "labeled graph datatype subClassOf defined datatype", "CQ": ["Is labeled graph datatype classified as a kind of defined datatype?", "What are the subtypes encompassed by defined datatype, such as labeled graph datatype?", "Which more general types include labeled graph datatype as a member?"]}, {"axiom": "labeled graph datatype propertyRestrictions [has_member some directed labeled graph datatype generator]", "CQ": ["Must every labeled graph with propertyRestrictions have at least one has_member relation to a directed labeled graph datatype generator?", "Is it required for any labeled graph with propertyRestrictions to be associated, via has_member, with a directed labeled graph datatype generator?", "Can a labeled graph with propertyRestrictions exist without having the has_member property relating it to a directed labeled graph datatype generator?"]}]}
{"ontology": "OntoDT", "class": "bag generator", "axiom": {"subClassOf": ["homogenous unordered aggregate generator with variable size"], "disjointWith": ["set generator"], "propertyRestrictions": ["[has_quality some non-unique values]", "[has_quality only implementation dependent access]"]}, "datatype": "Type3", "TCQ": ["Is every bag generator required to have at least one quality associated with implementation dependent access?", "Does a bag generator necessarily possess the quality of implementation dependent access through the has_quality property?", "Can a bag generator exist without having the has_quality property relating it to implementation dependent access?"], "VCQ": ["Is every bag generator classified under homogenous unordered aggregate generator with variable size?", "What aggregate generators are categorized as more specific forms of homogenous unordered aggregate generator with variable size?", "To which broader generator categories does bag generator belong?", "How does the ontology differentiate between bag generators and set generators?", "Is there any instance that can simultaneously belong to both bag generator and set generator classes?", "Which classes are explicitly stated as disjoint with set generator?", "Is it necessary for a bag generator to possess at least one quality that is classified as a non-unique value?", "Does every bag generator exhibit the property 'has_quality' with some value that is not unique?", "Can a bag generator exist without having any non-unique value as its quality?", "Is every bag generator required to have at least one quality associated with implementation dependent access?", "Does a bag generator necessarily possess the quality of implementation dependent access through the has_quality property?", "Can a bag generator exist without having the has_quality property relating it to implementation dependent access?"], "Taxiom": "bag generator propertyRestrictions [has_quality some implementation dependent access]", "CQ": [{"axiom": "bag generator subClassOf homogenous unordered aggregate generator with variable size", "CQ": ["Is every bag generator classified under homogenous unordered aggregate generator with variable size?", "What aggregate generators are categorized as more specific forms of homogenous unordered aggregate generator with variable size?", "To which broader generator categories does bag generator belong?"]}, {"axiom": "bag generator disjointWith set generator", "CQ": ["How does the ontology differentiate between bag generators and set generators?", "Is there any instance that can simultaneously belong to both bag generator and set generator classes?", "Which classes are explicitly stated as disjoint with set generator?"]}, {"axiom": "bag generator propertyRestrictions [has_quality some non-unique values]", "CQ": ["Is it necessary for a bag generator to possess at least one quality that is classified as a non-unique value?", "Does every bag generator exhibit the property 'has_quality' with some value that is not unique?", "Can a bag generator exist without having any non-unique value as its quality?"]}, {"axiom": "bag generator propertyRestrictions [has_quality some implementation dependent access]", "CQ": ["Is every bag generator required to have at least one quality associated with implementation dependent access?", "Does a bag generator necessarily possess the quality of implementation dependent access through the has_quality property?", "Can a bag generator exist without having the has_quality property relating it to implementation dependent access?"]}]}
{"ontology": "OntoDT", "class": "record generator", "axiom": {"subClassOf": ["heterogenous aggregate generator"], "disjointWith": ["table datatype"], "propertyRestrictions": ["[has_quality some one dimensional]", "[has_quality some unordered aggregate]", "[has_quality some key access]", "[has_quality some non-unique values]", "[has_quality only fixed size]"]}, "datatype": "Type3", "TCQ": ["Is it required that every record generator has at least one quality characterized by a fixed size?", "Must a record generator possess the property 'has_quality' with a value of fixed size?", "Does the presence of the fixed size quality define the class of record generators with respect to the has_quality property?"], "VCQ": ["Is record generator categorized under heterogenous aggregate generator?", "Which entities are classified as specific types of heterogenous aggregate generator, including record generator?", "To which broader classifications does record generator belong?", "What logical separation exists between the record generator and table datatype classes in the ontology?", "Can an entity simultaneously be classified as both a record generator and a table datatype?", "Which ontology classes are declared as disjoint with the table datatype class?", "Is every record generator required to possess at least one quality that is classified as one dimensional?", "Can a record generator exist without having any one dimensional quality?", "Does the presence of a one dimensional quality suffice for an entity to be regarded as a record generator?", "Must every record generator have the property 'has_quality' associated with at least one unordered aggregate?", "Is there a requirement for a record generator to possess any quality that is classified as an unordered aggregate?", "Can a record generator exist without having a 'has_quality' relationship to an unordered aggregate?", "Is it required for a record generator to have at least one 'has_quality' relationship with a key access instance?", "Can a record generator exist without possessing any key access quality via the 'has_quality' relation?", "Does every record generator necessarily exhibit some form of key access as a quality?", "Must every record generator possess at least one quality characterized as having non-unique values?", "Is it required that some quality associated with a record generator be of the type where values are not unique?", "Can a record generator exist without being linked to a quality with non-unique values?", "Is it required that every record generator has at least one quality characterized by a fixed size?", "Must a record generator possess the property 'has_quality' with a value of fixed size?", "Does the presence of the fixed size quality define the class of record generators with respect to the has_quality property?"], "Taxiom": "record generator propertyRestrictions [has_quality some fixed size]", "CQ": [{"axiom": "record generator subClassOf heterogenous aggregate generator", "CQ": ["Is record generator categorized under heterogenous aggregate generator?", "Which entities are classified as specific types of heterogenous aggregate generator, including record generator?", "To which broader classifications does record generator belong?"]}, {"axiom": "record generator disjointWith table datatype", "CQ": ["What logical separation exists between the record generator and table datatype classes in the ontology?", "Can an entity simultaneously be classified as both a record generator and a table datatype?", "Which ontology classes are declared as disjoint with the table datatype class?"]}, {"axiom": "record generator propertyRestrictions [has_quality some fixed size]", "CQ": ["Is it required that every record generator has at least one quality characterized by a fixed size?", "Must a record generator possess the property 'has_quality' with a value of fixed size?", "Does the presence of the fixed size quality define the class of record generators with respect to the has_quality property?"]}, {"axiom": "record generator propertyRestrictions [has_quality some one dimensional]", "CQ": ["Is every record generator required to possess at least one quality that is classified as one dimensional?", "Can a record generator exist without having any one dimensional quality?", "Does the presence of a one dimensional quality suffice for an entity to be regarded as a record generator?"]}, {"axiom": "record generator propertyRestrictions [has_quality some unordered aggregate]", "CQ": ["Must every record generator have the property 'has_quality' associated with at least one unordered aggregate?", "Is there a requirement for a record generator to possess any quality that is classified as an unordered aggregate?", "Can a record generator exist without having a 'has_quality' relationship to an unordered aggregate?"]}, {"axiom": "record generator propertyRestrictions [has_quality some key access]", "CQ": ["Is it required for a record generator to have at least one 'has_quality' relationship with a key access instance?", "Can a record generator exist without possessing any key access quality via the 'has_quality' relation?", "Does every record generator necessarily exhibit some form of key access as a quality?"]}, {"axiom": "record generator propertyRestrictions [has_quality some non-unique values]", "CQ": ["Must every record generator possess at least one quality characterized as having non-unique values?", "Is it required that some quality associated with a record generator be of the type where values are not unique?", "Can a record generator exist without being linked to a quality with non-unique values?"]}]}
{"ontology": "OntoDT", "class": "homogenous unordered aggregate generator with variable size", "axiom": {"subClassOf": ["homogenous aggregate generator with variable size"], "equivalentClass": ["(bag generator or set generator)"], "propertyRestrictions": ["[has_quality only unordered aggregate]"]}, "datatype": "Type3", "TCQ": ["Does every homogenous unordered aggregate generator necessarily have at least one quality characterized as an unordered aggregate?", "Can a homogenous unordered aggregate generator possess the 'has_quality' property only if the quality is of type unordered aggregate?", "Is it possible for a homogenous unordered aggregate generator to lack any 'has_quality' relationship to unordered aggregate entities?"], "VCQ": ["Does a homogenous unordered aggregate generator with variable size constitute a specific kind of homogenous aggregate generator with variable size?", "Which aggregate generators with variable size fall under the category of homogenous aggregate generator with variable size, including homogenous unordered aggregate generator with variable size?", "What broader aggregate generator classes encompass homogenous unordered aggregate generator with variable size?", "Is a homogenous unordered aggregate generator with variable size equivalent to a bag generator or a set generator?", "Are all homogenous unordered aggregate generators with variable size instances of either bag generators or set generators?", "Can any generator outside the categories of bag generator or set generator be classified as a homogenous unordered aggregate generator with variable size?", "Does every homogenous unordered aggregate generator necessarily have at least one quality characterized as an unordered aggregate?", "Can a homogenous unordered aggregate generator possess the 'has_quality' property only if the quality is of type unordered aggregate?", "Is it possible for a homogenous unordered aggregate generator to lack any 'has_quality' relationship to unordered aggregate entities?"], "Taxiom": "homogenous unordered aggregate generator with variable size propertyRestrictions [has_quality some unordered aggregate]", "CQ": [{"axiom": "homogenous unordered aggregate generator with variable size subClassOf homogenous aggregate generator with variable size", "CQ": ["Does a homogenous unordered aggregate generator with variable size constitute a specific kind of homogenous aggregate generator with variable size?", "Which aggregate generators with variable size fall under the category of homogenous aggregate generator with variable size, including homogenous unordered aggregate generator with variable size?", "What broader aggregate generator classes encompass homogenous unordered aggregate generator with variable size?"]}, {"axiom": "homogenous unordered aggregate generator with variable size equivalentClass (bag generator or set generator)", "CQ": ["Is a homogenous unordered aggregate generator with variable size equivalent to a bag generator or a set generator?", "Are all homogenous unordered aggregate generators with variable size instances of either bag generators or set generators?", "Can any generator outside the categories of bag generator or set generator be classified as a homogenous unordered aggregate generator with variable size?"]}, {"axiom": "homogenous unordered aggregate generator with variable size propertyRestrictions [has_quality some unordered aggregate]", "CQ": ["Does every homogenous unordered aggregate generator necessarily have at least one quality characterized as an unordered aggregate?", "Can a homogenous unordered aggregate generator possess the 'has_quality' property only if the quality is of type unordered aggregate?", "Is it possible for a homogenous unordered aggregate generator to lack any 'has_quality' relationship to unordered aggregate entities?"]}]}
{"ontology": "OntoDT", "class": "table datatype", "axiom": {"subClassOf": ["heterogenous aggregate datatype"], "disjointWith": ["record (tuple) datatype"], "propertyRestrictions": ["[has_member some table generator]", "[has_operation some IsEmpty:table]", "[has_operation some MapToBag:table]", "[has_operation some Insert:table]", "[has_operation some Select:table]", "[has_operation some MapToTable:table]", "[has_quality some exact]", "[has_operation some Delete:table]", "[has_operation some Fetch:table]", "[has_operation some Serialize:table]", "[has_quality some non-numeric]", "[has_member only field-list]"]}, "datatype": "Type3", "TCQ": ["Is it required that every table has at least one member from the field-list?", "Does the definition of a table ensure that it must be associated with some field-list member via the has_member property?", "Can a table exist without having any has_member link to a field-list individual?"], "VCQ": ["Is table datatype classified as a subtype of heterogenous aggregate datatype?", "What specific datatypes fall under the category of heterogenous aggregate datatype, including table datatype?", "Which broader datatype classes does table datatype belong to?", "How is the relationship between table datatype and record (tuple) datatype defined in the ontology?", "Is there any datatype that qualifies as both table datatype and record (tuple) datatype?", "Which datatypes are explicitly specified as incompatible with record (tuple) datatype?", "Is it required that every table has at least one member generated by a table generator?", "Does a table necessarily include some entity that originates from a table generator through the has_member property?", "Can any table be defined without having the has_member relationship to a table generator?", "Is every instance of the table required to have at least one 'has_operation' relationship with an instance of IsEmpty?", "Can a table exist without being associated through 'has_operation' to IsEmpty?", "Are all tables characterized by the presence of a 'has_operation' property linking them to IsEmpty?", "Is every instance of 'table' required to have at least one 'has_operation' relationship with an entity of type 'MapToBag:table'?", "Can a 'table' exist without being linked through 'has_operation' to any 'MapToBag:table'?", "Does the presence of the 'has_operation' property linking 'table' to 'MapToBag:table' define all instances of the class 'table'?", "Must every table participate in at least one 'Insert:table' operation?", "Does the presence of the 'has_operation' relationship with 'Insert:table' characterize all instances of table?", "Is it required that every table is associated with some insertion operation?", "Is every table required to have at least one 'has_operation' relationship to an entity of type Select?", "Are there tables that do not have any 'has_operation' property pointing to a Select instance?", "Must a table always be associated with a Select through the 'has_operation' property?", "Is it required that a table always has at least one has_operation relationship to a MapToTable:table?", "Can a table exist without being associated via has_operation to any MapToTable:table?", "Does every instance of table necessarily participate in the has_operation property involving a MapToTable:table?", "Is every table required to have at least one 'has_quality' property with the value 'exact'?", "Can a table exist without possessing the 'has_quality' property set to 'exact' in any instance?", "Does the definition of table permit 'has_quality' property values other than 'exact', or is 'exact' necessary for all tables?", "Is it required for a table to participate in at least one 'Delete' operation?", "Can every table have an associated 'Delete' operation through the property 'has_operation'?", "Does the ontology entail that any table must have the 'has_operation' relationship to a 'Delete' process?", "Is every table in the scope required to have at least one 'has_operation' connection with a Fetch action?", "Can a table exist without being associated with any Fetch operation through the 'has_operation' property?", "Is it necessary for tables to participate in the 'has_operation' relationship with at least one Fetch instance?", "Is it required that a table have at least one has_operation relation to Serialize:table?", "Does every table necessarily perform a Serialize:table operation via the has_operation property?", "Can a table exist without being associated with Serialize:table through the has_operation property?", "Are all tables required to possess at least one quality that is considered non-numeric?", "Is it essential for any instance of a table to have the 'has_quality' property relating to a value categorized as non-numeric?", "Can a table exist in the ontology without any non-numeric quality assigned through the 'has_quality' property?", "Is it required that every table has at least one member from the field-list?", "Does the definition of a table ensure that it must be associated with some field-list member via the has_member property?", "Can a table exist without having any has_member link to a field-list individual?"], "Taxiom": "table datatype propertyRestrictions [has_member some field-list]", "CQ": [{"axiom": "table datatype subClassOf heterogenous aggregate datatype", "CQ": ["Is table datatype classified as a subtype of heterogenous aggregate datatype?", "What specific datatypes fall under the category of heterogenous aggregate datatype, including table datatype?", "Which broader datatype classes does table datatype belong to?"]}, {"axiom": "table datatype disjointWith record (tuple) datatype", "CQ": ["How is the relationship between table datatype and record (tuple) datatype defined in the ontology?", "Is there any datatype that qualifies as both table datatype and record (tuple) datatype?", "Which datatypes are explicitly specified as incompatible with record (tuple) datatype?"]}, {"axiom": "table datatype propertyRestrictions [has_member some table generator]", "CQ": ["Is it required that every table has at least one member generated by a table generator?", "Does a table necessarily include some entity that originates from a table generator through the has_member property?", "Can any table be defined without having the has_member relationship to a table generator?"]}, {"axiom": "table datatype propertyRestrictions [has_operation some IsEmpty:table]", "CQ": ["Is every instance of the table required to have at least one 'has_operation' relationship with an instance of IsEmpty?", "Can a table exist without being associated through 'has_operation' to IsEmpty?", "Are all tables characterized by the presence of a 'has_operation' property linking them to IsEmpty?"]}, {"axiom": "table datatype propertyRestrictions [has_operation some MapToBag:table]", "CQ": ["Is every instance of 'table' required to have at least one 'has_operation' relationship with an entity of type 'MapToBag:table'?", "Can a 'table' exist without being linked through 'has_operation' to any 'MapToBag:table'?", "Does the presence of the 'has_operation' property linking 'table' to 'MapToBag:table' define all instances of the class 'table'?"]}, {"axiom": "table datatype propertyRestrictions [has_operation some Insert:table]", "CQ": ["Must every table participate in at least one 'Insert:table' operation?", "Does the presence of the 'has_operation' relationship with 'Insert:table' characterize all instances of table?", "Is it required that every table is associated with some insertion operation?"]}, {"axiom": "table datatype propertyRestrictions [has_operation some Select:table]", "CQ": ["Is every table required to have at least one 'has_operation' relationship to an entity of type Select?", "Are there tables that do not have any 'has_operation' property pointing to a Select instance?", "Must a table always be associated with a Select through the 'has_operation' property?"]}, {"axiom": "table datatype propertyRestrictions [has_operation some MapToTable:table]", "CQ": ["Is it required that a table always has at least one has_operation relationship to a MapToTable:table?", "Can a table exist without being associated via has_operation to any MapToTable:table?", "Does every instance of table necessarily participate in the has_operation property involving a MapToTable:table?"]}, {"axiom": "table datatype propertyRestrictions [has_member some field-list]", "CQ": ["Is it required that every table has at least one member from the field-list?", "Does the definition of a table ensure that it must be associated with some field-list member via the has_member property?", "Can a table exist without having any has_member link to a field-list individual?"]}, {"axiom": "table datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is every table required to have at least one 'has_quality' property with the value 'exact'?", "Can a table exist without possessing the 'has_quality' property set to 'exact' in any instance?", "Does the definition of table permit 'has_quality' property values other than 'exact', or is 'exact' necessary for all tables?"]}, {"axiom": "table datatype propertyRestrictions [has_operation some Delete:table]", "CQ": ["Is it required for a table to participate in at least one 'Delete' operation?", "Can every table have an associated 'Delete' operation through the property 'has_operation'?", "Does the ontology entail that any table must have the 'has_operation' relationship to a 'Delete' process?"]}, {"axiom": "table datatype propertyRestrictions [has_operation some Fetch:table]", "CQ": ["Is every table in the scope required to have at least one 'has_operation' connection with a Fetch action?", "Can a table exist without being associated with any Fetch operation through the 'has_operation' property?", "Is it necessary for tables to participate in the 'has_operation' relationship with at least one Fetch instance?"]}, {"axiom": "table datatype propertyRestrictions [has_operation some Serialize:table]", "CQ": ["Is it required that a table have at least one has_operation relation to Serialize:table?", "Does every table necessarily perform a Serialize:table operation via the has_operation property?", "Can a table exist without being associated with Serialize:table through the has_operation property?"]}, {"axiom": "table datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Are all tables required to possess at least one quality that is considered non-numeric?", "Is it essential for any instance of a table to have the 'has_quality' property relating to a value categorized as non-numeric?", "Can a table exist in the ontology without any non-numeric quality assigned through the 'has_quality' property?"]}]}
{"ontology": "OntoDT", "class": "enumerated-value identifier", "axiom": {"subClassOf": ["identifier"], "propertyRestrictions": ["[has-value only rdfs:Literal]"]}, "datatype": "Type3", "TCQ": ["Are all enumerated-value identifiers required to have at least one property restriction with a value of type rdfs:Literal?", "Is it necessary for every enumerated-value identifier to be associated with a property restriction whose value is a literal?", "Does the presence of a property restriction with an rdfs:Literal value characterize all enumerated-value identifiers?"], "VCQ": ["Is enumerated-value identifier a more specific type within the category of identifier?", "Which subclasses does identifier include, specifically is enumerated-value identifier among them?", "What are the broader categories encompassing enumerated-value identifier?", "Are all enumerated-value identifiers required to have at least one property restriction with a value of type rdfs:Literal?", "Is it necessary for every enumerated-value identifier to be associated with a property restriction whose value is a literal?", "Does the presence of a property restriction with an rdfs:Literal value characterize all enumerated-value identifiers?"], "Taxiom": "enumerated-value identifier propertyRestrictions [has-value some rdfs:Literal]", "CQ": [{"axiom": "enumerated-value identifier subClassOf identifier", "CQ": ["Is enumerated-value identifier a more specific type within the category of identifier?", "Which subclasses does identifier include, specifically is enumerated-value identifier among them?", "What are the broader categories encompassing enumerated-value identifier?"]}, {"axiom": "enumerated-value identifier propertyRestrictions [has-value some rdfs:Literal]", "CQ": ["Are all enumerated-value identifiers required to have at least one property restriction with a value of type rdfs:Literal?", "Is it necessary for every enumerated-value identifier to be associated with a property restriction whose value is a literal?", "Does the presence of a property restriction with an rdfs:Literal value characterize all enumerated-value identifiers?"]}]}
{"ontology": "OntoDT", "class": "aggregate-imposed identifier uniqueness", "axiom": {"subClassOf": ["aggregate generator property"], "disjointWith": ["homogenity", "agregate size", "uniqueness", "component mandatoriness", "structurness", "recursiveness", "access type"], "equivalentClass": ["(identifier not unique and identifier unique)"]}, "datatype": "Type3", "TCQ": ["Is aggregate-imposed identifier uniqueness equivalent to the union of identifier not unique and identifier unique?", "Can aggregate-imposed identifier uniqueness be completely described as either identifier not unique or identifier unique?", "Does aggregate-imposed identifier uniqueness include all instances with identifier unique or identifier not unique, and no others?"], "VCQ": ["Is aggregate-imposed identifier uniqueness categorized under aggregate generator property?", "Which concepts are direct specializations of aggregate generator property?", "What broader classes encompass aggregate-imposed identifier uniqueness?", "What logical separation is defined between aggregate-imposed identifier uniqueness and homogenity within the ontology?", "Is there any scenario in the ontology where an entity can exhibit both aggregate-imposed identifier uniqueness and homogenity?", "Which other concepts are declared as disjoint with homogenity?", "What is the formal distinction between aggregate-imposed identifier uniqueness and aggregate size within the ontology?", "Are there any entities that can simultaneously possess properties of both aggregate-imposed identifier uniqueness and aggregate size?", "Which ontology classes are established as disjoint with aggregate-imposed identifier uniqueness?", "How does the ontology differentiate between aggregate-imposed identifier uniqueness and uniqueness?", "Is it allowed for an entity to possess both aggregate-imposed identifier uniqueness and uniqueness simultaneously?", "Which classes are defined as mutually exclusive with uniqueness?", "What logical separation is asserted between aggregate-imposed identifier uniqueness and component mandatoriness within the ontology?", "Is there an instance that can satisfy both aggregate-imposed identifier uniqueness and component mandatoriness simultaneously?", "Which classes are explicitly defined as incompatible with component mandatoriness?", "What is the logical distinction between aggregate-imposed identifier uniqueness and structurness within the ontology?", "Can any entity simultaneously fulfill both aggregate-imposed identifier uniqueness and structurness?", "Which other concepts are declared as mutually exclusive with structurness?", "How does the ontology distinguish between aggregate-imposed identifier uniqueness and recursiveness?", "Is it valid for a construct to exhibit both aggregate-imposed identifier uniqueness and recursiveness simultaneously?", "Which entities or properties are explicitly set as incompatible with recursiveness?", "What is the formal differentiation between aggregate-imposed identifier uniqueness and access type in the ontology?", "Is it allowable for an entity to be classified as both aggregate-imposed identifier uniqueness and access type?", "Which other classes in the ontology are specified to be incompatible with access type?", "Is aggregate-imposed identifier uniqueness equivalent to the union of identifier not unique and identifier unique?", "Can aggregate-imposed identifier uniqueness be completely described as either identifier not unique or identifier unique?", "Does aggregate-imposed identifier uniqueness include all instances with identifier unique or identifier not unique, and no others?"], "Taxiom": "aggregate-imposed identifier uniqueness equivalentClass (identifier not unique or identifier unique)", "CQ": [{"axiom": "aggregate-imposed identifier uniqueness subClassOf aggregate generator property", "CQ": ["Is aggregate-imposed identifier uniqueness categorized under aggregate generator property?", "Which concepts are direct specializations of aggregate generator property?", "What broader classes encompass aggregate-imposed identifier uniqueness?"]}, {"axiom": "aggregate-imposed identifier uniqueness disjointWith homogenity", "CQ": ["What logical separation is defined between aggregate-imposed identifier uniqueness and homogenity within the ontology?", "Is there any scenario in the ontology where an entity can exhibit both aggregate-imposed identifier uniqueness and homogenity?", "Which other concepts are declared as disjoint with homogenity?"]}, {"axiom": "aggregate-imposed identifier uniqueness disjointWith agregate size", "CQ": ["What is the formal distinction between aggregate-imposed identifier uniqueness and aggregate size within the ontology?", "Are there any entities that can simultaneously possess properties of both aggregate-imposed identifier uniqueness and aggregate size?", "Which ontology classes are established as disjoint with aggregate-imposed identifier uniqueness?"]}, {"axiom": "aggregate-imposed identifier uniqueness disjointWith uniqueness", "CQ": ["How does the ontology differentiate between aggregate-imposed identifier uniqueness and uniqueness?", "Is it allowed for an entity to possess both aggregate-imposed identifier uniqueness and uniqueness simultaneously?", "Which classes are defined as mutually exclusive with uniqueness?"]}, {"axiom": "aggregate-imposed identifier uniqueness disjointWith component mandatoriness", "CQ": ["What logical separation is asserted between aggregate-imposed identifier uniqueness and component mandatoriness within the ontology?", "Is there an instance that can satisfy both aggregate-imposed identifier uniqueness and component mandatoriness simultaneously?", "Which classes are explicitly defined as incompatible with component mandatoriness?"]}, {"axiom": "aggregate-imposed identifier uniqueness disjointWith structurness", "CQ": ["What is the logical distinction between aggregate-imposed identifier uniqueness and structurness within the ontology?", "Can any entity simultaneously fulfill both aggregate-imposed identifier uniqueness and structurness?", "Which other concepts are declared as mutually exclusive with structurness?"]}, {"axiom": "aggregate-imposed identifier uniqueness disjointWith recursiveness", "CQ": ["How does the ontology distinguish between aggregate-imposed identifier uniqueness and recursiveness?", "Is it valid for a construct to exhibit both aggregate-imposed identifier uniqueness and recursiveness simultaneously?", "Which entities or properties are explicitly set as incompatible with recursiveness?"]}, {"axiom": "aggregate-imposed identifier uniqueness disjointWith access type", "CQ": ["What is the formal differentiation between aggregate-imposed identifier uniqueness and access type in the ontology?", "Is it allowable for an entity to be classified as both aggregate-imposed identifier uniqueness and access type?", "Which other classes in the ontology are specified to be incompatible with access type?"]}, {"axiom": "aggregate-imposed identifier uniqueness equivalentClass (identifier not unique or identifier unique)", "CQ": ["Is aggregate-imposed identifier uniqueness equivalent to the union of identifier not unique and identifier unique?", "Can aggregate-imposed identifier uniqueness be completely described as either identifier not unique or identifier unique?", "Does aggregate-imposed identifier uniqueness include all instances with identifier unique or identifier not unique, and no others?"]}]}
{"ontology": "OntoDT", "class": "uniqueness", "axiom": {"subClassOf": ["aggregate generator property"], "disjointWith": ["component mandatoriness", "structurness", "recursiveness", "access type"], "equivalentClass": ["(non-unique values and unique values)"]}, "datatype": "Type3", "TCQ": ["Is uniqueness equivalent to the class containing either only non-unique values or only unique values?", "Can all instances classified as uniqueness be described as those having non-unique values or unique values?", "Does the definition of uniqueness encompass exclusively the union of non-unique values and unique values?"], "VCQ": ["Is aggregate generator property a direct or indirect superclass of uniqueness?", "What classes are subsumed under aggregate generator property, and does uniqueness appear among them?", "Which general class hierarchies does uniqueness pertain to within the ontology?", "What formal separation is specified between uniqueness and component mandatoriness in the ontology?", "Is there any entity that can simultaneously possess uniqueness and component mandatoriness characteristics?", "Which classes are defined as disjoint with component mandatoriness?", "What formal separation exists between uniqueness and structurness within the ontology?", "Is any entity permitted to possess both uniqueness and structurness properties simultaneously?", "Which classes or properties are specifically stated as being disjoint with structurness?", "How are uniqueness and recursiveness differentiated within the ontology?", "Is there any entity that can possess both uniqueness and recursiveness?", "Which classes are defined as incompatible with recursiveness?", "What constraint does the ontology enforce between uniqueness and access type classes?", "Is any entity allowed to possess both the uniqueness and access type classifications simultaneously?", "Which classes within the ontology are specifically declared as incompatible with access type?", "Is uniqueness equivalent to the class containing either only non-unique values or only unique values?", "Can all instances classified as uniqueness be described as those having non-unique values or unique values?", "Does the definition of uniqueness encompass exclusively the union of non-unique values and unique values?"], "Taxiom": "uniqueness equivalentClass (non-unique values or unique values)", "CQ": [{"axiom": "uniqueness subClassOf aggregate generator property", "CQ": ["Is aggregate generator property a direct or indirect superclass of uniqueness?", "What classes are subsumed under aggregate generator property, and does uniqueness appear among them?", "Which general class hierarchies does uniqueness pertain to within the ontology?"]}, {"axiom": "uniqueness disjointWith component mandatoriness", "CQ": ["What formal separation is specified between uniqueness and component mandatoriness in the ontology?", "Is there any entity that can simultaneously possess uniqueness and component mandatoriness characteristics?", "Which classes are defined as disjoint with component mandatoriness?"]}, {"axiom": "uniqueness disjointWith structurness", "CQ": ["What formal separation exists between uniqueness and structurness within the ontology?", "Is any entity permitted to possess both uniqueness and structurness properties simultaneously?", "Which classes or properties are specifically stated as being disjoint with structurness?"]}, {"axiom": "uniqueness disjointWith recursiveness", "CQ": ["How are uniqueness and recursiveness differentiated within the ontology?", "Is there any entity that can possess both uniqueness and recursiveness?", "Which classes are defined as incompatible with recursiveness?"]}, {"axiom": "uniqueness disjointWith access type", "CQ": ["What constraint does the ontology enforce between uniqueness and access type classes?", "Is any entity allowed to possess both the uniqueness and access type classifications simultaneously?", "Which classes within the ontology are specifically declared as incompatible with access type?"]}, {"axiom": "uniqueness equivalentClass (non-unique values or unique values)", "CQ": ["Is uniqueness equivalent to the class containing either only non-unique values or only unique values?", "Can all instances classified as uniqueness be described as those having non-unique values or unique values?", "Does the definition of uniqueness encompass exclusively the union of non-unique values and unique values?"]}]}
{"ontology": "OntoDT", "class": "recursiveness", "axiom": {"subClassOf": ["aggregate generator property"], "disjointWith": ["access type"], "equivalentClass": ["(recursive and non-recursive)"]}, "datatype": "Type3", "TCQ": ["Is recursiveness equivalent to the union of recursive and non-recursive concepts?", "Can recursiveness be entirely described as either recursive or non-recursive?", "Are all entities classified as recursiveness necessarily either recursive or non-recursive?"], "VCQ": ["Is recursiveness an instance of the aggregate generator property class?", "Which properties are considered more specific forms of aggregate generator property, such as recursiveness?", "What broader property categories encompasses recursiveness?", "What differentiates recursiveness from access type according to the ontology?", "Is it permissible for an entity to be classified as both recursiveness and access type?", "Which ontology classes are shown as incompatible with access type?", "Is recursiveness equivalent to the union of recursive and non-recursive concepts?", "Can recursiveness be entirely described as either recursive or non-recursive?", "Are all entities classified as recursiveness necessarily either recursive or non-recursive?"], "Taxiom": "recursiveness equivalentClass (recursive or non-recursive)", "CQ": [{"axiom": "recursiveness subClassOf aggregate generator property", "CQ": ["Is recursiveness an instance of the aggregate generator property class?", "Which properties are considered more specific forms of aggregate generator property, such as recursiveness?", "What broader property categories encompasses recursiveness?"]}, {"axiom": "recursiveness disjointWith access type", "CQ": ["What differentiates recursiveness from access type according to the ontology?", "Is it permissible for an entity to be classified as both recursiveness and access type?", "Which ontology classes are shown as incompatible with access type?"]}, {"axiom": "recursiveness equivalentClass (recursive or non-recursive)", "CQ": ["Is recursiveness equivalent to the union of recursive and non-recursive concepts?", "Can recursiveness be entirely described as either recursive or non-recursive?", "Are all entities classified as recursiveness necessarily either recursive or non-recursive?"]}]}
{"ontology": "OntoDT", "class": "primitive datatype", "axiom": {"subClassOf": ["datatype"], "disjointWith": ["generated datatype", "defined datatype"], "propertyRestrictions": ["[has_quality only equality]"]}, "datatype": "Type3", "TCQ": ["Is it required for every instance with a primitive datatype propertyRestriction to possess at least one has_quality relation to equality?", "Does the definition of primitive datatype propertyRestrictions ensure that the has_quality property always connects to equality for its instances?", "Must all primitive datatype propertyRestrictions have the property has_quality with the value equality?"], "VCQ": ["Is primitive datatype categorized under the broader class of datatype?", "What are the more specific subclasses within datatype, including primitive datatype?", "To which higher-level classes does primitive datatype conceptually belong?", "What differentiates primitive datatype from generated datatype in terms of ontology classification?", "Is it allowed for a datatype to belong to both primitive and generated categories simultaneously?", "Which datatype classes are asserted to be incompatible with primitive datatype?", "What is the ontological separation between primitive datatype and defined datatype?", "Is any datatype allowed to belong to both the primitive and defined datatype categories?", "Which datatypes are specified as being mutually exclusive with defined datatype within the model?", "Is it required for every instance with a primitive datatype propertyRestriction to possess at least one has_quality relation to equality?", "Does the definition of primitive datatype propertyRestrictions ensure that the has_quality property always connects to equality for its instances?", "Must all primitive datatype propertyRestrictions have the property has_quality with the value equality?"], "Taxiom": "primitive datatype propertyRestrictions [has_quality some equality]", "CQ": [{"axiom": "primitive datatype subClassOf datatype", "CQ": ["Is primitive datatype categorized under the broader class of datatype?", "What are the more specific subclasses within datatype, including primitive datatype?", "To which higher-level classes does primitive datatype conceptually belong?"]}, {"axiom": "primitive datatype disjointWith generated datatype", "CQ": ["What differentiates primitive datatype from generated datatype in terms of ontology classification?", "Is it allowed for a datatype to belong to both primitive and generated categories simultaneously?", "Which datatype classes are asserted to be incompatible with primitive datatype?"]}, {"axiom": "primitive datatype disjointWith defined datatype", "CQ": ["What is the ontological separation between primitive datatype and defined datatype?", "Is any datatype allowed to belong to both the primitive and defined datatype categories?", "Which datatypes are specified as being mutually exclusive with defined datatype within the model?"]}, {"axiom": "primitive datatype propertyRestrictions [has_quality some equality]", "CQ": ["Is it required for every instance with a primitive datatype propertyRestriction to possess at least one has_quality relation to equality?", "Does the definition of primitive datatype propertyRestrictions ensure that the has_quality property always connects to equality for its instances?", "Must all primitive datatype propertyRestrictions have the property has_quality with the value equality?"]}]}
{"ontology": "OntoDT", "class": "defined datatype parameter", "axiom": {"subClassOf": ["datatype role"], "propertyRestrictions": ["[has_identifier some parameter identifier]", "[is_member_of some defined datatype parameter-list]", "[role_of only datatype]"]}, "datatype": "Type3", "TCQ": ["Is it required that propertyRestrictions always involves at least one role_of relation to a datatype?", "Can an entity with propertyRestrictions lack any role_of association to a datatype?", "Does the definition of propertyRestrictions entail that there must exist some role_of connection to a datatype for its instances?"], "VCQ": ["Is defined datatype parameter classified under datatype role?", "Which roles encompass defined datatype parameter as a specific member?", "What more general concepts does defined datatype parameter fall under with respect to datatype role?", "Is it necessary for a defined datatype parameter to have at least one 'has_identifier' relationship with a parameter identifier?", "Does every defined datatype parameter include some form of association via 'has_identifier' to a parameter identifier?", "Can a defined datatype parameter exist without possessing the 'has_identifier' property linking to any parameter identifier?", "Is every defined datatype parameter required to be a member of at least one defined datatype parameter-list?", "Can a defined datatype parameter exist without belonging to any defined datatype parameter-list?", "Does associating a defined datatype parameter with the property 'is_member_of' ensure its inclusion in some defined datatype parameter-list?", "Is it required that propertyRestrictions always involves at least one role_of relation to a datatype?", "Can an entity with propertyRestrictions lack any role_of association to a datatype?", "Does the definition of propertyRestrictions entail that there must exist some role_of connection to a datatype for its instances?"], "Taxiom": "defined datatype parameter propertyRestrictions [role_of some datatype]", "CQ": [{"axiom": "defined datatype parameter subClassOf datatype role", "CQ": ["Is defined datatype parameter classified under datatype role?", "Which roles encompass defined datatype parameter as a specific member?", "What more general concepts does defined datatype parameter fall under with respect to datatype role?"]}, {"axiom": "defined datatype parameter propertyRestrictions [has_identifier some parameter identifier]", "CQ": ["Is it necessary for a defined datatype parameter to have at least one 'has_identifier' relationship with a parameter identifier?", "Does every defined datatype parameter include some form of association via 'has_identifier' to a parameter identifier?", "Can a defined datatype parameter exist without possessing the 'has_identifier' property linking to any parameter identifier?"]}, {"axiom": "defined datatype parameter propertyRestrictions [is_member_of some defined datatype parameter-list]", "CQ": ["Is every defined datatype parameter required to be a member of at least one defined datatype parameter-list?", "Can a defined datatype parameter exist without belonging to any defined datatype parameter-list?", "Does associating a defined datatype parameter with the property 'is_member_of' ensure its inclusion in some defined datatype parameter-list?"]}, {"axiom": "defined datatype parameter propertyRestrictions [role_of some datatype]", "CQ": ["Is it required that propertyRestrictions always involves at least one role_of relation to a datatype?", "Can an entity with propertyRestrictions lack any role_of association to a datatype?", "Does the definition of propertyRestrictions entail that there must exist some role_of connection to a datatype for its instances?"]}]}
{"ontology": "OntoDT", "class": "alternative-type", "axiom": {"subClassOf": ["datatype role"], "propertyRestrictions": ["[role_of some datatype]", "[is_member_of only alternative component]"]}, "datatype": "Type3", "TCQ": ["Must every alternative-type entity be related via 'is_member_of' to at least one alternative component?", "Is it required that an alternative-type individual participate as a member in some alternative component?", "Can an alternative-type exist in the ontology without being a member of any alternative component through the 'is_member_of' property?"], "VCQ": ["Does alternative-type fall under the broader class of datatype role?", "Which kinds of entities are recognized as subclasses of datatype role, and does that include alternative-type?", "What are all the general categories (superclasses) that alternative-type is grouped within?", "Is it required that every alternative-type instance has at least one role_of relationship with a value from datatype?", "Can alternative-type exist without having any role_of association to a value belonging to datatype?", "Does every alternative-type entail the presence of a role_of property linked to some instance of datatype?", "Must every alternative-type entity be related via 'is_member_of' to at least one alternative component?", "Is it required that an alternative-type individual participate as a member in some alternative component?", "Can an alternative-type exist in the ontology without being a member of any alternative component through the 'is_member_of' property?"], "Taxiom": "alternative-type propertyRestrictions [is_member_of some alternative component]", "CQ": [{"axiom": "alternative-type subClassOf datatype role", "CQ": ["Does alternative-type fall under the broader class of datatype role?", "Which kinds of entities are recognized as subclasses of datatype role, and does that include alternative-type?", "What are all the general categories (superclasses) that alternative-type is grouped within?"]}, {"axiom": "alternative-type propertyRestrictions [role_of some datatype]", "CQ": ["Is it required that every alternative-type instance has at least one role_of relationship with a value from datatype?", "Can alternative-type exist without having any role_of association to a value belonging to datatype?", "Does every alternative-type entail the presence of a role_of property linked to some instance of datatype?"]}, {"axiom": "alternative-type propertyRestrictions [is_member_of some alternative component]", "CQ": ["Must every alternative-type entity be related via 'is_member_of' to at least one alternative component?", "Is it required that an alternative-type individual participate as a member in some alternative component?", "Can an alternative-type exist in the ontology without being a member of any alternative component through the 'is_member_of' property?"]}]}
{"ontology": "OntoDT", "class": "parameter", "axiom": {"subClassOf": ["datatype role"], "propertyRestrictions": ["[has_identifier some parameter identifier]", "[role_of only datatype]"]}, "datatype": "Type3", "TCQ": ["Is it necessary for parameter to have the property propertyRestrictions with some value that plays the role_of a specified datatype?", "Can a parameter exist without propertyRestrictions relating to at least one instance of datatype through role_of?", "Does every valid parameter exhibit propertyRestrictions to at least one entity classified as datatype by role_of?"], "VCQ": ["Is parameter categorized under datatype role?", "Which subclasses fall beneath the class datatype role, such as parameter?", "What are the direct superclasses of parameter in the ontology?", "Must every parameter have at least one identifier via the property 'has_identifier'?", "Is it possible for a parameter to exist without being related through 'has_identifier' to any identifier?", "Does there exist a requirement that each parameter be associated with some identifier using 'has_identifier'?", "Is it necessary for parameter to have the property propertyRestrictions with some value that plays the role_of a specified datatype?", "Can a parameter exist without propertyRestrictions relating to at least one instance of datatype through role_of?", "Does every valid parameter exhibit propertyRestrictions to at least one entity classified as datatype by role_of?"], "Taxiom": "parameter propertyRestrictions [role_of some datatype]", "CQ": [{"axiom": "parameter subClassOf datatype role", "CQ": ["Is parameter categorized under datatype role?", "Which subclasses fall beneath the class datatype role, such as parameter?", "What are the direct superclasses of parameter in the ontology?"]}, {"axiom": "parameter propertyRestrictions [role_of some datatype]", "CQ": ["Is it necessary for parameter to have the property propertyRestrictions with some value that plays the role_of a specified datatype?", "Can a parameter exist without propertyRestrictions relating to at least one instance of datatype through role_of?", "Does every valid parameter exhibit propertyRestrictions to at least one entity classified as datatype by role_of?"]}, {"axiom": "parameter propertyRestrictions [has_identifier some parameter identifier]", "CQ": ["Must every parameter have at least one identifier via the property 'has_identifier'?", "Is it possible for a parameter to exist without being related through 'has_identifier' to any identifier?", "Does there exist a requirement that each parameter be associated with some identifier using 'has_identifier'?"]}]}
{"ontology": "OntoDT", "class": "attribute component", "axiom": {"subClassOf": ["datatype role"], "propertyRestrictions": ["[has_identifier only attribute identifier]"]}, "datatype": "Type3", "TCQ": ["Is it required for every attribute component to have at least one attribute identifier via the has_identifier property?", "Can an attribute component exist without being linked to an attribute identifier through has_identifier?", "Must each attribute component be associated with some attribute identifier?"], "VCQ": ["What broader categories encompass attribute component according to the ontology?", "Which entities are more general than attribute component, including datatype role?", "Are attribute component types always considered forms of datatype role?", "Is it required for every attribute component to have at least one attribute identifier via the has_identifier property?", "Can an attribute component exist without being linked to an attribute identifier through has_identifier?", "Must each attribute component be associated with some attribute identifier?"], "Taxiom": "attribute component propertyRestrictions [has_identifier some attribute identifier]", "CQ": [{"axiom": "attribute component subClassOf datatype role", "CQ": ["What broader categories encompass attribute component according to the ontology?", "Which entities are more general than attribute component, including datatype role?", "Are attribute component types always considered forms of datatype role?"]}, {"axiom": "attribute component propertyRestrictions [has_identifier some attribute identifier]", "CQ": ["Is it required for every attribute component to have at least one attribute identifier via the has_identifier property?", "Can an attribute component exist without being linked to an attribute identifier through has_identifier?", "Must each attribute component be associated with some attribute identifier?"]}]}
{"ontology": "OntoDT", "class": "discrete field-list", "axiom": {"subClassOf": ["field-list"], "propertyRestrictions": ["[has_member only discrete field component]"]}, "datatype": "Type3", "TCQ": ["Must every discrete field-list include at least one member that is a discrete field component?", "Is it required for a discrete field-list to have the has_member property relating it to some discrete field component?", "Can a discrete field-list exist without having any discrete field component as a member?"], "VCQ": ["Is discrete field-list categorized under field-list?", "What types are included within the field-list category?", "Which general groupings contain discrete field-list as a member?", "Must every discrete field-list include at least one member that is a discrete field component?", "Is it required for a discrete field-list to have the has_member property relating it to some discrete field component?", "Can a discrete field-list exist without having any discrete field component as a member?"], "Taxiom": "discrete field-list propertyRestrictions [has_member some discrete field component]", "CQ": [{"axiom": "discrete field-list subClassOf field-list", "CQ": ["Is discrete field-list categorized under field-list?", "What types are included within the field-list category?", "Which general groupings contain discrete field-list as a member?"]}, {"axiom": "discrete field-list propertyRestrictions [has_member some discrete field component]", "CQ": ["Must every discrete field-list include at least one member that is a discrete field component?", "Is it required for a discrete field-list to have the has_member property relating it to some discrete field component?", "Can a discrete field-list exist without having any discrete field component as a member?"]}]}
{"ontology": "OntoDT", "class": "unlabeled dataset field-list", "axiom": {"subClassOf": ["field-list"], "propertyRestrictions": ["[has_member only labeled dataset descriptive field component]"]}, "datatype": "Type3", "TCQ": ["Is it required for an unlabeled dataset to include at least one member that is a labeled dataset descriptive field component?", "Can an unlabeled dataset have members other than labeled dataset descriptive field components?", "Does every unlabeled dataset necessarily relate through 'has_member' to a labeled dataset descriptive field component?"], "VCQ": ["Is every unlabeled dataset field-list included under the general category of field-list?", "What specific types of field-list include unlabeled dataset field-list as a subclass?", "Which broader groupings encompass the unlabeled dataset field-list concept?", "Is it required for an unlabeled dataset to include at least one member that is a labeled dataset descriptive field component?", "Can an unlabeled dataset have members other than labeled dataset descriptive field components?", "Does every unlabeled dataset necessarily relate through 'has_member' to a labeled dataset descriptive field component?"], "Taxiom": "unlabeled dataset field-list propertyRestrictions [has_member some labeled dataset descriptive field component]", "CQ": [{"axiom": "unlabeled dataset field-list subClassOf field-list", "CQ": ["Is every unlabeled dataset field-list included under the general category of field-list?", "What specific types of field-list include unlabeled dataset field-list as a subclass?", "Which broader groupings encompass the unlabeled dataset field-list concept?"]}, {"axiom": "unlabeled dataset field-list propertyRestrictions [has_member some labeled dataset descriptive field component]", "CQ": ["Is it required for an unlabeled dataset to include at least one member that is a labeled dataset descriptive field component?", "Can an unlabeled dataset have members other than labeled dataset descriptive field components?", "Does every unlabeled dataset necessarily relate through 'has_member' to a labeled dataset descriptive field component?"]}]}
{"ontology": "OntoDT", "class": "attribute-list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": ["[has_member only attribute component]"]}, "datatype": "Type3", "TCQ": ["Is it required that every attribute-list includes at least one component as a member?", "Does the existence of a member with the attribute 'component' suffice for something to be classified under attribute-list?", "Can an attribute-list be identified solely by having the property 'has_member' with at least one component?"], "VCQ": ["In what ways does attribute-list relate to list specification within the ontology?", "Which concepts are categorized under the broader class of list specification, including attribute-list?", "What are the direct superordinate classes for attribute-list?", "Is it required that every attribute-list includes at least one component as a member?", "Does the existence of a member with the attribute 'component' suffice for something to be classified under attribute-list?", "Can an attribute-list be identified solely by having the property 'has_member' with at least one component?"], "Taxiom": "attribute-list propertyRestrictions [has_member some attribute component]", "CQ": [{"axiom": "attribute-list subClassOf list specification", "CQ": ["In what ways does attribute-list relate to list specification within the ontology?", "Which concepts are categorized under the broader class of list specification, including attribute-list?", "What are the direct superordinate classes for attribute-list?"]}, {"axiom": "attribute-list propertyRestrictions [has_member some attribute component]", "CQ": ["Is it required that every attribute-list includes at least one component as a member?", "Does the existence of a member with the attribute 'component' suffice for something to be classified under attribute-list?", "Can an attribute-list be identified solely by having the property 'has_member' with at least one component?"]}]}
{"ontology": "OntoDT", "class": "alternative-list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": ["[has_member only alternative component]"]}, "datatype": "Type3", "TCQ": ["Must every alternative-list include at least one alternative component as a member?", "Is it required that alternative-list items possess a member that is classified as an alternative component?", "Does the structure of alternative-list entail having some association with an alternative component through the has_member property?"], "VCQ": ["Is alternative-list classified under the broader category of list specification?", "Which specific types of list specification include alternative-list as a subclass?", "What are the more general categories encompassing alternative-list in the context of list specification?", "Must every alternative-list include at least one alternative component as a member?", "Is it required that alternative-list items possess a member that is classified as an alternative component?", "Does the structure of alternative-list entail having some association with an alternative component through the has_member property?"], "Taxiom": "alternative-list propertyRestrictions [has_member some alternative component]", "CQ": [{"axiom": "alternative-list subClassOf list specification", "CQ": ["Is alternative-list classified under the broader category of list specification?", "Which specific types of list specification include alternative-list as a subclass?", "What are the more general categories encompassing alternative-list in the context of list specification?"]}, {"axiom": "alternative-list propertyRestrictions [has_member some alternative component]", "CQ": ["Must every alternative-list include at least one alternative component as a member?", "Is it required that alternative-list items possess a member that is classified as an alternative component?", "Does the structure of alternative-list entail having some association with an alternative component through the has_member property?"]}]}
{"ontology": "OntoDT", "class": "select-list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": ["[has_member only select-item specification]"]}, "datatype": "Type3", "TCQ": ["Are all individuals in select-list required to have at least one member specified by the property has_member from the select-item specification?", "Can an instance belonging to select-list exist without having a member that satisfies the select-item specification through has_member?", "Is it necessary for any member of select-list to be linked to some entity defined by the select-item specification via has_member?"], "VCQ": ["Is select-list categorized under the broader class of list specification?", "Which list specifications include select-list as a more specific form?", "What are the direct superclasses of select-list within the ontology?", "Are all individuals in select-list required to have at least one member specified by the property has_member from the select-item specification?", "Can an instance belonging to select-list exist without having a member that satisfies the select-item specification through has_member?", "Is it necessary for any member of select-list to be linked to some entity defined by the select-item specification via has_member?"], "Taxiom": "select-list propertyRestrictions [has_member some select-item specification]", "CQ": [{"axiom": "select-list subClassOf list specification", "CQ": ["Is select-list categorized under the broader class of list specification?", "Which list specifications include select-list as a more specific form?", "What are the direct superclasses of select-list within the ontology?"]}, {"axiom": "select-list propertyRestrictions [has_member some select-item specification]", "CQ": ["Are all individuals in select-list required to have at least one member specified by the property has_member from the select-item specification?", "Can an instance belonging to select-list exist without having a member that satisfies the select-item specification through has_member?", "Is it necessary for any member of select-list to be linked to some entity defined by the select-item specification via has_member?"]}]}
{"ontology": "OntoDT", "class": "enumerated-value-list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": ["[has_member only enumerated-value identifier]"]}, "datatype": "Type3", "TCQ": ["Is every member in an enumerated-value-list required to have at least one enumerated-value identified by the 'has_member' property?", "Can an enumerated-value-list contain an element that does not meet the identifier criteria via 'has_member'?", "Does the definition of enumerated-value-list ensure the inclusion of only those values that are explicitly connected through 'has_member' to a recognized enumerated-value identifier?"], "VCQ": ["Is every enumerated-value-list classified as a type of list specification?", "Which list specifications have enumerated-value-list as a more specific form?", "What broader categories include enumerated-value-list as a subclass within list specifications?", "Is every member in an enumerated-value-list required to have at least one enumerated-value identified by the 'has_member' property?", "Can an enumerated-value-list contain an element that does not meet the identifier criteria via 'has_member'?", "Does the definition of enumerated-value-list ensure the inclusion of only those values that are explicitly connected through 'has_member' to a recognized enumerated-value identifier?"], "Taxiom": "enumerated-value-list propertyRestrictions [has_member some enumerated-value identifier]", "CQ": [{"axiom": "enumerated-value-list subClassOf list specification", "CQ": ["Is every enumerated-value-list classified as a type of list specification?", "Which list specifications have enumerated-value-list as a more specific form?", "What broader categories include enumerated-value-list as a subclass within list specifications?"]}, {"axiom": "enumerated-value-list propertyRestrictions [has_member some enumerated-value identifier]", "CQ": ["Is every member in an enumerated-value-list required to have at least one enumerated-value identified by the 'has_member' property?", "Can an enumerated-value-list contain an element that does not meet the identifier criteria via 'has_member'?", "Does the definition of enumerated-value-list ensure the inclusion of only those values that are explicitly connected through 'has_member' to a recognized enumerated-value identifier?"]}]}
{"ontology": "OntoDT", "class": "array datatype", "axiom": {"subClassOf": ["homogenous aggregate datatype"], "disjointWith": ["homogenous aggregate datatype with variable size"], "propertyRestrictions": ["[has_operation some Select:table]", "[has_member some index-type list]", "[has_quality some exact]", "[has_operation some Replace:array]", "[has_quality some non-ordered]", "[has_quality some non-numeric]", "[has_operation some Equal:array]", "[has_member some array generator]", "[has_member only base type]"]}, "datatype": "Type3", "TCQ": ["Must every array have at least one member of the base type?", "Does an array necessarily include some value identified by the base type through the property has_member?", "Is it required that any instance of array is associated via has_member with at least one instance of the base type?"], "VCQ": ["Does array datatype qualify as a specialized form of homogenous aggregate datatype?", "Which datatypes are classified as narrower terms under homogenous aggregate datatype, specifically including array datatype?", "What are the broader datatype categories that array datatype falls under?", "What logical separation is defined between array datatype and homogenous aggregate datatype with variable size within the ontology?", "Is there any datatype instance that can belong to both array datatype and homogenous aggregate datatype with variable size?", "Which datatypes, aside from array datatype, are specified as disjoint with homogenous aggregate datatype with variable size?", "Is it required that an array has at least one 'has_operation' relationship with a Select:table?", "Can an array exist without having any 'has_operation' connection to a Select:table?", "Does the definition of array entail the possibility of 'has_operation' only with instances of Select:table?", "Is every instance of array required to have at least one has_member relationship with an index-type list?", "Does the array class necessarily include a member that belongs to the index-type list through the has_member property?", "Can an array exist without referencing any index-type list via the has_member property?", "Is it required that entities classified under 'array' always possess the 'has_quality' property with at least one value of 'exact'?", "Does every instance of an array have a 'has_quality' relation to some 'exact' value?", "Can something be an array if it lacks an association via 'has_quality' to exact?", "Is it required for an array to have at least one 'has_operation' relationship with a Replace operation?", "Can an array exist without being associated with the 'Replace' operation via the 'has_operation' property?", "Does every instance of array necessarily participate in a 'has_operation' relation involving the Replace operation?", "Is every entity associated with 'array' required to have the property 'has_quality' with some instance of 'non-ordered'?", "Can an instance of 'array' exist without being linked to at least one 'non-ordered' quality through the 'has_quality' property?", "Does the definition of 'array' necessitate the presence of the 'has_quality' relation to at least one 'non-ordered' entity?", "Is it necessary for an entity to have at least one has_quality relationship pointing to a non-numeric value?", "Can an entity possess a has_quality property that must reference a non-numeric characteristic?", "Does every instance require the existence of some non-numeric value for the has_quality property?", "Is it necessary for an array to have at least one operation that is equal to array?", "Does the array class require the presence of the has_operation property with values of type Equal:array?", "Are all arrays in the ontology ensured to participate in some has_operation relationship involving Equal:array?", "Must every array necessarily have at least one member that is an array generator?", "Is it required for an array to include a member with the role of array generator?", "Can an entity be considered an array without possessing the has_member relationship to an array generator?", "Must every array have at least one member of the base type?", "Does an array necessarily include some value identified by the base type through the property has_member?", "Is it required that any instance of array is associated via has_member with at least one instance of the base type?"], "Taxiom": "array datatype propertyRestrictions [has_member some base type]", "CQ": [{"axiom": "array datatype subClassOf homogenous aggregate datatype", "CQ": ["Does array datatype qualify as a specialized form of homogenous aggregate datatype?", "Which datatypes are classified as narrower terms under homogenous aggregate datatype, specifically including array datatype?", "What are the broader datatype categories that array datatype falls under?"]}, {"axiom": "array datatype disjointWith homogenous aggregate datatype with variable size", "CQ": ["What logical separation is defined between array datatype and homogenous aggregate datatype with variable size within the ontology?", "Is there any datatype instance that can belong to both array datatype and homogenous aggregate datatype with variable size?", "Which datatypes, aside from array datatype, are specified as disjoint with homogenous aggregate datatype with variable size?"]}, {"axiom": "array datatype propertyRestrictions [has_operation some Select:table]", "CQ": ["Is it required that an array has at least one 'has_operation' relationship with a Select:table?", "Can an array exist without having any 'has_operation' connection to a Select:table?", "Does the definition of array entail the possibility of 'has_operation' only with instances of Select:table?"]}, {"axiom": "array datatype propertyRestrictions [has_member some index-type list]", "CQ": ["Is every instance of array required to have at least one has_member relationship with an index-type list?", "Does the array class necessarily include a member that belongs to the index-type list through the has_member property?", "Can an array exist without referencing any index-type list via the has_member property?"]}, {"axiom": "array datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it required that entities classified under 'array' always possess the 'has_quality' property with at least one value of 'exact'?", "Does every instance of an array have a 'has_quality' relation to some 'exact' value?", "Can something be an array if it lacks an association via 'has_quality' to exact?"]}, {"axiom": "array datatype propertyRestrictions [has_operation some Replace:array]", "CQ": ["Is it required for an array to have at least one 'has_operation' relationship with a Replace operation?", "Can an array exist without being associated with the 'Replace' operation via the 'has_operation' property?", "Does every instance of array necessarily participate in a 'has_operation' relation involving the Replace operation?"]}, {"axiom": "array datatype propertyRestrictions [has_member some base type]", "CQ": ["Must every array have at least one member of the base type?", "Does an array necessarily include some value identified by the base type through the property has_member?", "Is it required that any instance of array is associated via has_member with at least one instance of the base type?"]}, {"axiom": "array datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is every entity associated with 'array' required to have the property 'has_quality' with some instance of 'non-ordered'?", "Can an instance of 'array' exist without being linked to at least one 'non-ordered' quality through the 'has_quality' property?", "Does the definition of 'array' necessitate the presence of the 'has_quality' relation to at least one 'non-ordered' entity?"]}, {"axiom": "array datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Is it necessary for an entity to have at least one has_quality relationship pointing to a non-numeric value?", "Can an entity possess a has_quality property that must reference a non-numeric characteristic?", "Does every instance require the existence of some non-numeric value for the has_quality property?"]}, {"axiom": "array datatype propertyRestrictions [has_operation some Equal:array]", "CQ": ["Is it necessary for an array to have at least one operation that is equal to array?", "Does the array class require the presence of the has_operation property with values of type Equal:array?", "Are all arrays in the ontology ensured to participate in some has_operation relationship involving Equal:array?"]}, {"axiom": "array datatype propertyRestrictions [has_member some array generator]", "CQ": ["Must every array necessarily have at least one member that is an array generator?", "Is it required for an array to include a member with the role of array generator?", "Can an entity be considered an array without possessing the has_member relationship to an array generator?"]}]}
{"ontology": "OntoDT", "class": "real datatype", "axiom": {"subClassOf": ["numeric ordered primitive datatype"], "disjointWith": ["integer datatype", "rational datatype"], "propertyRestrictions": ["[has_quality some approximate]", "[has_operation some Negate:real]", "[has_member some real radix]", "[has_quality some unbounded]", "[has_operation some Reciprocal:real]", "[has_operation some InOrder:real]", "[has_operation some Add:real]", "[has_operation some Promote:real]", "[has_operation some Equal:real]", "[has_member some real factor]", "[has_operation only Multiply:real]"]}, "datatype": "Type3", "TCQ": ["Is it required for a real datatype property to participate in at least one 'has_operation' relation involving the Multiply operation?", "Can a real datatype property exist without being associated with the 'has_operation' property to a Multiply operation?", "Does the presence of a Multiply operation under the 'has_operation' property suffice to classify a real datatype property under this restriction?"], "VCQ": ["Is real datatype classified under the broader category of numeric ordered primitive datatype?", "Which datatypes fall within the scope of numeric ordered primitive datatype, specifically including real datatype?", "What more general datatype categories does real datatype belong to?", "How does the ontology differentiate between real datatype and integer datatype?", "Is there any datatype that can belong to both real and integer datatypes concurrently?", "Which datatypes are explicitly marked as incompatible with integer datatype?", "How does the ontology specify the separation between real and rational datatypes?", "Is there an entity in the ontology that can be classified as both a real and a rational datatype?", "Which datatypes are explicitly defined as incompatible with rational datatypes?", "Is it necessary for a real value to have the quality 'approximate'?", "Can a real value possess only the quality of being 'approximate'?", "Are all real values required to exhibit some form of the 'approximate' quality?", "Is every instance of 'real' required to have at least one 'has_operation' relationship to a 'Negate:real'?", "Must all 'real' entities possess an associated 'has_operation' linking them to some instance of 'Negate:real'?", "Can a 'real' exist without being related to any 'Negate:real' via the 'has_operation' property?", "Is it required that every instance related by 'has_member' must include at least one real number of type 'real radix'?", "Does an individual with the property 'has_member' necessarily reference some entity classified under 'real radix'?", "Can an entity be considered valid if it lacks any 'has_member' relationship to a 'real radix' real number?", "Is every instance of real associated with at least one value for the property has_quality?", "Can any instance of real exist without possessing the has_quality relationship to some value?", "Does the real class require that there be at least one has_quality property present for its instances?", "Is it required that every instance with the 'has_operation' property must relate to at least one value from the Reciprocal:real class?", "Can an instance exist without having a 'has_operation' relationship to any Reciprocal:real value?", "Does the axiom allow an instance to have multiple 'has_operation' relationships with different Reciprocal:real values?", "Is every instance with the property 'has_operation' necessarily associated with at least one real-valued value in the InOrder:real datatype?", "Can an entity satisfying the property restriction 'has_operation some InOrder:real' lack a value of InOrder:real type for 'has_operation'?", "Does the use of 'has_operation some InOrder:real' require that any member must have a 'has_operation' property filled by some value from the InOrder:real range?", "Is it required for a real datatype property restriction to include at least one has_operation relation to an instance of Add:real?", "Can a real datatype property restriction exist without having any has_operation relationship to Add:real?", "Do all real datatype property restrictions necessarily involve some instance where has_operation points to Add:real?", "Are all entities in the 'real datatype' class required to have at least one 'has_operation' relationship involving 'Promote:real'?", "Is it possible for a 'real datatype' instance to lack the 'has_operation' property with respect to 'Promote:real'?", "Does the specification of 'real datatype' entail that there exists at least one association via 'has_operation' to 'Promote:real'?", "Is every instance with the property 'has_operation' necessarily associated with at least one real value equal to a specific real number?", "Must there exist a real value such that the property 'has_operation' relates an entity to a value exactly matching that real number?", "Can an entity be classified under this restriction if it does not possess a 'has_operation' relation to any real value equal to a particular real number?", "Is every instance defined by 'real datatype propertyRestrictions' required to have at least one 'has_member' relationship with a 'real factor'?", "Can an entity covered by 'real datatype propertyRestrictions' exist without associating to a 'real factor' via the 'has_member' property?", "Does the specification of 'real datatype propertyRestrictions' imply the involvement of at least one 'real factor' through the 'has_member' property?", "Is it required for a real datatype property to participate in at least one 'has_operation' relation involving the Multiply operation?", "Can a real datatype property exist without being associated with the 'has_operation' property to a Multiply operation?", "Does the presence of a Multiply operation under the 'has_operation' property suffice to classify a real datatype property under this restriction?"], "Taxiom": "real datatype propertyRestrictions [has_operation some Multiply:real]", "CQ": [{"axiom": "real datatype subClassOf numeric ordered primitive datatype", "CQ": ["Is real datatype classified under the broader category of numeric ordered primitive datatype?", "Which datatypes fall within the scope of numeric ordered primitive datatype, specifically including real datatype?", "What more general datatype categories does real datatype belong to?"]}, {"axiom": "real datatype disjointWith integer datatype", "CQ": ["How does the ontology differentiate between real datatype and integer datatype?", "Is there any datatype that can belong to both real and integer datatypes concurrently?", "Which datatypes are explicitly marked as incompatible with integer datatype?"]}, {"axiom": "real datatype disjointWith rational datatype", "CQ": ["How does the ontology specify the separation between real and rational datatypes?", "Is there an entity in the ontology that can be classified as both a real and a rational datatype?", "Which datatypes are explicitly defined as incompatible with rational datatypes?"]}, {"axiom": "real datatype propertyRestrictions [has_operation some Multiply:real]", "CQ": ["Is it required for a real datatype property to participate in at least one 'has_operation' relation involving the Multiply operation?", "Can a real datatype property exist without being associated with the 'has_operation' property to a Multiply operation?", "Does the presence of a Multiply operation under the 'has_operation' property suffice to classify a real datatype property under this restriction?"]}, {"axiom": "real datatype propertyRestrictions [has_quality some approximate]", "CQ": ["Is it necessary for a real value to have the quality 'approximate'?", "Can a real value possess only the quality of being 'approximate'?", "Are all real values required to exhibit some form of the 'approximate' quality?"]}, {"axiom": "real datatype propertyRestrictions [has_operation some Negate:real]", "CQ": ["Is every instance of 'real' required to have at least one 'has_operation' relationship to a 'Negate:real'?", "Must all 'real' entities possess an associated 'has_operation' linking them to some instance of 'Negate:real'?", "Can a 'real' exist without being related to any 'Negate:real' via the 'has_operation' property?"]}, {"axiom": "real datatype propertyRestrictions [has_member some real radix]", "CQ": ["Is it required that every instance related by 'has_member' must include at least one real number of type 'real radix'?", "Does an individual with the property 'has_member' necessarily reference some entity classified under 'real radix'?", "Can an entity be considered valid if it lacks any 'has_member' relationship to a 'real radix' real number?"]}, {"axiom": "real datatype propertyRestrictions [has_quality some unbounded]", "CQ": ["Is every instance of real associated with at least one value for the property has_quality?", "Can any instance of real exist without possessing the has_quality relationship to some value?", "Does the real class require that there be at least one has_quality property present for its instances?"]}, {"axiom": "real datatype propertyRestrictions [has_operation some Reciprocal:real]", "CQ": ["Is it required that every instance with the 'has_operation' property must relate to at least one value from the Reciprocal:real class?", "Can an instance exist without having a 'has_operation' relationship to any Reciprocal:real value?", "Does the axiom allow an instance to have multiple 'has_operation' relationships with different Reciprocal:real values?"]}, {"axiom": "real datatype propertyRestrictions [has_operation some InOrder:real]", "CQ": ["Is every instance with the property 'has_operation' necessarily associated with at least one real-valued value in the InOrder:real datatype?", "Can an entity satisfying the property restriction 'has_operation some InOrder:real' lack a value of InOrder:real type for 'has_operation'?", "Does the use of 'has_operation some InOrder:real' require that any member must have a 'has_operation' property filled by some value from the InOrder:real range?"]}, {"axiom": "real datatype propertyRestrictions [has_operation some Add:real]", "CQ": ["Is it required for a real datatype property restriction to include at least one has_operation relation to an instance of Add:real?", "Can a real datatype property restriction exist without having any has_operation relationship to Add:real?", "Do all real datatype property restrictions necessarily involve some instance where has_operation points to Add:real?"]}, {"axiom": "real datatype propertyRestrictions [has_operation some Promote:real]", "CQ": ["Are all entities in the 'real datatype' class required to have at least one 'has_operation' relationship involving 'Promote:real'?", "Is it possible for a 'real datatype' instance to lack the 'has_operation' property with respect to 'Promote:real'?", "Does the specification of 'real datatype' entail that there exists at least one association via 'has_operation' to 'Promote:real'?"]}, {"axiom": "real datatype propertyRestrictions [has_operation some Equal:real]", "CQ": ["Is every instance with the property 'has_operation' necessarily associated with at least one real value equal to a specific real number?", "Must there exist a real value such that the property 'has_operation' relates an entity to a value exactly matching that real number?", "Can an entity be classified under this restriction if it does not possess a 'has_operation' relation to any real value equal to a particular real number?"]}, {"axiom": "real datatype propertyRestrictions [has_member some real factor]", "CQ": ["Is every instance defined by 'real datatype propertyRestrictions' required to have at least one 'has_member' relationship with a 'real factor'?", "Can an entity covered by 'real datatype propertyRestrictions' exist without associating to a 'real factor' via the 'has_member' property?", "Does the specification of 'real datatype propertyRestrictions' imply the involvement of at least one 'real factor' through the 'has_member' property?"]}]}
{"ontology": "OntoDT", "class": "non-aggregate generator", "axiom": {"subClassOf": ["generated datatype generator"], "disjointWith": ["defined generator", "aggregate datatype", "aggregate generator"], "equivalentClass": ["(choice generator and pointer generator and procedure generator)"]}, "datatype": "Type3", "TCQ": ["Is a non-aggregate generator necessarily equivalent to either a choice generator, a pointer generator, or a procedure generator?", "Is every non-aggregate generator either a choice generator, a pointer generator, or a procedure generator, and vice versa?", "Are the classes choice generator, pointer generator, and procedure generator jointly exhaustive and mutually exclusive with respect to non-aggregate generator?"], "VCQ": ["Is non-aggregate generator classified under the broader category of generated datatype generator?", "Which generator types are more specific than generated datatype generator, such as non-aggregate generator?", "To which higher-level categories does non-aggregate generator belong?", "What ontological separation is defined between non-aggregate generators and defined generators?", "Is there any instance that could simultaneously belong to both non-aggregate generator and defined generator classes?", "Which generator categories are specified as mutually exclusive with the defined generator class?", "How does the ontology distinguish between non-aggregate generators and aggregate datatypes?", "Is there any instance that can be classified as both a non-aggregate generator and an aggregate datatype?", "Which ontology classes are specified as disjoint with aggregate datatype?", "What logical separation is formalized between non-aggregate generators and aggregate generators in the ontology?", "Is any device allowed to be classified as both a non-aggregate generator and an aggregate generator simultaneously?", "Which generator types, other than aggregate generators, are specified to be disjoint with non-aggregate generators?", "Is a non-aggregate generator necessarily equivalent to either a choice generator, a pointer generator, or a procedure generator?", "Is every non-aggregate generator either a choice generator, a pointer generator, or a procedure generator, and vice versa?", "Are the classes choice generator, pointer generator, and procedure generator jointly exhaustive and mutually exclusive with respect to non-aggregate generator?"], "Taxiom": "non-aggregate generator equivalentClass (choice generator or pointer generator or procedure generator)", "CQ": [{"axiom": "non-aggregate generator subClassOf generated datatype generator", "CQ": ["Is non-aggregate generator classified under the broader category of generated datatype generator?", "Which generator types are more specific than generated datatype generator, such as non-aggregate generator?", "To which higher-level categories does non-aggregate generator belong?"]}, {"axiom": "non-aggregate generator disjointWith defined generator", "CQ": ["What ontological separation is defined between non-aggregate generators and defined generators?", "Is there any instance that could simultaneously belong to both non-aggregate generator and defined generator classes?", "Which generator categories are specified as mutually exclusive with the defined generator class?"]}, {"axiom": "non-aggregate generator disjointWith aggregate datatype", "CQ": ["How does the ontology distinguish between non-aggregate generators and aggregate datatypes?", "Is there any instance that can be classified as both a non-aggregate generator and an aggregate datatype?", "Which ontology classes are specified as disjoint with aggregate datatype?"]}, {"axiom": "non-aggregate generator disjointWith aggregate generator", "CQ": ["What logical separation is formalized between non-aggregate generators and aggregate generators in the ontology?", "Is any device allowed to be classified as both a non-aggregate generator and an aggregate generator simultaneously?", "Which generator types, other than aggregate generators, are specified to be disjoint with non-aggregate generators?"]}, {"axiom": "non-aggregate generator equivalentClass (choice generator or pointer generator or procedure generator)", "CQ": ["Is a non-aggregate generator necessarily equivalent to either a choice generator, a pointer generator, or a procedure generator?", "Is every non-aggregate generator either a choice generator, a pointer generator, or a procedure generator, and vice versa?", "Are the classes choice generator, pointer generator, and procedure generator jointly exhaustive and mutually exclusive with respect to non-aggregate generator?"]}]}
{"ontology": "OntoDT", "class": "numericalness", "axiom": {"subClassOf": ["datatype property"], "disjointWith": ["cardinality", "order", "boundedness", "equality"], "equivalentClass": ["(numeric and non-numeric)"]}, "datatype": "Type3", "TCQ": ["Is numericalness defined as the union of numeric and non-numeric entities?", "Are all instances of numericalness necessarily either numeric or non-numeric?", "Does numericalness encompass all and only those classes that are numeric or non-numeric?"], "VCQ": ["Is numericalness categorized under datatype property?", "Which datatype properties encompass numericalness as a more specific property?", "What broader property classification includes numericalness within its hierarchy?", "What logical separation is defined between numericalness and cardinality in the ontology?", "Is there any entity in the ontology that can be classified as both numericalness and cardinality?", "Which other classes are formally specified as incompatible with numericalness?", "What logical separation is defined between numericalness and order in the ontology?", "Is there any entity that can simultaneously belong to both numericalness and order?", "Which classes are specified as disjoint with numericalness?", "How does the ontology differentiate between numericalness and boundedness?", "Is it allowed for an entity to possess both numericalness and boundedness simultaneously?", "Which classes are explicitly marked as disjoint with boundedness?", "How does the ontology differentiate between numericalness and equality?", "Is it permissible for an entity to possess both numericalness and equality attributes simultaneously?", "Which classes within the ontology are specified as being incompatible with numericalness?", "Is numericalness defined as the union of numeric and non-numeric entities?", "Are all instances of numericalness necessarily either numeric or non-numeric?", "Does numericalness encompass all and only those classes that are numeric or non-numeric?"], "Taxiom": "numericalness equivalentClass (numeric or non-numeric)", "CQ": [{"axiom": "numericalness subClassOf datatype property", "CQ": ["Is numericalness categorized under datatype property?", "Which datatype properties encompass numericalness as a more specific property?", "What broader property classification includes numericalness within its hierarchy?"]}, {"axiom": "numericalness disjointWith cardinality", "CQ": ["What logical separation is defined between numericalness and cardinality in the ontology?", "Is there any entity in the ontology that can be classified as both numericalness and cardinality?", "Which other classes are formally specified as incompatible with numericalness?"]}, {"axiom": "numericalness disjointWith order", "CQ": ["What logical separation is defined between numericalness and order in the ontology?", "Is there any entity that can simultaneously belong to both numericalness and order?", "Which classes are specified as disjoint with numericalness?"]}, {"axiom": "numericalness disjointWith boundedness", "CQ": ["How does the ontology differentiate between numericalness and boundedness?", "Is it allowed for an entity to possess both numericalness and boundedness simultaneously?", "Which classes are explicitly marked as disjoint with boundedness?"]}, {"axiom": "numericalness disjointWith equality", "CQ": ["How does the ontology differentiate between numericalness and equality?", "Is it permissible for an entity to possess both numericalness and equality attributes simultaneously?", "Which classes within the ontology are specified as being incompatible with numericalness?"]}, {"axiom": "numericalness equivalentClass (numeric or non-numeric)", "CQ": ["Is numericalness defined as the union of numeric and non-numeric entities?", "Are all instances of numericalness necessarily either numeric or non-numeric?", "Does numericalness encompass all and only those classes that are numeric or non-numeric?"]}]}
{"ontology": "OntoDT", "class": "boundedness", "axiom": {"subClassOf": ["datatype property"], "disjointWith": ["equality"], "equivalentClass": ["(bounded and unbounded)"]}, "datatype": "Type3", "TCQ": ["Is boundedness defined as the union of bounded and unbounded classes?", "Are all instances of boundedness either bounded or unbounded?", "Does boundedness include any class other than bounded and unbounded?"], "VCQ": ["Is boundedness classified as a kind of datatype property?", "Which datatype properties have more specific subclasses, such as boundedness?", "To which broader property categories does boundedness belong?", "What kind of logical constraint prevents boundedness and equality from overlapping within the ontology?", "Is it possible for an entity to simultaneously satisfy both boundedness and equality?", "Which classes, in addition to equality, are declared disjoint with boundedness?", "Is boundedness defined as the union of bounded and unbounded classes?", "Are all instances of boundedness either bounded or unbounded?", "Does boundedness include any class other than bounded and unbounded?"], "Taxiom": "boundedness equivalentClass (bounded or unbounded)", "CQ": [{"axiom": "boundedness subClassOf datatype property", "CQ": ["Is boundedness classified as a kind of datatype property?", "Which datatype properties have more specific subclasses, such as boundedness?", "To which broader property categories does boundedness belong?"]}, {"axiom": "boundedness disjointWith equality", "CQ": ["What kind of logical constraint prevents boundedness and equality from overlapping within the ontology?", "Is it possible for an entity to simultaneously satisfy both boundedness and equality?", "Which classes, in addition to equality, are declared disjoint with boundedness?"]}, {"axiom": "boundedness equivalentClass (bounded or unbounded)", "CQ": ["Is boundedness defined as the union of bounded and unbounded classes?", "Are all instances of boundedness either bounded or unbounded?", "Does boundedness include any class other than bounded and unbounded?"]}]}
{"ontology": "OntoDT", "class": "real field component", "axiom": {"subClassOf": ["primitive field component"], "disjointWith": ["boolean field component"], "propertyRestrictions": ["[role_of only real datatype]"]}, "datatype": "Type3", "TCQ": ["Does a real field component necessarily play the role of some real datatype?", "Is it required for every real field component to be associated, through 'role_of', with at least one instance of real datatype?", "Can a real field component exist without participating in the 'role_of' relationship with any real datatype?"], "VCQ": ["Is real field component classified as a kind of primitive field component?", "Which components fall under the category of primitive field component, such as real field component?", "What are the broader classes that encompass real field component?", "Are real field components and boolean field components treated as mutually exclusive categories in the ontology?", "Does any field component belong to both the real field component and boolean field component classes?", "Which field component types are defined as disjoint with real field component?", "Does a real field component necessarily play the role of some real datatype?", "Is it required for every real field component to be associated, through 'role_of', with at least one instance of real datatype?", "Can a real field component exist without participating in the 'role_of' relationship with any real datatype?"], "Taxiom": "real field component propertyRestrictions [role_of some real datatype]", "CQ": [{"axiom": "real field component subClassOf primitive field component", "CQ": ["Is real field component classified as a kind of primitive field component?", "Which components fall under the category of primitive field component, such as real field component?", "What are the broader classes that encompass real field component?"]}, {"axiom": "real field component disjointWith boolean field component", "CQ": ["Are real field components and boolean field components treated as mutually exclusive categories in the ontology?", "Does any field component belong to both the real field component and boolean field component classes?", "Which field component types are defined as disjoint with real field component?"]}, {"axiom": "real field component propertyRestrictions [role_of some real datatype]", "CQ": ["Does a real field component necessarily play the role of some real datatype?", "Is it required for every real field component to be associated, through 'role_of', with at least one instance of real datatype?", "Can a real field component exist without participating in the 'role_of' relationship with any real datatype?"]}]}
{"ontology": "OntoDT", "class": "choice datatype", "axiom": {"subClassOf": ["non-aggregate datatype"], "propertyRestrictions": ["[has_quality some exact]", "[has_operation some Discriminant:choice]", "[has_quality some non-ordered]", "[has_operation some Cast:choice]", "[has_operation some Equal:choice]", "[has_member some tag-type]", "[has_member some alternative-list]", "[has_member some choice generator]", "[has_operation only Tag:choice]"]}, "datatype": "Type3", "TCQ": ["Is every instance of 'choice' required to have at least one 'has_operation' relation to an entity of type Tag:choice?", "Can a 'choice' exist without the 'has_operation' property relating it to Tag:choice?", "Do all 'choice' entities necessarily participate in some 'has_operation' association with Tag:choice?"], "VCQ": ["Is every choice datatype classified under non-aggregate datatype?", "Which datatypes are encompassed by the broader category of non-aggregate datatype, specifically including choice datatype?", "What general datatype categories does choice datatype fall under?", "Is it required that every choice possesses at least one quality described as exact?", "Can a choice exist without having the quality exact?", "Does the existence of the has_quality relation to exact sufficiently characterize the class choice?", "Does every instance that has the 'has_operation' property necessarily relate to at least one 'Discriminant:choice'?", "Is it possible for an entity restricted by 'has_operation some Discriminant:choice' to lack the 'has_operation' property entirely?", "Can something classified under this restriction have 'has_operation' only with values outside 'Discriminant:choice'?", "Must every instance of 'choice' possess at least one 'has_quality' relation to a 'non-ordered' entity?", "Is it required that 'choice' entities have the 'has_quality' attribute assigned with at least one value categorized as 'non-ordered'?", "Can a 'choice' exist without exhibiting the 'has_quality' property with respect to a 'non-ordered' quality?", "Is it required that Choice always involves at least one has_operation relation with an instance of Cast?", "Can a Choice exist without having the has_operation property filled by Cast?", "Does every instance of Choice necessarily participate in a has_operation relationship with Cast?", "Is it required for 'choice' to have at least one 'has_operation' property relating to 'Equal'?", "Can an instance of 'choice' exist without being associated via 'has_operation' to 'Equal'?", "Does every 'choice' necessarily involve the 'has_operation' property with the value 'Equal' at least once?", "Is every instance of 'choice' required to have at least one 'has_member' relationship to a 'tag-type'?", "Can a 'choice' exist without being associated with any 'tag-type' via 'has_member'?", "Does the ontology stipulate that 'choice' entities necessarily feature at least one 'has_member' link to a 'tag-type' entity?", "Is it required that every 'choice' includes at least one member from the 'alternative-list' via the has_member property?", "Can a 'choice' exist without having any members linked through the has_member property to the alternative-list?", "Must an entity of type 'choice' always have at least one relationship to an instance classified under 'alternative-list' using has_member?", "Is it required that every choice must have at least one member that is a choice generator?", "Can a choice exist without having any member that is a choice generator?", "Does the definition of choice ensure the presence of at least one has_member relationship with a choice generator?", "Is every instance of 'choice' required to have at least one 'has_operation' relation to an entity of type Tag:choice?", "Can a 'choice' exist without the 'has_operation' property relating it to Tag:choice?", "Do all 'choice' entities necessarily participate in some 'has_operation' association with Tag:choice?"], "Taxiom": "choice datatype propertyRestrictions [has_operation some Tag:choice]", "CQ": [{"axiom": "choice datatype subClassOf non-aggregate datatype", "CQ": ["Is every choice datatype classified under non-aggregate datatype?", "Which datatypes are encompassed by the broader category of non-aggregate datatype, specifically including choice datatype?", "What general datatype categories does choice datatype fall under?"]}, {"axiom": "choice datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it required that every choice possesses at least one quality described as exact?", "Can a choice exist without having the quality exact?", "Does the existence of the has_quality relation to exact sufficiently characterize the class choice?"]}, {"axiom": "choice datatype propertyRestrictions [has_operation some Discriminant:choice]", "CQ": ["Does every instance that has the 'has_operation' property necessarily relate to at least one 'Discriminant:choice'?", "Is it possible for an entity restricted by 'has_operation some Discriminant:choice' to lack the 'has_operation' property entirely?", "Can something classified under this restriction have 'has_operation' only with values outside 'Discriminant:choice'?"]}, {"axiom": "choice datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Must every instance of 'choice' possess at least one 'has_quality' relation to a 'non-ordered' entity?", "Is it required that 'choice' entities have the 'has_quality' attribute assigned with at least one value categorized as 'non-ordered'?", "Can a 'choice' exist without exhibiting the 'has_quality' property with respect to a 'non-ordered' quality?"]}, {"axiom": "choice datatype propertyRestrictions [has_operation some Tag:choice]", "CQ": ["Is every instance of 'choice' required to have at least one 'has_operation' relation to an entity of type Tag:choice?", "Can a 'choice' exist without the 'has_operation' property relating it to Tag:choice?", "Do all 'choice' entities necessarily participate in some 'has_operation' association with Tag:choice?"]}, {"axiom": "choice datatype propertyRestrictions [has_operation some Cast:choice]", "CQ": ["Is it required that Choice always involves at least one has_operation relation with an instance of Cast?", "Can a Choice exist without having the has_operation property filled by Cast?", "Does every instance of Choice necessarily participate in a has_operation relationship with Cast?"]}, {"axiom": "choice datatype propertyRestrictions [has_operation some Equal:choice]", "CQ": ["Is it required for 'choice' to have at least one 'has_operation' property relating to 'Equal'?", "Can an instance of 'choice' exist without being associated via 'has_operation' to 'Equal'?", "Does every 'choice' necessarily involve the 'has_operation' property with the value 'Equal' at least once?"]}, {"axiom": "choice datatype propertyRestrictions [has_member some tag-type]", "CQ": ["Is every instance of 'choice' required to have at least one 'has_member' relationship to a 'tag-type'?", "Can a 'choice' exist without being associated with any 'tag-type' via 'has_member'?", "Does the ontology stipulate that 'choice' entities necessarily feature at least one 'has_member' link to a 'tag-type' entity?"]}, {"axiom": "choice datatype propertyRestrictions [has_member some alternative-list]", "CQ": ["Is it required that every 'choice' includes at least one member from the 'alternative-list' via the has_member property?", "Can a 'choice' exist without having any members linked through the has_member property to the alternative-list?", "Must an entity of type 'choice' always have at least one relationship to an instance classified under 'alternative-list' using has_member?"]}, {"axiom": "choice datatype propertyRestrictions [has_member some choice generator]", "CQ": ["Is it required that every choice must have at least one member that is a choice generator?", "Can a choice exist without having any member that is a choice generator?", "Does the definition of choice ensure the presence of at least one has_member relationship with a choice generator?"]}]}
{"ontology": "OntoDT", "class": "DAG datatype", "axiom": {"subClassOf": ["labeled graph datatype"], "propertyRestrictions": ["[has_member only DAG datatype generator]"]}, "datatype": "Type3", "TCQ": ["Must a DAG datatype always have at least one 'has_member' relationship with a DAG datatype generator?", "Can a DAG datatype exist without being associated to any DAG datatype generator through the 'has_member' property?", "Is the presence of a 'has_member' link to a DAG datatype generator necessary for every DAG datatype instance?"], "VCQ": ["Does the category labeled graph datatype encompass DAG datatype as a more specific type?", "Which datatypes are directly categorized under labeled graph datatype, including DAG datatype?", "To what broader datatype classes does DAG datatype belong?", "Must a DAG datatype always have at least one 'has_member' relationship with a DAG datatype generator?", "Can a DAG datatype exist without being associated to any DAG datatype generator through the 'has_member' property?", "Is the presence of a 'has_member' link to a DAG datatype generator necessary for every DAG datatype instance?"], "Taxiom": "DAG datatype propertyRestrictions [has_member some DAG datatype generator]", "CQ": [{"axiom": "DAG datatype subClassOf labeled graph datatype", "CQ": ["Does the category labeled graph datatype encompass DAG datatype as a more specific type?", "Which datatypes are directly categorized under labeled graph datatype, including DAG datatype?", "To what broader datatype classes does DAG datatype belong?"]}, {"axiom": "DAG datatype propertyRestrictions [has_member some DAG datatype generator]", "CQ": ["Must a DAG datatype always have at least one 'has_member' relationship with a DAG datatype generator?", "Can a DAG datatype exist without being associated to any DAG datatype generator through the 'has_member' property?", "Is the presence of a 'has_member' link to a DAG datatype generator necessary for every DAG datatype instance?"]}]}
{"ontology": "OntoDT", "class": "character datatype", "axiom": {"subClassOf": ["non-numeric unordered primitive datatype"], "disjointWith": ["discrete datatype", "boolean datatype"], "propertyRestrictions": ["[has_quality some exact]", "[has_identifier some character-set identifier]", "[has_operation only Equal:character]"]}, "datatype": "Type3", "TCQ": ["Is every character required to have at least one operation of type 'Equal'?", "Does the ontology define that there exists an 'Equal' operation associated with each character via the 'has_operation' property?", "Can a character exist without being linked to an 'Equal' operation through 'has_operation'?"], "VCQ": ["Does character datatype fall under the broader classification of non-numeric unordered primitive datatype?", "Which primitive datatypes are specified as subclasses of non-numeric unordered primitive datatype?", "What general datatype categories encompass character datatype?", "What classifies a datatype as either character or discrete within the ontology?", "Is it allowed for a datatype to be both categorized as character and discrete?", "Which datatype categories are specified as mutually exclusive with character datatype?", "How does the ontology differentiate between character datatype and boolean datatype?", "Is it allowed for a datatype to be both a character datatype and a boolean datatype?", "Which datatypes are defined as mutually exclusive with boolean datatype?", "Is it required that every character has at least one quality described as 'exact'?", "Must a character necessarily exhibit the property 'has_quality' with the value 'exact' at least once?", "Does the character class ensure that all of its instances possess some exact quality?", "Must every character have at least one identifier from some character-set?", "Is it required that a character is associated with an identifier belonging to a specific character-set?", "Can a character exist without possessing any identifier corresponding to a character-set?", "Is every character required to have at least one operation of type 'Equal'?", "Does the ontology define that there exists an 'Equal' operation associated with each character via the 'has_operation' property?", "Can a character exist without being linked to an 'Equal' operation through 'has_operation'?"], "Taxiom": "character datatype propertyRestrictions [has_operation some Equal:character]", "CQ": [{"axiom": "character datatype subClassOf non-numeric unordered primitive datatype", "CQ": ["Does character datatype fall under the broader classification of non-numeric unordered primitive datatype?", "Which primitive datatypes are specified as subclasses of non-numeric unordered primitive datatype?", "What general datatype categories encompass character datatype?"]}, {"axiom": "character datatype disjointWith discrete datatype", "CQ": ["What classifies a datatype as either character or discrete within the ontology?", "Is it allowed for a datatype to be both categorized as character and discrete?", "Which datatype categories are specified as mutually exclusive with character datatype?"]}, {"axiom": "character datatype disjointWith boolean datatype", "CQ": ["How does the ontology differentiate between character datatype and boolean datatype?", "Is it allowed for a datatype to be both a character datatype and a boolean datatype?", "Which datatypes are defined as mutually exclusive with boolean datatype?"]}, {"axiom": "character datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it required that every character has at least one quality described as 'exact'?", "Must a character necessarily exhibit the property 'has_quality' with the value 'exact' at least once?", "Does the character class ensure that all of its instances possess some exact quality?"]}, {"axiom": "character datatype propertyRestrictions [has_operation some Equal:character]", "CQ": ["Is every character required to have at least one operation of type 'Equal'?", "Does the ontology define that there exists an 'Equal' operation associated with each character via the 'has_operation' property?", "Can a character exist without being linked to an 'Equal' operation through 'has_operation'?"]}, {"axiom": "character datatype propertyRestrictions [has_identifier some character-set identifier]", "CQ": ["Must every character have at least one identifier from some character-set?", "Is it required that a character is associated with an identifier belonging to a specific character-set?", "Can a character exist without possessing any identifier corresponding to a character-set?"]}]}
{"ontology": "OntoDT", "class": "discrete datatype", "axiom": {"subClassOf": ["non-numeric unordered primitive datatype"], "disjointWith": ["boolean datatype"], "propertyRestrictions": ["[has_member some discrete-value-list]", "[has_operation some Equal:discrete]", "[has_quality only exact]"]}, "datatype": "Type3", "TCQ": ["Is every instance with the discrete datatype required to possess at least one 'has_quality' relationship to 'exact'?", "Can an entity classified by the discrete datatype lack any association via 'has_quality' to 'exact'?", "Must the discrete datatype always be described by the property 'has_quality' with value 'exact'?"], "VCQ": ["Is discrete datatype classified under non-numeric unordered primitive datatype?", "Which datatypes are categorized as subtypes of non-numeric unordered primitive datatype?", "What broader datatype classes include discrete datatype as a subtype?", "How does the ontology define the interaction between discrete datatypes and boolean datatypes?", "Is it allowed for a datatype to be both classified as discrete and as boolean?", "Which datatype groups, besides boolean datatype, are specified as disjoint with discrete datatype?", "Is it required for a discrete datatype property restriction to have at least one member from the discrete value list?", "Does every instance with a discrete datatype property restriction necessarily include some values from the discrete-value-list?", "Can an entity with a discrete datatype property restriction exist without having any values specified in the discrete-value-list?", "Is it required that an entity with discrete datatype property restrictions must have at least one operation classified as 'Equal:discrete'?", "Can a discrete datatype property restriction exist without being related to an 'Equal:discrete' operation through the has_operation property?", "Does every instance with discrete datatype property restrictions necessarily possess some 'has_operation' relation to the 'Equal:discrete' operation?", "Is every instance with the discrete datatype required to possess at least one 'has_quality' relationship to 'exact'?", "Can an entity classified by the discrete datatype lack any association via 'has_quality' to 'exact'?", "Must the discrete datatype always be described by the property 'has_quality' with value 'exact'?"], "Taxiom": "discrete datatype propertyRestrictions [has_quality some exact]", "CQ": [{"axiom": "discrete datatype subClassOf non-numeric unordered primitive datatype", "CQ": ["Is discrete datatype classified under non-numeric unordered primitive datatype?", "Which datatypes are categorized as subtypes of non-numeric unordered primitive datatype?", "What broader datatype classes include discrete datatype as a subtype?"]}, {"axiom": "discrete datatype disjointWith boolean datatype", "CQ": ["How does the ontology define the interaction between discrete datatypes and boolean datatypes?", "Is it allowed for a datatype to be both classified as discrete and as boolean?", "Which datatype groups, besides boolean datatype, are specified as disjoint with discrete datatype?"]}, {"axiom": "discrete datatype propertyRestrictions [has_member some discrete-value-list]", "CQ": ["Is it required for a discrete datatype property restriction to have at least one member from the discrete value list?", "Does every instance with a discrete datatype property restriction necessarily include some values from the discrete-value-list?", "Can an entity with a discrete datatype property restriction exist without having any values specified in the discrete-value-list?"]}, {"axiom": "discrete datatype propertyRestrictions [has_operation some Equal:discrete]", "CQ": ["Is it required that an entity with discrete datatype property restrictions must have at least one operation classified as 'Equal:discrete'?", "Can a discrete datatype property restriction exist without being related to an 'Equal:discrete' operation through the has_operation property?", "Does every instance with discrete datatype property restrictions necessarily possess some 'has_operation' relation to the 'Equal:discrete' operation?"]}, {"axiom": "discrete datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is every instance with the discrete datatype required to possess at least one 'has_quality' relationship to 'exact'?", "Can an entity classified by the discrete datatype lack any association via 'has_quality' to 'exact'?", "Must the discrete datatype always be described by the property 'has_quality' with value 'exact'?"]}]}
{"ontology": "OntoDT", "class": "generated datatype generator", "axiom": {"subClassOf": ["datatype generator"], "equivalentClass": ["(non-aggregate generator or aggregate generator)"], "propertyRestrictions": ["[is_member_of only generated datatype]"]}, "datatype": "Type3", "TCQ": ["Is it required that an entity classified under 'generated datatype' must be a member of at least one 'generated datatype' instance?", "Does every instance of 'generated datatype' participate in the 'is_member_of' relationship with some instance of 'generated datatype'?", "Can a 'generated datatype' exist without being linked via 'is_member_of' to any other 'generated datatype'?"], "VCQ": ["Is generated datatype generator an instance of the broader datatype generator category?", "What other specific kinds fall under the datatype generator category in addition to generated datatype generator?", "Which higher-level groups include generated datatype generator as a member?", "Is a generated datatype generator defined as either a non-aggregate generator or an aggregate generator?", "Are all generated datatype generators necessarily instances of non-aggregate generator or aggregate generator, with no additional members?", "Is a generated datatype generator logically equivalent to the union of non-aggregate generator and aggregate generator?", "Is it required that an entity classified under 'generated datatype' must be a member of at least one 'generated datatype' instance?", "Does every instance of 'generated datatype' participate in the 'is_member_of' relationship with some instance of 'generated datatype'?", "Can a 'generated datatype' exist without being linked via 'is_member_of' to any other 'generated datatype'?"], "Taxiom": "generated datatype generator propertyRestrictions [is_member_of some generated datatype]", "CQ": [{"axiom": "generated datatype generator subClassOf datatype generator", "CQ": ["Is generated datatype generator an instance of the broader datatype generator category?", "What other specific kinds fall under the datatype generator category in addition to generated datatype generator?", "Which higher-level groups include generated datatype generator as a member?"]}, {"axiom": "generated datatype generator equivalentClass (non-aggregate generator or aggregate generator)", "CQ": ["Is a generated datatype generator defined as either a non-aggregate generator or an aggregate generator?", "Are all generated datatype generators necessarily instances of non-aggregate generator or aggregate generator, with no additional members?", "Is a generated datatype generator logically equivalent to the union of non-aggregate generator and aggregate generator?"]}, {"axiom": "generated datatype generator propertyRestrictions [is_member_of some generated datatype]", "CQ": ["Is it required that an entity classified under 'generated datatype' must be a member of at least one 'generated datatype' instance?", "Does every instance of 'generated datatype' participate in the 'is_member_of' relationship with some instance of 'generated datatype'?", "Can a 'generated datatype' exist without being linked via 'is_member_of' to any other 'generated datatype'?"]}]}
{"ontology": "OntoDT", "class": "integer base datatype", "axiom": {"subClassOf": ["base type"], "propertyRestrictions": ["[role_of only integer datatype]"]}, "datatype": "Type3", "TCQ": ["Is it required that the base datatype 'integer' has at least one role filled by an integer value?", "Does every instance of the base datatype 'integer' necessarily possess the property 'role_of' relating it to an integer value?", "Can an instance of the base datatype 'integer' exist without the property 'role_of' connecting it to an integer?"], "VCQ": ["Is integer base datatype categorized under the broader base type classification?", "Which datatypes are more specific than base type, such as integer base datatype?", "To which higher-level types does integer base datatype conceptually pertain?", "Is it required that the base datatype 'integer' has at least one role filled by an integer value?", "Does every instance of the base datatype 'integer' necessarily possess the property 'role_of' relating it to an integer value?", "Can an instance of the base datatype 'integer' exist without the property 'role_of' connecting it to an integer?"], "Taxiom": "integer base datatype propertyRestrictions [role_of some integer datatype]", "CQ": [{"axiom": "integer base datatype subClassOf base type", "CQ": ["Is integer base datatype categorized under the broader base type classification?", "Which datatypes are more specific than base type, such as integer base datatype?", "To which higher-level types does integer base datatype conceptually pertain?"]}, {"axiom": "integer base datatype propertyRestrictions [role_of some integer datatype]", "CQ": ["Is it required that the base datatype 'integer' has at least one role filled by an integer value?", "Does every instance of the base datatype 'integer' necessarily possess the property 'role_of' relating it to an integer value?", "Can an instance of the base datatype 'integer' exist without the property 'role_of' connecting it to an integer?"]}]}
{"ontology": "OntoDT", "class": "record of primitives datatype", "axiom": {"subClassOf": ["record (tuple) datatype"], "propertyRestrictions": ["[has_member only primitive field-list]"]}, "datatype": "Type3", "TCQ": ["Is every record of primitives required to have at least one member that is a primitive listed in the field list?", "Does the definition of a record of primitives entail that it must possess a 'has_member' relationship with at least one entity in the primitive field-list?", "Can a record of primitives exist without having the 'has_member' property connecting it to an element from the primitive field-list?"], "VCQ": ["Is record of primitives datatype encompassed within the record (tuple) datatype category?", "Which datatypes are specialized forms of record (tuple) datatype, including record of primitives datatype?", "What broader datatype categories does record of primitives datatype fall under?", "Is every record of primitives required to have at least one member that is a primitive listed in the field list?", "Does the definition of a record of primitives entail that it must possess a 'has_member' relationship with at least one entity in the primitive field-list?", "Can a record of primitives exist without having the 'has_member' property connecting it to an element from the primitive field-list?"], "Taxiom": "record of primitives datatype propertyRestrictions [has_member some primitive field-list]", "CQ": [{"axiom": "record of primitives datatype subClassOf record (tuple) datatype", "CQ": ["Is record of primitives datatype encompassed within the record (tuple) datatype category?", "Which datatypes are specialized forms of record (tuple) datatype, including record of primitives datatype?", "What broader datatype categories does record of primitives datatype fall under?"]}, {"axiom": "record of primitives datatype propertyRestrictions [has_member some primitive field-list]", "CQ": ["Is every record of primitives required to have at least one member that is a primitive listed in the field list?", "Does the definition of a record of primitives entail that it must possess a 'has_member' relationship with at least one entity in the primitive field-list?", "Can a record of primitives exist without having the 'has_member' property connecting it to an element from the primitive field-list?"]}]}
{"ontology": "OntoDT", "class": "unlabeled dataset record datatype", "axiom": {"subClassOf": ["record (tuple) datatype"], "propertyRestrictions": ["[has_member only unlabeled dataset field-list]"]}, "datatype": "Type3", "TCQ": ["Does every unlabeled dataset record necessarily have at least one has_member relationship to an unlabeled dataset field-list?", "Is it required for unlabeled dataset records to include some member from the unlabeled dataset field-list?", "Can an unlabeled dataset record exist without being related via has_member to any unlabeled dataset field-list?"], "VCQ": ["Does unlabeled dataset record datatype fall under the category of record (tuple) datatype?", "Which datatypes are classified as more specific types than record (tuple) datatype, such as unlabeled dataset record datatype?", "What are the general datatype categories that encompass unlabeled dataset record datatype?", "Does every unlabeled dataset record necessarily have at least one has_member relationship to an unlabeled dataset field-list?", "Is it required for unlabeled dataset records to include some member from the unlabeled dataset field-list?", "Can an unlabeled dataset record exist without being related via has_member to any unlabeled dataset field-list?"], "Taxiom": "unlabeled dataset record datatype propertyRestrictions [has_member some unlabeled dataset field-list]", "CQ": [{"axiom": "unlabeled dataset record datatype subClassOf record (tuple) datatype", "CQ": ["Does unlabeled dataset record datatype fall under the category of record (tuple) datatype?", "Which datatypes are classified as more specific types than record (tuple) datatype, such as unlabeled dataset record datatype?", "What are the general datatype categories that encompass unlabeled dataset record datatype?"]}, {"axiom": "unlabeled dataset record datatype propertyRestrictions [has_member some unlabeled dataset field-list]", "CQ": ["Does every unlabeled dataset record necessarily have at least one has_member relationship to an unlabeled dataset field-list?", "Is it required for unlabeled dataset records to include some member from the unlabeled dataset field-list?", "Can an unlabeled dataset record exist without being related via has_member to any unlabeled dataset field-list?"]}]}
{"ontology": "OntoDT", "class": "set of integer datatype", "axiom": {"subClassOf": ["set datatype"], "propertyRestrictions": ["[has_member only integer base datatype]"]}, "datatype": "Type3", "TCQ": ["Is it required for a set to include at least one member with an integer base datatype?", "Must every instance of the set have the 'has_member' property assigned to some value of type integer?", "Can a set of integer datatype propertyRestrictions exist without containing an integer as a member?"], "VCQ": ["Is set datatype a broader category that encompasses set of integer datatype?", "Which datatypes are more specific than set datatype, such as set of integer datatype?", "What general datatype groupings include set of integer datatype?", "Is it required for a set to include at least one member with an integer base datatype?", "Must every instance of the set have the 'has_member' property assigned to some value of type integer?", "Can a set of integer datatype propertyRestrictions exist without containing an integer as a member?"], "Taxiom": "set of integer datatype propertyRestrictions [has_member some integer base datatype]", "CQ": [{"axiom": "set of integer datatype subClassOf set datatype", "CQ": ["Is set datatype a broader category that encompasses set of integer datatype?", "Which datatypes are more specific than set datatype, such as set of integer datatype?", "What general datatype groupings include set of integer datatype?"]}, {"axiom": "set of integer datatype propertyRestrictions [has_member some integer base datatype]", "CQ": ["Is it required for a set to include at least one member with an integer base datatype?", "Must every instance of the set have the 'has_member' property assigned to some value of type integer?", "Can a set of integer datatype propertyRestrictions exist without containing an integer as a member?"]}]}
{"ontology": "OntoDT", "class": "enumerated datatype", "axiom": {"subClassOf": ["non-numeric ordered primitive datatype"], "disjointWith": ["date and time datatype", "ordinal datatype"], "propertyRestrictions": ["[has_operation some Equal:enumerated]", "[has_member some enumerated-value-list]", "[has_operation some Successor:enumerated]", "[has_quality some bounded]", "[has_operation some InOrder:enumerated]", "[has_quality only exact]"]}, "datatype": "Type3", "TCQ": ["Are entities in the enumerated datatype required to have at least one 'has_quality' relationship to 'exact'?", "Is it necessary that any instance of the enumerated datatype possesses the property 'has_quality' with the value 'exact'?", "Can an instance be part of the enumerated datatype if it lacks the 'has_quality' property relating to 'exact'?"], "VCQ": ["Does enumerated datatype fall under the category of non-numeric ordered primitive datatypes?", "Which specific datatypes are specialized forms of non-numeric ordered primitive datatype, such as enumerated datatype?", "What broader datatype classifications include enumerated datatype?", "What is the formal distinction between the enumerated datatype and the date and time datatype within the ontology?", "Is it allowed for a datatype to be classified as both enumerated and date and time?", "Which datatypes are explicitly set as disjoint with the date and time datatype in this model?", "How does the ontology distinguish between enumerated datatypes and ordinal datatypes?", "Is there any datatype that can be classified as both enumerated and ordinal?", "Which datatypes are defined as mutually exclusive with ordinal datatypes?", "Does the class propertyRestrictions require at least one 'has_operation' relation to an instance of Equal from the enumerated set?", "Is it necessary that propertyRestrictions has an operation that is specifically Equal, according to the enumerated values?", "Are instances of propertyRestrictions restricted to possessing only 'has_operation' relationships involving the Equal operation from the enumerated options?", "Are all members described by the enumerated-value-list necessarily present via the has_member property?", "Is it possible for an entity related by has_member to include values not specified in the enumerated-value-list?", "Does the restriction guarantee that has_member only relates to values included in the enumerated-value-list?", "Is it required that any instance with a propertyRestriction on 'has_operation' must relate to at least one member of the 'Successor' enumeration?", "Does the presence of a propertyRestriction on 'has_operation' necessarily imply association with a value specifically from the enumerated set 'Successor'?", "Can propertyRestrictions specify the existence of a 'has_operation' relationship exclusively with members of the enumerated class 'Successor'?", "Does the enumerated datatype have at least one quality that is bounded?", "Must every enumerated datatype include some relationship to a bounded quality?", "Is it possible for an enumerated datatype not to possess any qualities unless one of them is bounded?", "Is it required that entities with propertyRestrictions have at least one has_operation value from the InOrder enumerated set?", "Can propertyRestrictions include has_operation values that are not part of the InOrder enumerated type?", "Does the presence of propertyRestrictions guarantee that the has_operation property is assigned to an individual in the InOrder enumeration?", "Are entities in the enumerated datatype required to have at least one 'has_quality' relationship to 'exact'?", "Is it necessary that any instance of the enumerated datatype possesses the property 'has_quality' with the value 'exact'?", "Can an instance be part of the enumerated datatype if it lacks the 'has_quality' property relating to 'exact'?"], "Taxiom": "enumerated datatype propertyRestrictions [has_quality some exact]", "CQ": [{"axiom": "enumerated datatype subClassOf non-numeric ordered primitive datatype", "CQ": ["Does enumerated datatype fall under the category of non-numeric ordered primitive datatypes?", "Which specific datatypes are specialized forms of non-numeric ordered primitive datatype, such as enumerated datatype?", "What broader datatype classifications include enumerated datatype?"]}, {"axiom": "enumerated datatype disjointWith date and time datatype", "CQ": ["What is the formal distinction between the enumerated datatype and the date and time datatype within the ontology?", "Is it allowed for a datatype to be classified as both enumerated and date and time?", "Which datatypes are explicitly set as disjoint with the date and time datatype in this model?"]}, {"axiom": "enumerated datatype disjointWith ordinal datatype", "CQ": ["How does the ontology distinguish between enumerated datatypes and ordinal datatypes?", "Is there any datatype that can be classified as both enumerated and ordinal?", "Which datatypes are defined as mutually exclusive with ordinal datatypes?"]}, {"axiom": "enumerated datatype propertyRestrictions [has_operation some Equal:enumerated]", "CQ": ["Does the class propertyRestrictions require at least one 'has_operation' relation to an instance of Equal from the enumerated set?", "Is it necessary that propertyRestrictions has an operation that is specifically Equal, according to the enumerated values?", "Are instances of propertyRestrictions restricted to possessing only 'has_operation' relationships involving the Equal operation from the enumerated options?"]}, {"axiom": "enumerated datatype propertyRestrictions [has_member some enumerated-value-list]", "CQ": ["Are all members described by the enumerated-value-list necessarily present via the has_member property?", "Is it possible for an entity related by has_member to include values not specified in the enumerated-value-list?", "Does the restriction guarantee that has_member only relates to values included in the enumerated-value-list?"]}, {"axiom": "enumerated datatype propertyRestrictions [has_operation some Successor:enumerated]", "CQ": ["Is it required that any instance with a propertyRestriction on 'has_operation' must relate to at least one member of the 'Successor' enumeration?", "Does the presence of a propertyRestriction on 'has_operation' necessarily imply association with a value specifically from the enumerated set 'Successor'?", "Can propertyRestrictions specify the existence of a 'has_operation' relationship exclusively with members of the enumerated class 'Successor'?"]}, {"axiom": "enumerated datatype propertyRestrictions [has_quality some bounded]", "CQ": ["Does the enumerated datatype have at least one quality that is bounded?", "Must every enumerated datatype include some relationship to a bounded quality?", "Is it possible for an enumerated datatype not to possess any qualities unless one of them is bounded?"]}, {"axiom": "enumerated datatype propertyRestrictions [has_operation some InOrder:enumerated]", "CQ": ["Is it required that entities with propertyRestrictions have at least one has_operation value from the InOrder enumerated set?", "Can propertyRestrictions include has_operation values that are not part of the InOrder enumerated type?", "Does the presence of propertyRestrictions guarantee that the has_operation property is assigned to an individual in the InOrder enumeration?"]}, {"axiom": "enumerated datatype propertyRestrictions [has_quality some exact]", "CQ": ["Are entities in the enumerated datatype required to have at least one 'has_quality' relationship to 'exact'?", "Is it necessary that any instance of the enumerated datatype possesses the property 'has_quality' with the value 'exact'?", "Can an instance be part of the enumerated datatype if it lacks the 'has_quality' property relating to 'exact'?"]}]}
{"ontology": "OntoDT", "class": "range", "axiom": {"subClassOf": ["value expression"], "propertyRestrictions": ["[has_member some upper bound]", "[has_member only lower bound]"]}, "datatype": "Type3", "TCQ": ["Is every value of the property 'has_member' required to include at least one instance from the class 'lower bound'?", "Does enforcing the property restriction 'has_member some lower bound' ensure that any entity linked by 'has_member' must have a member from the 'lower bound' class?", "Can an entity have the 'has_member' property without referencing at least one 'lower bound' individual?"], "VCQ": ["Is value expression a broader category that encompasses range?", "Which specific subcategories fall under value expression, such as range?", "To which higher-level classes does range belong in the ontology?", "Does the property 'has_member' necessarily include at least one entity of type 'upper bound'?", "Is it required for all values of 'has_member' to be instances of 'upper bound'?", "Can 'has_member' ever link to an entity outside of the class 'upper bound'?", "Is every value of the property 'has_member' required to include at least one instance from the class 'lower bound'?", "Does enforcing the property restriction 'has_member some lower bound' ensure that any entity linked by 'has_member' must have a member from the 'lower bound' class?", "Can an entity have the 'has_member' property without referencing at least one 'lower bound' individual?"], "Taxiom": "range propertyRestrictions [has_member some lower bound]", "CQ": [{"axiom": "range subClassOf value expression", "CQ": ["Is value expression a broader category that encompasses range?", "Which specific subcategories fall under value expression, such as range?", "To which higher-level classes does range belong in the ontology?"]}, {"axiom": "range propertyRestrictions [has_member some lower bound]", "CQ": ["Is every value of the property 'has_member' required to include at least one instance from the class 'lower bound'?", "Does enforcing the property restriction 'has_member some lower bound' ensure that any entity linked by 'has_member' must have a member from the 'lower bound' class?", "Can an entity have the 'has_member' property without referencing at least one 'lower bound' individual?"]}, {"axiom": "range propertyRestrictions [has_member some upper bound]", "CQ": ["Does the property 'has_member' necessarily include at least one entity of type 'upper bound'?", "Is it required for all values of 'has_member' to be instances of 'upper bound'?", "Can 'has_member' ever link to an entity outside of the class 'upper bound'?"]}]}
{"ontology": "OntoDT", "class": "extended datatype", "axiom": {"subClassOf": ["data representational model"], "propertyRestrictions": ["[has_quality some datatype property]", "[has_member some subtype generator]", "[has_member some base type]", "[has_attribute only value space]"]}, "datatype": "Type3", "TCQ": ["Is every instance with the 'extended datatype propertyRestrictions' required to have at least one 'has_attribute' in the value space?", "Can something classified under 'extended datatype propertyRestrictions' exist without possessing the 'has_attribute' property associated with any value space?", "Does the existence of 'has_attribute' with any value from the specified space determine membership in 'extended datatype propertyRestrictions'?"], "VCQ": ["Is extended datatype categorized under data representational model?", "Which data representational model subclasses include extended datatype?", "What broader classes encompass extended datatype within the ontology?", "Is it required that every instance of extended possesses at least one 'has_quality' property with a datatype value?", "Must each extended entity be associated with some value through the 'has_quality' property?", "Does the existence of an extended entity imply the presence of a datatype property assertion via 'has_quality'?", "Does the extended datatype require that it must have at least one member that is an instance of a subtype generator?", "Is it necessary for every extended datatype to possess the has_member property relating to a subtype generator?", "Can an extended datatype exist without being associated with any subtype generator via the has_member property?", "Is every instance with the property 'has_member' required to include at least one value of the base type?", "Can something be classified under extended datatype propertyRestrictions if it does not possess the 'has_member' property pointing to any base type?", "Does the existence of a 'has_member' property with a value from the base type suffice for an entity to meet the extended datatype propertyRestrictions criterion?", "Is every instance with the 'extended datatype propertyRestrictions' required to have at least one 'has_attribute' in the value space?", "Can something classified under 'extended datatype propertyRestrictions' exist without possessing the 'has_attribute' property associated with any value space?", "Does the existence of 'has_attribute' with any value from the specified space determine membership in 'extended datatype propertyRestrictions'?"], "Taxiom": "extended datatype propertyRestrictions [has_attribute some value space]", "CQ": [{"axiom": "extended datatype subClassOf data representational model", "CQ": ["Is extended datatype categorized under data representational model?", "Which data representational model subclasses include extended datatype?", "What broader classes encompass extended datatype within the ontology?"]}, {"axiom": "extended datatype propertyRestrictions [has_quality some datatype property]", "CQ": ["Is it required that every instance of extended possesses at least one 'has_quality' property with a datatype value?", "Must each extended entity be associated with some value through the 'has_quality' property?", "Does the existence of an extended entity imply the presence of a datatype property assertion via 'has_quality'?"]}, {"axiom": "extended datatype propertyRestrictions [has_member some subtype generator]", "CQ": ["Does the extended datatype require that it must have at least one member that is an instance of a subtype generator?", "Is it necessary for every extended datatype to possess the has_member property relating to a subtype generator?", "Can an extended datatype exist without being associated with any subtype generator via the has_member property?"]}, {"axiom": "extended datatype propertyRestrictions [has_attribute some value space]", "CQ": ["Is every instance with the 'extended datatype propertyRestrictions' required to have at least one 'has_attribute' in the value space?", "Can something classified under 'extended datatype propertyRestrictions' exist without possessing the 'has_attribute' property associated with any value space?", "Does the existence of 'has_attribute' with any value from the specified space determine membership in 'extended datatype propertyRestrictions'?"]}, {"axiom": "extended datatype propertyRestrictions [has_member some base type]", "CQ": ["Is every instance with the property 'has_member' required to include at least one value of the base type?", "Can something be classified under extended datatype propertyRestrictions if it does not possess the 'has_member' property pointing to any base type?", "Does the existence of a 'has_member' property with a value from the base type suffice for an entity to meet the extended datatype propertyRestrictions criterion?"]}]}
{"ontology": "OntoDT", "class": "sequence of discrete datatype", "axiom": {"subClassOf": ["sequence datatype"], "propertyRestrictions": ["[has_member only discrete base type]"]}, "datatype": "Type3", "TCQ": ["Must every sequence contain at least one member drawn from the discrete base type?", "Is it required that a sequence always includes a value for the property 'has_member' sourced from a discrete base type?", "Do all instances of the sequence have at least one association via 'has_member' to an element of the discrete base type?"], "VCQ": ["Is sequence of discrete datatype classified as a kind of sequence datatype?", "Which datatypes are more specific instances under the category of sequence datatype?", "To which higher-level datatype categories does sequence of discrete datatype belong?", "Must every sequence contain at least one member drawn from the discrete base type?", "Is it required that a sequence always includes a value for the property 'has_member' sourced from a discrete base type?", "Do all instances of the sequence have at least one association via 'has_member' to an element of the discrete base type?"], "Taxiom": "sequence of discrete datatype propertyRestrictions [has_member some discrete base type]", "CQ": [{"axiom": "sequence of discrete datatype subClassOf sequence datatype", "CQ": ["Is sequence of discrete datatype classified as a kind of sequence datatype?", "Which datatypes are more specific instances under the category of sequence datatype?", "To which higher-level datatype categories does sequence of discrete datatype belong?"]}, {"axiom": "sequence of discrete datatype propertyRestrictions [has_member some discrete base type]", "CQ": ["Must every sequence contain at least one member drawn from the discrete base type?", "Is it required that a sequence always includes a value for the property 'has_member' sourced from a discrete base type?", "Do all instances of the sequence have at least one association via 'has_member' to an element of the discrete base type?"]}]}
{"ontology": "OntoDT", "class": "homogenous  unordered aggregate datatype with variable size", "axiom": {"subClassOf": ["homogenous aggregate datatype with variable size"], "propertyRestrictions": ["[has_member only homogenous unordered aggregate generator with variable size]"]}, "datatype": "Type3", "TCQ": ["Must a homogenous unordered aggregate datatype with variable size always include at least one homogenous unordered aggregate generator with variable size as a member?", "Is it required that every homogenous unordered aggregate datatype with variable size is composed of one or more members which are homogenous unordered aggregate generators with variable size?", "Does the presence of a homogenous unordered aggregate generator with variable size as a member determine the classification of a datatype as a homogenous unordered aggregate datatype with variable size?"], "VCQ": ["Does every homogenous unordered aggregate datatype with variable size fall under the classification of homogenous aggregate datatype with variable size?", "Which aggregate datatypes with variable size encompass homogenous unordered variants as specific types?", "What are the more general datatype categories that include homogenous unordered aggregate datatype with variable size as a subclass?", "Must a homogenous unordered aggregate datatype with variable size always include at least one homogenous unordered aggregate generator with variable size as a member?", "Is it required that every homogenous unordered aggregate datatype with variable size is composed of one or more members which are homogenous unordered aggregate generators with variable size?", "Does the presence of a homogenous unordered aggregate generator with variable size as a member determine the classification of a datatype as a homogenous unordered aggregate datatype with variable size?"], "Taxiom": "homogenous  unordered aggregate datatype with variable size propertyRestrictions [has_member some homogenous unordered aggregate generator with variable size]", "CQ": [{"axiom": "homogenous  unordered aggregate datatype with variable size subClassOf homogenous aggregate datatype with variable size", "CQ": ["Does every homogenous unordered aggregate datatype with variable size fall under the classification of homogenous aggregate datatype with variable size?", "Which aggregate datatypes with variable size encompass homogenous unordered variants as specific types?", "What are the more general datatype categories that include homogenous unordered aggregate datatype with variable size as a subclass?"]}, {"axiom": "homogenous  unordered aggregate datatype with variable size propertyRestrictions [has_member some homogenous unordered aggregate generator with variable size]", "CQ": ["Must a homogenous unordered aggregate datatype with variable size always include at least one homogenous unordered aggregate generator with variable size as a member?", "Is it required that every homogenous unordered aggregate datatype with variable size is composed of one or more members which are homogenous unordered aggregate generators with variable size?", "Does the presence of a homogenous unordered aggregate generator with variable size as a member determine the classification of a datatype as a homogenous unordered aggregate datatype with variable size?"]}]}
{"ontology": "OntoDT", "class": "aggregate field component", "axiom": {"subClassOf": ["field component"], "disjointWith": ["primitive field component"], "propertyRestrictions": ["[role_of only aggregate datatype]"]}, "datatype": "Type3", "TCQ": ["Does every aggregate field necessarily include at least one component that plays the role_of some aggregate datatype?", "Is it required for an aggregate field to have a component related through role_of to an aggregate datatype?", "Can an aggregate field exist without any component that fulfills the role_of some aggregate datatype?"], "VCQ": ["Is aggregate field component categorized under the broader class of field component?", "Which components are defined as specializations of field component, including aggregate field component?", "To what higher-level classifications does aggregate field component pertain?", "How is the mutual exclusivity of aggregate field component and primitive field component represented in the ontology?", "Is there any field component classified simultaneously as both aggregate and primitive?", "Which field component types are formally specified as disjoint with aggregate field component?", "Does every aggregate field necessarily include at least one component that plays the role_of some aggregate datatype?", "Is it required for an aggregate field to have a component related through role_of to an aggregate datatype?", "Can an aggregate field exist without any component that fulfills the role_of some aggregate datatype?"], "Taxiom": "aggregate field component propertyRestrictions [role_of some aggregate datatype]", "CQ": [{"axiom": "aggregate field component subClassOf field component", "CQ": ["Is aggregate field component categorized under the broader class of field component?", "Which components are defined as specializations of field component, including aggregate field component?", "To what higher-level classifications does aggregate field component pertain?"]}, {"axiom": "aggregate field component disjointWith primitive field component", "CQ": ["How is the mutual exclusivity of aggregate field component and primitive field component represented in the ontology?", "Is there any field component classified simultaneously as both aggregate and primitive?", "Which field component types are formally specified as disjoint with aggregate field component?"]}, {"axiom": "aggregate field component propertyRestrictions [role_of some aggregate datatype]", "CQ": ["Does every aggregate field necessarily include at least one component that plays the role_of some aggregate datatype?", "Is it required for an aggregate field to have a component related through role_of to an aggregate datatype?", "Can an aggregate field exist without any component that fulfills the role_of some aggregate datatype?"]}]}
{"ontology": "OntoDT", "class": "void datatype", "axiom": {"subClassOf": ["primitive datatype"], "disjointWith": ["non-numeric primitive datatype", "numeric primitive datatype", "non-numeric unordered primitive datatype"], "propertyRestrictions": ["[has_operation only Equal:void]"]}, "datatype": "Type3", "TCQ": ["Is it a requirement for any void entity to have at least one has_operation relationship with an instance of Equal:void?", "Does every void entity necessarily possess an operation of type Equal:void through the has_operation property?", "Can a void exist without the has_operation property relating it to Equal:void?"], "VCQ": ["Is void datatype categorized as a type of primitive datatype?", "Which data types fall under the category of primitive datatype, specifically including void datatype?", "To which higher-level data type groupings does void datatype conceptually belong?", "What is the formal separation defined between void datatype and non-numeric primitive datatype?", "Could an instance belong simultaneously to both void datatype and non-numeric primitive datatype?", "Which datatypes are specified as incompatible with non-numeric primitive datatype?", "What logical difference is asserted between void datatypes and numeric primitive datatypes in the ontology?", "Is there any datatype that can simultaneously be classified as both a void datatype and a numeric primitive datatype?", "Which datatypes are specified as disjoint with numeric primitive datatypes?", "How does the ontology differentiate between void datatypes and non-numeric unordered primitive datatypes?", "Is there any datatype that can simultaneously be classified as both a void datatype and a non-numeric unordered primitive datatype?", "Which additional datatypes are defined as mutually exclusive with non-numeric unordered primitive datatypes?", "Is it a requirement for any void entity to have at least one has_operation relationship with an instance of Equal:void?", "Does every void entity necessarily possess an operation of type Equal:void through the has_operation property?", "Can a void exist without the has_operation property relating it to Equal:void?"], "Taxiom": "void datatype propertyRestrictions [has_operation some Equal:void]", "CQ": [{"axiom": "void datatype subClassOf primitive datatype", "CQ": ["Is void datatype categorized as a type of primitive datatype?", "Which data types fall under the category of primitive datatype, specifically including void datatype?", "To which higher-level data type groupings does void datatype conceptually belong?"]}, {"axiom": "void datatype disjointWith non-numeric primitive datatype", "CQ": ["What is the formal separation defined between void datatype and non-numeric primitive datatype?", "Could an instance belong simultaneously to both void datatype and non-numeric primitive datatype?", "Which datatypes are specified as incompatible with non-numeric primitive datatype?"]}, {"axiom": "void datatype disjointWith numeric primitive datatype", "CQ": ["What logical difference is asserted between void datatypes and numeric primitive datatypes in the ontology?", "Is there any datatype that can simultaneously be classified as both a void datatype and a numeric primitive datatype?", "Which datatypes are specified as disjoint with numeric primitive datatypes?"]}, {"axiom": "void datatype disjointWith non-numeric unordered primitive datatype", "CQ": ["How does the ontology differentiate between void datatypes and non-numeric unordered primitive datatypes?", "Is there any datatype that can simultaneously be classified as both a void datatype and a non-numeric unordered primitive datatype?", "Which additional datatypes are defined as mutually exclusive with non-numeric unordered primitive datatypes?"]}, {"axiom": "void datatype propertyRestrictions [has_operation some Equal:void]", "CQ": ["Is it a requirement for any void entity to have at least one has_operation relationship with an instance of Equal:void?", "Does every void entity necessarily possess an operation of type Equal:void through the has_operation property?", "Can a void exist without the has_operation property relating it to Equal:void?"]}]}
{"ontology": "OntoDT", "class": "homogenous aggregate generator", "axiom": {"subClassOf": ["aggregate generator"], "disjointWith": ["heterogenous aggregate generator"], "equivalentClass": ["(array generator or bag generator or sequence generator or set generator)"], "propertyRestrictions": ["[has_quality only homogenous]"]}, "datatype": "Type3", "TCQ": ["Is it required that every aggregate generator possesses the quality of being homogenous?", "Does an aggregate generator necessarily exhibit some homogenous characteristic?", "Can an aggregate generator be classified as homogenous if it lacks the property 'has_quality' with homogenous?"], "VCQ": ["Is homogenous aggregate generator classified under the category of aggregate generator?", "Which specific types fall under aggregate generator, such as homogenous aggregate generator?", "What upper-level groupings include homogenous aggregate generator?", "What is the nature of the disjointness between homogenous aggregate generators and heterogenous aggregate generators?", "Is it permissible for an entity to be classified as both a homogenous aggregate generator and a heterogenous aggregate generator?", "Which types of generators are explicitly defined as disjoint with homogenous aggregate generators within the ontology?", "Is every homogenous aggregate generator necessarily either an array generator, a bag generator, a sequence generator, or a set generator?", "Is a homogenous aggregate generator equivalent to the union of array generator, bag generator, sequence generator, and set generator?", "Are there any entities considered a homogenous aggregate generator that do not belong to array generator, bag generator, sequence generator, or set generator?", "Is it required that every aggregate generator possesses the quality of being homogenous?", "Does an aggregate generator necessarily exhibit some homogenous characteristic?", "Can an aggregate generator be classified as homogenous if it lacks the property 'has_quality' with homogenous?"], "Taxiom": "homogenous aggregate generator propertyRestrictions [has_quality some homogenous]", "CQ": [{"axiom": "homogenous aggregate generator subClassOf aggregate generator", "CQ": ["Is homogenous aggregate generator classified under the category of aggregate generator?", "Which specific types fall under aggregate generator, such as homogenous aggregate generator?", "What upper-level groupings include homogenous aggregate generator?"]}, {"axiom": "homogenous aggregate generator disjointWith heterogenous aggregate generator", "CQ": ["What is the nature of the disjointness between homogenous aggregate generators and heterogenous aggregate generators?", "Is it permissible for an entity to be classified as both a homogenous aggregate generator and a heterogenous aggregate generator?", "Which types of generators are explicitly defined as disjoint with homogenous aggregate generators within the ontology?"]}, {"axiom": "homogenous aggregate generator equivalentClass (array generator or bag generator or sequence generator or set generator)", "CQ": ["Is every homogenous aggregate generator necessarily either an array generator, a bag generator, a sequence generator, or a set generator?", "Is a homogenous aggregate generator equivalent to the union of array generator, bag generator, sequence generator, and set generator?", "Are there any entities considered a homogenous aggregate generator that do not belong to array generator, bag generator, sequence generator, or set generator?"]}, {"axiom": "homogenous aggregate generator propertyRestrictions [has_quality some homogenous]", "CQ": ["Is it required that every aggregate generator possesses the quality of being homogenous?", "Does an aggregate generator necessarily exhibit some homogenous characteristic?", "Can an aggregate generator be classified as homogenous if it lacks the property 'has_quality' with homogenous?"]}]}
{"ontology": "OntoDT", "class": "non-numeric ordered primitive datatype", "axiom": {"subClassOf": ["non-numeric primitive datatype"], "propertyRestrictions": ["[has_quality only ordered]"]}, "datatype": "Type3", "TCQ": ["Is it necessary for non-numeric ordered primitive datatype property restrictions to possess the 'has_quality' relationship with at least one instance of 'ordered'?", "Can non-numeric ordered primitive datatype property restrictions exist without exhibiting some type of 'ordered' quality?", "Does the presence of the 'has_quality' property with 'ordered' define all instances of non-numeric ordered primitive datatype property restrictions?"], "VCQ": ["Is every non-numeric ordered primitive datatype encompassed within the category of non-numeric primitive datatype?", "Which datatypes are classified as specializations under non-numeric primitive datatype, such as non-numeric ordered primitive datatype?", "To which broader datatype categories does non-numeric ordered primitive datatype belong?", "Is it necessary for non-numeric ordered primitive datatype property restrictions to possess the 'has_quality' relationship with at least one instance of 'ordered'?", "Can non-numeric ordered primitive datatype property restrictions exist without exhibiting some type of 'ordered' quality?", "Does the presence of the 'has_quality' property with 'ordered' define all instances of non-numeric ordered primitive datatype property restrictions?"], "Taxiom": "non-numeric ordered primitive datatype propertyRestrictions [has_quality some ordered]", "CQ": [{"axiom": "non-numeric ordered primitive datatype subClassOf non-numeric primitive datatype", "CQ": ["Is every non-numeric ordered primitive datatype encompassed within the category of non-numeric primitive datatype?", "Which datatypes are classified as specializations under non-numeric primitive datatype, such as non-numeric ordered primitive datatype?", "To which broader datatype categories does non-numeric ordered primitive datatype belong?"]}, {"axiom": "non-numeric ordered primitive datatype propertyRestrictions [has_quality some ordered]", "CQ": ["Is it necessary for non-numeric ordered primitive datatype property restrictions to possess the 'has_quality' relationship with at least one instance of 'ordered'?", "Can non-numeric ordered primitive datatype property restrictions exist without exhibiting some type of 'ordered' quality?", "Does the presence of the 'has_quality' property with 'ordered' define all instances of non-numeric ordered primitive datatype property restrictions?"]}]}
{"ontology": "OntoDT", "class": "direct access property", "axiom": {"subClassOf": ["access type"], "disjointWith": ["indirect acess property"], "equivalentClass": ["(index access and key access)"]}, "datatype": "Type3", "TCQ": ["Is every instance with direct access property necessarily equivalent to either index access or key access?", "Is direct access property defined as the union of index access and key access in the ontology?", "Can something possessing direct access property be anything other than index access or key access?"], "VCQ": ["Is direct access property classified as a specific form of access type?", "Which access types have direct access property as a more specialized subtype?", "What broader access type categories encompass direct access property?", "Is any property classified as both a direct access property and an indirect access property within the ontology?", "Which properties are explicitly specified as disjoint with indirect access properties?", "What is the ontological distinction between direct access property and indirect access property?", "Is every instance with direct access property necessarily equivalent to either index access or key access?", "Is direct access property defined as the union of index access and key access in the ontology?", "Can something possessing direct access property be anything other than index access or key access?"], "Taxiom": "direct access property equivalentClass (index access or key access)", "CQ": [{"axiom": "direct access property subClassOf access type", "CQ": ["Is direct access property classified as a specific form of access type?", "Which access types have direct access property as a more specialized subtype?", "What broader access type categories encompass direct access property?"]}, {"axiom": "direct access property disjointWith indirect acess property", "CQ": ["Is any property classified as both a direct access property and an indirect access property within the ontology?", "Which properties are explicitly specified as disjoint with indirect access properties?", "What is the ontological distinction between direct access property and indirect access property?"]}, {"axiom": "direct access property equivalentClass (index access or key access)", "CQ": ["Is every instance with direct access property necessarily equivalent to either index access or key access?", "Is direct access property defined as the union of index access and key access in the ontology?", "Can something possessing direct access property be anything other than index access or key access?"]}]}
{"ontology": "OntoDT", "class": "target primitive field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of some (real datatype and discrete datatype and boolean datatype)]"]}, "datatype": "Type3", "TCQ": ["Is every target primitive field component required to participate in the role_of relationship with a real, discrete, or boolean datatype?", "Can a target primitive field component have a role_of property with something that is not a real, discrete, or boolean datatype?", "Are real datatype, discrete datatype, and boolean datatype the only types permitted in the role_of property for target primitive field components?"], "VCQ": ["Is every target primitive field component also classified as a labeled dataset target field component?", "Which components are categorized as subclasses under labeled dataset target field component?", "What broader categories encompass target primitive field component?", "Is every target primitive field component required to participate in the role_of relationship with a real, discrete, or boolean datatype?", "Can a target primitive field component have a role_of property with something that is not a real, discrete, or boolean datatype?", "Are real datatype, discrete datatype, and boolean datatype the only types permitted in the role_of property for target primitive field components?"], "Taxiom": "target primitive field component propertyRestrictions [role_of some (real datatype or discrete datatype or boolean datatype)]", "CQ": [{"axiom": "target primitive field component subClassOf labeled dataset target field component", "CQ": ["Is every target primitive field component also classified as a labeled dataset target field component?", "Which components are categorized as subclasses under labeled dataset target field component?", "What broader categories encompass target primitive field component?"]}, {"axiom": "target primitive field component propertyRestrictions [role_of some (real datatype or discrete datatype or boolean datatype)]", "CQ": ["Is every target primitive field component required to participate in the role_of relationship with a real, discrete, or boolean datatype?", "Can a target primitive field component have a role_of property with something that is not a real, discrete, or boolean datatype?", "Are real datatype, discrete datatype, and boolean datatype the only types permitted in the role_of property for target primitive field components?"]}]}
{"ontology": "OntoDT", "class": "target boolean field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only boolean datatype]"]}, "datatype": "Type3", "TCQ": ["Is every instance of 'target' required to have the 'component' property with at least one value linked to the role_of property associated with a boolean datatype?", "Can 'target' possess the 'component' property only if there is a related role_of property with values of boolean type?", "Does the definition of 'target' entail that the 'component' property must always reference some boolean value through the role_of property?"], "VCQ": ["Does every target boolean field component fall under the category of labeled dataset target field component?", "Which components are subclasses of labeled dataset target field component, such as target boolean field component?", "What broader classes is target boolean field component a member of?", "Is every instance of 'target' required to have the 'component' property with at least one value linked to the role_of property associated with a boolean datatype?", "Can 'target' possess the 'component' property only if there is a related role_of property with values of boolean type?", "Does the definition of 'target' entail that the 'component' property must always reference some boolean value through the role_of property?"], "Taxiom": "target boolean field component propertyRestrictions [role_of some boolean datatype]", "CQ": [{"axiom": "target boolean field component subClassOf labeled dataset target field component", "CQ": ["Does every target boolean field component fall under the category of labeled dataset target field component?", "Which components are subclasses of labeled dataset target field component, such as target boolean field component?", "What broader classes is target boolean field component a member of?"]}, {"axiom": "target boolean field component propertyRestrictions [role_of some boolean datatype]", "CQ": ["Is every instance of 'target' required to have the 'component' property with at least one value linked to the role_of property associated with a boolean datatype?", "Can 'target' possess the 'component' property only if there is a related role_of property with values of boolean type?", "Does the definition of 'target' entail that the 'component' property must always reference some boolean value through the role_of property?"]}]}
{"ontology": "OntoDT", "class": "target discrete field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only discrete datatype]"]}, "datatype": "Type3", "TCQ": ["Is it required that every target discrete field component is associated with some role_of discrete datatype?", "Can a target discrete field component exist without having the role_of property with a discrete datatype?", "Does having the role_of property with at least one discrete datatype qualify an entity as a target discrete field component?"], "VCQ": ["Is every target discrete field component included within the category of labeled dataset target field components?", "Which component types are specialized forms of labeled dataset target field component, such as target discrete field component?", "To what higher-level component categories does target discrete field component belong?", "Is it required that every target discrete field component is associated with some role_of discrete datatype?", "Can a target discrete field component exist without having the role_of property with a discrete datatype?", "Does having the role_of property with at least one discrete datatype qualify an entity as a target discrete field component?"], "Taxiom": "target discrete field component propertyRestrictions [role_of some discrete datatype]", "CQ": [{"axiom": "target discrete field component subClassOf labeled dataset target field component", "CQ": ["Is every target discrete field component included within the category of labeled dataset target field components?", "Which component types are specialized forms of labeled dataset target field component, such as target discrete field component?", "To what higher-level component categories does target discrete field component belong?"]}, {"axiom": "target discrete field component propertyRestrictions [role_of some discrete datatype]", "CQ": ["Is it required that every target discrete field component is associated with some role_of discrete datatype?", "Can a target discrete field component exist without having the role_of property with a discrete datatype?", "Does having the role_of property with at least one discrete datatype qualify an entity as a target discrete field component?"]}]}
{"ontology": "OntoDT", "class": "target real field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only real datatype]"]}, "datatype": "Type3", "TCQ": ["Is every target real field component required to play the role_of property with at least one real datatype?", "Can a target real field component exist without having a role_of relationship to any real datatype?", "Does the ontology restrict target real field components to only have role_of relationships with real datatypes?"], "VCQ": ["Is every target real field component included under the category of labeled dataset target field component?", "What components are specified as subclasses of labeled dataset target field component, such as target real field component?", "Which broader categories encompass the target real field component?", "Is every target real field component required to play the role_of property with at least one real datatype?", "Can a target real field component exist without having a role_of relationship to any real datatype?", "Does the ontology restrict target real field components to only have role_of relationships with real datatypes?"], "Taxiom": "target real field component propertyRestrictions [role_of some real datatype]", "CQ": [{"axiom": "target real field component subClassOf labeled dataset target field component", "CQ": ["Is every target real field component included under the category of labeled dataset target field component?", "What components are specified as subclasses of labeled dataset target field component, such as target real field component?", "Which broader categories encompass the target real field component?"]}, {"axiom": "target real field component propertyRestrictions [role_of some real datatype]", "CQ": ["Is every target real field component required to play the role_of property with at least one real datatype?", "Can a target real field component exist without having a role_of relationship to any real datatype?", "Does the ontology restrict target real field components to only have role_of relationships with real datatypes?"]}]}
{"ontology": "OntoDT", "class": "target sequence of real field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only sequence of real datatype]"]}, "datatype": "Type3", "TCQ": ["Is every target sequence of real field component required to be associated by the role_of property with at least one value of the real datatype?", "Can a target sequence of real field component exist without possessing the role_of relation to elements of the real type?", "Does the class target sequence of real field component necessarily have a role_of property restricted only to instances of the real datatype?"], "VCQ": ["Is every target sequence of real field component classified under labeled dataset target field component?", "Which components are specified as subclasses of labeled dataset target field component, such as target sequence of real field component?", "To which broader category does target sequence of real field component belong?", "Is every target sequence of real field component required to be associated by the role_of property with at least one value of the real datatype?", "Can a target sequence of real field component exist without possessing the role_of relation to elements of the real type?", "Does the class target sequence of real field component necessarily have a role_of property restricted only to instances of the real datatype?"], "Taxiom": "target sequence of real field component propertyRestrictions [role_of some sequence of real datatype]", "CQ": [{"axiom": "target sequence of real field component subClassOf labeled dataset target field component", "CQ": ["Is every target sequence of real field component classified under labeled dataset target field component?", "Which components are specified as subclasses of labeled dataset target field component, such as target sequence of real field component?", "To which broader category does target sequence of real field component belong?"]}, {"axiom": "target sequence of real field component propertyRestrictions [role_of some sequence of real datatype]", "CQ": ["Is every target sequence of real field component required to be associated by the role_of property with at least one value of the real datatype?", "Can a target sequence of real field component exist without possessing the role_of relation to elements of the real type?", "Does the class target sequence of real field component necessarily have a role_of property restricted only to instances of the real datatype?"]}]}
{"ontology": "OntoDT", "class": "target hierarchical field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of some (tree datatype and DAG datatype)]"]}, "datatype": "Type3", "TCQ": ["Is every target hierarchical field component necessarily associated through the 'role_of' property with either a tree datatype or a DAG datatype?", "Can a target hierarchical field component have the 'role_of' property linked to both a tree datatype and a DAG datatype?", "Does the presence of a 'role_of' relationship to any datatype other than tree or DAG preclude the entity from being classified as a target hierarchical field component?"], "VCQ": ["Does target hierarchical field component fall under the category of labeled dataset target field component?", "Which components are defined as specializations of labeled dataset target field component, including target hierarchical field component?", "What broader categories encompass target hierarchical field component in the ontology?", "Is every target hierarchical field component necessarily associated through the 'role_of' property with either a tree datatype or a DAG datatype?", "Can a target hierarchical field component have the 'role_of' property linked to both a tree datatype and a DAG datatype?", "Does the presence of a 'role_of' relationship to any datatype other than tree or DAG preclude the entity from being classified as a target hierarchical field component?"], "Taxiom": "target hierarchical field component propertyRestrictions [role_of some (tree datatype or DAG datatype)]", "CQ": [{"axiom": "target hierarchical field component subClassOf labeled dataset target field component", "CQ": ["Does target hierarchical field component fall under the category of labeled dataset target field component?", "Which components are defined as specializations of labeled dataset target field component, including target hierarchical field component?", "What broader categories encompass target hierarchical field component in the ontology?"]}, {"axiom": "target hierarchical field component propertyRestrictions [role_of some (tree datatype or DAG datatype)]", "CQ": ["Is every target hierarchical field component necessarily associated through the 'role_of' property with either a tree datatype or a DAG datatype?", "Can a target hierarchical field component have the 'role_of' property linked to both a tree datatype and a DAG datatype?", "Does the presence of a 'role_of' relationship to any datatype other than tree or DAG preclude the entity from being classified as a target hierarchical field component?"]}]}
{"ontology": "OntoDT", "class": "target DAG field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only DAG datatype]"]}, "datatype": "Type3", "TCQ": ["Is every target DAG field component required to have at least one property that fulfills the role_of some DAG datatype condition?", "Can a target DAG field component lack the role_of relationship to any DAG datatype?", "Does the existence of a role_of connection to a DAG datatype define the target DAG field component?"], "VCQ": ["Is every target DAG field component a specific instance of a labeled dataset target field component?", "Which types of components fall under the more general class of labeled dataset target field component?", "What broader component classifications include target DAG field component?", "Is every target DAG field component required to have at least one property that fulfills the role_of some DAG datatype condition?", "Can a target DAG field component lack the role_of relationship to any DAG datatype?", "Does the existence of a role_of connection to a DAG datatype define the target DAG field component?"], "Taxiom": "target DAG field component propertyRestrictions [role_of some DAG datatype]", "CQ": [{"axiom": "target DAG field component subClassOf labeled dataset target field component", "CQ": ["Is every target DAG field component a specific instance of a labeled dataset target field component?", "Which types of components fall under the more general class of labeled dataset target field component?", "What broader component classifications include target DAG field component?"]}, {"axiom": "target DAG field component propertyRestrictions [role_of some DAG datatype]", "CQ": ["Is every target DAG field component required to have at least one property that fulfills the role_of some DAG datatype condition?", "Can a target DAG field component lack the role_of relationship to any DAG datatype?", "Does the existence of a role_of connection to a DAG datatype define the target DAG field component?"]}]}
{"ontology": "OntoDT", "class": "target tree field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only tree datatype]"]}, "datatype": "Type3", "TCQ": ["Is every target tree field component required to have at least one property that serves the role of some tree datatype?", "Can a target tree field component exist without a property that plays the role of a tree datatype?", "Does the target tree field component necessarily involve a property that is in the role_of relationship with a tree datatype?"], "VCQ": ["Is target tree field component a specific type of labeled dataset target field component?", "Which field components are classified under labeled dataset target field component, including target tree field component?", "What broader classifications does target tree field component fall under in the dataset context?", "Is every target tree field component required to have at least one property that serves the role of some tree datatype?", "Can a target tree field component exist without a property that plays the role of a tree datatype?", "Does the target tree field component necessarily involve a property that is in the role_of relationship with a tree datatype?"], "Taxiom": "target tree field component propertyRestrictions [role_of some tree datatype]", "CQ": [{"axiom": "target tree field component subClassOf labeled dataset target field component", "CQ": ["Is target tree field component a specific type of labeled dataset target field component?", "Which field components are classified under labeled dataset target field component, including target tree field component?", "What broader classifications does target tree field component fall under in the dataset context?"]}, {"axiom": "target tree field component propertyRestrictions [role_of some tree datatype]", "CQ": ["Is every target tree field component required to have at least one property that serves the role of some tree datatype?", "Can a target tree field component exist without a property that plays the role of a tree datatype?", "Does the target tree field component necessarily involve a property that is in the role_of relationship with a tree datatype?"]}]}
{"ontology": "OntoDT", "class": "target set of discrete field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only set of discrete datatype]"]}, "datatype": "Type3", "TCQ": ["Must every target set of discrete field component have at least one role_of relation to a set of discrete datatype?", "Is it required for the target set of discrete field component to be connected, through the role_of property, to a set of discrete datatype?", "Does the existence of a target set of discrete field component imply that it plays the role_of with some set of discrete datatype?"], "VCQ": ["Is target set of discrete field component a specialized type of labeled dataset target field component?", "Which components are recognized as more specific instances under labeled dataset target field component, such as target set of discrete field component?", "What higher-level group encompasses target set of discrete field component within the ontology?", "Must every target set of discrete field component have at least one role_of relation to a set of discrete datatype?", "Is it required for the target set of discrete field component to be connected, through the role_of property, to a set of discrete datatype?", "Does the existence of a target set of discrete field component imply that it plays the role_of with some set of discrete datatype?"], "Taxiom": "target set of discrete field component propertyRestrictions [role_of some set of discrete datatype]", "CQ": [{"axiom": "target set of discrete field component subClassOf labeled dataset target field component", "CQ": ["Is target set of discrete field component a specialized type of labeled dataset target field component?", "Which components are recognized as more specific instances under labeled dataset target field component, such as target set of discrete field component?", "What higher-level group encompasses target set of discrete field component within the ontology?"]}, {"axiom": "target set of discrete field component propertyRestrictions [role_of some set of discrete datatype]", "CQ": ["Must every target set of discrete field component have at least one role_of relation to a set of discrete datatype?", "Is it required for the target set of discrete field component to be connected, through the role_of property, to a set of discrete datatype?", "Does the existence of a target set of discrete field component imply that it plays the role_of with some set of discrete datatype?"]}]}
{"ontology": "OntoDT", "class": "target record of primitives field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only record of primitives datatype]"]}, "datatype": "Type3", "TCQ": ["Does the target record of primitives require the component property 'role_of' to be associated with at least one individual of type record of primitives datatype?", "Is it necessary for each target record of primitives to have the 'role_of' property filled by some record of primitives datatype?", "Can a target record of primitives exist without any 'role_of' relationship to a record of primitives datatype?"], "VCQ": ["Is every target record of primitives field component categorized under labeled dataset target field component?", "Which specialized components fall under labeled dataset target field component, such as target record of primitives field component?", "What are the parent classes of target record of primitives field component within the dataset ontology?", "Does the target record of primitives require the component property 'role_of' to be associated with at least one individual of type record of primitives datatype?", "Is it necessary for each target record of primitives to have the 'role_of' property filled by some record of primitives datatype?", "Can a target record of primitives exist without any 'role_of' relationship to a record of primitives datatype?"], "Taxiom": "target record of primitives field component propertyRestrictions [role_of some record of primitives datatype]", "CQ": [{"axiom": "target record of primitives field component subClassOf labeled dataset target field component", "CQ": ["Is every target record of primitives field component categorized under labeled dataset target field component?", "Which specialized components fall under labeled dataset target field component, such as target record of primitives field component?", "What are the parent classes of target record of primitives field component within the dataset ontology?"]}, {"axiom": "target record of primitives field component propertyRestrictions [role_of some record of primitives datatype]", "CQ": ["Does the target record of primitives require the component property 'role_of' to be associated with at least one individual of type record of primitives datatype?", "Is it necessary for each target record of primitives to have the 'role_of' property filled by some record of primitives datatype?", "Can a target record of primitives exist without any 'role_of' relationship to a record of primitives datatype?"]}]}
{"ontology": "OntoDT", "class": "target record of boolean field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only record of boolean datatype]"]}, "datatype": "Type3", "TCQ": ["Is every target record required to have at least one property restriction where the role_of property relates to a record with a boolean datatype?", "Can a target record exist without having any role_of property pointing to a record with a boolean value?", "Does the ontology allow a target record to have role_of relationships only with records of non-boolean datatypes?"], "VCQ": ["Is target record of boolean field component categorized under labeled dataset target field component?", "Which components fall under the category of labeled dataset target field component, such as target record of boolean field component?", "To which broader component types does target record of boolean field component belong?", "Is every target record required to have at least one property restriction where the role_of property relates to a record with a boolean datatype?", "Can a target record exist without having any role_of property pointing to a record with a boolean value?", "Does the ontology allow a target record to have role_of relationships only with records of non-boolean datatypes?"], "Taxiom": "target record of boolean field component propertyRestrictions [role_of some record of boolean datatype]", "CQ": [{"axiom": "target record of boolean field component subClassOf labeled dataset target field component", "CQ": ["Is target record of boolean field component categorized under labeled dataset target field component?", "Which components fall under the category of labeled dataset target field component, such as target record of boolean field component?", "To which broader component types does target record of boolean field component belong?"]}, {"axiom": "target record of boolean field component propertyRestrictions [role_of some record of boolean datatype]", "CQ": ["Is every target record required to have at least one property restriction where the role_of property relates to a record with a boolean datatype?", "Can a target record exist without having any role_of property pointing to a record with a boolean value?", "Does the ontology allow a target record to have role_of relationships only with records of non-boolean datatypes?"]}]}
{"ontology": "OntoDT", "class": "target record of discrete field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of only record of discrete datatype]"]}, "datatype": "Type3", "TCQ": ["Does every target record of a discrete field component necessarily relate via 'propertyRestrictions' to at least one record of a discrete datatype through the role_of property?", "Is it required that for each target record of a discrete field component, there exists a property restriction involving role_of some record of a discrete datatype?", "Can a target record of a discrete field component exist without being associated, via propertyRestrictions, through role_of, to any record of a discrete datatype?"], "VCQ": ["Is every target record of discrete field component classified under labeled dataset target field component?", "What are the more specific concepts included within labeled dataset target field component, such as target record of discrete field component?", "To which overarching categories does target record of discrete field component belong?", "Does every target record of a discrete field component necessarily relate via 'propertyRestrictions' to at least one record of a discrete datatype through the role_of property?", "Is it required that for each target record of a discrete field component, there exists a property restriction involving role_of some record of a discrete datatype?", "Can a target record of a discrete field component exist without being associated, via propertyRestrictions, through role_of, to any record of a discrete datatype?"], "Taxiom": "target record of discrete field component propertyRestrictions [role_of some record of discrete datatype]", "CQ": [{"axiom": "target record of discrete field component subClassOf labeled dataset target field component", "CQ": ["Is every target record of discrete field component classified under labeled dataset target field component?", "What are the more specific concepts included within labeled dataset target field component, such as target record of discrete field component?", "To which overarching categories does target record of discrete field component belong?"]}, {"axiom": "target record of discrete field component propertyRestrictions [role_of some record of discrete datatype]", "CQ": ["Does every target record of a discrete field component necessarily relate via 'propertyRestrictions' to at least one record of a discrete datatype through the role_of property?", "Is it required that for each target record of a discrete field component, there exists a property restriction involving role_of some record of a discrete datatype?", "Can a target record of a discrete field component exist without being associated, via propertyRestrictions, through role_of, to any record of a discrete datatype?"]}]}
{"ontology": "OntoDT", "class": "target structured field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of some (table datatype and array datatype and class datatype and sequence datatype and bag datatype and set datatype)]"]}, "datatype": "Type3", "TCQ": ["Is every target structured field component required to have a role_of relationship with at least one of the following datatypes: table, array, class, sequence, bag, or set?", "Does the definition of target structured field component necessitate that its role_of property is fulfilled by at least one datatype among table, array, class, sequence, bag, or set?", "Can a target structured field component possess a role_of relation to any datatype beyond table, array, class, sequence, bag, or set?"], "VCQ": ["Is every target structured field component categorized under labeled dataset target field component?", "Which kinds of labeled dataset target field component encompass target structured field component as a specific type?", "To what broader field component categories does target structured field component belong?", "Is every target structured field component required to have a role_of relationship with at least one of the following datatypes: table, array, class, sequence, bag, or set?", "Does the definition of target structured field component necessitate that its role_of property is fulfilled by at least one datatype among table, array, class, sequence, bag, or set?", "Can a target structured field component possess a role_of relation to any datatype beyond table, array, class, sequence, bag, or set?"], "Taxiom": "target structured field component propertyRestrictions [role_of some (table datatype or array datatype or class datatype or sequence datatype or bag datatype or set datatype)]", "CQ": [{"axiom": "target structured field component subClassOf labeled dataset target field component", "CQ": ["Is every target structured field component categorized under labeled dataset target field component?", "Which kinds of labeled dataset target field component encompass target structured field component as a specific type?", "To what broader field component categories does target structured field component belong?"]}, {"axiom": "target structured field component propertyRestrictions [role_of some (table datatype or array datatype or class datatype or sequence datatype or bag datatype or set datatype)]", "CQ": ["Is every target structured field component required to have a role_of relationship with at least one of the following datatypes: table, array, class, sequence, bag, or set?", "Does the definition of target structured field component necessitate that its role_of property is fulfilled by at least one datatype among table, array, class, sequence, bag, or set?", "Can a target structured field component possess a role_of relation to any datatype beyond table, array, class, sequence, bag, or set?"]}]}
{"ontology": "OntoDT", "class": "descriptive record of boolean field component", "axiom": {"subClassOf": ["labeled dataset descriptive field component"], "propertyRestrictions": ["[role_of only record of boolean datatype]"]}, "datatype": "Type3", "TCQ": ["Must every descriptive record of a boolean field component have at least one 'role_of' relation to a record of boolean datatype?", "Is it required that any descriptive record of a boolean field component be linked by 'role_of' only to records of boolean datatype?", "Are there descriptive records of boolean field components that lack any 'role_of' connection with a record of boolean datatype?"], "VCQ": ["Is descriptive record of boolean field component classified as a type of labeled dataset descriptive field component?", "Which components are encompassed under labeled dataset descriptive field component, including descriptive record of boolean field component?", "To what broader field categories does descriptive record of boolean field component pertain?", "Must every descriptive record of a boolean field component have at least one 'role_of' relation to a record of boolean datatype?", "Is it required that any descriptive record of a boolean field component be linked by 'role_of' only to records of boolean datatype?", "Are there descriptive records of boolean field components that lack any 'role_of' connection with a record of boolean datatype?"], "Taxiom": "descriptive record of boolean field component propertyRestrictions [role_of some record of boolean datatype]", "CQ": [{"axiom": "descriptive record of boolean field component subClassOf labeled dataset descriptive field component", "CQ": ["Is descriptive record of boolean field component classified as a type of labeled dataset descriptive field component?", "Which components are encompassed under labeled dataset descriptive field component, including descriptive record of boolean field component?", "To what broader field categories does descriptive record of boolean field component pertain?"]}, {"axiom": "descriptive record of boolean field component propertyRestrictions [role_of some record of boolean datatype]", "CQ": ["Must every descriptive record of a boolean field component have at least one 'role_of' relation to a record of boolean datatype?", "Is it required that any descriptive record of a boolean field component be linked by 'role_of' only to records of boolean datatype?", "Are there descriptive records of boolean field components that lack any 'role_of' connection with a record of boolean datatype?"]}]}
{"ontology": "OntoDT", "class": "descriptive strucured field component", "axiom": {"subClassOf": ["labeled dataset descriptive field component"], "propertyRestrictions": ["[role_of some (array datatype and class datatype and sequence datatype and bag datatype and set datatype)]"]}, "datatype": "Type3", "TCQ": ["Must every descriptive structured field component play a role in at least one array, class, sequence, bag, or set datatype?", "Is it required that a descriptive structured field component serves in a role involving only array, class, sequence, bag, or set datatypes?", "Can a descriptive structured field component have the role_of property with any datatype type other than array, class, sequence, bag, or set?"], "VCQ": ["Is descriptive structured field component categorized as a subset of labeled dataset descriptive field component?", "Which field components are included under labeled dataset descriptive field component, such as descriptive structured field component?", "Into which more general component groups does descriptive structured field component fall?", "Must every descriptive structured field component play a role in at least one array, class, sequence, bag, or set datatype?", "Is it required that a descriptive structured field component serves in a role involving only array, class, sequence, bag, or set datatypes?", "Can a descriptive structured field component have the role_of property with any datatype type other than array, class, sequence, bag, or set?"], "Taxiom": "descriptive strucured field component propertyRestrictions [role_of some (array datatype or class datatype or sequence datatype or bag datatype or set datatype)]", "CQ": [{"axiom": "descriptive strucured field component subClassOf labeled dataset descriptive field component", "CQ": ["Is descriptive structured field component categorized as a subset of labeled dataset descriptive field component?", "Which field components are included under labeled dataset descriptive field component, such as descriptive structured field component?", "Into which more general component groups does descriptive structured field component fall?"]}, {"axiom": "descriptive strucured field component propertyRestrictions [role_of some (array datatype or class datatype or sequence datatype or bag datatype or set datatype)]", "CQ": ["Must every descriptive structured field component play a role in at least one array, class, sequence, bag, or set datatype?", "Is it required that a descriptive structured field component serves in a role involving only array, class, sequence, bag, or set datatypes?", "Can a descriptive structured field component have the role_of property with any datatype type other than array, class, sequence, bag, or set?"]}]}
{"ontology": "OntoDT", "class": "procedure-paremeter declaration", "axiom": {"subClassOf": ["specification"], "propertyRestrictions": ["[has_member some parameter]", "[has_member some direction]"]}, "datatype": "Type2", "TCQ": ["Is procedure-parameter declaration classified as a kind of specification?", "Which specifications include procedure-parameter declaration as a more specific type?", "Under what broader concepts can procedure-parameter declaration be grouped in the ontology?"], "VCQ": ["Does every procedure-parameter declaration necessarily include at least one parameter as a member?", "Is it required for a procedure-parameter declaration to be associated with the 'has_member' property pointing to a parameter?", "Can a procedure-parameter declaration exist without having any 'parameter' as its member through the 'has_member' relation?", "Is every procedure-parameter required to have at least one member that is a direction?", "Must a procedure-parameter always be associated with a direction through the has_member relationship?", "Can a procedure-parameter exist without referencing any direction via the has_member property?", "Is procedure-parameter declaration classified as a kind of specification?", "Which specifications include procedure-parameter declaration as a more specific type?", "Under what broader concepts can procedure-parameter declaration be grouped in the ontology?"], "Taxiom": "procedure-paremeter declaration subClassOf specification", "CQ": [{"axiom": "procedure-paremeter declaration subClassOf specification", "CQ": ["Is procedure-parameter declaration classified as a kind of specification?", "Which specifications include procedure-parameter declaration as a more specific type?", "Under what broader concepts can procedure-parameter declaration be grouped in the ontology?"]}, {"axiom": "procedure-paremeter declaration propertyRestrictions [has_member some parameter]", "CQ": ["Does every procedure-parameter declaration necessarily include at least one parameter as a member?", "Is it required for a procedure-parameter declaration to be associated with the 'has_member' property pointing to a parameter?", "Can a procedure-parameter declaration exist without having any 'parameter' as its member through the 'has_member' relation?"]}, {"axiom": "procedure-paremeter declaration propertyRestrictions [has_member some direction]", "CQ": ["Is every procedure-parameter required to have at least one member that is a direction?", "Must a procedure-parameter always be associated with a direction through the has_member relationship?", "Can a procedure-parameter exist without referencing any direction via the has_member property?"]}]}
{"ontology": "OntoDT", "class": "datatype role", "axiom": {"subClassOf": ["role"], "propertyRestrictions": ["[role_of some datatype]"]}, "datatype": "Type2", "TCQ": ["Is it required that every instance with the role 'role_of' is associated with a value of datatype?", "Does the property 'role_of' necessarily relate an individual only to values belonging to datatype?", "Can an entity be considered within the scope if its 'role_of' relation points to something other than the specified datatype?"], "VCQ": ["Is every datatype role by definition a kind of role?", "What specific roles are classified under the broader role of 'role', including datatype role?", "Which higher-level categories encompass datatype role within the ontology?", "Is it required that every instance with the role 'role_of' is associated with a value of datatype?", "Does the property 'role_of' necessarily relate an individual only to values belonging to datatype?", "Can an entity be considered within the scope if its 'role_of' relation points to something other than the specified datatype?"], "Taxiom": "datatype role propertyRestrictions [role_of some datatype]", "CQ": [{"axiom": "datatype role subClassOf role", "CQ": ["Is every datatype role by definition a kind of role?", "What specific roles are classified under the broader role of 'role', including datatype role?", "Which higher-level categories encompass datatype role within the ontology?"]}, {"axiom": "datatype role propertyRestrictions [role_of some datatype]", "CQ": ["Is it required that every instance with the role 'role_of' is associated with a value of datatype?", "Does the property 'role_of' necessarily relate an individual only to values belonging to datatype?", "Can an entity be considered within the scope if its 'role_of' relation points to something other than the specified datatype?"]}]}
{"ontology": "OntoDT", "class": "range subtype generator", "axiom": {"subClassOf": ["subtype generator"], "propertyRestrictions": ["[has_member some range]"]}, "datatype": "Type2", "TCQ": ["Is every range subtype generator necessarily classified as a kind of subtype generator?", "Which entities fall under the more specific grouping of subtype generator, such as the range subtype generator?", "Into what broader categories within the ontology is range subtype generator subsumed?"], "VCQ": ["Does a Range Subtype Generator necessarily have at least one member that is a Range?", "Is it required for every Range Subtype Generator to have a 'has_member' relationship with some instance of Range?", "Can a Range Subtype Generator be defined without possessing the property 'has_member' that connects it to any Range?", "Is every range subtype generator necessarily classified as a kind of subtype generator?", "Which entities fall under the more specific grouping of subtype generator, such as the range subtype generator?", "Into what broader categories within the ontology is range subtype generator subsumed?"], "Taxiom": "range subtype generator subClassOf subtype generator", "CQ": [{"axiom": "range subtype generator subClassOf subtype generator", "CQ": ["Is every range subtype generator necessarily classified as a kind of subtype generator?", "Which entities fall under the more specific grouping of subtype generator, such as the range subtype generator?", "Into what broader categories within the ontology is range subtype generator subsumed?"]}, {"axiom": "range subtype generator propertyRestrictions [has_member some range]", "CQ": ["Does a Range Subtype Generator necessarily have at least one member that is a Range?", "Is it required for every Range Subtype Generator to have a 'has_member' relationship with some instance of Range?", "Can a Range Subtype Generator be defined without possessing the property 'has_member' that connects it to any Range?"]}]}
{"ontology": "OntoDT", "class": "non-directed labeled graph datatype", "axiom": {"subClassOf": ["defined datatype"], "propertyRestrictions": ["[has_member some graph aggregate component]", "[has_member some non-directed labeled graph generator]"]}, "datatype": "Type2", "TCQ": ["Is every non-directed labeled graph required to have at least one member that is a non-directed labeled graph generator?", "Can a non-directed labeled graph exist without having a has_member relationship to a non-directed labeled graph generator?", "Does the presence of the has_member relationship to a non-directed labeled graph generator define membership within a non-directed labeled graph?"], "VCQ": ["Is non-directed labeled graph datatype a specialized form of defined datatype?", "Which datatypes fall under the defined datatype category, including non-directed labeled graph datatype?", "What broader datatype classifications does non-directed labeled graph datatype belong to?", "Must every non-directed labeled graph have at least one has_member relationship to a graph aggregate component?", "Is it required for a non-directed labeled graph to possess some member that qualifies as a graph aggregate component?", "Can a non-directed labeled graph exist without having any has_member relation to a graph aggregate component?", "Is every non-directed labeled graph required to have at least one member that is a non-directed labeled graph generator?", "Can a non-directed labeled graph exist without having a has_member relationship to a non-directed labeled graph generator?", "Does the presence of the has_member relationship to a non-directed labeled graph generator define membership within a non-directed labeled graph?"], "Taxiom": "non-directed labeled graph datatype propertyRestrictions [has_member some non-directed labeled graph generator]", "CQ": [{"axiom": "non-directed labeled graph datatype subClassOf defined datatype", "CQ": ["Is non-directed labeled graph datatype a specialized form of defined datatype?", "Which datatypes fall under the defined datatype category, including non-directed labeled graph datatype?", "What broader datatype classifications does non-directed labeled graph datatype belong to?"]}, {"axiom": "non-directed labeled graph datatype propertyRestrictions [has_member some non-directed labeled graph generator]", "CQ": ["Is every non-directed labeled graph required to have at least one member that is a non-directed labeled graph generator?", "Can a non-directed labeled graph exist without having a has_member relationship to a non-directed labeled graph generator?", "Does the presence of the has_member relationship to a non-directed labeled graph generator define membership within a non-directed labeled graph?"]}, {"axiom": "non-directed labeled graph datatype propertyRestrictions [has_member some graph aggregate component]", "CQ": ["Must every non-directed labeled graph have at least one has_member relationship to a graph aggregate component?", "Is it required for a non-directed labeled graph to possess some member that qualifies as a graph aggregate component?", "Can a non-directed labeled graph exist without having any has_member relation to a graph aggregate component?"]}]}
{"ontology": "OntoDT", "class": "homogenous aggregate generator with variable size", "axiom": {"subClassOf": ["homogenous aggregate generator"], "propertyRestrictions": ["[has_quality some variable size]"]}, "datatype": "Type2", "TCQ": ["Is homogenous aggregate generator with variable size categorized under homogenous aggregate generator?", "Which specific types fall under homogenous aggregate generator, such as those with variable size?", "What broader classes encompass homogenous aggregate generator with variable size?"], "VCQ": ["Is every homogenous aggregate generator required to have at least one quality corresponding to variable size?", "Can a homogenous aggregate generator exist without exhibiting the variable size quality?", "Does the property 'has_quality' for homogenous aggregate generators necessarily include variable size among its attributes?", "Is homogenous aggregate generator with variable size categorized under homogenous aggregate generator?", "Which specific types fall under homogenous aggregate generator, such as those with variable size?", "What broader classes encompass homogenous aggregate generator with variable size?"], "Taxiom": "homogenous aggregate generator with variable size subClassOf homogenous aggregate generator", "CQ": [{"axiom": "homogenous aggregate generator with variable size subClassOf homogenous aggregate generator", "CQ": ["Is homogenous aggregate generator with variable size categorized under homogenous aggregate generator?", "Which specific types fall under homogenous aggregate generator, such as those with variable size?", "What broader classes encompass homogenous aggregate generator with variable size?"]}, {"axiom": "homogenous aggregate generator with variable size propertyRestrictions [has_quality some variable size]", "CQ": ["Is every homogenous aggregate generator required to have at least one quality corresponding to variable size?", "Can a homogenous aggregate generator exist without exhibiting the variable size quality?", "Does the property 'has_quality' for homogenous aggregate generators necessarily include variable size among its attributes?"]}]}
{"ontology": "OntoDT", "class": "class generator", "axiom": {"subClassOf": ["heterogenous aggregate generator"], "disjointWith": ["record generator", "table generator"], "propertyRestrictions": ["[has_quality some key access]", "[has_quality some unordered aggregate]", "[has_quality some non-unique values]", "[has_quality some one dimensional]", "[has_quality some fixed size]"]}, "datatype": "Type2", "TCQ": ["What formal separation is defined between class generator and table generator in the ontology?", "Is there any instance that can be classified as both a class generator and a table generator?", "Which other entities are specified as being incompatible with table generator?"], "VCQ": ["Is class generator categorized as a type of heterogenous aggregate generator?", "Which specific generators fall under the broader class of heterogenous aggregate generator, such as class generator?", "What higher-level generator classifications include class generator within their hierarchy?", "What logical incompatibility exists between class generator and record generator in the ontology?", "Is it permitted for an entity to be both a class generator and a record generator?", "Which classes are formally specified as disjoint with record generator?", "Is it required for every generator to possess at least one key access quality?", "Does the class generator necessarily have the property 'has_quality' related in some way to key access?", "Can a member of the generator class lack any association to key access through the has_quality property?", "Is every instance of the class 'generator' required to have at least one 'has_quality' relationship with an 'unordered aggregate'?", "Can a generator possess a quality that is not an unordered aggregate?", "Are all qualities attributed to generators necessarily instances of unordered aggregates?", "Must every instance of generator possess at least one non-unique quality via the has_quality property?", "Is it required that a generator is related by has_quality to something described as a non-unique value?", "Can a generator exist in the ontology without being associated with any non-unique value through has_quality?", "Must every instance of generator have at least one quality that is one dimensional?", "Are all generators required to possess some quality classified as one dimensional?", "Is it necessary that generator is related via has_quality to a one dimensional entity?", "Is it required that every generator has at least one quality that is a fixed size?", "Can a generator possess a quality other than fixed size, or is fixed size the only necessary quality?", "Does the ontology require the existence of a fixed size quality for all instances of generators?", "What formal separation is defined between class generator and table generator in the ontology?", "Is there any instance that can be classified as both a class generator and a table generator?", "Which other entities are specified as being incompatible with table generator?"], "Taxiom": "class generator disjointWith table generator", "CQ": [{"axiom": "class generator subClassOf heterogenous aggregate generator", "CQ": ["Is class generator categorized as a type of heterogenous aggregate generator?", "Which specific generators fall under the broader class of heterogenous aggregate generator, such as class generator?", "What higher-level generator classifications include class generator within their hierarchy?"]}, {"axiom": "class generator disjointWith record generator", "CQ": ["What logical incompatibility exists between class generator and record generator in the ontology?", "Is it permitted for an entity to be both a class generator and a record generator?", "Which classes are formally specified as disjoint with record generator?"]}, {"axiom": "class generator disjointWith table generator", "CQ": ["What formal separation is defined between class generator and table generator in the ontology?", "Is there any instance that can be classified as both a class generator and a table generator?", "Which other entities are specified as being incompatible with table generator?"]}, {"axiom": "class generator propertyRestrictions [has_quality some key access]", "CQ": ["Is it required for every generator to possess at least one key access quality?", "Does the class generator necessarily have the property 'has_quality' related in some way to key access?", "Can a member of the generator class lack any association to key access through the has_quality property?"]}, {"axiom": "class generator propertyRestrictions [has_quality some unordered aggregate]", "CQ": ["Is every instance of the class 'generator' required to have at least one 'has_quality' relationship with an 'unordered aggregate'?", "Can a generator possess a quality that is not an unordered aggregate?", "Are all qualities attributed to generators necessarily instances of unordered aggregates?"]}, {"axiom": "class generator propertyRestrictions [has_quality some non-unique values]", "CQ": ["Must every instance of generator possess at least one non-unique quality via the has_quality property?", "Is it required that a generator is related by has_quality to something described as a non-unique value?", "Can a generator exist in the ontology without being associated with any non-unique value through has_quality?"]}, {"axiom": "class generator propertyRestrictions [has_quality some one dimensional]", "CQ": ["Must every instance of generator have at least one quality that is one dimensional?", "Are all generators required to possess some quality classified as one dimensional?", "Is it necessary that generator is related via has_quality to a one dimensional entity?"]}, {"axiom": "class generator propertyRestrictions [has_quality some fixed size]", "CQ": ["Is it required that every generator has at least one quality that is a fixed size?", "Can a generator possess a quality other than fixed size, or is fixed size the only necessary quality?", "Does the ontology require the existence of a fixed size quality for all instances of generators?"]}]}
{"ontology": "OntoDT", "class": "sequence generator", "axiom": {"subClassOf": ["homogenous aggregate generator with variable size"], "disjointWith": ["homogenous unordered aggregate generator with variable size"], "propertyRestrictions": ["[has_quality some non-unique values]", "[has_quality some ordered aggregate]", "[has_quality some position access]"]}, "datatype": "Type2", "TCQ": ["What logical separation is defined between sequence generators and homogenous unordered aggregate generators with variable size in the ontology?", "Is any system classified as both a sequence generator and a homogenous unordered aggregate generator with variable size?", "Which generator classes are declared as incompatible with homogenous unordered aggregate generators with variable size?"], "VCQ": ["Is sequence generator included as a type of homogenous aggregate generator with variable size?", "What specific subclasses fall under homogenous aggregate generator with variable size, including sequence generator?", "Which broader categories does sequence generator belong to within the ontology?", "Is it required that a sequence generator has at least one quality corresponding to non-unique values?", "Can a sequence generator exist without possessing the non-unique values quality?", "Must all sequence generators be associated with the non-unique values quality through the has_quality property?", "Must every sequence generator possess at least one quality characterized as an ordered aggregate?", "Is it required that a sequence generator be associated, via the has_quality property, with something that is an ordered aggregate?", "Can a sequence generator exist without having the has_quality relationship to an ordered aggregate?", "Does every sequence generator necessarily have at least one quality associated with position access?", "Is possessing the quality of position access required for an entity to be classified as a sequence generator?", "Can a sequence generator exist without having the property 'has_quality' linked to position access?", "What logical separation is defined between sequence generators and homogenous unordered aggregate generators with variable size in the ontology?", "Is any system classified as both a sequence generator and a homogenous unordered aggregate generator with variable size?", "Which generator classes are declared as incompatible with homogenous unordered aggregate generators with variable size?"], "Taxiom": "sequence generator disjointWith homogenous unordered aggregate generator with variable size", "CQ": [{"axiom": "sequence generator subClassOf homogenous aggregate generator with variable size", "CQ": ["Is sequence generator included as a type of homogenous aggregate generator with variable size?", "What specific subclasses fall under homogenous aggregate generator with variable size, including sequence generator?", "Which broader categories does sequence generator belong to within the ontology?"]}, {"axiom": "sequence generator disjointWith homogenous unordered aggregate generator with variable size", "CQ": ["What logical separation is defined between sequence generators and homogenous unordered aggregate generators with variable size in the ontology?", "Is any system classified as both a sequence generator and a homogenous unordered aggregate generator with variable size?", "Which generator classes are declared as incompatible with homogenous unordered aggregate generators with variable size?"]}, {"axiom": "sequence generator propertyRestrictions [has_quality some non-unique values]", "CQ": ["Is it required that a sequence generator has at least one quality corresponding to non-unique values?", "Can a sequence generator exist without possessing the non-unique values quality?", "Must all sequence generators be associated with the non-unique values quality through the has_quality property?"]}, {"axiom": "sequence generator propertyRestrictions [has_quality some ordered aggregate]", "CQ": ["Must every sequence generator possess at least one quality characterized as an ordered aggregate?", "Is it required that a sequence generator be associated, via the has_quality property, with something that is an ordered aggregate?", "Can a sequence generator exist without having the has_quality relationship to an ordered aggregate?"]}, {"axiom": "sequence generator propertyRestrictions [has_quality some position access]", "CQ": ["Does every sequence generator necessarily have at least one quality associated with position access?", "Is possessing the quality of position access required for an entity to be classified as a sequence generator?", "Can a sequence generator exist without having the property 'has_quality' linked to position access?"]}]}
{"ontology": "OntoDT", "class": "pointer generator", "axiom": {"subClassOf": ["non-aggregate generator"], "propertyRestrictions": ["[is_member_of some pointer datatype]"]}, "datatype": "Type2", "TCQ": ["Does pointer generator fall under the classification of non-aggregate generator?", "Which types of generators are subclasses of non-aggregate generator, such as pointer generator?", "What broader generator categories include pointer generator as a member?"], "VCQ": ["Is every pointer generator necessarily associated with at least one pointer datatype through the 'is_member_of' property?", "Does a pointer generator require the existence of some related pointer datatype via the 'is_member_of' relationship?", "Must each instance of pointer generator be linked to a pointer datatype by the 'is_member_of' property?", "Does pointer generator fall under the classification of non-aggregate generator?", "Which types of generators are subclasses of non-aggregate generator, such as pointer generator?", "What broader generator categories include pointer generator as a member?"], "Taxiom": "pointer generator subClassOf non-aggregate generator", "CQ": [{"axiom": "pointer generator subClassOf non-aggregate generator", "CQ": ["Does pointer generator fall under the classification of non-aggregate generator?", "Which types of generators are subclasses of non-aggregate generator, such as pointer generator?", "What broader generator categories include pointer generator as a member?"]}, {"axiom": "pointer generator propertyRestrictions [is_member_of some pointer datatype]", "CQ": ["Is every pointer generator necessarily associated with at least one pointer datatype through the 'is_member_of' property?", "Does a pointer generator require the existence of some related pointer datatype via the 'is_member_of' relationship?", "Must each instance of pointer generator be linked to a pointer datatype by the 'is_member_of' property?"]}]}
{"ontology": "OntoDT", "class": "record (tuple) datatype", "axiom": {"subClassOf": ["heterogenous aggregate datatype"], "propertyRestrictions": ["[has_quality some non-numeric]", "[has_operation some Equal:record]", "[has_quality some exact]", "[has_quality some non-ordered]", "[has_member some record generator]", "[has_operation some FieldReplace:record]", "[has_member some field-list]", "[has_operation some FieldSelect:record]"]}, "datatype": "Type2", "TCQ": ["Is every instance of record (tuple) required to have at least one has_operation property relating to a FieldSelect:record?", "Can a record (tuple) exist without any has_operation connection to a FieldSelect:record?", "Does the ontology specify that a record (tuple) must always participate in at least one has_operation relationship with a FieldSelect:record?"], "VCQ": ["Is every record (tuple) datatype classified under heterogenous aggregate datatype?", "What specific datatypes are recognized as subclasses of heterogenous aggregate datatype, including record (tuple) datatype?", "Which broader categories encompass the record (tuple) datatype?", "Is it required that every record has at least one quality that is non-numeric?", "Does the definition of record permit it to possess only non-numeric qualities via the has_quality property?", "Can a record exist without having a non-numeric value assigned through has_quality?", "Must a record always have at least one operation that is classified as Equal?", "Is it required for every record to possess an operation property linking to an instance of Equal?", "Can a record exist without having its has_operation property related to Equal?", "Must every record (tuple) have at least one has_quality property with the value exact?", "Is it required for any instance of record (tuple) to possess the has_quality property related specifically to exact?", "Can a record (tuple) exist without being associated with the has_quality property to exact?", "Does every record tuple necessarily possess the quality of being non-ordered?", "Can a record tuple exist without having at least one non-ordered quality?", "Is it required that some aspect of a record tuple must be described by the has_quality property related to non-ordered?", "Is it required that a record must have at least one member with the role of generator?", "Can a record exist without including any generator as a member?", "Are all records defined to contain some member identified specifically as a generator?", "Does every record require at least one has_operation relation to a FieldReplace record?", "Is it necessary for a record to participate in the has_operation property with a FieldReplace instance?", "Can a record exist without being associated via has_operation to any FieldReplace record?", "Is it required that every record has at least one member from the field-list?", "Can a record exist if it does not have the has_member property with any element in the field-list?", "Does the definition of record ensure the presence of at least one value from the field-list via the has_member property?", "Is every instance of record (tuple) required to have at least one has_operation property relating to a FieldSelect:record?", "Can a record (tuple) exist without any has_operation connection to a FieldSelect:record?", "Does the ontology specify that a record (tuple) must always participate in at least one has_operation relationship with a FieldSelect:record?"], "Taxiom": "record (tuple) datatype propertyRestrictions [has_operation some FieldSelect:record]", "CQ": [{"axiom": "record (tuple) datatype subClassOf heterogenous aggregate datatype", "CQ": ["Is every record (tuple) datatype classified under heterogenous aggregate datatype?", "What specific datatypes are recognized as subclasses of heterogenous aggregate datatype, including record (tuple) datatype?", "Which broader categories encompass the record (tuple) datatype?"]}, {"axiom": "record (tuple) datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Is it required that every record has at least one quality that is non-numeric?", "Does the definition of record permit it to possess only non-numeric qualities via the has_quality property?", "Can a record exist without having a non-numeric value assigned through has_quality?"]}, {"axiom": "record (tuple) datatype propertyRestrictions [has_operation some FieldSelect:record]", "CQ": ["Is every instance of record (tuple) required to have at least one has_operation property relating to a FieldSelect:record?", "Can a record (tuple) exist without any has_operation connection to a FieldSelect:record?", "Does the ontology specify that a record (tuple) must always participate in at least one has_operation relationship with a FieldSelect:record?"]}, {"axiom": "record (tuple) datatype propertyRestrictions [has_operation some Equal:record]", "CQ": ["Must a record always have at least one operation that is classified as Equal?", "Is it required for every record to possess an operation property linking to an instance of Equal?", "Can a record exist without having its has_operation property related to Equal?"]}, {"axiom": "record (tuple) datatype propertyRestrictions [has_quality some exact]", "CQ": ["Must every record (tuple) have at least one has_quality property with the value exact?", "Is it required for any instance of record (tuple) to possess the has_quality property related specifically to exact?", "Can a record (tuple) exist without being associated with the has_quality property to exact?"]}, {"axiom": "record (tuple) datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Does every record tuple necessarily possess the quality of being non-ordered?", "Can a record tuple exist without having at least one non-ordered quality?", "Is it required that some aspect of a record tuple must be described by the has_quality property related to non-ordered?"]}, {"axiom": "record (tuple) datatype propertyRestrictions [has_member some record generator]", "CQ": ["Is it required that a record must have at least one member with the role of generator?", "Can a record exist without including any generator as a member?", "Are all records defined to contain some member identified specifically as a generator?"]}, {"axiom": "record (tuple) datatype propertyRestrictions [has_operation some FieldReplace:record]", "CQ": ["Does every record require at least one has_operation relation to a FieldReplace record?", "Is it necessary for a record to participate in the has_operation property with a FieldReplace instance?", "Can a record exist without being associated via has_operation to any FieldReplace record?"]}, {"axiom": "record (tuple) datatype propertyRestrictions [has_member some field-list]", "CQ": ["Is it required that every record has at least one member from the field-list?", "Can a record exist if it does not have the has_member property with any element in the field-list?", "Does the definition of record ensure the presence of at least one value from the field-list via the has_member property?"]}]}
{"ontology": "OntoDT", "class": "aggregate imposed ordering", "axiom": {"subClassOf": ["aggregate generator property"], "disjointWith": ["aggregate-imposed identifier uniqueness", "homogenity", "agregate size", "component mandatoriness", "structurness", "recursiveness", "access type", "uniqueness"], "equivalentClass": ["(ordered aggregate or unordered aggregate)"]}, "datatype": "Type2", "TCQ": ["What classification differentiates aggregate imposed ordering from uniqueness within the ontology?", "Is it feasible for a concept to exemplify both aggregate imposed ordering and uniqueness simultaneously?", "Which concepts are explicitly incompatible with uniqueness by disjointness declarations?"], "VCQ": ["Is aggregate imposed ordering categorized as a type of aggregate generator property?", "Which properties fall under the broader class of aggregate generator property, such as aggregate imposed ordering?", "What are the more general classes that aggregate imposed ordering is a member of?", "What is the ontological separation between aggregate imposed ordering and aggregate-imposed identifier uniqueness within the model?", "Can an entity simultaneously exhibit aggregate imposed ordering and aggregate-imposed identifier uniqueness?", "Which ontology concepts are defined as mutually exclusive with aggregate-imposed identifier uniqueness?", "What distinguishes aggregate imposed ordering from homogenity within the ontology?", "Is any entity permitted to belong to both aggregate imposed ordering and homogenity simultaneously?", "Which other classes are explicitly defined as disjoint with homogenity?", "What logical separation is defined between aggregate imposed ordering and aggregate size within the ontology?", "Can an aggregate characteristic belong to both imposed ordering and size categories simultaneously?", "Which other aggregate-related concepts are specified as disjoint with aggregate imposed ordering?", "What is the formal separateness specified between aggregate imposed ordering and component mandatoriness?", "Could an entity in the ontology be simultaneously classified as exhibiting both aggregate imposed ordering and component mandatoriness?", "Which classes are asserted as disjoint with aggregate imposed ordering?", "What ontological constraint exists between aggregate imposed ordering and structurness?", "Is there an entity that can be classified under both aggregate imposed ordering and structurness?", "Which classes are specified as disjoint with structurness in the ontology?", "How does the ontology differentiate between aggregate imposed ordering and recursiveness?", "Is there any entity that can be classified as both aggregate imposed ordering and recursiveness?", "Which classes are defined as mutually exclusive with recursiveness?", "What logical separation exists between aggregate imposed ordering and access type in the ontology?", "Is there any entity that can simultaneously be classified as aggregate imposed ordering and access type?", "Which other classes, apart from access type, are explicitly declared as disjoint with aggregate imposed ordering?", "Is aggregate imposed ordering equivalent to the union of ordered aggregate and unordered aggregate?", "Can every instance of aggregate imposed ordering be classified as either an ordered aggregate or an unordered aggregate?", "Are there any instances of aggregate imposed ordering that are not part of ordered aggregate or unordered aggregate?", "What classification differentiates aggregate imposed ordering from uniqueness within the ontology?", "Is it feasible for a concept to exemplify both aggregate imposed ordering and uniqueness simultaneously?", "Which concepts are explicitly incompatible with uniqueness by disjointness declarations?"], "Taxiom": "aggregate imposed ordering disjointWith uniqueness", "CQ": [{"axiom": "aggregate imposed ordering subClassOf aggregate generator property", "CQ": ["Is aggregate imposed ordering categorized as a type of aggregate generator property?", "Which properties fall under the broader class of aggregate generator property, such as aggregate imposed ordering?", "What are the more general classes that aggregate imposed ordering is a member of?"]}, {"axiom": "aggregate imposed ordering disjointWith aggregate-imposed identifier uniqueness", "CQ": ["What is the ontological separation between aggregate imposed ordering and aggregate-imposed identifier uniqueness within the model?", "Can an entity simultaneously exhibit aggregate imposed ordering and aggregate-imposed identifier uniqueness?", "Which ontology concepts are defined as mutually exclusive with aggregate-imposed identifier uniqueness?"]}, {"axiom": "aggregate imposed ordering disjointWith homogenity", "CQ": ["What distinguishes aggregate imposed ordering from homogenity within the ontology?", "Is any entity permitted to belong to both aggregate imposed ordering and homogenity simultaneously?", "Which other classes are explicitly defined as disjoint with homogenity?"]}, {"axiom": "aggregate imposed ordering disjointWith agregate size", "CQ": ["What logical separation is defined between aggregate imposed ordering and aggregate size within the ontology?", "Can an aggregate characteristic belong to both imposed ordering and size categories simultaneously?", "Which other aggregate-related concepts are specified as disjoint with aggregate imposed ordering?"]}, {"axiom": "aggregate imposed ordering disjointWith uniqueness", "CQ": ["What classification differentiates aggregate imposed ordering from uniqueness within the ontology?", "Is it feasible for a concept to exemplify both aggregate imposed ordering and uniqueness simultaneously?", "Which concepts are explicitly incompatible with uniqueness by disjointness declarations?"]}, {"axiom": "aggregate imposed ordering disjointWith component mandatoriness", "CQ": ["What is the formal separateness specified between aggregate imposed ordering and component mandatoriness?", "Could an entity in the ontology be simultaneously classified as exhibiting both aggregate imposed ordering and component mandatoriness?", "Which classes are asserted as disjoint with aggregate imposed ordering?"]}, {"axiom": "aggregate imposed ordering disjointWith structurness", "CQ": ["What ontological constraint exists between aggregate imposed ordering and structurness?", "Is there an entity that can be classified under both aggregate imposed ordering and structurness?", "Which classes are specified as disjoint with structurness in the ontology?"]}, {"axiom": "aggregate imposed ordering disjointWith recursiveness", "CQ": ["How does the ontology differentiate between aggregate imposed ordering and recursiveness?", "Is there any entity that can be classified as both aggregate imposed ordering and recursiveness?", "Which classes are defined as mutually exclusive with recursiveness?"]}, {"axiom": "aggregate imposed ordering disjointWith access type", "CQ": ["What logical separation exists between aggregate imposed ordering and access type in the ontology?", "Is there any entity that can simultaneously be classified as aggregate imposed ordering and access type?", "Which other classes, apart from access type, are explicitly declared as disjoint with aggregate imposed ordering?"]}, {"axiom": "aggregate imposed ordering equivalentClass (ordered aggregate or unordered aggregate)", "CQ": ["Is aggregate imposed ordering equivalent to the union of ordered aggregate and unordered aggregate?", "Can every instance of aggregate imposed ordering be classified as either an ordered aggregate or an unordered aggregate?", "Are there any instances of aggregate imposed ordering that are not part of ordered aggregate or unordered aggregate?"]}]}
{"ontology": "OntoDT", "class": "agregate size", "axiom": {"subClassOf": ["aggregate generator property"], "disjointWith": ["uniqueness", "component mandatoriness", "structurness", "recursiveness", "access type"], "equivalentClass": ["(fixed size or variable size)"]}, "datatype": "Type2", "TCQ": ["What conceptual separation is defined between aggregate size and access type in the ontology?", "Is there an instance that can simultaneously belong to both aggregate size and access type categories?", "Which ontology categories are specified as disjoint with aggregate size?"], "VCQ": ["Is aggregate size classified as a type of aggregate generator property?", "Which properties are directly subsumed by aggregate generator property, including aggregate size?", "What are the broader categories that aggregate size is categorized under?", "What logical separation exists between aggregate size and uniqueness within the ontology?", "Is it permissible for an entity to possess both aggregate size and uniqueness attributes simultaneously?", "Which classes or properties are explicitly stated as being disjoint with aggregate size?", "What is the ontological separation between aggregate size and component mandatoriness?", "Is there any entity in the ontology that can be classified as both aggregate size and component mandatoriness?", "Which classes are defined as being mutually exclusive with aggregate size?", "What logical separation is defined between agregate size and structurness in the ontology?", "Is there any entity that can simultaneously possess agregate size and structurness?", "Which classes within the ontology are explicitly incompatible with agregate size?", "What is the formal relationship defined between aggregate size and recursiveness in the ontology?", "Is there any entity that can possess both aggregate size and recursiveness characteristics simultaneously?", "Which classes are modelled as being disjoint with recursiveness within the ontology?", "Is agregate size precisely the union of fixed size and variable size?", "Can every agregate size be classified as either fixed size or variable size?", "Are there any agregate sizes that are not characterized as fixed size or variable size?", "What conceptual separation is defined between aggregate size and access type in the ontology?", "Is there an instance that can simultaneously belong to both aggregate size and access type categories?", "Which ontology categories are specified as disjoint with aggregate size?"], "Taxiom": "agregate size disjointWith access type", "CQ": [{"axiom": "agregate size subClassOf aggregate generator property", "CQ": ["Is aggregate size classified as a type of aggregate generator property?", "Which properties are directly subsumed by aggregate generator property, including aggregate size?", "What are the broader categories that aggregate size is categorized under?"]}, {"axiom": "agregate size disjointWith uniqueness", "CQ": ["What logical separation exists between aggregate size and uniqueness within the ontology?", "Is it permissible for an entity to possess both aggregate size and uniqueness attributes simultaneously?", "Which classes or properties are explicitly stated as being disjoint with aggregate size?"]}, {"axiom": "agregate size disjointWith component mandatoriness", "CQ": ["What is the ontological separation between aggregate size and component mandatoriness?", "Is there any entity in the ontology that can be classified as both aggregate size and component mandatoriness?", "Which classes are defined as being mutually exclusive with aggregate size?"]}, {"axiom": "agregate size disjointWith structurness", "CQ": ["What logical separation is defined between agregate size and structurness in the ontology?", "Is there any entity that can simultaneously possess agregate size and structurness?", "Which classes within the ontology are explicitly incompatible with agregate size?"]}, {"axiom": "agregate size disjointWith recursiveness", "CQ": ["What is the formal relationship defined between aggregate size and recursiveness in the ontology?", "Is there any entity that can possess both aggregate size and recursiveness characteristics simultaneously?", "Which classes are modelled as being disjoint with recursiveness within the ontology?"]}, {"axiom": "agregate size disjointWith access type", "CQ": ["What conceptual separation is defined between aggregate size and access type in the ontology?", "Is there an instance that can simultaneously belong to both aggregate size and access type categories?", "Which ontology categories are specified as disjoint with aggregate size?"]}, {"axiom": "agregate size equivalentClass (fixed size or variable size)", "CQ": ["Is agregate size precisely the union of fixed size and variable size?", "Can every agregate size be classified as either fixed size or variable size?", "Are there any agregate sizes that are not characterized as fixed size or variable size?"]}]}
{"ontology": "OntoDT", "class": "structurness", "axiom": {"subClassOf": ["aggregate generator property"], "disjointWith": ["recursiveness", "access type"], "equivalentClass": ["(structured or unstructured or semi-structured)"]}, "datatype": "Type2", "TCQ": ["How does the ontology distinguish between structurness and access type?", "Is it permissible for an entity to be classified simultaneously as structurness and access type?", "Which classes are specified as mutually exclusive with access type?"], "VCQ": ["Is structurness included among the subclasses of aggregate generator property?", "Which general property categories encompass structurness?", "Is aggregate generator property a direct superclass of structurness?", "How does the ontology formally separate structurness from recursiveness?", "Is it allowable for an entity to possess both structurness and recursiveness attributes simultaneously?", "Which classes or concepts are specified as incompatible with recursiveness?", "Is structurness equivalent to the union of structured, unstructured, and semi-structured?", "Can structurness include any entities other than structured, unstructured, or semi-structured?", "Are all entities classified as structurness either structured, unstructured, or semi-structured?", "How does the ontology distinguish between structurness and access type?", "Is it permissible for an entity to be classified simultaneously as structurness and access type?", "Which classes are specified as mutually exclusive with access type?"], "Taxiom": "structurness disjointWith access type", "CQ": [{"axiom": "structurness subClassOf aggregate generator property", "CQ": ["Is structurness included among the subclasses of aggregate generator property?", "Which general property categories encompass structurness?", "Is aggregate generator property a direct superclass of structurness?"]}, {"axiom": "structurness disjointWith recursiveness", "CQ": ["How does the ontology formally separate structurness from recursiveness?", "Is it allowable for an entity to possess both structurness and recursiveness attributes simultaneously?", "Which classes or concepts are specified as incompatible with recursiveness?"]}, {"axiom": "structurness disjointWith access type", "CQ": ["How does the ontology distinguish between structurness and access type?", "Is it permissible for an entity to be classified simultaneously as structurness and access type?", "Which classes are specified as mutually exclusive with access type?"]}, {"axiom": "structurness equivalentClass (structured or unstructured or semi-structured)", "CQ": ["Is structurness equivalent to the union of structured, unstructured, and semi-structured?", "Can structurness include any entities other than structured, unstructured, or semi-structured?", "Are all entities classified as structurness either structured, unstructured, or semi-structured?"]}]}
{"ontology": "OntoDT", "class": "dimensionality", "axiom": {"subClassOf": ["aggregate generator property"], "equivalentClass": ["(one dimensional or two dimensional or multi dimensional)"]}, "datatype": "Type2", "TCQ": ["Is dimensionality equivalent to the union of one dimensional, two dimensional, and multi dimensional classes?", "Are all instances of dimensionality necessarily instances of either one dimensional, two dimensional, or multi dimensional?", "Does dimensionality include any concepts apart from one dimensional, two dimensional, and multi dimensional?"], "VCQ": ["Does dimensionality fall under the classification of aggregate generator property?", "Which properties are more specific than aggregate generator property, such as dimensionality?", "What broader property categories is dimensionality a member of?", "Is dimensionality equivalent to the union of one dimensional, two dimensional, and multi dimensional classes?", "Are all instances of dimensionality necessarily instances of either one dimensional, two dimensional, or multi dimensional?", "Does dimensionality include any concepts apart from one dimensional, two dimensional, and multi dimensional?"], "Taxiom": "dimensionality equivalentClass (one dimensional or two dimensional or multi dimensional)", "CQ": [{"axiom": "dimensionality subClassOf aggregate generator property", "CQ": ["Does dimensionality fall under the classification of aggregate generator property?", "Which properties are more specific than aggregate generator property, such as dimensionality?", "What broader property categories is dimensionality a member of?"]}, {"axiom": "dimensionality equivalentClass (one dimensional or two dimensional or multi dimensional)", "CQ": ["Is dimensionality equivalent to the union of one dimensional, two dimensional, and multi dimensional classes?", "Are all instances of dimensionality necessarily instances of either one dimensional, two dimensional, or multi dimensional?", "Does dimensionality include any concepts apart from one dimensional, two dimensional, and multi dimensional?"]}]}
{"ontology": "OntoDT", "class": "defined datatype", "axiom": {"subClassOf": ["datatype"], "propertyRestrictions": ["[has_member some defined generator]", "[has_member some defined datatype parameter-list]"]}, "datatype": "Type2", "TCQ": ["Is defined datatype categorized under the broader class of datatype?", "What are the specific subclasses found within datatype, such as defined datatype?", "Which higher-level categories does defined datatype belong to in this ontology?"], "VCQ": ["Is it required that any entity with 'propertyRestrictions' must have at least one 'has_member' relationship with a defined generator?", "Does the existence of 'propertyRestrictions' in an entity imply the presence of some member classified as a defined generator?", "Can an instance with 'propertyRestrictions' exist without having any defined generator as a member?", "Is it required that an instance with defined datatype propertyRestrictions must have at least one has_member relationship to a defined datatype parameter-list?", "Can something be described by defined datatype propertyRestrictions if it does not have any has_member relation to parameter-list?", "Does the existence of defined datatype propertyRestrictions imply the presence of at least one member drawn from parameter-list via has_member?", "Is defined datatype categorized under the broader class of datatype?", "What are the specific subclasses found within datatype, such as defined datatype?", "Which higher-level categories does defined datatype belong to in this ontology?"], "Taxiom": "defined datatype subClassOf datatype", "CQ": [{"axiom": "defined datatype subClassOf datatype", "CQ": ["Is defined datatype categorized under the broader class of datatype?", "What are the specific subclasses found within datatype, such as defined datatype?", "Which higher-level categories does defined datatype belong to in this ontology?"]}, {"axiom": "defined datatype propertyRestrictions [has_member some defined generator]", "CQ": ["Is it required that any entity with 'propertyRestrictions' must have at least one 'has_member' relationship with a defined generator?", "Does the existence of 'propertyRestrictions' in an entity imply the presence of some member classified as a defined generator?", "Can an instance with 'propertyRestrictions' exist without having any defined generator as a member?"]}, {"axiom": "defined datatype propertyRestrictions [has_member some defined datatype parameter-list]", "CQ": ["Is it required that an instance with defined datatype propertyRestrictions must have at least one has_member relationship to a defined datatype parameter-list?", "Can something be described by defined datatype propertyRestrictions if it does not have any has_member relation to parameter-list?", "Does the existence of defined datatype propertyRestrictions imply the presence of at least one member drawn from parameter-list via has_member?"]}]}
{"ontology": "OntoDT", "class": "tag-type", "axiom": {"subClassOf": ["datatype role"], "propertyRestrictions": ["[role_of some datatype]"]}, "datatype": "Type2", "TCQ": ["Must every tag of type 'propertyRestrictions' necessarily have at least one 'role_of' relationship with some datatype?", "Is it required for instances of propertyRestrictions to be associated, via the 'role_of' property, with one or more datatypes?", "Can a propertyRestrictions tag exist without participating in a 'role_of' connection to any datatype?"], "VCQ": ["Is tag-type categorized under the broader concept of datatype role?", "What kinds of datatype role include tag-type as a specific instance?", "Which general roles encompass tag-type?", "Must every tag of type 'propertyRestrictions' necessarily have at least one 'role_of' relationship with some datatype?", "Is it required for instances of propertyRestrictions to be associated, via the 'role_of' property, with one or more datatypes?", "Can a propertyRestrictions tag exist without participating in a 'role_of' connection to any datatype?"], "Taxiom": "tag-type propertyRestrictions [role_of some datatype]", "CQ": [{"axiom": "tag-type subClassOf datatype role", "CQ": ["Is tag-type categorized under the broader concept of datatype role?", "What kinds of datatype role include tag-type as a specific instance?", "Which general roles encompass tag-type?"]}, {"axiom": "tag-type propertyRestrictions [role_of some datatype]", "CQ": ["Must every tag of type 'propertyRestrictions' necessarily have at least one 'role_of' relationship with some datatype?", "Is it required for instances of propertyRestrictions to be associated, via the 'role_of' property, with one or more datatypes?", "Can a propertyRestrictions tag exist without participating in a 'role_of' connection to any datatype?"]}]}
{"ontology": "OntoDT", "class": "pointer-element-type", "axiom": {"subClassOf": ["datatype role"], "propertyRestrictions": ["[role_of some datatype]"]}, "datatype": "Type2", "TCQ": ["Is pointer-element-type categorized under the broader class of datatype role?", "Which entity types are more specific instances of datatype role, such as pointer-element-type?", "What are the parent classes that pointer-element-type is associated with?"], "VCQ": ["Is every pointer element type required to be related through the 'role_of' property to some datatype?", "Can a pointer element type exist without participating in a 'role_of' relationship with at least one datatype?", "Does the presence of 'role_of' with a datatype define membership in the pointer element type category?", "Is pointer-element-type categorized under the broader class of datatype role?", "Which entity types are more specific instances of datatype role, such as pointer-element-type?", "What are the parent classes that pointer-element-type is associated with?"], "Taxiom": "pointer-element-type subClassOf datatype role", "CQ": [{"axiom": "pointer-element-type subClassOf datatype role", "CQ": ["Is pointer-element-type categorized under the broader class of datatype role?", "Which entity types are more specific instances of datatype role, such as pointer-element-type?", "What are the parent classes that pointer-element-type is associated with?"]}, {"axiom": "pointer-element-type propertyRestrictions [role_of some datatype]", "CQ": ["Is every pointer element type required to be related through the 'role_of' property to some datatype?", "Can a pointer element type exist without participating in a 'role_of' relationship with at least one datatype?", "Does the presence of 'role_of' with a datatype define membership in the pointer element type category?"]}]}
{"ontology": "OntoDT", "class": "base type", "axiom": {"subClassOf": ["datatype role"], "propertyRestrictions": ["[is_member_of some (array datatype or sequence datatype or bag datatype or set datatype or extended datatype)]", "[role_of some datatype]"]}, "datatype": "Type2", "TCQ": ["Is it required that base type always has the property propertyRestrictions with at least one value of role_of?", "Can every instance of base type be associated with propertyRestrictions only if it involves some role_of datatype?", "Does the existence of propertyRestrictions on base type guarantee the involvement of role_of datatype?"], "VCQ": ["Is base type categorized as a subclass under datatype role?", "Which types are encompassed within the datatype role class, including base type?", "What broader datatype role classes does base type fall under?", "Is it required that every base type with property restrictions is a member of at least one of array, sequence, bag, set, or extended datatypes?", "Can a base type propertyRestrictions instance exist that is not associated with any of the array, sequence, bag, set, or extended datatypes?", "Does the membership of base type propertyRestrictions always include at least one datatype from array, sequence, bag, set, or extended?", "Is it required that base type always has the property propertyRestrictions with at least one value of role_of?", "Can every instance of base type be associated with propertyRestrictions only if it involves some role_of datatype?", "Does the existence of propertyRestrictions on base type guarantee the involvement of role_of datatype?"], "Taxiom": "base type propertyRestrictions [role_of some datatype]", "CQ": [{"axiom": "base type subClassOf datatype role", "CQ": ["Is base type categorized as a subclass under datatype role?", "Which types are encompassed within the datatype role class, including base type?", "What broader datatype role classes does base type fall under?"]}, {"axiom": "base type propertyRestrictions [role_of some datatype]", "CQ": ["Is it required that base type always has the property propertyRestrictions with at least one value of role_of?", "Can every instance of base type be associated with propertyRestrictions only if it involves some role_of datatype?", "Does the existence of propertyRestrictions on base type guarantee the involvement of role_of datatype?"]}, {"axiom": "base type propertyRestrictions [is_member_of some (array datatype or sequence datatype or bag datatype or set datatype or extended datatype)]", "CQ": ["Is it required that every base type with property restrictions is a member of at least one of array, sequence, bag, set, or extended datatypes?", "Can a base type propertyRestrictions instance exist that is not associated with any of the array, sequence, bag, set, or extended datatypes?", "Does the membership of base type propertyRestrictions always include at least one datatype from array, sequence, bag, set, or extended?"]}]}
{"ontology": "OntoDT", "class": "boolean field-list", "axiom": {"subClassOf": ["field-list"], "disjointWith": ["discrete field-list"], "propertyRestrictions": ["[has_member some boolean field component]"]}, "datatype": "Type2", "TCQ": ["How does the ontology differentiate boolean field-list from discrete field-list?", "Is there a scenario where a field-list instance can be both boolean and discrete?", "Which field-list types are declared as mutually exclusive with boolean field-list?"], "VCQ": ["Is boolean field-list included as a subtype under field-list?", "What specific variants are classified as field-list, including boolean field-list?", "Which general categories does boolean field-list fall under within the ontology?", "Is every instance of 'field-list' required to have at least one 'has_member' relationship to a 'field component'?", "Could a 'field-list' exist without being associated with any 'field component' through the 'has_member' property?", "Must a 'field-list' always include some entity classified as a 'field component' via the 'has_member' property?", "How does the ontology differentiate boolean field-list from discrete field-list?", "Is there a scenario where a field-list instance can be both boolean and discrete?", "Which field-list types are declared as mutually exclusive with boolean field-list?"], "Taxiom": "boolean field-list disjointWith discrete field-list", "CQ": [{"axiom": "boolean field-list subClassOf field-list", "CQ": ["Is boolean field-list included as a subtype under field-list?", "What specific variants are classified as field-list, including boolean field-list?", "Which general categories does boolean field-list fall under within the ontology?"]}, {"axiom": "boolean field-list disjointWith discrete field-list", "CQ": ["How does the ontology differentiate boolean field-list from discrete field-list?", "Is there a scenario where a field-list instance can be both boolean and discrete?", "Which field-list types are declared as mutually exclusive with boolean field-list?"]}, {"axiom": "boolean field-list propertyRestrictions [has_member some boolean field component]", "CQ": ["Is every instance of 'field-list' required to have at least one 'has_member' relationship to a 'field component'?", "Could a 'field-list' exist without being associated with any 'field component' through the 'has_member' property?", "Must a 'field-list' always include some entity classified as a 'field component' via the 'has_member' property?"]}]}
{"ontology": "OntoDT", "class": "labeled dataset field-list", "axiom": {"subClassOf": ["field-list"], "propertyRestrictions": ["[has_member some labeled dataset target field component]", "[has_member some labeled dataset descriptive field component]"]}, "datatype": "Type2", "TCQ": ["Must every labeled dataset include at least one member that is a labeled dataset descriptive field component?", "Does a labeled dataset necessarily have a 'has_member' relationship with at least one labeled dataset descriptive field component?", "Is it required for every labeled dataset to possess a field that is classified as a labeled dataset descriptive field component?"], "VCQ": ["Is labeled dataset field-list classified under the broader field-list category?", "What specific types are encompassed by field-list, including labeled dataset field-list?", "Which higher-level categories include labeled dataset field-list as a member?", "Is it required for a labeled dataset field-list to have at least one has_member relation to a labeled dataset target field component?", "Can every labeled dataset field-list include members other than labeled dataset target field components?", "Does the property restriction on labeled dataset field-list ensure that its has_member property always relates to at least one labeled dataset target field component?", "Must every labeled dataset include at least one member that is a labeled dataset descriptive field component?", "Does a labeled dataset necessarily have a 'has_member' relationship with at least one labeled dataset descriptive field component?", "Is it required for every labeled dataset to possess a field that is classified as a labeled dataset descriptive field component?"], "Taxiom": "labeled dataset field-list propertyRestrictions [has_member some labeled dataset descriptive field component]", "CQ": [{"axiom": "labeled dataset field-list subClassOf field-list", "CQ": ["Is labeled dataset field-list classified under the broader field-list category?", "What specific types are encompassed by field-list, including labeled dataset field-list?", "Which higher-level categories include labeled dataset field-list as a member?"]}, {"axiom": "labeled dataset field-list propertyRestrictions [has_member some labeled dataset target field component]", "CQ": ["Is it required for a labeled dataset field-list to have at least one has_member relation to a labeled dataset target field component?", "Can every labeled dataset field-list include members other than labeled dataset target field components?", "Does the property restriction on labeled dataset field-list ensure that its has_member property always relates to at least one labeled dataset target field component?"]}, {"axiom": "labeled dataset field-list propertyRestrictions [has_member some labeled dataset descriptive field component]", "CQ": ["Must every labeled dataset include at least one member that is a labeled dataset descriptive field component?", "Does a labeled dataset necessarily have a 'has_member' relationship with at least one labeled dataset descriptive field component?", "Is it required for every labeled dataset to possess a field that is classified as a labeled dataset descriptive field component?"]}]}
{"ontology": "OntoDT", "class": "niladic operation", "axiom": {"subClassOf": ["characterizing operation"], "disjointWith": ["n-adic operation", "monadic operation"]}, "datatype": "Type2", "TCQ": ["How are niladic operations and monadic operations conceptually differentiated within the ontology?", "Is there any operation that can be classified as both niladic and monadic?", "Which operation types are explicitly specified as incompatible with monadic operations?"], "VCQ": ["Is every niladic operation included in the set of characterizing operations?", "Which operations fall under the category of characterizing operation, specifically including niladic operation?", "What broader operation categories does niladic operation belong to within the ontology?", "How are niladic operation and n-adic operation distinguished in the ontology?", "Is any operation classified as both a niladic operation and an n-adic operation?", "Which operation classes are asserted as disjoint with n-adic operation?", "How are niladic operations and monadic operations conceptually differentiated within the ontology?", "Is there any operation that can be classified as both niladic and monadic?", "Which operation types are explicitly specified as incompatible with monadic operations?"], "Taxiom": "niladic operation disjointWith monadic operation", "CQ": [{"axiom": "niladic operation subClassOf characterizing operation", "CQ": ["Is every niladic operation included in the set of characterizing operations?", "Which operations fall under the category of characterizing operation, specifically including niladic operation?", "What broader operation categories does niladic operation belong to within the ontology?"]}, {"axiom": "niladic operation disjointWith monadic operation", "CQ": ["How are niladic operations and monadic operations conceptually differentiated within the ontology?", "Is there any operation that can be classified as both niladic and monadic?", "Which operation types are explicitly specified as incompatible with monadic operations?"]}, {"axiom": "niladic operation disjointWith n-adic operation", "CQ": ["How are niladic operation and n-adic operation distinguished in the ontology?", "Is any operation classified as both a niladic operation and an n-adic operation?", "Which operation classes are asserted as disjoint with n-adic operation?"]}]}
{"ontology": "OntoDT", "class": "discrete-value-list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": ["[has_member some discrete-value identifier]"]}, "datatype": "Type2", "TCQ": ["Is it required that a discrete-value-list always contains at least one member of type discrete-value identifier?", "Can a discrete-value-list exist without having any has_member relationship to a discrete-value identifier?", "Does the presence of a has_member relationship to a discrete-value identifier define the membership criteria for discrete-value-list?"], "VCQ": ["Is discrete-value-list categorized under list specification in the ontology?", "Which types fall under the class of list specification, such as discrete-value-list?", "What broader classifications encompass discrete-value-list within the ontology?", "Is it required that a discrete-value-list always contains at least one member of type discrete-value identifier?", "Can a discrete-value-list exist without having any has_member relationship to a discrete-value identifier?", "Does the presence of a has_member relationship to a discrete-value identifier define the membership criteria for discrete-value-list?"], "Taxiom": "discrete-value-list propertyRestrictions [has_member some discrete-value identifier]", "CQ": [{"axiom": "discrete-value-list subClassOf list specification", "CQ": ["Is discrete-value-list categorized under list specification in the ontology?", "Which types fall under the class of list specification, such as discrete-value-list?", "What broader classifications encompass discrete-value-list within the ontology?"]}, {"axiom": "discrete-value-list propertyRestrictions [has_member some discrete-value identifier]", "CQ": ["Is it required that a discrete-value-list always contains at least one member of type discrete-value identifier?", "Can a discrete-value-list exist without having any has_member relationship to a discrete-value identifier?", "Does the presence of a has_member relationship to a discrete-value identifier define the membership criteria for discrete-value-list?"]}]}
{"ontology": "OntoDT", "class": "defined datatype parameter-list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": ["[has_member some defined datatype parameter]"]}, "datatype": "Type2", "TCQ": ["Is it required for a parameter-list to have at least one has_member relationship with a defined datatype parameter?", "Can a parameter-list exist without including any defined datatype parameter as a member?", "Does every instance of parameter-list necessarily possess a has_member link with some defined datatype parameter?"], "VCQ": ["Does defined datatype parameter-list fall under the broader classification of list specification?", "Which types are categorized as list specification, specifically including defined datatype parameter-list?", "What higher-level classes encompass defined datatype parameter-list in the ontology?", "Is it required for a parameter-list to have at least one has_member relationship with a defined datatype parameter?", "Can a parameter-list exist without including any defined datatype parameter as a member?", "Does every instance of parameter-list necessarily possess a has_member link with some defined datatype parameter?"], "Taxiom": "defined datatype parameter-list propertyRestrictions [has_member some defined datatype parameter]", "CQ": [{"axiom": "defined datatype parameter-list subClassOf list specification", "CQ": ["Does defined datatype parameter-list fall under the broader classification of list specification?", "Which types are categorized as list specification, specifically including defined datatype parameter-list?", "What higher-level classes encompass defined datatype parameter-list in the ontology?"]}, {"axiom": "defined datatype parameter-list propertyRestrictions [has_member some defined datatype parameter]", "CQ": ["Is it required for a parameter-list to have at least one has_member relationship with a defined datatype parameter?", "Can a parameter-list exist without including any defined datatype parameter as a member?", "Does every instance of parameter-list necessarily possess a has_member link with some defined datatype parameter?"]}]}
{"ontology": "OntoDT", "class": "index-type list", "axiom": {"subClassOf": ["list specification"], "propertyRestrictions": ["[has_member some index-type]"]}, "datatype": "Type2", "TCQ": ["Must an index-type list always include at least one member that is an index-type?", "Can an index-type list be valid if it does not have any member of type index-type?", "Is every index-type list required to have the has_member property relating it to an index-type individual?"], "VCQ": ["Does an index-type list fall under the general classification of list specification?", "Which list types are explicitly defined as subclasses of list specification, including index-type list?", "To what broader specifications does index-type list belong within the list ontology?", "Must an index-type list always include at least one member that is an index-type?", "Can an index-type list be valid if it does not have any member of type index-type?", "Is every index-type list required to have the has_member property relating it to an index-type individual?"], "Taxiom": "index-type list propertyRestrictions [has_member some index-type]", "CQ": [{"axiom": "index-type list subClassOf list specification", "CQ": ["Does an index-type list fall under the general classification of list specification?", "Which list types are explicitly defined as subclasses of list specification, including index-type list?", "To what broader specifications does index-type list belong within the list ontology?"]}, {"axiom": "index-type list propertyRestrictions [has_member some index-type]", "CQ": ["Must an index-type list always include at least one member that is an index-type?", "Can an index-type list be valid if it does not have any member of type index-type?", "Is every index-type list required to have the has_member property relating it to an index-type individual?"]}]}
{"ontology": "OntoDT", "class": "tree datatype generator", "axiom": {"subClassOf": ["directed labeled graph datatype generator"], "disjointWith": ["DAG datatype generator"]}, "datatype": "Type2", "TCQ": ["What is the ontological distinction between tree datatype generators and DAG datatype generators?", "Is there any entity categorized under both tree datatype generator and DAG datatype generator?", "Which classes are declared as disjoint with DAG datatype generator in the ontology?"], "VCQ": ["Is tree datatype generator categorized under directed labeled graph datatype generator?", "Which specific datatype generators are classified as subtypes of directed labeled graph datatype generator?", "Within which broader datatype generator types does tree datatype generator fit?", "What is the ontological distinction between tree datatype generators and DAG datatype generators?", "Is there any entity categorized under both tree datatype generator and DAG datatype generator?", "Which classes are declared as disjoint with DAG datatype generator in the ontology?"], "Taxiom": "tree datatype generator disjointWith DAG datatype generator", "CQ": [{"axiom": "tree datatype generator subClassOf directed labeled graph datatype generator", "CQ": ["Is tree datatype generator categorized under directed labeled graph datatype generator?", "Which specific datatype generators are classified as subtypes of directed labeled graph datatype generator?", "Within which broader datatype generator types does tree datatype generator fit?"]}, {"axiom": "tree datatype generator disjointWith DAG datatype generator", "CQ": ["What is the ontological distinction between tree datatype generators and DAG datatype generators?", "Is there any entity categorized under both tree datatype generator and DAG datatype generator?", "Which classes are declared as disjoint with DAG datatype generator in the ontology?"]}]}
{"ontology": "OntoDT", "class": "scaled datatype", "axiom": {"subClassOf": ["numeric ordered primitive datatype"], "disjointWith": ["integer datatype", "rational datatype"], "propertyRestrictions": ["[has_quality some unbounded]", "[has_operation some Divide:scaled]", "[has_operation some InOrder:scaled]", "[has_operation some Multiply:scaled]", "[has_member some scaled radix]", "[has_quality some exact]", "[has_operation some Negate:scaled]", "[has_operation some Round:scaled]", "[has_operation some Add:scaled]", "[has_member some scaled factor]", "[has_operation some Equal:scaled]"]}, "datatype": "Type2", "TCQ": ["What ontological distinction is specified between scaled datatypes and rational datatypes?", "Is any datatype instance allowed to be classified as both scaled and rational?", "Which datatypes are specified as mutually exclusive with rational datatypes in the ontology?"], "VCQ": ["Does scaled datatype belong to the broader class of numeric ordered primitive datatypes?", "Which datatypes are specializations of numeric ordered primitive datatype, such as scaled datatype?", "What superordinate datatype categories does scaled datatype fit under?", "What is the ontological separation between scaled datatypes and integer datatypes?", "Can a datatype be classified simultaneously as both a scaled datatype and an integer datatype?", "Which datatype classes are defined as mutually exclusive with integer datatypes?", "Is it required that every scaled datatype possesses at least one 'has_quality' relationship to an unbounded value?", "Can a scaled datatype exist without having the 'has_quality' property linking to something that is unbounded?", "Does the axiom entail that the property 'has_quality' on scaled datatypes must reference at least one entity that is unbounded?", "Is every instance in the relevant class required to participate in at least one 'has_operation' relationship with an entity of type Divide:scaled?", "Does the ontology specify that having a 'has_operation' relation with Divide:scaled is mandatory for the defined concept?", "Can an individual lacking any 'has_operation' linkage to Divide:scaled still be considered a valid member of the target class?", "Is it required that every instance within 'scaled' has at least one 'has_operation' relationship to an instance of 'InOrder:scaled'?", "Does the 'scaled' class necessarily involve performing an operation classified as 'InOrder:scaled'?", "For an entity to be categorized under 'scaled', must it exhibit the 'has_operation' property with a value from the 'InOrder:scaled' class?", "Is every instance associated with 'scaled' required to have at least one 'has_operation' relation to a 'Multiply:scaled' entity?", "Can an instance that lacks any 'has_operation' link to 'Multiply:scaled' still be classified as 'scaled'?", "Does the scope of 'scaled' entail that it must participate in some 'has_operation' relationship with 'Multiply:scaled'?", "Is it necessary for an entity with scaled datatype property restrictions to have at least one member related by 'has_member' to a scaled radix?", "Does the restriction imply that all instances must possess the property 'has_member' linked to some scaled radix value?", "Can an individual lacking a 'has_member' relationship to any scaled radix be considered compliant with the scaled datatype property restrictions?", "Is it required that entities with a scaled datatype have at least one 'has_quality' relationship to 'exact'?", "Can a scaled datatype exist without possessing the 'has_quality' property with value 'exact'?", "Do all instances of scaled datatype necessarily exhibit the quality specified as 'exact'?", "Must every instance of propertyRestrictions have at least one has_operation relationship to a Negate operation of type scaled?", "Is it required that propertyRestrictions are associated with some has_operation involving Negate applied to scaled entities?", "Can an instance of propertyRestrictions exist without participating in a has_operation with a Negate:scaled element?", "Is it required that every scaled entity must participate in at least one 'has_operation' relationship with an individual from the class Round:scaled?", "Does a scaled entity always have some operation that is associated with an instance of Round:scaled?", "Must there exist a 'has_operation' link from every instance of scaled to something in Round:scaled?", "Is it required that every instance with propertyRestrictions must have the 'has_operation' property relating to at least one Add:scaled entity?", "Are all entities described by propertyRestrictions ensured to participate in a 'has_operation' relationship with a member of Add:scaled?", "Does the ontology necessitate that propertyRestrictions only apply if there is a connection via 'has_operation' to an Add:scaled element?", "Must every instance with a scaled datatype property involve at least one member related by the scaled factor?", "Is it required that entities possessing the scaled property have some association to a member through the scaled factor?", "Is the existence of a member connected by the scaled factor a necessary condition for the scaled property to apply?", "Is it necessary for an entity with property restriction to have at least one 'has_operation' relationship to an instance of 'Equal:scaled'?", "Does every instance in the propertyRestrictions class require a 'has_operation' link to something classified as 'Equal:scaled'?", "Can a member of propertyRestrictions exist without any 'has_operation' relation to 'Equal:scaled'?", "What ontological distinction is specified between scaled datatypes and rational datatypes?", "Is any datatype instance allowed to be classified as both scaled and rational?", "Which datatypes are specified as mutually exclusive with rational datatypes in the ontology?"], "Taxiom": "scaled datatype disjointWith rational datatype", "CQ": [{"axiom": "scaled datatype subClassOf numeric ordered primitive datatype", "CQ": ["Does scaled datatype belong to the broader class of numeric ordered primitive datatypes?", "Which datatypes are specializations of numeric ordered primitive datatype, such as scaled datatype?", "What superordinate datatype categories does scaled datatype fit under?"]}, {"axiom": "scaled datatype disjointWith integer datatype", "CQ": ["What is the ontological separation between scaled datatypes and integer datatypes?", "Can a datatype be classified simultaneously as both a scaled datatype and an integer datatype?", "Which datatype classes are defined as mutually exclusive with integer datatypes?"]}, {"axiom": "scaled datatype disjointWith rational datatype", "CQ": ["What ontological distinction is specified between scaled datatypes and rational datatypes?", "Is any datatype instance allowed to be classified as both scaled and rational?", "Which datatypes are specified as mutually exclusive with rational datatypes in the ontology?"]}, {"axiom": "scaled datatype propertyRestrictions [has_quality some unbounded]", "CQ": ["Is it required that every scaled datatype possesses at least one 'has_quality' relationship to an unbounded value?", "Can a scaled datatype exist without having the 'has_quality' property linking to something that is unbounded?", "Does the axiom entail that the property 'has_quality' on scaled datatypes must reference at least one entity that is unbounded?"]}, {"axiom": "scaled datatype propertyRestrictions [has_operation some Divide:scaled]", "CQ": ["Is every instance in the relevant class required to participate in at least one 'has_operation' relationship with an entity of type Divide:scaled?", "Does the ontology specify that having a 'has_operation' relation with Divide:scaled is mandatory for the defined concept?", "Can an individual lacking any 'has_operation' linkage to Divide:scaled still be considered a valid member of the target class?"]}, {"axiom": "scaled datatype propertyRestrictions [has_operation some InOrder:scaled]", "CQ": ["Is it required that every instance within 'scaled' has at least one 'has_operation' relationship to an instance of 'InOrder:scaled'?", "Does the 'scaled' class necessarily involve performing an operation classified as 'InOrder:scaled'?", "For an entity to be categorized under 'scaled', must it exhibit the 'has_operation' property with a value from the 'InOrder:scaled' class?"]}, {"axiom": "scaled datatype propertyRestrictions [has_operation some Multiply:scaled]", "CQ": ["Is every instance associated with 'scaled' required to have at least one 'has_operation' relation to a 'Multiply:scaled' entity?", "Can an instance that lacks any 'has_operation' link to 'Multiply:scaled' still be classified as 'scaled'?", "Does the scope of 'scaled' entail that it must participate in some 'has_operation' relationship with 'Multiply:scaled'?"]}, {"axiom": "scaled datatype propertyRestrictions [has_member some scaled radix]", "CQ": ["Is it necessary for an entity with scaled datatype property restrictions to have at least one member related by 'has_member' to a scaled radix?", "Does the restriction imply that all instances must possess the property 'has_member' linked to some scaled radix value?", "Can an individual lacking a 'has_member' relationship to any scaled radix be considered compliant with the scaled datatype property restrictions?"]}, {"axiom": "scaled datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it required that entities with a scaled datatype have at least one 'has_quality' relationship to 'exact'?", "Can a scaled datatype exist without possessing the 'has_quality' property with value 'exact'?", "Do all instances of scaled datatype necessarily exhibit the quality specified as 'exact'?"]}, {"axiom": "scaled datatype propertyRestrictions [has_operation some Negate:scaled]", "CQ": ["Must every instance of propertyRestrictions have at least one has_operation relationship to a Negate operation of type scaled?", "Is it required that propertyRestrictions are associated with some has_operation involving Negate applied to scaled entities?", "Can an instance of propertyRestrictions exist without participating in a has_operation with a Negate:scaled element?"]}, {"axiom": "scaled datatype propertyRestrictions [has_operation some Round:scaled]", "CQ": ["Is it required that every scaled entity must participate in at least one 'has_operation' relationship with an individual from the class Round:scaled?", "Does a scaled entity always have some operation that is associated with an instance of Round:scaled?", "Must there exist a 'has_operation' link from every instance of scaled to something in Round:scaled?"]}, {"axiom": "scaled datatype propertyRestrictions [has_operation some Add:scaled]", "CQ": ["Is it required that every instance with propertyRestrictions must have the 'has_operation' property relating to at least one Add:scaled entity?", "Are all entities described by propertyRestrictions ensured to participate in a 'has_operation' relationship with a member of Add:scaled?", "Does the ontology necessitate that propertyRestrictions only apply if there is a connection via 'has_operation' to an Add:scaled element?"]}, {"axiom": "scaled datatype propertyRestrictions [has_member some scaled factor]", "CQ": ["Must every instance with a scaled datatype property involve at least one member related by the scaled factor?", "Is it required that entities possessing the scaled property have some association to a member through the scaled factor?", "Is the existence of a member connected by the scaled factor a necessary condition for the scaled property to apply?"]}, {"axiom": "scaled datatype propertyRestrictions [has_operation some Equal:scaled]", "CQ": ["Is it necessary for an entity with property restriction to have at least one 'has_operation' relationship to an instance of 'Equal:scaled'?", "Does every instance in the propertyRestrictions class require a 'has_operation' link to something classified as 'Equal:scaled'?", "Can a member of propertyRestrictions exist without any 'has_operation' relation to 'Equal:scaled'?"]}]}
{"ontology": "OntoDT", "class": "rational datatype", "axiom": {"subClassOf": ["numeric ordered primitive datatype"], "propertyRestrictions": ["[has_operation some Multiply:rational]", "[has_operation some Reciprocal:rational]", "[has_quality some numeric]", "[has_operation some NonNegative:rational]", "[has_quality some ordered]", "[has_operation some Promote:rational]", "[has_operation some Equal:rational]", "[has_operation some Add:rational]", "[has_operation some Negate:rational]", "[has_quality some exact]", "[has_operation some InOrder:rational]", "[has_quality some unbounded]"]}, "datatype": "Type2", "TCQ": ["Is every instance with the rational datatype required to possess at least one quality via the 'has_quality' property?", "Can an entity of rational datatype have the 'has_quality' attribute associated with any type of quality without restriction?", "Does the rational datatype necessarily exhibit the existence of some related quality as described by the 'has_quality' property?"], "VCQ": ["Is rational datatype conceptually classified as a kind of numeric ordered primitive datatype?", "Which datatype categories include rational datatype as a more specific instance?", "What broader datatype categories encompass rational datatype?", "Must an instance of rational datatype necessarily possess at least one 'has_operation' relationship to Multiply:rational?", "Are all instances of rational datatype required to have a 'has_operation' link with an entity classified as Multiply:rational?", "Does the rational datatype always involve a connection through the 'has_operation' property to something of type Multiply:rational?", "Must every instance of \"datatype propertyRestrictions\" have at least one \"has_operation\" relationship with a \"Reciprocal:rational\"?", "Is it required that \"datatype propertyRestrictions\" entities possess the \"has_operation\" property linking them to a \"Reciprocal:rational\" instance?", "Can an individual classified as \"datatype propertyRestrictions\" exist without being associated via \"has_operation\" to \"Reciprocal:rational\"?", "Is every instance of rational required to have at least one 'has_quality' relation to a numeric value?", "Can a rational exist without being related by 'has_quality' to any numeric value?", "Does the ontology ensure that rational individuals possess some quality quantified by a numeric type?", "Is it required that every instance with a rational datatype propertyRestriction must have at least one 'has_operation' relation to a NonNegative rational value?", "Can a rational datatype propertyRestriction exist without a 'has_operation' link to a NonNegative rational value?", "Does the definition of rational datatype propertyRestrictions permit values of 'has_operation' that are not NonNegative rationals?", "Does every rational entity necessarily have at least one quality that is ordered?", "Can a rational entity exist without the property 'has_quality' relating it to at least one ordered item?", "Is it required that rational entities be associated exclusively with qualities that are ordered?", "Is it required that a rational datatype entity must participate in at least one 'has_operation' relationship with a Promote:rational instance?", "Does every rational datatype object have some association through 'has_operation' to an individual classified as Promote:rational?", "Can a rational datatype entity exist without having 'has_operation' linked to at least one Promote:rational?", "Must every instance of rational have at least one has_operation relationship to an entity of type Equal:rational?", "Is it required that rational entities participate in some operation classified as Equal:rational?", "Does the existence of rational depend on the presence of a has_operation link to Equal:rational?", "Is it necessary for a rational datatype property restriction to involve at least one 'has_operation' relationship with 'Add:rational'?", "Does a rational datatype property restriction always include the 'has_operation' property linked to 'Add:rational'?", "Can a rational datatype property restriction exist without participating in 'has_operation' with 'Add:rational'?", "Is every instance with a 'rational' datatype required to have at least one 'has_operation' relation to a 'Negate:rational' operation?", "Can a rational value exist without participating in any 'has_operation' with 'Negate:rational'?", "Does the ontology guarantee that the 'has_operation' property for 'rational' types always relates to a 'Negate:rational' operation?", "Is it necessary for a rational datatype entity to possess the 'has_quality' property with some value classified as 'exact'?", "Can a rational datatype exist without having at least one 'has_quality' relationship to 'exact'?", "Does the definition of rational datatype require that every instance has at least one associated 'exact' quality via the 'has_quality' property?", "Is it required that rational datatype propertyRestrictions always involves at least one has_operation relation to an InOrder:rational?", "Can rational datatype propertyRestrictions exist without having any has_operation relationship to InOrder:rational?", "Does the presence of rational datatype propertyRestrictions guarantee the involvement of has_operation with some instance of InOrder:rational?", "Is every instance with the rational datatype required to possess at least one quality via the 'has_quality' property?", "Can an entity of rational datatype have the 'has_quality' attribute associated with any type of quality without restriction?", "Does the rational datatype necessarily exhibit the existence of some related quality as described by the 'has_quality' property?"], "Taxiom": "rational datatype propertyRestrictions [has_quality some unbounded]", "CQ": [{"axiom": "rational datatype subClassOf numeric ordered primitive datatype", "CQ": ["Is rational datatype conceptually classified as a kind of numeric ordered primitive datatype?", "Which datatype categories include rational datatype as a more specific instance?", "What broader datatype categories encompass rational datatype?"]}, {"axiom": "rational datatype propertyRestrictions [has_operation some Multiply:rational]", "CQ": ["Must an instance of rational datatype necessarily possess at least one 'has_operation' relationship to Multiply:rational?", "Are all instances of rational datatype required to have a 'has_operation' link with an entity classified as Multiply:rational?", "Does the rational datatype always involve a connection through the 'has_operation' property to something of type Multiply:rational?"]}, {"axiom": "rational datatype propertyRestrictions [has_operation some Reciprocal:rational]", "CQ": ["Must every instance of \"datatype propertyRestrictions\" have at least one \"has_operation\" relationship with a \"Reciprocal:rational\"?", "Is it required that \"datatype propertyRestrictions\" entities possess the \"has_operation\" property linking them to a \"Reciprocal:rational\" instance?", "Can an individual classified as \"datatype propertyRestrictions\" exist without being associated via \"has_operation\" to \"Reciprocal:rational\"?"]}, {"axiom": "rational datatype propertyRestrictions [has_quality some numeric]", "CQ": ["Is every instance of rational required to have at least one 'has_quality' relation to a numeric value?", "Can a rational exist without being related by 'has_quality' to any numeric value?", "Does the ontology ensure that rational individuals possess some quality quantified by a numeric type?"]}, {"axiom": "rational datatype propertyRestrictions [has_operation some NonNegative:rational]", "CQ": ["Is it required that every instance with a rational datatype propertyRestriction must have at least one 'has_operation' relation to a NonNegative rational value?", "Can a rational datatype propertyRestriction exist without a 'has_operation' link to a NonNegative rational value?", "Does the definition of rational datatype propertyRestrictions permit values of 'has_operation' that are not NonNegative rationals?"]}, {"axiom": "rational datatype propertyRestrictions [has_quality some ordered]", "CQ": ["Does every rational entity necessarily have at least one quality that is ordered?", "Can a rational entity exist without the property 'has_quality' relating it to at least one ordered item?", "Is it required that rational entities be associated exclusively with qualities that are ordered?"]}, {"axiom": "rational datatype propertyRestrictions [has_operation some Promote:rational]", "CQ": ["Is it required that a rational datatype entity must participate in at least one 'has_operation' relationship with a Promote:rational instance?", "Does every rational datatype object have some association through 'has_operation' to an individual classified as Promote:rational?", "Can a rational datatype entity exist without having 'has_operation' linked to at least one Promote:rational?"]}, {"axiom": "rational datatype propertyRestrictions [has_operation some Equal:rational]", "CQ": ["Must every instance of rational have at least one has_operation relationship to an entity of type Equal:rational?", "Is it required that rational entities participate in some operation classified as Equal:rational?", "Does the existence of rational depend on the presence of a has_operation link to Equal:rational?"]}, {"axiom": "rational datatype propertyRestrictions [has_operation some Add:rational]", "CQ": ["Is it necessary for a rational datatype property restriction to involve at least one 'has_operation' relationship with 'Add:rational'?", "Does a rational datatype property restriction always include the 'has_operation' property linked to 'Add:rational'?", "Can a rational datatype property restriction exist without participating in 'has_operation' with 'Add:rational'?"]}, {"axiom": "rational datatype propertyRestrictions [has_operation some Negate:rational]", "CQ": ["Is every instance with a 'rational' datatype required to have at least one 'has_operation' relation to a 'Negate:rational' operation?", "Can a rational value exist without participating in any 'has_operation' with 'Negate:rational'?", "Does the ontology guarantee that the 'has_operation' property for 'rational' types always relates to a 'Negate:rational' operation?"]}, {"axiom": "rational datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it necessary for a rational datatype entity to possess the 'has_quality' property with some value classified as 'exact'?", "Can a rational datatype exist without having at least one 'has_quality' relationship to 'exact'?", "Does the definition of rational datatype require that every instance has at least one associated 'exact' quality via the 'has_quality' property?"]}, {"axiom": "rational datatype propertyRestrictions [has_operation some InOrder:rational]", "CQ": ["Is it required that rational datatype propertyRestrictions always involves at least one has_operation relation to an InOrder:rational?", "Can rational datatype propertyRestrictions exist without having any has_operation relationship to InOrder:rational?", "Does the presence of rational datatype propertyRestrictions guarantee the involvement of has_operation with some instance of InOrder:rational?"]}, {"axiom": "rational datatype propertyRestrictions [has_quality some unbounded]", "CQ": ["Is every instance with the rational datatype required to possess at least one quality via the 'has_quality' property?", "Can an entity of rational datatype have the 'has_quality' attribute associated with any type of quality without restriction?", "Does the rational datatype necessarily exhibit the existence of some related quality as described by the 'has_quality' property?"]}]}
{"ontology": "OntoDT", "class": "exactness", "axiom": {"subClassOf": ["datatype property"], "disjointWith": ["numericalness", "cardinality", "boundedness", "equality", "order"], "equivalentClass": ["(approximate or exact)"]}, "datatype": "Type2", "TCQ": ["How are the concepts of exactness and order separated within the ontology?", "Is there any entity that can be simultaneously classified as exactness and order?", "Which classes are specified as incompatible with order in the ontology?"], "VCQ": ["What properties are more specific than datatype property, such as exactness?", "Does exactness belong to the category of datatype property?", "Which general property types include exactness as a member?", "How does the ontology distinguish between exactness and numericalness?", "Is any entity permitted to possess both exactness and numericalness characteristics simultaneously?", "Which classes, besides numericalness, are specified as disjoint with exactness?", "What logical separation is asserted between exactness and cardinality within the ontology?", "Is there any entity that can simultaneously be classified as both exactness and cardinality?", "Which concepts are specified as mutually exclusive with cardinality?", "How does the ontology differentiate between exactness and boundedness?", "Can an entity possess both exactness and boundedness simultaneously?", "Which classes in the ontology are declared disjoint with boundedness?", "How does the ontology characterize the separation between exactness and equality?", "Is any entity permitted to possess both exactness and equality properties simultaneously?", "What other classes or properties are specified as disjoint with exactness?", "Is exactness defined by the union of approximate and exact categories?", "Is every instance of exactness necessarily classified as either approximate or exact?", "Are there any examples of exactness that do not fall under approximate or exact?", "How are the concepts of exactness and order separated within the ontology?", "Is there any entity that can be simultaneously classified as exactness and order?", "Which classes are specified as incompatible with order in the ontology?"], "Taxiom": "exactness disjointWith order", "CQ": [{"axiom": "exactness subClassOf datatype property", "CQ": ["What properties are more specific than datatype property, such as exactness?", "Does exactness belong to the category of datatype property?", "Which general property types include exactness as a member?"]}, {"axiom": "exactness disjointWith numericalness", "CQ": ["How does the ontology distinguish between exactness and numericalness?", "Is any entity permitted to possess both exactness and numericalness characteristics simultaneously?", "Which classes, besides numericalness, are specified as disjoint with exactness?"]}, {"axiom": "exactness disjointWith cardinality", "CQ": ["What logical separation is asserted between exactness and cardinality within the ontology?", "Is there any entity that can simultaneously be classified as both exactness and cardinality?", "Which concepts are specified as mutually exclusive with cardinality?"]}, {"axiom": "exactness disjointWith order", "CQ": ["How are the concepts of exactness and order separated within the ontology?", "Is there any entity that can be simultaneously classified as exactness and order?", "Which classes are specified as incompatible with order in the ontology?"]}, {"axiom": "exactness disjointWith boundedness", "CQ": ["How does the ontology differentiate between exactness and boundedness?", "Can an entity possess both exactness and boundedness simultaneously?", "Which classes in the ontology are declared disjoint with boundedness?"]}, {"axiom": "exactness disjointWith equality", "CQ": ["How does the ontology characterize the separation between exactness and equality?", "Is any entity permitted to possess both exactness and equality properties simultaneously?", "What other classes or properties are specified as disjoint with exactness?"]}, {"axiom": "exactness equivalentClass (approximate or exact)", "CQ": ["Is exactness defined by the union of approximate and exact categories?", "Is every instance of exactness necessarily classified as either approximate or exact?", "Are there any examples of exactness that do not fall under approximate or exact?"]}]}
{"ontology": "OntoDT", "class": "order", "axiom": {"subClassOf": ["datatype property"], "disjointWith": ["boundedness", "equality"], "equivalentClass": ["(ordered or non-ordered)"]}, "datatype": "Type2", "TCQ": ["How does the ontology formally differentiate order from equality?", "Is it allowable for a concept to be simultaneously classified under both order and equality categories?", "Which other mathematical properties are specified as disjoint with equality?"], "VCQ": ["Is order classified as a datatype property in the ontology?", "Which datatype properties have order as a more specific subtype?", "What are the immediate superclasses of the property order?", "What logical constraint separates order from boundedness within the ontology?", "Is any entity allowed to belong to both order and boundedness categories simultaneously?", "Which other concepts are formally specified as disjoint with boundedness?", "Is order defined as the union of ordered and non-ordered?", "Is every instance of order necessarily an ordered instance or a non-ordered instance?", "Are there any orders that do not belong to either the ordered or non-ordered categories?", "How does the ontology formally differentiate order from equality?", "Is it allowable for a concept to be simultaneously classified under both order and equality categories?", "Which other mathematical properties are specified as disjoint with equality?"], "Taxiom": "order disjointWith equality", "CQ": [{"axiom": "order subClassOf datatype property", "CQ": ["Is order classified as a datatype property in the ontology?", "Which datatype properties have order as a more specific subtype?", "What are the immediate superclasses of the property order?"]}, {"axiom": "order disjointWith boundedness", "CQ": ["What logical constraint separates order from boundedness within the ontology?", "Is any entity allowed to belong to both order and boundedness categories simultaneously?", "Which other concepts are formally specified as disjoint with boundedness?"]}, {"axiom": "order disjointWith equality", "CQ": ["How does the ontology formally differentiate order from equality?", "Is it allowable for a concept to be simultaneously classified under both order and equality categories?", "Which other mathematical properties are specified as disjoint with equality?"]}, {"axiom": "order equivalentClass (ordered or non-ordered)", "CQ": ["Is order defined as the union of ordered and non-ordered?", "Is every instance of order necessarily an ordered instance or a non-ordered instance?", "Are there any orders that do not belong to either the ordered or non-ordered categories?"]}]}
{"ontology": "OntoDT", "class": "discrete field component", "axiom": {"subClassOf": ["primitive field component"], "disjointWith": ["boolean field component", "real field component"], "propertyRestrictions": ["[role_of some discrete datatype]"]}, "datatype": "Type2", "TCQ": ["Are any entities defined as both discrete field components and real field components?", "Which ontology classes are explicitly incompatible with real field components?", "What type of exclusivity exists between discrete field components and real field components?"], "VCQ": ["Is discrete field component classified as a type of primitive field component?", "Which components fall under the category of primitive field component, specifically those more specific like discrete field component?", "What broader categories encompass discrete field component within their taxonomy?", "How does the ontology express the separation between discrete field components and boolean field components?", "Is any field component allowed to be both a discrete field component and a boolean field component?", "Which classes are identified as mutually exclusive to discrete field components?", "Must every discrete field component necessarily play the role of some discrete datatype?", "Is it required for a discrete field component to be related via 'role_of' to at least one discrete datatype?", "Does the definition ensure that discrete field component is linked by 'role_of' to at least one entity classified as a discrete datatype?", "Are any entities defined as both discrete field components and real field components?", "Which ontology classes are explicitly incompatible with real field components?", "What type of exclusivity exists between discrete field components and real field components?"], "Taxiom": "discrete field component disjointWith real field component", "CQ": [{"axiom": "discrete field component subClassOf primitive field component", "CQ": ["Is discrete field component classified as a type of primitive field component?", "Which components fall under the category of primitive field component, specifically those more specific like discrete field component?", "What broader categories encompass discrete field component within their taxonomy?"]}, {"axiom": "discrete field component disjointWith real field component", "CQ": ["Are any entities defined as both discrete field components and real field components?", "Which ontology classes are explicitly incompatible with real field components?", "What type of exclusivity exists between discrete field components and real field components?"]}, {"axiom": "discrete field component disjointWith boolean field component", "CQ": ["How does the ontology express the separation between discrete field components and boolean field components?", "Is any field component allowed to be both a discrete field component and a boolean field component?", "Which classes are identified as mutually exclusive to discrete field components?"]}, {"axiom": "discrete field component propertyRestrictions [role_of some discrete datatype]", "CQ": ["Must every discrete field component necessarily play the role of some discrete datatype?", "Is it required for a discrete field component to be related via 'role_of' to at least one discrete datatype?", "Does the definition ensure that discrete field component is linked by 'role_of' to at least one entity classified as a discrete datatype?"]}]}
{"ontology": "OntoDT", "class": "pointer datatype", "axiom": {"subClassOf": ["non-aggregate datatype"], "propertyRestrictions": ["[has_quality some non-ordered]", "[has_quality some non-numeric]", "[has_member some pointer generator]", "[has_member some pointer-element-type]", "[has_operation some Equal:pointer]", "[has_operation some Dereference:pointer]", "[has_quality some exact]"]}, "datatype": "Type2", "TCQ": ["Is pointer datatype encompassed by the category of non-aggregate datatype?", "Which datatypes are classified as more specific types under non-aggregate datatype, including pointer datatype?", "To what broader datatype categories does pointer datatype belong?"], "VCQ": ["Is it necessary for a pointer to possess the 'has_quality' property with some value from the class 'non-ordered'?", "Does every pointer necessarily have at least one 'has_quality' relationship to a 'non-ordered' entity?", "Are there any pointers that do not have 'has_quality' related to 'non-ordered'?", "Is every pointer required to have at least one quality that is non-numeric?", "Can a pointer exist without possessing a non-numeric quality via the has_quality property?", "Does the ontology specify that pointers must be associated with some non-numeric quality through has_quality?", "Is every pointer required to have at least one member that is a pointer generator?", "Does the existence of a pointer imply the existence of a has_member relationship with a pointer generator?", "Can any pointer exist without having a member of type pointer generator?", "Is it necessary for pointer to have at least one has_member relationship with a pointer-element-type?", "Can a pointer exist without referencing any element of pointer-element-type through has_member?", "Does every pointer require some association, via has_member, to a value classified as pointer-element-type?", "Is every instance of pointer required to have at least one has_operation relationship with an individual of type Equal:pointer?", "Must a pointer necessarily be associated with an Equal:pointer entity through the has_operation property?", "Can a pointer exist without having has_operation linked to any Equal:pointer?", "Is it required that every pointer is associated via 'has_operation' with at least one Dereference:pointer operation?", "Can a pointer exist without having any 'has_operation' relationship to a Dereference:pointer?", "Does the presence of a Dereference:pointer operation fulfill the property restriction imposed on the 'has_operation' relationship for pointers?", "Is it required that a pointer possess the 'has_quality' property with at least one instance of 'exact'?", "Can any pointer be without a 'has_quality' relation to 'exact'?", "Is every pointer necessarily associated with an 'exact' value via the 'has_quality' property?", "Is pointer datatype encompassed by the category of non-aggregate datatype?", "Which datatypes are classified as more specific types under non-aggregate datatype, including pointer datatype?", "To what broader datatype categories does pointer datatype belong?"], "Taxiom": "pointer datatype subClassOf non-aggregate datatype", "CQ": [{"axiom": "pointer datatype subClassOf non-aggregate datatype", "CQ": ["Is pointer datatype encompassed by the category of non-aggregate datatype?", "Which datatypes are classified as more specific types under non-aggregate datatype, including pointer datatype?", "To what broader datatype categories does pointer datatype belong?"]}, {"axiom": "pointer datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is it necessary for a pointer to possess the 'has_quality' property with some value from the class 'non-ordered'?", "Does every pointer necessarily have at least one 'has_quality' relationship to a 'non-ordered' entity?", "Are there any pointers that do not have 'has_quality' related to 'non-ordered'?"]}, {"axiom": "pointer datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Is every pointer required to have at least one quality that is non-numeric?", "Can a pointer exist without possessing a non-numeric quality via the has_quality property?", "Does the ontology specify that pointers must be associated with some non-numeric quality through has_quality?"]}, {"axiom": "pointer datatype propertyRestrictions [has_member some pointer generator]", "CQ": ["Is every pointer required to have at least one member that is a pointer generator?", "Does the existence of a pointer imply the existence of a has_member relationship with a pointer generator?", "Can any pointer exist without having a member of type pointer generator?"]}, {"axiom": "pointer datatype propertyRestrictions [has_member some pointer-element-type]", "CQ": ["Is it necessary for pointer to have at least one has_member relationship with a pointer-element-type?", "Can a pointer exist without referencing any element of pointer-element-type through has_member?", "Does every pointer require some association, via has_member, to a value classified as pointer-element-type?"]}, {"axiom": "pointer datatype propertyRestrictions [has_operation some Equal:pointer]", "CQ": ["Is every instance of pointer required to have at least one has_operation relationship with an individual of type Equal:pointer?", "Must a pointer necessarily be associated with an Equal:pointer entity through the has_operation property?", "Can a pointer exist without having has_operation linked to any Equal:pointer?"]}, {"axiom": "pointer datatype propertyRestrictions [has_operation some Dereference:pointer]", "CQ": ["Is it required that every pointer is associated via 'has_operation' with at least one Dereference:pointer operation?", "Can a pointer exist without having any 'has_operation' relationship to a Dereference:pointer?", "Does the presence of a Dereference:pointer operation fulfill the property restriction imposed on the 'has_operation' relationship for pointers?"]}, {"axiom": "pointer datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it required that a pointer possess the 'has_quality' property with at least one instance of 'exact'?", "Can any pointer be without a 'has_quality' relation to 'exact'?", "Is every pointer necessarily associated with an 'exact' value via the 'has_quality' property?"]}]}
{"ontology": "OntoDT", "class": "tree datatype", "axiom": {"subClassOf": ["labeled graph datatype"], "disjointWith": ["DAG datatype"], "propertyRestrictions": ["[has_member some tree datatype generator]"]}, "datatype": "Type2", "TCQ": ["What logical separation is specified between tree datatype and DAG datatype in the ontology?", "Is any structure permitted to be classified as both tree datatype and DAG datatype?", "Which datatypes are set as disjoint with DAG datatype?"], "VCQ": ["Is tree datatype classified under the group of labeled graph datatypes?", "Which datatypes are considered more specific instances of labeled graph datatype, including tree datatype?", "To which broader datatype categories does tree datatype belong?", "Is it required that a tree datatype property restriction always involves at least one has_member relation to a tree datatype generator?", "Can a tree datatype property restriction exist without relating via has_member to any tree datatype generator?", "Does every tree datatype property restriction necessarily specify the presence of a has_member property with a tree datatype generator?", "What logical separation is specified between tree datatype and DAG datatype in the ontology?", "Is any structure permitted to be classified as both tree datatype and DAG datatype?", "Which datatypes are set as disjoint with DAG datatype?"], "Taxiom": "tree datatype disjointWith DAG datatype", "CQ": [{"axiom": "tree datatype subClassOf labeled graph datatype", "CQ": ["Is tree datatype classified under the group of labeled graph datatypes?", "Which datatypes are considered more specific instances of labeled graph datatype, including tree datatype?", "To which broader datatype categories does tree datatype belong?"]}, {"axiom": "tree datatype disjointWith DAG datatype", "CQ": ["What logical separation is specified between tree datatype and DAG datatype in the ontology?", "Is any structure permitted to be classified as both tree datatype and DAG datatype?", "Which datatypes are set as disjoint with DAG datatype?"]}, {"axiom": "tree datatype propertyRestrictions [has_member some tree datatype generator]", "CQ": ["Is it required that a tree datatype property restriction always involves at least one has_member relation to a tree datatype generator?", "Can a tree datatype property restriction exist without relating via has_member to any tree datatype generator?", "Does every tree datatype property restriction necessarily specify the presence of a has_member property with a tree datatype generator?"]}]}
{"ontology": "OntoDT", "class": "lower bound", "axiom": {"subClassOf": ["bound"], "propertyRestrictions": ["[has-value exactly 1 xsd:integer]"]}, "datatype": "Type2", "TCQ": ["Is lower bound categorized as a type of bound?", "Which specific subclasses fall under the general class bound?", "What broader classes encompass lower bound?"], "VCQ": ["Is there a requirement that lower bound has exactly one propertyRestriction with a value of type xsd:integer?", "Can an instance of lower bound have more than one propertyRestriction with a value of type xsd:integer?", "Is it possible for lower bound to have no propertyRestriction with a value of type xsd:integer?", "Is lower bound categorized as a type of bound?", "Which specific subclasses fall under the general class bound?", "What broader classes encompass lower bound?"], "Taxiom": "lower bound subClassOf bound", "CQ": [{"axiom": "lower bound subClassOf bound", "CQ": ["Is lower bound categorized as a type of bound?", "Which specific subclasses fall under the general class bound?", "What broader classes encompass lower bound?"]}, {"axiom": "lower bound propertyRestrictions [has-value exactly 1 xsd:integer]", "CQ": ["Is there a requirement that lower bound has exactly one propertyRestriction with a value of type xsd:integer?", "Can an instance of lower bound have more than one propertyRestriction with a value of type xsd:integer?", "Is it possible for lower bound to have no propertyRestriction with a value of type xsd:integer?"]}]}
{"ontology": "OntoDT", "class": "index lowerbound", "axiom": {"subClassOf": ["bound"], "propertyRestrictions": ["[has-value exactly 1 xsd:integer]"]}, "datatype": "Type2", "TCQ": ["Is each instance of index required to have the property lowerbound with exactly one integer value?", "Can an index possess more than one lowerbound value assigned as an integer?", "Is it necessary that the lowerbound property of index refers to one and only one xsd:integer?"], "VCQ": ["Does index lowerbound fall under the category of bound?", "What concepts are classified as subclasses of bound, such as index lowerbound?", "Which broader categories include index lowerbound as a member?", "Is each instance of index required to have the property lowerbound with exactly one integer value?", "Can an index possess more than one lowerbound value assigned as an integer?", "Is it necessary that the lowerbound property of index refers to one and only one xsd:integer?"], "Taxiom": "index lowerbound propertyRestrictions [has-value exactly 1 xsd:integer]", "CQ": [{"axiom": "index lowerbound subClassOf bound", "CQ": ["Does index lowerbound fall under the category of bound?", "What concepts are classified as subclasses of bound, such as index lowerbound?", "Which broader categories include index lowerbound as a member?"]}, {"axiom": "index lowerbound propertyRestrictions [has-value exactly 1 xsd:integer]", "CQ": ["Is each instance of index required to have the property lowerbound with exactly one integer value?", "Can an index possess more than one lowerbound value assigned as an integer?", "Is it necessary that the lowerbound property of index refers to one and only one xsd:integer?"]}]}
{"ontology": "OntoDT", "class": "defined generator", "axiom": {"subClassOf": ["datatype generator"], "propertyRestrictions": ["[is_member_of some defined datatype]"]}, "datatype": "Type2", "TCQ": ["Is it necessary for a generator to have the property 'is_member_of' with at least one defined datatype?", "Can a generator exist without being a member of any defined datatype?", "Does a generator always possess an association to some defined datatype through the 'is_member_of' property?"], "VCQ": ["Is every defined generator classified under the datatype generator category?", "What specific types belong to the broader class of datatype generator, such as defined generator?", "Which overarching groups does defined generator fall within according to the classification?", "Is it necessary for a generator to have the property 'is_member_of' with at least one defined datatype?", "Can a generator exist without being a member of any defined datatype?", "Does a generator always possess an association to some defined datatype through the 'is_member_of' property?"], "Taxiom": "defined generator propertyRestrictions [is_member_of some defined datatype]", "CQ": [{"axiom": "defined generator subClassOf datatype generator", "CQ": ["Is every defined generator classified under the datatype generator category?", "What specific types belong to the broader class of datatype generator, such as defined generator?", "Which overarching groups does defined generator fall within according to the classification?"]}, {"axiom": "defined generator propertyRestrictions [is_member_of some defined datatype]", "CQ": ["Is it necessary for a generator to have the property 'is_member_of' with at least one defined datatype?", "Can a generator exist without being a member of any defined datatype?", "Does a generator always possess an association to some defined datatype through the 'is_member_of' property?"]}]}
{"ontology": "OntoDT", "class": "real base type", "axiom": {"subClassOf": ["base type"], "propertyRestrictions": ["[role_of some real datatype]"]}, "datatype": "Type2", "TCQ": ["Does real base type fall under the classification of base type?", "Which types are directly specified as specializations of base type, such as real base type?", "What is the immediate superclass of real base type within the type hierarchy?"], "VCQ": ["Is it necessary for a real base type to have the property 'role_of' with at least one real datatype?", "Which kinds of real datatypes must be associated with real base types through the 'role_of' property?", "Can a real base type exist without having a 'role_of' relationship to any real datatype?", "Does real base type fall under the classification of base type?", "Which types are directly specified as specializations of base type, such as real base type?", "What is the immediate superclass of real base type within the type hierarchy?"], "Taxiom": "real base type subClassOf base type", "CQ": [{"axiom": "real base type subClassOf base type", "CQ": ["Does real base type fall under the classification of base type?", "Which types are directly specified as specializations of base type, such as real base type?", "What is the immediate superclass of real base type within the type hierarchy?"]}, {"axiom": "real base type propertyRestrictions [role_of some real datatype]", "CQ": ["Is it necessary for a real base type to have the property 'role_of' with at least one real datatype?", "Which kinds of real datatypes must be associated with real base types through the 'role_of' property?", "Can a real base type exist without having a 'role_of' relationship to any real datatype?"]}]}
{"ontology": "OntoDT", "class": "record of real datatype", "axiom": {"subClassOf": ["record (tuple) datatype"], "disjointWith": ["record of discrete datatype"], "propertyRestrictions": ["[has_member some real field-list]"]}, "datatype": "Type2", "TCQ": ["How does the ontology differentiate between records of real datatype and records of discrete datatype?", "Is there any instance that can be considered both a record of real datatype and a record of discrete datatype?", "Which other record types are formally specified as disjoint with records of discrete datatype?"], "VCQ": ["Is the record of real datatype classified under the general record (tuple) datatype category?", "Which datatypes are narrower concepts encompassed by record (tuple) datatype, such as record of real datatype?", "To which parent datatype categories does record of real datatype belong?", "Is it required that a record in this context must have at least one member associated with the real field-list through the has_member property?", "Can a record exist without being related to any real field-list via the has_member property?", "Does every record necessarily participate in some has_member relationship with an instance of the real field-list?", "How does the ontology differentiate between records of real datatype and records of discrete datatype?", "Is there any instance that can be considered both a record of real datatype and a record of discrete datatype?", "Which other record types are formally specified as disjoint with records of discrete datatype?"], "Taxiom": "record of real datatype disjointWith record of discrete datatype", "CQ": [{"axiom": "record of real datatype subClassOf record (tuple) datatype", "CQ": ["Is the record of real datatype classified under the general record (tuple) datatype category?", "Which datatypes are narrower concepts encompassed by record (tuple) datatype, such as record of real datatype?", "To which parent datatype categories does record of real datatype belong?"]}, {"axiom": "record of real datatype disjointWith record of discrete datatype", "CQ": ["How does the ontology differentiate between records of real datatype and records of discrete datatype?", "Is there any instance that can be considered both a record of real datatype and a record of discrete datatype?", "Which other record types are formally specified as disjoint with records of discrete datatype?"]}, {"axiom": "record of real datatype propertyRestrictions [has_member some real field-list]", "CQ": ["Is it required that a record in this context must have at least one member associated with the real field-list through the has_member property?", "Can a record exist without being related to any real field-list via the has_member property?", "Does every record necessarily participate in some has_member relationship with an instance of the real field-list?"]}]}
{"ontology": "OntoDT", "class": "labeled dataset record datatype", "axiom": {"subClassOf": ["record (tuple) datatype"], "propertyRestrictions": ["[has_member exactly 1 labeled dataset field-list]"]}, "datatype": "Type2", "TCQ": ["Is it required that a labeled dataset record contains exactly one has_member property referring to a labeled dataset field-list?", "Can a labeled dataset record be associated with more than one labeled dataset field-list via has_member?", "Does a labeled dataset record exist if it lacks the has_member relationship with a labeled dataset field-list?"], "VCQ": ["Is labeled dataset record datatype a more specific form of record (tuple) datatype?", "What types of datatypes are classified as subclasses under record (tuple) datatype?", "Which general datatype categories include labeled dataset record datatype?", "Is it required that a labeled dataset record contains exactly one has_member property referring to a labeled dataset field-list?", "Can a labeled dataset record be associated with more than one labeled dataset field-list via has_member?", "Does a labeled dataset record exist if it lacks the has_member relationship with a labeled dataset field-list?"], "Taxiom": "labeled dataset record datatype propertyRestrictions [has_member exactly 1 labeled dataset field-list]", "CQ": [{"axiom": "labeled dataset record datatype subClassOf record (tuple) datatype", "CQ": ["Is labeled dataset record datatype a more specific form of record (tuple) datatype?", "What types of datatypes are classified as subclasses under record (tuple) datatype?", "Which general datatype categories include labeled dataset record datatype?"]}, {"axiom": "labeled dataset record datatype propertyRestrictions [has_member exactly 1 labeled dataset field-list]", "CQ": ["Is it required that a labeled dataset record contains exactly one has_member property referring to a labeled dataset field-list?", "Can a labeled dataset record be associated with more than one labeled dataset field-list via has_member?", "Does a labeled dataset record exist if it lacks the has_member relationship with a labeled dataset field-list?"]}]}
{"ontology": "OntoDT", "class": "set of real datatype", "axiom": {"subClassOf": ["set datatype"], "propertyRestrictions": ["[has_member some real base type]"]}, "datatype": "Type2", "TCQ": ["Is the set of real datatype encompassed within the set datatype category?", "Which datatype classes are direct specializations of set datatype, such as set of real datatype?", "To which datatype hierarchies does set of real datatype belong?"], "VCQ": ["Is it required that the set includes at least one member of the real base type via the has_member property?", "Can any instance of the set exist without having a has_member relationship to a real base type individual?", "Does the definition of the set guarantee that there is at least one has_member property pointing to an individual of the real base type?", "Is the set of real datatype encompassed within the set datatype category?", "Which datatype classes are direct specializations of set datatype, such as set of real datatype?", "To which datatype hierarchies does set of real datatype belong?"], "Taxiom": "set of real datatype subClassOf set datatype", "CQ": [{"axiom": "set of real datatype subClassOf set datatype", "CQ": ["Is the set of real datatype encompassed within the set datatype category?", "Which datatype classes are direct specializations of set datatype, such as set of real datatype?", "To which datatype hierarchies does set of real datatype belong?"]}, {"axiom": "set of real datatype propertyRestrictions [has_member some real base type]", "CQ": ["Is it required that the set includes at least one member of the real base type via the has_member property?", "Can any instance of the set exist without having a has_member relationship to a real base type individual?", "Does the definition of the set guarantee that there is at least one has_member property pointing to an individual of the real base type?"]}]}
{"ontology": "OntoDT", "class": "non-aggregate datatype", "axiom": {"subClassOf": ["generated datatype"], "propertyRestrictions": ["[has_member some non-aggregate generator]"]}, "datatype": "Type2", "TCQ": ["Does every non-aggregate datatype belong under the category of generated datatype?", "Which datatypes are explicitly classified as specializations of generated datatype?", "To what higher-level datatype categories does non-aggregate datatype correspond?"], "VCQ": ["Is it required that a non-aggregate must have at least one member that is a non-aggregate generator?", "Can a non-aggregate exist without being associated with any non-aggregate generator through the has_member property?", "Does every instance of non-aggregate have a has_member relationship with some entity classified as a non-aggregate generator?", "Does every non-aggregate datatype belong under the category of generated datatype?", "Which datatypes are explicitly classified as specializations of generated datatype?", "To what higher-level datatype categories does non-aggregate datatype correspond?"], "Taxiom": "non-aggregate datatype subClassOf generated datatype", "CQ": [{"axiom": "non-aggregate datatype subClassOf generated datatype", "CQ": ["Does every non-aggregate datatype belong under the category of generated datatype?", "Which datatypes are explicitly classified as specializations of generated datatype?", "To what higher-level datatype categories does non-aggregate datatype correspond?"]}, {"axiom": "non-aggregate datatype propertyRestrictions [has_member some non-aggregate generator]", "CQ": ["Is it required that a non-aggregate must have at least one member that is a non-aggregate generator?", "Can a non-aggregate exist without being associated with any non-aggregate generator through the has_member property?", "Does every instance of non-aggregate have a has_member relationship with some entity classified as a non-aggregate generator?"]}]}
{"ontology": "OntoDT", "class": "ordinal datatype", "axiom": {"subClassOf": ["non-numeric ordered primitive datatype"], "propertyRestrictions": ["[has_operation some InOrder:ordinal]", "[has_quality some bounded below]", "[has_quality some unbounded above]", "[has_quality some ordered]", "[has_operation some Successor:ordinal]", "[has_quality some non-numeric]", "[has_quality some exact]", "[has_operation some Equal:ordinal]"]}, "datatype": "Type2", "TCQ": ["Is it necessary for an entity with ordinal datatype property restrictions to have at least one operation involving equality on an ordinal value?", "Does every instance with ordinal datatype property restrictions participate in some operation that uses the 'Equal:ordinal' relation?", "Must entities constrained by ordinal datatype property restrictions be associated with a 'has_operation' involving an equal comparison on ordinals?"], "VCQ": ["Is ordinal datatype encompassed within the general classification of non-numeric ordered primitive datatype?", "Which datatypes are more specialized forms of non-numeric ordered primitive datatype, including ordinal datatype?", "What higher-level categories can ordinal datatype be assigned to within the datatype hierarchy?", "Is it required that every instance with ordinal datatype property restrictions must have the 'has_operation' property associated with at least one value from the InOrder:ordinal set?", "Does the existence of 'has_operation' linking to InOrder:ordinal suffice for an instance to comply with the ordinal datatype property restrictions?", "Are instances with ordinal datatype property restrictions guaranteed to possess 'has_operation' relating specifically to some InOrder:ordinal value?", "Is it required that every ordinal value possesses at least one quality that is bounded below?", "Must all instances related by has_quality to an ordinal datatype be bounded below in nature?", "Can an ordinal datatype have a quality that is not bounded below?", "Must every instance with an ordinal datatype property have at least one quality that is unbounded above?", "Is it required for entities with the 'has_quality' property to possess some quality that exhibits no upper bound in the ordinal scale?", "Are there cases where the 'has_quality' property can only be filled by qualities that are not restricted above in the ordinal ordering?", "Is it required that any entity with an ordinal datatype property possesses at least one quality classified as ordered?", "Can an object with an ordinal datatype property lack association with an ordered quality?", "Must the property 'has_quality' for entities using ordinal datatype always refer to some ordered quality?", "Is it required that every ordinal has at least one operation relating it to a Successor ordinal?", "Does the property 'has_operation' for ordinals necessarily involve a relation to a Successor ordinal?", "Can there exist an ordinal that lacks a 'has_operation' link to any Successor ordinal?", "Is every entity with an ordinal datatype required to have the property 'has_quality' with a non-numeric value?", "Must an ordinal datatype always be associated with some quality that is non-numeric via the 'has_quality' property?", "Can an ordinal datatype exist without possessing the 'has_quality' property relating to a non-numeric value?", "Is every entity associated with a value for the property ‘has_quality’ that must be classified as ‘exact’?", "Must instances that possess the property ‘has_quality’ necessarily have it with the value ‘exact’?", "Are entities permitted to have any value other than ‘exact’ for their ‘has_quality’ property?", "Is it necessary for an entity with ordinal datatype property restrictions to have at least one operation involving equality on an ordinal value?", "Does every instance with ordinal datatype property restrictions participate in some operation that uses the 'Equal:ordinal' relation?", "Must entities constrained by ordinal datatype property restrictions be associated with a 'has_operation' involving an equal comparison on ordinals?"], "Taxiom": "ordinal datatype propertyRestrictions [has_operation some Equal:ordinal]", "CQ": [{"axiom": "ordinal datatype subClassOf non-numeric ordered primitive datatype", "CQ": ["Is ordinal datatype encompassed within the general classification of non-numeric ordered primitive datatype?", "Which datatypes are more specialized forms of non-numeric ordered primitive datatype, including ordinal datatype?", "What higher-level categories can ordinal datatype be assigned to within the datatype hierarchy?"]}, {"axiom": "ordinal datatype propertyRestrictions [has_operation some InOrder:ordinal]", "CQ": ["Is it required that every instance with ordinal datatype property restrictions must have the 'has_operation' property associated with at least one value from the InOrder:ordinal set?", "Does the existence of 'has_operation' linking to InOrder:ordinal suffice for an instance to comply with the ordinal datatype property restrictions?", "Are instances with ordinal datatype property restrictions guaranteed to possess 'has_operation' relating specifically to some InOrder:ordinal value?"]}, {"axiom": "ordinal datatype propertyRestrictions [has_quality some bounded below]", "CQ": ["Is it required that every ordinal value possesses at least one quality that is bounded below?", "Must all instances related by has_quality to an ordinal datatype be bounded below in nature?", "Can an ordinal datatype have a quality that is not bounded below?"]}, {"axiom": "ordinal datatype propertyRestrictions [has_quality some unbounded above]", "CQ": ["Must every instance with an ordinal datatype property have at least one quality that is unbounded above?", "Is it required for entities with the 'has_quality' property to possess some quality that exhibits no upper bound in the ordinal scale?", "Are there cases where the 'has_quality' property can only be filled by qualities that are not restricted above in the ordinal ordering?"]}, {"axiom": "ordinal datatype propertyRestrictions [has_quality some ordered]", "CQ": ["Is it required that any entity with an ordinal datatype property possesses at least one quality classified as ordered?", "Can an object with an ordinal datatype property lack association with an ordered quality?", "Must the property 'has_quality' for entities using ordinal datatype always refer to some ordered quality?"]}, {"axiom": "ordinal datatype propertyRestrictions [has_operation some Successor:ordinal]", "CQ": ["Is it required that every ordinal has at least one operation relating it to a Successor ordinal?", "Does the property 'has_operation' for ordinals necessarily involve a relation to a Successor ordinal?", "Can there exist an ordinal that lacks a 'has_operation' link to any Successor ordinal?"]}, {"axiom": "ordinal datatype propertyRestrictions [has_operation some Equal:ordinal]", "CQ": ["Is it necessary for an entity with ordinal datatype property restrictions to have at least one operation involving equality on an ordinal value?", "Does every instance with ordinal datatype property restrictions participate in some operation that uses the 'Equal:ordinal' relation?", "Must entities constrained by ordinal datatype property restrictions be associated with a 'has_operation' involving an equal comparison on ordinals?"]}, {"axiom": "ordinal datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Is every entity with an ordinal datatype required to have the property 'has_quality' with a non-numeric value?", "Must an ordinal datatype always be associated with some quality that is non-numeric via the 'has_quality' property?", "Can an ordinal datatype exist without possessing the 'has_quality' property relating to a non-numeric value?"]}, {"axiom": "ordinal datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is every entity associated with a value for the property ‘has_quality’ that must be classified as ‘exact’?", "Must instances that possess the property ‘has_quality’ necessarily have it with the value ‘exact’?", "Are entities permitted to have any value other than ‘exact’ for their ‘has_quality’ property?"]}]}
{"ontology": "OntoDT", "class": "datatype", "axiom": {"subClassOf": ["data representational model"], "propertyRestrictions": ["[has_quality some datatype property]", "[has_operation some characterizing operation]", "[has_attribute some value space]"]}, "datatype": "Type2", "TCQ": ["Is datatype categorized under the broader class of data representational model?", "Which subclasses constitute the data representational model class, such as datatype?", "Of which higher-level concepts is datatype an instance within the domain?"], "VCQ": ["Is it a requirement that instances must have at least one 'has_quality' property with a value of the specified datatype?", "Are there any instances that lack the 'has_quality' property altogether under this restriction?", "Does the ontology allow an individual to have multiple 'has_quality' relationships with values of the defined datatype?", "Is it required that every instance with datatype propertyRestrictions has at least one has_operation relationship to a characterizing operation?", "Can an entity described by datatype propertyRestrictions lack any has_operation link to a characterizing operation?", "Must characterizing operation be present under has_operation for any object satisfying datatype propertyRestrictions?", "Does every instance with 'has_attribute' necessarily have a value from the 'value space'?", "Is it required that the 'has_attribute' property for an entity be filled with at least one value that belongs to the specified value space?", "Can an individual be considered part of the class only if there exists a 'has_attribute' value within the defined value space?", "Is datatype categorized under the broader class of data representational model?", "Which subclasses constitute the data representational model class, such as datatype?", "Of which higher-level concepts is datatype an instance within the domain?"], "Taxiom": "datatype subClassOf data representational model", "CQ": [{"axiom": "datatype subClassOf data representational model", "CQ": ["Is datatype categorized under the broader class of data representational model?", "Which subclasses constitute the data representational model class, such as datatype?", "Of which higher-level concepts is datatype an instance within the domain?"]}, {"axiom": "datatype propertyRestrictions [has_quality some datatype property]", "CQ": ["Is it a requirement that instances must have at least one 'has_quality' property with a value of the specified datatype?", "Are there any instances that lack the 'has_quality' property altogether under this restriction?", "Does the ontology allow an individual to have multiple 'has_quality' relationships with values of the defined datatype?"]}, {"axiom": "datatype propertyRestrictions [has_operation some characterizing operation]", "CQ": ["Is it required that every instance with datatype propertyRestrictions has at least one has_operation relationship to a characterizing operation?", "Can an entity described by datatype propertyRestrictions lack any has_operation link to a characterizing operation?", "Must characterizing operation be present under has_operation for any object satisfying datatype propertyRestrictions?"]}, {"axiom": "datatype propertyRestrictions [has_attribute some value space]", "CQ": ["Does every instance with 'has_attribute' necessarily have a value from the 'value space'?", "Is it required that the 'has_attribute' property for an entity be filled with at least one value that belongs to the specified value space?", "Can an individual be considered part of the class only if there exists a 'has_attribute' value within the defined value space?"]}]}
{"ontology": "OntoDT", "class": "numeric ordered primitive datatype", "axiom": {"subClassOf": ["numeric primitive datatype"], "propertyRestrictions": ["[has_quality some ordered]"]}, "datatype": "Type2", "TCQ": ["Does every 'numeric ordered primitive datatype' instance have at least one 'has_quality' relation to an 'ordered' entity?", "Is it mandatory for a 'numeric ordered primitive datatype' to possess a 'has_quality' association with something that is 'ordered'?", "Can a 'numeric ordered primitive datatype' exist without being linked via 'has_quality' to any 'ordered' entity?"], "VCQ": ["Is numeric ordered primitive datatype one of the specific types classified under numeric primitive datatype?", "What datatypes fall under the broader category of numeric primitive datatype, such as numeric ordered primitive datatype?", "Which higher-level datatype categories include numeric ordered primitive datatype as a subclass?", "Does every 'numeric ordered primitive datatype' instance have at least one 'has_quality' relation to an 'ordered' entity?", "Is it mandatory for a 'numeric ordered primitive datatype' to possess a 'has_quality' association with something that is 'ordered'?", "Can a 'numeric ordered primitive datatype' exist without being linked via 'has_quality' to any 'ordered' entity?"], "Taxiom": "numeric ordered primitive datatype propertyRestrictions [has_quality some ordered]", "CQ": [{"axiom": "numeric ordered primitive datatype subClassOf numeric primitive datatype", "CQ": ["Is numeric ordered primitive datatype one of the specific types classified under numeric primitive datatype?", "What datatypes fall under the broader category of numeric primitive datatype, such as numeric ordered primitive datatype?", "Which higher-level datatype categories include numeric ordered primitive datatype as a subclass?"]}, {"axiom": "numeric ordered primitive datatype propertyRestrictions [has_quality some ordered]", "CQ": ["Does every 'numeric ordered primitive datatype' instance have at least one 'has_quality' relation to an 'ordered' entity?", "Is it mandatory for a 'numeric ordered primitive datatype' to possess a 'has_quality' association with something that is 'ordered'?", "Can a 'numeric ordered primitive datatype' exist without being linked via 'has_quality' to any 'ordered' entity?"]}]}
{"ontology": "OntoDT", "class": "sequence datatype", "axiom": {"subClassOf": ["homogenous aggregate datatype with variable size"], "disjointWith": ["homogenous  unordered aggregate datatype with variable size"], "propertyRestrictions": ["[has_operation some Equal:sequence]", "[has_quality some exact]", "[has_operation some IsEmpty:sequence]", "[has_quality some non-ordered]", "[has_operation some Head:sequence]", "[has_quality some non-numeric]", "[has_member some base type]", "[has_operation some Append:sequence]", "[has_operation some Tail:sequence]", "[has_member some sequence generator]"]}, "datatype": "Type2", "TCQ": ["What is the logical separation between sequence datatypes and homogenous unordered aggregate datatypes with variable size?", "Is there any datatype that can be classified as both a sequence datatype and a homogenous unordered aggregate datatype with variable size?", "Which other datatype categories are formally specified as disjoint with sequence datatypes?"], "VCQ": ["Is sequence datatype classified as a kind of homogenous aggregate datatype with variable size?", "Which datatypes are more specific variants under homogenous aggregate datatype with variable size, such as sequence datatype?", "To which higher-level datatype categories does sequence datatype belong?", "Is it required that a sequence be associated with at least one operation of type Equal:sequence?", "Does every instance of sequence necessarily participate in the has_operation property with something classified as Equal:sequence?", "Can a sequence exist without having the has_operation property relating it to an Equal:sequence?", "Is it required that every Sequence possesses at least one quality which is classified as Exact?", "Can a Sequence exist that does not have the property 'has_quality' related to Exact?", "Is the association between Sequence and Exact enforced through the property 'has_quality' for all members of the Sequence class?", "Is every instance of sequence required to have at least one has_operation property relating to IsEmpty?", "Can a sequence exist without the has_operation property pointing to IsEmpty?", "Does the definition of sequence ensure an operation of type IsEmpty is necessarily associated with it?", "Is every sequence required to possess at least one quality that is classified as non-ordered?", "Must a sequence have the 'has_quality' property relating it to a non-ordered characteristic?", "Can a sequence exist without having any 'has_quality' relationship to a non-ordered attribute?", "Must every instance of sequence participate in at least one has_operation relationship with an instance of Head:sequence?", "Is it required that a sequence has at least one 'has_operation' property linking it to something of type Head:sequence?", "Can a sequence exist without any has_operation connection to a Head:sequence individual?", "Does every sequence have at least one 'has_quality' property relating it to a non-numeric value?", "Is the existence of a non-numeric quality mandatory for any instance classified as a sequence?", "Must sequences always possess some non-numeric quality via the 'has_quality' property?", "Is every sequence required to include at least one member of the specified base type?", "Does a sequence always have the property 'has_member' relating it to an instance of its base type?", "Can a sequence exist if it does not have any member from the base type?", "Is it required for a sequence to participate in at least one 'has_operation' relationship with an instance of Append:sequence?", "Must every sequence be associated with the Append:sequence entity through the 'has_operation' property?", "Can a sequence exist in the ontology without the 'has_operation' property linking it to an Append:sequence?", "Is it necessary for a sequence to have at least one operation that is a Tail sequence?", "Can a sequence exist without having any operation associated with a Tail sequence?", "Does every instance of sequence have the property 'has_operation' relating it to at least one Tail sequence?", "Must a sequence always have at least one member associated with a sequence generator?", "Is the existence of a sequence generator mandatory for any member of a sequence?", "Does every sequence necessarily require that at least one of its members is linked to a sequence generator?", "What is the logical separation between sequence datatypes and homogenous unordered aggregate datatypes with variable size?", "Is there any datatype that can be classified as both a sequence datatype and a homogenous unordered aggregate datatype with variable size?", "Which other datatype categories are formally specified as disjoint with sequence datatypes?"], "Taxiom": "sequence datatype disjointWith homogenous  unordered aggregate datatype with variable size", "CQ": [{"axiom": "sequence datatype subClassOf homogenous aggregate datatype with variable size", "CQ": ["Is sequence datatype classified as a kind of homogenous aggregate datatype with variable size?", "Which datatypes are more specific variants under homogenous aggregate datatype with variable size, such as sequence datatype?", "To which higher-level datatype categories does sequence datatype belong?"]}, {"axiom": "sequence datatype disjointWith homogenous  unordered aggregate datatype with variable size", "CQ": ["What is the logical separation between sequence datatypes and homogenous unordered aggregate datatypes with variable size?", "Is there any datatype that can be classified as both a sequence datatype and a homogenous unordered aggregate datatype with variable size?", "Which other datatype categories are formally specified as disjoint with sequence datatypes?"]}, {"axiom": "sequence datatype propertyRestrictions [has_operation some Equal:sequence]", "CQ": ["Is it required that a sequence be associated with at least one operation of type Equal:sequence?", "Does every instance of sequence necessarily participate in the has_operation property with something classified as Equal:sequence?", "Can a sequence exist without having the has_operation property relating it to an Equal:sequence?"]}, {"axiom": "sequence datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is it required that every Sequence possesses at least one quality which is classified as Exact?", "Can a Sequence exist that does not have the property 'has_quality' related to Exact?", "Is the association between Sequence and Exact enforced through the property 'has_quality' for all members of the Sequence class?"]}, {"axiom": "sequence datatype propertyRestrictions [has_operation some IsEmpty:sequence]", "CQ": ["Is every instance of sequence required to have at least one has_operation property relating to IsEmpty?", "Can a sequence exist without the has_operation property pointing to IsEmpty?", "Does the definition of sequence ensure an operation of type IsEmpty is necessarily associated with it?"]}, {"axiom": "sequence datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is every sequence required to possess at least one quality that is classified as non-ordered?", "Must a sequence have the 'has_quality' property relating it to a non-ordered characteristic?", "Can a sequence exist without having any 'has_quality' relationship to a non-ordered attribute?"]}, {"axiom": "sequence datatype propertyRestrictions [has_operation some Head:sequence]", "CQ": ["Must every instance of sequence participate in at least one has_operation relationship with an instance of Head:sequence?", "Is it required that a sequence has at least one 'has_operation' property linking it to something of type Head:sequence?", "Can a sequence exist without any has_operation connection to a Head:sequence individual?"]}, {"axiom": "sequence datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Does every sequence have at least one 'has_quality' property relating it to a non-numeric value?", "Is the existence of a non-numeric quality mandatory for any instance classified as a sequence?", "Must sequences always possess some non-numeric quality via the 'has_quality' property?"]}, {"axiom": "sequence datatype propertyRestrictions [has_member some base type]", "CQ": ["Is every sequence required to include at least one member of the specified base type?", "Does a sequence always have the property 'has_member' relating it to an instance of its base type?", "Can a sequence exist if it does not have any member from the base type?"]}, {"axiom": "sequence datatype propertyRestrictions [has_operation some Append:sequence]", "CQ": ["Is it required for a sequence to participate in at least one 'has_operation' relationship with an instance of Append:sequence?", "Must every sequence be associated with the Append:sequence entity through the 'has_operation' property?", "Can a sequence exist in the ontology without the 'has_operation' property linking it to an Append:sequence?"]}, {"axiom": "sequence datatype propertyRestrictions [has_operation some Tail:sequence]", "CQ": ["Is it necessary for a sequence to have at least one operation that is a Tail sequence?", "Can a sequence exist without having any operation associated with a Tail sequence?", "Does every instance of sequence have the property 'has_operation' relating it to at least one Tail sequence?"]}, {"axiom": "sequence datatype propertyRestrictions [has_member some sequence generator]", "CQ": ["Must a sequence always have at least one member associated with a sequence generator?", "Is the existence of a sequence generator mandatory for any member of a sequence?", "Does every sequence necessarily require that at least one of its members is linked to a sequence generator?"]}]}
{"ontology": "OntoDT", "class": "set datatype", "axiom": {"subClassOf": ["homogenous  unordered aggregate datatype with variable size"], "propertyRestrictions": ["[has_quality some non-ordered]", "[has_operation some Lsln:set]", "[has_operation some Intersection:set]", "[has_member some base type]", "[has_operation some SetOf:set]", "[has_member some set generator]", "[has_operation some Equal:class]", "[has_quality some non-numeric]", "[has_quality some exact]", "[has_operation some Empty:set]", "[has_operation some Difference:set]", "[has_operation some Union:set]", "[has_operation some Subset:set]", "[has_operation some Select:set]"]}, "datatype": "Type2", "TCQ": ["Is it necessary for an entity to have at least one 'has_operation' relationship with an instance of Select:set?", "Does every instance within the scope of this ontology perform at least one operation classified under Select:set?", "Can an individual possess the 'has_operation' property only if it is associated with the Select:set operation?"], "VCQ": ["Is set datatype classified as a specific kind of homogenous unordered aggregate datatype with variable size?", "Which datatype categories encompass set datatype as a more specialized form?", "What are the more specialized datatypes that fall under homogenous unordered aggregate datatype with variable size?", "Must every instance that has 'has_quality' property possess at least one 'non-ordered' quality?", "Is it obligatory for an entity with the 'has_quality' relation to always be associated with some non-ordered attribute?", "Are there any entities for which the 'has_quality' property exists but does not connect to a non-ordered value?", "Is every instance of 'set' required to participate in at least one 'has_operation' relationship with an instance of 'Lsln:set'?", "Must a 'set' always have some 'has_operation' link to 'Lsln:set' entities within the scope of this ontology?", "Does the ontology specify that every 'set' is associated, via the 'has_operation' property, with at least one 'Lsln:set'?", "Must every instance with a 'set' have at least one 'has_operation' relationship to an entity of type 'Intersection:set'?", "Is it required for entities classified as 'set' to participate in the 'has_operation' property with some 'Intersection:set'?", "Does the ontology define that any 'set' must be associated via 'has_operation' with at least one instance belonging to 'Intersection:set'?", "Is each set required to have at least one member from the base type through the has_member property?", "Does any instance of set necessarily possess the has_member property with some value of base type?", "For a given set, must there exist an association via has_member to an individual of base type?", "Is it required for every instance in 'set' to have at least one 'has_operation' relationship to an entity in 'SetOf:set'?", "Can a 'set' entity exist without any associated 'has_operation' to a member of 'SetOf:set'?", "Does the presence of a 'has_operation' link to an individual in 'SetOf:set' suffice for an entity to be recognized as part of the 'set' class?", "Is every instance of 'set' required to have at least one 'has_member' relationship to an instance of 'generator'?", "Must a 'set' necessarily include at least one 'generator' as a member via 'has_member'?", "Can an instance of 'set' exist without being linked to any 'generator' through the 'has_member' property?", "Must every instance of set have at least one has_operation relation to something classified as Equal?", "Can a set exist without being associated, via has_operation, to the class Equal?", "Is it obligatory for set to participate in the has_operation property with an individual of the Equal class?", "Are all entities with the property 'has_quality' necessarily associated with at least one non-numeric value?", "Does the existence of a 'has_quality' property for a given entity imply the presence of some non-numeric quality?", "Can any entity be described using 'has_quality' only if it possesses at least one non-numeric attribute?", "Is every member of 'set' required to have at least one 'has_quality' relation to 'exact'?", "Must instances of 'set' possess the property 'has_quality' with a value of 'exact'?", "Does the class 'set' include only those entities that exhibit the 'has_quality' property with 'exact'?", "Is it required that there exists at least one has_operation relationship to an instance of Empty for the concept set?", "Does every set necessarily perform at least one operation that yields an Empty set?", "Can a set exist without having any has_operation connection to Empty?", "Must every instance in the defined set have at least one 'has_operation' relationship to a member of the Difference set?", "Is it required for elements of the set to be associated via 'has_operation' with some Difference set element?", "Are all set members necessarily connected by the 'has_operation' property to at least one Difference set entity?", "Is it required that instances of set have at least one has_operation relationship to a member of Union:set?", "Can every set be related to at least one element in Union:set via the has_operation property?", "Does the class set necessarily possess the has_operation property with some value from Union:set?", "Is it required that every instance with property 'has_operation' must be associated with at least one member of the class 'Subset:set'?", "Can an individual satisfy the axiom only if it participates in some 'has_operation' relation with an entity of type 'Subset:set'?", "Does the ontology permit an entity with no 'has_operation' link to any 'Subset:set' instance to fulfill the property restriction?", "Is it necessary for an entity to have at least one 'has_operation' relationship with an instance of Select:set?", "Does every instance within the scope of this ontology perform at least one operation classified under Select:set?", "Can an individual possess the 'has_operation' property only if it is associated with the Select:set operation?"], "Taxiom": "set datatype propertyRestrictions [has_operation some Select:set]", "CQ": [{"axiom": "set datatype subClassOf homogenous  unordered aggregate datatype with variable size", "CQ": ["Is set datatype classified as a specific kind of homogenous unordered aggregate datatype with variable size?", "Which datatype categories encompass set datatype as a more specialized form?", "What are the more specialized datatypes that fall under homogenous unordered aggregate datatype with variable size?"]}, {"axiom": "set datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Must every instance that has 'has_quality' property possess at least one 'non-ordered' quality?", "Is it obligatory for an entity with the 'has_quality' relation to always be associated with some non-ordered attribute?", "Are there any entities for which the 'has_quality' property exists but does not connect to a non-ordered value?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some Lsln:set]", "CQ": ["Is every instance of 'set' required to participate in at least one 'has_operation' relationship with an instance of 'Lsln:set'?", "Must a 'set' always have some 'has_operation' link to 'Lsln:set' entities within the scope of this ontology?", "Does the ontology specify that every 'set' is associated, via the 'has_operation' property, with at least one 'Lsln:set'?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some Intersection:set]", "CQ": ["Must every instance with a 'set' have at least one 'has_operation' relationship to an entity of type 'Intersection:set'?", "Is it required for entities classified as 'set' to participate in the 'has_operation' property with some 'Intersection:set'?", "Does the ontology define that any 'set' must be associated via 'has_operation' with at least one instance belonging to 'Intersection:set'?"]}, {"axiom": "set datatype propertyRestrictions [has_member some base type]", "CQ": ["Is each set required to have at least one member from the base type through the has_member property?", "Does any instance of set necessarily possess the has_member property with some value of base type?", "For a given set, must there exist an association via has_member to an individual of base type?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some SetOf:set]", "CQ": ["Is it required for every instance in 'set' to have at least one 'has_operation' relationship to an entity in 'SetOf:set'?", "Can a 'set' entity exist without any associated 'has_operation' to a member of 'SetOf:set'?", "Does the presence of a 'has_operation' link to an individual in 'SetOf:set' suffice for an entity to be recognized as part of the 'set' class?"]}, {"axiom": "set datatype propertyRestrictions [has_member some set generator]", "CQ": ["Is every instance of 'set' required to have at least one 'has_member' relationship to an instance of 'generator'?", "Must a 'set' necessarily include at least one 'generator' as a member via 'has_member'?", "Can an instance of 'set' exist without being linked to any 'generator' through the 'has_member' property?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some Select:set]", "CQ": ["Is it necessary for an entity to have at least one 'has_operation' relationship with an instance of Select:set?", "Does every instance within the scope of this ontology perform at least one operation classified under Select:set?", "Can an individual possess the 'has_operation' property only if it is associated with the Select:set operation?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some Equal:class]", "CQ": ["Must every instance of set have at least one has_operation relation to something classified as Equal?", "Can a set exist without being associated, via has_operation, to the class Equal?", "Is it obligatory for set to participate in the has_operation property with an individual of the Equal class?"]}, {"axiom": "set datatype propertyRestrictions [has_quality some non-numeric]", "CQ": ["Are all entities with the property 'has_quality' necessarily associated with at least one non-numeric value?", "Does the existence of a 'has_quality' property for a given entity imply the presence of some non-numeric quality?", "Can any entity be described using 'has_quality' only if it possesses at least one non-numeric attribute?"]}, {"axiom": "set datatype propertyRestrictions [has_quality some exact]", "CQ": ["Is every member of 'set' required to have at least one 'has_quality' relation to 'exact'?", "Must instances of 'set' possess the property 'has_quality' with a value of 'exact'?", "Does the class 'set' include only those entities that exhibit the 'has_quality' property with 'exact'?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some Empty:set]", "CQ": ["Is it required that there exists at least one has_operation relationship to an instance of Empty for the concept set?", "Does every set necessarily perform at least one operation that yields an Empty set?", "Can a set exist without having any has_operation connection to Empty?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some Difference:set]", "CQ": ["Must every instance in the defined set have at least one 'has_operation' relationship to a member of the Difference set?", "Is it required for elements of the set to be associated via 'has_operation' with some Difference set element?", "Are all set members necessarily connected by the 'has_operation' property to at least one Difference set entity?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some Union:set]", "CQ": ["Is it required that instances of set have at least one has_operation relationship to a member of Union:set?", "Can every set be related to at least one element in Union:set via the has_operation property?", "Does the class set necessarily possess the has_operation property with some value from Union:set?"]}, {"axiom": "set datatype propertyRestrictions [has_operation some Subset:set]", "CQ": ["Is it required that every instance with property 'has_operation' must be associated with at least one member of the class 'Subset:set'?", "Can an individual satisfy the axiom only if it participates in some 'has_operation' relation with an entity of type 'Subset:set'?", "Does the ontology permit an entity with no 'has_operation' link to any 'Subset:set' instance to fulfill the property restriction?"]}]}
{"ontology": "OntoDT", "class": "primitive field component", "axiom": {"subClassOf": ["field component"], "propertyRestrictions": ["[role_of some primitive datatype]"]}, "datatype": "Type2", "TCQ": ["Is every primitive field component necessarily associated with a role that plays some primitive datatype?", "Must a primitive field component have at least one role linked to a primitive datatype?", "Can a primitive field component exist without being connected via 'role_of' to a primitive datatype?"], "VCQ": ["Is primitive field component a specialized form within the broader class of field component?", "Which entities are direct subclasses of field component, including primitive field component?", "What higher-level classes encompass primitive field component in the ontology hierarchy?", "Is every primitive field component necessarily associated with a role that plays some primitive datatype?", "Must a primitive field component have at least one role linked to a primitive datatype?", "Can a primitive field component exist without being connected via 'role_of' to a primitive datatype?"], "Taxiom": "primitive field component propertyRestrictions [role_of some primitive datatype]", "CQ": [{"axiom": "primitive field component subClassOf field component", "CQ": ["Is primitive field component a specialized form within the broader class of field component?", "Which entities are direct subclasses of field component, including primitive field component?", "What higher-level classes encompass primitive field component in the ontology hierarchy?"]}, {"axiom": "primitive field component propertyRestrictions [role_of some primitive datatype]", "CQ": ["Is every primitive field component necessarily associated with a role that plays some primitive datatype?", "Must a primitive field component have at least one role linked to a primitive datatype?", "Can a primitive field component exist without being connected via 'role_of' to a primitive datatype?"]}]}
{"ontology": "OntoDT", "class": "numeric primitive datatype", "axiom": {"subClassOf": ["primitive datatype"], "propertyRestrictions": ["[has_quality some numeric]"]}, "datatype": "Type2", "TCQ": ["Is numeric primitive datatype categorized under the broader class of primitive datatype?", "Which datatypes are considered specializations of primitive datatype, specifically including numeric primitive datatype?", "To which more general datatype groups does numeric primitive datatype belong?"], "VCQ": ["Is it mandatory for every instance with a numeric primitive datatype property restriction to have at least one associated numeric quality?", "Can an entity constrained by a numeric primitive datatype restriction exist without possessing any numeric quality?", "Does the property 'has_quality' necessarily link instances with numeric primitive datatype restrictions to some numeric value?", "Is numeric primitive datatype categorized under the broader class of primitive datatype?", "Which datatypes are considered specializations of primitive datatype, specifically including numeric primitive datatype?", "To which more general datatype groups does numeric primitive datatype belong?"], "Taxiom": "numeric primitive datatype subClassOf primitive datatype", "CQ": [{"axiom": "numeric primitive datatype subClassOf primitive datatype", "CQ": ["Is numeric primitive datatype categorized under the broader class of primitive datatype?", "Which datatypes are considered specializations of primitive datatype, specifically including numeric primitive datatype?", "To which more general datatype groups does numeric primitive datatype belong?"]}, {"axiom": "numeric primitive datatype propertyRestrictions [has_quality some numeric]", "CQ": ["Is it mandatory for every instance with a numeric primitive datatype property restriction to have at least one associated numeric quality?", "Can an entity constrained by a numeric primitive datatype restriction exist without possessing any numeric quality?", "Does the property 'has_quality' necessarily link instances with numeric primitive datatype restrictions to some numeric value?"]}]}
{"ontology": "OntoDT", "class": "non-numeric unordered primitive datatype", "axiom": {"subClassOf": ["non-numeric primitive datatype"], "disjointWith": ["non-numeric ordered primitive datatype"], "propertyRestrictions": ["[has_quality some non-ordered]"]}, "datatype": "Type2", "TCQ": ["What distinguishes non-numeric unordered primitive datatypes from non-numeric ordered primitive datatypes in the ontology?", "Can a primitive datatype be classified as both non-numeric unordered and non-numeric ordered simultaneously?", "Which primitive datatypes are defined as disjoint with non-numeric ordered primitive datatypes?"], "VCQ": ["Does non-numeric unordered primitive datatype fall under the broader group of non-numeric primitive datatype?", "Which primitive datatypes are specializations of non-numeric primitive datatype, specifically including non-numeric unordered primitive datatype?", "What higher level categories encompass non-numeric unordered primitive datatype?", "Is every instance with property 'has_quality' required to have at least one value from the class 'non-ordered'?", "Must the property 'has_quality' always relate to some individual classified as 'non-ordered'?", "Does possessing the 'has_quality' property necessarily entail an association with a 'non-ordered' value?", "What distinguishes non-numeric unordered primitive datatypes from non-numeric ordered primitive datatypes in the ontology?", "Can a primitive datatype be classified as both non-numeric unordered and non-numeric ordered simultaneously?", "Which primitive datatypes are defined as disjoint with non-numeric ordered primitive datatypes?"], "Taxiom": "non-numeric unordered primitive datatype disjointWith non-numeric ordered primitive datatype", "CQ": [{"axiom": "non-numeric unordered primitive datatype subClassOf non-numeric primitive datatype", "CQ": ["Does non-numeric unordered primitive datatype fall under the broader group of non-numeric primitive datatype?", "Which primitive datatypes are specializations of non-numeric primitive datatype, specifically including non-numeric unordered primitive datatype?", "What higher level categories encompass non-numeric unordered primitive datatype?"]}, {"axiom": "non-numeric unordered primitive datatype disjointWith non-numeric ordered primitive datatype", "CQ": ["What distinguishes non-numeric unordered primitive datatypes from non-numeric ordered primitive datatypes in the ontology?", "Can a primitive datatype be classified as both non-numeric unordered and non-numeric ordered simultaneously?", "Which primitive datatypes are defined as disjoint with non-numeric ordered primitive datatypes?"]}, {"axiom": "non-numeric unordered primitive datatype propertyRestrictions [has_quality some non-ordered]", "CQ": ["Is every instance with property 'has_quality' required to have at least one value from the class 'non-ordered'?", "Must the property 'has_quality' always relate to some individual classified as 'non-ordered'?", "Does possessing the 'has_quality' property necessarily entail an association with a 'non-ordered' value?"]}]}
{"ontology": "OntoDT", "class": "heterogenous aggregate datatype", "axiom": {"subClassOf": ["aggregate datatype"], "propertyRestrictions": ["[has_member some heterogenous aggregate generator]"]}, "datatype": "Type2", "TCQ": ["Is aggregate datatype a more general classification that includes heterogenous aggregate datatype?", "Which specific aggregate datatypes are categorized as heterogenous aggregate datatype?", "To what broader datatype groups does heterogenous aggregate datatype belong?"], "VCQ": ["Is every heterogenous aggregate required to have at least one member that is a heterogenous aggregate generator?", "Must the property 'has_member' for a heterogenous aggregate always include a heterogenous aggregate generator as a possible member?", "Can a heterogenous aggregate exist without being associated, via 'has_member', to any heterogenous aggregate generator?", "Is aggregate datatype a more general classification that includes heterogenous aggregate datatype?", "Which specific aggregate datatypes are categorized as heterogenous aggregate datatype?", "To what broader datatype groups does heterogenous aggregate datatype belong?"], "Taxiom": "heterogenous aggregate datatype subClassOf aggregate datatype", "CQ": [{"axiom": "heterogenous aggregate datatype subClassOf aggregate datatype", "CQ": ["Is aggregate datatype a more general classification that includes heterogenous aggregate datatype?", "Which specific aggregate datatypes are categorized as heterogenous aggregate datatype?", "To what broader datatype groups does heterogenous aggregate datatype belong?"]}, {"axiom": "heterogenous aggregate datatype propertyRestrictions [has_member some heterogenous aggregate generator]", "CQ": ["Is every heterogenous aggregate required to have at least one member that is a heterogenous aggregate generator?", "Must the property 'has_member' for a heterogenous aggregate always include a heterogenous aggregate generator as a possible member?", "Can a heterogenous aggregate exist without being associated, via 'has_member', to any heterogenous aggregate generator?"]}]}
{"ontology": "OntoDT", "class": "bounded above", "axiom": {"subClassOf": ["bounded"], "disjointWith": ["bounded below"]}, "datatype": "Type2", "TCQ": ["How does the ontology differentiate between entities that are bounded above and those that are bounded below?", "Is an entity permitted to belong simultaneously to both the bounded above and bounded below categories?", "Which classes, apart from bounded above, are specified as disjoint with bounded below within the ontology?"], "VCQ": ["Is bounded above categorized as a specific type within the general class of bounded?", "Which classes fall under the category of bounded, specifically including bounded above?", "To which broader classes does bounded above belong in the class hierarchy?", "How does the ontology differentiate between entities that are bounded above and those that are bounded below?", "Is an entity permitted to belong simultaneously to both the bounded above and bounded below categories?", "Which classes, apart from bounded above, are specified as disjoint with bounded below within the ontology?"], "Taxiom": "bounded above disjointWith bounded below", "CQ": [{"axiom": "bounded above subClassOf bounded", "CQ": ["Is bounded above categorized as a specific type within the general class of bounded?", "Which classes fall under the category of bounded, specifically including bounded above?", "To which broader classes does bounded above belong in the class hierarchy?"]}, {"axiom": "bounded above disjointWith bounded below", "CQ": ["How does the ontology differentiate between entities that are bounded above and those that are bounded below?", "Is an entity permitted to belong simultaneously to both the bounded above and bounded below categories?", "Which classes, apart from bounded above, are specified as disjoint with bounded below within the ontology?"]}]}
{"ontology": "OntoDT", "class": "bounded", "axiom": {"subClassOf": ["boundedness"], "disjointWith": ["unbounded"]}, "datatype": "Type2", "TCQ": ["What is the nature of the distinction between bounded and unbounded entities within the ontology?", "Is it permissible for a concept to be classified as both bounded and unbounded simultaneously?", "Which classes are formally specified as incompatible with the concept of bounded?"], "VCQ": ["Is boundedness an encompassing category for all instances of bounded?", "Which subcategories are defined under boundedness, and does this include bounded?", "To what higher-level classifications does bounded directly pertain?", "What is the nature of the distinction between bounded and unbounded entities within the ontology?", "Is it permissible for a concept to be classified as both bounded and unbounded simultaneously?", "Which classes are formally specified as incompatible with the concept of bounded?"], "Taxiom": "bounded disjointWith unbounded", "CQ": [{"axiom": "bounded subClassOf boundedness", "CQ": ["Is boundedness an encompassing category for all instances of bounded?", "Which subcategories are defined under boundedness, and does this include bounded?", "To what higher-level classifications does bounded directly pertain?"]}, {"axiom": "bounded disjointWith unbounded", "CQ": ["What is the nature of the distinction between bounded and unbounded entities within the ontology?", "Is it permissible for a concept to be classified as both bounded and unbounded simultaneously?", "Which classes are formally specified as incompatible with the concept of bounded?"]}]}
{"ontology": "OntoDT", "class": "numeric", "axiom": {"subClassOf": ["numericalness"], "disjointWith": ["non-numeric"]}, "datatype": "Type2", "TCQ": ["What differentiates numeric entities from non-numeric entities in the ontology?", "Is there any instance that can simultaneously be classified as numeric and non-numeric?", "Which classes have an explicit incompatibility declared with non-numeric?"], "VCQ": ["Is numericalness a superordinate category that covers numeric?", "Which specific subclasses fall under the category of numericalness, such as numeric?", "To which upper classes does numeric belong in the ontology hierarchy?", "What differentiates numeric entities from non-numeric entities in the ontology?", "Is there any instance that can simultaneously be classified as numeric and non-numeric?", "Which classes have an explicit incompatibility declared with non-numeric?"], "Taxiom": "numeric disjointWith non-numeric", "CQ": [{"axiom": "numeric subClassOf numericalness", "CQ": ["Is numericalness a superordinate category that covers numeric?", "Which specific subclasses fall under the category of numericalness, such as numeric?", "To which upper classes does numeric belong in the ontology hierarchy?"]}, {"axiom": "numeric disjointWith non-numeric", "CQ": ["What differentiates numeric entities from non-numeric entities in the ontology?", "Is there any instance that can simultaneously be classified as numeric and non-numeric?", "Which classes have an explicit incompatibility declared with non-numeric?"]}]}
{"ontology": "OntoDT", "class": "Delete:bag", "axiom": {"subClassOf": ["delete operation"], "disjointWith": ["Delete:table"]}, "datatype": "Type2", "TCQ": ["What distinguishes instances of Delete:bag from those of Delete:table in terms of their classification?", "Is there any entity in the ontology that can belong to both Delete:bag and Delete:table simultaneously?", "Which classes are asserted to be disjoint with Delete:table?"], "VCQ": ["Does Delete:bag fall under the category of delete operation?", "Which subclasses are specified within delete operation, including Delete:bag?", "What broader operations encompass Delete:bag as a specific type?", "What distinguishes instances of Delete:bag from those of Delete:table in terms of their classification?", "Is there any entity in the ontology that can belong to both Delete:bag and Delete:table simultaneously?", "Which classes are asserted to be disjoint with Delete:table?"], "Taxiom": "Delete:bag disjointWith Delete:table", "CQ": [{"axiom": "Delete:bag subClassOf delete operation", "CQ": ["Does Delete:bag fall under the category of delete operation?", "Which subclasses are specified within delete operation, including Delete:bag?", "What broader operations encompass Delete:bag as a specific type?"]}, {"axiom": "Delete:bag disjointWith Delete:table", "CQ": ["What distinguishes instances of Delete:bag from those of Delete:table in terms of their classification?", "Is there any entity in the ontology that can belong to both Delete:bag and Delete:table simultaneously?", "Which classes are asserted to be disjoint with Delete:table?"]}]}
{"ontology": "OntoDT", "class": "Select:array", "axiom": {"subClassOf": ["dyadic select operation"], "disjointWith": ["Select:table"]}, "datatype": "Type2", "TCQ": ["What formal difference is established between Select:array and Select:table in the ontology?", "Is there any entity that can simultaneously be an instance of both Select:array and Select:table?", "Which classes in the ontology are asserted as mutually exclusive with Select:table?"], "VCQ": ["Is Select:array classified as a specific type of dyadic select operation?", "Which operations fall under the classification of dyadic select operation, including Select:array?", "To which broader operational categories does Select:array belong?", "What formal difference is established between Select:array and Select:table in the ontology?", "Is there any entity that can simultaneously be an instance of both Select:array and Select:table?", "Which classes in the ontology are asserted as mutually exclusive with Select:table?"], "Taxiom": "Select:array disjointWith Select:table", "CQ": [{"axiom": "Select:array subClassOf dyadic select operation", "CQ": ["Is Select:array classified as a specific type of dyadic select operation?", "Which operations fall under the classification of dyadic select operation, including Select:array?", "To which broader operational categories does Select:array belong?"]}, {"axiom": "Select:array disjointWith Select:table", "CQ": ["What formal difference is established between Select:array and Select:table in the ontology?", "Is there any entity that can simultaneously be an instance of both Select:array and Select:table?", "Which classes in the ontology are asserted as mutually exclusive with Select:table?"]}]}
{"ontology": "OntoDT", "class": "Select:bag", "axiom": {"subClassOf": ["monadic select operation"], "disjointWith": ["Select:set"]}, "datatype": "Type2", "TCQ": ["How does the ontology distinguish between Select:bag and Select:set?", "Is there any instance that can be classified as both Select:bag and Select:set?", "Which classes are explicitly specified as disjoint with Select:set?"], "VCQ": ["Does Select:bag fall under the broader classification of monadic select operation?", "Which monadic select operation subclasses encompass Select:bag?", "What are the higher-level categories for Select:bag within select operations?", "How does the ontology distinguish between Select:bag and Select:set?", "Is there any instance that can be classified as both Select:bag and Select:set?", "Which classes are explicitly specified as disjoint with Select:set?"], "Taxiom": "Select:bag disjointWith Select:set", "CQ": [{"axiom": "Select:bag subClassOf monadic select operation", "CQ": ["Does Select:bag fall under the broader classification of monadic select operation?", "Which monadic select operation subclasses encompass Select:bag?", "What are the higher-level categories for Select:bag within select operations?"]}, {"axiom": "Select:bag disjointWith Select:set", "CQ": ["How does the ontology distinguish between Select:bag and Select:set?", "Is there any instance that can be classified as both Select:bag and Select:set?", "Which classes are explicitly specified as disjoint with Select:set?"]}]}
{"ontology": "OntoDT", "class": "Round:scaled", "axiom": {"subClassOf": ["round operation"], "disjointWith": ["Round:time&date"]}, "datatype": "Type2", "TCQ": ["How are Round:scaled and Round:time&date conceptually separated within the ontology?", "Is any entity allowed to belong simultaneously to both Round:scaled and Round:time&date categories?", "Which classes in the ontology are specified as disjoint with Round:time&date?"], "VCQ": ["Is round operation a broader classification that includes Round:scaled as a specific type?", "Which operations are specialized forms of round operation, such as Round:scaled?", "What higher-level operation categories encompass Round:scaled?", "How are Round:scaled and Round:time&date conceptually separated within the ontology?", "Is any entity allowed to belong simultaneously to both Round:scaled and Round:time&date categories?", "Which classes in the ontology are specified as disjoint with Round:time&date?"], "Taxiom": "Round:scaled disjointWith Round:time&date", "CQ": [{"axiom": "Round:scaled subClassOf round operation", "CQ": ["Is round operation a broader classification that includes Round:scaled as a specific type?", "Which operations are specialized forms of round operation, such as Round:scaled?", "What higher-level operation categories encompass Round:scaled?"]}, {"axiom": "Round:scaled disjointWith Round:time&date", "CQ": ["How are Round:scaled and Round:time&date conceptually separated within the ontology?", "Is any entity allowed to belong simultaneously to both Round:scaled and Round:time&date categories?", "Which classes in the ontology are specified as disjoint with Round:time&date?"]}]}
{"ontology": "OntoDT", "class": "Successor:enumerated", "axiom": {"subClassOf": ["successor operation"], "disjointWith": ["Successor:ordinal"]}, "datatype": "Type2", "TCQ": ["How is the conceptual separation represented between enumerated and ordinal successors in the ontology?", "Is it allowable for an entity to be classified as both an enumerated and an ordinal successor?", "What are the defined disjoint classes for ordinal successors within the ontology?"], "VCQ": ["Is Successor:enumerated classified as a kind of successor operation?", "Which concepts fall under the category of successor operation, including enumerated successors?", "What higher-level categories encompass Successor:enumerated within the ontology?", "How is the conceptual separation represented between enumerated and ordinal successors in the ontology?", "Is it allowable for an entity to be classified as both an enumerated and an ordinal successor?", "What are the defined disjoint classes for ordinal successors within the ontology?"], "Taxiom": "Successor:enumerated disjointWith Successor:ordinal", "CQ": [{"axiom": "Successor:enumerated subClassOf successor operation", "CQ": ["Is Successor:enumerated classified as a kind of successor operation?", "Which concepts fall under the category of successor operation, including enumerated successors?", "What higher-level categories encompass Successor:enumerated within the ontology?"]}, {"axiom": "Successor:enumerated disjointWith Successor:ordinal", "CQ": ["How is the conceptual separation represented between enumerated and ordinal successors in the ontology?", "Is it allowable for an entity to be classified as both an enumerated and an ordinal successor?", "What are the defined disjoint classes for ordinal successors within the ontology?"]}]}
{"ontology": "OntoDT", "class": "ordered aggregate", "axiom": {"subClassOf": ["aggregate imposed ordering"], "disjointWith": ["unordered aggregate"]}, "datatype": "Type2", "TCQ": ["How does the ontology distinguish between ordered aggregates and unordered aggregates?", "Is there any entity that can simultaneously be classified as both an ordered aggregate and an unordered aggregate?", "Which classes are specified as incompatible with unordered aggregate in the ontology structure?"], "VCQ": ["Does ordered aggregate belong to the broader class of aggregate imposed ordering?", "What kinds of aggregates have an imposed ordering, specifically including ordered aggregates?", "Which higher-level categories encompass ordered aggregate?", "How does the ontology distinguish between ordered aggregates and unordered aggregates?", "Is there any entity that can simultaneously be classified as both an ordered aggregate and an unordered aggregate?", "Which classes are specified as incompatible with unordered aggregate in the ontology structure?"], "Taxiom": "ordered aggregate disjointWith unordered aggregate", "CQ": [{"axiom": "ordered aggregate subClassOf aggregate imposed ordering", "CQ": ["Does ordered aggregate belong to the broader class of aggregate imposed ordering?", "What kinds of aggregates have an imposed ordering, specifically including ordered aggregates?", "Which higher-level categories encompass ordered aggregate?"]}, {"axiom": "ordered aggregate disjointWith unordered aggregate", "CQ": ["How does the ontology distinguish between ordered aggregates and unordered aggregates?", "Is there any entity that can simultaneously be classified as both an ordered aggregate and an unordered aggregate?", "Which classes are specified as incompatible with unordered aggregate in the ontology structure?"]}]}
{"ontology": "OntoDT", "class": "fixed size", "axiom": {"subClassOf": ["agregate size"], "disjointWith": ["variable size"]}, "datatype": "Type2", "TCQ": ["How does the ontology distinguish between fixed size and variable size entities?", "Is it permitted for an entity to be classified as both fixed size and variable size?", "Which classes within the ontology are defined as mutually exclusive with variable size?"], "VCQ": ["Is fixed size an instance under the more general category of aggregate size?", "Which size classifications fall within the aggregate size category, including fixed size?", "What are the hierarchical parent classes of fixed size within the ontology?", "How does the ontology distinguish between fixed size and variable size entities?", "Is it permitted for an entity to be classified as both fixed size and variable size?", "Which classes within the ontology are defined as mutually exclusive with variable size?"], "Taxiom": "fixed size disjointWith variable size", "CQ": [{"axiom": "fixed size subClassOf agregate size", "CQ": ["Is fixed size an instance under the more general category of aggregate size?", "Which size classifications fall within the aggregate size category, including fixed size?", "What are the hierarchical parent classes of fixed size within the ontology?"]}, {"axiom": "fixed size disjointWith variable size", "CQ": ["How does the ontology distinguish between fixed size and variable size entities?", "Is it permitted for an entity to be classified as both fixed size and variable size?", "Which classes within the ontology are defined as mutually exclusive with variable size?"]}]}
{"ontology": "OntoDT", "class": "homogenous", "axiom": {"subClassOf": ["homogenity"], "disjointWith": ["heterogenous"]}, "datatype": "Type2", "TCQ": ["How does the ontology differentiate between homogenous and heterogenous entities?", "Is there any entity that can simultaneously belong to both homogenous and heterogenous categories?", "Which classes are explicitly specified as mutually exclusive with homogenous?"], "VCQ": ["Is homogeneity a broader classification that encompasses homogenous?", "Which specific categories fall under the general concept of homogeneity, such as homogenous?", "What overarching classes include homogenous as a more specific type?", "How does the ontology differentiate between homogenous and heterogenous entities?", "Is there any entity that can simultaneously belong to both homogenous and heterogenous categories?", "Which classes are explicitly specified as mutually exclusive with homogenous?"], "Taxiom": "homogenous disjointWith heterogenous", "CQ": [{"axiom": "homogenous subClassOf homogenity", "CQ": ["Is homogeneity a broader classification that encompasses homogenous?", "Which specific categories fall under the general concept of homogeneity, such as homogenous?", "What overarching classes include homogenous as a more specific type?"]}, {"axiom": "homogenous disjointWith heterogenous", "CQ": ["How does the ontology differentiate between homogenous and heterogenous entities?", "Is there any entity that can simultaneously belong to both homogenous and heterogenous categories?", "Which classes are explicitly specified as mutually exclusive with homogenous?"]}]}
{"ontology": "OntoDT", "class": "non-unique values", "axiom": {"subClassOf": ["uniqueness"], "disjointWith": ["unique values"]}, "datatype": "Type2", "TCQ": ["How does the ontology distinguish between non-unique values and unique values?", "Is it allowed for a value to be classified as both non-unique and unique simultaneously?", "What other types of values, if any, are defined as disjoint with unique values?"], "VCQ": ["Are non-unique values encompassed within the broader concept of uniqueness?", "What concepts are considered subclasses under uniqueness, such as non-unique values?", "To what higher-level categories does non-unique values belong according to the ontology?", "How does the ontology distinguish between non-unique values and unique values?", "Is it allowed for a value to be classified as both non-unique and unique simultaneously?", "What other types of values, if any, are defined as disjoint with unique values?"], "Taxiom": "non-unique values disjointWith unique values", "CQ": [{"axiom": "non-unique values subClassOf uniqueness", "CQ": ["Are non-unique values encompassed within the broader concept of uniqueness?", "What concepts are considered subclasses under uniqueness, such as non-unique values?", "To what higher-level categories does non-unique values belong according to the ontology?"]}, {"axiom": "non-unique values disjointWith unique values", "CQ": ["How does the ontology distinguish between non-unique values and unique values?", "Is it allowed for a value to be classified as both non-unique and unique simultaneously?", "What other types of values, if any, are defined as disjoint with unique values?"]}]}
{"ontology": "OntoDT", "class": "target record of reals field component", "axiom": {"subClassOf": ["labeled dataset target field component"], "propertyRestrictions": ["[role_of some record of real datatype]"]}, "datatype": "Type2", "TCQ": ["Is target record of reals field component classified under labeled dataset target field component?", "Which field components are considered more specific than labeled dataset target field component, such as target record of reals field component?", "To which broader categories does target record of reals field component belong?"], "VCQ": ["Must every target record of reals field component have the role_of property relating it to at least one record of real datatype?", "Is it mandatory for each target record of reals field component to participate in a role_of relationship with some instance classified as a record of real datatype?", "Can a target record of reals field component exist without having the role_of property to any record of real datatype?", "Is target record of reals field component classified under labeled dataset target field component?", "Which field components are considered more specific than labeled dataset target field component, such as target record of reals field component?", "To which broader categories does target record of reals field component belong?"], "Taxiom": "target record of reals field component subClassOf labeled dataset target field component", "CQ": [{"axiom": "target record of reals field component subClassOf labeled dataset target field component", "CQ": ["Is target record of reals field component classified under labeled dataset target field component?", "Which field components are considered more specific than labeled dataset target field component, such as target record of reals field component?", "To which broader categories does target record of reals field component belong?"]}, {"axiom": "target record of reals field component propertyRestrictions [role_of some record of real datatype]", "CQ": ["Must every target record of reals field component have the role_of property relating it to at least one record of real datatype?", "Is it mandatory for each target record of reals field component to participate in a role_of relationship with some instance classified as a record of real datatype?", "Can a target record of reals field component exist without having the role_of property to any record of real datatype?"]}]}
{"ontology": "OntoDT", "class": "descriptive record of reals field component", "axiom": {"subClassOf": ["labeled dataset descriptive field component"], "propertyRestrictions": ["[role_of some record of real datatype]"]}, "datatype": "Type2", "TCQ": ["Is every descriptive record of a reals field component required to have at least one 'role_of' relationship with a record of real datatype?", "Can a descriptive record of a reals field component exist without being related via 'role_of' to any record of real datatype?", "Does the ontology ensure that the presence of the 'role_of' property in a descriptive record of a reals field component necessarily points to an individual of type record of real datatype?"], "VCQ": ["Is descriptive record of reals field component classified under labeled dataset descriptive field component?", "Which field components are specialized forms of labeled dataset descriptive field component, such as descriptive record of reals field component?", "What broader field component categories encompass descriptive record of reals field component?", "Is every descriptive record of a reals field component required to have at least one 'role_of' relationship with a record of real datatype?", "Can a descriptive record of a reals field component exist without being related via 'role_of' to any record of real datatype?", "Does the ontology ensure that the presence of the 'role_of' property in a descriptive record of a reals field component necessarily points to an individual of type record of real datatype?"], "Taxiom": "descriptive record of reals field component propertyRestrictions [role_of some record of real datatype]", "CQ": [{"axiom": "descriptive record of reals field component subClassOf labeled dataset descriptive field component", "CQ": ["Is descriptive record of reals field component classified under labeled dataset descriptive field component?", "Which field components are specialized forms of labeled dataset descriptive field component, such as descriptive record of reals field component?", "What broader field component categories encompass descriptive record of reals field component?"]}, {"axiom": "descriptive record of reals field component propertyRestrictions [role_of some record of real datatype]", "CQ": ["Is every descriptive record of a reals field component required to have at least one 'role_of' relationship with a record of real datatype?", "Can a descriptive record of a reals field component exist without being related via 'role_of' to any record of real datatype?", "Does the ontology ensure that the presence of the 'role_of' property in a descriptive record of a reals field component necessarily points to an individual of type record of real datatype?"]}]}
{"ontology": "OntoDT", "class": "descriptive set of integer field component", "axiom": {"subClassOf": ["labeled dataset descriptive field component"], "propertyRestrictions": ["[role_of some set of integer datatype]"]}, "datatype": "Type2", "TCQ": ["Is every descriptive set of integer field component required to have at least one role_of relationship to a set of integer datatype?", "Must all descriptive sets of integer field components be assigned some role_of that connects them with a set of integer datatype?", "Does the presence of a role_of link to a set of integer datatype necessarily characterize every descriptive set of integer field component?"], "VCQ": ["Does descriptive set of integer field component fall under the category of labeled dataset descriptive field component?", "Which components qualify as more specific instances of labeled dataset descriptive field component, such as descriptive set of integer field component?", "What general types encompass descriptive set of integer field component within labeled dataset descriptive field component?", "Is every descriptive set of integer field component required to have at least one role_of relationship to a set of integer datatype?", "Must all descriptive sets of integer field components be assigned some role_of that connects them with a set of integer datatype?", "Does the presence of a role_of link to a set of integer datatype necessarily characterize every descriptive set of integer field component?"], "Taxiom": "descriptive set of integer field component propertyRestrictions [role_of some set of integer datatype]", "CQ": [{"axiom": "descriptive set of integer field component subClassOf labeled dataset descriptive field component", "CQ": ["Does descriptive set of integer field component fall under the category of labeled dataset descriptive field component?", "Which components qualify as more specific instances of labeled dataset descriptive field component, such as descriptive set of integer field component?", "What general types encompass descriptive set of integer field component within labeled dataset descriptive field component?"]}, {"axiom": "descriptive set of integer field component propertyRestrictions [role_of some set of integer datatype]", "CQ": ["Is every descriptive set of integer field component required to have at least one role_of relationship to a set of integer datatype?", "Must all descriptive sets of integer field components be assigned some role_of that connects them with a set of integer datatype?", "Does the presence of a role_of link to a set of integer datatype necessarily characterize every descriptive set of integer field component?"]}]}
{"ontology": "OntoDT", "class": "has_identifier", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": [], "inverseOf": []}, "datatype": "Type1", "TCQ": ["Which properties are considered subproperties under has_attribute?", "Is has_identifier categorized as a subproperty of has_attribute?", "Does assigning a has_identifier property inherently assign a has_attribute property as well?"], "VCQ": ["What entities can serve as the domain of the 'has_identifier' property?", "Is it correct that 'has_identifier' does not have a defined domain?", "Can 'has_identifier' relate to subjects of any type, or is its use restricted to specific classes?", "What entities can be assigned as the range for the property 'has_identifier'?", "Is it correct that the property 'has_identifier' does not specify any range?", "Can the property 'has_identifier' be associated with values of any type as its range?", "Which properties are considered subproperties under has_attribute?", "Is has_identifier categorized as a subproperty of has_attribute?", "Does assigning a has_identifier property inherently assign a has_attribute property as well?"], "Taxiom": "has_identifier subPropertyOf has_attribute", "CQ": [{"axiom": "has_identifier domain None", "CQ": ["What entities can serve as the domain of the 'has_identifier' property?", "Is it correct that 'has_identifier' does not have a defined domain?", "Can 'has_identifier' relate to subjects of any type, or is its use restricted to specific classes?"]}, {"axiom": "has_identifier range None", "CQ": ["What entities can be assigned as the range for the property 'has_identifier'?", "Is it correct that the property 'has_identifier' does not specify any range?", "Can the property 'has_identifier' be associated with values of any type as its range?"]}, {"axiom": "has_identifier subPropertyOf has_attribute", "CQ": ["Which properties are considered subproperties under has_attribute?", "Is has_identifier categorized as a subproperty of has_attribute?", "Does assigning a has_identifier property inherently assign a has_attribute property as well?"]}]}
{"ontology": "OntoDT", "class": "is_member_of", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["attribute_of"], "inverseOf": []}, "datatype": "Type1", "TCQ": ["What is the logical connection between ‘is_member_of’ and ‘has_member’ in the ontology?", "If entity A is a member of entity B, does that entail that B has member A according to the ontology?", "Which property is declared as the inverse of ‘is_member_of’?"], "VCQ": ["What entities can be the subject for the 'is_member_of' property?", "Is it correct that 'is_member_of' has no specified domain?", "Can 'is_member_of' be applied to anything, or should its domain be restricted?", "What can be the range of the property 'is_member_of'?", "Is it correct that the 'is_member_of' property does not have a defined range?", "Can 'is_member_of' relate to any type of object as its value?", "Is is_member_of included as a subproperty within attribute_of?", "What superproperties does is_member_of possess in the ontology?", "Which subproperties are defined under attribute_of?", "What is the logical connection between ‘is_member_of’ and ‘has_member’ in the ontology?", "If entity A is a member of entity B, does that entail that B has member A according to the ontology?", "Which property is declared as the inverse of ‘is_member_of’?"], "Taxiom": "is_member_of inverseOf has_member", "CQ": [{"axiom": "is_member_of domain None", "CQ": ["What entities can be the subject for the 'is_member_of' property?", "Is it correct that 'is_member_of' has no specified domain?", "Can 'is_member_of' be applied to anything, or should its domain be restricted?"]}, {"axiom": "is_member_of range None", "CQ": ["What can be the range of the property 'is_member_of'?", "Is it correct that the 'is_member_of' property does not have a defined range?", "Can 'is_member_of' relate to any type of object as its value?"]}, {"axiom": "is_member_of subPropertyOf attribute_of", "CQ": ["Is is_member_of included as a subproperty within attribute_of?", "What superproperties does is_member_of possess in the ontology?", "Which subproperties are defined under attribute_of?"]}, {"axiom": "is_member_of inverseOf has_member", "CQ": ["What is the logical connection between ‘is_member_of’ and ‘has_member’ in the ontology?", "If entity A is a member of entity B, does that entail that B has member A according to the ontology?", "Which property is declared as the inverse of ‘is_member_of’?"]}]}
{"ontology": "OntoDT", "class": "has_operation", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": [], "inverseOf": []}, "datatype": "Type1", "TCQ": ["Is every instance of has_operation necessarily an instance of has_attribute?", "Which properties are defined as subproperties under has_attribute?", "What superproperties are associated with has_operation in the ontology?"], "VCQ": ["What entities can be the subject (domain) of the property 'has_operation'?", "Is it correct that the property 'has_operation' does not have a specified domain?", "Can 'has_operation' relate any type of entity as its subject?", "What entities can be the range of the property 'has_operation'?", "Is it correct that 'has_operation' does not specify any range?", "Could any type of value be assigned as the range of 'has_operation'?", "Is every instance of has_operation necessarily an instance of has_attribute?", "Which properties are defined as subproperties under has_attribute?", "What superproperties are associated with has_operation in the ontology?"], "Taxiom": "has_operation subPropertyOf has_attribute", "CQ": [{"axiom": "has_operation domain None", "CQ": ["What entities can be the subject (domain) of the property 'has_operation'?", "Is it correct that the property 'has_operation' does not have a specified domain?", "Can 'has_operation' relate any type of entity as its subject?"]}, {"axiom": "has_operation range None", "CQ": ["What entities can be the range of the property 'has_operation'?", "Is it correct that 'has_operation' does not specify any range?", "Could any type of value be assigned as the range of 'has_operation'?"]}, {"axiom": "has_operation subPropertyOf has_attribute", "CQ": ["Is every instance of has_operation necessarily an instance of has_attribute?", "Which properties are defined as subproperties under has_attribute?", "What superproperties are associated with has_operation in the ontology?"]}]}
{"ontology": "OntoDT", "class": "has_role", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": [], "inverseOf": []}, "datatype": "Type1", "TCQ": ["Is has_role a specialization of owl:topObjectProperty?", "Which properties are classified as subproperties under owl:topObjectProperty?", "Does the assertion of has_role between entities entail a more general relationship as defined by owl:topObjectProperty?"], "VCQ": ["What types of entities can be the subject of the 'has_role' property?", "Is it accurate that the property 'has_role' does not specify a domain?", "Can 'has_role' link from any class, or should there be a defined domain?", "What types of entities can be the range of the property 'has_role'?", "Is it correct that 'has_role' does not specify any range for its values?", "Are there any restrictions on what can be assigned as the value of 'has_role'?", "Is has_role a specialization of owl:topObjectProperty?", "Which properties are classified as subproperties under owl:topObjectProperty?", "Does the assertion of has_role between entities entail a more general relationship as defined by owl:topObjectProperty?"], "Taxiom": "has_role subPropertyOf owl:topObjectProperty", "CQ": [{"axiom": "has_role domain None", "CQ": ["What types of entities can be the subject of the 'has_role' property?", "Is it accurate that the property 'has_role' does not specify a domain?", "Can 'has_role' link from any class, or should there be a defined domain?"]}, {"axiom": "has_role range None", "CQ": ["What types of entities can be the range of the property 'has_role'?", "Is it correct that 'has_role' does not specify any range for its values?", "Are there any restrictions on what can be assigned as the value of 'has_role'?"]}, {"axiom": "has_role subPropertyOf owl:topObjectProperty", "CQ": ["Is has_role a specialization of owl:topObjectProperty?", "Which properties are classified as subproperties under owl:topObjectProperty?", "Does the assertion of has_role between entities entail a more general relationship as defined by owl:topObjectProperty?"]}]}
{"ontology": "OntoDT", "class": "represents", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": [], "inverseOf": []}, "datatype": "Type1", "TCQ": ["Is represents a subproperty of any top-level object property in the ontology?", "Which properties are classified as superproperties of represents?", "Does every use of the represents property imply a relationship defined by the most general object property?"], "VCQ": ["What types of entities can serve as the domain for the property 'represents'?", "Is it appropriate for the property 'represents' to have no specified domain?", "Could the property 'represents' be used with any subject, or should its domain be restricted?", "What are the possible range classes for the property 'represents'?", "Is it correct that the property 'represents' does not have a specified range?", "Can 'represents' relate a subject to any type of object without restriction?", "Is represents a subproperty of any top-level object property in the ontology?", "Which properties are classified as superproperties of represents?", "Does every use of the represents property imply a relationship defined by the most general object property?"], "Taxiom": "represents subPropertyOf owl:topObjectProperty", "CQ": [{"axiom": "represents domain None", "CQ": ["What types of entities can serve as the domain for the property 'represents'?", "Is it appropriate for the property 'represents' to have no specified domain?", "Could the property 'represents' be used with any subject, or should its domain be restricted?"]}, {"axiom": "represents range None", "CQ": ["What are the possible range classes for the property 'represents'?", "Is it correct that the property 'represents' does not have a specified range?", "Can 'represents' relate a subject to any type of object without restriction?"]}, {"axiom": "represents subPropertyOf owl:topObjectProperty", "CQ": ["Is represents a subproperty of any top-level object property in the ontology?", "Which properties are classified as superproperties of represents?", "Does every use of the represents property imply a relationship defined by the most general object property?"]}]}
{"ontology": "OntoDT", "class": "role_of", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["owl:topObjectProperty"], "inverseOf": []}, "datatype": "Type1", "TCQ": ["How are 'role_of' and 'has_role' semantically connected as inverse properties in the ontology?", "If entity E is linked to F via 'role_of', does the ontology entail that F is connected to E via 'has_role'?", "Which property is defined as the inverse of 'role_of' in the ontology?"], "VCQ": ["What types of entities can be the subject of the property 'role_of'?", "Is there a specific class that should be considered as the domain of 'role_of'?", "Is it valid that the property 'role_of' currently does not specify a domain?", "What types of entities can serve as the range for the property 'role_of'?", "Is it correct that the property 'role_of' does not have a defined range?", "Can 'role_of' be associated with any specific type as its range?", "Does the role_of property inherit all characteristics and constraints from owl:topObjectProperty?", "Is owl:topObjectProperty a generalization (superproperty) of role_of in the ontology's property structure?", "Which subproperties are defined under owl:topObjectProperty, specifically including role_of?", "How are 'role_of' and 'has_role' semantically connected as inverse properties in the ontology?", "If entity E is linked to F via 'role_of', does the ontology entail that F is connected to E via 'has_role'?", "Which property is defined as the inverse of 'role_of' in the ontology?"], "Taxiom": "role_of inverseOf has_role", "CQ": [{"axiom": "role_of domain None", "CQ": ["What types of entities can be the subject of the property 'role_of'?", "Is there a specific class that should be considered as the domain of 'role_of'?", "Is it valid that the property 'role_of' currently does not specify a domain?"]}, {"axiom": "role_of range None", "CQ": ["What types of entities can serve as the range for the property 'role_of'?", "Is it correct that the property 'role_of' does not have a defined range?", "Can 'role_of' be associated with any specific type as its range?"]}, {"axiom": "role_of subPropertyOf owl:topObjectProperty", "CQ": ["Does the role_of property inherit all characteristics and constraints from owl:topObjectProperty?", "Is owl:topObjectProperty a generalization (superproperty) of role_of in the ontology's property structure?", "Which subproperties are defined under owl:topObjectProperty, specifically including role_of?"]}, {"axiom": "role_of inverseOf has_role", "CQ": ["How are 'role_of' and 'has_role' semantically connected as inverse properties in the ontology?", "If entity E is linked to F via 'role_of', does the ontology entail that F is connected to E via 'has_role'?", "Which property is defined as the inverse of 'role_of' in the ontology?"]}]}
{"ontology": "OntoDT", "class": "is_operation_of", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["attribute_of"], "inverseOf": []}, "datatype": "Type1", "TCQ": ["How are the properties ‘is_operation_of’ and ‘has_operation’ interconnected in the ontology?", "If an entity X is an operation of Y, does it follow that Y has operation X under the ontology’s semantics?", "Which property is designated as the inverse of ‘is_operation_of’ in this ontology?"], "VCQ": ["What can be the domain of 'is_operation_of'?", "Is it correct that the property 'is_operation_of' has no domain?", "Are there any entities that can be the subject of 'is_operation_of'?", "What entities can be in the range of the property 'is_operation_of'?", "Is it correct that the property 'is_operation_of' does not specify a range?", "Are there any restrictions on what can appear in the range position for 'is_operation_of'?", "Which properties are defined as subproperties of attribute_of?", "Is attribute_of a direct superproperty of is_operation_of within the ontology?", "Does assigning the is_operation_of property to a relationship ensure it is also an instance of attribute_of?", "How are the properties ‘is_operation_of’ and ‘has_operation’ interconnected in the ontology?", "If an entity X is an operation of Y, does it follow that Y has operation X under the ontology’s semantics?", "Which property is designated as the inverse of ‘is_operation_of’ in this ontology?"], "Taxiom": "is_operation_of inverseOf has_operation", "CQ": [{"axiom": "is_operation_of domain None", "CQ": ["What can be the domain of 'is_operation_of'?", "Is it correct that the property 'is_operation_of' has no domain?", "Are there any entities that can be the subject of 'is_operation_of'?"]}, {"axiom": "is_operation_of range None", "CQ": ["What entities can be in the range of the property 'is_operation_of'?", "Is it correct that the property 'is_operation_of' does not specify a range?", "Are there any restrictions on what can appear in the range position for 'is_operation_of'?"]}, {"axiom": "is_operation_of subPropertyOf attribute_of", "CQ": ["Which properties are defined as subproperties of attribute_of?", "Is attribute_of a direct superproperty of is_operation_of within the ontology?", "Does assigning the is_operation_of property to a relationship ensure it is also an instance of attribute_of?"]}, {"axiom": "is_operation_of inverseOf has_operation", "CQ": ["How are the properties ‘is_operation_of’ and ‘has_operation’ interconnected in the ontology?", "If an entity X is an operation of Y, does it follow that Y has operation X under the ontology’s semantics?", "Which property is designated as the inverse of ‘is_operation_of’ in this ontology?"]}]}
{"ontology": "OntoDT", "class": "has-value", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": [], "inverseOf": []}, "datatype": "Type4", "TCQ": ["Can anything be the domain of the 'has-value' property, or is its domain truly undefined?", "What can be the range of the property 'has-value'?", "Is it correct that the property 'has-value' does not have a specified domain?"], "VCQ": ["Is it correct that the property 'has-value' does not have a specified domain?", "What types of entities, if any, can act as subjects for the 'has-value' property?", "Can anything be the domain of the 'has-value' property, or is its domain truly undefined?", "What can be the range of the property 'has-value'?", "Is it correct that the property 'has-value' does not specify a range?", "Can 'has-value' relate to objects other than those with a specified range?"], "Taxiom": "None", "CQ": [{"axiom": "has-value domain None", "CQ": ["Is it correct that the property 'has-value' does not have a specified domain?", "What types of entities, if any, can act as subjects for the 'has-value' property?", "Can anything be the domain of the 'has-value' property, or is its domain truly undefined?"]}, {"axiom": "has-value range None", "CQ": ["What can be the range of the property 'has-value'?", "Is it correct that the property 'has-value' does not specify a range?", "Can 'has-value' relate to objects other than those with a specified range?"]}]}
{"ontology": "OntoDT", "class": "has_member", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["has_attribute"], "inverseOf": []}, "datatype": "Type4", "TCQ": ["Is has_member considered a specific type of has_attribute property?", "What are the direct superproperties of has_member?", "Can 'has_member' relate to any kind of entity as its object, or should there be a defined range?"], "VCQ": ["What can be the domain of the property 'has_member'?", "Is it correct that the property 'has_member' has no specified domain?", "Which types of entities can act as the subject for the property 'has_member'?", "What types of values are permitted as the range of the property 'has_member'?", "Is it correct that the property 'has_member' does not specify a range?", "Can 'has_member' relate to any kind of entity as its object, or should there be a defined range?", "Is has_member considered a specific type of has_attribute property?", "Which properties are categorized as subproperties of has_attribute?", "What are the direct superproperties of has_member?"], "Taxiom": "None", "CQ": [{"axiom": "has_member domain None", "CQ": ["What can be the domain of the property 'has_member'?", "Is it correct that the property 'has_member' has no specified domain?", "Which types of entities can act as the subject for the property 'has_member'?"]}, {"axiom": "has_member range None", "CQ": ["What types of values are permitted as the range of the property 'has_member'?", "Is it correct that the property 'has_member' does not specify a range?", "Can 'has_member' relate to any kind of entity as its object, or should there be a defined range?"]}, {"axiom": "has_member subPropertyOf has_attribute", "CQ": ["Is has_member considered a specific type of has_attribute property?", "Which properties are categorized as subproperties of has_attribute?", "What are the direct superproperties of has_member?"]}]}
{"ontology": "OntoDT", "class": "attribute_of", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": [], "inverseOf": []}, "datatype": "Type4", "TCQ": ["Can 'attribute_of' be associated with values of any type as its object?", "Is it correct that the property 'attribute_of' does not have a specified range?", "Can 'attribute_of' relate to any type of subject, or is there a restriction on its domain?"], "VCQ": ["What are the possible domains for the property 'attribute_of'?", "Is it correct that the property 'attribute_of' does not have a specified domain?", "Can 'attribute_of' relate to any type of subject, or is there a restriction on its domain?", "What kinds of entities can be the range of the property 'attribute_of'?", "Is it correct that the property 'attribute_of' does not have a specified range?", "Can 'attribute_of' be associated with values of any type as its object?"], "Taxiom": "None", "CQ": [{"axiom": "attribute_of domain None", "CQ": ["What are the possible domains for the property 'attribute_of'?", "Is it correct that the property 'attribute_of' does not have a specified domain?", "Can 'attribute_of' relate to any type of subject, or is there a restriction on its domain?"]}, {"axiom": "attribute_of range None", "CQ": ["What kinds of entities can be the range of the property 'attribute_of'?", "Is it correct that the property 'attribute_of' does not have a specified range?", "Can 'attribute_of' be associated with values of any type as its object?"]}]}
{"ontology": "OntoDT", "class": "owl:topObjectProperty", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": [], "inverseOf": []}, "datatype": "Type4", "TCQ": ["What entities can serve as the domain for owl:topObjectProperty?", "What can be the range of the property 'owl:topObjectProperty'?", "Is it valid for owl:topObjectProperty to lack a specified domain?"], "VCQ": ["Is it valid for owl:topObjectProperty to lack a specified domain?", "What entities can serve as the domain for owl:topObjectProperty?", "Are there restrictions on the types of subjects that owl:topObjectProperty can be used with?", "What can be the range of the property 'owl:topObjectProperty'?", "Is it correct that 'owl:topObjectProperty' has no specified range?", "Can 'owl:topObjectProperty' relate to any type of object as its range?"], "Taxiom": "None", "CQ": [{"axiom": "owl:topObjectProperty domain None", "CQ": ["Is it valid for owl:topObjectProperty to lack a specified domain?", "What entities can serve as the domain for owl:topObjectProperty?", "Are there restrictions on the types of subjects that owl:topObjectProperty can be used with?"]}, {"axiom": "owl:topObjectProperty range None", "CQ": ["What can be the range of the property 'owl:topObjectProperty'?", "Is it correct that 'owl:topObjectProperty' has no specified range?", "Can 'owl:topObjectProperty' relate to any type of object as its range?"]}]}
{"ontology": "OntoDT", "class": "is-about", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["owl:topObjectProperty"], "inverseOf": []}, "datatype": "Type2", "TCQ": ["Is is-about classified as a subproperty of owl:topObjectProperty?", "Which superproperties are associated with is-about in the ontology?", "What subproperties, if any, are defined under owl:topObjectProperty?"], "VCQ": ["What types of entities can serve as the domain for the property 'is-about'?", "Should the property 'is-about' be restricted to a specific domain, or is it intended to have no domain?", "Is it correct that 'is-about' does not specify any domain?", "What entities can be the range of the property 'is-about'?", "Is it valid for the property 'is-about' to have no specified range?", "Can 'is-about' have a range other than the currently undefined range?", "Is is-about classified as a subproperty of owl:topObjectProperty?", "Which superproperties are associated with is-about in the ontology?", "What subproperties, if any, are defined under owl:topObjectProperty?"], "Taxiom": "is-about subPropertyOf owl:topObjectProperty", "CQ": [{"axiom": "is-about domain None", "CQ": ["What types of entities can serve as the domain for the property 'is-about'?", "Should the property 'is-about' be restricted to a specific domain, or is it intended to have no domain?", "Is it correct that 'is-about' does not specify any domain?"]}, {"axiom": "is-about range None", "CQ": ["What entities can be the range of the property 'is-about'?", "Is it valid for the property 'is-about' to have no specified range?", "Can 'is-about' have a range other than the currently undefined range?"]}, {"axiom": "is-about subPropertyOf owl:topObjectProperty", "CQ": ["Is is-about classified as a subproperty of owl:topObjectProperty?", "Which superproperties are associated with is-about in the ontology?", "What subproperties, if any, are defined under owl:topObjectProperty?"]}]}
{"ontology": "OntoDT", "class": "is_quality_of", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": [], "inverseOf": ["has_quality"]}, "datatype": "Type2", "TCQ": ["What is the logical connection between ‘is_quality_of’ and ‘has_quality’ as defined in the ontology?", "If entity A is related to entity B via ‘is_quality_of’, does this entail that B is related to A via ‘has_quality’?", "Which object property is specified as the inverse of ‘is_quality_of’ in the ontology?"], "VCQ": ["What entities can serve as the domain of the property 'is_quality_of'?", "Is it accurate that the property 'is_quality_of' has no specified domain?", "Are there any classes that are explicitly defined as subjects of 'is_quality_of'?", "What kinds of entities can be the range of the property 'is_quality_of'?", "Is it correct that the property 'is_quality_of' does not have a defined range?", "Can 'is_quality_of' relate to entities of any type as its object?", "What is the logical connection between ‘is_quality_of’ and ‘has_quality’ as defined in the ontology?", "If entity A is related to entity B via ‘is_quality_of’, does this entail that B is related to A via ‘has_quality’?", "Which object property is specified as the inverse of ‘is_quality_of’ in the ontology?"], "Taxiom": "is_quality_of inverseOf has_quality", "CQ": [{"axiom": "is_quality_of domain None", "CQ": ["What entities can serve as the domain of the property 'is_quality_of'?", "Is it accurate that the property 'is_quality_of' has no specified domain?", "Are there any classes that are explicitly defined as subjects of 'is_quality_of'?"]}, {"axiom": "is_quality_of range None", "CQ": ["What kinds of entities can be the range of the property 'is_quality_of'?", "Is it correct that the property 'is_quality_of' does not have a defined range?", "Can 'is_quality_of' relate to entities of any type as its object?"]}, {"axiom": "is_quality_of inverseOf has_quality", "CQ": ["What is the logical connection between ‘is_quality_of’ and ‘has_quality’ as defined in the ontology?", "If entity A is related to entity B via ‘is_quality_of’, does this entail that B is related to A via ‘has_quality’?", "Which object property is specified as the inverse of ‘is_quality_of’ in the ontology?"]}]}
{"ontology": "OntoDT", "class": "identifier_for", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["attribute_of"], "inverseOf": ["has_identifier"]}, "datatype": "Type2", "TCQ": ["What is the logical correspondence between the properties ‘identifier_for’ and ‘has_identifier’ in the ontology?", "If entity A is identified by B using ‘identifier_for’, does it follow that B has A as an identifier via ‘has_identifier’?", "Which property operates as the inverse of ‘identifier_for’ in this ontology?"], "VCQ": ["What entities can serve as the domain for the property 'identifier_for'?", "Is it correct that the property 'identifier_for' lacks a specified domain?", "Are there any recommended domain classes for the 'identifier_for' property?", "What types of entities can serve as the range for the property 'identifier_for'?", "Is it correct that the property 'identifier_for' has no specified range?", "Could any value be used as the range of 'identifier_for' or are there constraints?", "Does the property identifier_for qualify as a more specific type of attribute_of within the ontology?", "Which properties are considered subproperties of attribute_of in the current ontology scope?", "Is attribute_of defined as a direct superproperty of identifier_for?", "What is the logical correspondence between the properties ‘identifier_for’ and ‘has_identifier’ in the ontology?", "If entity A is identified by B using ‘identifier_for’, does it follow that B has A as an identifier via ‘has_identifier’?", "Which property operates as the inverse of ‘identifier_for’ in this ontology?"], "Taxiom": "identifier_for inverseOf has_identifier", "CQ": [{"axiom": "identifier_for domain None", "CQ": ["What entities can serve as the domain for the property 'identifier_for'?", "Is it correct that the property 'identifier_for' lacks a specified domain?", "Are there any recommended domain classes for the 'identifier_for' property?"]}, {"axiom": "identifier_for range None", "CQ": ["What types of entities can serve as the range for the property 'identifier_for'?", "Is it correct that the property 'identifier_for' has no specified range?", "Could any value be used as the range of 'identifier_for' or are there constraints?"]}, {"axiom": "identifier_for subPropertyOf attribute_of", "CQ": ["Does the property identifier_for qualify as a more specific type of attribute_of within the ontology?", "Which properties are considered subproperties of attribute_of in the current ontology scope?", "Is attribute_of defined as a direct superproperty of identifier_for?"]}, {"axiom": "identifier_for inverseOf has_identifier", "CQ": ["What is the logical correspondence between the properties ‘identifier_for’ and ‘has_identifier’ in the ontology?", "If entity A is identified by B using ‘identifier_for’, does it follow that B has A as an identifier via ‘has_identifier’?", "Which property operates as the inverse of ‘identifier_for’ in this ontology?"]}]}
{"ontology": "OntoDT", "class": "has_quality", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["owl:topObjectProperty"], "inverseOf": []}, "datatype": "Type2", "TCQ": ["Is has_quality a subproperty of owl:topObjectProperty?", "Which properties are subproperties of owl:topObjectProperty?", "What superproperties does has_quality have within the property hierarchy?"], "VCQ": ["What kinds of entities can act as the subject for the property 'has_quality'?", "Is it correct that 'has_quality' does not have a specified domain in the ontology?", "Are there potential classes that should be recognized as the domain for 'has_quality'?", "Is it correct that the property 'has_quality' does not have a specified range?", "What classifications are allowed to be the range for the property 'has_quality'?", "Can any type of entity serve as the range for the 'has_quality' property?", "Is has_quality a subproperty of owl:topObjectProperty?", "Which properties are subproperties of owl:topObjectProperty?", "What superproperties does has_quality have within the property hierarchy?"], "Taxiom": "has_quality subPropertyOf owl:topObjectProperty", "CQ": [{"axiom": "has_quality domain None", "CQ": ["What kinds of entities can act as the subject for the property 'has_quality'?", "Is it correct that 'has_quality' does not have a specified domain in the ontology?", "Are there potential classes that should be recognized as the domain for 'has_quality'?"]}, {"axiom": "has_quality range None", "CQ": ["Is it correct that the property 'has_quality' does not have a specified range?", "What classifications are allowed to be the range for the property 'has_quality'?", "Can any type of entity serve as the range for the 'has_quality' property?"]}, {"axiom": "has_quality subPropertyOf owl:topObjectProperty", "CQ": ["Is has_quality a subproperty of owl:topObjectProperty?", "Which properties are subproperties of owl:topObjectProperty?", "What superproperties does has_quality have within the property hierarchy?"]}]}
{"ontology": "OntoDT", "class": "has_attribute", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["owl:topObjectProperty"], "inverseOf": ["has_attribute"]}, "datatype": "Type2", "TCQ": ["What is the inverse property associated with ‘has_attribute’ defined in the ontology?", "If entity A has an attribute B, can we infer that B has an attribute A within the ontology’s structure?", "How does the ontology specify the logical connection between ‘has_attribute’ and its inverse?"], "VCQ": ["Is it correct that the property 'has_attribute' has no specified domain?", "What possible domains could be associated with the property 'has_attribute'?", "Can 'has_attribute' be used with any type of subject without domain restrictions?", "What can be the range of the property 'has_attribute'?", "Is it correct that 'has_attribute' has no defined range?", "Can values associated with 'has_attribute' be of any type?", "Is has_attribute considered a specialized form of owl:topObjectProperty?", "What superproperties are associated with has_attribute in the ontology?", "Which subproperties does owl:topObjectProperty encompass, including has_attribute?", "What is the inverse property associated with ‘has_attribute’ defined in the ontology?", "If entity A has an attribute B, can we infer that B has an attribute A within the ontology’s structure?", "How does the ontology specify the logical connection between ‘has_attribute’ and its inverse?"], "Taxiom": "has_attribute inverseOf has_attribute", "CQ": [{"axiom": "has_attribute domain None", "CQ": ["Is it correct that the property 'has_attribute' has no specified domain?", "What possible domains could be associated with the property 'has_attribute'?", "Can 'has_attribute' be used with any type of subject without domain restrictions?"]}, {"axiom": "has_attribute range None", "CQ": ["What can be the range of the property 'has_attribute'?", "Is it correct that 'has_attribute' has no defined range?", "Can values associated with 'has_attribute' be of any type?"]}, {"axiom": "has_attribute subPropertyOf owl:topObjectProperty", "CQ": ["Is has_attribute considered a specialized form of owl:topObjectProperty?", "What superproperties are associated with has_attribute in the ontology?", "Which subproperties does owl:topObjectProperty encompass, including has_attribute?"]}, {"axiom": "has_attribute inverseOf has_attribute", "CQ": ["What is the inverse property associated with ‘has_attribute’ defined in the ontology?", "If entity A has an attribute B, can we infer that B has an attribute A within the ontology’s structure?", "How does the ontology specify the logical connection between ‘has_attribute’ and its inverse?"]}]}
{"ontology": "OntoDT", "class": "denotes", "axiom": {"characteristics": [], "domain": ["None"], "range": ["None"], "subPropertyOf": ["is-about"], "inverseOf": []}, "datatype": "Type2", "TCQ": ["Which properties are defined as subproperties under is-about, such as denotes?", "Does an assertion using denotes also satisfy constraints requiring is-about?", "What superproperties are associated with denotes in the ontology hierarchy?"], "VCQ": ["What can be the domain of the property 'denotes'?", "Is it correct that the property 'denotes' does not specify a domain?", "Are there any entities that should not be used as the subject of the property 'denotes'?", "Is it correct that the property 'denotes' does not specify a range?", "What kinds of entities can 'denotes' refer to, given its unspecified range?", "Can 'denotes' relate to an object of any type as its target?", "Which properties are defined as subproperties under is-about, such as denotes?", "Does an assertion using denotes also satisfy constraints requiring is-about?", "What superproperties are associated with denotes in the ontology hierarchy?"], "Taxiom": "denotes subPropertyOf is-about", "CQ": [{"axiom": "denotes domain None", "CQ": ["What can be the domain of the property 'denotes'?", "Is it correct that the property 'denotes' does not specify a domain?", "Are there any entities that should not be used as the subject of the property 'denotes'?"]}, {"axiom": "denotes range None", "CQ": ["Is it correct that the property 'denotes' does not specify a range?", "What kinds of entities can 'denotes' refer to, given its unspecified range?", "Can 'denotes' relate to an object of any type as its target?"]}, {"axiom": "denotes subPropertyOf is-about", "CQ": ["Which properties are defined as subproperties under is-about, such as denotes?", "Does an assertion using denotes also satisfy constraints requiring is-about?", "What superproperties are associated with denotes in the ontology hierarchy?"]}]}
