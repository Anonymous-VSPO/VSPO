{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveLoadAssessment\nDescription: CognitiveLoadAssessment is defined as a subclass of ExperimentalAssessment, representing a specific type of assessment dedicated to measuring cognitive load in experimental contexts. Members of this class are characterized by having exactly one dual task score and exactly one mono task score, with both scores required to be data literals. This formalization ensures that each instance of CognitiveLoadAssessment includes precisely one measurable outcome for both mono-task and dual-task conditions, facilitating standardized evaluation and comparison of cognitive load across assessments.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasDualTaskScore exactly 1]', '[hasMonoTaskScore only rdfs:Literal]', '[hasDualTaskScore only rdfs:Literal]']}\nGenerated CQs:", "output": "Is it required that a CognitiveLoadAssessment is associated with exactly one mono task score? | Can a CognitiveLoadAssessment have more than one value for the hasMonoTaskScore property? | Does every CognitiveLoadAssessment instance have one and only one hasMonoTaskScore assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ActivityStatusType\nDescription: ActivityStatusType is defined as a subclass of Type and is equivalent to the set containing the statuses: omitted, completed, and incomplete. This means that any instance of ActivityStatusType must be one of these three specific statuses, providing a controlled vocabulary for representing the status of an activity.\nAxiom: {'subClassOf': [], 'equivalentClass': ['{omitted, completed, incomplete}']}\nGenerated CQs:", "output": "Is ActivityStatusType classified under the broader category of Type? | Which types encompass ActivityStatusType as a more specific subtype? | What specific categories fall within the scope of Type, including ActivityStatusType? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiagnosisType\nDescription: DiagnosisType is defined as a subclass of Type, and is equivalent to the set containing exactly three classes: predementia, dementia, and healthy. This means that any individual classified as a DiagnosisType must be either predementia, dementia, or healthyâ€”no other categories are permitted. This formalization ensures a closed, mutually-exclusive categorization of diagnostic statuses within the ontology.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': []}\nGenerated CQs:", "output": "Is every DiagnosisType necessarily either predementia, dementia, or healthy? | Is DiagnosisType defined as the union of predementia, dementia, and healthy categories? | Can any instance exist in DiagnosisType that is not classified as predementia, dementia, or healthy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LateralityType\nDescription: LateralityType is a subclass of Type, characterized as an enumerated class consisting exclusively of the instances 'left_handed' and 'right_handed'. Any instance of LateralityType must be either 'left_handed' or 'right_handed', capturing the concept of handedness in individuals.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': []}\nGenerated CQs:", "output": "Is every instance of LateralityType restricted to being either left_handed or right_handed? | Is LateralityType equivalent to the set containing only left_handed and right_handed individuals? | Are there any LateralityType entities besides left_handed and right_handed? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NeuropsychiatricAndMoodAssessment\nDescription: NeuropsychiatricAndMoodAssessment is defined as a subclass of ClinicalAssessment. Members of this class are characterized by the mandatory presence of exactly one value for each of the following properties: npi (Neuropsychiatric Inventory), dsm_ivDepressionCriteria, and apathyInventory, each being of type xsd:string. Furthermore, these properties cannot have values outside the string datatype. This formalization ensures that any individual instance of NeuropsychiatricAndMoodAssessment contains exactly and only one string value for each of these assessment criteria, supporting precise and consistent neuropsychiatric and mood evaluation.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[npi only xsd:string]', '[npi exactly 1 xsd:string]', '[dsm_ivDepressionCriteria exactly 1 xsd:string]', '[dsm_ivDepressionCriteria only xsd:string]', '[apathyInventory only xsd:string]']}\nGenerated CQs:", "output": "Is it required that a NeuropsychiatricAndMoodAssessment has exactly one value for the apathyInventory property? | Can a NeuropsychiatricAndMoodAssessment include more than one apathyInventory, or none at all? | Does the axiom restrict NeuropsychiatricAndMoodAssessment to having a single apathyInventory entry represented as a string? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FunctionalAbilitiesData\nDescription: FunctionalAbilitiesData is a subclass of MeasuredData, characterized by having exactly one handTrajectory property, which must be of type HandTrajectoryType. All values for handTrajectory in instances of this class are restricted to HandTrajectoryType, ensuring that each FunctionalAbilitiesData instance is associated with a single, specific hand trajectory measurement.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[handTrajectory only HandTrajectoryType]']}\nGenerated CQs:", "output": "Is each FunctionalAbilitiesData instance required to have exactly one value for the property 'handTrajectory' of type HandTrajectoryType? | Can a FunctionalAbilitiesData entity be associated with more than one HandTrajectoryType through the 'handTrajectory' property? | Does the ontology permit a FunctionalAbilitiesData instance to have no assigned value for 'handTrajectory'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OrganisationEfficiencyData\nDescription: OrganisationEfficiencyData is a subclass of MeasuredData representing measured values related to organizational efficiency. Every instance of this class must have exactly one value each for distanceWalked, areasOfInterestExplored, and areasOfNoInterestExplored, and all of these values must be literals. This class structurally enforces that the data captured is precisely quantified for these three efficiency-related attributes.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[areasOfInterestExplored only rdfs:Literal]', '[areasOfNoInterestExplored only rdfs:Literal]', '[areasOfNoInterestExplored exactly 1]', '[areasOfInterestExplored exactly 1]', '[distanceWalked exactly 1]']}\nGenerated CQs:", "output": "Is OrganisationEfficiencyData restricted to having the property distanceWalked only with instances of rdfs:Literal? | Can OrganisationEfficiencyData possess a distanceWalked value that is not an rdfs:Literal? | Are all distanceWalked properties of OrganisationEfficiencyData necessarily of type rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SemiDirectedTask\nDescription: SemiDirectedTask is a subclass of Task characterized by the measurement of at least some FunctionalAbilitiesData and some CognitiveAbilitiesData. Additionally, any measuredData associated with a SemiDirectedTask must be exclusively of types CognitiveAbilitiesData, FunctionalAbilitiesData, or StressDataâ€”no other data types are permitted. This formalization ensures that tasks within this class are specifically designed to evaluate both cognitive and functional abilities, potentially including stress indicators, thereby aligning with their defined assessment scope.\nAxiom: {'subClassOf': ['Task'], 'propertyRestrictions': ['[measuredData some CognitiveAbilitiesData]', '[measuredData only (CognitiveAbilitiesData or FunctionalAbilitiesData or StressData)]']}\nGenerated CQs:", "output": "Does every SemiDirectedTask require the presence of at least one measuredData instance of type FunctionalAbilitiesData? | Is it obligatory for a SemiDirectedTask to be associated with FunctionalAbilitiesData via the measuredData property? | Can a SemiDirectedTask exist without having any measuredData that qualify as FunctionalAbilitiesData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PersonWithPredementia\nDescription: PersonWithPredementia is defined as a subclass of Person and is equivalent to those individuals who have at least one clinical record containing an assessment that diagnoses predementia. This formalization ensures that any member of the PersonWithPredementia class must be associated with a clinical record documenting a diagnosis assessment explicitly identifying predementia, thus providing a clear ontological basis for representing individuals in early stages of cognitive decline.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': []}\nGenerated CQs:", "output": "Does every PersonWithPredementia necessarily have at least one record that contains a diagnosis assessment for predementia? | Is PersonWithPredementia logically equivalent to having a clinical record that includes an assessment component with a predementia diagnosis? | Can PersonWithPredementia be fully defined as someone with a clinical record documenting an assessment that diagnoses predementia? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S2_SemiDirectedActivitiesStep\nDescription: S2_SemiDirectedActivitiesStep is defined as a subclass of ProtocolStep. Any instance of this class must involve exactly one of each of the following tasks: TurnOnTVTask, WaterPlantTask, PrepareHotTeaTask, CallPsychologistTask, AnswerPhoneTask, FindBusLineOnMapTask, PayBillTask, EstablishAccountBalanceTask, LeaveRoomTask, and PrepareDrugBoxTask. Furthermore, the tasks involved are restricted to the following types: AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask. This formalization ensures that any S2_SemiDirectedActivitiesStep is a uniquely structured protocol step composed of this specific set of semi-directed activities.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask exactly 1 TurnOnTVTask]', '[involvesTask exactly 1 PrepareHotTeaTask]', '[involvesTask exactly 1 CallPsychologistTask]', '[involvesTask exactly 1 AnswerPhoneTask]', '[involvesTask exactly 1 FindBusLineOnMapTask]', '[involvesTask only (AnswerPhoneTask or CallPsychologistTask or EstablishAccountBalanceTask or FindBusLineOnMapTask or LeaveRoomTask or PayBillTask or PrepareDrugBoxTask or PrepareHotTeaTask or Task or TurnOnTVTask or WaterPlantTask)]', '[involvesTask exactly 1 PayBillTask]', '[involvesTask exactly 1 EstablishAccountBalanceTask]', '[involvesTask exactly 1 LeaveRoomTask]', '[involvesTask exactly 1 PrepareDrugBoxTask]']}\nGenerated CQs:", "output": "Is it required that an S2_SemiDirectedActivitiesStep involves exactly one WaterPlantTask? | Can an S2_SemiDirectedActivitiesStep include more or less than one WaterPlantTask through the involvesTask property? | Does the cardinality restriction on involvesTask for S2_SemiDirectedActivitiesStep exclude the possibility of multiple or zero WaterPlantTask instances? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P12_CountingBackwardsTask\nDescription: S1_P12_CountingBackwardsTask is a subclass of DirectedTask characterized by specific measurement and property constraints. Every instance of this class must have measured data that includes some LatencyData and some MoodVoiceData. Additionally, measured data associated with this task may only be of the types LatencyData, MoodVoiceData, or StressData. The countingType property for individuals in this class is restricted to either _20_0 or _305_285. These axioms ensure that S1_P12_CountingBackwardsTask is a directed task that involves recording response latency, mood/voice indicators, and potentially stress, with a clearly defined range of permissible counting types.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (LatencyData or MoodVoiceData or StressData)]', '[countingType only {_20_0, _305_285}]', '[measuredData some MoodVoiceData]']}\nGenerated CQs:", "output": "Is it required that the S1_P12_CountingBackwardsTask has at least one measuredData property associated with LatencyData? | Must every instance of S1_P12_CountingBackwardsTask involve measuredData relating specifically to LatencyData? | Can S1_P12_CountingBackwardsTask exist without any measuredData property referring to LatencyData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P22_ArticulationControlTask\nDescription: S1_P22_ArticulationControlTask is defined as a subclass of DirectedTask. Members of this class are required to have at least one measuredData property linked to LatencyData, and all measuredData properties must be restricted to either LatencyData or StressData. This ensures that any instance of S1_P22_ArticulationControlTask is characterized by the measurement of latency and/or stress data, with no other data types permitted for the measuredData property.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (LatencyData or StressData)]']}\nGenerated CQs:", "output": "Is it required that an instance of S1_P22_ArticulationControlTask has at least one measuredData property relating to LatencyData? | Does every S1_P22_ArticulationControlTask involve measuredData that includes LatencyData? | Can a S1_P22_ArticulationControlTask exist without any measuredData associated with LatencyData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DemographicCharacteristicsRecord\nDescription: DemographicCharacteristicsRecord is a class characterized by strict property constraints to ensure comprehensive demographic data representation. Each instance must have exactly one dateOfBirth value of type xsd:dateTime, exactly one gender value of type GenderType, and exactly one educationLevel value of type rdfs:Literal. Additionally, each record must specify exactly one size (as a rdfs:Literal), and may optionally include laterality, restricted to values defined by LateralityType. These axioms ensure that every record is complete with respect to core demographic attributes while maintaining precise data types and cardinality for each property.\nAxiom: {'propertyRestrictions': ['[dateOfBirth only xsd:dateTime]', '[gender only GenderType]', '[laterality only LateralityType]', '[size exactly 1]', '[educationLevel only rdfs:Literal]', '[educationLevel exactly 1]', '[gender exactly 1 GenderType]', '[dateOfBirth exactly 1 xsd:dateTime]']}\nGenerated CQs:", "output": "Are all values of the 'size' property in a DemographicCharacteristicsRecord restricted to rdfs:Literal types? | Is it allowed for a DemographicCharacteristicsRecord to have a 'size' property with a type other than rdfs:Literal? | Does every 'size' property for DemographicCharacteristicsRecord necessarily correspond to an rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protocol\nDescription: Protocol is a class that represents a structured set of actions or procedures, characterized by a well-defined workflow. Each instance of Protocol must have at least one protocol step and all protocol steps associated with a protocol must be instances of ProtocolStep. Additionally, every protocol is required to specify exactly one date, which must be an instance of xsd:dateTime, and exactly one participant, who must be an instance of Person. The axioms ensure strict adherence to these requirements, supporting precise modeling of procedural activities involving a single documented participant, a single date, and one or more procedural steps.\nAxiom: {'propertyRestrictions': ['[protocolStep some ProtocolStep]', '[protocolStep only ProtocolStep]', '[date exactly 1 xsd:dateTime]', '[hasParticipant exactly 1 Person]', '[hasParticipant only Person]']}\nGenerated CQs:", "output": "Is the date property of a Protocol instance restricted exclusively to values of type xsd:dateTime? | Can a Protocol have the date property with any value that is not an xsd:dateTime? | Are all instances of Protocol required to use only xsd:dateTime typed values for their date property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AbilityToOrganiseAssessment\nDescription: AbilityToOrganiseAssessment is defined as a subclass of ExperimentalAssessment. This means that every AbilityToOrganiseAssessment is an instance of ExperimentalAssessment, inheriting all its general characteristics. This class specifically represents assessments focusing on the capacity to organise or structure experimental tasks or processes. No further property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Which categories of ExperimentalAssessment encompass AbilityToOrganiseAssessment as a specific type? | Is AbilityToOrganiseAssessment classified as a kind of ExperimentalAssessment? | What are the more specific assessment abilities that fall under ExperimentalAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ApathyAssessment\nDescription: ApathyAssessment is defined as a subclass of ExperimentalAssessment. This means that every ApathyAssessment is a specific type of ExperimentalAssessment, inheriting all characteristics of the latter. It is used to systematically evaluate or measure apathy within an experimental or research context.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Which broader assessment classes does ApathyAssessment fall under? | What are the types of assessments classified under ExperimentalAssessment, including ApathyAssessment? | Is ApathyAssessment categorized as a form of ExperimentalAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FunctionalAbilityAssessment\nDescription: FunctionalAbilityAssessment is defined as a subclass of ExperimentalAssessment. This means every FunctionalAbilityAssessment is also an ExperimentalAssessment, inheriting its characteristics. No further restrictions or disjointness axioms are specified, so FunctionalAbilityAssessment can be understood as a specialized form of ExperimentalAssessment focused on evaluating functional abilities.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Is FunctionalAbilityAssessment categorized under ExperimentalAssessment? | What types of assessments fall within ExperimentalAssessment, including FunctionalAbilityAssessment? | Which parent classes encompass FunctionalAbilityAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MemorySelfAppraisalAssessment\nDescription: MemorySelfAppraisalAssessment is defined as a subclass of ExperimentalAssessment. This means it represents a specific type of assessment conducted in an experimental context, which focuses on evaluating an individual's own appraisal or judgement of their memory abilities. Members of this class inherit all characteristics of ExperimentalAssessment, while emphasizing the self-evaluation of memory performance.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Is MemorySelfAppraisalAssessment classified under the broader category of ExperimentalAssessment? | Which overarching assessment categories include MemorySelfAppraisalAssessment as a member? | What specific types of ExperimentalAssessment does MemorySelfAppraisalAssessment represent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StressAssessment\nDescription: StressAssessment is defined as a subclass of ExperimentalAssessment, indicating it inherits all properties of ExperimentalAssessment. This class represents assessments specifically designed to evaluate stress within an experimental context. No additional property restrictions or disjointness axioms are specified, so it can encompass any form of assessment fitting this criterion.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Which types of assessments are categorized as subkinds of ExperimentalAssessment, such as StressAssessment? | Is StressAssessment classified under the broader type of ExperimentalAssessment? | To what higher-level assessment classes does StressAssessment belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HandTrajectoryType\nDescription: HandTrajectoryType is defined as a subclass of Type. This class represents a specific categorization or kind of type that pertains to hand trajectory, inheriting all characteristics of Type. No additional axioms or restrictions are specified.\nAxiom: {'subClassOf': ['Type']}\nGenerated CQs:", "output": "What categories encompass HandTrajectoryType as a member, given its position under Type? | Which concepts are directly organized under the class Type, including HandTrajectoryType? | Is HandTrajectoryType classified as a more specific concept under Type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnswerPhoneTask\nDescription: AnswerPhoneTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks but is specialized for the context of answering phone calls. This classification asserts that every instance of AnswerPhoneTask is also an instance of SemiDirectedTask, typically involving user interaction with some degree of guidance but not complete direction. No additional property or disjointness axioms are specified.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Which higher-level task types include AnswerPhoneTask as a specialization? | What specific tasks are encompassed by the category SemiDirectedTask, such as AnswerPhoneTask? | Does AnswerPhoneTask fall under the broader classification of SemiDirectedTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CallPsychologistTask\nDescription: CallPsychologistTask is defined as a subclass of SemiDirectedTask. This classification indicates that any instance of CallPsychologistTask inherits all properties of SemiDirectedTask, representing a specific type of task that involves some level of pre-defined guidance or structure. No additional distinguishing properties or constraints are specified beyond its membership in the SemiDirectedTask category.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Is CallPsychologistTask classified as a kind of SemiDirectedTask? | What broader task types encompass CallPsychologistTask? | Which specific tasks are categorized under SemiDirectedTask, including CallPsychologistTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EstablishAccountBalanceTask\nDescription: EstablishAccountBalanceTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all properties and constraints of SemiDirectedTask. This class represents tasks specifically related to establishing or determining an account balance, and it is semantically positioned within the ontology as a type of semi-directed task. No further restrictions or differentiators are specified in the current axioms.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Which tasks are defined as more specific than SemiDirectedTask, including EstablishAccountBalanceTask? | Is EstablishAccountBalanceTask a specialized form of SemiDirectedTask? | What broader task categories include EstablishAccountBalanceTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FindBusLineOnMapTask\nDescription: FindBusLineOnMapTask is defined as a subclass of SemiDirectedTask. This indicates that any instance of FindBusLineOnMapTask inherits the characteristics of a semi-directed task, which typically involves guidance but allows for a degree of user autonomy. The class is intended to represent tasks in which the objective is to locate a specific bus line on a map interface.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Does FindBusLineOnMapTask fall under the broader classification of SemiDirectedTask? | What are the general task categories that FindBusLineOnMapTask is associated with? | Which tasks are categorized as specialized forms of SemiDirectedTask, specifically including FindBusLineOnMapTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeaveRoomTask\nDescription: LeaveRoomTask is defined as a subclass of SemiDirectedTask. This means that every LeaveRoomTask must fulfill all the characteristics of a SemiDirectedTask, but it represents a more specific type of task centered on the activity of leaving a room. No additional restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "What higher-level task categories include LeaveRoomTask as a member? | Is LeaveRoomTask categorized as a type of SemiDirectedTask? | Which specific tasks fall under the broader classification of SemiDirectedTask, including LeaveRoomTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PayBillTask\nDescription: PayBillTask is defined as a subclass of SemiDirectedTask, indicating it represents a specific type of task that involves partial direction or guidance in execution. No additional axioms are specified, so PayBillTask inherits all the general properties and constraints associated with SemiDirectedTask, and further characterizes tasks that involve the process of paying a bill.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Is PayBillTask classified as a more specific type under the umbrella of SemiDirectedTask? | To which higher-level task categories is PayBillTask hierarchically connected? | What are all the tasks that fall under the SemiDirectedTask category, including PayBillTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareDrugBoxTask\nDescription: PrepareDrugBoxTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks. Individuals classified under PrepareDrugBoxTask represent tasks involving the preparation of drug boxes, and these tasks exhibit the general properties and constraints established for semi-directed tasks within the ontology. No additional restrictions or properties are specified beyond its subclass relationship.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Is PrepareDrugBoxTask categorized as a form of SemiDirectedTask? | What tasks are classified under SemiDirectedTask, including PrepareDrugBoxTask? | Which higher-level task categories does PrepareDrugBoxTask belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareHotTeaTask\nDescription: PrepareHotTeaTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks. This class represents activities or processes specifically related to the preparation of hot tea, encompassing all steps that are partially guided yet allow for some flexibility in execution. There are currently no additional restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Which tasks fall under the category of SemiDirectedTask, such as PrepareHotTeaTask? | Is PrepareHotTeaTask recognized as a specialized form of SemiDirectedTask? | What are the broader categories encompassing PrepareHotTeaTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ReadArticleTask\nDescription: ReadArticleTask is defined as a subclass of SemiDirectedTask. This means that any instance of ReadArticleTask is also an instance of SemiDirectedTask, inheriting its characteristics and constraints. The class represents tasks that involve reading articles and fall within the category of semi-directed activities, which typically allow for some guidance or structure while retaining a degree of autonomy for the task performer.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Which tasks are classified under SemiDirectedTask, such as ReadArticleTask? | What general task categories encompass ReadArticleTask? | Does the concept of ReadArticleTask fall within the broader class of SemiDirectedTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TurnOnTVTask\nDescription: TurnOnTVTask is defined as a subclass of SemiDirectedTask. This means that every TurnOnTVTask is a type of semi-directed task, typically characterized by having some predefined structure or guidance but allowing for some user input or variation. There are no additional property restrictions or disjointness axioms specified, so TurnOnTVTask is generally understood to represent any task that involves turning on a TV, within the broader category of semi-directed tasks.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Is TurnOnTVTask categorized as a type of SemiDirectedTask? | Which tasks are considered to be specializations of SemiDirectedTask, for example TurnOnTVTask? | What hierarchy of broader task categories does TurnOnTVTask fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WaterPlantTask\nDescription: WaterPlantTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all the characteristics of semi-directed tasks. Members of this class represent tasks specifically concerned with watering plants, and they share any constraints or properties specified for semi-directed tasks.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Which tasks are classified as specializations under SemiDirectedTask, such as WaterPlantTask? | Is WaterPlantTask encompassed by the broader class of SemiDirectedTask? | To which overarching task groups does WaterPlantTask belong within the hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodVoiceData\nDescription: MoodVoiceData is a subclass of MeasuredData, indicating that it represents a specific type of measured information. Members of the MoodVoiceData class are characterized by being data entities whose primary function is to capture or represent aspects related to mood as conveyed through voice. This classification ensures that any instance of MoodVoiceData inherits all properties and characteristics of MeasuredData, with a particular focus on mood-related voice data.\nAxiom: {'subClassOf': ['MeasuredData']}\nGenerated CQs:", "output": "Which specialized types are encompassed by MeasuredData, such as MoodVoiceData? | Is MoodVoiceData classified under the category of MeasuredData? | Of what general categories is MoodVoiceData a specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DirectedDiscussionTask\nDescription: DirectedDiscussionTask is defined as a subclass of DiscussionTask. This means every DirectedDiscussionTask is a type of DiscussionTask, inheriting its general characteristics. There are no additional restrictions, property constraints, or disjointness axioms specified for this class. Its primary distinguishing feature lies in its hierarchical placement within the ontology.\nAxiom: {'subClassOf': ['DiscussionTask']}\nGenerated CQs:", "output": "Is DirectedDiscussionTask classified as a more specific form of DiscussionTask? | To which broader categories does DirectedDiscussionTask belong within the task hierarchy? | Which task types are encompassed by DiscussionTask, specifically including DirectedDiscussionTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FreeDiscussionTask\nDescription: FreeDiscussionTask is defined as a subclass of DiscussionTask. This means that every FreeDiscussionTask inherits all properties and characteristics of DiscussionTask, while potentially introducing further specializations specific to free-form or open-ended discussions. No additional constraints or distinguishing features are specified in the current axiom.\nAxiom: {'subClassOf': ['DiscussionTask']}\nGenerated CQs:", "output": "Which task types are direct specializations of DiscussionTask, such as FreeDiscussionTask? | Is FreeDiscussionTask categorized as a kind of DiscussionTask? | Within which broader categories is FreeDiscussionTask classified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DirectedTask\nDescription: DirectedTask is defined as a subclass of Task. This means that every DirectedTask is a type of Task, inheriting all general characteristics of Task, but is further specialized to represent a more specific kind or instance within that broader category. No additional restrictions or differentiating axioms are specified beyond its hierarchical position in relation to Task.\nAxiom: {'subClassOf': ['Task']}\nGenerated CQs:", "output": "What are the direct superclasses associated with DirectedTask? | Which subclasses fall under Task, including DirectedTask? | Is DirectedTask categorized under the broader class of Task? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P21_PictureDescriptionTask\nDescription: S3_P21_PictureDescriptionTask is defined as a subclass of FreeDiscussionTask. This means that every instance of S3_P21_PictureDescriptionTask is also an instance of FreeDiscussionTask, inheriting all the properties and constraints applicable to free discussion tasks. No additional restrictions or differentiating features beyond this specialization are specified by the axioms.\nAxiom: {'subClassOf': ['FreeDiscussionTask']}\nGenerated CQs:", "output": "Which task types fall under the broader class of FreeDiscussionTask, such as S3_P21_PictureDescriptionTask? | Is S3_P21_PictureDescriptionTask recognized as a specialized form of FreeDiscussionTask? | What higher-level categories encompass S3_P21_PictureDescriptionTask within the task taxonomy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P22_PictureDiscussionTask\nDescription: S3_P22_PictureDiscussionTask is defined as a subclass of FreeDiscussionTask. This means that every instance of S3_P22_PictureDiscussionTask is also considered a FreeDiscussionTask, inheriting all characteristics and constraints of FreeDiscussionTask, while potentially introducing additional specificity relevant to picture discussion activities.\nAxiom: {'subClassOf': ['FreeDiscussionTask']}\nGenerated CQs:", "output": "What discussion tasks are specialized forms of FreeDiscussionTask, such as S3_P22_PictureDiscussionTask? | Which general discussion task categories encompass S3_P22_PictureDiscussionTask? | Is S3_P22_PictureDiscussionTask classified as a more specific type of FreeDiscussionTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GaitAssessment\nDescription: GaitAssessment is defined as a subclass of ExperimentalAssessment. Individuals in this class are required to have exactly one MonoTaskScore and exactly one DualTaskScore, both of which must be literals (i.e., data values such as numbers or strings). This formalization ensures that each GaitAssessment precisely records a single score for both mono-task and dual-task conditions using literal values.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasMonoTaskScore exactly 1]', '[hasMonoTaskScore only rdfs:Literal]', '[hasDualTaskScore exactly 1]', '[hasDualTaskScore some rdfs:Literal]']}\nGenerated CQs:", "output": "Is it mandatory that a GaitAssessmentâ€™s hasDualTaskScore property can only relate to rdfs:Literal values? | Can a GaitAssessment ever have a hasDualTaskScore value that is not an rdfs:Literal? | Are the hasDualTaskScore values for GaitAssessment instances exclusively constrained to rdfs:Literal types? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AutonomyAssessment\nDescription: AutonomyAssessment is a subclass of ClinicalAssessment designed specifically to evaluate an individual's level of autonomy. Every instance of AutonomyAssessment is required to have exactly one value for the property iadl_e, which must be of type xsd:int. This ensures that each AutonomyAssessment provides a singular, integer-based measurement relevant to the assessed individual's instrumental activities of daily living.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[iadl_e exactly 1 xsd:int]', '[iadl_e some xsd:int]']}\nGenerated CQs:", "output": "Is it required that AutonomyAssessment instances only have the 'iadl_e' property with values of type integer? | Must every 'iadl_e' property associated with AutonomyAssessment be restricted to integer values? | Are there any properties other than 'iadl_e' with integer values permitted for AutonomyAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveAbilitiesAssessment\nDescription: CognitiveAbilitiesAssessment is defined as a subclass of ClinicalAssessment, representing evaluations specifically focused on measuring cognitive functions. Instances of this class must have exactly one FAB score (an integer), one MMSE score (an integer), one Trail Making Test result (a string), one Free and Cued Reminding Assessment result (a string), and one Short Cognitive Battery Assessment result (a string). Property restrictions further specify that each of these assessments and scores must be unique and of the stated data type, ensuring a comprehensive and structured representation of cognitive assessment results for each individual.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[fabScore exactly 1 xsd:int]', '[freeAndCuedRemindingAssessment exactly 1 xsd:string]', '[hasMMSEScore exactly 1 xsd:int]', '[trailMakingTest only xsd:string]', '[trailMakingTest exactly 1 xsd:string]', '[freeAndCuedRemindingAssessment only xsd:string]', '[hasMMSEScore only xsd:int]', '[shortCognitiveBatteryAssessment exactly 1 xsd:string]', '[fabScore only xsd:int]', '[shortCognitiveBatteryAssessment some xsd:string]']}\nGenerated CQs:", "output": "Is it required that a CognitiveAbilitiesAssessment only have the shortCognitiveBatteryAssessment property with values of type xsd:string? | Are all shortCognitiveBatteryAssessment values associated with CognitiveAbilitiesAssessment instances strings? | Can a CognitiveAbilitiesAssessment have a shortCognitiveBatteryAssessment property with any value other than a string? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MotricityAbilitiesAssessment\nDescription: MotricityAbilitiesAssessment is defined as a subclass of ClinicalAssessment, representing assessments that evaluate motor abilities. Every instance of this class is required to have exactly one UPDRS score, and this score must be an integer value (xsd:int). This ensures that each motricity abilities assessment is uniquely and quantitatively characterized by a single UPDRS score, aligning with the clinical need for standardized motor evaluation.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[hasUPDRSScore exactly 1 xsd:int]', '[hasUPDRSScore some xsd:int]']}\nGenerated CQs:", "output": "Are UPDRS scores for MotricityAbilitiesAssessment always restricted to integer values? | Can MotricityAbilitiesAssessment have any hasUPDRSScore value other than an integer? | Is it required that MotricityAbilitiesAssessment only uses hasUPDRSScore with values of type integer? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiscussionInvolvementData\nDescription: DiscussionInvolvementData is defined as a subclass of MeasuredData. Every instance of this class is required to have exactly one value for the property verbalReactionSpontaneity, and this property must take a value of type rdfs:Literal. This formalizes that each DiscussionInvolvementData entry captures a single, literal-valued measure of verbal reaction spontaneity as part of its involvement data.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[verbalReactionSpontaneity exactly 1]', '[verbalReactionSpontaneity some rdfs:Literal]']}\nGenerated CQs:", "output": "Are all values of the 'verbalReactionSpontaneity' property in DiscussionInvolvementData instances restricted exclusively to literals? | Is it possible for 'verbalReactionSpontaneity' in DiscussionInvolvementData to take any value type other than rdfs:Literal? | Does DiscussionInvolvementData ensure that only rdfs:Literal values are used for the 'verbalReactionSpontaneity' property for every instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LatencyData\nDescription: LatencyData is a subclass of MeasuredData. Each instance of LatencyData must have exactly one latency value, and this value must be a literal (rdfs:Literal). This class formally represents measured data where the primary attribute is a singular latency value stored as a literal, ensuring uniformity and precision in latency representation.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[latency exactly 1]', '[latency some rdfs:Literal]']}\nGenerated CQs:", "output": "Are all latency values associated with LatencyData instances required to be of type rdfs:Literal? | Does LatencyData exclude any latency property values that are not rdfs:Literal? | Is it necessary that every latency property of LatencyData is expressed solely as an rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiscussionTask\nDescription: DiscussionTask is defined as a subclass of Task. Every instance of DiscussionTask is required to have at least some measured data of type StressData and some measured data of type MoodVoiceData. Additionally, all measured data associated with DiscussionTask must be exclusively of type StressData or MoodVoiceData, meaning no other types of measured data are permitted. This ensures that the assessment of a DiscussionTask is strictly based on stress and mood-related voice data.\nAxiom: {'subClassOf': ['Task'], 'propertyRestrictions': ['[measuredData some StressData]', '[measuredData only (MoodVoiceData or StressData)]', '[measuredData only MoodVoiceData]']}\nGenerated CQs:", "output": "Does every DiscussionTask necessarily involve measuredData related to MoodVoiceData? | Is it required that a DiscussionTask has at least one measuredData instance corresponding to MoodVoiceData? | Can a DiscussionTask exist without possessing measuredData of the type MoodVoiceData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PersonWithDementia\nDescription: PersonWithDementia is defined as a subclass of Person, and is equivalent to any person who has an associated clinical record that contains at least one assessment in which a clinical diagnosis of dementia is present. This formalization ensures that all individuals in the PersonWithDementia class are explicitly linked to the confirmed clinical diagnosis of dementia via assessment records.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': ['[hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment or [hasClinicalDiagnosis only {dementia}])])]']}\nGenerated CQs:", "output": "Must every PersonWithDementia have at least one record containing a diagnosis assessment indicating dementia? | Is a PersonWithDementia equivalent to someone with a clinical record that includes an assessment with a clinical diagnosis of dementia? | Does the definition of PersonWithDementia require the intersection of having a clinical record and an assessment diagnosing dementia? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_DirectedActivitiesStep\nDescription: S1_DirectedActivitiesStep is defined as a subclass of ProtocolStep. Each instance of this class is required to involve exactly one S1_P11_WalkingTask, one S1_P12_CountingBackwardsTask, one S1_P13_WalkingCountingBackwardsTask, one S1_P21_SentenceRepeatingTask, and one S1_P22_ArticulationControlTask. Additionally, the only tasks permitted to be involved are S1_P11_WalkingTask, S1_P12_CountingBackwardsTask, S1_P13_WalkingCountingBackwardsTask, S1_P21_SentenceRepeatingTask, S1_P22_ArticulationControlTask, or other general Task instances. This formalization ensures that each S1_DirectedActivitiesStep is composed of these five specific tasks, and does not include any other types of tasks.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask exactly 1 S1_P11_WalkingTask]', '[involvesTask exactly 1 S1_P13_WalkingCountingBackwardsTask]', '[involvesTask exactly 1 S1_P21_SentenceRepeatingTask]', '[involvesTask exactly 1 S1_P22_ArticulationControlTask]', '[involvesTask exactly 1 S1_P12_CountingBackwardsTask]', '[involvesTask only (S1_P11_WalkingTask and S1_P12_CountingBackwardsTask and S1_P13_WalkingCountingBackwardsTask and S1_P21_SentenceRepeatingTask and S1_P22_ArticulationControlTask and Task)]']}\nGenerated CQs:", "output": "Must every S1_DirectedActivitiesStep solely involve tasks that are either S1_P11_WalkingTask, S1_P12_CountingBackwardsTask, S1_P13_WalkingCountingBackwardsTask, S1_P21_SentenceRepeatingTask, S1_P22_ArticulationControlTask, or Task? | Is it possible for an S1_DirectedActivitiesStep to involve a task that is not among S1_P11_WalkingTask, S1_P12_CountingBackwardsTask, S1_P13_WalkingCountingBackwardsTask, S1_P21_SentenceRepeatingTask, S1_P22_ArticulationControlTask, or Task? | Are activities classified as S1_DirectedActivitiesStep permitted to involve only tasks from the specified set of six task categories? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P11_WalkingTask\nDescription: S1_P11_WalkingTask is a subclass of DirectedTask, representing a specific type of directed task that involves walking. Every instance of this class is required to have at least some measuredData of type GaitData as well as some LatencyData, and the measuredData associated with any instance may only be of types GaitData, LatencyData, or StressData. This ensures that S1_P11_WalkingTask is characterized by the collection and analysis of gait and latency information, with the potential inclusion of stress-related data during walking activities.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (GaitData or LatencyData or StressData)]', '[measuredData some GaitData]', '[measuredData only LatencyData]']}\nGenerated CQs:", "output": "Is it required that every S1_P11_WalkingTask instance has at least one measuredData property linking to LatencyData? | Can an S1_P11_WalkingTask exist without having any measuredData related to LatencyData? | Does the presence of LatencyData as measuredData define S1_P11_WalkingTask instances in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P21_SentenceRepeatingTask\nDescription: S1_P21_SentenceRepeatingTask is a subclass of DirectedTask characterized by measuredData properties. Every instance must have at least one measuredData value of type MoodVoiceData and at least one of type LatencyData. The measuredData property for this class can only be filled with LatencyData, MoodVoiceData, or StressData, and no other types. This structure ensures the task consistently collects both mood/voice and latency data, restricting measured data types to those specifically listed.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (LatencyData or MoodVoiceData or StressData)]', '[measuredData some LatencyData]', '[measuredData only MoodVoiceData]']}\nGenerated CQs:", "output": "Does every S1_P21_SentenceRepeatingTask require the presence of measuredData that relates to MoodVoiceData? | Is MoodVoiceData a necessary component of measuredData for an S1_P21_SentenceRepeatingTask? | Does the execution of S1_P21_SentenceRepeatingTask entail at least one measuredData instance that is classified as MoodVoiceData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ClinicalRecord\nDescription: ClinicalRecord is defined as a class that must contain exactly one instance each of AutonomyAssessment, MotricityAbilitiesAssessment, CognitiveAbilitiesAssessment, and DiagnosisAssessment. Furthermore, the containsAssessment property for any ClinicalRecord instance is restricted to only those assessments that are of type AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment. This ensures that every ClinicalRecord is a structured record of clinical assessments, each holding exactly one specific assessment of autonomy, motricity abilities, cognitive abilities, and diagnosis, with assessments strictly limited to the defined set.\nAxiom: {'propertyRestrictions': ['[containsAssessment exactly 1 AutonomyAssessment]', '[containsAssessment exactly 1 MotricityAbilitiesAssessment]', '[containsAssessment exactly 1 CognitiveAbilitiesAssessment]', '[containsAssessment exactly 1 DiagnosisAssessment]', '[containsAssessment only (AutonomyAssessment and CognitiveAbilitiesAssessment and DiagnosisAssessment and MotricityAbilitiesAssessment and NeuropsychiatricAndMoodAssessment)]']}\nGenerated CQs:", "output": "Is a ClinicalRecord permitted to contain any assessment type apart from AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment? | Must every assessment included in a ClinicalRecord be either an AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment? | Does the ontology prevent ClinicalRecord from containing assessments outside the set of AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalRecord\nDescription: ExperimentalRecord represents a record comprised of exactly one assessment of each of the following types: ExperimentalDiagnosisAssessment, CognitiveLoadAssessment, AbilityToOrganiseAssessment, FunctionalAbilityAssessment, MemorySelfAppraisalAssessment, GaitAssessment, ApathyAssessment, and StressAssessment. The class restricts its containsAssessment property so that only these eight specific assessment types are includedâ€”no additional or alternative types are permitted. Each ExperimentalRecord must contain exactly one instance of each assessment type, ensuring comprehensive and standardized coverage within each record.\nAxiom: {'propertyRestrictions': ['[containsAssessment exactly 1 ExperimentalDiagnosisAssessment]', '[containsAssessment exactly 1 CognitiveLoadAssessment]', '[containsAssessment exactly 1 AbilityToOrganiseAssessment]', '[containsAssessment exactly 1 FunctionalAbilityAssessment]', '[containsAssessment exactly 1 MemorySelfAppraisalAssessment]', '[containsAssessment exactly 1 GaitAssessment]', '[containsAssessment exactly 1 ApathyAssessment]', '[containsAssessment exactly 1 StressAssessment]', '[containsAssessment only (AbilityToOrganiseAssessment and ApathyAssessment and CognitiveLoadAssessment and ExperimentalDiagnosisAssessment and FunctionalAbilityAssessment and GaitAssessment and MemorySelfAppraisalAssessment and StressAssessment)]']}\nGenerated CQs:", "output": "Is every assessment contained in an ExperimentalRecord restricted to AbilityToOrganiseAssessment, ApathyAssessment, CognitiveLoadAssessment, ExperimentalDiagnosisAssessment, FunctionalAbilityAssessment, GaitAssessment, MemorySelfAppraisalAssessment, or StressAssessment? | Can an ExperimentalRecord include any assessment type outside the specified set of eight assessment categories? | Does an ExperimentalRecord necessarily exclude all assessments other than the listed types under containsAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Task\nDescription: Task is defined as a class whose members are associated with exactly one start time and exactly one end time, each of which must be an instance of time:Instant. Additionally, every Task must have some measuredData, and all such measuredData must be of type StressData. These property restrictions ensure that every Task is temporally bounded and is characterized by stress-related measurements.\nAxiom: {'propertyRestrictions': ['[startTime exactly 1 time:Instant]', '[measuredData some StressData]', '[startTime only time:Instant]', '[endTime exactly 1 time:Instant]', '[endTime only time:Instant]', '[measuredData some StressData]']}\nGenerated CQs:", "output": "Is it necessary for every measuredData of a Task to be of type StressData? | Can a Task have measuredData that is not classified as StressData? | Does the property measuredData for Task restrict data types strictly to StressData and no other types? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalDiagnosisAssessment\nDescription: ExperimentalDiagnosisAssessment is defined as a subclass of ExperimentalAssessment. This means every instance of ExperimentalDiagnosisAssessment is also an instance of ExperimentalAssessment. There are no additional property restrictions specified for this class. This class represents a specific type of experimental assessment that is focused on diagnostic evaluation within an experimental context.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasExperimentalDiagnosis only DiagnosisType]']}\nGenerated CQs:", "output": "Does ExperimentalDiagnosisAssessment assign hasExperimentalDiagnosis exclusively to instances of DiagnosisType? | Is it true that all values of hasExperimentalDiagnosis for ExperimentalDiagnosisAssessment must belong to DiagnosisType? | Can ExperimentalDiagnosisAssessment have hasExperimentalDiagnosis related to anything other than DiagnosisType? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CountingType\nDescription: CountingType is defined as a subclass of Type. This indicates that every CountingType is necessarily a Type, inheriting all characteristics of Type, but there are no additional restrictions or distinguishing features specified for CountingType beyond this subclass relationship.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{_20_0, _305_285}']}\nGenerated CQs:", "output": "Is CountingType equivalent to the intersection of _20_0 and _305_285? | Are all instances of CountingType necessarily members of both _20_0 and _305_285? | Does CountingType exclude any concepts outside the overlap of _20_0 and _305_285? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GenderType\nDescription: GenderType is defined as a subclass of Type. This means that every instance of GenderType is also an instance of Type. No additional constraints or equivalence conditions are specified for this class.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{male, female}']}\nGenerated CQs:", "output": "Is GenderType equivalent to the set containing only the individuals male and female? | Does GenderType include any individuals other than male or female? | Is every instance of GenderType necessarily identified as either male or female? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiagnosisAssessment\nDescription: DiagnosisAssessment is defined as a subclass of ClinicalAssessment. Every instance of DiagnosisAssessment must be associated with exactly one clinical diagnosis, specified by the property restriction that it has exactly one value for hasClinicalDiagnosis, and that value must be of type DiagnosisType. This formalizes that each diagnosis assessment relates to one and only one diagnosis type.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[hasClinicalDiagnosis exactly 1 DiagnosisType]', '[hasClinicalDiagnosis only DiagnosisType]']}\nGenerated CQs:", "output": "Can a DiagnosisAssessment have a hasClinicalDiagnosis relationship with anything other than DiagnosisType? | Is it required that all clinical diagnoses assigned by a DiagnosisAssessment are instances of DiagnosisType? | Are diagnoses outside of the DiagnosisType class excluded from the possible values for hasClinicalDiagnosis in a DiagnosisAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveAbilitiesData\nDescription: CognitiveAbilitiesData is a class defined by several property restrictions. Every instance must have exactly one status of type ActivityStatusType, exactly one repetitions value (which must be an rdfs:Literal), exactly one compliantInstructionsOrder value (which must be a boolean), and exactly one taskDuration (which must be an instance of time:DurationDescription). The status property may only point to ActivityStatusType, repetitions only to rdfs:Literal, compliantInstructionsOrder only to boolean values, and taskDuration only to time:DurationDescription. This formalization ensures strict data structure and type safety for information related to cognitive ability assessment data.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[status exactly 1 ActivityStatusType]', '[repetitions exactly 1]', '[repetitions only rdfs:Literal]', '[compliantInstructionsOrder only xsd:boolean]', '[compliantInstructionsOrder exactly 1 xsd:boolean]', '[taskDuration only time:DurationDescription]', '[taskDuration exactly 1 time:DurationDescription]', '[status only ActivityStatusType]']}\nGenerated CQs:", "output": "Does CognitiveAbilitiesData fall under the broader group of MeasuredData? | What types of data are classified as subcategories of MeasuredData, including CognitiveAbilitiesData? | Which overarching classes encompass CognitiveAbilitiesData within their hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GaitData\nDescription: GaitData is defined as a subclass of MeasuredData, representing data specifically related to gait analysis. Members of this class are characterized by exactly one value each for walkingSpeed, stepLength, dynamicBalance (all with values restricted to literals), and stoppingDisplacement (restricted to a boolean value). Additionally, walkingSpeedInstantaneous and dynamicBalance can only take literal values. This formalization ensures that each GaitData instance uniquely records these properties, providing a precise structure for representing gait measurements.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[walkingSpeedInstantaneous only rdfs:Literal]', '[walkingSpeed only rdfs:Literal]', '[stepLength only rdfs:Literal]', '[dynamicBalance exactly 1]', '[walkingSpeed exactly 1]', '[stoppingDisplacement exactly 1 xsd:boolean]', '[stepLength exactly 1]', '[dynamicBalance only rdfs:Literal]', '[stoppingDisplacement only xsd:boolean]', '[walkingSpeedInstantaneous exactly 1]']}\nGenerated CQs:", "output": "Is it required that every instance of GaitData has exactly one value for the walkingSpeedInstantaneous property? | Can a GaitData record possess multiple or no walkingSpeedInstantaneous values, or must it always have precisely one? | Is the cardinality of the walkingSpeedInstantaneous property for GaitData instances limited to one and only one occurrence? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StressData\nDescription: StressData is defined as a subclass of MeasuredData. Any individual of StressData is characterized by the property restriction that its stressLevel property may only take values that are rdfs:Literal (such as numbers or strings). This ensures that StressData captures measured data in which stress level is recorded exclusively as a literal value.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[stressLevel only rdfs:Literal]', '[stressLevel exactly 1]']}\nGenerated CQs:", "output": "Does every instance of StressData necessarily have exactly one value specified for the stressLevel property? | Can StressData ever have more or fewer than one stressLevel assigned? | Is it possible for StressData to be valid if the stressLevel property is not set to a single unique value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HealthyControlParticipant\nDescription: HealthyControlParticipant is defined as a subclass of Person, representing individuals who are considered persons. There are no additional axioms or property restrictions specified, indicating that HealthyControlParticipant inherits all characteristics of Person without further differentiation or equivalence to other classes.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': ['[hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment and [hasClinicalDiagnosis some {healthy}])])]']}\nGenerated CQs:", "output": "Is every HealthyControlParticipant necessarily associated with a record that includes a clinical assessment confirming a 'healthy' diagnosis? | Does the class HealthyControlParticipant represent exactly those individuals who have at least one clinical record containing a diagnosis assessment marked as 'healthy'? | Is HealthyControlParticipant logically equivalent to entities with some clinical record where the assessment includes a clinical diagnosis of 'healthy'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Person\nDescription: Person is defined as a subclass of ns1:Person. Every individual belonging to this class is required to participate in at least one Protocol, and is also restricted such that they participate only in Protocol (no other types of participation are allowed). Additionally, each Person is associated with at least one ClinicalRecord, one ExperimentalRecord, and one DemographicCharacteristicsRecord via the hasRecord property. This formalization ensures that all Persons have these specific record types and exclusively participate in Protocols.\nAxiom: {'subClassOf': ['ns1:Person'], 'propertyRestrictions': ['[participates some Protocol]', '[hasRecord some ClinicalRecord]', '[hasRecord some ExperimentalRecord]', '[hasRecord some DemographicCharacteristicsRecord]', '[participates only Protocol]', '[hasRecord only (ClinicalRecord or DemographicCharacteristicsRecord or ExperimentalRecord)]']}\nGenerated CQs:", "output": "Is every record associated with a Person required to be either a ClinicalRecord, DemographicCharacteristicsRecord, or ExperimentalRecord? | Can a Person have a record that is not classified as a ClinicalRecord, DemographicCharacteristicsRecord, or ExperimentalRecord? | Are the records linked to a Person exclusively limited to ClinicalRecord, DemographicCharacteristicsRecord, and ExperimentalRecord categories? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_DiscussionWithClinicianStep\nDescription: S3_DiscussionWithClinicianStep is defined as a subclass of ProtocolStep. Every instance of this class necessarily involves exactly one S3_P1_DirectedExpressionTask, and may additionally involve an S3_P21_PictureDescriptionTask or another Task. The property restriction ensures that all tasks involved are limited to S3_P1_DirectedExpressionTask, S3_P21_PictureDescriptionTask, or other specified Task subclasses, reflecting a step that is structured around these specific clinical activities.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask only (S3_P1_DirectedExpressionTask or S3_P21_PictureDescriptionTask or Task)]', '[involvesTask exactly 1 S3_P1_DirectedExpressionTask]', '[involvesTask exactly 1 S3_P21_PictureDescriptionTask]']}\nGenerated CQs:", "output": "Must every S3_DiscussionWithClinicianStep involve exactly one S3_P21_PictureDescriptionTask task? | Can an S3_DiscussionWithClinicianStep include more than one or no S3_P21_PictureDescriptionTask via involvesTask? | Is the involvement of precisely one S3_P21_PictureDescriptionTask by each S3_DiscussionWithClinicianStep mandatory according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P13_WalkingCountingBackwardsTask\nDescription: S1_P13_WalkingCountingBackwardsTask is defined as a subclass of DirectedTask. Members of this class are exclusively associated with counting types of CountingType and are required to have at least some measured data of both LatencyData and GaitData. It also enforces that measured data for this task must only include data of the following types: GaitData, LatencyData, MoodVoiceData, or StressData. This formalization ensures that instances of this class involve directed walking while counting backwards, with behavioral and cognitive performance captured by relevant measured data.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[countingType only CountingType]', '[measuredData some LatencyData]', '[measuredData some GaitData]', '[countingType some CountingType]', '[measuredData only (GaitData or LatencyData or MoodVoiceData or StressData)]', '[measuredData some MoodVoiceData]']}\nGenerated CQs:", "output": "Must every instance of S1_P13_WalkingCountingBackwardsTask include at least one measuredData property relating to MoodVoiceData? | Is it possible for S1_P13_WalkingCountingBackwardsTask to have measuredData exclusively associated with MoodVoiceData? | Does the presence of measuredData of type MoodVoiceData necessarily imply the existence of an S1_P13_WalkingCountingBackwardsTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P1_DirectedExpressionTask\nDescription: S3_P1_DirectedExpressionTask is defined as a subclass of DirectedDiscussionTask. Members of this class are characterized by the property that they are associated with at least some measuredData of type MoodVoiceData. This means that every S3_P1_DirectedExpressionTask instance involves collecting or utilizing mood-related voice data as part of the task.\nAxiom: {'subClassOf': ['DirectedDiscussionTask'], 'propertyRestrictions': ['[measuredData some MoodVoiceData]', '[measuredData only (MoodVoiceData or StressData)]']}\nGenerated CQs:", "output": "Are S3_P1_DirectedExpressionTasks required to have measuredData properties exclusively involving MoodVoiceData or StressData? | Could an S3_P1_DirectedExpressionTask possess measuredData that is neither MoodVoiceData nor StressData? | Do the measuredData property values for S3_P1_DirectedExpressionTask necessarily only include concepts from MoodVoiceData or StressData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalAssessment\nDescription: ExperimentalAssessment is a class that is characterized by a property restriction: every instance must have the hasScore property whose values are only rdfs:Literal (such as numbers, strings, or other literal data). This ensures that the assessment results are always represented as literal data types, capturing quantified or descriptive information relevant to the assessment process.\nAxiom: {'propertyRestrictions': ['[hasScore only rdfs:Literal]', '[hasScore exactly 1]']}\nGenerated CQs:", "output": "Is every ExperimentalAssessment required to have exactly one hasScore property assigned? | Can an ExperimentalAssessment possess more than one or fewer than one value for the hasScore property? | Does the ontology restrict ExperimentalAssessment instances to a single value for the hasScore property and not allow zero or multiple values? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ProtocolStep\nDescription: ProtocolStep is a class characterized by its involvement in at least one Task (via the involvesTask property), with the restriction that it can only be associated with individuals of type Task through this property. Each ProtocolStep is also formally constrained to have exactly one startTime, which must be of type time:Instant, and may have zero or more endTimes, but any endTime provided must also be of type time:Instant. These axioms ensure that every ProtocolStep is precisely linked to its temporal boundaries and the tasks it entails.\nAxiom: {'propertyRestrictions': ['[involvesTask some Task]', '[endTime only time:Instant]', '[startTime exactly 1 time:Instant]', '[startTime only time:Instant]', '[involvesTask only Task]', '[endTime exactly 1 time:Instant]']}\nGenerated CQs:", "output": "Is each ProtocolStep required to have exactly one value for endTime? | Can a ProtocolStep have more than one endTime assigned to it? | Does the definition of ProtocolStep allow for having no endTime specified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: participates\nDescription: The property \"participates\" has no explicit domain or range restrictions and is a sub-property of \"owl:topObjectProperty.\" It does not have any characteristics such as functionality or symmetry. The property is the inverse of \"hasParticipant,\" meaning if an entity participates in something, that thing has the entity as a participant.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties 'participates' and 'hasParticipant' related within the ontology? | If individual X participates in event Y, does it follow that Y has participant X? | Which property in the ontology is specified as the inverse of 'participates'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: apathyInventory\nDescription: The property \"apathyInventory\" does not have specified domain or range restrictions and has no declared characteristics. It is defined as a subproperty of \"owl:topDataProperty,\" indicating it is a data property applicable to any individual. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is apathyInventory classified as a data property within the ontology? | What superproperties does apathyInventory have according to the property hierarchy? | Which data properties are subsumed by owl:topDataProperty within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasMonoTaskScore\nDescription: The property \"hasMonoTaskScore\" does not have explicitly defined characteristics, domain, or range restrictions. It is defined as a sub-property of \"hasScore,\" indicating it is used to represent a specific type of score related to mono-task contexts. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasScore the superproperty of hasMonoTaskScore? | Which properties are classified as subproperties under hasScore? | Does usage of hasMonoTaskScore always entail usage of hasScore? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: areasOfInterestExplored\nDescription: The property \"areasOfInterestExplored\" has no explicitly defined characteristics, domain restrictions, or super-properties. Its range is rdfs:Literal, indicating that the values associated with this property are expected to be plain text or data values. No inverse property is specified. This property is used to record or describe the areas of interest that have been explored by an entity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'areasOfInterestExplored' take any object other than a literal value? | Is every object associated with 'areasOfInterestExplored' necessarily an rdfs:Literal? | What types of values are permitted as the range for 'areasOfInterestExplored'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasClinicalDiagnosis\nDescription: The property \"hasClinicalDiagnosis\" does not specify any characteristics, domain, or range. It is a subproperty of \"hasDiagnosis,\" indicating that it represents a specialized type of diagnostic relationship, specifically pertaining to clinical diagnoses. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasClinicalDiagnosis a specific type of the hasDiagnosis property? | Which properties are considered subproperties of hasDiagnosis? | What superproperties are directly associated with hasClinicalDiagnosis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: verbalReactionSpontaneity\nDescription: The property \"verbalReactionSpontaneity\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No current textual description is provided. Its use should be interpreted in context, as there are no formal restrictions or relations specified in its axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'verbalReactionSpontaneity' relate to subjects of any type, given its domain is unspecified? | What types of entities can be the range for the property 'verbalReactionSpontaneity'? | Can 'verbalReactionSpontaneity' be associated with any type of value as its range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containedInContext\nDescription: The property \"containedInContext\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. It is a generic property with no specified constraints, indicating its use and applicability are context-dependent and unconstrained by the current ontology axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there any restrictions on what can act as the range for 'containedInContext'? | Is it correct that 'containedInContext' has no specified domain? | What types of entities can be the domain of the property 'containedInContext'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: status\nDescription: The property \"status\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This suggests flexibility in its use, allowing it to relate any types of entities without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it appropriate for the 'status' property to have no specified domain? | What types of resources can be subjects of the 'status' property? | Is there a defined domain for the property 'status', or can it link to any type of entity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: measuredData\nDescription: The property \"measuredData\" has no specified domain, range, characteristics, super-properties, or inverse properties. It can be used to relate any two entities without restriction, as no additional constraints or descriptive information are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'measuredData' have a range other than the currently unspecified value? | Is it correct that the property 'measuredData' does not have a defined range? | Is it correct that the property 'measuredData' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containsAssessment\nDescription: The property \"containsAssessment\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is likely intended to associate an entity with an assessment, but its usage is not formally restricted by axioms. Additional details or constraints may be needed to clarify its precise application within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'containsAssessment' be linked from any type of resource, or should a domain be defined? | What types of values are permitted as the object when using the 'containsAssessment' property? | What kinds of entities can be subjects of the property 'containsAssessment'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDiagnosis\nDescription: The property \"hasDiagnosis\" has no explicitly defined characteristics, no specified domain or range restrictions, and is not declared as a sub-property of any other property. No inverse property is specified. This suggests that \"hasDiagnosis\" serves as a general relation, potentially linking individuals to their diagnoses without further formal constraints.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasDiagnosis' does not have a specified range? | What kinds of entities can serve as the range for the property 'hasDiagnosis'? | Can entities outside any domain be linked using the property 'hasDiagnosis'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasScore\nDescription: The property \"hasScore\" has no defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is likely used to associate an entity with a numerical or evaluative score, but no formal restrictions or relationships are specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'hasScore' be associated with entities of any type as its range? | Can 'hasScore' be used with any entity as its subject, or are there implicit constraints? | Is it correct that the property 'hasScore' does not specify a range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dateOfBirth\nDescription: The property \"dateOfBirth\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Typically, it is intended to link an entity to its date of birth, although no formal constraints or relationships are currently specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'dateOfBirth' does not specify any domain? | Is it correct that the property 'dateOfBirth' does not have a specified range? | Can 'dateOfBirth' have a range other than those currently defined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasMMSEScore\nDescription: The property \"hasMMSEScore\" has no explicitly defined characteristics, domain or range restrictions, super-properties, or inverse properties. Based on its name, it is intended to associate an entity with its MMSE (Mini-Mental State Examination) score.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can serve as the domain for the property 'hasMMSEScore'? | Is it correct that the property 'hasMMSEScore' does not have a defined range? | Is it correct that the property 'hasMMSEScore' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: repetitions\nDescription: The property \"repetitions\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. Based on the current axioms, \"repetitions\" can relate any two entities without additional constraints or semantic specifications.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there any entity types that could serve as the subject for the 'repetitions' property? | What types of values can serve as the range for the property 'repetitions'? | Can entities other than those currently defined be used as the range for 'repetitions'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: iadl_e\nDescription: The property \"iadl_e\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional description is provided, and the property is not currently constrained by any axioms, indicating it is unspecified in its current form.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities may serve as the domain for the property 'iadl_e'? | Can the domain of 'iadl_e' include any class, or is it intended to be limited? | Is it correct that the property 'iadl_e' has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: size\nDescription: The property \"size\" currently lacks explicit characteristics, domain, or range restrictions, and is not defined as a sub-property or inverse of any other property. This indicates that \"size\" is a general-purpose property intended to relate entities to their size attributes, but its specific usage and constraints are not currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there any entities that are not allowed to be the subject of the property 'size'? | What can be the domain of the property 'size'? | Are there any restrictions on what can be used as the range of the 'size' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: protocolStep\nDescription: The property \"protocolStep\" does not have any explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of another property and has no declared inverse property. Its intended usage and semantics should be inferred from its name or surrounding context.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it permissible for 'protocolStep' to have no specified domain? | Can the property 'protocolStep' be associated with any object, given that it has no specified range? | Is it accurate that the property 'protocolStep' does not have a range defined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: countingType\nDescription: The property \"countingType\" has no explicitly defined characteristics, domain, or range restrictions. It does not have any specified super-properties or inverse properties. Its intended purpose must be inferred from its name, as no additional description or axioms are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'countingType' be used with subjects of any type, or is its domain implicitly constrained? | What entities can serve as the domain for the property 'countingType'? | Is it correct that the property 'countingType' does not have a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: taskDuration\nDescription: The property \"taskDuration\" has no specified characteristics, domain, or range restrictions. It does not have defined super-properties or an inverse property. Its intended use should be inferred from its name, which suggests it relates to the duration associated with a task, but no explicit constraints are imposed by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can be the subject (domain) of the property 'taskDuration'? | Is it correct that the property 'taskDuration' does not have a specified range? | What kinds of values could be valid as the range for the property 'taskDuration'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasParticipant\nDescription: The property \"hasParticipant\" has no specified domain, range, characteristics, super-properties, or inverse properties. This property can be used in a general manner to relate an entity to its participant(s) without restriction on the types of subjects or objects involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can anything be the value of the 'hasParticipant' property, or is there an implicit restriction? | What types of entities are permitted as the domain of the property 'hasParticipant'? | What types of entities can serve as the range for 'hasParticipant'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: distanceWalked\nDescription: The property \"distanceWalked\" has no explicitly defined characteristics, domain, or range restrictions. It does not inherit from any super-properties and has no specified inverse property. Its usage and semantics should be defined by the context or by further specification in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What kinds of entities can use the 'distanceWalked' property as their subject? | Can entities other than a particular class be associated with the property 'distanceWalked'? | Is it correct that the 'distanceWalked' property does not have a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: laterality\nDescription: The property \"laterality\" has no explicitly specified domain, range, or characteristics, and does not inherit from any super-properties nor possess any inverse property. The purpose and usage of this property are not further detailed by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'laterality' be used with any value as its object, or should its range be restricted? | Is it correct that 'laterality' has no specified range? | What types of entities can serve as the domain for the property 'laterality'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: shortCognitiveBatteryAssessment\nDescription: The property \"shortCognitiveBatteryAssessment\" does not have any explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it likely represents a relation involving a brief cognitive battery assessment, but no formal constraints are specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What type of entities can be the subject of the property 'shortCognitiveBatteryAssessment'? | Is it accurate to state that 'shortCognitiveBatteryAssessment' does not have a specified range? | Can the property 'shortCognitiveBatteryAssessment' be associated with any type of value as its range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: date\nDescription: The property \"date\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional descriptive information is provided, indicating that its use and relationships are unspecified in the current ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can serve as the domain for the property 'date'? | Is it correct that the property 'date' has no specified domain? | Is it correct that the property 'date' has no defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" currently has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its intended use is likely to associate an entity with the point in time when an event or activity begins, but no formal restrictions or relationships are specified by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is the property 'startTime' allowed to have a range, or must it always have no range? | What kinds of subjects can the property 'startTime' be applied to? | Is it correct that the property 'startTime' is defined without a domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: endTime\nDescription: The property \"endTime\" has no defined domain, range, super-properties, or inverse properties, and no specific logical characteristics are assigned. This property is presumably intended to specify the endpoint or completion time of an event or process, but no ontological constraints or further documentation are currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'endTime' have a range assigned to it, and if so, what would it be? | Is it correct that the property 'endTime' has no specified range? | Can 'endTime' be used with any type of subject, or should its domain be restricted? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: before\nDescription: The property \"before\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This indicates that it represents a generic relation without specific constraints on the types of entities it connects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can serve as the range for the property 'before'? | Can the property 'before' associate with ranges outside a particular class? | Is it correct that the property 'before' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: freeAndCuedRemindingAssessment\nDescription: The property \"freeAndCuedRemindingAssessment\" has no explicitly defined characteristics, domain, or range restrictions, and does not specify any super-properties or inverse properties. Its intended use and meaning should be clarified by additional documentation or context, as current axioms do not constrain its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the domain of the property 'freeAndCuedRemindingAssessment'? | Is it accurate that 'freeAndCuedRemindingAssessment' does not have a specified domain? | Is it valid for the property 'freeAndCuedRemindingAssessment' to have no range defined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: handTrajectory\nDescription: The property \"handTrajectory\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based solely on its name and lack of further restrictions, it can be inferred that this property is used to associate entities with information related to the movement or path of a hand, but its usage is not formally constrained within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it valid for the property 'handTrajectory' to have no specified range? | Which kinds of entities can be the range for the property 'handTrajectory'? | Is it correct that the property 'handTrajectory' does not specify a domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: gender\nDescription: The property \"gender\" has no explicitly defined characteristics, domain, range, or hierarchy with other properties. There is no current description or axiomatic restriction, indicating that its usage context and value types are unspecified within the ontology. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the 'gender' property be applied to resources of any type? | Is it correct that the property 'gender' does not have a defined domain? | What can be the range of the property 'gender'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkingSpeedInstantaneous\nDescription: The property \"walkingSpeedInstantaneous\" has no specified characteristics, domain, or range restrictions, and is not defined as a sub-property or inverse of any other property. The property is expected to represent an entity's instantaneous walking speed, but lacks formal axiomatization to constrain or further describe its use.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'walkingSpeedInstantaneous' currently has no specified range? | Is it correct that 'walkingSpeedInstantaneous' does not have a defined domain? | Can the property 'walkingSpeedInstantaneous' be associated with any type of entity, or should its domain be restricted? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasUPDRSScore\nDescription: The property \"hasUPDRSScore\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to associate an entity with its Unified Parkinson's Disease Rating Scale (UPDRS) score, reflecting clinical assessments in Parkinson's disease. No further constraints or relationships are specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there a defined range for the property 'hasUPDRSScore'? | Is it correct that the property 'hasUPDRSScore' does not have a defined domain? | Can any type of value serve as the range for 'hasUPDRSScore'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dsm_ivDepressionCriteria\nDescription: The property \"dsm_ivDepressionCriteria\" has no explicitly defined characteristics, domain, or range constraints, and it is not specified as a sub-property of any other property nor does it have an inverse property. Based on its name, it is intended to relate an entity to the diagnostic criteria for depression as defined in DSM-IV, but this intended usage is not formally constrained by the provided axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can anything other than an explicitly specified class serve as the domain for 'dsm_ivDepressionCriteria'? | What are the possible domains for the property 'dsm_ivDepressionCriteria'? | Is it correct that 'dsm_ivDepressionCriteria' does not specify a range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: latency\nDescription: The property \"latency\" has no explicitly specified characteristics, domain, or range constraints. It is not defined as a sub-property or inverse of any other property. The usage and applicable types for this property are unspecified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the domain of the property 'latency'? | Can 'latency' be used with any type of subject entity? | Is it correct that 'latency' does not have any specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: educationLevel\nDescription: The property \"educationLevel\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its use is not constrained to specific classes or value types, allowing for flexible application in the ontology. No further description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it accurate that the property 'educationLevel' does not have a specified range? | Can educationLevel be associated with any entity regardless of its type? | Is it correct that the property educationLevel does not have an explicitly defined domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: npi\nDescription: The property \"npi\" has no specified characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and does not have any inverse properties. This indicates \"npi\" is a general property with no explicit structural or semantic constraints currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the domain of the property 'npi'? | Is it appropriate for the property 'npi' to have no specified domain? | What can be the range of the property 'npi'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stoppingDisplacement\nDescription: The property \"stoppingDisplacement\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No current description is provided. The intended use or semantics of this property should be specified for greater clarity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'stoppingDisplacement' has no defined domain? | What types of subjects can 'stoppingDisplacement' be associated with? | Can entities outside any specific class use the property 'stoppingDisplacement' as their subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: trailMakingTest\nDescription: The property \"trailMakingTest\" has no specified characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely used to associate an entity with a trail making test, but no further ontological constraints or relationships are defined for this property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'trailMakingTest' does not have a defined domain? | Is it correct that the property 'trailMakingTest' does not have a specified range? | Can 'trailMakingTest' be used with subjects from any class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: involvesTask\nDescription: The property \"involvesTask\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property, nor does it have an inverse property. This indicates that \"involvesTask\" is a general property intended to relate entities to unspecified tasks, without formal constraints on the types of entities or tasks involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'involvesTask' does not have a specified range? | What types of entities can serve as the range for the property 'involvesTask'? | Can any type of entity use 'involvesTask' as a property subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stressLevel\nDescription: The property \"stressLevel\" has no explicitly defined characteristics, domain, or range restrictions, nor any specified super-properties or inverse properties. Its intended purpose is not further described in the available axioms or documentation.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'stressLevel' be associated with any type of entity as its value? | Is it correct that the property 'stressLevel' does not have any specified domain? | What types of subjects can 'stressLevel' be applied to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dynamicBalance\nDescription: The property \"dynamicBalance\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate entities in the context of maintaining or evaluating balance under changing conditions, but no formal constraints or further documentation are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it valid for the property 'dynamicBalance' to have no specified range? | What types of entities can be the range of the 'dynamicBalance' property? | Can the property 'dynamicBalance' have a domain other than what is currently specified (None)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasRecord\nDescription: The property \"hasRecord\" does not have explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is likely intended to associate an entity with a record, but no further semantic constraints are specified by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can be the subject of the property 'hasRecord'? | Can anything be used as the range of 'hasRecord', or should its range be defined? | Is it correct that the property 'hasRecord' does not specify a domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: fabScore\nDescription: The property \"fabScore\" has no specified domain, range, characteristics, super-properties, or inverse properties. Its usage and constraints are not defined by axioms, indicating that it is a general property without ontology-imposed restrictions or semantic details.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities are permitted as the range for the property 'fabScore'? | Does the property 'fabScore' have a range other than None? | Is it correct that the property 'fabScore' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkingSpeed\nDescription: The property \"walkingSpeed\" has no specified characteristics, domain, range, super-properties, or inverse properties. This property is likely intended to capture the walking speed of an entity, but no formal usage constraints or value types are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can be used as the subject of the 'walkingSpeed' property? | What types of values can serve as the range for the property 'walkingSpeed'? | Can 'walkingSpeed' be associated with any entity regardless of its type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: areasOfNoInterestExplored\nDescription: The property \"areasOfNoInterestExplored\" has no defined characteristics, domain, range, super-properties, or inverse properties. This indicates it is a general property without specific constraints or hierarchical relationships in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['rdfs:Literal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'areasOfNoInterestExplored' have a range other than rdfs:Literal? | Is every value associated with 'areasOfNoInterestExplored' necessarily an rdfs:Literal? | What types of entities can be used as the value for the property 'areasOfNoInterestExplored'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: compliantInstructionsOrder\nDescription: The property \"compliantInstructionsOrder\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its purpose and constraints are unspecified according to the given axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['xsd:boolean'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value used with the property 'compliantInstructionsOrder' required to be a boolean? | Could 'compliantInstructionsOrder' ever have a value that is not of type xsd:boolean? | What types of entities are permitted as the range for 'compliantInstructionsOrder'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDualTaskScore\nDescription: The property \"hasDualTaskScore\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property and does not have an inverse property. Its usage and semantics are unrestricted by the given axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasScore'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every usage of the hasDualTaskScore property also classified under hasScore? | Which properties are recognized as subproperties of hasScore? | What are the superproperties of hasDualTaskScore within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasExperimentalDiagnosis\nDescription: The property \"hasExperimentalDiagnosis\" has no specified domain, range, characteristics, super-properties, or inverse properties. This indicates it is a general property with no formal restrictions on the types of entities it can relate or the values it can take.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasDiagnosis'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasExperimentalDiagnosis considered a specific type of hasDiagnosis within the property hierarchy? | Which properties are defined as subproperties under hasDiagnosis? | Does the use of hasExperimentalDiagnosis in an assertion automatically entail the use of hasDiagnosis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stepLength\nDescription: The property \"stepLength\" has no explicitly defined characteristics, domain, or range restrictions. It is not declared as a sub-property of any other property and has no specified inverse property. This suggests its usage is flexible and not limited to particular classes or value types within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topDataProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is stepLength categorized under the general properties defined by owl:topDataProperty? | Which data properties are considered subproperties of owl:topDataProperty within the ontology? | Does assigning a value to stepLength also imply an assignment to owl:topDataProperty? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:January\nDescription: time:January is defined as a subclass of time:DateTimeDescription, representing the temporal concept of January within a calendar system. Members of this class are restricted such that the time:month property must have the value \"01\" (indicating January), and the time:unitType property must have the value time:unitMonth, ensuring that it refers specifically to a month unit. This formalization guarantees that any instance of time:January corresponds uniquely to the month of January.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[time:month hasValue --01]', '[time:unitType hasValue time:unitMonth]']}\nGenerated CQs:", "output": "Is time:January included as a specific instance within the broader class of time:DateTimeDescription? | Which subclasses fall under time:DateTimeDescription, and does this include time:January? | To which higher-level time classification does time:January belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DateTimeDescription\nDescription: time:DateTimeDescription represents a structured temporal entity that encapsulates the components of a date and time. Each propertyâ€”such as week, dayOfWeek, second, minute, day, month, timeZone, hour, year, and dayOfYearâ€”can have at most one value. The property time:unitType is mandatory and must have exactly one value for each instance. This ensures that every instance of time:DateTimeDescription uniquely specifies its temporal components with precisely constrained values.\nAxiom: {'propertyRestrictions': ['[time:week max 1]', '[time:dayOfWeek max 1]', '[time:second max 1]', '[time:minute max 1]', '[time:day max 1]', '[time:month max 1]', '[time:timeZone max 1]', '[time:hour max 1]', '[time:unitType exactly 1]', '[time:year max 1]']}\nGenerated CQs:", "output": "Is an instance of time:DateTimeDescription allowed to have at most one value for the property time:dayOfYear? | Can time:DateTimeDescription be associated with multiple time:dayOfYear values, or is it limited to a single value? | Does the ontology restrict time:DateTimeDescription so that it cannot have more than one time:dayOfYear assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DateTimeInterval\nDescription: time:DateTimeInterval is defined as a subclass of time:ProperInterval. This means every DateTimeInterval is a specific type of ProperInterval, representing a continuous interval of time with explicitly defined start and end date-time values. The class is intended for use where temporal intervals need to be precisely bounded using date and time information.\nAxiom: {'subClassOf': ['time:ProperInterval']}\nGenerated CQs:", "output": "Is time:DateTimeInterval categorized under time:ProperInterval? | Which broader interval types does time:DateTimeInterval fall into? | What kinds of intervals are classified as time:ProperInterval, considering time:DateTimeInterval? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Interval\nDescription: time:Interval is defined as a subclass of time:TemporalEntity, signifying that it represents a specific type of temporal entity. Instances of time:Interval describe durations or spans of time, distinct from other temporal entities such as instants, emphasizing an intervalâ€™s extension across a portion of the temporal dimension.\nAxiom: {'subClassOf': ['time:TemporalEntity']}\nGenerated CQs:", "output": "To which higher-level temporal categories does time:Interval directly relate? | Is every time:Interval encompassed within the broader class of time:TemporalEntity? | Which specific entities are classified under time:TemporalEntity, such as time:Interval? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:ProperInterval\nDescription: time:ProperInterval is defined as a subclass of time:Interval. This means every instance of time:ProperInterval is also an instance of time:Interval, inheriting all its properties. Proper intervals represent temporal intervals with distinct start and end points (i.e., the start and end times are different), distinguishing them from instantaneous time points or degenerate intervals where start equals end.\nAxiom: {'subClassOf': ['time:Interval']}\nGenerated CQs:", "output": "What other subclasses exist under time:Interval besides time:ProperInterval? | Is time:Interval a broader category encompassing time:ProperInterval? | To which upper-level classifications does time:ProperInterval belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DayOfWeek\nDescription: time:DayOfWeek is defined as a class equivalent to the set containing time:Monday, time:Tuesday, time:Wednesday, time:Thursday, time:Friday, time:Saturday, and time:Sunday. This means that any individual of time:DayOfWeek must be exactly one of these seven days, formally capturing the conventional enumeration of days in a week.\nAxiom: {'equivalentClass': ['{time:Wednesday, time:Friday, time:Saturday, time:Tuesday, time:Monday, time:Sunday, time:Thursday}']}\nGenerated CQs:", "output": "Is DayOfWeek identical to the set containing Wednesday, Friday, Saturday, Tuesday, Monday, Sunday, and Thursday? | Are there any classes included in DayOfWeek apart from the specified days: Wednesday, Friday, Saturday, Tuesday, Monday, Sunday, and Thursday? | Is each member of the set {Wednesday, Friday, Saturday, Tuesday, Monday, Sunday, Thursday} necessarily an instance of DayOfWeek? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:TemporalUnit\nDescription: time:TemporalUnit is a class that is defined as being equivalent to the set containing time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, and time:unitWeek. This means that any individual that is an instance of any of these specific temporal units (such as month, minute, day, hour, year, second, or week) is also an instance of time:TemporalUnit, and vice versa. The class thus serves as a grouping for the major standard units used to measure time.\nAxiom: {'equivalentClass': ['{time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, time:unitWeek}']}\nGenerated CQs:", "output": "Does time:TemporalUnit exclude any temporal concept other than the specified units (month, minute, day, hour, year, second, week)? | Is time:TemporalUnit logically equivalent to the union of time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, and time:unitWeek? | Is every time:TemporalUnit necessarily one of time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, or time:unitWeek? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:TemporalEntity\nDescription: time:TemporalEntity is defined as a class equivalent to either time:Instant or time:Interval. This means any instance of time:TemporalEntity must be either an instant (representing a single point in time) or an interval (representing a duration between two points in time). This equivalence captures the generality of temporal entities, encompassing both points and periods within a temporal framework.\nAxiom: {'equivalentClass': ['(time:Instant and time:Interval)']}\nGenerated CQs:", "output": "Is time:TemporalEntity defined as the union of time:Instant and time:Interval? | Are all instances of time:TemporalEntity necessarily either a time:Instant or a time:Interval? | Does time:TemporalEntity include any instance that is not a time:Instant or a time:Interval? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Instant\nDescription: time:Instant is defined as a subclass of time:TemporalEntity, meaning it represents a specific point within the temporal domain. There are no explicit disjointness axioms specified, so no additional exclusivity constraints are imposed.\nAxiom: {'subClassOf': ['time:TemporalEntity'], 'disjointWith': ['time:ProperInterval']}\nGenerated CQs:", "output": "How does the ontology specify the mutual exclusivity between time:Instant and time:ProperInterval? | Is any entity allowed to be typed as both time:Instant and time:ProperInterval simultaneously? | Which classes are declared as disjoint with time:Instant within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Year\nDescription: time:Year is a subclass of time:DurationDescription, formally defined as a duration consisting of exactly 1 year, with all other time units (months, days, hours, minutes, and seconds) restricted to exactly 0. This ensures that any individual of time:Year represents a duration of precisely one year, without any additional components.\nAxiom: {'subClassOf': ['time:DurationDescription'], 'propertyRestrictions': ['[time:years exactly 1]', '[time:months exactly 0]', '[time:hours exactly 0]', '[time:seconds exactly 0]', '[time:days exactly 0]', '[time:minutes exactly 0]', '[time:weeks exactly 0]']}\nGenerated CQs:", "output": "Is a Year in the ontology defined as having exactly zero weeks according to the time:weeks property? | Can any instance classified as time:Year possess a nonzero value for the time:weeks property? | Does the property restriction indicate that only time:Year entities with zero weeks are valid in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DurationDescription\nDescription: time:DurationDescription is a class representing temporal durations, where each instance is restricted to having at most one value for each of the following properties: time:hours, time:minutes, time:seconds, time:days, time:weeks, and time:years. This ensures that an individual duration description cannot specify more than one value for any temporal unit, maintaining a unique specification for each time component.\nAxiom: {'propertyRestrictions': ['[time:hours max 1]', '[time:seconds max 1]', '[time:weeks max 1]', '[time:days max 1]', '[time:years max 1]', '[time:minutes max 1]', '[time:months max 1]']}\nGenerated CQs:", "output": "Is it required that a DurationDescription has at most one value for the 'months' property? | Can a DurationDescription be associated with more than one 'months' property value? | Does the ontology restrict DurationDescription entities to a single 'months' property assignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:weeks\nDescription: The property \"time:weeks\" has no defined characteristics or super-properties. Its domain is restricted to instances of \"time:DurationDescription\", and its range is specified as a decimal value (xsd:decimal). This property is used to indicate the number of weeks associated with a given duration description. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:weeks' take as its value anything other than an xsd:decimal? | Is every object associated with the property 'time:weeks' necessarily an xsd:decimal? | What types of values are permitted as the range for the property 'time:weeks'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:seconds\nDescription: The property \"time:seconds\" has no declared characteristics or super-properties. Its domain is \"time:DurationDescription\", indicating it applies to duration descriptions, and its range is \"xsd:decimal\", specifying that its values are decimal numbers representing seconds. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:seconds' have a subject other than a time:DurationDescription? | Is there any time:DurationDescription that cannot be associated with 'time:seconds'? | What types of entities can be the domain for the property 'time:seconds'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalOverlappedBy\nDescription: The property \"time:intervalOverlappedBy\" has no explicitly defined domain, range, characteristics, or super-properties. It is specified as the inverse of \"time:intervalOverlaps\", indicating that if one interval is overlapped by another, the second interval overlaps the first. No further restrictions or features are defined for this property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse property of â€˜intervalOverlappedByâ€™ in the ontology? | If interval A is overlapped by interval B, does it follow that interval B overlaps interval A according to the defined properties? | How are the properties â€˜intervalOverlappedByâ€™ and â€˜intervalOverlapsâ€™ connected in terms of inverse relationships? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalAfter\nDescription: The property \"time:intervalAfter\" has no explicitly defined characteristics, domain, or range restrictions. It does not have any super-properties. Its inverse property is \"time:intervalBefore,\" indicating that if one interval is after another, the second is before the first. This property is used to relate temporal intervals where one occurs after the other.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the ontological relationship established between 'intervalAfter' and 'intervalBefore'? | If interval A occurs after interval B, must interval B occur before interval A? | Which property is defined as the inverse of 'intervalAfter' in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:timeZone\nDescription: The property \"time:timeZone\" links an instance of time:DateTimeDescription to an instance of tzont:TimeZone. It has no explicitly defined characteristics, super-properties, or inverse properties. This property is used to specify the time zone associated with a particular date-time description.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned using the property 'time:timeZone' required to be a tzont:TimeZone? | Can the property 'time:timeZone' reference any class other than tzont:TimeZone as its range? | What entities are permitted to serve as the range for the property 'time:timeZone'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasEnd\nDescription: The property \"time:hasEnd\" links a temporal entity (\"time:TemporalEntity\") to a time instant (\"time:Instant\") indicating its endpoint. It has no defined property characteristics, super-properties, or inverse properties. This property is used to specify when a temporal entity concludes.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:Instant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:hasEnd' be used with a subject that is not a time:TemporalEntity? | Are all entities appearing as the subject of 'time:hasEnd' necessarily instances of time:TemporalEntity? | What types of entities are permitted as the domain of the 'time:hasEnd' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalDuring\nDescription: The property \"time:intervalDuring\" relates two instances of time:ProperInterval, indicating that one interval occurs during the other. It has no explicitly defined characteristics, super-properties, or specified inverse property. Both its domain and range are restricted to time:ProperInterval, signifying its use in expressing temporal containment between intervals.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalDuring' be used with subjects other than ProperInterval? | What types of entities are permissible as the subject for the property 'intervalDuring'? | Are there any entities classified as ProperInterval that cannot be the subject of 'intervalDuring'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalMetBy\nDescription: The property \"time:intervalMetBy\" has no explicitly defined characteristics, domain, or range restrictions, and does not have any super-properties. It is specified as the inverse of \"time:intervalMeets,\" indicating a temporal relation where one interval is met by another. No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the ontological connection between the properties â€˜intervalMetByâ€™ and â€˜intervalMeetsâ€™? | If an interval A is met by interval B, does this entail that B meets A according to the ontology? | Which property is defined as the inverse of â€˜intervalMetByâ€™ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inDateTime\nDescription: The property \"time:inDateTime\" links an instance of time:Instant to a corresponding time:DateTimeDescription. It has no declared characteristics such as being functional or transitive, and it does not inherit from any super-property or have an inverse property. The domain is restricted to time:Instant, and the range is time:DateTimeDescription, indicating its purpose is to specify the detailed date and time information for a given temporal instant.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:DateTimeDescription'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:inDateTime' apply to any subject other than time:Instant? | Is it possible that a time:Instant does not have an associated value for the property 'time:inDateTime'? | What are the possible domains for the property 'time:inDateTime'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hours\nDescription: The property \"time:hours\" has a domain of \"time:DurationDescription\" and a range of \"xsd:decimal\", indicating it relates a duration description to a decimal value representing hours. It has no explicitly defined characteristics, super-properties, or inverse properties.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:hours' have a subject other than a time:DurationDescription? | What types of entities are permitted as the subject of 'time:hours'? | Is it correct that only instances of time:DurationDescription can use the 'time:hours' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDateTimeDescription\nDescription: The property \"time:hasDateTimeDescription\" has no special characteristics and is not defined as a sub-property or inverse of any other property. Its domain is restricted to instances of time:DateTimeInterval, and its range is time:DateTimeDescription. This property relates a DateTimeInterval to a DateTimeDescription, indicating the specific date and time details associated with the interval.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:DateTimeDescription'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'hasDateTimeDescription' be associated with any subject other than a DateTimeInterval? | Is it possible for an object linked via 'hasDateTimeDescription' not to conform to a DateTimeDescription? | What entities are permitted to serve as the domain for the 'hasDateTimeDescription' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:second\nDescription: The property \"time:second\" has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to instances of time:DateTimeDescription, and its range is xsd:decimal. This property is used to associate a DateTimeDescription with a decimal value representing seconds.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:second' refer to any value type other than xsd:decimal? | Is it necessary that all values of 'time:second' are of type xsd:decimal? | What types of entities are permitted as the range of the property 'time:second'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:minute\nDescription: The property \"time:minute\" relates an individual of the class \"time:DateTimeDescription\" to a non-negative integer value representing the minute component of a date-time description. It has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to \"time:DateTimeDescription\", and its range is restricted to \"xsd:nonNegativeInteger\".\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any value other than a nonNegativeInteger that can be used as the range of 'time:minute'? | Are all objects associated with the property 'time:minute' necessarily nonNegativeIntegers? | What types of values are permitted as the range for the property 'time:minute'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDurationDescription\nDescription: The property \"time:hasDurationDescription\" links an instance of time:TemporalEntity to a corresponding time:DurationDescription. It has no defined characteristics, super-properties, or inverse properties. Its domain is restricted to time:TemporalEntity, and its range is limited to time:DurationDescription. This property is used to specify the duration description associated with a temporal entity.\nAxiom: {'characteristics': [], 'domain': ['time:TemporalEntity'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:hasDurationDescription' take as its value an entity other than 'time:DurationDescription'? | Is every object of the 'time:hasDurationDescription' property necessarily a 'time:DurationDescription'? | What entities are permitted as the range of 'time:hasDurationDescription'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalStarts\nDescription: The property \"time:intervalStarts\" has no explicitly defined characteristics or super-properties. Its domain and range are both limited to \"time:ProperInterval\", indicating it relates two proper time intervals. This property is used to assert that one proper interval starts another proper interval. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalStarts' be used with subjects other than ProperInterval? | Is there any ProperInterval that cannot be associated with the property 'intervalStarts'? | What types of entities may serve as the domain for the 'intervalStarts' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:after\nDescription: The property \"time:after\" has no explicitly defined characteristics, domain, or range restrictions, and does not have any super-properties. It is specified as the inverse of the property \"time:before,\" indicating that if one entity is related to another via \"time:after,\" the second entity is related to the first via \"time:before.\" No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse property of 'time:after' in the ontology? | If entity A is related to entity B through 'time:after', does the ontology entail that B is related to A through 'time:before'? | How do the properties 'time:after' and 'time:before' correspond as logical inverses in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inXSDDateTime\nDescription: The property \"time:inXSDDateTime\" relates instances of \"time:Instant\" to values of type \"xsd:dateTime\". It has no additional characteristics, super-properties, or inverse properties specified. This property is used to associate a temporal instant with its corresponding XML Schema dateTime representation.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:dateTime'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'time:inXSDDateTime' have a subject that is not a 'time:Instant'? | Are all instances related through 'time:inXSDDateTime' necessarily 'time:Instant'? | What are the possible domains for the property 'time:inXSDDateTime'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalStartedBy\nDescription: The property \"time:intervalStartedBy\" has no explicitly defined characteristics, domain, or range restrictions, and is not a sub-property of any other property. It is specified as the inverse of \"time:intervalStarts,\" indicating that if an interval is started by another, then the latter starts the former. No additional constraints or relationships are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse relationship specified between the properties â€˜intervalStartedByâ€™ and â€˜intervalStartsâ€™ in the ontology? | Does the assertion that interval A intervalStartedBy interval B entail that interval B intervalStarts interval A? | Which property functions as the inverse of â€˜intervalStartedByâ€™ according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:months\nDescription: The property \"time:months\" links an instance of time:DurationDescription to a decimal value representing the number of months. It has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to time:DurationDescription, and its range is xsd:decimal.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is the property 'months' applicable to entities other than DurationDescription? | Are all subjects of the property 'months' instances of DurationDescription? | What entities can be the domain of the 'months' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalEquals\nDescription: The property \"time:intervalEquals\" links two individuals of type \"time:ProperInterval\" and asserts that they are equal in terms of their start and end points. It has no additional characteristics, super-properties, or inverse properties defined. Both its domain and range are restricted to \"time:ProperInterval\".\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalEquals' be used with subjects that are not instances of 'ProperInterval'? | Are all values associated with the property 'intervalEquals' required to be of a specific type or class? | What types of entities can serve as the domain for the property 'intervalEquals'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:years\nDescription: The property \"time:years\" relates instances of \"time:DurationDescription\" to a decimal value representing a duration in years. It does not have explicitly defined characteristics, super-properties, or inverse properties. Its range is restricted to decimal values (xsd:decimal).\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'time:years' be used with entities that are not instances of 'time:DurationDescription'? | Is 'time:DurationDescription' the only possible domain for the property 'time:years'? | What types of objects are allowed as the subject when using the property 'time:years'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:minutes\nDescription: The property \"time:minutes\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"time:DurationDescription,\" indicating that it is intended to relate duration descriptions to a specific value or entity corresponding to minutes. The range of this property is not explicitly specified.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can values for 'time:minutes' only be of type xsd:decimal? | Is every range value for 'time:minutes' constrained exclusively to xsd:decimal? | What possible datatypes can serve as the range for the property 'time:minutes'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:xsdDateTime\nDescription: The property \"time:xsdDateTime\" has a domain restricted to \"time:DateTimeInterval\" and does not specify a range, characteristics, super-properties, or inverse properties. This property is used to associate instances of DateTimeInterval with additional information, likely a specific date and time value.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeInterval'], 'range': ['xsd:dateTime'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned via the property 'time:xsdDateTime' necessarily of type xsd:dateTime? | Can 'time:xsdDateTime' have a range different from xsd:dateTime? | What data types are permissible as the range for the property 'time:xsdDateTime'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:unitType\nDescription: The property \"time:unitType\" has no specified characteristics, domain, super-properties, or inverse property. Its range is restricted to instances of \"time:TemporalUnit\", indicating that it associates a subject with a temporal unit.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['time:TemporalUnit'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'unitType' be used with subjects other than 'DateTimeDescription'? | Must all objects of the 'unitType' property refer to a specific type or class? | What are the possible domains for the property 'unitType'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:month\nDescription: The property \"time:month\" has no explicitly defined characteristics, domain restrictions, super-properties, or inverse properties.  \nIts range is restricted to values of data type xsd:gMonth, indicating it is used to relate an entity to a specific month in the Gregorian calendar.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:gMonth'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any entity other than time:DateTimeDescription that can be the subject of the property time:month? | Are all objects used with the property time:month required to represent months? | What types of entities can act as the domain for the property time:month? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hour\nDescription: The property \"time:hour\" has \"time:DateTimeDescription\" as its domain, indicating it is used with instances of date and time descriptions. No explicit range, characteristics, super-properties, or inverse properties are defined. This property represents the hour component within a temporal description.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value of the property 'time:hour' required to be a non-negative integer? | Can 'time:hour' have a range other than xsd:nonNegativeInteger? | What kinds of values are permitted as the range for the property 'time:hour'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalOverlaps\nDescription: The property \"time:intervalOverlaps\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"time:ProperInterval,\" indicating that it is used to relate proper time intervals to other entities. No specific range is defined for this property.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalOverlaps' relate to anything other than a ProperInterval as its object? | Is there any ProperInterval that cannot be used as the range for the property 'intervalOverlaps'? | What types of entities can appear as the range for the property 'intervalOverlaps'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalFinishedBy\nDescription: The property \"time:intervalFinishedBy\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates that its usage is unrestricted by ontology axioms and is not semantically linked to other properties within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['time:intervalFinishes']}\nGenerated CQs:", "output": "What is the logical connection between 'intervalFinishedBy' and 'intervalFinishes' in the ontology? | If time interval A is related to interval B using 'intervalFinishedBy', does this entail that B is related to A via 'intervalFinishes'? | Which property is defined as the inverse of 'intervalFinishedBy' in the time ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalContains\nDescription: The property \"time:intervalContains\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate a temporal interval to another interval or event that it contains.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['time:intervalDuring']}\nGenerated CQs:", "output": "How does the ontology represent the connection between 'intervalContains' and 'intervalDuring' properties? | If a time interval A contains time interval B, does the ontology entail that B occurs during A? | Which property is identified as the inverse of 'intervalContains' in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:dayOfYear\nDescription: The property \"time:dayOfYear\" has no specific characteristics, no explicit domain restrictions, and no defined super-properties. Its range is restricted to non-negative integers (xsd:nonNegativeInteger), indicating that it is used to represent the day of the year as a non-negative integer value. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'dayOfYear' be used with subjects other than DateTimeDescription? | Is every instance of DateTimeDescription required to have a value for the 'dayOfYear' property? | What types of entities are permitted as the domain of the 'dayOfYear' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasBeginning\nDescription: The property \"time:hasBeginning\" does not have specified characteristics, domain restrictions, super-properties, or inverse properties. Its range is limited to individuals of type \"time:Instant,\" indicating it associates a subject with a temporal instant marking its beginning.\nAxiom: {'characteristics': [], 'domain': ['time:TemporalEntity'], 'range': ['time:Instant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:hasBeginning' be used with any subject other than a 'time:TemporalEntity'? | Is it necessary that every subject of 'time:hasBeginning' is a 'time:TemporalEntity'? | Which types of entities are permitted as the subject for the property 'time:hasBeginning'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:dayOfWeek\nDescription: The property \"time:dayOfWeek\" has no explicitly defined characteristics or super-properties. Its domain is restricted to instances of \"time:DateTimeDescription\", indicating it is used to associate a date-time description with its corresponding day of the week. No specific range or inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['time:DayOfWeek'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:dayOfWeek' have values that are not instances of 'time:DayOfWeek'? | Is it possible for any entity other than 'time:DayOfWeek' to serve as the range of 'time:dayOfWeek'? | What entities are permitted as the range for the property 'time:dayOfWeek'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:year\nDescription: The property \"time:year\" has no specified characteristics or super-properties. Its domain is restricted to instances of time:DateTimeDescription, but no range is defined. This property is intended to associate a DateTimeDescription with a corresponding year value. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:gYear'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'time:year' accept values other than those of type xsd:gYear as its range? | Are all values associated with 'time:year' required to be instances of xsd:gYear? | What possible data types can be used as the range for the property 'time:year'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:days\nDescription: The property \"time:days\" has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to \"time:DurationDescription\", indicating that it is used to associate a duration description with an unspecified value representing days. The range of this property is not explicitly defined.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:days' point to values other than xsd:decimal? | Is every value assigned via 'time:days' required to be of type xsd:decimal? | What types of values are valid as the range for the property 'time:days'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalMeets\nDescription: The property \"time:intervalMeets\" has no specified property characteristics or super-properties. Its domain is restricted to instances of \"time:ProperInterval\", indicating that it is used to relate proper time intervals to other entities. No range or inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalMeets' be used with objects other than 'ProperInterval'? | Is every object linked by the property 'intervalMeets' obliged to be a 'ProperInterval'? | What types of entities are allowed as the range for the 'intervalMeets' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:week\nDescription: The property \"time:week\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"time:DateTimeDescription,\" indicating that it is used to associate a week-related value or resource with a date-time description. No range is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'week' be associated with any object other than a nonNegativeInteger as its value? | Is it correct that the only possible range for 'week' is xsd:nonNegativeInteger, or can other datatypes be used? | What types of values are permissible as the range of the property 'week'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalBefore\nDescription: The property \"time:intervalBefore\" has no explicitly defined characteristics or domain restrictions. Its range is restricted to \"time:ProperInterval,\" indicating that it relates an entity to a proper time interval. It is specified as a sub-property of \"time:before,\" inheriting its semantic implications. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': ['time:before'], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:intervalBefore' have a domain different from time:ProperInterval? | Is there any instance of time:ProperInterval that cannot be used as the subject of 'time:intervalBefore'? | What entities are permitted to serve as the domain of 'time:intervalBefore'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:before\nDescription: The property \"time:before\" is a transitive property used to relate temporal entities, as indicated by its range restriction to \"time:TemporalEntity.\" There are no explicit domain constraints, no specified super-properties, and no defined inverse property. This property is typically used to assert that one temporal entity precedes another in time.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['time:TemporalEntity'], 'range': ['time:TemporalEntity'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:before' be used with subjects that are not instances of 'time:TemporalEntity'? | Are there any 'time:TemporalEntity' instances that cannot participate as domains in the 'time:before' relationship? | What types of entities are permissible as the domain for the property 'time:before'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inside\nDescription: The property \"time:inside\" has no specified characteristics, domain, super-properties, or inverse properties. Its range is restricted to instances of \"time:Instant\", indicating that it relates subjects to a specific temporal instant.\nAxiom: {'characteristics': [], 'domain': ['time:Interval'], 'range': ['time:Instant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:inside' have a subject that is not a time:Interval? | Is it possible for an entity that is not a time:Interval to be associated via 'time:inside'? | What are the possible domains for the 'time:inside' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalFinishes\nDescription: The property \"time:intervalFinishes\" has no specified characteristics or domain restrictions. Its range is limited to instances of \"time:ProperInterval,\" indicating it relates an entity to a proper time interval that it finishes. There are no super-properties or inverse properties defined.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalFinishes' be used with a subject that is not a ProperInterval? | Are all subjects of the 'intervalFinishes' property instances of ProperInterval? | What entities are permitted as the domain for the 'intervalFinishes' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:day\nDescription: The property \"time:day\" has no special characteristics or super-properties. Its domain is restricted to instances of \"time:DateTimeDescription,\" indicating that it is used to associate a day value with a temporal description. There are no specified range constraints or inverse properties.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:gDay'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned to the property 'time:day' necessarily of type xsd:gDay? | Can 'time:day' ever be associated with an object outside the range xsd:gDay? | What types of values are permitted as the range of the property 'time:day'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExerciseSummary\nDescription: ExerciseSummary is a subclass of DaySummary that encapsulates the summary of exercise activities recorded for a specific day. Members of this class must have exactly one value each for exerciseStartTime (of type time:Instant), distanceTravelled (xsd:double), strideLength (xsd:double), exerciseDuration (time:DurationDescription), walkSpeed (xsd:double), heartRate (xsd:double), exerciseIntensity (rdfs:Literal), and accelerometerCountsPerMinute (xsd:int). Each of these properties is also restricted to values of the specified type, ensuring strict data consistency for representing exercise-session summaries.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[exerciseStartTime only time:Instant]', '[distanceTravelled only xsd:double]', '[exerciseDuration only time:DurationDescription]', '[walkSpeed exactly 1 xsd:double]', '[exerciseDuration exactly 1 time:DurationDescription]', '[heartRate only xsd:double]', '[heartRate exactly 1 xsd:double]', '[walkSpeed only xsd:double]', '[exerciseIntensity exactly 1]', '[exerciseStartTime exactly 1 time:Instant]', '[strideLength only xsd:double]', '[distanceTravelled exactly 1 xsd:double]', '[accelerometerCountsPerMinute exactly 1 xsd:int]', '[exerciseIntensity only rdfs:Literal]', '[accelerometerCountsPerMinute only xsd:int]']}\nGenerated CQs:", "output": "Is each ExerciseSummary instance required to have exactly one value for the strideLength property? | Can an ExerciseSummary be associated with more than one strideLength value? | Does every ExerciseSummary exclude the possibility of having zero or multiple strideLength values? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialSummary\nDescription: SocialSummary is defined as a subclass of DaySummary, representing a daily aggregation of social interaction metrics. Members of this class are characterized by the presence of specific numeric properties: each individual must have exactly one value (of type xsd:int) specified for the number of social interactions, face-to-face conversations, phone conversations, and communicative attempts. Additionally, these properties are restricted to accept only integer values. This formalization ensures that every SocialSummary instance provides an unambiguous, integer-based summary of key social activities occurring within a single day.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[numberOfSocialInteractions only xsd:int]', '[numberOfFaceToFaceConversations only xsd:int]', '[numberOfPhoneConversations exactly 1 xsd:int]', '[numberOfCommunicativeAttempts exactly 1 xsd:int]', '[numberOfCommunicativeAttempts only xsd:int]', '[numberOfPhoneConversations only xsd:int]', '[numberOfFaceToFaceConversations exactly 1 xsd:int]']}\nGenerated CQs:", "output": "Is it required that a SocialSummary must have exactly one value for the 'numberOfSocialInteractions' property? | Can a SocialSummary ever have more or fewer than one 'numberOfSocialInteractions' specified? | Does the SocialSummary class permit multiple or zero assignments of 'numberOfSocialInteractions', or is exactly one mandatory? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ADLProblem\nDescription: ADLProblem is defined as a subclass of Problem. This means every instance of ADLProblem is also an instance of Problem, establishing a hierarchical relationship where ADLProblem specifies a more specialized type of problem related to activities of daily living (ADL). No further property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "Which types of Problem include ADLProblem as a more specific instance? | What broader categories encompass ADLProblem? | Is ADLProblem a specialized form within the overarching class of Problem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExerciseProblem\nDescription: ExerciseProblem is defined as a subclass of Problem. This means that every ExerciseProblem is considered a type of Problem, inheriting all characteristics of the Problem class. No additional distinguishing axioms or property restrictions are specified for ExerciseProblem in the current definition.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "What are the specialized types of Problem, such as ExerciseProblem? | Does ExerciseProblem fall under the wider category of Problem? | Which broader classifications encompass ExerciseProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodProblem\nDescription: MoodProblem is defined as a subclass of Problem, indicating that any instance of MoodProblem is also an instance of Problem. This classification establishes MoodProblem as a specific type of problem, but does not currently provide further distinguishing characteristics beyond its placement in the hierarchy.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "Does MoodProblem fall under the general category of Problem? | What are the hierarchically broader classes that include MoodProblem? | Which specific types are encompassed within the broader class Problem, such as MoodProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepProblem\nDescription: SleepProblem is defined as a subclass of Problem, representing a specific category of problems related to sleep. Any individual classified as a SleepProblem is, by definition, also a Problem, inheriting all general properties and restrictions of the Problem class but specializing them to issues involving sleep.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "Which subcategories exist within the Problem class, such as SleepProblem? | What broader categories encompass SleepProblem? | Is SleepProblem categorized under Problem types? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialProblem\nDescription: SocialProblem is defined as a subclass of Problem. This means every social problem is recognized as a problem, but with distinguishing features or contexts that are social in nature. The axiom places SocialProblem within the hierarchy of problems, ensuring that social problems inherit all general characteristics of problems while being specifically identified for their relevance to societal issues.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "Is every SocialProblem categorized under the broader class of Problem? | To which overarching categories does SocialProblem belong within the ontology? | Which specific types are subsumed by Problem, including SocialProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ADLSummary\nDescription: ADLSummary is a subclass of DaySummary. This means that every instance of ADLSummary is also an instance of DaySummary and inherits its properties and constraints. No additional axioms or distinguishing features are specified beyond its hierarchical relationship.\nAxiom: {'subClassOf': ['DaySummary']}\nGenerated CQs:", "output": "Is ADLSummary classified under the broader group of DaySummary types? | What higher-level categories include ADLSummary? | Which specific summaries are encompassed within DaySummary, such as ADLSummary? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExcessiveNapProblem\nDescription: ExcessiveNapProblem is defined as a subclass of NappingProblem. It represents a specific type of napping issue characterized by an unusually high frequency or duration of naps, distinguishing it from other forms of napping problems.\nAxiom: {'subClassOf': ['NappingProblem']}\nGenerated CQs:", "output": "What are the direct superclasses associated with ExcessiveNapProblem? | Is ExcessiveNapProblem classified under the broader group of NappingProblem? | Which specific types of NappingProblem encompass ExcessiveNapProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FailureToPrepareMeal\nDescription: FailureToPrepareMeal is defined as a subclass of MealProblem, representing a specific type of problem wherein a meal is not successfully prepared. All instances of FailureToPrepareMeal are, by definition, also considered instances of MealProblem, aligning this class within the broader context of meal-related issues.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "What types of issues are included as subclasses of MealProblem? | Does FailureToPrepareMeal fall under the category of MealProblem? | Which broader classes encompass FailureToPrepareMeal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InappropriateMealDuration\nDescription: InappropriateMealDuration is defined as a subclass of MealProblem. This class represents meal-related issues specifically concerning the duration of meals. Any instance of InappropriateMealDuration is inherently a type of MealProblem, indicating that problems related to the amount of time spent during meals fall under this category.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "Is InappropriateMealDuration classified under the broader category of MealProblem? | To which overarching problem categories does InappropriateMealDuration pertain? | Which specific problems are encompassed by the general class MealProblem, including InappropriateMealDuration? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InappropriateMealLocation\nDescription: InappropriateMealLocation is a subclass of MealProblem. This class represents issues or problems specifically related to unsuitable or improper locations for meals. Every instance of InappropriateMealLocation is also considered a type of MealProblem, highlighting its role in categorizing location-based meal issues.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "To which higher-level categories does InappropriateMealLocation belong? | Is InappropriateMealLocation categorized under the broader class of MealProblem? | Which types are classified as more specific instances of MealProblem, including InappropriateMealLocation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterruptedMeal\nDescription: InterruptedMeal is a subclass of MealProblem, indicating that it represents a specific type of issue arising during a meal. Members of this class are characterized as meal-related problems where the meal is disrupted or not completed as intended. This formalization ensures that any instance of InterruptedMeal also qualifies as a MealProblem, distinguishing it from other meal-related issues by its defining feature of interruption.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "What categories represent the superclass of InterruptedMeal? | Which problem types encompass InterruptedMeal as a more specific instance? | Does InterruptedMeal belong to the broader classification of MealProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MissedMeal\nDescription: MissedMeal is defined as a subclass of MealProblem, meaning it represents a specific type of problem related to meals. Any instance of MissedMeal is, by definition, also an instance of MealProblem. This classification is used to denote situations where a meal is not consumed as expected.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "Is MissedMeal categorized as a kind of MealProblem? | What broader classifications does MissedMeal fall under within the ontology? | Which problems are subclasses of MealProblem, specifically including MissedMeal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FragmentedSleepProblem\nDescription: FragmentedSleepProblem is a subclass of InterruptedSleepProblem, representing a specific type of sleep disturbance characterized by sleep fragmentation. This condition involves frequent interruptions or arousals during sleep, leading to broken or non-continuous sleep.\nAxiom: {'subClassOf': ['InterruptedSleepProblem']}\nGenerated CQs:", "output": "What broader sleep problem categories encompass FragmentedSleepProblem? | Which specific sleep problems are classified under InterruptedSleepProblem, such as FragmentedSleepProblem? | Is FragmentedSleepProblem categorized as a type of InterruptedSleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nocturia\nDescription: Nocturia is defined as a subclass of InterruptedSleepProblem. Individuals with nocturia typically experience interrupted sleep due to visiting the bathroom more than twice during the night. This classification formalizes nocturia as a specific type of sleep disturbance characterized by frequent nighttime urination.\nAxiom: {'subClassOf': ['InterruptedSleepProblem']}\nGenerated CQs:", "output": "Which sleep problems are considered subtypes of InterruptedSleepProblem, such as Nocturia? | What broader problem categories include Nocturia among their subclasses? | Is Nocturia classified as a kind of InterruptedSleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HighStressLevel\nDescription: HighStressLevel is defined as a subclass of MoodProblem, indicating that all individuals classified as HighStressLevel are also considered to have a mood-related problem. This formalization groups HighStressLevel within the broader category of mood issues for more precise reasoning and classification. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['MoodProblem']}\nGenerated CQs:", "output": "Is HighStressLevel classified under the broader group of MoodProblem? | Which mood-related issues encompass HighStressLevel as a specific case? | What higher-level categories does HighStressLevel fall under within the context of mood problems? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SelfReportedLowMood\nDescription: SelfReportedLowMood is defined as a subclass of MoodProblem, indicating that all individuals classified under SelfReportedLowMood are also considered types of MoodProblem. This formalization implies that SelfReportedLowMood represents a specific form or instance of mood problem, characterized by being self-reported rather than externally assessed.\nAxiom: {'subClassOf': ['MoodProblem']}\nGenerated CQs:", "output": "Does SelfReportedLowMood fall under the broader classification of MoodProblem? | Which conditions are categorized as more specific forms of MoodProblem, such as SelfReportedLowMood? | To which overarching classes does SelfReportedLowMood pertain within the mood domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientAccelerometerCounts\nDescription: InsufficientAccelerometerCounts is defined as a subclass of ExerciseProblem. This class represents a specific type of exercise problem where the measured accelerometer counts are lower than required or expected levels, indicating an issue with the quantity or quality of motion captured during exercise activities.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "output": "What higher-level categories include InsufficientAccelerometerCounts as a member? | Is InsufficientAccelerometerCounts classified under the broader category of ExerciseProblem? | Which more specific problems are encompassed by ExerciseProblem, such as InsufficientAccelerometerCounts? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ShortStrideLength\nDescription: ShortStrideLength is defined as a subclass of ExerciseProblem. This indicates that it represents a specific type of issue encountered during exercise, categorized under general exercise problems. No further constraints or distinguishing characteristics are specified.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "output": "Which higher-level categories encompass ShortStrideLength as a member? | Is ShortStrideLength classified as a type of ExerciseProblem? | What specific types fall under the category of ExerciseProblem, including ShortStrideLength? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SlowWalkSpeed\nDescription: SlowWalkSpeed is defined as a subclass of ExerciseProblem, indicating that it represents a specific type of problem or difficulty related to walking at a slow speed. Members of this class are considered instances where an individual's slow walking speed is identified as an exercise-related issue.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "output": "What specific subtypes fall under ExerciseProblem, such as SlowWalkSpeed? | Which higher-level classes include SlowWalkSpeed as a subordinate concept? | Is SlowWalkSpeed classified as a type of ExerciseProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientFaceToFaceInteraction\nDescription: InsufficientFaceToFaceInteraction is defined as a subclass of SocialProblem. This class represents social problems that arise specifically from a lack of direct, in-person interactions between individuals. Any instance of InsufficientFaceToFaceInteraction is, by definition, also an instance of SocialProblem, indicating its relevance within the broader context of social issues.\nAxiom: {'subClassOf': ['SocialProblem']}\nGenerated CQs:", "output": "What kinds of SocialProblem encompass InsufficientFaceToFaceInteraction as a subclass? | Which more general classifications include InsufficientFaceToFaceInteraction within their scope? | Is InsufficientFaceToFaceInteraction categorized as a specific type of SocialProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientTelephoneInteraction\nDescription: InsufficientTelephoneInteraction is defined as a subclass of SocialProblem. This means that every instance of InsufficientTelephoneInteraction is also an instance of SocialProblem, situating it within the broader category of issues impacting social well-being. No further property restrictions or disjointness axioms are specified, so its definition relies solely on its classification as a type of social problem.\nAxiom: {'subClassOf': ['SocialProblem']}\nGenerated CQs:", "output": "Which specific social problems include InsufficientTelephoneInteraction as a subtype? | What are the more general categories that encompass InsufficientTelephoneInteraction? | Is InsufficientTelephoneInteraction classified under the broader category of SocialProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterruptedSleepProblem\nDescription: InterruptedSleepProblem is defined as a subclass of SleepProblem, indicating that every instance of InterruptedSleepProblem is also an instance of SleepProblem. This class characterizes sleep issues specifically involving interruptions or disturbances during sleep, distinguishing it from other types of sleep problems.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "To which parent classes is InterruptedSleepProblem associated? | Does InterruptedSleepProblem fall under the general classification of SleepProblem? | What types of SleepProblem are defined, and does this include InterruptedSleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NappingProblem\nDescription: NappingProblem is defined as a subclass of SleepProblem, indicating that any instance classified as a NappingProblem is also recognized as a SleepProblem. This class formalizes issues specifically related to napping, distinguishing it from other types of sleep problems.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "What are all the more specific problem types that fall under SleepProblem, including NappingProblem? | Is NappingProblem categorized under the broader class of SleepProblem? | Which upper-level categories encompass NappingProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeriodicLimbMovement\nDescription: PeriodicLimbMovement is defined as a subclass of SleepProblem, indicating that every instance of PeriodicLimbMovement is also considered a type of sleep problem. This class captures disturbances involving repetitive limb movements during sleep, aligning with the broader classification of sleep-related disorders.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "Which specific types of SleepProblem include PeriodicLimbMovement? | Is PeriodicLimbMovement classified under the broader category of SleepProblem? | What are the parent categories associated with PeriodicLimbMovement? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepDurationProblem\nDescription: SleepDurationProblem is defined as a subclass of SleepProblem. Members of this class experience issues related specifically to sleep duration. According to the current description, this class is characterized by individuals whose sleep duration is less than 7 hours. This formalization ensures that all instances of SleepDurationProblem represent cases where insufficient sleep time is the primary issue.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "Is SleepDurationProblem categorized under the broader class of SleepProblem? | To what higher-level groups does SleepDurationProblem belong within the ontology? | Which types of sleep issues are classified as more specific than SleepProblem, such as SleepDurationProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepEfficiencyProblem\nDescription: SleepEfficiencyProblem is a subclass of SleepProblem, referring specifically to cases where an individual's sleep efficiency is less than 85%. This classification distinguishes SleepEfficiencyProblem from other sleep-related issues by focusing on reduced efficiency in sleep, as formally defined by the subclass axiom and supported by the given comment.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "What higher-level categories are associated with SleepEfficiencyProblem? | Does SleepEfficiencyProblem fall under the broader classification of SleepProblem? | Which subclasses are encompassed by SleepProblem, such as SleepEfficiencyProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepLatencyProblem\nDescription: SleepLatencyProblem is a subclass of SleepProblem, representing a specific type of sleep issue. Members of this class are characterized by experiencing sleep latency (the time taken to fall asleep) exceeding 30 minutes. This definition situates SleepLatencyProblem within the broader category of sleep-related disorders, with a focus on delayed sleep onset.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "Which more specific problems are categorized within SleepProblem, such as SleepLatencyProblem? | What higher-level categories does SleepLatencyProblem pertain to in the ontology? | Does SleepLatencyProblem fall under the broader classification of SleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MealProblem\nDescription: MealProblem is defined as a subclass of ADLProblem, indicating that it represents a specific kind of difficulty or issue related to Activities of Daily Living (ADL). Any instance of MealProblem is also an instance of ADLProblem, inheriting its characteristics and properties, but is used to specifically denote problems associated with meal-related activities.\nAxiom: {'subClassOf': ['ADLProblem']}\nGenerated CQs:", "output": "Does MealProblem fall under the overarching category of ADLProblem? | Which problem types are more specific instances of ADLProblem, such as MealProblem? | To which higher-level classifications is MealProblem associated within the context of ADLProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodQuestionnaire\nDescription: MoodQuestionnaire is defined as a subclass of Questionnaire. This class represents questionnaires designed specifically to assess or measure mood-related aspects of an individual. All MoodQuestionnaire instances inherit the general characteristics of Questionnaire, while focusing on evaluating emotional or affective states.\nAxiom: {'subClassOf': ['Questionnaire']}\nGenerated CQs:", "output": "Which questionnaire types are more specific than Questionnaire, for example, MoodQuestionnaire? | What higher-level categories encompass MoodQuestionnaire? | Is MoodQuestionnaire classified under the broader group of Questionnaire? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepQuestionnaire\nDescription: SleepQuestionnaire is defined as a subclass of Questionnaire. This means every SleepQuestionnaire is a type of Questionnaire, typically designed to assess or gather information related to sleep patterns, habits, or disorders. No additional restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Questionnaire']}\nGenerated CQs:", "output": "What are the direct parent classes of SleepQuestionnaire in the ontology? | Which types of Questionnaire include SleepQuestionnaire as a specific example? | Is SleepQuestionnaire categorized under the broader class of Questionnaire? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:LongNap\nDescription: event:LongNap is a class characterized by the requirement that all its instances have the property â€˜highlightâ€™ set to true. This means every long nap event is marked as highlighted, distinguishing it from other types of events that may not have this property. There are no additional subclass, disjointness, or other property axioms specified.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "output": "Is the highlight property of a LongNap event universally constrained to the value true? | Does every LongNap event necessarily have the highlight property set to true? | Can a LongNap event exist without having the highlight property valued as true? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NapAfterLunch\nDescription: event:NapAfterLunch is a class characterized by having the property highlight with a required value of true for all its instances. This means every instance of event:NapAfterLunch must be associated with the property highlight set to true, signifying its notable or emphasized status within a given context. No other description is currently provided, so the class is defined solely by this property restriction.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "output": "Is it required that NapAfterLunch events are always associated with a 'highlight' property set to true? | Can a NapAfterLunch event exist without possessing 'highlight' equal to true? | Must every instance of NapAfterLunch have the property 'highlight' with the value true? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NightKitchenVisit\nDescription: event:NightKitchenVisit is a class characterized by the property restriction that any instance must have the attribute 'highlight' with a value of true. This means that all individuals classified under event:NightKitchenVisit are specifically marked or emphasized via the 'highlight' property. In the absence of additional superclasses or disjointness, this class is primarily defined by this property restriction.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "output": "Does the ontology restrict the â€˜highlightâ€™ property of NightKitchenVisit events so that only those with value true are permitted? | Are all instances of NightKitchenVisit characterized by the property â€˜highlightâ€™ having the value true? | Is it required for every NightKitchenVisit event to have the property â€˜highlightâ€™ set to true? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NightLivingRoomVisit\nDescription: event:NightLivingRoomVisit is a class characterized by the property restriction that every instance must have the property 'highlight' with the value 'true'. This formalization ensures that any individual classified as event:NightLivingRoomVisit is specifically marked as highlighted, indicating its special significance or prominence.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "output": "Must every NightLivingRoomVisit event have the highlight property set to true? | Are all NightLivingRoomVisit events required to entail highlight equals true as a property restriction? | Is it possible for any NightLivingRoomVisit event to exist without the highlight property being true? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepSummary\nDescription: SleepSummary is defined as a subclass of DaySummary that captures a comprehensive summary of an individual's sleep for a given day. Each SleepSummary instance is characterized by exactly one value for sleepBedTime, sleepTime, wakeUpTime (all xsd:dateTime), duration, totalDurationOfNaps, numberOfNaps, numberOfArousals, numberOfAwakenings, numberOfBedExits, sleepLatency (all xsd:int), sleepEfficiency and sleepMovementIndex (all xsd:double), and lightLevel (xsd:string). These properties ensure that each SleepSummary provides detailed and quantitative metrics for sleep episodes, including timings, efficiency, nap statistics, nocturnal movements, arousals, awakenings, light levels, and related quantitative indicators, supporting precise day-by-day rest analysis.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[totalDurationOfNaps exactly 1 xsd:int]', '[sleepBedTime exactly 1 xsd:dateTime]', '[duration only xsd:int]', '[sleepEfficiency exactly 1 xsd:double]', '[duration exactly 1 xsd:int]', '[sleepMovementIndex exactly 1 xsd:double]', '[numberOfNaps only xsd:int]', '[totalDurationOfNaps only xsd:int]', '[numberOfNaps exactly 1 xsd:int]', '[numberOfArousals only xsd:int]', '[numberOfAwakenings exactly 1 xsd:int]', '[wakeUpTime only xsd:dateTime]', '[numberOfBedExits only xsd:int]', '[lightLevel only xsd:string]', '[sleepTime exactly 1 xsd:dateTime]', '[sleepBedTime only xsd:dateTime]', '[numberOfAwakenings only xsd:int]', '[lightLevel exactly 1 xsd:string]', '[numberOfBedExits exactly 1 xsd:int]', '[sleepLatency exactly 1 xsd:int]', '[sleepEfficiency only xsd:double]', '[sleepLatency only xsd:int]', '[numberOfArousals exactly 1 xsd:int]', '[sleepTime only xsd:dateTime]', '[wakeUpTime exactly 1 xsd:dateTime]', '[sleepMovementIndex some xsd:double]']}\nGenerated CQs:", "output": "Does SleepSummary restrict the property 'sleepMovementIndex' to only have values of type xsd:double? | Is it required that all instances of 'sleepMovementIndex' associated with SleepSummary must be xsd:double values? | Can SleepSummary have any 'sleepMovementIndex' values that are not xsd:double? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DaySummary\nDescription: DaySummary is a class characterized by the presence of exactly one associated date (of type xsd:dateTime) and exactly one related patient (of class event:Patient). Additionally, every instance must have at least one date and be linked to at least one patient. This ensures that each DaySummary uniquely corresponds to a specific date and patient, representing summaries that are strictly tied to individual patient-days.\nAxiom: {'propertyRestrictions': ['[date exactly 1 xsd:dateTime]', '[forPatient exactly 1 event:Patient]', '[date some xsd:dateTime]', '[forPatient only event:Patient]']}\nGenerated CQs:", "output": "Does every DaySummary necessarily reference at least one Patient via the forPatient property? | Is it required that any DaySummary instance be linked to a Patient through forPatient? | Can a DaySummary exist without being associated with a Patient by the forPatient relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Problem\nDescription: Problem is a class characterized by the existence of at least one possible contributing factor, which must be an instance of event:Event. This means that any individual classified as a Problem is associated with one or more events identified as potential factors contributing to the occurrence of the problem.\nAxiom: {'propertyRestrictions': ['[possibleContributingFactor only event:Event]']}\nGenerated CQs:", "output": "Does a problem necessarily have at least one possible contributing factor that is an event? | Is it required for every instance of Problem to be associated with some event as a possible contributing factor? | Can a problem exist without having any event identified as a possible contributing factor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodSummary\nDescription: MoodSummary is a subclass of DaySummary, representing a summary of mood-related aspects for a particular day. It is characterized by exactly one stressLevel, which must be a literal value, exactly one numberOfSocialInteractions (an integer), some physicalHygiene information, and some involvementInDiscussion. This formalization ensures that each MoodSummary instance documents a single stress level and number of social interactions, and includes details on both physical hygiene and participation in discussions.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[stressLevel exactly 1]', '[physicalHygiene some owl:Thing]', '[numberOfSocialInteractions exactly 1 xsd:int]', '[stressLevel only rdfs:Literal]', '[involvementInDiscussion some owl:Thing]', '[numberOfSocialInteractions only xsd:int]']}\nGenerated CQs:", "output": "Does MoodSummary allow only integer values for the property numberOfSocialInteractions? | Is it required that every numberOfSocialInteractions value associated with MoodSummary must be an integer? | Can MoodSummary have numberOfSocialInteractions in any datatype other than integer? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EatingSummary\nDescription: EatingSummary is defined as a subclass of ADLSummary. Each instance of EatingSummary must be associated with exactly one eatingLocation, which is an event:Place, and exactly one eatingDuration, which is a time:DurationDescription. Furthermore, any eatingDuration specified must be an instance of time:DurationDescription, ensuring the exclusivity and precision of duration representation. This formalization guarantees that any EatingSummary records structured information about where and for precisely how long eating occurred.\nAxiom: {'subClassOf': ['ADLSummary'], 'propertyRestrictions': ['[eatingLocation exactly 1 event:Place]', '[eatingDuration exactly 1 time:DurationDescription]', '[eatingDuration only time:DurationDescription]', '[eatingLocation only event:Place]']}\nGenerated CQs:", "output": "Is an EatingSummary restricted to having eatingLocation only at places categorized as event:Place? | Can an EatingSummary reference any eatingLocation that is not an event:Place? | Must every eatingLocation described in an EatingSummary fall exclusively under event:Place? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eatingLocation\nDescription: The property \"eatingLocation\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"EatingSummary,\" while its range is unspecified. This property is used to associate an \"EatingSummary\" with a location where eating occurs.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for something other than an EatingSummary to have an eatingLocation? | Are there any instances of EatingSummary that do not have an eatingLocation? | What types of subjects are allowed to use the eatingLocation property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseDuration\nDescription: The property \"exerciseDuration\" does not specify explicit domain or range restrictions, nor any special characteristics. It is defined as a sub-property of \"time:hasBeginning,\" indicating that it inherits semantic meaning related to temporal beginnings. No inverse property is provided. This property is primarily intended to represent the temporal duration associated with an exercise activity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every instance of the exerciseDuration property also an instance of time:hasBeginning? | Which properties are subproperties encompassed by time:hasBeginning in the ontology? | What superproperties does exerciseDuration have according to the property hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: highlight\nDescription: The property \"highlight\" has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to instances of event:Event, and its range is xsd:boolean, indicating whether an event is highlighted (true) or not (false).\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:boolean'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any entity other than an Event that can be the subject of 'highlight'? | What types of individuals may appear as the domain of the 'highlight' property? | Must the subject of 'highlight' always be an Event? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepTime\nDescription: The property \"sleepTime\" has no specified characteristics, domain, or range restrictions. It does not have any super-properties or inverse properties defined. Based on its name, \"sleepTime\" likely represents the time or duration related to an entity's sleep, but further constraints or intended usage are not specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the range of the property 'sleepTime'? | Can the property 'sleepTime' be assigned to any class, or should its domain be defined? | Is it correct that the property 'sleepTime' does not have a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: lightLevel\nDescription: The property \"lightLevel\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional description or axiomatic restrictions are provided, suggesting its intended use is either unspecified or context-dependent within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the 'lightLevel' property has no assigned domain? | Can the property 'lightLevel' take any subject, since its domain is undefined? | What types of entities, if any, are permitted as subjects for the property 'lightLevel'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepBedTime\nDescription: The property \"sleepBedTime\" has no defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to represent the time at which an individual goes to bed for sleep, but no formal constraints or descriptions are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What kinds of entities can be subjects of the 'sleepBedTime' property? | What types of values can be the range of the property 'sleepBedTime'? | Can any entity be associated with the 'sleepBedTime' property regardless of its type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfArousals\nDescription: The property \"numberOfArousals\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Based on its name, it is likely intended to represent the count or frequency of arousal events associated with an entity, but no formal constraints are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Should 'numberOfArousals' be restricted to a specific class as its domain? | What types of values can be used as the range for the property 'numberOfArousals'? | Is it correct that the property 'numberOfArousals' does not have a defined domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfCommunicativeAttempts\nDescription: The property \"numberOfCommunicativeAttempts\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it likely represents a quantitative value indicating how many times an entity attempts communication. No further semantic restrictions are specified by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can act as the domain for the property 'numberOfCommunicativeAttempts'? | What entities can be used as the value for the property 'numberOfCommunicativeAttempts'? | Can 'numberOfCommunicativeAttempts' be associated with any type of entity as its value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfNaps\nDescription: The property \"numberOfNaps\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property and does not have an inverse property. The intended use of this property may be to associate an entity with the number of naps it takes, but no formal restrictions are currently imposed.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'numberOfNaps' does not restrict its range? | Are there any datatype or class constraints on the range of the property 'numberOfNaps'? | What types of entities, if any, can be the subject of 'numberOfNaps'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: strideLength\nDescription: The property \"strideLength\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Its description and usage context should be clarified in the ontology, as no formal axioms currently constrain its application.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'strideLength' be used with subjects other than those in a specified class? | What types of entities can be the range of the property 'strideLength'? | Is it valid for 'strideLength' to have no range defined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepEfficiency\nDescription: The property \"sleepEfficiency\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Its intended use is not further specified by axioms, indicating it may be used flexibly unless additional constraints are provided elsewhere in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'sleepEfficiency' relate to entities other than those with a defined domain? | What types of values can be assigned as the range of the property 'sleepEfficiency'? | Is it correct that the property 'sleepEfficiency' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfFaceToFaceConversations\nDescription: The property \"numberOfFaceToFaceConversations\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a subproperty or inverse of any other property. It is likely intended to represent the count of face-to-face conversations associated with an entity, but no further axiomatic constraints are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'numberOfFaceToFaceConversations' does not have a defined domain? | What potential classes or entities can be the domain of 'numberOfFaceToFaceConversations'? | What can be the range of the property 'numberOfFaceToFaceConversations'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: endTime\nDescription: The property \"endTime\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. This suggests that \"endTime\" can be used flexibly to relate an entity to its corresponding end time, but the specific types of subjects and values are not constrained by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'endTime' does not have a defined domain? | What types of entities can use 'endTime' as a property? | Is it valid for the property 'endTime' to have no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasValue\nDescription: The property \"hasValue\" has no specified domain, range, characteristics, or super-properties. It is not defined as an inverse of any other property. Based on the axiom, \"hasValue\" is a general-purpose property with unconstrained usage. Its intended meaning and constraints should be clarified within specific ontological contexts.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasValue' does not have a defined domain? | Can 'hasValue' apply to entities of any type as its subject? | What entities can serve as the range for the property 'hasValue'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: date\nDescription: The property \"date\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates that its intended usage and applicable types are not currently specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'date range' does not have a specified domain? | Can 'date range' be assigned to any type of subject, or is there an implicit restriction on its domain? | Is it correct that the property 'date' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfSocialInteractions\nDescription: The property \"numberOfSocialInteractions\" has no explicitly defined characteristics, domain, or range constraints, and is not specified as a sub-property or inverse of any other property. This suggests it can be used flexibly to associate any subject and object, though its intended purpose is to represent the count or quantity of social interactions related to an entity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for the property 'numberOfSocialInteractions' to have a domain? | Should the property 'numberOfSocialInteractions' be associated with any specific class as its domain? | Can the property 'numberOfSocialInteractions' be associated with any particular type of value as its range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepMovementIndex\nDescription: The property \"sleepMovementIndex\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Its use and meaning are unspecified in the ontology, as no descriptive information or axioms restrict or explain its application or value type.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What are the possible domains for the property 'sleepMovementIndex'? | Is it correct that 'sleepMovementIndex' does not have a defined domain? | Can the property 'sleepMovementIndex' be associated with entities other than a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkSpeed\nDescription: The property \"walkSpeed\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to represent the walking speed of an entity, but no formal constraints or further description are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'walkSpeed' does not specify a range? | Is it correct that the property 'walkSpeed' does not have a defined domain? | Can 'walkSpeed' be applied to any type of subject, or should its domain be specified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: forPatient\nDescription: The property \"forPatient\" has no explicitly defined domain, range, or characteristics. It does not specify any super-properties or inverse properties. Based on its name, it is intended to relate an entity or process to a patient, typically indicating that something is meant or designated for an individual receiving care.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'forPatient' does not specify any domain? | Can the property 'forPatient' have any value as its range? | What entities may serve as the range of the property 'forPatient'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: accelerometerCountsPerMinute\nDescription: The property \"accelerometerCountsPerMinute\" has no specified domain, range, characteristics, super-properties, or inverse properties. It is designed to represent the number of counts detected by an accelerometer per minute but is not restricted to any particular subject or value type by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it accurate that 'accelerometerCountsPerMinute' has no assigned domain? | Can accelerometerCountsPerMinute have a range other than None? | Is it correct that the property accelerometerCountsPerMinute has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: physicalHygiene\nDescription: The property \"physicalHygiene\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Its usage and scope are not further restricted by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'physicalHygiene' does not have a specified domain? | Can 'physicalHygiene' relate to instances of any class, or should its range be defined? | What can be the domain of the property 'physicalHygiene'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: possibleContributingFactor\nDescription: The property \"possibleContributingFactor\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property of any other property. No inverse property is defined. This property is intended to relate entities to possible factors that may contribute to a particular situation or event, but its usage is not restricted to specific classes or value types.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there any domain restrictions for the usage of 'possibleContributingFactor'? | What entities can serve as the domain for the property 'possibleContributingFactor'? | Is it correct that the property 'possibleContributingFactor' does not have a specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: distanceTravelled\nDescription: The property \"distanceTravelled\" has no specified characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and has no declared inverse property. Based on its name, it is likely intended to represent the distance an entity has moved or covered, but no formal constraints are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'distanceTravelled' does not have a specified domain? | Can 'distanceTravelled' be associated with any class, or should its domain be restricted to specific types? | What possible types of values can serve as the range for 'distanceTravelled'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasBeginning\nDescription: The property \"time:hasBeginning\" has no explicitly defined characteristics, domain, or range constraints, nor does it specify any super-properties or inverse properties. Based on its name, it is likely intended to relate a temporal entity to its starting point or beginning, but no formal axioms restrict its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'time:hasBeginning' have a range other than what is currently defined? | What entities can serve as the domain for the property 'time:hasBeginning'? | Is it correct that the property 'time:hasBeginning' has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: totalDurationOfNaps\nDescription: The property \"totalDurationOfNaps\" currently has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is intended to represent the total duration of naps associated with an entity. However, without further axioms, its precise usage within the ontology remains unspecified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it valid for the property 'totalDurationOfNaps' to have no specified range? | Should 'totalDurationOfNaps' be restricted to values of a certain datatype or class as its range? | Is it correct that the property 'totalDurationOfNaps' has no domain defined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepLatency\nDescription: The property \"sleepLatency\" has no defined domain, range, or formal characteristics, and lacks specification of super-properties or an inverse property. Its formal usage and intended meaning must be inferred from its name, which typically refers to the duration or interval between attempting to sleep and the onset of sleep. No additional restrictions or relationships are provided in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Could there be a specific class that should serve as the domain for 'sleepLatency' rather than it being undefined? | What types of values can be assigned as the range for the property 'sleepLatency'? | Are there any constraints on the range of 'sleepLatency', or can it be associated with any type of value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfPhoneConversations\nDescription: The property \"numberOfPhoneConversations\" has no explicitly defined characteristics, domain, or range restrictions, and is not declared as a sub-property or inverse of any other property. Its intended use is to represent the number of telephone conversations associated with an entity, but its application is unconstrained in the current specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for 'numberOfPhoneConversations' to have a defined domain? | Is it correct that the property 'numberOfPhoneConversations' does not have a specified range? | What types of entities can be subjects of the 'numberOfPhoneConversations' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDurationDescription\nDescription: The property \"time:hasDurationDescription\" has no specified domain, range, characteristics, super-properties, or inverse properties. It is used to associate entities with their duration descriptions, but no additional constraints or relationships are imposed by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it valid for the property 'time:hasDurationDescription' to have no specified domain? | Which classes, if any, are implicitly considered as the domain for 'time:hasDurationDescription'? | Is it accurate that the property 'time:hasDurationDescription' has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no explicitly defined domain, range, characteristics, super-properties, or inverse property. It is intended to represent the concept of duration, but no further constraints or relationships are specified by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it accurate that the property 'duration' has no specified range? | What can be the range of the property 'duration'? | Are there entities that can act as the subject of 'duration', given its domain is undefined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfBedExits\nDescription: The property \"numberOfBedExits\" has no explicitly defined characteristics, domain, or range, and is not specified as a sub-property or inverse of any other property. Based on its name, it likely represents the quantity of times a bed exit occurs in a given context, but further specification of its scope and value type is not provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'numberOfBedExits' has no range specified? | What can be the domain of the property 'numberOfBedExits'? | Is it correct that the property 'numberOfBedExits' does not have a defined domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: involvementInDiscussion\nDescription: The property \"involvementInDiscussion\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is intended to relate two entities in the context of participation or involvement in a discussion, but its usage is unconstrained by ontological axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Could 'involvementInDiscussion' have a domain other than those currently defined? | Is it correct that the property 'involvementInDiscussion' has no specified domain? | What types of entities can be the domain of the 'involvementInDiscussion' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfAwakenings\nDescription: The property \"numberOfAwakenings\" has no defined domain, range, characteristics, super-properties, or inverse properties. It is intended to represent the number of times an awakening event occurs, but its usage is not currently constrained by axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it accurate that the property 'numberOfAwakenings' does not have a specified range? | Which types of values can appear as the object of 'numberOfAwakenings'? | Can 'numberOfAwakenings' be associated with any type of subject regardless of its class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: heartRate\nDescription: The property \"heartRate\" has no specified domain, range, super-properties, or inverse properties, and lacks defined characteristics. Its intended use is to associate an entity with its heart rate, but no formal constraints on its usage are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can be used as values for the property 'heartRate'? | Is it correct that the property 'heartRate' does not have a defined domain? | Is it correct that the property 'heartRate' does not specify any range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stressLevel\nDescription: The property \"stressLevel\" has no defined domain or range restrictions, and no specified characteristics, super-properties, or inverse properties. This indicates that \"stressLevel\" can relate any subject to any object, with its precise usage intended to be determined by context or further specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'stressLevel' be associated with subjects other than a specific class? | Could 'stressLevel' have a range other than what is currently defined? | What types of values can be used as the range for the property 'stressLevel'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: wakeUpTime\nDescription: The property \"wakeUpTime\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate an entity to a time value indicating when waking up occurs, but no formal constraints or additional documentation are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of values can be used as the range for the 'wakeUpTime' property? | What can be the domain of the property 'wakeUpTime'? | Is it correct that 'wakeUpTime' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no specified domain or range restrictions and does not inherit from any super-property. It has no explicitly defined characteristics, nor is any inverse property specified. This property is intended to represent the beginning time of an event or process, though the exact usage context is unconstrained by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'startTime' be assigned to any subject, regardless of type? | Can 'startTime' point to values other than those specified as its range? | Is it correct that 'startTime' does not specify any domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseIntensity\nDescription: The property \"exerciseIntensity\" has no defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate an entity to a measure or classification of physical activity intensity, but no formal constraints or description are specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the range of the property 'exerciseIntensity'? | Can 'exerciseIntensity' be associated with subjects outside of any defined class? | What types of entities can serve as the domain for the property 'exerciseIntensity'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseStartTime\nDescription: The property \"exerciseStartTime\" has no specified domain, range, super-properties, inverse properties, or declared characteristics. Its intended use is to represent the start time of an exercise, but the axiom does not constrain its applicable subjects or the type of values it relates to.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['time:hasBeginning'], 'inverseOf': []}\nGenerated CQs:", "output": "Is exerciseStartTime considered a more specific form of time:hasBeginning? | Which properties are classified as subproperties of time:hasBeginning? | Does exerciseStartTime always entail the use of time:hasBeginning when describing an event? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eatingDuration\nDescription: The property \"eatingDuration\" has no defined domain or explicit characteristics. Its range is unspecified, allowing for flexible use. It is a sub-property of \"time:hasDurationDescription\", indicating it is used to relate an entity to a temporal duration specifically describing the length of an eating event. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['EatingSummary'], 'range': ['None'], 'subPropertyOf': ['time:hasDurationDescription'], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any class other than EatingSummary that can be the domain of 'eatingDuration'? | Can the property 'eatingDuration' be asserted for any entity that is not an EatingSummary? | What are the possible classes that 'eatingDuration' can have as its subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Measurement\nDescription: Measurement is defined as a subclass of Observation. Every Measurement instance formally describes only entities classified as event:Measurement, ensuring it cannot describe other types of events. Additionally, each Measurement must be provided by either an event:Person or a Sensor, restricting its provenance to these two sources. This specification captures the nature of measurements as observational entities exclusively linked to specific events and originating strictly from people or sensor devices.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[describes only event:Measurement]', '[providedBy only (event:Person or Sensor)]']}\nGenerated CQs:", "output": "Is Measurement classified as a narrower concept under Observation? | Which specialized forms of Observation does Measurement represent? | What broader categories encompass Measurement within the context of Observation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Report\nDescription: Report is a class defined by a set of strict property restrictions: each instance must be provided by exactly one event:Person and must refer to exactly one instance of either home:Questionnaire, lab:ClinicalRecord, or lab:DemographicCharacteristicsRecord. Additionally, every Report must have exactly one hasPlausibilityMetric value of type xsd:double and exactly one hasReportingTime value of type time:Instant, with no other values permitted for these properties. The class definition ensures that each Report is uniquely associated with one provider, one time of reporting, a plausibility metric, and one described source record, reflecting a precise and singular reporting activity.\nAxiom: {'propertyRestrictions': ['[hasPlausibilityMetric exactly 1 xsd:double]', '[hasPlausibilityMetric only xsd:double]', '[describes only (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]', '[providedBy exactly 1 event:Person]', '[providedBy only event:Person]', '[hasReportingTime only time:Instant]', '[describes exactly 1 (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]']}\nGenerated CQs:", "output": "Is it mandatory that each Report has exactly one hasReportingTime property pointing to a time:Instant? | Can a Report possess more than one hasReportingTime value, or is it strictly limited to one time:Instant? | Does the ontology exclude the possibility of a Report having zero or multiple hasReportingTime assignments? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Accelerometer\nDescription: Accelerometer is defined as a subclass of WearableSensor. This means that every accelerometer is considered a wearable sensor, inheriting all characteristics of wearable sensors. Accelerometers are specialized sensors used in wearable devices to measure acceleration forces, which can be used to detect motion, orientation, and activity levels. No additional axioms further constrain the class.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "output": "What broader sensor groups does Accelerometer belong to? | Which other types of sensors are classified as WearableSensor alongside Accelerometer? | Is Accelerometer categorized under WearableSensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DTI-2\nDescription: DTI-2 is defined as a subclass of WearableSensor, indicating that it inherits all characteristics of wearable sensors. This means any instance of DTI-2 is necessarily a wearable sensor, though no further distinguishing properties or restrictions are specified.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "output": "Which sensor types are more specific than WearableSensor, specifically including DTI-2? | To which parent categories does DTI-2 conceptually belong? | Does DTI-2 fall under the category of WearableSensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableMicrophone\nDescription: WearableMicrophone is defined as a subclass of WearableSensor. This class represents microphones that are designed to be worn on the body, distinguishing them from other types of wearable sensors by their specific function of capturing audio signals. Members of this class inherit all attributes and behaviors of wearable sensors, with a focus on audio data acquisition.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "output": "Which types of WearableSensor include WearableMicrophone as a more specific subclass? | Does WearableMicrophone fall under the broader class of WearableSensor? | Into what higher-level classes can the WearableMicrophone entity be grouped? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableVideoCamera\nDescription: WearableVideoCamera is defined as a subclass of WearableSensor. This means any instance of WearableVideoCamera is also an instance of WearableSensor, inheriting all characteristics of wearable sensors. WearableVideoCamera specifically refers to sensors that are worn on the body and are capable of capturing video data.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "output": "To which broader sensor categories does WearableVideoCamera belong according to the ontology? | Which sensor types are considered more specific instances of WearableSensor, such as WearableVideoCamera? | Is WearableVideoCamera classified as a kind of WearableSensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Alert\nDescription: Alert is defined as a subclass of Feedback, meaning every instance of Alert is also considered an instance of Feedback. This class captures specific types of feedback events characterized as alerts, distinguishing them from other forms of feedback. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Feedback']}\nGenerated CQs:", "output": "Which higher-level categories does Alert fall under? | What are all subclasses categorized under Feedback, such as Alert? | Is Alert classified as a type of Feedback? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ambient2DVideoCamera\nDescription: Ambient2DVideoCamera is defined as a subclass of FixedSensor, indicating that every Ambient2DVideoCamera is a type of sensor with a fixed position. This class represents video cameras designed to capture ambient, two-dimensional visual information from a stationary location.\nAxiom: {'subClassOf': ['FixedSensor']}\nGenerated CQs:", "output": "Which sensor types are categorized as subclasses of FixedSensor, such as Ambient2DVideoCamera? | Does Ambient2DVideoCamera fall under the category of FixedSensor? | What parent classes are associated with Ambient2DVideoCamera? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: _3DVideoCamera\nDescription: _3DVideoCamera is defined as a subclass of FixedSensor, indicating that every instance of _3DVideoCamera is a type of sensor that operates in a fixed position. This class represents cameras capable of capturing three-dimensional video data, inheriting all characteristics of fixed sensors.\nAxiom: {'subClassOf': ['FixedSensor']}\nGenerated CQs:", "output": "Does the category FixedSensor include more specific types such as 3DVideoCamera? | Which sensor types are subclasses of FixedSensor, with reference to 3DVideoCamera? | To which higher-level classes does 3DVideoCamera belong within this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FixedSensor\nDescription: FixedSensor is defined as a subclass of Sensor. This indicates that every FixedSensor is a type of Sensor, inheriting all characteristics of the Sensor class. No additional constraints or distinguishing axioms are specified beyond this hierarchical relationship, meaning FixedSensors share the essential properties of Sensors.\nAxiom: {'subClassOf': ['Sensor']}\nGenerated CQs:", "output": "Which types are directly categorized under Sensor, such as FixedSensor? | Is FixedSensor classified within the broader group of Sensor? | What more general groupings include FixedSensor as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableSensor\nDescription: WearableSensor is defined as a subclass of Sensor. This means that every instance of WearableSensor is also considered an instance of Sensor, inheriting its general properties and behaviors. WearableSensor typically refers to a sensor designed to be worn on the human body for the purpose of monitoring physiological signals, activity, or environmental parameters.\nAxiom: {'subClassOf': ['Sensor']}\nGenerated CQs:", "output": "Which entities are defined as more specific types within Sensor, such as WearableSensor? | What higher-level groups does WearableSensor belong to in the ontology? | Does the category WearableSensor fall under the broader classification of Sensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Detection\nDescription: Detection is defined as a subclass of Observation. Individuals classified as Detection must only describe either an event of type AtomicActivity or ObjectEvent, and are restricted to being provided exclusively by a ProcessingComponent. This ensures that each Detection instance is specifically tied to these event types, and clearly attributed to a particular processing component within the system.\nAxiom: {'subClassOf': ['Observation'], 'propertyRestrictions': ['[describes only (event:AtomicActivity or event:ObjectEvent)]', '[providedBy some ProcessingComponent]']}\nGenerated CQs:", "output": "Is it required that the provider of Detection is always a ProcessingComponent? | Can Detection have any provider other than a ProcessingComponent? | Are all sources supplying Detection instances necessarily classified as ProcessingComponent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Observation\nDescription: Observation is a class characterized by its formal linkage to a single event, as indicated by the restriction that each Observation describes exactly one event:Event. Each Observation is provided by exactly one provider, restricted to being either a event:Person, a ProcessingComponent, or a Sensor. Observations are further annotated with precisely one plausibility metric (hasPlausibilityMetric exactly 1 xsd:double) and exactly one reporting time (hasReportingTime exactly 1 time:Instant). These formal restrictions ensure that an Observation instance unambiguously refers to a specific event, has a single well-defined provider, includes a quantitative plausibility assessment, and records the precise time at which the observation was reported.\nAxiom: {'propertyRestrictions': ['[describes only event:Event]', '[providedBy only (event:Person or ProcessingComponent or Sensor)]', '[describes exactly 1 event:Event]', '[hasPlausibilityMetric only xsd:double]', '[hasReportingTime only time:Instant]', '[hasReportingTime exactly 1 time:Instant]', '[hasPlausibilityMetric exactly 1 xsd:double]', '[providedBy exactly 1 (event:Person and ProcessingComponent and Sensor)]']}\nGenerated CQs:", "output": "Is each Observation required to have exactly one provider, which must be either an event:Person, a ProcessingComponent, or a Sensor? | Can an Observation ever have its providedBy property assigned to more than one instance among event:Person, ProcessingComponent, or Sensor? | Does the property restriction for providedBy on Observation exclude all providers except event:Person, ProcessingComponent, or Sensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sensor\nDescription: Sensor is a class characterized by the restriction that every instance must be attached to exactly one entity from the event:Entity class; no sensor can be attached to more than one, nor to any entity outside of event:Entity. This ensures a one-to-one association between each sensor and an event entity.\nAxiom: {'propertyRestrictions': ['[attachedTo exactly 1 event:Entity]', '[attachedTo some event:Entity]']}\nGenerated CQs:", "output": "Is it required that every Sensor be attached only to instances of event:Entity? | Can a Sensor ever be attached to something other than an event:Entity? | Does the ontology restrict a Sensorâ€™s attachedTo property exclusively to event:Entity instances? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Recognition\nDescription: Recognition is defined as a subclass of Observation, representing a specific type of observation process. It is further constrained such that any instance of Recognition must be provided only by either a Person or a ProcessingComponent, ensuring that the source of recognition events is always one of these two entities. This formalization distinguishes Recognition events from other Observations based on their permissible providers.\nAxiom: {'subClassOf': ['Observation'], 'propertyRestrictions': ['[providedBy only (event:Person or ProcessingComponent)]', '[describes only event:ComplexActivity]']}\nGenerated CQs:", "output": "Does the Recognition property only describe events classified as ComplexActivity? | Is it required that Recognition property never describes any event other than those of type ComplexActivity? | Can Recognition property refer to events not categorized as ComplexActivity under this restriction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Result\nDescription: Result is a class characterized by several property restrictions: each Result must be described by exactly one DaySummary or Problem, and may only describe these types. Each Result must be provided by exactly one entity, which can be either a Person or a ProcessingComponent, and may only be provided by these types. Furthermore, each Result must have exactly one reporting time, which must be an instance of time:Instant. Results may have plausibility metrics, represented only by values of type xsd:double. These restrictions ensure that every Result is uniquely linked to its source, time, and subject, reflecting precise and validated reporting.\nAxiom: {'propertyRestrictions': ['[providedBy exactly 1 (event:Person or ProcessingComponent)]', '[hasReportingTime exactly 1 time:Instant]', '[hasReportingTime only time:Instant]', '[describes only (home:DaySummary or home:Problem)]', '[providedBy only (event:Person or ProcessingComponent)]', '[hasPlausibilityMetric only xsd:double]', '[describes exactly 1 (home:DaySummary or home:Problem)]', '[hasPlausibilityMetric exactly 1 xsd:double]']}\nGenerated CQs:", "output": "Is each Result entity associated with exactly one plausibility metric value of type xsd:double? | Can a Result have more than one plausibility metric assigned to it? | Is it possible for a Result to lack a plausibility metric of type xsd:double? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: roomLocalisation\nDescription: The property \"roomLocalisation\" has no explicitly defined domain, range, or characteristics, and is not specified as a sub-property or inverse of any other property. In the absence of further axioms or existing description, its use and related entities remain unspecified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can serve as the domain for the property 'roomLocalisation'? | Is it correct that the property 'roomLocalisation' has no domain specified? | Is it correct that the property 'roomLocalisation' has no range defined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasParticipant\nDescription: The property \"hasParticipant\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. It can be used to relate any two individuals in the ontology without restriction. No additional description or constraints are provided by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities are permitted as subjects of the 'hasParticipant' property? | Is it correct that the property 'hasParticipant' does not specify any domain? | What kinds of entities can appear as the value of the 'hasParticipant' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. This property is generally intended to associate an entity with a quality but its precise usage is not restricted by axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasQuality' does not specify a range? | Can 'hasQuality' be used with any type of subject entity? | Is it correct that the property 'hasQuality' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasAgent\nDescription: The property \"hasAgent\" does not have asserted characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and has no specified inverse. This property is intended to relate entities to their agents, but its usage is not formally constrained by ontology axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasAgent' does not have a specified range? | What can be the range of the property 'hasAgent'? | Is it correct that the property 'hasAgent' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: providedBy\nDescription: The property \"providedBy\" has no specified characteristics, domain, or range, and is not defined as a sub-property of or inverse to any other property. Its use and applicable classes are unrestricted, indicating a general-purpose relationship for associating entities with their providers.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What are the possible domains for the property 'providedBy'? | Which types of subjects can 'providedBy' be used with? | What can serve as the range for the property 'providedBy'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no explicitly defined characteristics, domain, or range restrictions, and does not specify any super-properties or inverse properties. It is used to relate entities to their duration, but the types of subjects or objects are not formally constrained.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'duration' have any type of value as its range, or should it be restricted to a specific class? | Can 'duration' be applied to any subject, or should it be restricted to specific classes? | Is it correct that the property 'duration' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPlausibilityMetric\nDescription: The property \"hasPlausibilityMetric\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property and has no defined inverse. The purpose of this property is not currently described and would depend on its intended use within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'hasPlausibilityMetric' has no defined range in the ontology? | Are there any constraints limiting the range of values for 'hasPlausibilityMetric'? | Is it correct that the property 'hasPlausibilityMetric' does not specify a domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: attachedTo\nDescription: The property \"attachedTo\" has no explicitly defined characteristics, domain, or range restrictions and is not specified as a sub-property or an inverse of any other property. This indicates that \"attachedTo\" is a general-purpose property intended to express an unspecified attachment relationship between entities.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it appropriate for 'attachedTo' to have no specified domain? | Is there any range specified for the property 'attachedTo'? | What can be the domain of the property 'attachedTo'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property and has no inverse property declared. Its intended usage is not further detailed by current axioms or description.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities or data types are allowed as the range of the property 'startTime'? | Is it correct that the property 'startTime' does not have a defined range? | Is it correct that the property 'startTime' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: refersTo\nDescription: The property \"refersTo\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This indicates its use is unconstrained with respect to the types of entities it connects, allowing it to relate any two individuals without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can appear as the object of the 'refersTo' property? | What entities can serve as the domain of the property 'refersTo'? | Can 'refersTo' have subjects that do not belong to any particular class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: describes\nDescription: The property \"describes\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. It is a general property intended to associate one entity with another in a descriptive relationship, without restrictions on the types of entities it connects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'describes' has no specified range? | What types of entities, if any, can act as the subject for the 'describes' property? | Is it correct that the property 'describes' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasReportingTime\nDescription: The property \"hasReportingTime\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a subproperty of any other property and does not have an inverse property. No additional description or constraints are currently provided, indicating that its intended usage and value type are not restricted by the ontology at this stage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasReportingTime' does not specify any domain? | Can a range be specified for 'hasReportingTime', and if so, what should it be? | Can 'hasReportingTime' be used with subjects of any class, or are there restrictions? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Measurement\nDescription: Measurement is defined as a subclass of Event. Each instance of Measurement must refer to exactly one Entity and is related only to entities of the class Entity. It must also possess exactly one PhysicalQuality, and the hasQuality property can only reference members of PhysicalQuality. Additionally, every Measurement must have exactly one value, this value being a literal as specified by the rdfs:Literal datatype. These axioms ensure that each Measurement event precisely characterizes the act of quantifying a single quality of a single entity and recording this observation as a literal value.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasQuality only PhysicalQuality]', '[refersTo exactly 1 Entity]', '[hasValue exactly 1]', '[hasQuality exactly 1 PhysicalQuality]', '[refersTo only Entity]']}\nGenerated CQs:", "output": "Is every Measurement associated with at least one value via the property hasValue? | Does the definition of Measurement require it to have the hasValue property linked to an rdfs:Literal? | Can a Measurement exist without specifying a hasValue relationship to any data value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhoneRinging\nDescription: PhoneRinging is defined as a subclass of Ringing, describing events or states where ringing occurs specifically due to a telephone. Every instance of PhoneRinging is associated with at least one agent that is a telephone, as specified by the property restriction (hasAgent some Telephone). This ensures that PhoneRinging refers exclusively to ringing acts caused by telephones, distinguishing it from other types of ringing (such as an alarm or bell).\nAxiom: {'subClassOf': ['Ringing'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Is it required that each PhoneRinging event involves at least one agent that is a Telephone? | Can a PhoneRinging event occur without being associated with a Telephone agent through the hasAgent property? | Does the occurrence of PhoneRinging always necessitate a Telephone participating as the agent via hasAgent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InLocation\nDescription: InLocation is defined as a subclass of AtomicActivity, representing activities associated with a specific physical location. Every instance of InLocation must have at least one roomLocalisation relationship to a Room, ensuring that all activities of this class are explicitly linked to a room where they occur.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[roomLocalisation some Room]']}\nGenerated CQs:", "output": "Does every instance of InLocation represent a form of AtomicActivity? | What are the more specific activities classified under AtomicActivity, such as InLocation? | Which upper-level activity categories include InLocation as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HeartRate\nDescription: HeartRate is defined as a subclass of PhysiologicalMeasurement, representing a specific type of physiological measurement characterized by having exactly one associated rate value, which must be provided as a literal (numerical) value. This class ensures that every instance of HeartRate records precisely one measurement value through the hasRate property.\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasRate exactly 1]']}\nGenerated CQs:", "output": "Is every instance of HeartRate required to have at least one value assigned through the hasRate property? | Does the ontology specify that HeartRate always possesses a hasRate property linking to a literal value? | Is it necessary for HeartRate to be characterized by the presence of some hasRate relationship with a literal datatype? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InRoom\nDescription: InRoom is defined as a subclass of InLocation, indicating that it represents a more specific type of location context. Every instance of InRoom must be associated with at least one Place through the roomLocalisation property. This formalization ensures that anything classified as InRoom is located within a specified Place, thereby refining its spatial characterization within a broader location hierarchy.\nAxiom: {'subClassOf': ['InLocation'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Is every instance of InRoom associated with at least one Place via the roomLocalisation property? | Does the existence of the roomLocalisation property for InRoom necessarily indicate a connection to a Place? | Must an InRoom relation always specify a Place as its roomLocalisation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KettleOn\nDescription: KettleOn is a subclass of On, representing states or events in which something is switched on. Specifically, KettleOn instances are characterized by having some agent that is a Kettle (i.e., a Kettle is responsible for or involved in the 'on' state). This ensures that only situations where a Kettle is turned on are included in this class.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[hasAgent some Kettle]']}\nGenerated CQs:", "output": "Does KettleOn represent a specific instance within the broader class On? | Which situations classified as On also include KettleOn as a specialized case? | What general categories encompass KettleOn within the hierarchy of On? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lying\nDescription: Lying is defined as a subclass of Posture and is characterized by the requirement that it occurs in association with some piece of Furniture. Any instance of Lying must involve an object that is at least partially localized on furniture, distinguishing this posture from other postures that may occur in different contexts.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[objectLocalisation some Furniture]']}\nGenerated CQs:", "output": "Is Lying an instance of the general category Posture? | Which specific types of Posture include Lying as a subclass? | Under which broader classes within the ontology is Lying classified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Active\nDescription: Active is defined as a subclass of State. This means that any instance of Active is also an instance of State, representing a particular condition or mode within the broader context of states. Active inherits all general properties and constraints of State, distinguishing itself as a specific form or type of state.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "What broader groupings encompass the concept of Active in the ontology? | Which entities are recognized as specific forms of State, such as Active? | Does Active fall under the general classification of State? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Apnea\nDescription: Apnea is defined as a subclass of State, indicating that it represents a specific type of state or condition. Individuals classified as Apnea are instances where an organism is in a particular state, typically characterized by the temporary cessation of breathing. This classification ensures that Apnea is formally recognized as a distinct physiological state within the ontology.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "What broader classes does Apnea fall under in the hierarchy? | Is Apnea categorized as a specific type of State? | Which conditions are subclasses under the State category, such as Apnea? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Arousal\nDescription: Arousal is defined as a subclass of State, representing a specific type of state within the ontology. Members of the Arousal class inherit all characteristics of State, indicating that arousal denotes a particular condition or status, although no further differentiating axioms or property restrictions are specified.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "What subclasses are present within the concept of State, such as Arousal? | Is Arousal categorized under the broader class of State? | Which higher-level classes encompass Arousal as a more specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoveLimb\nDescription: MoveLimb is defined as a subclass of State, indicating that it represents a specific type of state within the ontology. This class characterizes conditions or situations involving the movement of a limb, and inherits all general properties applicable to State. There are no additional restrictions or disjointness axioms specified for MoveLimb.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "Which higher-level categories conceptually include MoveLimb? | Is MoveLimb a specific instance within the broader category of State? | What types of State include MoveLimb as a more specialized concept? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Posture\nDescription: Posture is defined as a subclass of State, meaning any instance of Posture is also an instance of State. This class represents the particular physical alignment or arrangement of an organism or object. The lack of disjointness or additional restrictions indicates Posture is broadly characterized within the hierarchy of states or conditions.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "What are the different subclasses identified under State, including Posture? | Is Posture considered a more specific form within the broader category of State? | Which general classifications encompass Posture in this hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Rest\nDescription: Rest is defined as a subclass of State, indicating that it represents a specific type of state within the ontology. No further restrictions or properties are specified, and it is annotated with the comment \"DTI-2.\"\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "Which broader categories encompass the concept of Rest? | Is Rest classified as a type of State? | What more specific concepts fall under the category of State, such as Rest? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AlarmClock\nDescription: AlarmClock is defined as a subclass of Object. This classification indicates that every instance of AlarmClock is an Object, inheriting all associated characteristics. No additional properties or constraints are specified in the current axiom or description.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What types are covered under the broader class Object, including AlarmClock? | Is AlarmClock classified as a type of Object? | Which more general classes encompass AlarmClock within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Appliance\nDescription: Appliance is defined as a subclass of Object, indicating that every appliance is an object within the domain. This class encompasses all physical objects designed to perform specific functions, typically in a household or industrial setting. No further restrictions or specializations are specified in the current axioms.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Into which higher-level categories can Appliance be organized? | Which entities fall under the broader class of Object and include Appliance? | Is Appliance classified as a specialized form of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Book\nDescription: Book is defined as a subclass of Object. This formalization states that every Book is an Object, inheriting all general characteristics of Objects. No further restrictions or distinguishing properties are specified in the current axiom or description.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is Book classified as a more specific type under the broader category of Object? | To which general types or categories does Book belong in the ontology? | Which entities are categorized as specializations of Object, including Book? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bucket\nDescription: Bucket is defined as a subclass of Object. This means that every instance of Bucket is considered an Object, inheriting all the general properties and constraints associated with Objects. Since no additional restrictions or relations are specified, Bucket serves as a more specific type of Object without further distinguishing characteristics in this formalization.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "To which higher-level classes does Bucket belong? | Is Bucket categorized under the broader concept of Object? | What kinds of Objects include Bucket as a more specific type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cup\nDescription: Cup is defined as a subclass of Object. This means every cup is considered an object, inheriting all properties and characteristics associated with objects. No additional distinguishing characteristics or property restrictions are specified for the class at this level.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is Cup a specific type within the broader category of Object? | What are the parent categories that encompass Cup? | Which subclasses are classified under Object, including Cup? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cuttlery\nDescription: Cuttlery is defined as a subclass of Object, representing items that fall within the broader category of objects. At present, there are no additional restrictions or characteristics specified, so any individual member of Cuttlery must be an Object. Further distinctions or properties distinguishing Cuttlery from other Objects are not provided in the current axiom.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What are the more specialized categories that fall under Object, such as Cuttlery? | To which higher-level groupings can Cuttlery be assigned? | Does Cuttlery belong to the broader class of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Door\nDescription: Door is defined as a subclass of Object. This establishes that every Door is considered an Object within the ontology, inheriting all characteristics and properties assigned to Object. No additional restrictions or disjointness axioms are specified, so the class serves as a general categorization for any entity that can be considered a door.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is Door classified as a specific kind of Object? | What are the more encompassing categories to which Door belongs? | Which specialized types fall under the broader class of Object, including Door? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorBell\nDescription: DoorBell is defined as a subclass of Object, indicating it is a physical entity or artifact. This class encompasses all entities recognized as doorbells, but no further axiomatic constraints or distinguishing characteristics are specified. Members of this class inherit general properties of objects.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is DoorBell classified as a specific type of Object? | Which entities are defined as subcategories under Object, such as DoorBell? | What are the higher-level classes that DoorBell is associated with? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Furniture\nDescription: Furniture is defined as a subclass of Object, indicating that all pieces of furniture are considered objects. This classification positions furniture within a broader category of tangible entities that have physical presence, without specifying further characteristics or restrictions.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Among the subclasses of Object, does Furniture appear as a member? | Which categories encompass Furniture as a more general class, including Object? | Is Furniture classified under the broader category of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Glass\nDescription: Glass is defined as a subclass of Object, meaning it represents a specific kind of object within the ontology. No further restrictions or disjointness are specified, so any individual classified as Glass inherits all the properties of Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What entities are classified as specializations of Object, such as Glass? | Can Glass be classified as a kind of Object? | Which higher-level categories include Glass within their hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KitchenPress\nDescription: KitchenPress is defined as a subclass of Object, indicating that it represents a specific type of object within the ontology. No additional axioms or restrictions are specified, so individuals of this class inherit all properties of Object without further distinguishing characteristics.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What higher-level groupings encompass KitchenPress within the ontology? | Is KitchenPress classified under the broader category of Object? | Which items fall under Object, specifically including KitchenPress? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mop\nDescription: mop is defined as a subclass of Object. This means that every mop is considered to be an Object within the ontology, inheriting all characteristics associated with objects. There are currently no further restrictions or differentiating axioms specified for the mop class.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What broader categories encompass the concept of Mop? | Which items are categorized more specifically than Object, including Mop? | Does Mop fall under the general classification of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Plate\nDescription: Plate is defined as a subclass of Object. This means that every instance of Plate is also an instance of Object, inheriting all properties and characteristics associated with Object. No further restrictions or characteristics are specified for Plate beyond its classification as an Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Which concepts fall under the category of Object, such as Plate? | Is Plate classified as a type of Object? | What broader classes include Plate as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RemoteControl\nDescription: RemoteControl is defined as a subclass of Object, indicating that all remote controls are considered objects within the ontology. This class captures entities that serve as physical devices used to control other systems or appliances remotely. There are currently no additional property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "To what higher-level classifications does RemoteControl belong? | Which entities are defined as more specific types within the Object category, including RemoteControl? | Is RemoteControl classified under the broader class of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Telephone\nDescription: Telephone is defined as a subclass of Object, establishing it as a specific type of object. No further restrictions or relationships are specified, so any individual classified as a Telephone is understood to be an object according to the current ontology.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Does Telephone fall under the broader classification of Object? | What are the immediate parent classes of Telephone in the ontology? | Which specific subclasses are encompassed within Object, such as Telephone? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WaterCan\nDescription: WaterCan is defined as a subclass of Object. This means every water can is formally recognized as an Object within the ontology. No additional axioms or property restrictions are specified, so WaterCan inherits all general characteristics of Object, serving as a specialized type of Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What items are considered more specific than Object, such as WaterCan? | Is Object a generalization that includes WaterCan as a specific instance? | To what broader categories does WaterCan belong within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Window\nDescription: Window is defined as a subclass of Object, indicating that every Window is an Object. No further distinguishing characteristics or constraints are specified beyond this general classification.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What overarching categories does Window fit into? | Is Window classified within the broader group of Object? | Which entities fall under Object, including Window? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnswerPhoneCall\nDescription: AnswerPhoneCall is defined as a subclass of TelephoneInteraction, indicating that it represents a specialized form of interaction involving telephones. Any individual classified as an AnswerPhoneCall inherently fulfills the characteristics and constraints of a TelephoneInteraction, but is specifically focused on the activity of answering a phone call.\nAxiom: {'subClassOf': ['TelephoneInteraction']}\nGenerated CQs:", "output": "Does AnswerPhoneCall fall under the general category of TelephoneInteraction? | Which specific types are encompassed by TelephoneInteraction, such as AnswerPhoneCall? | What are the direct parent categories of AnswerPhoneCall? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MakePhoneCall\nDescription: MakePhoneCall is defined as a subclass of TelephoneInteraction, indicating that it represents a specific type of interaction conducted via telephone. Any instance classified as MakePhoneCall necessarily inherits all characteristics of TelephoneInteraction, distinguishing itself as an interaction where a phone call is made.\nAxiom: {'subClassOf': ['TelephoneInteraction']}\nGenerated CQs:", "output": "Is every MakePhoneCall event classified under TelephoneInteraction? | What broader interaction types encompass MakePhoneCall within their classification? | Which specific interactions are categorized as subtypes of TelephoneInteraction, such as MakePhoneCall? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AtomicActivity\nDescription: AtomicActivity is defined as a subclass of Activity. This indicates that every AtomicActivity is an Activity, but it may possess more specific properties or constraints not captured at the Activity level. No additional axioms or restrictions are provided, so AtomicActivity serves as a specialized categorization within the broader class of activities.\nAxiom: {'subClassOf': ['Activity']}\nGenerated CQs:", "output": "Which types fall under Activity and encompass AtomicActivity as a subcategory? | What overarching types does AtomicActivity derive from within the ontology hierarchy? | Is AtomicActivity classified under the broader group of Activity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ComplexActivity\nDescription: ComplexActivity is defined as a subclass of Activity, meaning every ComplexActivity is an Activity. No additional property restrictions or disjointness axioms are specified, indicating that ComplexActivity inherits all characteristics of Activity but may represent more specialized or structured forms of activities.\nAxiom: {'subClassOf': ['Activity']}\nGenerated CQs:", "output": "Is ComplexActivity classified under the broader category of Activity? | Which subclasses are encompassed within Activity, specifically including ComplexActivity? | What are the general categories that ComplexActivity falls under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bathroom\nDescription: Bathroom is defined as a subclass of Room, establishing that every bathroom is a specialized type of room. No additional axioms or property restrictions are specified, so its distinguishing characteristic is solely its classification within the broader category of rooms.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "output": "What specific spaces are considered subclasses of Room, such as Bathroom? | Is Bathroom classified under the general category of Room? | Which broader categories include Bathroom as a more specific type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bedroom\nDescription: Bedroom is defined as a subclass of Room, indicating that every instance of Bedroom is also an instance of Room. This classification structurally organizes Bedroom within the broader hierarchy of building spaces, emphasizing that a Bedroom inherits all general characteristics of a Room while potentially possessing more specific properties related to its intended use as a sleeping area.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "output": "Is Bedroom classified as a specific type within the broader concept of Room? | Which subcategories are present under the class Room, including Bedroom? | What higher-level categories encompass Bedroom according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Kitchen\nDescription: Kitchen is defined as a subclass of Room, indicating that every kitchen is considered a type of room within an environment. No additional property restrictions or relationships are specified in the axiom, so the class primarily inherits general characteristics of rooms while denoting its specific use as a kitchen.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "output": "What are the specific types that fall under Room, such as Kitchen? | Which general categories include Kitchen as a member? | Is Kitchen classified within the broader category of Room? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LivingRoom\nDescription: LivingRoom is defined as a subclass of Room, representing a specific type of room within a structure. This classification indicates that every instance of LivingRoom is necessarily an instance of Room, inheriting all properties and constraints that apply to Room. No further distinguishing axioms or restrictions are present beyond this subclass relationship.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "output": "Is every LivingRoom classified as a kind of Room? | Which general categories encompass the concept of a LivingRoom? | What specific types fall under the broader category of Room, such as LivingRoom? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bed\nDescription: Bed is formally defined as a subclass of Furniture, indicating that every instance of Bed is also an instance of Furniture. This classification situates Bed within the broader category of items intended for furnishing interior spaces. No additional axioms or restrictions are specified.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "output": "Which items are classified as subtypes of Furniture, including Bed? | Does Bed fall under the category of Furniture? | What are the broader categories that the concept Bed is grouped under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Chair\nDescription: Chair is defined as a subclass of Furniture, indicating that every Chair is a type of Furniture. This formalization situates Chair within a broader hierarchy of household or office items intended for use and support. Without additional restrictions or properties, the class encompasses any object recognized as a Chair within the general category of Furniture.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "output": "What general classes encompass Chair within their classification hierarchy? | Is Chair categorized under broader classes such as Furniture? | What items are classified as more specific types of Furniture, including Chair? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Couch\nDescription: Couch is defined as a subclass of Furniture, indicating that every couch is a type of furniture. No additional property, disjointness, or restriction axioms are specified, so the class inherits all general characteristics of furniture but is specifically dedicated to couches.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "output": "Is Couch an instance within the general class of Furniture? | To which broader classification does Couch belong in the context of furnishings? | What are the direct subcategories of Furniture, including Couch? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Table\nDescription: Table is defined as a subclass of Furniture, meaning every instance of Table is also considered an instance of Furniture. No additional property restrictions or disjointness axioms are specified, so the class captures any furniture item that qualifies as a table within the ontology.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "output": "Is Table classified under the broader category of Furniture? | Which types fall under the category Furniture, including Table? | What higher-level groups does Table belong to in the context of this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: BedExit\nDescription: BedExit is defined as a subclass of ComplexActivity, indicating that it represents a type of complex action or event. Individuals belonging to this class participate in multifaceted activities related to the process of exiting a bed. The classification ensures that any instance of BedExit is recognized specifically as a form of ComplexActivity.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Which activities are categorized as more specific forms of ComplexActivity, including BedExit? | What higher-level activity categories include BedExit as a specialized instance? | Does BedExit fall under the broader classification of ComplexActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fall\nDescription: Fall is defined as a subclass of ComplexActivity, indicating it is categorized as a type of complex activity. The current description notes that a fall occurs \"if not supported by LCS\" (likely referring to 'Lowering Control System' or a similar support mechanism), implying the event is characterized by the absence of this support during the occurrence. No disjointness or specific property restrictions have been asserted for this class.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Is Fall classified under the broader type of ComplexActivity? | Of which more general categories is Fall a constituent member? | What specific activities are categorized as subclasses of ComplexActivity, including Fall? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FoodAndDrinkConsumption\nDescription: FoodAndDrinkConsumption is defined as a subclass of ComplexActivity. This class represents activities that involve the intake or consumption of food and/or drink, and it inherits all characteristics of ComplexActivity. No further property restrictions or disjointness axioms are specified, so its definition is based solely on its placement in the activity hierarchy.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Does FoodAndDrinkConsumption fall under the classification of ComplexActivity? | To which broader activity types is FoodAndDrinkConsumption related? | Which activities are encompassed by ComplexActivity, including FoodAndDrinkConsumption? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nap\nDescription: Nap is defined as a subclass of ComplexActivity, indicating that it is a type of complex activity within the ontology. As a ComplexActivity, a nap is considered to involve multiple components or steps beyond a simple action, distinguishing it from more basic activities. No further restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Which activities are considered subtypes under ComplexActivity, such as Nap? | Is Nap categorized as an instance of ComplexActivity? | What broader activities encompass Nap as a more specific subtype? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightSleep\nDescription: NightSleep is defined as a subclass of ComplexActivity, representing the entire sleep episode experienced during the night, including any relevant inferences or processes that occur throughout the sleep period. This class formalization associates NightSleep with complex activities and ensures its distinction by emphasizing the inclusion of all inferable events or activities occurring during sleep.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Is NightSleep categorized under the broader class of ComplexActivity? | What specific activities are classified as subclasses of ComplexActivity, including NightSleep? | Which overarching activity classes does NightSleep pertain to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareDrink\nDescription: PrepareDrink is defined as a subclass of ComplexActivity, indicating that it represents a type of complex activity within the ontological model. Instances of PrepareDrink inherit all characteristics of ComplexActivity and specifically pertain to the processes and actions involved in preparing a drink. The class does not impose further restrictions or differentiators beyond its place in the activity hierarchy.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Is PrepareDrink classified as a more specific activity under the broader ComplexActivity category? | What general categories encompass the activity PrepareDrink? | Which activities are direct specializations of ComplexActivity, such as PrepareDrink? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareMeal\nDescription: PrepareMeal is defined as a subclass of ComplexActivity, indicating that it represents a type of activity characterized by having multiple interrelated actions or steps. Any instance of PrepareMeal is therefore also an instance of ComplexActivity, situating meal preparation as a process that involves several coordinated activities.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Which activities are direct subtypes of ComplexActivity, including PrepareMeal? | Is PrepareMeal categorized as a type of ComplexActivity? | To which higher-level classes does PrepareMeal belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialInteraction\nDescription: SocialInteraction is defined as a subclass of ComplexActivity. This specifies that every instance of SocialInteraction is a type of ComplexActivity, indicating that social interactions are considered to involve multiple, coordinated actions or processes. No further restrictions or elaborations are provided, so the class is characterized primarily by its inherited properties from ComplexActivity.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "What are the more inclusive activity categories that encompass SocialInteraction? | Which activities are specified as subtypes of ComplexActivity, including SocialInteraction? | Does SocialInteraction fall under the broader classification of ComplexActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TableExit\nDescription: TableExit is defined as a subclass of ComplexActivity, indicating that every TableExit is a specific type of ComplexActivity. No additional property restrictions, disjointness, or further subclass relations are specified, so individuals of the TableExit class inherit all the general characteristics and behaviors attributed to ComplexActivity. This class is currently characterized solely by its hierarchical relation within the ontology.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "What general categories encompass TableExit as a specialized activity? | Is TableExit classified under the broader category of ComplexActivity? | Which activities are direct or indirect subclasses of ComplexActivity, including TableExit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Carer\nDescription: Carer is defined as a subclass of Person, indicating that every Carer is also a Person. No further axioms or property restrictions are specified, so a Carer inherits all characteristics of Person without additional differentiating features in this definition.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "output": "Are all Carers considered instances of the broader category Person? | Which specific roles fall under the classification of Person, such as Carer? | To which general classes does Carer belong within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Clinician\nDescription: Clinician is defined as a subclass of Person, indicating that every clinician is a person. No further axioms or property restrictions are specified, so the class currently serves as a specialization of Person without additional constraints.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "output": "Is Clinician categorized under the broader class of Person? | To which higher-level classes does Clinician belong within the ontology? | Which subclasses fall under the category of Person, including Clinician? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Patient\nDescription: Patient is defined as a subclass of Person, representing individuals who are receiving or registered to receive medical care or treatment. Any individual designated as a Patient is inherently a Person.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "output": "Does Patient fall under the general classification of Person? | What specific categories, such as Patient, are encompassed under the Person class? | Within which broader classes is Patient hierarchically included? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChangeOrientation\nDescription: ChangeOrientation is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible type of activity within the domain. While the current description provides a brief comment (\"WIMU\"), no detailed explanation is available. Based on its name and axiom, ChangeOrientation likely refers to an atomic activity where the orientation of an entity is altered.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Under which broader activity classification does ChangeOrientation fall? | Is ChangeOrientation categorized under AtomicActivity? | Which specific activities are considered subtypes of AtomicActivity, such as ChangeOrientation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChangePosture\nDescription: ChangePosture is defined as a subclass of AtomicActivity, indicating it represents an elementary, indivisible activity within the ontology. While the current description only notes \"WIMU,\" this class structurally inherits all characteristics of AtomicActivity and is intended to capture specific activities related to posture changes.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "What specific activities are included within the category of AtomicActivity, such as ChangePosture? | Does ChangePosture fall under the broader classification of AtomicActivity? | Which higher-level categories encompass ChangePosture in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DialNumber\nDescription: DialNumber is defined as a subclass of AtomicActivity. This means that every instance of DialNumber is also an instance of AtomicActivity. There are no further restrictions or disjointness axioms specified, so DialNumber inherits all characteristics of AtomicActivity without additional distinguishing features. This class is intended to represent the fundamental activity of dialing a number, which is atomic in nature within the modeled domain.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "What broader activity classifications does DialNumber belong to? | Which activities fall under the category of AtomicActivity, including DialNumber? | Is DialNumber regarded as a specific kind of AtomicActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Drink\nDescription: Drink is defined as a subclass of AtomicActivity, indicating that it represents a fundamental activity that cannot be further decomposed into simpler actions. This class encompasses all actions entailing the act of consuming liquids, and inherits general properties and constraints from AtomicActivity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is Drink categorized under the broader class of AtomicActivity? | What specific activities are included within AtomicActivity, such as Drink? | Which general activity types encompass Drink? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Eat\nDescription: Eat is defined as a subclass of AtomicActivity, indicating that it represents a fundamental, indivisible activity within the ontology. Any instance of Eat must also be an instance of AtomicActivity. No further constraints or characteristics are specified.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Under which broader activity classes does Eat fall? | What other activities, alongside Eat, are classified as specializations of AtomicActivity? | Is Eat an instance of the more general class AtomicActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalActivity\nDescription: PhysicalActivity is defined as a subclass of AtomicActivity. This classification indicates that any instance of PhysicalActivity is also an instance of AtomicActivity, inheriting all its properties and constraints. PhysicalActivity, therefore, represents a specific kind of AtomicActivity, typically involving bodily movement or exertion. No other disjointness or additional property restrictions are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is PhysicalActivity classified under the broader category of AtomicActivity? | To which higher-level categories does PhysicalActivity belong within the activity hierarchy? | Which activities are more specific than AtomicActivity, including PhysicalActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PickUpPhone\nDescription: PickUpPhone is defined as a subclass of AtomicActivity, indicating that it represents an indivisible, fundamental action within a larger process or workflow. This classification implies that PickUpPhone is treated as a single, non-decomposable activity in the ontology. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which activities are specified as subclasses of AtomicActivity, including PickUpPhone? | Into what higher-level categories is PickUpPhone organized? | Is PickUpPhone classified under the broader group of AtomicActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sleep\nDescription: Sleep is defined as a subclass of AtomicActivity, indicating that it represents a fundamental, indivisible type of activity within the given ontology. The current description (\"Gear 4 / DTI-2\") provides domain-specific or contextual labeling but does not further characterize the nature of Sleep. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is Sleep classified as a specific kind of AtomicActivity? | Which activities are categorized under AtomicActivity, such as Sleep? | What broader activity categories include Sleep as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Speak\nDescription: Speak is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible action within the ontology. Any instance of Speak is necessarily an AtomicActivity, but not all AtomicActivities are instances of Speak. No additional property restrictions or class relationships are specified for Speak in the current axiom.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is Speak classified as a specific kind of AtomicActivity? | What distinct activities fall under the category of AtomicActivity, including Speak? | Which broader categories encompass the activity Speak? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: State\nDescription: State is defined as a subclass of AtomicActivity, indicating that every State represents an atomic (indivisible) activity within a given framework. This classification positions State as a fundamental unit of activity, inheriting all characteristics and constraints of AtomicActivity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which activity types fall under the general class of AtomicActivity, including State? | What are the broader categories that encompass State? | Is State classified as a specialized form of AtomicActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StepCounting\nDescription: StepCounting is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible type of activity. The class is annotated with the comment \"WIMU,\" which may refer to its association with wearable inertial measurement unit systems, commonly used for tracking activity metrics such as steps. No further property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is StepCounting a more specific form of AtomicActivity? | Which activities fall under the scope of AtomicActivity, such as StepCounting? | To what higher-level categories is StepCounting classified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UseObject\nDescription: UseObject is defined as a subclass of AtomicActivity, indicating that it represents a specific type of atomic activity within the ontology. By this axiom, all instances of UseObject inherit the general properties and constraints of AtomicActivity, situating UseObject as a more specialized activity focused on the usage of objects.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "To which broader activity classes does UseObject belong according to the ontology structure? | Is UseObject classified under AtomicActivity in the ontology? | Which specific activities are categorized as subtypes of AtomicActivity, such as UseObject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Walk\nDescription: Walk is defined as a subclass of AtomicActivity, indicating that walking is considered a fundamental unit of activity within the ontology. No additional property restrictions or disjointness axioms are specified, so Walk inherits all characteristics of AtomicActivity, serving to represent the act of walking as a basic type of activity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which more general category does Walk directly belong to? | Is Walk classified under the broader group of AtomicActivity? | What are the specific activities that fall under AtomicActivity, such as Walk? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Closed\nDescription: Closed is defined as a subclass of ObjectEvent, indicating that it represents a specific type of event involving an object. Any individual belonging to the class Closed is inherently classified as an ObjectEvent, inheriting all of its characteristics. No additional distinguishing restrictions or properties are specified for Closed beyond its relationship to ObjectEvent.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "What overarching categories encompass Closed within the ontology? | Is Closed classified under the broader category of ObjectEvent? | Which concepts are more specific instances of ObjectEvent, such as Closed? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Off\nDescription: Off is defined as a subclass of ObjectEvent. This means every instance of Off is also an instance of ObjectEvent, inheriting all its properties and restrictions. The class Off is used to represent events where an object is turned off or ceases to be active. There are no further property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "Which broader event categories encompass Off? | Is Off classified as a specialization of ObjectEvent? | What specific types are included under ObjectEvent, such as Off? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: On\nDescription: On is defined as a subclass of ObjectEvent, meaning that all instances of On are specific types of ObjectEvent. This classification indicates that On inherits all characteristics of ObjectEvent, serving as a more specialized concept within the event hierarchy. No additional property restrictions or disjointness axioms are specified for On.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "What specific events are classified as subclasses of ObjectEvent, such as On? | Is On categorized under ObjectEvent as a more specialized concept? | Which broader event classes include On as a subtype? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Open\nDescription: Open is defined as a subclass of ObjectEvent. This means that every instance of Open is also an instance of ObjectEvent, situating it within the broader context of events involving objects. No additional characteristics or constraints beyond its classification under ObjectEvent are specified.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "What higher-level groupings include Open as a member? | Does Open fall under the wider class of ObjectEvent? | Which instances are classified as subtypes of ObjectEvent, such as Open? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ringing\nDescription: Ringing is defined as a subclass of ObjectEvent. This means that any instance of Ringing is also an instance of ObjectEvent, capturing events specifically characterized as ringing occurrences. No further restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "Does Ringing fall under the category of ObjectEvent? | Which events are considered more specific types within ObjectEvent, including Ringing? | What overarching categories is Ringing associated with? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cooker\nDescription: Cooker is defined as a subclass of Appliance. This class encompasses all appliances that are specifically designed for cooking functions, such as stoves, ovens, and similar equipment. Every instance of Cooker is, by definition, also an Appliance.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "What higher-level categories does Cooker belong to within the classification hierarchy? | Which types fall under the category of Appliance, specifically including Cooker? | Is Cooker classified under the broader group of Appliance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fridge\nDescription: Fridge is defined as a subclass of Appliance, indicating that every instance of Fridge is also an Appliance. This formalization groups fridges within the broader category of appliances, without imposing additional constraints or property restrictions specific to fridges.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "Which specific appliances include Fridge as a type? | Does Fridge fall under the general classification of Appliance? | To which broader categories is Fridge hierarchically related? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Kettle\nDescription: Kettle is defined as a subclass of Appliance, indicating that every kettle is considered a type of appliance. Currently, there are no additional property restrictions or disjointness axioms specified for this class, so its definition is based solely on its classification as an appliance.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "Which higher-level classes does Kettle inherit from? | Does Kettle fall under the broader grouping of Appliance? | What specific types are categorized as subclasses of Appliance, such as Kettle? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TV\nDescription: TV is defined as a subclass of Appliance. This means that every instance of TV is also considered an Appliance, inheriting all general characteristics of Appliances. No further restrictions, disjointness, or property constraints are specified.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "To which broader classes does TV belong within the ontology hierarchy? | Is TV categorized as a more specific type under Appliance? | Which appliances include TV as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WashingMachine\nDescription: WashingMachine is defined as a subclass of Appliance, indicating that all washing machines are considered a type of appliance. No further restrictions or relationships are specified in the current axioms. This class is used to represent devices designed for cleaning laundry.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "Is WashingMachine classified as a type of Appliance? | Which categories encompass WashingMachine as a more specialized instance, including Appliance? | What are the more general classes that WashingMachine is a member of? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cycling\nDescription: Cycling is defined as a subclass of OutdoorPhysicalActivity, meaning that it is classified as a type of physical activity that takes place outdoors. This formalization indicates that all instances of Cycling are also instances of OutdoorPhysicalActivity, inheriting its general characteristics.\nAxiom: {'subClassOf': ['OutdoorPhysicalActivity']}\nGenerated CQs:", "output": "Which specific activities fall under the category of OutdoorPhysicalActivity, such as Cycling? | What broader activity categories does Cycling fall under in this context? | Is Cycling classified as a specialized form of OutdoorPhysicalActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Running\nDescription: Running is defined as a subclass of OutdoorPhysicalActivity, indicating that all instances of Running are considered outdoor physical activities. This formalization situates Running within the broader context of activities performed outdoors that involve physical exertion.\nAxiom: {'subClassOf': ['OutdoorPhysicalActivity']}\nGenerated CQs:", "output": "Is Running classified under the broader category of OutdoorPhysicalActivity? | What specific types fall under OutdoorPhysicalActivity, such as Running? | Which higher-level activity classes does Running belong to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DangerousBedExit\nDescription: DangerousBedExit is defined as a subclass of BedExit. This indicates that every instance of DangerousBedExit is also an instance of BedExit, but captures those bed exit events that are specifically characterized as dangerous or high-risk. No further distinguishing axioms or property restrictions are specified beyond its position in the class hierarchy.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "output": "Is DangerousBedExit classified under the broader category of BedExit? | What are the direct parent classes for DangerousBedExit in the ontology? | Which specific types fall under BedExit, including DangerousBedExit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongBedExit\nDescription: LongBedExit is defined as a subclass of BedExit. This indicates that every instance of LongBedExit is also an instance of BedExit, inheriting all characteristics and restrictions that apply to BedExit, while potentially having additional distinguishing properties or constraints specific to LongBedExit.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "output": "Does LongBedExit fall under the broader classification of BedExit? | What more specific types are included within BedExit, such as LongBedExit? | Which general categories encompass LongBedExit in the hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightRoomVisit\nDescription: NightRoomVisit is defined as a subclass of BedExit, indicating that every instance of NightRoomVisit is also a kind of BedExit. This class represents events where an individual exits their bed specifically for a room visit during the night, inheriting all the characteristics and properties of BedExit while providing a more specific context for nighttime occurrences.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "output": "Which specific activities are categorized under BedExit, such as NightRoomVisit? | Are all NightRoomVisit instances considered examples of BedExit? | What broader event types encompass NightRoomVisit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FaceToFaceInteraction\nDescription: FaceToFaceInteraction is a subclass of SocialInteraction, representing social interactions that occur when participants are physically present with each other. Individuals in this class engage in direct, co-located communication, distinguishing them from remote or mediated interactions.\nAxiom: {'subClassOf': ['SocialInteraction']}\nGenerated CQs:", "output": "Which specific interactions fall under SocialInteraction, such as FaceToFaceInteraction? | Is every FaceToFaceInteraction categorized as a form of SocialInteraction? | In terms of broader classifications, what is the parent category for FaceToFaceInteraction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TelephoneInteraction\nDescription: TelephoneInteraction is defined as a subclass of SocialInteraction, indicating that it represents a specific type of social exchange occurring via telephone communication. Members of this class participate in interactions where the primary medium is a telephone, distinguishing them from other forms of social interaction such as face-to-face conversations or electronic messaging.\nAxiom: {'subClassOf': ['SocialInteraction']}\nGenerated CQs:", "output": "Which specific interactions are classified as types of SocialInteraction, including TelephoneInteraction? | Is TelephoneInteraction categorized under the broader class of SocialInteraction? | What broader interaction categories encompass TelephoneInteraction within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveBreakfast\nDescription: HaveBreakfast is defined as a subclass of HaveMeal, indicating that every instance of HaveBreakfast is also an instance of HaveMeal. This class represents the specific act or event of having breakfast, distinguished from other types of meals by its subclass relationship. No additional constraints or disjointness axioms are specified.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "output": "Under which broader activities does HaveBreakfast fall? | Is HaveMeal a more general class that includes HaveBreakfast? | Which actions are considered specific types of HaveMeal, such as HaveBreakfast? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveDinner\nDescription: HaveDinner is defined as a subclass of HaveMeal, meaning that every instance of HaveDinner is also an instance of HaveMeal. This class represents the specific type of meal event that occurs during dinner, distinguishing it from other meal occasions within the broader category of meals.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "output": "Which specific activities are categorized under HaveMeal, such as HaveDinner? | Is HaveDinner classified as a type of HaveMeal? | What broader event types encompass HaveDinner? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveLunch\nDescription: HaveLunch is defined as a subclass of HaveMeal, indicating that every instance of HaveLunch is also an instance of HaveMeal. This class represents activities or events specifically related to having lunch, distinguishing them from other types of meals. No additional restrictions or properties are imposed beyond this hierarchical relationship.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "output": "Does HaveLunch fall under the classification of HaveMeal? | Which meal-related activities are categorized as more specific types beneath HaveMeal, such as HaveLunch? | To what broader meal categories can HaveLunch be assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveDrink\nDescription: HaveDrink is a subclass of FoodAndDrinkConsumption, representing events or actions where an individual consumes a beverage. Any instance of HaveDrink is, by definition, a specific type of food and drink consumption activity, emphasizing the act of drinking over eating.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "output": "Is HaveDrink categorized as a kind of FoodAndDrinkConsumption? | What broader classifications encompass HaveDrink? | Which specific actions fall under FoodAndDrinkConsumption, including HaveDrink? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveMeal\nDescription: HaveMeal is defined as a subclass of FoodAndDrinkConsumption, representing instances where an individual engages in the act of consuming food and drink. Members of this class inherit all characteristics and constraints attributed to food and drink consumption activities.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "output": "Which overarching groups does HaveMeal fall within in the ontology? | What specific activities are categorized as types of FoodAndDrinkConsumption, such as HaveMeal? | Is HaveMeal classified under the broader concept of FoodAndDrinkConsumption? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveSnack\nDescription: HaveSnack is defined as a subclass of FoodAndDrinkConsumption, meaning any instance of HaveSnack is also an instance of FoodAndDrinkConsumption. This class represents events or activities where snacks are consumed, distinguishing it from other forms of food and drink consumption.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "output": "Does HaveSnack fall under the category of FoodAndDrinkConsumption? | What types of activities are more specific instances of FoodAndDrinkConsumption, such as HaveSnack? | Which higher-level categories include HaveSnack within their classification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Outdoors\nDescription: Outdoors is defined as a subclass of InLocation, indicating that it represents a specific type of location. Any instance of Outdoors is by definition also an instance of InLocation, capturing places or areas that are external to buildings or structures. The class formalizes the concept of being in an open, outside environment.\nAxiom: {'subClassOf': ['InLocation']}\nGenerated CQs:", "output": "What broader location categories does Outdoors fall under? | Which locations are encompassed by InLocation, including Outdoors? | Is Outdoors a more specific instance within the scope of InLocation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IndoorPhysicalActivity\nDescription: IndoorPhysicalActivity is defined as a subclass of PhysicalActivity. This class encompasses physical activities that are specifically performed indoors, distinguishing them from outdoor or unspecified-location activities. Any individual classified as IndoorPhysicalActivity is, by definition, a type of PhysicalActivity but is further characterized by its occurrence within indoor environments.\nAxiom: {'subClassOf': ['PhysicalActivity']}\nGenerated CQs:", "output": "Which activities are classified as subtypes of PhysicalActivity, including IndoorPhysicalActivity? | Does IndoorPhysicalActivity fall under the classification of PhysicalActivity? | What broader categories does IndoorPhysicalActivity belong to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OutdoorPhysicalActivity\nDescription: OutdoorPhysicalActivity is defined as a subclass of PhysicalActivity. This class encompasses all forms of physical activity that take place outdoors, distinguishing it from indoor activities. Members of this class inherit all characteristics of PhysicalActivity, but are specifically constrained by their outdoor context.\nAxiom: {'subClassOf': ['PhysicalActivity']}\nGenerated CQs:", "output": "Does OutdoorPhysicalActivity fall under the category of PhysicalActivity? | Which subclasses classify under PhysicalActivity, such as OutdoorPhysicalActivity? | What broader activity classifications encompass OutdoorPhysicalActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongNap\nDescription: LongNap is defined as a subclass of Nap, representing nap instances with a duration longer than 30 minutes. This class is used to categorize naps that exceed the typical short duration, allowing formal distinction within the Nap hierarchy based on temporal length.\nAxiom: {'subClassOf': ['Nap']}\nGenerated CQs:", "output": "Which variations of Nap include LongNap as a specific instance? | What broader groupings does LongNap fall under? | Is LongNap categorized as a type of Nap? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NapAfterLunch\nDescription: NapAfterLunch is defined as a subclass of Nap, indicating that every instance of NapAfterLunch is also an instance of Nap. This class specifies naps that occur specifically after lunch, distinguishing them from naps taken at other times.\nAxiom: {'subClassOf': ['Nap']}\nGenerated CQs:", "output": "What kinds of Naps are defined, including NapAfterLunch? | Is NapAfterLunch categorized as a specific type of Nap? | Which broader classes encompass NapAfterLunch? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongTableExit\nDescription: LongTableExit is defined as a subclass of TableExit. This means that every LongTableExit is a kind of TableExit, inheriting all properties and constraints of TableExit, and can be used wherever a TableExit is required. No further distinguishing characteristics or restrictions are specified for LongTableExit beyond this subclass relationship.\nAxiom: {'subClassOf': ['TableExit']}\nGenerated CQs:", "output": "Which types are classified as subcategories of TableExit, such as LongTableExit? | To what broader categories does LongTableExit belong based on its classification? | Is LongTableExit classified as a more specific type under TableExit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Moving\nDescription: Moving is defined as a subclass of Active, indicating that all instances of Moving are also considered Active. This classification captures entities or processes characterized by being in a state of action or motion, forming a specific subset within the broader category of Active phenomena.\nAxiom: {'subClassOf': ['Active']}\nGenerated CQs:", "output": "Which subclasses are defined within the class Active, such as Moving? | Is Moving a more specific category under the broader class of Active? | What are the higher-level classes that encompass Moving? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightBathroomVisit\nDescription: NightBathroomVisit is defined as a subclass of NightRoomVisit. This means every instance of NightBathroomVisit is also considered an instance of NightRoomVisit, specifying that the visit occurs during the night and takes place specifically in a bathroom. No additional restrictions or properties are provided.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "output": "Which visit types are defined as more specific forms of NightRoomVisit, such as NightBathroomVisit? | To which overarching categories does NightBathroomVisit belong within the context of night-time visits? | Is NightBathroomVisit classified under the broader group of NightRoomVisit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightKitchenVisit\nDescription: NightKitchenVisit is defined as a subclass of NightRoomVisit. This means every NightKitchenVisit is a type of NightRoomVisit, inheriting all characteristics associated with NightRoomVisit, but specifically refers to visits to the kitchen that occur at night. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "output": "Which visit types fall under the broader classification of NightRoomVisit? | What general categories encompass NightKitchenVisit? | Is NightKitchenVisit a more specific form of NightRoomVisit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightLivingRoomVisit\nDescription: NightLivingRoomVisit is defined as a subclass of NightRoomVisit. This denotes that every instance of a NightLivingRoomVisit is also an instance of NightRoomVisit, typically representing visits to a living room that occur specifically during nighttime. No further property or disjointness constraints are specified in the current axioms.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "output": "What broader classes does NightLivingRoomVisit fall under? | Which specific instances or subclasses are encompassed by NightRoomVisit? | Is NightRoomVisit a more general category that includes NightLivingRoomVisit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Object\nDescription: Object is defined as a subclass of Entity. This relationship indicates that every instance of Object is also considered an Entity, inheriting all general characteristics associated with Entity. No other constraints or differentiating axioms are specified for Object.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "output": "Which general groupings does Object fall under within the ontology? | Is Object a specialized form of Entity? | What are all the subclasses categorized under Entity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Person\nDescription: Person is defined as a subclass of Entity, meaning every individual categorized as a Person is also considered an Entity. No additional property restrictions or disjointness axioms are specified, so the class Person serves as a general categorization for entities recognized as people.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "output": "What broader groupings encompass the Person class? | Which classes are direct specializations within the Entity category, such as Person? | Does the Person class fall under the more general Entity category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Place\nDescription: Place is defined as a subclass of Entity, meaning every instance of Place is also an Entity. This class represents physical or conceptual locations or areas, but no further restrictions, relationships, or properties are currently specified.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "output": "Which subclasses are defined within the Entity category, such as Place? | Is every Place categorized under the broader class of Entity? | What general classes does the concept Place belong to in the ontology hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareHotTea\nDescription: PrepareHotTea is defined as a subclass of PrepareDrink, indicating that it represents a specialized form of drink preparation activity. Any instance of PrepareHotTea is inherently an instance of PrepareDrink, specifically concerned with the preparation of hot tea. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['PrepareDrink']}\nGenerated CQs:", "output": "What more general activity categories encompass PrepareHotTea? | Does PrepareHotTea belong to the set of activities classified as PrepareDrink? | Which subclasses are defined under PrepareDrink, including PrepareHotTea? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Room\nDescription: Room is defined as a subclass of Place, indicating that every Room is a specific type of Place. This classification implies that all characteristics of Place are inherited by Room, allowing it to be used wherever a Place is referenced within the ontology. No additional restrictions or distinguishing axioms are specified for Room.\nAxiom: {'subClassOf': ['Place']}\nGenerated CQs:", "output": "Which higher-level categories encompass Room? | Is Room classified under the broader category of Place? | What are all subcategories defined within Place, such as Room? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SittingToStanding\nDescription: SittingToStanding is defined as a subclass of ChangePosture, representing the specific process or action in which an individual transitions from a sitting position to a standing position. As a more specialized posture change, every instance of SittingToStanding inherently qualifies as an instance of ChangePosture.\nAxiom: {'subClassOf': ['ChangePosture']}\nGenerated CQs:", "output": "Which posture change actions are categorized under ChangePosture, including SittingToStanding? | Does SittingToStanding belong within the broader classification of ChangePosture? | What general types or categories is SittingToStanding a more specific instance of? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StandingToSitting\nDescription: StandingToSitting is defined as a subclass of ChangePosture. This class represents the action or process in which an individual moves from a standing position to a sitting position. All instances of StandingToSitting are, by definition, specific forms of posture change.\nAxiom: {'subClassOf': ['ChangePosture']}\nGenerated CQs:", "output": "What are the more specialized forms of ChangePosture, such as StandingToSitting? | Which general posture-changing categories include StandingToSitting as a member? | Is StandingToSitting an example of a specific type within the broader ChangePosture category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Activity\nDescription: Activity is defined as a subclass of Event, representing occurrences or happenings that necessarily involve agents. Every instance of Activity must have at least one agent that is a Person and, in particular, must have exactly one Person as an agent. This ensures that any Activity is specifically characterized by the participation of one and only one Person as its agent.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasAgent exactly 1 Person]', '[hasAgent only Person]']}\nGenerated CQs:", "output": "Must every Activity involve at least one Person as an agent? | Is it required for an Activity to have the property 'hasAgent' assigned to a Person? | Does the existence of an Activity necessarily imply the involvement of some Person through the 'hasAgent' relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AlarmClockRinging\nDescription: AlarmClockRinging is defined as a subclass of Ringing, representing a specific ringing event. Its defining characteristic is that the agent responsible for the ringing must be an instance of AlarmClock. This ensures that any event classified as AlarmClockRinging involves an alarm clock as the source of the ringing.\nAxiom: {'subClassOf': ['Ringing'], 'propertyRestrictions': ['[hasAgent only AlarmClock]']}\nGenerated CQs:", "output": "Must every instance of AlarmClockRinging involve an agent that is an AlarmClock? | Is it required that AlarmClockRinging occurs with at least one AlarmClock as its agent? | Can there be an occurrence of AlarmClockRinging without the involvement of an AlarmClock as its agent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysiologicalMeasurement\nDescription: PhysiologicalMeasurement is defined as a subclass of Measurement, representing a specialized form of measurement that pertains exclusively to patients. Any instance of PhysiologicalMeasurement must refer only to a patient, ensuring that this class captures measurements that specifically describe physiological characteristics or parameters observed in patient individuals.\nAxiom: {'subClassOf': ['Measurement'], 'propertyRestrictions': ['[refersTo some Patient]']}\nGenerated CQs:", "output": "Is every instance of PhysiologicalMeasurement required to refer exclusively to entities classified as Patient? | Can a PhysiologicalMeasurement ever refer to an entity that is not a Patient? | Does the property 'refersTo' on PhysiologicalMeasurement restrict its range to only those individuals categorized as Patient? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorOpen\nDescription: DoorOpen is defined as a subclass of Open, representing a specific type of open state. It is further characterized by the property restriction that it must have some agent which is a Door. This means that instances of DoorOpen denote situations or events where the entity being open is specifically a Door.\nAxiom: {'subClassOf': ['Open'], 'propertyRestrictions': ['[hasAgent only Door]']}\nGenerated CQs:", "output": "Must every instance of DoorOpen involve at least one Door as the agent? | Is it possible for DoorOpen to occur without a Door being the agent? | Does DoorOpen require that the property 'hasAgent' be associated with a Door? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SkinTemperature\nDescription: SkinTemperature is defined as a subclass of PhysiologicalMeasurement, representing a specific type of physiological measurement. Members of this class are constrained by the property restriction that they must have exactly one hasTemperature property value, which must be a literal (e.g., a numerical value). This formalization ensures that any instance of SkinTemperature uniquely and quantifiably indicates the temperature measured on the skin.\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasTemperature exactly 1]', '[hasTemperature only rdfs:Literal]']}\nGenerated CQs:", "output": "Is it necessary for SkinTemperature to have the property hasTemperature with a value of type Literal? | Does every instance of SkinTemperature possess at least one value for the hasTemperature property? | Can SkinTemperature exist without being linked to a value via the hasTemperature property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KettleOff\nDescription: KettleOff is defined as a subclass of Off, representing situations or states where something is powered down or inactive. It is characterized by the additional property that its agent must be some instance of Kettle, indicating that only kettles can be agents in this context. This class ensures that any instance of KettleOff specifically refers to a kettle that is in the \"off\" state.\nAxiom: {'subClassOf': ['Off'], 'propertyRestrictions': ['[hasAgent only Kettle]']}\nGenerated CQs:", "output": "Must every instance of KettleOff involve at least one Kettle as the agent? | Is it possible for KettleOff to occur without any Kettle participating as the agent? | Does the occurrence of KettleOff require the presence of a Kettle playing the agent role? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NoiseLevel\nDescription: NoiseLevel is defined as a subclass of AmbientMeasurement, indicating that it represents a specific type of measurement related to environmental conditions. Every instance of NoiseLevel must have exactly one associated value via the hasNoiseLevel property, and this value must be a literal (e.g., a number or string representing the measured noise). This formalization ensures each NoiseLevel measurement uniquely records a single quantifiable noise value.\nAxiom: {'subClassOf': ['AmbientMeasurement'], 'propertyRestrictions': ['[hasNoiseLevel exactly 1]', '[hasNoiseLevel only rdfs:Literal]']}\nGenerated CQs:", "output": "Is every instance of NoiseLevel required to have at least one associated value for the property hasNoiseLevel? | Can a NoiseLevel exist without any hasNoiseLevel property value assigned to it? | Does the definition of NoiseLevel necessitate the existence of at least one hasNoiseLevel relationship with a literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Event\nDescription: Event is a class characterized by property restrictions that enforce temporal precision. Each instance of Event must have exactly one startTime, which must be of type time:Instant, and exactly one duration, which must be of type time:DurationDescription. These constraints ensure that every Event is uniquely defined by both a specific starting instant and a specific duration, providing an unambiguous temporal identity for each Event.\nAxiom: {'propertyRestrictions': ['[duration only time:DurationDescription]', '[startTime exactly 1 time:Instant]', '[duration exactly 1 time:DurationDescription]', '[startTime some time:Instant]']}\nGenerated CQs:", "output": "Is every startTime value associated with an Event necessarily of type time:Instant? | Can an Event have a startTime that is not classified as time:Instant? | Are all instances of startTime for an Event restricted exclusively to the time:Instant class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ObjectEvent\nDescription: ObjectEvent is a subclass of Event, characterized by the restriction that it must have exactly one Object as its agent. This means every instance of ObjectEvent is an Event in which precisely one Object acts as the agent. This axiom ensures clear and unambiguous assignment of agency within such events.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasAgent exactly 1 Object]', '[hasAgent some Object]']}\nGenerated CQs:", "output": "Is every ObjectEvent necessarily associated with at least one agent via the 'hasAgent' property? | Can an ObjectEvent exist without having some object linked as its agent through 'hasAgent'? | Does the occurrence of an ObjectEvent guarantee the involvement of an object as its agent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmbientMeasurement\nDescription: AmbientMeasurement is a class whose instances are characterized by the property that they only refer to Room; that is, any AmbientMeasurement must be associated exclusively with one or more Rooms. This restriction ensures that AmbientMeasurement data cannot pertain to entities outside the Room class.\nAxiom: {'subClassOf': ['Measurement'], 'propertyRestrictions': ['[refersTo only Room]']}\nGenerated CQs:", "output": "Does AmbientMeasurement fall under the broader category of Measurement? | What types of measurements encompass AmbientMeasurement as a more specific variant? | Which general measurement groups include AmbientMeasurement as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorClosed\nDescription: DoorClosed is defined as a subclass of Closed, meaning every DoorClosed instance is also a Closed instance. There are no additional property restrictions specified for this class. This formalization indicates that DoorClosed represents the specific state where a door is closed, inheriting all characteristics of the broader Closed class.\nAxiom: {'subClassOf': ['Closed'], 'propertyRestrictions': ['[hasAgent some Door]']}\nGenerated CQs:", "output": "Is it required that DoorClosed must have the hasAgent property associated with at least one Door? | Can DoorClosed occur without any Door being specified as an agent? | Does every instance of DoorClosed necessarily have a Door as its agent through the hasAgent property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SkinConductivity\nDescription: SkinConductivity is defined as a subclass of PhysiologicalMeasurement, representing measurements related to skin's electrical properties. Every instance of SkinConductivity is constrained such that its hasConductivity property can only take values of type rdfs:Literal, ensuring that conductivity data is recorded in a literal data format (e.g., numeric or text values).\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasConductivity only rdfs:Literal]', '[hasConductivity exactly 1]']}\nGenerated CQs:", "output": "Is an entity with SkinConductivity required to have exactly one value for the property hasConductivity? | Can SkinConductivity ever possess more than one or fewer than one hasConductivity assignment? | Does the definition of SkinConductivity restrict it to a single hasConductivity value exclusively? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NearObject\nDescription: NearObject is defined as a subclass of InLocation, meaning every NearObject is also considered to be located in a specific place or context. There are no additional property restrictions specified for this class.\nAxiom: {'subClassOf': ['InLocation'], 'propertyRestrictions': ['[objectLocalisation some Object]']}\nGenerated CQs:", "output": "Is it required that a NearObject must have at least one object localisation relating to an Object? | Can every NearObject be associated with some instance of Object via the objectLocalisation property? | Does the NearObject class necessitate the existence of the objectLocalisation property connecting it to an Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LightLevel\nDescription: LightLevel is defined as a subclass of AmbientMeasurement. Every instance of LightLevel must be associated with exactly one value via the property hasLightLevel, indicating that each measurement in this class represents a single, specific light level reading. This formalization ensures consistency in quantifying ambient light for each measurement instance.\nAxiom: {'subClassOf': ['AmbientMeasurement'], 'propertyRestrictions': ['[hasLightLevel exactly 1]', '[hasLightLevel some rdfs:Literal]']}\nGenerated CQs:", "output": "Is it necessary for a LightLevel to have at least one value for the property 'hasLightLevel'? | Does every instance of LightLevel require association with some literal value through 'hasLightLevel'? | Can a LightLevel exist without being linked to any literal value by the 'hasLightLevel' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sitting\nDescription: Sitting is defined as a subclass of Posture. This means that every instance of Sitting is also an instance of Posture, representing a specific type of body position or stance, but no additional property restrictions are specified for this class.\nAxiom: {'subClassOf': ['Posture'], 'propertyRestrictions': ['[objectLocalisation some Furniture]']}\nGenerated CQs:", "output": "Is it necessary for a Sitting instance to have the objectLocalisation property linked to some Furniture? | Does every Sitting require at least one associated Furniture through the objectLocalisation property? | Can a Sitting exist without any objectLocalisation relation to Furniture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasLightLevel\nDescription: The property \"hasLightLevel\" has no explicitly defined domain, range, or logical characteristics. It is a sub-property of \"hasValue,\" indicating that it is used to relate entities to their light level values in a manner more specific than the general value association. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasValue a superproperty of hasLightLevel? | Which properties are defined as subproperties of hasValue within the ontology? | Do all instances of hasLightLevel also satisfy the conditions of hasValue? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasConductivity\nDescription: The property \"hasConductivity\" currently lacks explicit domain and range constraints and does not have specified logical characteristics or an inverse property. It is defined as a sub-property of \"hasValue,\" indicating that it inherits the semantics of associating an entity with a value, specifically in the context of electrical or thermal conductivity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Does the presence of the hasConductivity property guarantee the presence of the hasValue property? | Which properties are defined as subproperties under hasValue within the ontology? | Is hasValue a direct superproperty of hasConductivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasTemperature\nDescription: The property \"hasTemperature\" inherits from the broader property \"hasValue\" but does not specify any domain or range restrictions, nor any specific logical characteristics. No inverse property is defined. This property is intended to associate an entity with its temperature, but its use is broadly unconstrained by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Does the use of hasTemperature always entail the use of hasValue? | Is hasValue considered a superproperty of hasTemperature in the ontology? | Which subproperties fall under hasValue, including hasTemperature? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasValue\nDescription: The property \"hasValue\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. As specified by its axioms, no constraints are currently imposed on its use, so its purpose and applicable contexts are not restricted within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasValue' does not have any domain specified? | What entities can serve as the range for the 'hasValue' property? | Is it accurate that the property 'hasValue' does not specify any range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: roomLocalisation\nDescription: The property \"roomLocalisation\" has no explicitly defined characteristics, domain, or range constraints, and is not specified as a sub-property or inverse of any other property. Based on its name, it is likely intended to associate entities with their location within a room, but no further semantic or structural restrictions are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the range of the property 'roomLocalisation'? | Can 'roomLocalisation' link to entities of any type, given its range is undefined? | Is it correct that the property 'roomLocalisation' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: objectLocalisation\nDescription: The property \"objectLocalisation\" has no explicitly defined domain or range restrictions and no formally specified characteristics. It is not declared as a sub-property of any other property nor does it have an inverse property. Its intended use is not further described by the available axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can serve as the domain for the property 'objectLocalisation'? | Are there any classes that should not be used as the subject of 'objectLocalisation'? | Can entities of any type be related by 'objectLocalisation' as its range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no specified characteristics, domain, range, super-properties, or inverse property. It is a general property whose usage is not restricted to any particular class or value type in the current ontology specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What are the possible domains for the property 'duration'? | Is it correct that the property 'duration' does not have a specified range? | Should 'duration' be associated with any particular class as its domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: refersTo\nDescription: The property \"refersTo\" has no specified domain, range, characteristics, super-properties, or inverse properties. This indicates that it can be used to relate any two entities without formal restrictions. No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'refersTo' be used with any subject, or is there an implicit domain restriction? | Is it correct that the property 'refersTo' does not have a specified domain? | Can anything serve as the range for the property 'refersTo', or should it be restricted? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" does not specify any explicit characteristics, domain, or range restrictions, nor does it define any super-properties or inverse properties. It is typically used to associate an entity with a quality, although no further constraints are currently imposed by its axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasQuality' does not have an explicitly defined range? | Is it correct that the property 'hasQuality' has no specified domain? | What kinds of entities can serve as the subject for the property 'hasQuality'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no explicitly defined characteristics, domain or range restrictions, super-properties, or inverse properties. Its usage context and intended meaning are not further specified by current axioms. This property may be intended to capture the starting time of an event or process, but no formal constraints are applied.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it appropriate for 'startTime' to have no domain specified? | What can be the range of the property 'startTime'? | Can 'startTime' be related to a value of any type, or is a specific type required? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasRate\nDescription: The property \"hasRate\" has no explicitly specified domain, range, characteristics, super-properties, or inverse properties. This indicates that it is a general-purpose property, with its usage and applicable types left unspecified by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasValue a superproperty of hasRate? | Which subproperties are contained within hasValue? | Are all uses of hasRate implicitly instances of hasValue according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasAgent\nDescription: The property \"hasAgent\" is an object property without explicitly defined characteristics, domain, or range restrictions. It is specified as a subproperty of \"owl:topObjectProperty,\" indicating it inherits the broadest possible usage among object properties. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': ['isAgentIn']}\nGenerated CQs:", "output": "What is the ontological connection between the â€˜hasAgentâ€™ and â€˜isAgentInâ€™ properties? | If entity A has an agent B, does this entail in the ontology that B is an agent in A? | Which property acts as the inverse of â€˜hasAgentâ€™ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasNoiseLevel\nDescription: The property \"hasNoiseLevel\" has no explicitly defined characteristics, domain, or range restrictions. It does not declare any super-properties or inverse properties. This indicates that the property can be used flexibly to relate entities to unspecified values representing noise levels, without ontological constraints on the types of subjects or objects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasNoiseLevel considered a subproperty of hasValue in the ontology? | Which properties are defined as subproperties under hasValue? | Does using hasNoiseLevel always entail the use of hasValue? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isAgentIn\nDescription: The property \"isAgentIn\" has no explicitly defined characteristics, domain, or range restrictions, and it does not declare any super-properties or inverse properties. Its intended use should be clarified with additional axioms or documentation.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is isAgentIn categorized as a subproperty within the hierarchy of owl:topObjectProperty? | Which properties are considered superproperties of isAgentIn? | Does every use of isAgentIn also satisfy the owl:topObjectProperty relationship in the ontology? "}
