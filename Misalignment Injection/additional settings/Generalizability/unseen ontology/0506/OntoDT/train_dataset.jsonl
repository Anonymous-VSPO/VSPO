{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CarnivorousPlant\nDescription: CarnivorousPlant is defined as a subclass of plant whose members are characterized by possessing the ability to consume animals; specifically, each member must eat at least some animals. This distinguishes CarnivorousPlant from other plants by its unique adaptation for animal consumption.\nAxiom: {'subClassOf': ['plant'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Must every CarnivorousPlant have at least one instance of 'eats' relating to an animal? | Is it required for CarnivorousPlants to exhibit the 'eats' property with some animal? | Does the existence of a CarnivorousPlant imply that it consumes at least one animal through the 'eats' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phloem\nDescription: Phloem is defined as a subclass of PlantParts and is characterized by being a proper part of some Stem. This formalization specifies that every instance of Phloem must be a plant part that exists as a structural component within a stem, reflecting its biological role in the transport system of plants.\nAxiom: {'subClassOf': ['PlantParts'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Is it required that every instance of Phloem is a proper part of some Stem? | Is the relationship ‘is-proper-part-of’ between Phloem and Stem necessarily present for each Phloem? | Can there exist a Phloem that is not a proper part of any Stem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: leaf\nDescription: leaf is defined as a subclass of PlantParts and is characterized by the property restriction that each leaf must be part of either a twig or a branch. This formalization specifies that leaves are plant structures specifically found as components of twigs or branches, aligning with the description that leaves are parts of branches.\nAxiom: {'subClassOf': ['PlantParts'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Must a leaf always be part of a twig or a branch according to the ontology? | Can a leaf exist without being part of either a twig or a branch? | Are twigs and branches the only structures to which a leaf may belong as a part? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: carnivore\nDescription: carnivore is defined as a subclass of animal and is disjoint with herbivore, meaning that no individual can be both a carnivore and a herbivore. It is equivalent to the class of animals whose diet consists exclusively of other animals or of parts derived from animals (i.e., they eat only animals or only things that are part of animals). This formalization captures the precise biological definition: carnivores are exactly those animals that eat only animals or animal parts.\nAxiom: {'subClassOf': ['animal'], 'disjointWith': [], 'equivalentClass': ['([eats only animal] or [eats only [is-part-of some animal]])']}\nGenerated CQs:", "output": "What logical separation is specified between carnivore and herbivore within the ontology? | Is it permissible for an entity to be classified as both a carnivore and a herbivore? | Which classes are formally identified as disjoint with carnivore? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: lion\nDescription: lion is defined as a subclass of animal, with dietary restrictions stating that it eats only herbivores, and among its possible prey, it is known to eat impalas. This means any individual classified as a lion is exclusively a consumer of herbivores, consistent with its role as a carnivorous predator in ecological systems. The description affirms that lions are animals that restrict their diet strictly to herbivorous species.\nAxiom: {'subClassOf': ['animal'], 'propertyRestrictions': ['[eats some Impala]']}\nGenerated CQs:", "output": "Is every entity that a lion eats required to be a herbivore within the ontology? | Can a lion consume anything other than a herbivore according to the defined restrictions? | Does the ontology restrict lion's diet exclusively to entities classified as herbivores? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: animal\nDescription: animal is defined as a class that is explicitly disjoint with plant, meaning no individual can simultaneously be both an animal and a plant. This formalization ensures clear separation between instances of animals and plants within the ontology.\nAxiom: {'disjointWith': []}\nGenerated CQs:", "output": "What constraints prevent an entity from being both an animal and a plant in the ontology? | Is it allowed for an organism to be classified simultaneously as animal and plant within AfricanWildlifeOntology1? | Which other classes, aside from animal, are specified as disjoint with plant in AfricanWildlifeOntology1? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Berry\nDescription: Berry is defined as a subclass of FruitingBody, meaning every berry is a type of fruiting body. The class Berry encompasses all fruit structures that meet this ontological classification; no further restrictions or distinguishing characteristics are specified beyond their membership in the FruitingBody category.\nAxiom: {'subClassOf': ['FruitingBody']}\nGenerated CQs:", "output": "Which broader categories encompass Berry? | What types are included under FruitingBody, such as Berry? | Is Berry classified as a specialized kind of FruitingBody? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Apple\nDescription: Apple is defined as a subclass of FruitingBody, indicating that every apple is a specific type of fruiting body. This classification positions apple within the broader category of organisms or structures that produce fruit, consistent with its botanical role as the edible fruit of certain plants.\nAxiom: {'subClassOf': ['FruitingBody']}\nGenerated CQs:", "output": "Is Apple categorized under FruitingBody in the ontology? | What higher-level classes does Apple belong to according to the ontology? | Which entities are specified as subclasses of FruitingBody, such as Apple? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Grass\nDescription: Grass is defined as a subclass of plant, meaning all instances of grass are considered plants. No additional disjointness or property restrictions are specified, so grass inherits all general properties of the plant class. This class encompasses all plant entities characterized as grass.\nAxiom: {'subClassOf': ['plant']}\nGenerated CQs:", "output": "Which types of plant include Grass as a specialization? | Is every Grass instance also categorized under plant in the ontology? | What higher-level classes encompass Grass according to the ontology structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: tree\nDescription: tree is defined as a subclass of plant, specifically within the plant kingdom. Trees are characterized as a distinct type of plant, aligning taxonomically as members of the broader plant group.\nAxiom: {'subClassOf': ['plant']}\nGenerated CQs:", "output": "Is tree a specialized type of plant? | Which broader classes encompass tree within the ontology? | What are all the subclasses classified under plant, specifically including tree? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Elephant\nDescription: Elephant is defined as a subclass of herbivore, indicating that all elephants are herbivorous animals. This formalization ensures that any individual classified as an elephant is necessarily a herbivore. If further biological or behavioral characteristics are provided, they can be incorporated to enhance the class description.\nAxiom: {'subClassOf': ['herbivore']}\nGenerated CQs:", "output": "Which animal classes are direct specializations of herbivore? | Is Elephant categorized under the class herbivore? | What broader groups encompass Elephant within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FruitingBody\nDescription: FruitingBody is defined as a subclass of PlantParts, meaning it represents a specific type of plant part within the ontology. This class is intended to capture plant structures specialized for producing and containing reproductive structures, typically involved in fruit or spore formation.\nAxiom: {'subClassOf': ['PlantParts']}\nGenerated CQs:", "output": "What are the specific types categorized within PlantParts, such as FruitingBody? | Which more general groups encompass FruitingBody in the ontology? | Does FruitingBody fall under the broader classification of PlantParts? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Root\nDescription: Root is defined as a subclass of PlantParts, indicating that every root is considered a type of plant part. This classification situates roots within the broader structural components of plants.\nAxiom: {'subClassOf': ['PlantParts']}\nGenerated CQs:", "output": "Does Root belong to the class hierarchy defined by PlantParts? | Which subclasses are included under PlantParts, specifically referencing Root? | Which broader classes encompass Root within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Stem\nDescription: Stem is defined as a subclass of PlantParts, indicating that every stem is categorized as a type of plant part. No further property restrictions or disjointness axioms are specified, so this class represents the general concept of a stem within the broader hierarchy of plant anatomical structures.\nAxiom: {'subClassOf': ['PlantParts']}\nGenerated CQs:", "output": "Which more general categories encompass Stem? | What plant part subclasses are present within PlantParts, such as Stem? | Is Stem classified as a type of PlantParts? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Twig\nDescription: Twig is formally defined as a subclass of PlantParts, indicating that every twig is considered a part of a plant. This classification ensures that only plant part entities can be recognized as twigs within the ontology.\nAxiom: {'subClassOf': ['PlantParts']}\nGenerated CQs:", "output": "To which higher-level classifications does Twig conceptually belong? | Is Twig categorized under the broader group of PlantParts? | Which entities are classified as more specific forms of PlantParts, such as Twig? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Impala\nDescription: Impala is defined as a subclass of animal. It is an African antelope, as described in external resources such as Wikipedia. This classification indicates that all individuals of the class impala are animals, specifically belonging to the group of antelopes native to Africa.\nAxiom: {'subClassOf': ['animal']}\nGenerated CQs:", "output": "What are the subclasses found under animal, and is Impala among them? | Which broader classes include Impala as an instance or subclass? | Is Impala classified as a type of animal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RockDassie\nDescription: RockDassie is defined as a subclass of animal. Members of this class are characterized by their diet, which mainly consists of grasses and broad-leafed plants. Further information about RockDassie can be found at http://en.wikipedia.org/wiki/Rock_Hyrax.\nAxiom: {'subClassOf': ['animal']}\nGenerated CQs:", "output": "To which higher-level groups does RockDassie pertain? | What instances fall under the category animal, specifically including RockDassie? | Is animal a broader classification that encompasses RockDassie? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Parsnip\nDescription: Parsnip is defined as a subclass of Root, which means every parsnip is formally classified as a type of root. This class inherits all characteristics of roots, establishing parsnip as a specific instance within the broader root category.\nAxiom: {'subClassOf': ['Root']}\nGenerated CQs:", "output": "What broader classes encompass Parsnip within the ontology? | Which entities fall under the subclassification of Root? | Is Parsnip classified as a type of Root? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Palmtree\nDescription: Palmtree is defined as a subclass of plant and is explicitly disjoint with tree, ensuring that no individual can be both a palmtree and a tree. Members of this class are characterized by the property restriction that they do not possess branches (i.e., each palmtree has no part that is a branch). This formalization distinguishes palmtrees from other trees and plants in the ontology, emphasizing their unique morphological trait of being branchless.\nAxiom: {'subClassOf': ['plant'], 'disjointWith': ['tree'], 'propertyRestrictions': ['[has-part only not branch]']}\nGenerated CQs:", "output": "Is it necessary that a Palmtree contains some parts that are not branches? | Can a Palmtree exist without having any part that is a branch? | Are there parts of a Palmtree that must be from categories other than branches? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: branch\nDescription: branch is defined as a subclass of PlantParts and must be part of some tree, according to the property restriction. The class is described as representing branches, which are components of trees. This formalization ensures that any individual classified as a branch is recognized as a type of plant part specifically serving as a structural component of a tree.\nAxiom: {'subClassOf': ['PlantParts'], 'propertyRestrictions': ['[is-part-of only tree]']}\nGenerated CQs:", "output": "Is it necessary for a branch to have the property 'is-part-of' with at least one tree? | Does every branch participate in the 'is-part-of' relationship with a tree in the ontology? | Must a branch always be included as part of a tree according to the property restriction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Omnivore\nDescription: Omnivore is defined as a subclass of animal, disjoint with both carnivore and herbivore, meaning no individual can be both an omnivore and either a carnivore or herbivore. An individual is classified as an omnivore if it eats some animal matter, some plant matter, and also consumes something that is part of an animal or a plant. This formalization captures the core characteristic of omnivores: they are animals that include both animal- and plant-based items in their diet, and their consumption encompasses components from both kingdoms.\nAxiom: {'subClassOf': ['animal'], 'disjointWith': ['carnivore', 'herbivore'], 'equivalentClass': ['([eats only animal] and [eats only plant] and [eats some ([is-part-of only animal] or [is-part-of only plant])])']}\nGenerated CQs:", "output": "Is every Omnivore required to eat at least one animal, one plant, and something that is part of an animal or part of a plant? | Is Omnivore equivalent to the intersection of entities that eat animals, eat plants, and eat parts of either animals or plants? | Must an entity eat both animals and plants, as well as something that is a part of an animal or a part of a plant, to be classified as an Omnivore? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: giraffe\nDescription: giraffe is defined as a subclass of animal, disjoint with lion—meaning an individual cannot be both a giraffe and a lion. Members of this class are herbivores that eat exclusively leaves or twigs, as reflected by the restriction that giraffes only consume these plant parts. This ensures that any individual identified as a giraffe must have a diet limited to leaves and twigs.\nAxiom: {'subClassOf': ['animal'], 'disjointWith': ['lion'], 'propertyRestrictions': ['[eats some (Twig or leaf)]']}\nGenerated CQs:", "output": "Is a giraffe limited to eating only twigs or leaves, excluding all other food types? | Does the ontology constrain giraffes so that any food they consume must be either a twig or a leaf? | Can a giraffe, according to the ontology, have an 'eats' relation to anything other than twigs or leaves? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: tasty-plant\nDescription: tasty-plant is defined as a subclass of plant, indicating that every tasty-plant is a type of plant. There are no additional constraints or distinguishing properties specified by the axiom beyond its membership in the broader plant class.\nAxiom: {'subClassOf': ['plant', '([eaten-by some carnivore] and [eaten-by some herbivore])']}\nGenerated CQs:", "output": "Which kinds of organisms eat tasty-plants, specifically distinguishing between carnivores and herbivores? | Is tasty-plant classified under things that are consumed by both carnivores and herbivores? | What plant subclasses are eaten by both members of carnivorous and herbivorous species? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Xylem\nDescription: Xylem is defined as a subclass of PlantParts, meaning every xylem is necessarily a part of a plant. There are currently no additional property restrictions specified for xylem in this definition.\nAxiom: {'subClassOf': ['PlantParts'], 'propertyRestrictions': ['[is-proper-part-of some Stem]']}\nGenerated CQs:", "output": "Is it necessary for Xylem to be a proper part of some Stem? | Can Xylem exist without being a proper part of any Stem? | Does every instance of Xylem participate as a proper part in at least one Stem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Warthog\nDescription: Warthog is defined as a subclass of animal, indicating that every warthog is an animal and inherits all general characteristics of animals. No further distinguishing properties, relationships, or restrictions are specified for this class.\nAxiom: {'subClassOf': ['animal', '([eats some FruitingBody] and [eats some Grass] and [eats some Root] and [eats some animal])']}\nGenerated CQs:", "output": "Which kinds of food items are necessary to classify an animal as a Warthog in the ontology? | Is an individual that eats fruiting bodies, grass, roots, and animals a type of Warthog? | What dietary requirements define the Warthog subclass within the AfricanWildlifeOntology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: herbivore\nDescription: herbivore is defined as a subclass of animal. This means every herbivore is an animal, but no additional axioms such as equivalent classes or property restrictions are specified for this class. The description is limited to its taxonomic placement within animals, with no further formal constraints described.\nAxiom: {'subClassOf': ['animal'], 'equivalentClass': ['([eats only plant] or [eats only [is-part-of some plant]])']}\nGenerated CQs:", "output": "Is every herbivore in the ontology necessarily restricted to eating only plants or only entities that are part of a plant? | Is a herbivore defined as a class whose diet consists exclusively of either plants or things that include some part of a plant? | Is herbivore logically equivalent to the union of animals that eat only plants and those that eat only things with at least one part being a plant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PlantParts\nDescription: PlantParts is a subclass of owl:Thing, representing a general category for all entities considered parts of plants. There are no additional property restrictions or specific characteristics defined for this class in the current axiomatization.\nAxiom: {'subClassOf': ['owl:Thing'], 'propertyRestrictions': ['[is-proper-part-of some plant]']}\nGenerated CQs:", "output": "Is every instance of PlantParts required to be a proper part of some plant? | Can a PlantPart exist without being a proper part of any plant? | Does the ontology allow for PlantParts that are not associated by the 'is-proper-part-of' property to a plant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is-proper-part-of\nDescription: The property \"is-proper-part-of\" is an irreflexive property, meaning no entity can be a proper part of itself. It does not have explicitly defined domain or range restrictions. This property is a subproperty of \"is-part-of,\" indicating a more specific parthood relation where the part is strictly contained within another entity. No inverse property is specified.\nAxiom: {'characteristics': ['Irreflexive'], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every instance of is-proper-part-of also an instance of is-part-of? | Which properties are defined as subproperties of is-part-of? | What superproperties does is-proper-part-of possess within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eaten-by\nDescription: The property \"eaten-by\" has no explicit domain, range, characteristics, or super-properties defined. It is specified as the inverse of the property \"eats,\" indicating that if entity A is eaten by entity B, then entity B eats entity A. No further semantic constraints are applied.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the logical connection between ‘eaten-by’ and ‘eats’ in the ontology? | If animal A is eaten by animal B, does the ontology entail that B eats A? | Which property is recognized as the inverse of ‘eaten-by’ in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: has-part\nDescription: The property \"has-part\" is defined as transitive, allowing relationships to propagate along chains of connections. It has no explicitly defined domain or range restrictions, indicating it can relate any entities. \"has-part\" has \"is-part-of\" as its inverse property, but it is not specified as a sub-property of any other property. This property is typically used to express part-whole relationships between entities.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties ‘has-part’ and ‘is-part-of’ related in the ontology? | If entity A has-part entity B, does it follow that entity B is-part-of entity A? | Which property acts as the inverse of ‘has-part’ in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is-part-of\nDescription: The property \"is-part-of\" is defined as both transitive and reflexive, meaning that if an entity is part of another, and that entity is part of a third, then the first is part of the third, and every entity is considered part of itself. There are no explicit domain or range restrictions, no super-properties, and no defined inverse property. This property is typically used to represent part-whole relationships within the ontology.\nAxiom: {'characteristics': ['Transitive', 'Reflexive'], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it entailed that for any individual, the is-part-of property connects the individual to itself? | Does the is-part-of relation infer indirect part-whole associations through its transitivity? | Can 'is-part-of' be associated with entities of any type as its subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eats\nDescription: The property \"eats\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is an unconstrained property, allowing broad use without restrictions on the types of subjects or objects it can relate.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['(animal or plant or [is-part-of some animal] or [is-part-of some plant])'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'eats' relate to objects that are not an animal, plant, or a part of either within the AfricanWildlifeOntology1 domain? | Is there any entity within AfricanWildlifeOntology1 that is not allowed as the range of the property 'eats'? | What types of entities can serve as the range for the 'eats' property in AfricanWildlifeOntology1? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AlarmClockRinging\nDescription: AlarmClockRinging is defined as a subclass of Ringing, representing a specific ringing event. Its defining characteristic is that the agent responsible for the ringing must be an instance of AlarmClock. This ensures that any event classified as AlarmClockRinging involves an alarm clock as the source of the ringing.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[hasAgent some AlarmClock]']}\nGenerated CQs:", "output": "Is AlarmClockRinging classified under the broader category of Ringing? | Which specific types fall under Ringing, including AlarmClockRinging? | In which higher-level categories can AlarmClockRinging be placed? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysiologicalMeasurement\nDescription: PhysiologicalMeasurement is defined as a subclass of Measurement, representing a specialized form of measurement that pertains exclusively to patients. Any instance of PhysiologicalMeasurement must refer only to a patient, ensuring that this class captures measurements that specifically describe physiological characteristics or parameters observed in patient individuals.\nAxiom: {'subClassOf': ['Measurement'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Is every instance of PhysiologicalMeasurement required to refer exclusively to entities classified as Patient? | Can a PhysiologicalMeasurement ever refer to an entity that is not a Patient? | Does the property 'refersTo' on PhysiologicalMeasurement restrict its range to only those individuals categorized as Patient? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorOpen\nDescription: DoorOpen is defined as a subclass of Open, representing a specific type of open state. It is further characterized by the property restriction that it must have some agent which is a Door. This means that instances of DoorOpen denote situations or events where the entity being open is specifically a Door.\nAxiom: {'subClassOf': ['Open'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Must every instance of DoorOpen involve at least one Door as the agent? | Is it possible for DoorOpen to occur without a Door being the agent? | Does DoorOpen require that the property 'hasAgent' be associated with a Door? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SkinTemperature\nDescription: SkinTemperature is defined as a subclass of PhysiologicalMeasurement, representing a specific type of physiological measurement. Members of this class are constrained by the property restriction that they must have exactly one hasTemperature property value, which must be a literal (e.g., a numerical value). This formalization ensures that any instance of SkinTemperature uniquely and quantifiably indicates the temperature measured on the skin.\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasTemperature some rdfs:Literal]']}\nGenerated CQs:", "output": "Is it necessary for every SkinTemperature instance to have exactly one associated hasTemperature value? | Can a SkinTemperature be characterized by more or less than one hasTemperature property? | Does the ontology allow SkinTemperature individuals to have more than one or no hasTemperature assignments? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KettleOff\nDescription: KettleOff is defined as a subclass of Off, representing situations or states where something is powered down or inactive. It is characterized by the additional property that its agent must be some instance of Kettle, indicating that only kettles can be agents in this context. This class ensures that any instance of KettleOff specifically refers to a kettle that is in the \"off\" state.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[hasAgent some Kettle]']}\nGenerated CQs:", "output": "Is KettleOff categorized as a more specific form of Off? | Which Off states include KettleOff as a subclass? | To which parent classes does KettleOff belong within the system? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NoiseLevel\nDescription: NoiseLevel is defined as a subclass of AmbientMeasurement, indicating that it represents a specific type of measurement related to environmental conditions. Every instance of NoiseLevel must have exactly one associated value via the hasNoiseLevel property, and this value must be a literal (e.g., a number or string representing the measured noise). This formalization ensures each NoiseLevel measurement uniquely records a single quantifiable noise value.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[hasNoiseLevel exactly 1]', '[hasNoiseLevel some rdfs:Literal]']}\nGenerated CQs:", "output": "Does NoiseLevel fall under the broader category of AmbientMeasurement? | Which measurement types are classified as more specific forms of AmbientMeasurement, including NoiseLevel? | What are the more general classes that contain NoiseLevel? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Event\nDescription: Event is a class characterized by property restrictions that enforce temporal precision. Each instance of Event must have exactly one startTime, which must be of type time:Instant, and exactly one duration, which must be of type time:DurationDescription. These constraints ensure that every Event is uniquely defined by both a specific starting instant and a specific duration, providing an unambiguous temporal identity for each Event.\nAxiom: {'propertyRestrictions': ['[startTime only time:Instant]', '[duration only time:DurationDescription]', '[duration exactly 1 time:DurationDescription]']}\nGenerated CQs:", "output": "Is every Event required to have exactly one startTime that is an instance of time:Instant? | Can an Event have more or fewer than one associated startTime? | Does the ontology prevent an Event from having multiple or no startTime values at all? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Active\nDescription: Active is defined as a subclass of State. This means that any instance of Active is also an instance of State, representing a particular condition or mode within the broader context of states. Active inherits all general properties and constraints of State, distinguishing itself as a specific form or type of state.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "Does Active fall under the general classification of State? | Which entities are recognized as specific forms of State, such as Active? | What broader groupings encompass the concept of Active in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Apnea\nDescription: Apnea is defined as a subclass of State, indicating that it represents a specific type of state or condition. Individuals classified as Apnea are instances where an organism is in a particular state, typically characterized by the temporary cessation of breathing. This classification ensures that Apnea is formally recognized as a distinct physiological state within the ontology.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "What broader classes does Apnea fall under in the hierarchy? | Which conditions are subclasses under the State category, such as Apnea? | Is Apnea categorized as a specific type of State? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Arousal\nDescription: Arousal is defined as a subclass of State, representing a specific type of state within the ontology. Members of the Arousal class inherit all characteristics of State, indicating that arousal denotes a particular condition or status, although no further differentiating axioms or property restrictions are specified.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "What subclasses are present within the concept of State, such as Arousal? | Is Arousal categorized under the broader class of State? | Which higher-level classes encompass Arousal as a more specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoveLimb\nDescription: MoveLimb is defined as a subclass of State, indicating that it represents a specific type of state within the ontology. This class characterizes conditions or situations involving the movement of a limb, and inherits all general properties applicable to State. There are no additional restrictions or disjointness axioms specified for MoveLimb.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "What types of State include MoveLimb as a more specialized concept? | Is MoveLimb a specific instance within the broader category of State? | Which higher-level categories conceptually include MoveLimb? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Posture\nDescription: Posture is defined as a subclass of State, meaning any instance of Posture is also an instance of State. This class represents the particular physical alignment or arrangement of an organism or object. The lack of disjointness or additional restrictions indicates Posture is broadly characterized within the hierarchy of states or conditions.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "Which general classifications encompass Posture in this hierarchy? | Is Posture considered a more specific form within the broader category of State? | What are the different subclasses identified under State, including Posture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Rest\nDescription: Rest is defined as a subclass of State, indicating that it represents a specific type of state within the ontology. No further restrictions or properties are specified, and it is annotated with the comment \"DTI-2.\"\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "Which broader categories encompass the concept of Rest? | What more specific concepts fall under the category of State, such as Rest? | Is Rest classified as a type of State? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AlarmClock\nDescription: AlarmClock is defined as a subclass of Object. This classification indicates that every instance of AlarmClock is an Object, inheriting all associated characteristics. No additional properties or constraints are specified in the current axiom or description.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What types are covered under the broader class Object, including AlarmClock? | Which more general classes encompass AlarmClock within the ontology? | Is AlarmClock classified as a type of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Appliance\nDescription: Appliance is defined as a subclass of Object, indicating that every appliance is an object within the domain. This class encompasses all physical objects designed to perform specific functions, typically in a household or industrial setting. No further restrictions or specializations are specified in the current axioms.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is Appliance classified as a specialized form of Object? | Into which higher-level categories can Appliance be organized? | Which entities fall under the broader class of Object and include Appliance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Book\nDescription: Book is defined as a subclass of Object. This formalization states that every Book is an Object, inheriting all general characteristics of Objects. No further restrictions or distinguishing properties are specified in the current axiom or description.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "To which general types or categories does Book belong in the ontology? | Which entities are categorized as specializations of Object, including Book? | Is Book classified as a more specific type under the broader category of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bucket\nDescription: Bucket is defined as a subclass of Object. This means that every instance of Bucket is considered an Object, inheriting all the general properties and constraints associated with Objects. Since no additional restrictions or relations are specified, Bucket serves as a more specific type of Object without further distinguishing characteristics in this formalization.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "To which higher-level classes does Bucket belong? | Is Bucket categorized under the broader concept of Object? | What kinds of Objects include Bucket as a more specific type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cup\nDescription: Cup is defined as a subclass of Object. This means every cup is considered an object, inheriting all properties and characteristics associated with objects. No additional distinguishing characteristics or property restrictions are specified for the class at this level.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What are the parent categories that encompass Cup? | Is Cup a specific type within the broader category of Object? | Which subclasses are classified under Object, including Cup? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cuttlery\nDescription: Cuttlery is defined as a subclass of Object, representing items that fall within the broader category of objects. At present, there are no additional restrictions or characteristics specified, so any individual member of Cuttlery must be an Object. Further distinctions or properties distinguishing Cuttlery from other Objects are not provided in the current axiom.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "To which higher-level groupings can Cuttlery be assigned? | What are the more specialized categories that fall under Object, such as Cuttlery? | Does Cuttlery belong to the broader class of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Door\nDescription: Door is defined as a subclass of Object. This establishes that every Door is considered an Object within the ontology, inheriting all characteristics and properties assigned to Object. No additional restrictions or disjointness axioms are specified, so the class serves as a general categorization for any entity that can be considered a door.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is Door classified as a specific kind of Object? | Which specialized types fall under the broader class of Object, including Door? | What are the more encompassing categories to which Door belongs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorBell\nDescription: DoorBell is defined as a subclass of Object, indicating it is a physical entity or artifact. This class encompasses all entities recognized as doorbells, but no further axiomatic constraints or distinguishing characteristics are specified. Members of this class inherit general properties of objects.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is DoorBell classified as a specific type of Object? | Which entities are defined as subcategories under Object, such as DoorBell? | What are the higher-level classes that DoorBell is associated with? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Furniture\nDescription: Furniture is defined as a subclass of Object, indicating that all pieces of furniture are considered objects. This classification positions furniture within a broader category of tangible entities that have physical presence, without specifying further characteristics or restrictions.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is Furniture classified under the broader category of Object? | Among the subclasses of Object, does Furniture appear as a member? | Which categories encompass Furniture as a more general class, including Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Glass\nDescription: Glass is defined as a subclass of Object, meaning it represents a specific kind of object within the ontology. No further restrictions or disjointness are specified, so any individual classified as Glass inherits all the properties of Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Can Glass be classified as a kind of Object? | What entities are classified as specializations of Object, such as Glass? | Which higher-level categories include Glass within their hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KitchenPress\nDescription: KitchenPress is defined as a subclass of Object, indicating that it represents a specific type of object within the ontology. No additional axioms or restrictions are specified, so individuals of this class inherit all properties of Object without further distinguishing characteristics.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Is KitchenPress classified under the broader category of Object? | What higher-level groupings encompass KitchenPress within the ontology? | Which items fall under Object, specifically including KitchenPress? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mop\nDescription: mop is defined as a subclass of Object. This means that every mop is considered to be an Object within the ontology, inheriting all characteristics associated with objects. There are currently no further restrictions or differentiating axioms specified for the mop class.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Which items are categorized more specifically than Object, including Mop? | What broader categories encompass the concept of Mop? | Does Mop fall under the general classification of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Plate\nDescription: Plate is defined as a subclass of Object. This means that every instance of Plate is also an instance of Object, inheriting all properties and characteristics associated with Object. No further restrictions or characteristics are specified for Plate beyond its classification as an Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What broader classes include Plate as a member? | Which concepts fall under the category of Object, such as Plate? | Is Plate classified as a type of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RemoteControl\nDescription: RemoteControl is defined as a subclass of Object, indicating that all remote controls are considered objects within the ontology. This class captures entities that serve as physical devices used to control other systems or appliances remotely. There are currently no additional property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Which entities are defined as more specific types within the Object category, including RemoteControl? | To what higher-level classifications does RemoteControl belong? | Is RemoteControl classified under the broader class of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Telephone\nDescription: Telephone is defined as a subclass of Object, establishing it as a specific type of object. No further restrictions or relationships are specified, so any individual classified as a Telephone is understood to be an object according to the current ontology.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "Does Telephone fall under the broader classification of Object? | What are the immediate parent classes of Telephone in the ontology? | Which specific subclasses are encompassed within Object, such as Telephone? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WaterCan\nDescription: WaterCan is defined as a subclass of Object. This means every water can is formally recognized as an Object within the ontology. No additional axioms or property restrictions are specified, so WaterCan inherits all general characteristics of Object, serving as a specialized type of Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "To what broader categories does WaterCan belong within the ontology? | Is Object a generalization that includes WaterCan as a specific instance? | What items are considered more specific than Object, such as WaterCan? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Window\nDescription: Window is defined as a subclass of Object, indicating that every Window is an Object. No further distinguishing characteristics or constraints are specified beyond this general classification.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "output": "What overarching categories does Window fit into? | Which entities fall under Object, including Window? | Is Window classified within the broader group of Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnswerPhoneCall\nDescription: AnswerPhoneCall is defined as a subclass of TelephoneInteraction, indicating that it represents a specialized form of interaction involving telephones. Any individual classified as an AnswerPhoneCall inherently fulfills the characteristics and constraints of a TelephoneInteraction, but is specifically focused on the activity of answering a phone call.\nAxiom: {'subClassOf': ['TelephoneInteraction']}\nGenerated CQs:", "output": "What are the direct parent categories of AnswerPhoneCall? | Does AnswerPhoneCall fall under the general category of TelephoneInteraction? | Which specific types are encompassed by TelephoneInteraction, such as AnswerPhoneCall? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MakePhoneCall\nDescription: MakePhoneCall is defined as a subclass of TelephoneInteraction, indicating that it represents a specific type of interaction conducted via telephone. Any instance classified as MakePhoneCall necessarily inherits all characteristics of TelephoneInteraction, distinguishing itself as an interaction where a phone call is made.\nAxiom: {'subClassOf': ['TelephoneInteraction']}\nGenerated CQs:", "output": "What broader interaction types encompass MakePhoneCall within their classification? | Is every MakePhoneCall event classified under TelephoneInteraction? | Which specific interactions are categorized as subtypes of TelephoneInteraction, such as MakePhoneCall? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AtomicActivity\nDescription: AtomicActivity is defined as a subclass of Activity. This indicates that every AtomicActivity is an Activity, but it may possess more specific properties or constraints not captured at the Activity level. No additional axioms or restrictions are provided, so AtomicActivity serves as a specialized categorization within the broader class of activities.\nAxiom: {'subClassOf': ['Activity']}\nGenerated CQs:", "output": "Which types fall under Activity and encompass AtomicActivity as a subcategory? | What overarching types does AtomicActivity derive from within the ontology hierarchy? | Is AtomicActivity classified under the broader group of Activity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ComplexActivity\nDescription: ComplexActivity is defined as a subclass of Activity, meaning every ComplexActivity is an Activity. No additional property restrictions or disjointness axioms are specified, indicating that ComplexActivity inherits all characteristics of Activity but may represent more specialized or structured forms of activities.\nAxiom: {'subClassOf': ['Activity']}\nGenerated CQs:", "output": "Is ComplexActivity classified under the broader category of Activity? | What are the general categories that ComplexActivity falls under? | Which subclasses are encompassed within Activity, specifically including ComplexActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bathroom\nDescription: Bathroom is defined as a subclass of Room, establishing that every bathroom is a specialized type of room. No additional axioms or property restrictions are specified, so its distinguishing characteristic is solely its classification within the broader category of rooms.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "output": "What specific spaces are considered subclasses of Room, such as Bathroom? | Is Bathroom classified under the general category of Room? | Which broader categories include Bathroom as a more specific type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bedroom\nDescription: Bedroom is defined as a subclass of Room, indicating that every instance of Bedroom is also an instance of Room. This classification structurally organizes Bedroom within the broader hierarchy of building spaces, emphasizing that a Bedroom inherits all general characteristics of a Room while potentially possessing more specific properties related to its intended use as a sleeping area.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "output": "What higher-level categories encompass Bedroom according to the ontology? | Is Bedroom classified as a specific type within the broader concept of Room? | Which subcategories are present under the class Room, including Bedroom? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Kitchen\nDescription: Kitchen is defined as a subclass of Room, indicating that every kitchen is considered a type of room within an environment. No additional property restrictions or relationships are specified in the axiom, so the class primarily inherits general characteristics of rooms while denoting its specific use as a kitchen.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "output": "What are the specific types that fall under Room, such as Kitchen? | Is Kitchen classified within the broader category of Room? | Which general categories include Kitchen as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LivingRoom\nDescription: LivingRoom is defined as a subclass of Room, representing a specific type of room within a structure. This classification indicates that every instance of LivingRoom is necessarily an instance of Room, inheriting all properties and constraints that apply to Room. No further distinguishing axioms or restrictions are present beyond this subclass relationship.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "output": "What specific types fall under the broader category of Room, such as LivingRoom? | Which general categories encompass the concept of a LivingRoom? | Is every LivingRoom classified as a kind of Room? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bed\nDescription: Bed is formally defined as a subclass of Furniture, indicating that every instance of Bed is also an instance of Furniture. This classification situates Bed within the broader category of items intended for furnishing interior spaces. No additional axioms or restrictions are specified.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "output": "Does Bed fall under the category of Furniture? | What are the broader categories that the concept Bed is grouped under? | Which items are classified as subtypes of Furniture, including Bed? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Chair\nDescription: Chair is defined as a subclass of Furniture, indicating that every Chair is a type of Furniture. This formalization situates Chair within a broader hierarchy of household or office items intended for use and support. Without additional restrictions or properties, the class encompasses any object recognized as a Chair within the general category of Furniture.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "output": "Is Chair categorized under broader classes such as Furniture? | What general classes encompass Chair within their classification hierarchy? | What items are classified as more specific types of Furniture, including Chair? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Couch\nDescription: Couch is defined as a subclass of Furniture, indicating that every couch is a type of furniture. No additional property, disjointness, or restriction axioms are specified, so the class inherits all general characteristics of furniture but is specifically dedicated to couches.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "output": "To which broader classification does Couch belong in the context of furnishings? | Is Couch an instance within the general class of Furniture? | What are the direct subcategories of Furniture, including Couch? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Table\nDescription: Table is defined as a subclass of Furniture, meaning every instance of Table is also considered an instance of Furniture. No additional property restrictions or disjointness axioms are specified, so the class captures any furniture item that qualifies as a table within the ontology.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "output": "Is Table classified under the broader category of Furniture? | What higher-level groups does Table belong to in the context of this ontology? | Which types fall under the category Furniture, including Table? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: BedExit\nDescription: BedExit is defined as a subclass of ComplexActivity, indicating that it represents a type of complex action or event. Individuals belonging to this class participate in multifaceted activities related to the process of exiting a bed. The classification ensures that any instance of BedExit is recognized specifically as a form of ComplexActivity.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "What higher-level activity categories include BedExit as a specialized instance? | Which activities are categorized as more specific forms of ComplexActivity, including BedExit? | Does BedExit fall under the broader classification of ComplexActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fall\nDescription: Fall is defined as a subclass of ComplexActivity, indicating it is categorized as a type of complex activity. The current description notes that a fall occurs \"if not supported by LCS\" (likely referring to 'Lowering Control System' or a similar support mechanism), implying the event is characterized by the absence of this support during the occurrence. No disjointness or specific property restrictions have been asserted for this class.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Of which more general categories is Fall a constituent member? | Is Fall classified under the broader type of ComplexActivity? | What specific activities are categorized as subclasses of ComplexActivity, including Fall? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FoodAndDrinkConsumption\nDescription: FoodAndDrinkConsumption is defined as a subclass of ComplexActivity. This class represents activities that involve the intake or consumption of food and/or drink, and it inherits all characteristics of ComplexActivity. No further property restrictions or disjointness axioms are specified, so its definition is based solely on its placement in the activity hierarchy.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Does FoodAndDrinkConsumption fall under the classification of ComplexActivity? | To which broader activity types is FoodAndDrinkConsumption related? | Which activities are encompassed by ComplexActivity, including FoodAndDrinkConsumption? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nap\nDescription: Nap is defined as a subclass of ComplexActivity, indicating that it is a type of complex activity within the ontology. As a ComplexActivity, a nap is considered to involve multiple components or steps beyond a simple action, distinguishing it from more basic activities. No further restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "What broader activities encompass Nap as a more specific subtype? | Is Nap categorized as an instance of ComplexActivity? | Which activities are considered subtypes under ComplexActivity, such as Nap? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightSleep\nDescription: NightSleep is defined as a subclass of ComplexActivity, representing the entire sleep episode experienced during the night, including any relevant inferences or processes that occur throughout the sleep period. This class formalization associates NightSleep with complex activities and ensures its distinction by emphasizing the inclusion of all inferable events or activities occurring during sleep.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Is NightSleep categorized under the broader class of ComplexActivity? | What specific activities are classified as subclasses of ComplexActivity, including NightSleep? | Which overarching activity classes does NightSleep pertain to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareDrink\nDescription: PrepareDrink is defined as a subclass of ComplexActivity, indicating that it represents a type of complex activity within the ontological model. Instances of PrepareDrink inherit all characteristics of ComplexActivity and specifically pertain to the processes and actions involved in preparing a drink. The class does not impose further restrictions or differentiators beyond its place in the activity hierarchy.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "What general categories encompass the activity PrepareDrink? | Which activities are direct specializations of ComplexActivity, such as PrepareDrink? | Is PrepareDrink classified as a more specific activity under the broader ComplexActivity category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareMeal\nDescription: PrepareMeal is defined as a subclass of ComplexActivity, indicating that it represents a type of activity characterized by having multiple interrelated actions or steps. Any instance of PrepareMeal is therefore also an instance of ComplexActivity, situating meal preparation as a process that involves several coordinated activities.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "To which higher-level classes does PrepareMeal belong? | Is PrepareMeal categorized as a type of ComplexActivity? | Which activities are direct subtypes of ComplexActivity, including PrepareMeal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialInteraction\nDescription: SocialInteraction is defined as a subclass of ComplexActivity. This specifies that every instance of SocialInteraction is a type of ComplexActivity, indicating that social interactions are considered to involve multiple, coordinated actions or processes. No further restrictions or elaborations are provided, so the class is characterized primarily by its inherited properties from ComplexActivity.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "Which activities are specified as subtypes of ComplexActivity, including SocialInteraction? | Does SocialInteraction fall under the broader classification of ComplexActivity? | What are the more inclusive activity categories that encompass SocialInteraction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TableExit\nDescription: TableExit is defined as a subclass of ComplexActivity, indicating that every TableExit is a specific type of ComplexActivity. No additional property restrictions, disjointness, or further subclass relations are specified, so individuals of the TableExit class inherit all the general characteristics and behaviors attributed to ComplexActivity. This class is currently characterized solely by its hierarchical relation within the ontology.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "output": "What general categories encompass TableExit as a specialized activity? | Which activities are direct or indirect subclasses of ComplexActivity, including TableExit? | Is TableExit classified under the broader category of ComplexActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Carer\nDescription: Carer is defined as a subclass of Person, indicating that every Carer is also a Person. No further axioms or property restrictions are specified, so a Carer inherits all characteristics of Person without additional differentiating features in this definition.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "output": "Are all Carers considered instances of the broader category Person? | Which specific roles fall under the classification of Person, such as Carer? | To which general classes does Carer belong within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Clinician\nDescription: Clinician is defined as a subclass of Person, indicating that every clinician is a person. No further axioms or property restrictions are specified, so the class currently serves as a specialization of Person without additional constraints.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "output": "Which subclasses fall under the category of Person, including Clinician? | Is Clinician categorized under the broader class of Person? | To which higher-level classes does Clinician belong within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Patient\nDescription: Patient is defined as a subclass of Person, representing individuals who are receiving or registered to receive medical care or treatment. Any individual designated as a Patient is inherently a Person.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "output": "What specific categories, such as Patient, are encompassed under the Person class? | Within which broader classes is Patient hierarchically included? | Does Patient fall under the general classification of Person? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChangeOrientation\nDescription: ChangeOrientation is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible type of activity within the domain. While the current description provides a brief comment (\"WIMU\"), no detailed explanation is available. Based on its name and axiom, ChangeOrientation likely refers to an atomic activity where the orientation of an entity is altered.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which specific activities are considered subtypes of AtomicActivity, such as ChangeOrientation? | Under which broader activity classification does ChangeOrientation fall? | Is ChangeOrientation categorized under AtomicActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChangePosture\nDescription: ChangePosture is defined as a subclass of AtomicActivity, indicating it represents an elementary, indivisible activity within the ontology. While the current description only notes \"WIMU,\" this class structurally inherits all characteristics of AtomicActivity and is intended to capture specific activities related to posture changes.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Does ChangePosture fall under the broader classification of AtomicActivity? | What specific activities are included within the category of AtomicActivity, such as ChangePosture? | Which higher-level categories encompass ChangePosture in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DialNumber\nDescription: DialNumber is defined as a subclass of AtomicActivity. This means that every instance of DialNumber is also an instance of AtomicActivity. There are no further restrictions or disjointness axioms specified, so DialNumber inherits all characteristics of AtomicActivity without additional distinguishing features. This class is intended to represent the fundamental activity of dialing a number, which is atomic in nature within the modeled domain.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which activities fall under the category of AtomicActivity, including DialNumber? | Is DialNumber regarded as a specific kind of AtomicActivity? | What broader activity classifications does DialNumber belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Drink\nDescription: Drink is defined as a subclass of AtomicActivity, indicating that it represents a fundamental activity that cannot be further decomposed into simpler actions. This class encompasses all actions entailing the act of consuming liquids, and inherits general properties and constraints from AtomicActivity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is Drink categorized under the broader class of AtomicActivity? | Which general activity types encompass Drink? | What specific activities are included within AtomicActivity, such as Drink? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Eat\nDescription: Eat is defined as a subclass of AtomicActivity, indicating that it represents a fundamental, indivisible activity within the ontology. Any instance of Eat must also be an instance of AtomicActivity. No further constraints or characteristics are specified.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is Eat an instance of the more general class AtomicActivity? | Under which broader activity classes does Eat fall? | What other activities, alongside Eat, are classified as specializations of AtomicActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalActivity\nDescription: PhysicalActivity is defined as a subclass of AtomicActivity. This classification indicates that any instance of PhysicalActivity is also an instance of AtomicActivity, inheriting all its properties and constraints. PhysicalActivity, therefore, represents a specific kind of AtomicActivity, typically involving bodily movement or exertion. No other disjointness or additional property restrictions are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which activities are more specific than AtomicActivity, including PhysicalActivity? | Is PhysicalActivity classified under the broader category of AtomicActivity? | To which higher-level categories does PhysicalActivity belong within the activity hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PickUpPhone\nDescription: PickUpPhone is defined as a subclass of AtomicActivity, indicating that it represents an indivisible, fundamental action within a larger process or workflow. This classification implies that PickUpPhone is treated as a single, non-decomposable activity in the ontology. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is PickUpPhone classified under the broader group of AtomicActivity? | Into what higher-level categories is PickUpPhone organized? | Which activities are specified as subclasses of AtomicActivity, including PickUpPhone? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sleep\nDescription: Sleep is defined as a subclass of AtomicActivity, indicating that it represents a fundamental, indivisible type of activity within the given ontology. The current description (\"Gear 4 / DTI-2\") provides domain-specific or contextual labeling but does not further characterize the nature of Sleep. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which activities are categorized under AtomicActivity, such as Sleep? | What broader activity categories include Sleep as a member? | Is Sleep classified as a specific kind of AtomicActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Speak\nDescription: Speak is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible action within the ontology. Any instance of Speak is necessarily an AtomicActivity, but not all AtomicActivities are instances of Speak. No additional property restrictions or class relationships are specified for Speak in the current axiom.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is Speak classified as a specific kind of AtomicActivity? | What distinct activities fall under the category of AtomicActivity, including Speak? | Which broader categories encompass the activity Speak? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: State\nDescription: State is defined as a subclass of AtomicActivity, indicating that every State represents an atomic (indivisible) activity within a given framework. This classification positions State as a fundamental unit of activity, inheriting all characteristics and constraints of AtomicActivity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which activity types fall under the general class of AtomicActivity, including State? | Is State classified as a specialized form of AtomicActivity? | What are the broader categories that encompass State? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StepCounting\nDescription: StepCounting is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible type of activity. The class is annotated with the comment \"WIMU,\" which may refer to its association with wearable inertial measurement unit systems, commonly used for tracking activity metrics such as steps. No further property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is StepCounting a more specific form of AtomicActivity? | Which activities fall under the scope of AtomicActivity, such as StepCounting? | To what higher-level categories is StepCounting classified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UseObject\nDescription: UseObject is defined as a subclass of AtomicActivity, indicating that it represents a specific type of atomic activity within the ontology. By this axiom, all instances of UseObject inherit the general properties and constraints of AtomicActivity, situating UseObject as a more specialized activity focused on the usage of objects.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Which specific activities are categorized as subtypes of AtomicActivity, such as UseObject? | Is UseObject classified under AtomicActivity in the ontology? | To which broader activity classes does UseObject belong according to the ontology structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Walk\nDescription: Walk is defined as a subclass of AtomicActivity, indicating that walking is considered a fundamental unit of activity within the ontology. No additional property restrictions or disjointness axioms are specified, so Walk inherits all characteristics of AtomicActivity, serving to represent the act of walking as a basic type of activity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "output": "Is Walk classified under the broader group of AtomicActivity? | Which more general category does Walk directly belong to? | What are the specific activities that fall under AtomicActivity, such as Walk? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Closed\nDescription: Closed is defined as a subclass of ObjectEvent, indicating that it represents a specific type of event involving an object. Any individual belonging to the class Closed is inherently classified as an ObjectEvent, inheriting all of its characteristics. No additional distinguishing restrictions or properties are specified for Closed beyond its relationship to ObjectEvent.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "Which concepts are more specific instances of ObjectEvent, such as Closed? | What overarching categories encompass Closed within the ontology? | Is Closed classified under the broader category of ObjectEvent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Off\nDescription: Off is defined as a subclass of ObjectEvent. This means every instance of Off is also an instance of ObjectEvent, inheriting all its properties and restrictions. The class Off is used to represent events where an object is turned off or ceases to be active. There are no further property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "Which broader event categories encompass Off? | Is Off classified as a specialization of ObjectEvent? | What specific types are included under ObjectEvent, such as Off? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: On\nDescription: On is defined as a subclass of ObjectEvent, meaning that all instances of On are specific types of ObjectEvent. This classification indicates that On inherits all characteristics of ObjectEvent, serving as a more specialized concept within the event hierarchy. No additional property restrictions or disjointness axioms are specified for On.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "What specific events are classified as subclasses of ObjectEvent, such as On? | Which broader event classes include On as a subtype? | Is On categorized under ObjectEvent as a more specialized concept? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Open\nDescription: Open is defined as a subclass of ObjectEvent. This means that every instance of Open is also an instance of ObjectEvent, situating it within the broader context of events involving objects. No additional characteristics or constraints beyond its classification under ObjectEvent are specified.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "What higher-level groupings include Open as a member? | Which instances are classified as subtypes of ObjectEvent, such as Open? | Does Open fall under the wider class of ObjectEvent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ringing\nDescription: Ringing is defined as a subclass of ObjectEvent. This means that any instance of Ringing is also an instance of ObjectEvent, capturing events specifically characterized as ringing occurrences. No further restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "output": "Does Ringing fall under the category of ObjectEvent? | What overarching categories is Ringing associated with? | Which events are considered more specific types within ObjectEvent, including Ringing? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cooker\nDescription: Cooker is defined as a subclass of Appliance. This class encompasses all appliances that are specifically designed for cooking functions, such as stoves, ovens, and similar equipment. Every instance of Cooker is, by definition, also an Appliance.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "What higher-level categories does Cooker belong to within the classification hierarchy? | Is Cooker classified under the broader group of Appliance? | Which types fall under the category of Appliance, specifically including Cooker? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fridge\nDescription: Fridge is defined as a subclass of Appliance, indicating that every instance of Fridge is also an Appliance. This formalization groups fridges within the broader category of appliances, without imposing additional constraints or property restrictions specific to fridges.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "Which specific appliances include Fridge as a type? | To which broader categories is Fridge hierarchically related? | Does Fridge fall under the general classification of Appliance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Kettle\nDescription: Kettle is defined as a subclass of Appliance, indicating that every kettle is considered a type of appliance. Currently, there are no additional property restrictions or disjointness axioms specified for this class, so its definition is based solely on its classification as an appliance.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "Which higher-level classes does Kettle inherit from? | What specific types are categorized as subclasses of Appliance, such as Kettle? | Does Kettle fall under the broader grouping of Appliance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TV\nDescription: TV is defined as a subclass of Appliance. This means that every instance of TV is also considered an Appliance, inheriting all general characteristics of Appliances. No further restrictions, disjointness, or property constraints are specified.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "To which broader classes does TV belong within the ontology hierarchy? | Is TV categorized as a more specific type under Appliance? | Which appliances include TV as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WashingMachine\nDescription: WashingMachine is defined as a subclass of Appliance, indicating that all washing machines are considered a type of appliance. No further restrictions or relationships are specified in the current axioms. This class is used to represent devices designed for cleaning laundry.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "output": "Is WashingMachine classified as a type of Appliance? | What are the more general classes that WashingMachine is a member of? | Which categories encompass WashingMachine as a more specialized instance, including Appliance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cycling\nDescription: Cycling is defined as a subclass of OutdoorPhysicalActivity, meaning that it is classified as a type of physical activity that takes place outdoors. This formalization indicates that all instances of Cycling are also instances of OutdoorPhysicalActivity, inheriting its general characteristics.\nAxiom: {'subClassOf': ['OutdoorPhysicalActivity']}\nGenerated CQs:", "output": "Is Cycling classified as a specialized form of OutdoorPhysicalActivity? | Which specific activities fall under the category of OutdoorPhysicalActivity, such as Cycling? | What broader activity categories does Cycling fall under in this context? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Running\nDescription: Running is defined as a subclass of OutdoorPhysicalActivity, indicating that all instances of Running are considered outdoor physical activities. This formalization situates Running within the broader context of activities performed outdoors that involve physical exertion.\nAxiom: {'subClassOf': ['OutdoorPhysicalActivity']}\nGenerated CQs:", "output": "Is Running classified under the broader category of OutdoorPhysicalActivity? | What specific types fall under OutdoorPhysicalActivity, such as Running? | Which higher-level activity classes does Running belong to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DangerousBedExit\nDescription: DangerousBedExit is defined as a subclass of BedExit. This indicates that every instance of DangerousBedExit is also an instance of BedExit, but captures those bed exit events that are specifically characterized as dangerous or high-risk. No further distinguishing axioms or property restrictions are specified beyond its position in the class hierarchy.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "output": "What are the direct parent classes for DangerousBedExit in the ontology? | Is DangerousBedExit classified under the broader category of BedExit? | Which specific types fall under BedExit, including DangerousBedExit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongBedExit\nDescription: LongBedExit is defined as a subclass of BedExit. This indicates that every instance of LongBedExit is also an instance of BedExit, inheriting all characteristics and restrictions that apply to BedExit, while potentially having additional distinguishing properties or constraints specific to LongBedExit.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "output": "What more specific types are included within BedExit, such as LongBedExit? | Does LongBedExit fall under the broader classification of BedExit? | Which general categories encompass LongBedExit in the hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightRoomVisit\nDescription: NightRoomVisit is defined as a subclass of BedExit, indicating that every instance of NightRoomVisit is also a kind of BedExit. This class represents events where an individual exits their bed specifically for a room visit during the night, inheriting all the characteristics and properties of BedExit while providing a more specific context for nighttime occurrences.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "output": "Which specific activities are categorized under BedExit, such as NightRoomVisit? | What broader event types encompass NightRoomVisit? | Are all NightRoomVisit instances considered examples of BedExit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FaceToFaceInteraction\nDescription: FaceToFaceInteraction is a subclass of SocialInteraction, representing social interactions that occur when participants are physically present with each other. Individuals in this class engage in direct, co-located communication, distinguishing them from remote or mediated interactions.\nAxiom: {'subClassOf': ['SocialInteraction']}\nGenerated CQs:", "output": "In terms of broader classifications, what is the parent category for FaceToFaceInteraction? | Is every FaceToFaceInteraction categorized as a form of SocialInteraction? | Which specific interactions fall under SocialInteraction, such as FaceToFaceInteraction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TelephoneInteraction\nDescription: TelephoneInteraction is defined as a subclass of SocialInteraction, indicating that it represents a specific type of social exchange occurring via telephone communication. Members of this class participate in interactions where the primary medium is a telephone, distinguishing them from other forms of social interaction such as face-to-face conversations or electronic messaging.\nAxiom: {'subClassOf': ['SocialInteraction']}\nGenerated CQs:", "output": "Which specific interactions are classified as types of SocialInteraction, including TelephoneInteraction? | What broader interaction categories encompass TelephoneInteraction within the ontology? | Is TelephoneInteraction categorized under the broader class of SocialInteraction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveBreakfast\nDescription: HaveBreakfast is defined as a subclass of HaveMeal, indicating that every instance of HaveBreakfast is also an instance of HaveMeal. This class represents the specific act or event of having breakfast, distinguished from other types of meals by its subclass relationship. No additional constraints or disjointness axioms are specified.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "output": "Which actions are considered specific types of HaveMeal, such as HaveBreakfast? | Under which broader activities does HaveBreakfast fall? | Is HaveMeal a more general class that includes HaveBreakfast? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveDinner\nDescription: HaveDinner is defined as a subclass of HaveMeal, meaning that every instance of HaveDinner is also an instance of HaveMeal. This class represents the specific type of meal event that occurs during dinner, distinguishing it from other meal occasions within the broader category of meals.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "output": "Which specific activities are categorized under HaveMeal, such as HaveDinner? | What broader event types encompass HaveDinner? | Is HaveDinner classified as a type of HaveMeal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveLunch\nDescription: HaveLunch is defined as a subclass of HaveMeal, indicating that every instance of HaveLunch is also an instance of HaveMeal. This class represents activities or events specifically related to having lunch, distinguishing them from other types of meals. No additional restrictions or properties are imposed beyond this hierarchical relationship.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "output": "Which meal-related activities are categorized as more specific types beneath HaveMeal, such as HaveLunch? | To what broader meal categories can HaveLunch be assigned? | Does HaveLunch fall under the classification of HaveMeal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveDrink\nDescription: HaveDrink is a subclass of FoodAndDrinkConsumption, representing events or actions where an individual consumes a beverage. Any instance of HaveDrink is, by definition, a specific type of food and drink consumption activity, emphasizing the act of drinking over eating.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "output": "Which specific actions fall under FoodAndDrinkConsumption, including HaveDrink? | Is HaveDrink categorized as a kind of FoodAndDrinkConsumption? | What broader classifications encompass HaveDrink? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveMeal\nDescription: HaveMeal is defined as a subclass of FoodAndDrinkConsumption, representing instances where an individual engages in the act of consuming food and drink. Members of this class inherit all characteristics and constraints attributed to food and drink consumption activities.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "output": "Is HaveMeal classified under the broader concept of FoodAndDrinkConsumption? | What specific activities are categorized as types of FoodAndDrinkConsumption, such as HaveMeal? | Which overarching groups does HaveMeal fall within in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveSnack\nDescription: HaveSnack is defined as a subclass of FoodAndDrinkConsumption, meaning any instance of HaveSnack is also an instance of FoodAndDrinkConsumption. This class represents events or activities where snacks are consumed, distinguishing it from other forms of food and drink consumption.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "output": "Which higher-level categories include HaveSnack within their classification? | What types of activities are more specific instances of FoodAndDrinkConsumption, such as HaveSnack? | Does HaveSnack fall under the category of FoodAndDrinkConsumption? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Outdoors\nDescription: Outdoors is defined as a subclass of InLocation, indicating that it represents a specific type of location. Any instance of Outdoors is by definition also an instance of InLocation, capturing places or areas that are external to buildings or structures. The class formalizes the concept of being in an open, outside environment.\nAxiom: {'subClassOf': ['InLocation']}\nGenerated CQs:", "output": "What broader location categories does Outdoors fall under? | Is Outdoors a more specific instance within the scope of InLocation? | Which locations are encompassed by InLocation, including Outdoors? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IndoorPhysicalActivity\nDescription: IndoorPhysicalActivity is defined as a subclass of PhysicalActivity. This class encompasses physical activities that are specifically performed indoors, distinguishing them from outdoor or unspecified-location activities. Any individual classified as IndoorPhysicalActivity is, by definition, a type of PhysicalActivity but is further characterized by its occurrence within indoor environments.\nAxiom: {'subClassOf': ['PhysicalActivity']}\nGenerated CQs:", "output": "What broader categories does IndoorPhysicalActivity belong to within the ontology? | Does IndoorPhysicalActivity fall under the classification of PhysicalActivity? | Which activities are classified as subtypes of PhysicalActivity, including IndoorPhysicalActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OutdoorPhysicalActivity\nDescription: OutdoorPhysicalActivity is defined as a subclass of PhysicalActivity. This class encompasses all forms of physical activity that take place outdoors, distinguishing it from indoor activities. Members of this class inherit all characteristics of PhysicalActivity, but are specifically constrained by their outdoor context.\nAxiom: {'subClassOf': ['PhysicalActivity']}\nGenerated CQs:", "output": "Which subclasses classify under PhysicalActivity, such as OutdoorPhysicalActivity? | Does OutdoorPhysicalActivity fall under the category of PhysicalActivity? | What broader activity classifications encompass OutdoorPhysicalActivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongNap\nDescription: LongNap is defined as a subclass of Nap, representing nap instances with a duration longer than 30 minutes. This class is used to categorize naps that exceed the typical short duration, allowing formal distinction within the Nap hierarchy based on temporal length.\nAxiom: {'subClassOf': ['Nap']}\nGenerated CQs:", "output": "Is LongNap categorized as a type of Nap? | What broader groupings does LongNap fall under? | Which variations of Nap include LongNap as a specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NapAfterLunch\nDescription: NapAfterLunch is defined as a subclass of Nap, indicating that every instance of NapAfterLunch is also an instance of Nap. This class specifies naps that occur specifically after lunch, distinguishing them from naps taken at other times.\nAxiom: {'subClassOf': ['Nap']}\nGenerated CQs:", "output": "What kinds of Naps are defined, including NapAfterLunch? | Is NapAfterLunch categorized as a specific type of Nap? | Which broader classes encompass NapAfterLunch? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongTableExit\nDescription: LongTableExit is defined as a subclass of TableExit. This means that every LongTableExit is a kind of TableExit, inheriting all properties and constraints of TableExit, and can be used wherever a TableExit is required. No further distinguishing characteristics or restrictions are specified for LongTableExit beyond this subclass relationship.\nAxiom: {'subClassOf': ['TableExit']}\nGenerated CQs:", "output": "To what broader categories does LongTableExit belong based on its classification? | Is LongTableExit classified as a more specific type under TableExit? | Which types are classified as subcategories of TableExit, such as LongTableExit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Moving\nDescription: Moving is defined as a subclass of Active, indicating that all instances of Moving are also considered Active. This classification captures entities or processes characterized by being in a state of action or motion, forming a specific subset within the broader category of Active phenomena.\nAxiom: {'subClassOf': ['Active']}\nGenerated CQs:", "output": "What are the higher-level classes that encompass Moving? | Is Moving a more specific category under the broader class of Active? | Which subclasses are defined within the class Active, such as Moving? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightBathroomVisit\nDescription: NightBathroomVisit is defined as a subclass of NightRoomVisit. This means every instance of NightBathroomVisit is also considered an instance of NightRoomVisit, specifying that the visit occurs during the night and takes place specifically in a bathroom. No additional restrictions or properties are provided.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "output": "Which visit types are defined as more specific forms of NightRoomVisit, such as NightBathroomVisit? | To which overarching categories does NightBathroomVisit belong within the context of night-time visits? | Is NightBathroomVisit classified under the broader group of NightRoomVisit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightKitchenVisit\nDescription: NightKitchenVisit is defined as a subclass of NightRoomVisit. This means every NightKitchenVisit is a type of NightRoomVisit, inheriting all characteristics associated with NightRoomVisit, but specifically refers to visits to the kitchen that occur at night. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "output": "What general categories encompass NightKitchenVisit? | Which visit types fall under the broader classification of NightRoomVisit? | Is NightKitchenVisit a more specific form of NightRoomVisit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightLivingRoomVisit\nDescription: NightLivingRoomVisit is defined as a subclass of NightRoomVisit. This denotes that every instance of a NightLivingRoomVisit is also an instance of NightRoomVisit, typically representing visits to a living room that occur specifically during nighttime. No further property or disjointness constraints are specified in the current axioms.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "output": "Is NightRoomVisit a more general category that includes NightLivingRoomVisit? | What broader classes does NightLivingRoomVisit fall under? | Which specific instances or subclasses are encompassed by NightRoomVisit? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Object\nDescription: Object is defined as a subclass of Entity. This relationship indicates that every instance of Object is also considered an Entity, inheriting all general characteristics associated with Entity. No other constraints or differentiating axioms are specified for Object.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "output": "What are all the subclasses categorized under Entity? | Is Object a specialized form of Entity? | Which general groupings does Object fall under within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Person\nDescription: Person is defined as a subclass of Entity, meaning every individual categorized as a Person is also considered an Entity. No additional property restrictions or disjointness axioms are specified, so the class Person serves as a general categorization for entities recognized as people.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "output": "Does the Person class fall under the more general Entity category? | What broader groupings encompass the Person class? | Which classes are direct specializations within the Entity category, such as Person? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Place\nDescription: Place is defined as a subclass of Entity, meaning every instance of Place is also an Entity. This class represents physical or conceptual locations or areas, but no further restrictions, relationships, or properties are currently specified.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "output": "Is every Place categorized under the broader class of Entity? | Which subclasses are defined within the Entity category, such as Place? | What general classes does the concept Place belong to in the ontology hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareHotTea\nDescription: PrepareHotTea is defined as a subclass of PrepareDrink, indicating that it represents a specialized form of drink preparation activity. Any instance of PrepareHotTea is inherently an instance of PrepareDrink, specifically concerned with the preparation of hot tea. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['PrepareDrink']}\nGenerated CQs:", "output": "Which subclasses are defined under PrepareDrink, including PrepareHotTea? | What more general activity categories encompass PrepareHotTea? | Does PrepareHotTea belong to the set of activities classified as PrepareDrink? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Room\nDescription: Room is defined as a subclass of Place, indicating that every Room is a specific type of Place. This classification implies that all characteristics of Place are inherited by Room, allowing it to be used wherever a Place is referenced within the ontology. No additional restrictions or distinguishing axioms are specified for Room.\nAxiom: {'subClassOf': ['Place']}\nGenerated CQs:", "output": "Which higher-level categories encompass Room? | What are all subcategories defined within Place, such as Room? | Is Room classified under the broader category of Place? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SittingToStanding\nDescription: SittingToStanding is defined as a subclass of ChangePosture, representing the specific process or action in which an individual transitions from a sitting position to a standing position. As a more specialized posture change, every instance of SittingToStanding inherently qualifies as an instance of ChangePosture.\nAxiom: {'subClassOf': ['ChangePosture']}\nGenerated CQs:", "output": "Which posture change actions are categorized under ChangePosture, including SittingToStanding? | What general types or categories is SittingToStanding a more specific instance of? | Does SittingToStanding belong within the broader classification of ChangePosture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StandingToSitting\nDescription: StandingToSitting is defined as a subclass of ChangePosture. This class represents the action or process in which an individual moves from a standing position to a sitting position. All instances of StandingToSitting are, by definition, specific forms of posture change.\nAxiom: {'subClassOf': ['ChangePosture']}\nGenerated CQs:", "output": "Which general posture-changing categories include StandingToSitting as a member? | Is StandingToSitting an example of a specific type within the broader ChangePosture category? | What are the more specialized forms of ChangePosture, such as StandingToSitting? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Activity\nDescription: Activity is defined as a subclass of Event, representing occurrences or happenings that necessarily involve agents. Every instance of Activity must have at least one agent that is a Person and, in particular, must have exactly one Person as an agent. This ensures that any Activity is specifically characterized by the participation of one and only one Person as its agent.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasAgent exactly 1 Person]', '[hasAgent only Person]']}\nGenerated CQs:", "output": "Must every Activity involve at least one Person as an agent? | Is it required for an Activity to have the property 'hasAgent' assigned to a Person? | Does the existence of an Activity necessarily imply the involvement of some Person through the 'hasAgent' relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ObjectEvent\nDescription: ObjectEvent is defined as a subclass of Event. It is characterized by property restrictions specifying that it must have exactly one agent, and this agent must be an instance of Object. In other words, every ObjectEvent is an Event that is uniquely and explicitly associated with a single Object as its agent. This ensures that no ObjectEvent can exist without, or with more than one, Object agent.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasAgent exactly 1 Object]', '[hasAgent only Object]']}\nGenerated CQs:", "output": "Is every ObjectEvent necessarily associated with at least one agent via the 'hasAgent' property? | Can an ObjectEvent exist without having some object linked as its agent through 'hasAgent'? | Does the occurrence of an ObjectEvent guarantee the involvement of an object as its agent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmbientMeasurement\nDescription: AmbientMeasurement is defined as a subclass of Measurement, representing measurements that specifically pertain only to Room. The property restriction ensures that any AmbientMeasurement instance exclusively refers to a Room, formalizing that ambient measurements are contextually bound to indoor environments such as rooms.\nAxiom: {'subClassOf': ['Measurement'], 'propertyRestrictions': ['[refersTo some Room]']}\nGenerated CQs:", "output": "Is it required that AmbientMeasurement refers exclusively to a Room? | Can AmbientMeasurement ever refer to an entity other than Room? | Are all entities referred to by AmbientMeasurement instances necessarily Rooms? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorClosed\nDescription: DoorClosed is defined as a subclass of Closed and is characterized by the restriction that it must have at least one agent that is a Door (hasAgent some Door). This means that DoorClosed instances represent situations or states in which something closed specifically involves a Door as the acting agent.\nAxiom: {'subClassOf': ['Closed'], 'propertyRestrictions': ['[hasAgent only Door]']}\nGenerated CQs:", "output": "Is it required that DoorClosed must have the hasAgent property associated with at least one Door? | Can DoorClosed occur without any Door being specified as an agent? | Does every instance of DoorClosed necessarily have a Door as its agent through the hasAgent property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SkinConductivity\nDescription: SkinConductivity is defined as a subclass of PhysiologicalMeasurement. Members of this class are characterized by the requirement that they possess exactly one value for the property hasConductivity, and this value must be a literal (such as a numerical measurement). This ensures that each instance of SkinConductivity represents a specific, literal-based conductivity measurement associated with physiological data.\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasConductivity exactly 1]', '[hasConductivity some rdfs:Literal]']}\nGenerated CQs:", "output": "Is SkinConductivity restricted to having only hasConductivity values that are literals? | Can SkinConductivity possess a hasConductivity value that is not an rdfs:Literal? | Must every hasConductivity relation for SkinConductivity point exclusively to an rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NearObject\nDescription: NearObject is defined as a subclass of InLocation and is characterized by the property restriction that it must have at least one objectLocalisation relationship to an instance of Object. This means every NearObject instance is localized in space relative to some object, capturing the notion of proximity in an ontological context.\nAxiom: {'subClassOf': ['InLocation'], 'propertyRestrictions': ['[objectLocalisation only Object]']}\nGenerated CQs:", "output": "Is it required that a NearObject must have at least one object localisation relating to an Object? | Can every NearObject be associated with some instance of Object via the objectLocalisation property? | Does the NearObject class necessitate the existence of the objectLocalisation property connecting it to an Object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LightLevel\nDescription: LightLevel is defined as a subclass of AmbientMeasurement. Every instance of LightLevel is required to have exactly one value for the property hasLightLevel, and this value must be of type rdfs:Literal. This ensures that each LightLevel measurement precisely captures a single ambient light value.\nAxiom: {'subClassOf': ['AmbientMeasurement'], 'propertyRestrictions': ['[hasLightLevel exactly 1]', '[hasLightLevel only rdfs:Literal]']}\nGenerated CQs:", "output": "Is it necessary for a LightLevel to have at least one value for the property 'hasLightLevel'? | Does every instance of LightLevel require association with some literal value through 'hasLightLevel'? | Can a LightLevel exist without being linked to any literal value by the 'hasLightLevel' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sitting\nDescription: Sitting is defined as a subclass of Posture, representing a specific body position. It is further characterized by a property restriction requiring that the object of sitting must be localized on some instance of Furniture. This means that every instance of Sitting involves an association with a piece of furniture, reflecting the typical context in which the sitting posture occurs.\nAxiom: {'subClassOf': ['Posture'], 'propertyRestrictions': ['[objectLocalisation only Furniture]']}\nGenerated CQs:", "output": "Is it necessary for a Sitting instance to have the objectLocalisation property linked to some Furniture? | Does every Sitting require at least one associated Furniture through the objectLocalisation property? | Can a Sitting exist without any objectLocalisation relation to Furniture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Measurement\nDescription: Measurement is defined as a subclass of Event, representing occurrences that quantify some aspect of an entity. Each Measurement is formally restricted to refer to exactly one Entity (and only Entities) and must possess exactly one value (which must be of type rdfs:Literal). Additionally, every Measurement has a quality associated with it, and this quality must be a PhysicalQuality. These constraints ensure that a Measurement clearly and unambiguously describes a single, quantifiable property of a specific entity.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasQuality only PhysicalQuality]', '[refersTo exactly 1 Entity]', '[hasValue exactly 1]', '[hasValue some rdfs:Literal]', '[refersTo only Entity]', '[hasQuality exactly 1 PhysicalQuality]']}\nGenerated CQs:", "output": "Must every Measurement have exactly one associated PhysicalQuality through the hasQuality property? | Is it possible for a Measurement to have more than one PhysicalQuality linked by the hasQuality relation? | Does the ontology restrict Measurement instances to relate via hasQuality to one and only one PhysicalQuality? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhoneRinging\nDescription: PhoneRinging is defined as a subclass of Ringing, indicating that every instance of PhoneRinging is also necessarily an instance of Ringing. There are no additional property restrictions specified, so the class is characterized solely by its place within the class hierarchy.\nAxiom: {'subClassOf': ['Ringing'], 'propertyRestrictions': ['[hasAgent some Telephone]']}\nGenerated CQs:", "output": "Is it required that each PhoneRinging event involves at least one agent that is a Telephone? | Can a PhoneRinging event occur without being associated with a Telephone agent through the hasAgent property? | Does the occurrence of PhoneRinging always necessitate a Telephone participating as the agent via hasAgent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InLocation\nDescription: InLocation is a class whose instances are characterized by having a roomLocalisation relationship to at least one Room. This means that every individual belonging to InLocation must be associated with some Room via the roomLocalisation property. No other subclass or disjointness axioms are specified.\nAxiom: {'subClassOf': ['AtomicActivity'], 'propertyRestrictions': ['[roomLocalisation some Room]']}\nGenerated CQs:", "output": "Does every instance of InLocation represent a form of AtomicActivity? | What are the more specific activities classified under AtomicActivity, such as InLocation? | Which upper-level activity categories include InLocation as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HeartRate\nDescription: HeartRate is a class defined by the restriction that each individual must have exactly one value for the property hasRate, and that this value must be specified (i.e., there exists at least one hasRate value of type rdfs:Literal). This ensures that every instance of HeartRate is associated with a single, explicit rate value expressed as a literal.\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasRate exactly 1]', '[hasRate some rdfs:Literal]']}\nGenerated CQs:", "output": "Does HeartRate fall under the classification of PhysiologicalMeasurement? | Which specific measurements are recognized as subtypes of PhysiologicalMeasurement, including HeartRate? | What broader measurement categories encompass HeartRate? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InRoom\nDescription: InRoom is a class defined by the property restriction that its instances must have a roomLocalisation relationship to at least one instance of Place. This means any individual classified as InRoom is characterized by being associated with some Place through the roomLocalisation property, indicating its presence within a room or localized environment.\nAxiom: {'subClassOf': ['InLocation'], 'propertyRestrictions': ['[roomLocalisation some Place]']}\nGenerated CQs:", "output": "Does InRoom represent a more specific instance within the broader InLocation category? | What are the direct subclasses that fall under InLocation, such as InRoom? | Which higher-level categories encompass InRoom as a subcategory? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KettleOn\nDescription: KettleOn is a class defined by the property restriction that any member must have at least one agent that is a Kettle. There are no specified superclasses. This means that every instance of KettleOn is characterized by being associated with at least one Kettle through the hasAgent property.\nAxiom: {'subClassOf': ['On'], 'propertyRestrictions': ['[hasAgent some Kettle]']}\nGenerated CQs:", "output": "Does KettleOn represent a specific instance within the broader class On? | Which situations classified as On also include KettleOn as a specialized case? | What general categories encompass KettleOn within the hierarchy of On? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lying\nDescription: Lying is defined as a subclass of Posture, indicating that it represents a specific type of posture. There are no additional property restrictions specified for this class, so it inherits all general properties of posture without further constraints.\nAxiom: {'subClassOf': ['Posture'], 'propertyRestrictions': ['[objectLocalisation some Furniture]']}\nGenerated CQs:", "output": "Is it required that any instance of Lying must have an object localisation within some Furniture? | Can an Lying activity occur without involving the localisation of an object related to Furniture? | Does every Lying instance necessarily involve the localisation of an object that is classified as Furniture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasAgent\nDescription: The property \"hasAgent\" has no explicitly defined domain, range, or special characteristics. It is a sub-property of \"owl:topObjectProperty,\" making it a generalized object property. The inverse property is specified as \"isAgentIn,\" indicating that \"hasAgent\" links entities to their associated agents, while \"isAgentIn\" expresses the reverse relationship.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the ontological connection between the ‘hasAgent’ and ‘isAgentIn’ properties? | If entity A has an agent B, does this entail in the ontology that B is an agent in A? | Which property acts as the inverse of ‘hasAgent’ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasNoiseLevel\nDescription: The property \"hasNoiseLevel\" inherits from the more general property \"hasValue\" and does not have explicitly defined characteristics, domain, or range restrictions. It is intended to associate an entity with its noise level, but the precise classes or datatypes involved are not restricted by axioms. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasNoiseLevel considered a subproperty of hasValue in the ontology? | Which properties are defined as subproperties under hasValue? | Does using hasNoiseLevel always entail the use of hasValue? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasValue\nDescription: The property \"hasValue\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. As specified by its axioms, no constraints are currently imposed on its use, so its purpose and applicable contexts are not restricted within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'hasValue' be associated with any value, or is its range undefined? | Is it correct that the property 'hasValue' does not have any domain specified? | Is it accurate that the property 'hasValue' does not specify any range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: roomLocalisation\nDescription: The property \"roomLocalisation\" has no explicitly defined characteristics, domain, or range constraints, and is not specified as a sub-property or inverse of any other property. Based on its name, it is likely intended to associate entities with their location within a room, but no further semantic or structural restrictions are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'roomLocalisation' has no specified domain? | What can be the range of the property 'roomLocalisation'? | Can 'roomLocalisation' be used with subjects of any class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: objectLocalisation\nDescription: The property \"objectLocalisation\" has no explicitly defined domain or range restrictions and no formally specified characteristics. It is not declared as a sub-property of any other property nor does it have an inverse property. Its intended use is not further described by the available axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of values can serve as the range for the property 'objectLocalisation'? | What entities can serve as the domain for the property 'objectLocalisation'? | Are there any classes that should not be used as the subject of 'objectLocalisation'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isAgentIn\nDescription: The property \"isAgentIn\" has no explicitly specified domain, range, or characteristics. It is defined as a subproperty of owl:topObjectProperty, indicating it is a general object property without further restrictions. No inverse property is declared.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is isAgentIn categorized as a subproperty within the hierarchy of owl:topObjectProperty? | Is it correct that 'isAgentIn' does not specify a domain? | What entities can be the domain of the property 'isAgentIn'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no specified characteristics, domain, range, super-properties, or inverse property. It is a general property whose usage is not restricted to any particular class or value type in the current ontology specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'duration' be associated with values of any type as its range? | Should 'duration' be associated with any particular class as its domain? | Is it possible for the property 'duration' to have a specific domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: refersTo\nDescription: The property \"refersTo\" has no specified domain, range, characteristics, super-properties, or inverse properties. This indicates that it can be used to relate any two entities without formal restrictions. No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'refersTo' does not have a specified domain? | What possible classes can be the domain of the property 'refersTo'? | Can anything serve as the range for the property 'refersTo', or should it be restricted? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" does not specify any explicit characteristics, domain, or range restrictions, nor does it define any super-properties or inverse properties. It is typically used to associate an entity with a quality, although no further constraints are currently imposed by its axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'hasQuality' be applied to subjects of any type, or is there an implicit restriction? | Is it correct that the property 'hasQuality' has no specified domain? | What types of values are permissible as the range for the property 'hasQuality'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no explicitly defined characteristics, domain or range restrictions, super-properties, or inverse properties. Its usage context and intended meaning are not further specified by current axioms. This property may be intended to capture the starting time of an event or process, but no formal constraints are applied.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the range of the property 'startTime'? | Can 'startTime' be associated as a property of any entity type? | Is it correct that the property 'startTime' has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasRate\nDescription: The property \"hasRate\" has no specified characteristics, domain, or range constraints. It does not inherit from any super-properties and does not have an inverse property defined. This indicates that \"hasRate\" can be used flexibly between any types of entities without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasValue a superproperty of hasRate? | Which subproperties are contained within hasValue? | Are all uses of hasRate implicitly instances of hasValue according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasLightLevel\nDescription: The property \"hasLightLevel\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No further constraints or relationships are specified by the given axiom.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasValue a superproperty of hasLightLevel? | Which properties are defined as subproperties of hasValue within the ontology? | Do all instances of hasLightLevel also satisfy the conditions of hasValue? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasConductivity\nDescription: The property \"hasConductivity\" does not have any explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its usage and restrictions are not specified by the provided axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "output": "Does the presence of the hasConductivity property guarantee the presence of the hasValue property? | Which properties are defined as subproperties under hasValue within the ontology? | Is hasValue a direct superproperty of hasConductivity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasTemperature\nDescription: The property \"hasTemperature\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property, nor does it have an inverse property. This suggests that \"hasTemperature\" can relate any two individuals or values without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "output": "Does the use of hasTemperature always entail the use of hasValue? | Is hasValue considered a superproperty of hasTemperature in the ontology? | Which subproperties fall under hasValue, including hasTemperature? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P11_WalkingTask\nDescription: S1_P11_WalkingTask is a subclass of DirectedTask, representing a specific type of directed task that involves walking. Every instance of this class is required to have at least some measuredData of type GaitData as well as some LatencyData, and the measuredData associated with any instance may only be of types GaitData, LatencyData, or StressData. This ensures that S1_P11_WalkingTask is characterized by the collection and analysis of gait and latency information, with the potential inclusion of stress-related data during walking activities.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData some LatencyData]', '[measuredData some GaitData]']}\nGenerated CQs:", "output": "Is it required that S1_P11_WalkingTask has measuredData exclusively of type GaitData, LatencyData, or StressData? | May S1_P11_WalkingTask ever have measuredData relating to any data type aside from GaitData, LatencyData, or StressData? | Does the ontology prohibit S1_P11_WalkingTask from being associated with measuredData outside the categories of GaitData, LatencyData, or StressData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P21_SentenceRepeatingTask\nDescription: S1_P21_SentenceRepeatingTask is a subclass of DirectedTask characterized by measuredData properties. Every instance must have at least one measuredData value of type MoodVoiceData and at least one of type LatencyData. The measuredData property for this class can only be filled with LatencyData, MoodVoiceData, or StressData, and no other types. This structure ensures the task consistently collects both mood/voice and latency data, restricting measured data types to those specifically listed.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[measuredData some MoodVoiceData]', '[measuredData only (LatencyData or MoodVoiceData or StressData)]', '[measuredData some LatencyData]']}\nGenerated CQs:", "output": "Is S1_P21_SentenceRepeatingTask categorized as a kind of DirectedTask? | Which specialized tasks fall under the category of DirectedTask, such as S1_P21_SentenceRepeatingTask? | What broader task categories encompass S1_P21_SentenceRepeatingTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ClinicalRecord\nDescription: ClinicalRecord is defined as a class that must contain exactly one instance each of AutonomyAssessment, MotricityAbilitiesAssessment, CognitiveAbilitiesAssessment, and DiagnosisAssessment. Furthermore, the containsAssessment property for any ClinicalRecord instance is restricted to only those assessments that are of type AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment. This ensures that every ClinicalRecord is a structured record of clinical assessments, each holding exactly one specific assessment of autonomy, motricity abilities, cognitive abilities, and diagnosis, with assessments strictly limited to the defined set.\nAxiom: {'propertyRestrictions': ['[containsAssessment exactly 1 AutonomyAssessment]', '[containsAssessment exactly 1 MotricityAbilitiesAssessment]', '[containsAssessment exactly 1 CognitiveAbilitiesAssessment]', '[containsAssessment exactly 1 DiagnosisAssessment]']}\nGenerated CQs:", "output": "Is a ClinicalRecord permitted to contain any assessment type apart from AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment? | Must every assessment included in a ClinicalRecord be either an AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment? | Does the ontology prevent ClinicalRecord from containing assessments outside the set of AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalRecord\nDescription: ExperimentalRecord represents a record comprised of exactly one assessment of each of the following types: ExperimentalDiagnosisAssessment, CognitiveLoadAssessment, AbilityToOrganiseAssessment, FunctionalAbilityAssessment, MemorySelfAppraisalAssessment, GaitAssessment, ApathyAssessment, and StressAssessment. The class restricts its containsAssessment property so that only these eight specific assessment types are included—no additional or alternative types are permitted. Each ExperimentalRecord must contain exactly one instance of each assessment type, ensuring comprehensive and standardized coverage within each record.\nAxiom: {'propertyRestrictions': ['[containsAssessment exactly 1 ExperimentalDiagnosisAssessment]', '[containsAssessment only (AbilityToOrganiseAssessment or ApathyAssessment or CognitiveLoadAssessment or ExperimentalDiagnosisAssessment or FunctionalAbilityAssessment or GaitAssessment or MemorySelfAppraisalAssessment or StressAssessment)]', '[containsAssessment exactly 1 AbilityToOrganiseAssessment]', '[containsAssessment exactly 1 FunctionalAbilityAssessment]', '[containsAssessment exactly 1 MemorySelfAppraisalAssessment]', '[containsAssessment exactly 1 GaitAssessment]', '[containsAssessment exactly 1 ApathyAssessment]', '[containsAssessment exactly 1 StressAssessment]']}\nGenerated CQs:", "output": "Is it required that an ExperimentalRecord contains exactly one CognitiveLoadAssessment as an assessment? | Can an ExperimentalRecord have either no CognitiveLoadAssessment or more than one CognitiveLoadAssessment through the containsAssessment property? | Does the definition of ExperimentalRecord enforce that the containsAssessment property is limited to a single CognitiveLoadAssessment instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Task\nDescription: Task is defined as a class whose members are associated with exactly one start time and exactly one end time, each of which must be an instance of time:Instant. Additionally, every Task must have some measuredData, and all such measuredData must be of type StressData. These property restrictions ensure that every Task is temporally bounded and is characterized by stress-related measurements.\nAxiom: {'propertyRestrictions': ['[startTime exactly 1 time:Instant]', '[measuredData some StressData]', '[startTime only time:Instant]', '[endTime only time:Instant]', '[measuredData only StressData]']}\nGenerated CQs:", "output": "Is every Task required to have exactly one endTime specified as a time:Instant? | Can a Task have more than one endTime assigned? | Is it permissible for a Task to not have any endTime at all? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AbilityToOrganiseAssessment\nDescription: AbilityToOrganiseAssessment is defined as a subclass of ExperimentalAssessment. This means that every AbilityToOrganiseAssessment is an instance of ExperimentalAssessment, inheriting all its general characteristics. This class specifically represents assessments focusing on the capacity to organise or structure experimental tasks or processes. No further property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Which categories of ExperimentalAssessment encompass AbilityToOrganiseAssessment as a specific type? | What are the more specific assessment abilities that fall under ExperimentalAssessment? | Is AbilityToOrganiseAssessment classified as a kind of ExperimentalAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ApathyAssessment\nDescription: ApathyAssessment is defined as a subclass of ExperimentalAssessment. This means that every ApathyAssessment is a specific type of ExperimentalAssessment, inheriting all characteristics of the latter. It is used to systematically evaluate or measure apathy within an experimental or research context.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Which broader assessment classes does ApathyAssessment fall under? | What are the types of assessments classified under ExperimentalAssessment, including ApathyAssessment? | Is ApathyAssessment categorized as a form of ExperimentalAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FunctionalAbilityAssessment\nDescription: FunctionalAbilityAssessment is defined as a subclass of ExperimentalAssessment. This means every FunctionalAbilityAssessment is also an ExperimentalAssessment, inheriting its characteristics. No further restrictions or disjointness axioms are specified, so FunctionalAbilityAssessment can be understood as a specialized form of ExperimentalAssessment focused on evaluating functional abilities.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "What types of assessments fall within ExperimentalAssessment, including FunctionalAbilityAssessment? | Which parent classes encompass FunctionalAbilityAssessment? | Is FunctionalAbilityAssessment categorized under ExperimentalAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MemorySelfAppraisalAssessment\nDescription: MemorySelfAppraisalAssessment is defined as a subclass of ExperimentalAssessment. This means it represents a specific type of assessment conducted in an experimental context, which focuses on evaluating an individual's own appraisal or judgement of their memory abilities. Members of this class inherit all characteristics of ExperimentalAssessment, while emphasizing the self-evaluation of memory performance.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Which overarching assessment categories include MemorySelfAppraisalAssessment as a member? | What specific types of ExperimentalAssessment does MemorySelfAppraisalAssessment represent? | Is MemorySelfAppraisalAssessment classified under the broader category of ExperimentalAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StressAssessment\nDescription: StressAssessment is defined as a subclass of ExperimentalAssessment, indicating it inherits all properties of ExperimentalAssessment. This class represents assessments specifically designed to evaluate stress within an experimental context. No additional property restrictions or disjointness axioms are specified, so it can encompass any form of assessment fitting this criterion.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "output": "Is StressAssessment classified under the broader type of ExperimentalAssessment? | Which types of assessments are categorized as subkinds of ExperimentalAssessment, such as StressAssessment? | To what higher-level assessment classes does StressAssessment belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HandTrajectoryType\nDescription: HandTrajectoryType is defined as a subclass of Type. This class represents a specific categorization or kind of type that pertains to hand trajectory, inheriting all characteristics of Type. No additional axioms or restrictions are specified.\nAxiom: {'subClassOf': ['Type']}\nGenerated CQs:", "output": "What categories encompass HandTrajectoryType as a member, given its position under Type? | Which concepts are directly organized under the class Type, including HandTrajectoryType? | Is HandTrajectoryType classified as a more specific concept under Type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnswerPhoneTask\nDescription: AnswerPhoneTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks but is specialized for the context of answering phone calls. This classification asserts that every instance of AnswerPhoneTask is also an instance of SemiDirectedTask, typically involving user interaction with some degree of guidance but not complete direction. No additional property or disjointness axioms are specified.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Which higher-level task types include AnswerPhoneTask as a specialization? | Does AnswerPhoneTask fall under the broader classification of SemiDirectedTask? | What specific tasks are encompassed by the category SemiDirectedTask, such as AnswerPhoneTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CallPsychologistTask\nDescription: CallPsychologistTask is defined as a subclass of SemiDirectedTask. This classification indicates that any instance of CallPsychologistTask inherits all properties of SemiDirectedTask, representing a specific type of task that involves some level of pre-defined guidance or structure. No additional distinguishing properties or constraints are specified beyond its membership in the SemiDirectedTask category.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Is CallPsychologistTask classified as a kind of SemiDirectedTask? | What broader task types encompass CallPsychologistTask? | Which specific tasks are categorized under SemiDirectedTask, including CallPsychologistTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EstablishAccountBalanceTask\nDescription: EstablishAccountBalanceTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all properties and constraints of SemiDirectedTask. This class represents tasks specifically related to establishing or determining an account balance, and it is semantically positioned within the ontology as a type of semi-directed task. No further restrictions or differentiators are specified in the current axioms.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Which tasks are defined as more specific than SemiDirectedTask, including EstablishAccountBalanceTask? | Is EstablishAccountBalanceTask a specialized form of SemiDirectedTask? | What broader task categories include EstablishAccountBalanceTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FindBusLineOnMapTask\nDescription: FindBusLineOnMapTask is defined as a subclass of SemiDirectedTask. This indicates that any instance of FindBusLineOnMapTask inherits the characteristics of a semi-directed task, which typically involves guidance but allows for a degree of user autonomy. The class is intended to represent tasks in which the objective is to locate a specific bus line on a map interface.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "What are the general task categories that FindBusLineOnMapTask is associated with? | Which tasks are categorized as specialized forms of SemiDirectedTask, specifically including FindBusLineOnMapTask? | Does FindBusLineOnMapTask fall under the broader classification of SemiDirectedTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeaveRoomTask\nDescription: LeaveRoomTask is defined as a subclass of SemiDirectedTask. This means that every LeaveRoomTask must fulfill all the characteristics of a SemiDirectedTask, but it represents a more specific type of task centered on the activity of leaving a room. No additional restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "What higher-level task categories include LeaveRoomTask as a member? | Is LeaveRoomTask categorized as a type of SemiDirectedTask? | Which specific tasks fall under the broader classification of SemiDirectedTask, including LeaveRoomTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PayBillTask\nDescription: PayBillTask is defined as a subclass of SemiDirectedTask, indicating it represents a specific type of task that involves partial direction or guidance in execution. No additional axioms are specified, so PayBillTask inherits all the general properties and constraints associated with SemiDirectedTask, and further characterizes tasks that involve the process of paying a bill.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "To which higher-level task categories is PayBillTask hierarchically connected? | Is PayBillTask classified as a more specific type under the umbrella of SemiDirectedTask? | What are all the tasks that fall under the SemiDirectedTask category, including PayBillTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareDrugBoxTask\nDescription: PrepareDrugBoxTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks. Individuals classified under PrepareDrugBoxTask represent tasks involving the preparation of drug boxes, and these tasks exhibit the general properties and constraints established for semi-directed tasks within the ontology. No additional restrictions or properties are specified beyond its subclass relationship.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "What tasks are classified under SemiDirectedTask, including PrepareDrugBoxTask? | Is PrepareDrugBoxTask categorized as a form of SemiDirectedTask? | Which higher-level task categories does PrepareDrugBoxTask belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareHotTeaTask\nDescription: PrepareHotTeaTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks. This class represents activities or processes specifically related to the preparation of hot tea, encompassing all steps that are partially guided yet allow for some flexibility in execution. There are currently no additional restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "What are the broader categories encompassing PrepareHotTeaTask? | Which tasks fall under the category of SemiDirectedTask, such as PrepareHotTeaTask? | Is PrepareHotTeaTask recognized as a specialized form of SemiDirectedTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ReadArticleTask\nDescription: ReadArticleTask is defined as a subclass of SemiDirectedTask. This means that any instance of ReadArticleTask is also an instance of SemiDirectedTask, inheriting its characteristics and constraints. The class represents tasks that involve reading articles and fall within the category of semi-directed activities, which typically allow for some guidance or structure while retaining a degree of autonomy for the task performer.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Does the concept of ReadArticleTask fall within the broader class of SemiDirectedTask? | Which tasks are classified under SemiDirectedTask, such as ReadArticleTask? | What general task categories encompass ReadArticleTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TurnOnTVTask\nDescription: TurnOnTVTask is defined as a subclass of SemiDirectedTask. This means that every TurnOnTVTask is a type of semi-directed task, typically characterized by having some predefined structure or guidance but allowing for some user input or variation. There are no additional property restrictions or disjointness axioms specified, so TurnOnTVTask is generally understood to represent any task that involves turning on a TV, within the broader category of semi-directed tasks.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "What hierarchy of broader task categories does TurnOnTVTask fall under? | Is TurnOnTVTask categorized as a type of SemiDirectedTask? | Which tasks are considered to be specializations of SemiDirectedTask, for example TurnOnTVTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WaterPlantTask\nDescription: WaterPlantTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all the characteristics of semi-directed tasks. Members of this class represent tasks specifically concerned with watering plants, and they share any constraints or properties specified for semi-directed tasks.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "output": "Is WaterPlantTask encompassed by the broader class of SemiDirectedTask? | Which tasks are classified as specializations under SemiDirectedTask, such as WaterPlantTask? | To which overarching task groups does WaterPlantTask belong within the hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodVoiceData\nDescription: MoodVoiceData is a subclass of MeasuredData, indicating that it represents a specific type of measured information. Members of the MoodVoiceData class are characterized by being data entities whose primary function is to capture or represent aspects related to mood as conveyed through voice. This classification ensures that any instance of MoodVoiceData inherits all properties and characteristics of MeasuredData, with a particular focus on mood-related voice data.\nAxiom: {'subClassOf': ['MeasuredData']}\nGenerated CQs:", "output": "Which specialized types are encompassed by MeasuredData, such as MoodVoiceData? | Is MoodVoiceData classified under the category of MeasuredData? | Of what general categories is MoodVoiceData a specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DirectedDiscussionTask\nDescription: DirectedDiscussionTask is defined as a subclass of DiscussionTask. This means every DirectedDiscussionTask is a type of DiscussionTask, inheriting its general characteristics. There are no additional restrictions, property constraints, or disjointness axioms specified for this class. Its primary distinguishing feature lies in its hierarchical placement within the ontology.\nAxiom: {'subClassOf': ['DiscussionTask']}\nGenerated CQs:", "output": "To which broader categories does DirectedDiscussionTask belong within the task hierarchy? | Which task types are encompassed by DiscussionTask, specifically including DirectedDiscussionTask? | Is DirectedDiscussionTask classified as a more specific form of DiscussionTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FreeDiscussionTask\nDescription: FreeDiscussionTask is defined as a subclass of DiscussionTask. This means that every FreeDiscussionTask inherits all properties and characteristics of DiscussionTask, while potentially introducing further specializations specific to free-form or open-ended discussions. No additional constraints or distinguishing features are specified in the current axiom.\nAxiom: {'subClassOf': ['DiscussionTask']}\nGenerated CQs:", "output": "Is FreeDiscussionTask categorized as a kind of DiscussionTask? | Within which broader categories is FreeDiscussionTask classified? | Which task types are direct specializations of DiscussionTask, such as FreeDiscussionTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DirectedTask\nDescription: DirectedTask is defined as a subclass of Task. This means that every DirectedTask is a type of Task, inheriting all general characteristics of Task, but is further specialized to represent a more specific kind or instance within that broader category. No additional restrictions or differentiating axioms are specified beyond its hierarchical position in relation to Task.\nAxiom: {'subClassOf': ['Task']}\nGenerated CQs:", "output": "Which subclasses fall under Task, including DirectedTask? | What are the direct superclasses associated with DirectedTask? | Is DirectedTask categorized under the broader class of Task? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P21_PictureDescriptionTask\nDescription: S3_P21_PictureDescriptionTask is defined as a subclass of FreeDiscussionTask. This means that every instance of S3_P21_PictureDescriptionTask is also an instance of FreeDiscussionTask, inheriting all the properties and constraints applicable to free discussion tasks. No additional restrictions or differentiating features beyond this specialization are specified by the axioms.\nAxiom: {'subClassOf': ['FreeDiscussionTask']}\nGenerated CQs:", "output": "What higher-level categories encompass S3_P21_PictureDescriptionTask within the task taxonomy? | Which task types fall under the broader class of FreeDiscussionTask, such as S3_P21_PictureDescriptionTask? | Is S3_P21_PictureDescriptionTask recognized as a specialized form of FreeDiscussionTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P22_PictureDiscussionTask\nDescription: S3_P22_PictureDiscussionTask is defined as a subclass of FreeDiscussionTask. This means that every instance of S3_P22_PictureDiscussionTask is also considered a FreeDiscussionTask, inheriting all characteristics and constraints of FreeDiscussionTask, while potentially introducing additional specificity relevant to picture discussion activities.\nAxiom: {'subClassOf': ['FreeDiscussionTask']}\nGenerated CQs:", "output": "Which general discussion task categories encompass S3_P22_PictureDiscussionTask? | What discussion tasks are specialized forms of FreeDiscussionTask, such as S3_P22_PictureDiscussionTask? | Is S3_P22_PictureDiscussionTask classified as a more specific type of FreeDiscussionTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveLoadAssessment\nDescription: CognitiveLoadAssessment is defined as a subclass of ExperimentalAssessment, representing a specific type of assessment dedicated to measuring cognitive load in experimental contexts. Members of this class are characterized by having exactly one dual task score and exactly one mono task score, with both scores required to be data literals. This formalization ensures that each instance of CognitiveLoadAssessment includes precisely one measurable outcome for both mono-task and dual-task conditions, facilitating standardized evaluation and comparison of cognitive load across assessments.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasDualTaskScore exactly 1]', '[hasMonoTaskScore exactly 1]', '[hasMonoTaskScore only rdfs:Literal]', '[hasDualTaskScore some rdfs:Literal]']}\nGenerated CQs:", "output": "Does every Dual Task Score in a Cognitive Load Assessment have to be an rdfs:Literal? | Is it permitted for a Cognitive Load Assessment to have a Dual Task Score of a type other than rdfs:Literal? | Are all values assigned via hasDualTaskScore in Cognitive Load Assessment instances necessarily restricted to rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GaitAssessment\nDescription: GaitAssessment is defined as a subclass of ExperimentalAssessment. Individuals in this class are required to have exactly one MonoTaskScore and exactly one DualTaskScore, both of which must be literals (i.e., data values such as numbers or strings). This formalization ensures that each GaitAssessment precisely records a single score for both mono-task and dual-task conditions using literal values.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasMonoTaskScore exactly 1]', '[hasDualTaskScore only rdfs:Literal]', '[hasDualTaskScore exactly 1]', '[hasMonoTaskScore some rdfs:Literal]']}\nGenerated CQs:", "output": "Is every value associated with 'hasMonoTaskScore' for a GaitAssessment required to be a literal? | Can a GaitAssessment record only accept rdfs:Literal values for the hasMonoTaskScore property? | Does the hasMonoTaskScore property in GaitAssessment exclude any value types other than rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AutonomyAssessment\nDescription: AutonomyAssessment is a subclass of ClinicalAssessment designed specifically to evaluate an individual's level of autonomy. Every instance of AutonomyAssessment is required to have exactly one value for the property iadl_e, which must be of type xsd:int. This ensures that each AutonomyAssessment provides a singular, integer-based measurement relevant to the assessed individual's instrumental activities of daily living.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[iadl_e exactly 1 xsd:int]', '[iadl_e some xsd:int]']}\nGenerated CQs:", "output": "Is it required that AutonomyAssessment instances only have the 'iadl_e' property with values of type integer? | Must every 'iadl_e' property associated with AutonomyAssessment be restricted to integer values? | Are there any properties other than 'iadl_e' with integer values permitted for AutonomyAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveAbilitiesAssessment\nDescription: CognitiveAbilitiesAssessment is defined as a subclass of ClinicalAssessment, representing evaluations specifically focused on measuring cognitive functions. Instances of this class must have exactly one FAB score (an integer), one MMSE score (an integer), one Trail Making Test result (a string), one Free and Cued Reminding Assessment result (a string), and one Short Cognitive Battery Assessment result (a string). Property restrictions further specify that each of these assessments and scores must be unique and of the stated data type, ensuring a comprehensive and structured representation of cognitive assessment results for each individual.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[fabScore exactly 1 xsd:int]', '[freeAndCuedRemindingAssessment exactly 1 xsd:string]', '[hasMMSEScore exactly 1 xsd:int]', '[trailMakingTest only xsd:string]', '[trailMakingTest exactly 1 xsd:string]', '[freeAndCuedRemindingAssessment only xsd:string]', '[hasMMSEScore only xsd:int]', '[shortCognitiveBatteryAssessment exactly 1 xsd:string]', '[fabScore only xsd:int]', '[shortCognitiveBatteryAssessment some xsd:string]']}\nGenerated CQs:", "output": "Is it required that a CognitiveAbilitiesAssessment only have the shortCognitiveBatteryAssessment property with values of type xsd:string? | Are all shortCognitiveBatteryAssessment values associated with CognitiveAbilitiesAssessment instances strings? | Can a CognitiveAbilitiesAssessment have a shortCognitiveBatteryAssessment property with any value other than a string? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiagnosisAssessment\nDescription: DiagnosisAssessment is defined as a subclass of ClinicalAssessment, indicating that it inherits properties common to all clinical assessments. It is characterized by having exactly one value for the property hasClinicalDiagnosis, and this value must be of type DiagnosisType. This ensures that every instance of DiagnosisAssessment is linked to precisely one clinical diagnosis, providing a specific and unambiguous diagnosis outcome for each assessment.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[hasClinicalDiagnosis exactly 1 DiagnosisType]', '[hasClinicalDiagnosis some DiagnosisType]']}\nGenerated CQs:", "output": "Can a DiagnosisAssessment have a hasClinicalDiagnosis relationship with anything other than DiagnosisType? | Is it required that all clinical diagnoses assigned by a DiagnosisAssessment are instances of DiagnosisType? | Are diagnoses outside of the DiagnosisType class excluded from the possible values for hasClinicalDiagnosis in a DiagnosisAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MotricityAbilitiesAssessment\nDescription: MotricityAbilitiesAssessment is defined as a subclass of ClinicalAssessment, representing assessments that evaluate motor abilities. Every instance of this class is required to have exactly one UPDRS score, and this score must be an integer value (xsd:int). This ensures that each motricity abilities assessment is uniquely and quantitatively characterized by a single UPDRS score, aligning with the clinical need for standardized motor evaluation.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[hasUPDRSScore exactly 1 xsd:int]', '[hasUPDRSScore some xsd:int]']}\nGenerated CQs:", "output": "Are UPDRS scores for MotricityAbilitiesAssessment always restricted to integer values? | Can MotricityAbilitiesAssessment have any hasUPDRSScore value other than an integer? | Is it required that MotricityAbilitiesAssessment only uses hasUPDRSScore with values of type integer? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NeuropsychiatricAndMoodAssessment\nDescription: NeuropsychiatricAndMoodAssessment is defined as a subclass of ClinicalAssessment. Members of this class are characterized by the mandatory presence of exactly one value for each of the following properties: npi (Neuropsychiatric Inventory), dsm_ivDepressionCriteria, and apathyInventory, each being of type xsd:string. Furthermore, these properties cannot have values outside the string datatype. This formalization ensures that any individual instance of NeuropsychiatricAndMoodAssessment contains exactly and only one string value for each of these assessment criteria, supporting precise and consistent neuropsychiatric and mood evaluation.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[npi only xsd:string]', '[npi exactly 1 xsd:string]', '[dsm_ivDepressionCriteria exactly 1 xsd:string]', '[apathyInventory exactly 1 xsd:string]', '[apathyInventory only xsd:string]', '[dsm_ivDepressionCriteria some xsd:string]']}\nGenerated CQs:", "output": "Are values associated with 'dsm_ivDepressionCriteria' in NeuropsychiatricAndMoodAssessment exclusively of type string? | Is it required that all 'dsm_ivDepressionCriteria' properties in NeuropsychiatricAndMoodAssessment instances use string data? | Can NeuropsychiatricAndMoodAssessment ever have 'dsm_ivDepressionCriteria' values that are not strings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiscussionInvolvementData\nDescription: DiscussionInvolvementData is defined as a subclass of MeasuredData. Every instance of this class is required to have exactly one value for the property verbalReactionSpontaneity, and this property must take a value of type rdfs:Literal. This formalizes that each DiscussionInvolvementData entry captures a single, literal-valued measure of verbal reaction spontaneity as part of its involvement data.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[verbalReactionSpontaneity exactly 1]', '[verbalReactionSpontaneity some rdfs:Literal]']}\nGenerated CQs:", "output": "Are all values of the 'verbalReactionSpontaneity' property in DiscussionInvolvementData instances restricted exclusively to literals? | Is it possible for 'verbalReactionSpontaneity' in DiscussionInvolvementData to take any value type other than rdfs:Literal? | Does DiscussionInvolvementData ensure that only rdfs:Literal values are used for the 'verbalReactionSpontaneity' property for every instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GaitData\nDescription: GaitData is defined as a subclass of MeasuredData, representing data specifically related to gait characteristics. Each instance of GaitData is required to have exactly one value for each of the following properties: walkingSpeedInstantaneous, walkingSpeed, stepLength, dynamicBalance, and stoppingDisplacement. The properties walkingSpeedInstantaneous, walkingSpeed, stepLength, and dynamicBalance are restricted to values of type rdfs:Literal, while stoppingDisplacement is restricted to a value of type xsd:boolean. This formalization ensures that any GaitData instance will precisely contain a complete set of objectively measured gait parameters.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[walkingSpeedInstantaneous only rdfs:Literal]', '[walkingSpeed only rdfs:Literal]', '[stepLength only rdfs:Literal]', '[dynamicBalance exactly 1]', '[walkingSpeedInstantaneous exactly 1]', '[walkingSpeed exactly 1]', '[stoppingDisplacement exactly 1 xsd:boolean]', '[stepLength exactly 1]', '[stoppingDisplacement only xsd:boolean]', '[dynamicBalance some rdfs:Literal]']}\nGenerated CQs:", "output": "Are all dynamicBalance properties associated with GaitData exclusively required to have values of type rdfs:Literal? | Is it necessary that in GaitData, the property dynamicBalance cannot reference anything other than instances of rdfs:Literal? | Does the ontology restrict GaitData so that dynamicBalance never refers to a value outside the rdfs:Literal datatype? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OrganisationEfficiencyData\nDescription: OrganisationEfficiencyData is a subclass of MeasuredData representing measured values related to organizational efficiency. Every instance of this class must have exactly one value each for distanceWalked, areasOfInterestExplored, and areasOfNoInterestExplored, and all of these values must be literals. This class structurally enforces that the data captured is precisely quantified for these three efficiency-related attributes.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[distanceWalked only rdfs:Literal]', '[areasOfNoInterestExplored only rdfs:Literal]', '[areasOfNoInterestExplored exactly 1]', '[areasOfInterestExplored exactly 1]', '[distanceWalked exactly 1]', '[areasOfInterestExplored some rdfs:Literal]']}\nGenerated CQs:", "output": "Is it required that OrganisationEfficiencyData only explores areas of interest represented as literals? | Can OrganisationEfficiencyData have areas of interest explored that are not typed as rdfs:Literal? | Does OrganisationEfficiencyData restrict all explored areas of interest exclusively to instances of rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiscussionTask\nDescription: DiscussionTask is defined as a subclass of Task. Every instance of DiscussionTask is required to have at least some measured data of type StressData and some measured data of type MoodVoiceData. Additionally, all measured data associated with DiscussionTask must be exclusively of type StressData or MoodVoiceData, meaning no other types of measured data are permitted. This ensures that the assessment of a DiscussionTask is strictly based on stress and mood-related voice data.\nAxiom: {'subClassOf': ['Task'], 'propertyRestrictions': ['[measuredData some StressData]', '[measuredData some MoodVoiceData]', '[measuredData only (MoodVoiceData and StressData)]']}\nGenerated CQs:", "output": "Is DiscussionTask restricted to having measuredData properties only of type MoodVoiceData or StressData? | Can any measuredData associated with a DiscussionTask be a type other than MoodVoiceData or StressData? | Does the ontology prohibit DiscussionTask from being linked via measuredData to data types outside of MoodVoiceData and StressData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HealthyControlParticipant\nDescription: HealthyControlParticipant is defined as a subclass of Person, and is equivalent to individuals who have at least one clinical record containing an assessment where the clinical diagnosis is \"healthy.\" This class formalizes the concept of a participant who, according to their clinical assessments, has no diagnosed health issues, ensuring that all HealthyControlParticipant instances are characterized by clinically verified healthy status.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': ['[hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment and [hasClinicalDiagnosis only {healthy}])])]']}\nGenerated CQs:", "output": "Is every HealthyControlParticipant necessarily associated with a record that includes a clinical assessment confirming a 'healthy' diagnosis? | Does the class HealthyControlParticipant represent exactly those individuals who have at least one clinical record containing a diagnosis assessment marked as 'healthy'? | Is HealthyControlParticipant logically equivalent to entities with some clinical record where the assessment includes a clinical diagnosis of 'healthy'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PersonWithPredementia\nDescription: PersonWithPredementia is defined as a subclass of Person and is equivalent to those individuals who have at least one clinical record containing an assessment that diagnoses predementia. This formalization ensures that any member of the PersonWithPredementia class must be associated with a clinical record documenting a diagnosis assessment explicitly identifying predementia, thus providing a clear ontological basis for representing individuals in early stages of cognitive decline.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': ['[hasRecord only (ClinicalRecord and [containsAssessment only (DiagnosisAssessment or [hasClinicalDiagnosis some {predementia}])])]']}\nGenerated CQs:", "output": "Does every PersonWithPredementia necessarily have at least one record that contains a diagnosis assessment for predementia? | Is PersonWithPredementia logically equivalent to having a clinical record that includes an assessment component with a predementia diagnosis? | Can PersonWithPredementia be fully defined as someone with a clinical record documenting an assessment that diagnoses predementia? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_DirectedActivitiesStep\nDescription: S1_DirectedActivitiesStep is defined as a subclass of ProtocolStep. Each instance of this class is required to involve exactly one S1_P11_WalkingTask, one S1_P12_CountingBackwardsTask, one S1_P13_WalkingCountingBackwardsTask, one S1_P21_SentenceRepeatingTask, and one S1_P22_ArticulationControlTask. Additionally, the only tasks permitted to be involved are S1_P11_WalkingTask, S1_P12_CountingBackwardsTask, S1_P13_WalkingCountingBackwardsTask, S1_P21_SentenceRepeatingTask, S1_P22_ArticulationControlTask, or other general Task instances. This formalization ensures that each S1_DirectedActivitiesStep is composed of these five specific tasks, and does not include any other types of tasks.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask exactly 1 S1_P11_WalkingTask]', '[involvesTask exactly 1 S1_P13_WalkingCountingBackwardsTask]', '[involvesTask exactly 1 S1_P21_SentenceRepeatingTask]', '[involvesTask exactly 1 S1_P22_ArticulationControlTask]', '[involvesTask exactly 1 S1_P12_CountingBackwardsTask]', '[involvesTask only (S1_P11_WalkingTask and S1_P12_CountingBackwardsTask and S1_P13_WalkingCountingBackwardsTask and S1_P21_SentenceRepeatingTask and S1_P22_ArticulationControlTask and Task)]']}\nGenerated CQs:", "output": "Must every S1_DirectedActivitiesStep solely involve tasks that are either S1_P11_WalkingTask, S1_P12_CountingBackwardsTask, S1_P13_WalkingCountingBackwardsTask, S1_P21_SentenceRepeatingTask, S1_P22_ArticulationControlTask, or Task? | Is it possible for an S1_DirectedActivitiesStep to involve a task that is not among S1_P11_WalkingTask, S1_P12_CountingBackwardsTask, S1_P13_WalkingCountingBackwardsTask, S1_P21_SentenceRepeatingTask, S1_P22_ArticulationControlTask, or Task? | Are activities classified as S1_DirectedActivitiesStep permitted to involve only tasks from the specified set of six task categories? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_DiscussionWithClinicianStep\nDescription: S3_DiscussionWithClinicianStep is a subclass of ProtocolStep, representing a specific stage within a protocol that involves engagement with a clinician. This class is formally defined to involve exactly one S3_P1_DirectedExpressionTask and exactly one S3_P21_PictureDescriptionTask, with all associated tasks being limited exclusively to S3_P1_DirectedExpressionTask, S3_P21_PictureDescriptionTask, or their subclasses. This ensures the step comprises a focused discussion component, structured by these particular task types.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask exactly 1 S3_P1_DirectedExpressionTask]', '[involvesTask exactly 1 S3_P21_PictureDescriptionTask]', '[involvesTask some (S3_P1_DirectedExpressionTask and S3_P21_PictureDescriptionTask and Task)]']}\nGenerated CQs:", "output": "Must every S3_DiscussionWithClinicianStep involve only tasks classified as S3_P1_DirectedExpressionTask, S3_P21_PictureDescriptionTask, or Task? | Is it permissible for S3_DiscussionWithClinicianStep to involve any task outside of S3_P1_DirectedExpressionTask, S3_P21_PictureDescriptionTask, or Task? | Are the tasks associated with S3_DiscussionWithClinicianStep strictly limited to S3_P1_DirectedExpressionTask, S3_P21_PictureDescriptionTask, or Task categories? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P13_WalkingCountingBackwardsTask\nDescription: S1_P13_WalkingCountingBackwardsTask is a subclass of DirectedTask, representing a directed activity involving walking and counting backwards. Members of this class are characterized by being associated with measured data pertaining to gait, latency, and mood/voice, with the option to also include stress-related data. The task requires the presence of countingType information, restricted solely to instances of CountingType. Only data of types GaitData, LatencyData, MoodVoiceData, or StressData are permitted as measured data for this task.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[countingType only CountingType]', '[measuredData some LatencyData]', '[measuredData some GaitData]', '[countingType some CountingType]', '[measuredData only (GaitData or LatencyData or MoodVoiceData or StressData)]', '[measuredData only MoodVoiceData]']}\nGenerated CQs:", "output": "Must every instance of S1_P13_WalkingCountingBackwardsTask include at least one measuredData property relating to MoodVoiceData? | Is it possible for S1_P13_WalkingCountingBackwardsTask to have measuredData exclusively associated with MoodVoiceData? | Does the presence of measuredData of type MoodVoiceData necessarily imply the existence of an S1_P13_WalkingCountingBackwardsTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P1_DirectedExpressionTask\nDescription: S3_P1_DirectedExpressionTask is defined as a subclass of DirectedDiscussionTask. Every instance of this class is required to be associated with at least some measuredData of type MoodVoiceData, while all measuredData linked to the class must exclusively be either MoodVoiceData or StressData. This specification ensures that the measurable outcomes for this task are strictly limited to mood or stress-related voice data, reflecting its design for directed expression activities with a focus on mood and stress recording.\nAxiom: {'subClassOf': ['DirectedDiscussionTask'], 'propertyRestrictions': ['[measuredData only (MoodVoiceData or StressData)]', '[measuredData only MoodVoiceData]']}\nGenerated CQs:", "output": "Is it necessary for an S3_P1_DirectedExpressionTask to have at least one measuredData property with a value of type MoodVoiceData? | Does every instance of S3_P1_DirectedExpressionTask include measured data that pertains specifically to MoodVoiceData? | Can an S3_P1_DirectedExpressionTask exist without having any measuredData linked to MoodVoiceData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalAssessment\nDescription: ExperimentalAssessment is a class characterized by the restriction that each of its instances must have exactly one value for the property hasScore, and this value must be an rdfs:Literal. This formalization enforces that every ExperimentalAssessment is associated with a single, literal score value, supporting precise and unambiguous assessment results.\nAxiom: {'propertyRestrictions': ['[hasScore exactly 1]', '[hasScore some rdfs:Literal]']}\nGenerated CQs:", "output": "Is it true that an ExperimentalAssessment can only have 'hasScore' values that are rdfs:Literal? | Does the 'hasScore' property of ExperimentalAssessment restrict its values exclusively to instances of rdfs:Literal? | Can an ExperimentalAssessment ever have a 'hasScore' that is not an rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ProtocolStep\nDescription: ProtocolStep represents a process component that is associated with exactly one start time and exactly one end time, both of which must be of type time:Instant. Each ProtocolStep must involve at least one Task, and may involve only entities that are instances of Task. The class’s axioms enforce precise temporal boundaries and ensure strict task involvement, supporting detailed modeling of procedural workflows.\nAxiom: {'propertyRestrictions': ['[involvesTask some Task]', '[startTime exactly 1 time:Instant]', '[startTime only time:Instant]', '[endTime exactly 1 time:Instant]', '[involvesTask only Task]', '[endTime some time:Instant]']}\nGenerated CQs:", "output": "Is every endTime value associated with a ProtocolStep required to be an instance of time:Instant? | Can a ProtocolStep have an endTime property pointing to anything other than a time:Instant? | Does ProtocolStep restrict all usages of endTime exclusively to the time:Instant class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalDiagnosisAssessment\nDescription: ExperimentalDiagnosisAssessment is defined as a class whose instances must only be associated with values of the type DiagnosisType via the hasExperimentalDiagnosis property. There are no specified superclass relationships or disjointness conditions, but its core characteristic is that any hasExperimentalDiagnosis link from an instance of ExperimentalDiagnosisAssessment must connect only to a DiagnosisType. This restriction ensures controlled and consistent assignment of experimental diagnoses.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasExperimentalDiagnosis only DiagnosisType]']}\nGenerated CQs:", "output": "Is ExperimentalDiagnosisAssessment recognized as a specialization of ExperimentalAssessment? | Which assessments fall under the broader classification of ExperimentalAssessment, such as ExperimentalDiagnosisAssessment? | What higher-level categories encompass ExperimentalDiagnosisAssessment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ActivityStatusType\nDescription: ActivityStatusType is a class defined as being equivalent to the set containing the values \"omitted,\" \"completed,\" and \"incomplete.\" This means that any instance of ActivityStatusType must be one of these three statuses, and no others. The class does not have any superclasses specified.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{omitted, completed, incomplete}']}\nGenerated CQs:", "output": "Is ActivityStatusType classified under the broader category of Type? | Which types encompass ActivityStatusType as a more specific subtype? | What specific categories fall within the scope of Type, including ActivityStatusType? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CountingType\nDescription: CountingType is defined as a subclass of Type. This means every instance of CountingType is also an instance of Type, inheriting all characteristics of Type, but there are no additional equivalence constraints or differentiating axioms specified for CountingType.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{_20_0, _305_285}']}\nGenerated CQs:", "output": "Is CountingType equivalent to the intersection of _20_0 and _305_285? | Are all instances of CountingType necessarily members of both _20_0 and _305_285? | Does CountingType exclude any concepts outside the overlap of _20_0 and _305_285? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiagnosisType\nDescription: DiagnosisType is a class that is equivalent to the enumeration of three specific types: predementia, dementia, and healthy. This means any individual of DiagnosisType must be precisely one of these three options, explicitly restricting the possible values to this set.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{predementia, dementia, healthy}']}\nGenerated CQs:", "output": "Is DiagnosisType categorized under the broader class of Type? | Which subclasses are defined within Type, specifically including DiagnosisType? | What higher-level categories does DiagnosisType fall under within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GenderType\nDescription: GenderType is a class that is equivalent to the set containing exactly the individuals 'male' and 'female'. This means that any instance of GenderType must be either 'male' or 'female', and no other individuals can be classified as members of this class. The class does not specify any superclasses.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{male, female}']}\nGenerated CQs:", "output": "Is GenderType included as part of the broader group Type? | What specific subcategories exist under Type, such as GenderType? | Which overarching classification categories encompass GenderType? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LateralityType\nDescription: LateralityType is a class defined as being equivalent to the set containing exactly two members: left_handed and right_handed. This means every instance of LateralityType must either be left_handed or right_handed, and no other types are included within this class. This formalization provides an exhaustive categorization of laterality types within the defined context.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{left_handed, right_handed}']}\nGenerated CQs:", "output": "Is LateralityType categorized under the broader class of Type? | Which entities are more specific types within Type, such as LateralityType? | What higher-level classes encompass LateralityType? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveAbilitiesData\nDescription: CognitiveAbilitiesData is a subclass of MeasuredData, representing data specifically measured in the context of cognitive abilities assessments. Each instance must have exactly one status (of type ActivityStatusType), exactly one repetitions value (which must be an rdfs:Literal), and exactly one compliantInstructionsOrder (which must be a boolean, xsd:boolean). Additionally, the data must record exactly one taskDuration (of type time:DurationDescription). All status properties are restricted solely to instances of ActivityStatusType, repetitions are restricted to literals, and compliantInstructionsOrder is limited to boolean values, ensuring precise and standardized representation of cognitive abilities measurement data.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[status exactly 1 ActivityStatusType]', '[repetitions exactly 1]', '[repetitions only rdfs:Literal]', '[compliantInstructionsOrder only xsd:boolean]', '[compliantInstructionsOrder exactly 1 xsd:boolean]', '[taskDuration exactly 1 time:DurationDescription]', '[status only ActivityStatusType]', '[taskDuration only time:DurationDescription]']}\nGenerated CQs:", "output": "Is every 'taskDuration' property of CognitiveAbilitiesData restricted exclusively to instances of time:DurationDescription? | Must all values of the 'taskDuration' attribute for CognitiveAbilitiesData be descriptions of duration as defined by time:DurationDescription? | Can CognitiveAbilitiesData have any 'taskDuration' that is not categorized under time:DurationDescription? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FunctionalAbilitiesData\nDescription: FunctionalAbilitiesData is defined as a subclass of MeasuredData, representing datasets that pertain specifically to functional abilities. Any instance of FunctionalAbilitiesData has handTrajectory values that are exclusively of type HandTrajectoryType, ensuring that hand trajectory information recorded in this class adheres to a specified structure or format.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[handTrajectory only HandTrajectoryType]', '[handTrajectory exactly 1 HandTrajectoryType]']}\nGenerated CQs:", "output": "Is each FunctionalAbilitiesData instance required to have exactly one value for the property 'handTrajectory' of type HandTrajectoryType? | Can a FunctionalAbilitiesData entity be associated with more than one HandTrajectoryType through the 'handTrajectory' property? | Does the ontology permit a FunctionalAbilitiesData instance to have no assigned value for 'handTrajectory'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LatencyData\nDescription: LatencyData is defined as a subclass of MeasuredData. Each instance of LatencyData is characterized by having exactly one associated latency value, ensuring that for every data record of this type, one and only one latency measurement is present.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[latency exactly 1]', '[latency only rdfs:Literal]']}\nGenerated CQs:", "output": "Are all latency values associated with LatencyData instances required to be of type rdfs:Literal? | Does LatencyData exclude any latency property values that are not rdfs:Literal? | Is it necessary that every latency property of LatencyData is expressed solely as an rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StressData\nDescription: StressData is defined as a subclass of MeasuredData. Every individual of this class is characterized by having exactly one associated stressLevel value, ensuring that each StressData instance represents the measurement of a single, specific stress level.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[stressLevel exactly 1]', '[stressLevel only rdfs:Literal]']}\nGenerated CQs:", "output": "Is the stressLevel property for StressData instances limited exclusively to values of type rdfs:Literal? | Does every value assigned to the stressLevel property in StressData have to be an rdfs:Literal? | Can StressData have stressLevel values of any type other than rdfs:Literal? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SemiDirectedTask\nDescription: SemiDirectedTask is a class whose instances are required to have measured data related to both functional abilities and cognitive abilities. Additionally, any measured data associated with a SemiDirectedTask must be exclusively of the types: FunctionalAbilitiesData, CognitiveAbilitiesData, or StressData. This ensures tasks of this class are characterized by comprehensive assessments limited to these specific domains.\nAxiom: {'subClassOf': ['Task'], 'propertyRestrictions': ['[measuredData some FunctionalAbilitiesData]', '[measuredData some CognitiveAbilitiesData]', '[measuredData only (CognitiveAbilitiesData or FunctionalAbilitiesData or StressData)]']}\nGenerated CQs:", "output": "Is Task the direct supercategory of SemiDirectedTask? | Which specific types are classified under Task, such as SemiDirectedTask? | What broader classes encompass SemiDirectedTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PersonWithDementia\nDescription: PersonWithDementia is defined as a subclass of Person, indicating that every individual classified as a PersonWithDementia is also a Person. There are no additional equivalence axioms or property restrictions specified for this class.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': ['[hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment and [hasClinicalDiagnosis some {dementia}])])]']}\nGenerated CQs:", "output": "Must every PersonWithDementia have at least one record containing a diagnosis assessment indicating dementia? | Is a PersonWithDementia equivalent to someone with a clinical record that includes an assessment with a clinical diagnosis of dementia? | Does the definition of PersonWithDementia require the intersection of having a clinical record and an assessment diagnosing dementia? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Person\nDescription: Person is defined as a subclass of ns1:Person and is characterized by its participation in at least one Protocol (and only Protocols). Every Person must also have at least one ClinicalRecord and one DemographicCharacteristicsRecord, and all records associated with a Person must be either a ClinicalRecord, DemographicCharacteristicsRecord, or ExperimentalRecord—no other types of records are permitted. This formalization ensures that members of the Person class are specifically and exclusively involved in Protocols and maintain well-defined records about their clinical, demographic, or experimental attributes.\nAxiom: {'subClassOf': ['ns1:Person'], 'propertyRestrictions': ['[participates some Protocol]', '[hasRecord some ClinicalRecord]', '[hasRecord only (ClinicalRecord or DemographicCharacteristicsRecord or ExperimentalRecord)]', '[hasRecord some DemographicCharacteristicsRecord]', '[participates only Protocol]', '[hasRecord some ExperimentalRecord]']}\nGenerated CQs:", "output": "Is it required for every Person to have at least one ExperimentalRecord associated via the hasRecord property? | Does the ontology permit a Person instance to exist without any linked ExperimentalRecord through hasRecord? | Are there any Persons defined where hasRecord does not point to an ExperimentalRecord? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S2_SemiDirectedActivitiesStep\nDescription: S2_SemiDirectedActivitiesStep is a class defined by the simultaneous involvement of exactly one instance each of the following tasks: TurnOnTVTask, WaterPlantTask, PrepareHotTeaTask, CallPsychologistTask, AnswerPhoneTask, FindBusLineOnMapTask, PayBillTask, EstablishAccountBalanceTask, LeaveRoomTask, and PrepareDrugBoxTask. Furthermore, the class is constrained so that it only involves tasks from a specified set, namely: AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask. This formalization ensures that every instance of S2_SemiDirectedActivitiesStep must be composed of exactly one occurrence of each of the specified 10 task types, and may only involve tasks within the enumerated set.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask exactly 1 TurnOnTVTask]', '[involvesTask exactly 1 WaterPlantTask]', '[involvesTask exactly 1 PrepareHotTeaTask]', '[involvesTask exactly 1 CallPsychologistTask]', '[involvesTask exactly 1 AnswerPhoneTask]', '[involvesTask exactly 1 FindBusLineOnMapTask]', '[involvesTask only (AnswerPhoneTask or CallPsychologistTask or EstablishAccountBalanceTask or FindBusLineOnMapTask or LeaveRoomTask or PayBillTask or PrepareDrugBoxTask or PrepareHotTeaTask or Task or TurnOnTVTask or WaterPlantTask)]', '[involvesTask exactly 1 PayBillTask]', '[involvesTask exactly 1 EstablishAccountBalanceTask]', '[involvesTask exactly 1 LeaveRoomTask]', '[involvesTask exactly 1 PrepareDrugBoxTask]']}\nGenerated CQs:", "output": "Does S2_SemiDirectedActivitiesStep fall under the general category of ProtocolStep? | What are the distinct subtypes of ProtocolStep, including S2_SemiDirectedActivitiesStep? | Which broader step classifications encompass S2_SemiDirectedActivitiesStep? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P12_CountingBackwardsTask\nDescription: S1_P12_CountingBackwardsTask is a subclass of DirectedTask, characterized by a specific set of constraints: it requires that measuredData must be exclusively of the types LatencyData, MoodVoiceData, or StressData, and must include at least some MoodVoiceData. The task is further restricted to countingType values of either _20_0 or _305_285. This definition ensures instances of S1_P12_CountingBackwardsTask are directed tasks involving backward counting with rigorous data measurement requirements focused on latency, mood, voice, and stress.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (LatencyData or MoodVoiceData or StressData)]', '[countingType only {_20_0, _305_285}]', '[measuredData some MoodVoiceData]', '[measuredData some LatencyData]']}\nGenerated CQs:", "output": "Is it required that the S1_P12_CountingBackwardsTask has at least one measuredData property associated with LatencyData? | Must every instance of S1_P12_CountingBackwardsTask involve measuredData relating specifically to LatencyData? | Can S1_P12_CountingBackwardsTask exist without any measuredData property referring to LatencyData? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P22_ArticulationControlTask\nDescription: S1_P22_ArticulationControlTask is defined as a subclass of DirectedTask. All instances of this class are characterized by being associated with at least some measured data of type LatencyData, indicating that latency measurements are a required aspect of this task.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData some LatencyData]', '[measuredData only (LatencyData or StressData)]']}\nGenerated CQs:", "output": "Is it the case that an S1_P22_ArticulationControlTask can only have measuredData of type LatencyData or StressData? | Can measuredData associated with S1_P22_ArticulationControlTask ever include anything other than LatencyData or StressData? | Are LatencyData and StressData the exclusive kinds of measuredData permitted for S1_P22_ArticulationControlTask? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DemographicCharacteristicsRecord\nDescription: DemographicCharacteristicsRecord is a class representing an individual’s demographic attributes. Each record must have exactly one date of birth (of type xsd:dateTime) and exactly one gender (of type GenderType). The record may also specify laterality (restricted to values of type LateralityType), educationLevel (with exactly one value of type rdfs:Literal), and size (of type rdfs:Literal). The axioms ensure that all members of this class are uniquely identified by their single date of birth and gender, and have at most one education level specified.\nAxiom: {'propertyRestrictions': ['[dateOfBirth only xsd:dateTime]', '[gender only GenderType]', '[laterality only LateralityType]', '[educationLevel only rdfs:Literal]', '[educationLevel exactly 1]', '[gender exactly 1 GenderType]', '[size only rdfs:Literal]', '[dateOfBirth exactly 1 xsd:dateTime]', '[size exactly 1]']}\nGenerated CQs:", "output": "Is it required that a DemographicCharacteristicsRecord has exactly one propertyRestrictions relation? | Can a DemographicCharacteristicsRecord have more or fewer than one propertyRestrictions associated with it? | Does the ontology prevent DemographicCharacteristicsRecord from being linked to multiple propertyRestrictions? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protocol\nDescription: Protocol is a class representing a structured process or procedure, characterized by the following axioms:  \n- Every Protocol must be associated with exactly one date (of type xsd:dateTime).  \n- Every Protocol must have exactly one participant, and this participant must be a Person (no more, no less, and only of type Person).  \n- Each Protocol consists exclusively of steps that are instances of ProtocolStep.  \nThese restrictions ensure that each Protocol instance is uniquely defined by a single date, a single human participant, and a precise series of procedural steps.\nAxiom: {'propertyRestrictions': ['[protocolStep only ProtocolStep]', '[date exactly 1 xsd:dateTime]', '[hasParticipant exactly 1 Person]', '[hasParticipant only Person]', '[date only xsd:dateTime]', '[protocolStep some ProtocolStep]']}\nGenerated CQs:", "output": "Does every Protocol necessarily include at least one protocolStep that is an instance of ProtocolStep? | Is it a requirement for a Protocol to possess the property protocolStep relating to some ProtocolStep? | Can a Protocol exist without involving any protocolStep of type ProtocolStep? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: participates\nDescription: The property \"participates\" has no explicit domain or range restrictions and is a sub-property of \"owl:topObjectProperty.\" It does not have any characteristics such as functionality or symmetry. The property is the inverse of \"hasParticipant,\" meaning if an entity participates in something, that thing has the entity as a participant.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties 'participates' and 'hasParticipant' related within the ontology? | If individual X participates in event Y, does it follow that Y has participant X? | Which property in the ontology is specified as the inverse of 'participates'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDualTaskScore\nDescription: The property \"hasDualTaskScore\" does not specify explicit domain or range restrictions and has no defined characteristics. It is a sub-property of \"hasScore,\" indicating that it represents a specific kind of score, likely associated with dual-task performance. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every usage of the hasDualTaskScore property also classified under hasScore? | Which properties are recognized as subproperties of hasScore? | What are the superproperties of hasDualTaskScore within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasExperimentalDiagnosis\nDescription: The property \"hasExperimentalDiagnosis\" has no explicitly defined domain, range, or characteristics. It is a sub-property of \"hasDiagnosis,\" indicating that it represents a more specific form of diagnosis relationship within the ontology. No inverse property is specified. The lack of domain and range restrictions allows for flexible usage, but its naming suggests use for associating an entity with an experimental diagnosis.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasExperimentalDiagnosis considered a specific type of hasDiagnosis within the property hierarchy? | Which properties are defined as subproperties under hasDiagnosis? | Does the use of hasExperimentalDiagnosis in an assertion automatically entail the use of hasDiagnosis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stepLength\nDescription: The property \"stepLength\" is a data property with no explicitly defined domain or range, and no specified characteristics. It is a subproperty of owl:topDataProperty, indicating it is a general data property. There is no inverse property defined. This property is intended for representing the length of a step, but no further constraints are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is stepLength categorized under the general properties defined by owl:topDataProperty? | Which data properties are considered subproperties of owl:topDataProperty within the ontology? | Does assigning a value to stepLength also imply an assignment to owl:topDataProperty? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: verbalReactionSpontaneity\nDescription: The property \"verbalReactionSpontaneity\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No current textual description is provided. Its use should be interpreted in context, as there are no formal restrictions or relations specified in its axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the domain of the property 'verbalReactionSpontaneity'? | Is it correct that the property 'verbalReactionSpontaneity' does not have a specified range? | Can 'verbalReactionSpontaneity' relate to subjects of any type, given its domain is unspecified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containedInContext\nDescription: The property \"containedInContext\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. It is a generic property with no specified constraints, indicating its use and applicability are context-dependent and unconstrained by the current ontology axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there any restrictions on what can act as the range for 'containedInContext'? | Is it correct that 'containedInContext' has no specified domain? | Is it valid for the 'containedInContext' property to have no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: status\nDescription: The property \"status\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This suggests flexibility in its use, allowing it to relate any types of entities without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can appear as the range for the property 'status'? | Is it appropriate for the 'status' property to have no specified domain? | Is it correct that the property 'status' does not have a specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: measuredData\nDescription: The property \"measuredData\" has no specified domain, range, characteristics, super-properties, or inverse properties. It can be used to relate any two entities without restriction, as no additional constraints or descriptive information are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there any restrictions on what can be the subject of 'measuredData'? | What kinds of entities can be the domain of the 'measuredData' property? | Is it correct that the property 'measuredData' does not have a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containsAssessment\nDescription: The property \"containsAssessment\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is likely intended to associate an entity with an assessment, but its usage is not formally restricted by axioms. Additional details or constraints may be needed to clarify its precise application within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it accurate that 'containsAssessment' does not specify a domain? | Can the range of the 'containsAssessment' property be explicitly defined or restricted? | Is it correct that the property 'containsAssessment' does not have a specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDiagnosis\nDescription: The property \"hasDiagnosis\" has no explicitly defined characteristics, no specified domain or range restrictions, and is not declared as a sub-property of any other property. No inverse property is specified. This suggests that \"hasDiagnosis\" serves as a general relation, potentially linking individuals to their diagnoses without further formal constraints.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What kinds of entities can serve as the range for the property 'hasDiagnosis'? | Can entities outside any domain be linked using the property 'hasDiagnosis'? | Is it correct that the property 'hasDiagnosis' does not have a specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasScore\nDescription: The property \"hasScore\" has no defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is likely used to associate an entity with a numerical or evaluative score, but no formal restrictions or relationships are specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of values can be used as the range of the property 'hasScore'? | Is it correct that the property 'hasScore' does not specify a range? | Is it correct that the property 'hasScore' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dateOfBirth\nDescription: The property \"dateOfBirth\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Typically, it is intended to link an entity to its date of birth, although no formal constraints or relationships are currently specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'dateOfBirth' have a range other than those currently defined? | Is it correct that the property 'dateOfBirth' does not specify any domain? | What kinds of entities can have a 'dateOfBirth' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasMMSEScore\nDescription: The property \"hasMMSEScore\" has no explicitly defined characteristics, domain or range restrictions, super-properties, or inverse properties. Based on its name, it is intended to associate an entity with its MMSE (Mini-Mental State Examination) score.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the possible range for the property 'hasMMSEScore'? | Can 'hasMMSEScore' link to any type of entity, given that its range is unspecified? | Can 'hasMMSEScore' relate any type of subject, or is there a restriction on its domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: repetitions\nDescription: The property \"repetitions\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. Based on the current axioms, \"repetitions\" can relate any two entities without additional constraints or semantic specifications.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'repetitions' has no specified range? | What types of values can serve as the range for the property 'repetitions'? | What can be the domain of the property 'repetitions'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: iadl_e\nDescription: The property \"iadl_e\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional description is provided, and the property is not currently constrained by any axioms, indicating it is unspecified in its current form.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'iadl_e' be associated with any type of value as its range? | What classes or entities can serve as the range of the property 'iadl_e'? | What types of entities may serve as the domain for the property 'iadl_e'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: size\nDescription: The property \"size\" currently lacks explicit characteristics, domain, or range restrictions, and is not defined as a sub-property or inverse of any other property. This indicates that \"size\" is a general-purpose property intended to relate entities to their size attributes, but its specific usage and constraints are not currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can appear as the value of the 'size' property? | What can be the domain of the property 'size'? | Is it correct that the property 'size' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: protocolStep\nDescription: The property \"protocolStep\" does not have any explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of another property and has no declared inverse property. Its intended usage and semantics should be inferred from its name or surrounding context.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'protocolStep' be associated with subjects from any class, given its undefined domain? | What types of entities could serve as the domain for the property 'protocolStep'? | Can the property 'protocolStep' be associated with any object, given that it has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: countingType\nDescription: The property \"countingType\" has no explicitly defined characteristics, domain, or range restrictions. It does not have any specified super-properties or inverse properties. Its intended purpose must be inferred from its name, as no additional description or axioms are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it appropriate for the property 'countingType' to have no defined domain? | Is it correct that the property 'countingType' does not have a defined range? | What entities can serve as the domain for the property 'countingType'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: taskDuration\nDescription: The property \"taskDuration\" has no specified characteristics, domain, or range restrictions. It does not have defined super-properties or an inverse property. Its intended use should be inferred from its name, which suggests it relates to the duration associated with a task, but no explicit constraints are imposed by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'taskDuration' does not have any specified domain? | Can 'taskDuration' relate to entities of any type, given its lack of a defined range? | Is it correct that the property 'taskDuration' does not have a specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasParticipant\nDescription: The property \"hasParticipant\" has no specified domain, range, characteristics, super-properties, or inverse properties. This property can be used in a general manner to relate an entity to its participant(s) without restriction on the types of subjects or objects involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can anything be the value of the 'hasParticipant' property, or is there an implicit restriction? | Are there any entities that should not serve as the subject for the property 'hasParticipant'? | What types of entities can serve as the range for 'hasParticipant'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: distanceWalked\nDescription: The property \"distanceWalked\" has no explicitly defined characteristics, domain, or range restrictions. It does not inherit from any super-properties and has no specified inverse property. Its usage and semantics should be defined by the context or by further specification in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'distanceWalked' be associated with any type of value as its object, given that it has no specified range? | Is it correct that the 'distanceWalked' property does not have a defined range? | What kinds of entities can use the 'distanceWalked' property as their subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: laterality\nDescription: The property \"laterality\" has no explicitly specified domain, range, or characteristics, and does not inherit from any super-properties nor possess any inverse property. The purpose and usage of this property are not further detailed by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can be the range of the property 'laterality'? | Is it correct that 'laterality' has no specified range? | Is it correct that the property 'laterality' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: shortCognitiveBatteryAssessment\nDescription: The property \"shortCognitiveBatteryAssessment\" does not have any explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it likely represents a relation involving a brief cognitive battery assessment, but no formal constraints are specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'shortCognitiveBatteryAssessment' be associated with any type of value as its range? | Can 'shortCognitiveBatteryAssessment' relate to subjects outside of any specific class? | Is it accurate to state that 'shortCognitiveBatteryAssessment' does not have a specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: date\nDescription: The property \"date\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional descriptive information is provided, indicating that its use and relationships are unspecified in the current ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can serve as the domain for the property 'date'? | What types of values can be assigned to the property 'date'? | Is it correct that the property 'date' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" currently has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its intended use is likely to associate an entity with the point in time when an event or activity begins, but no formal restrictions or relationships are specified by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of values, if any, can be assigned as the range of 'startTime'? | Can 'startTime' be associated with any entities as its range, or is its range intentionally unspecified? | What kinds of subjects can the property 'startTime' be applied to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: endTime\nDescription: The property \"endTime\" has no defined domain, range, super-properties, or inverse properties, and no specific logical characteristics are assigned. This property is presumably intended to specify the endpoint or completion time of an event or process, but no ontological constraints or further documentation are currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'endTime' have a range assigned to it, and if so, what would it be? | Is it correct that the property 'endTime' has no specified range? | Can 'endTime' be used with any type of subject, or should its domain be restricted? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: before\nDescription: The property \"before\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This indicates that it represents a generic relation without specific constraints on the types of entities it connects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can serve as the domain for the property 'before'? | What types of entities can serve as the range for the property 'before'? | Can the property 'before' associate with ranges outside a particular class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: freeAndCuedRemindingAssessment\nDescription: The property \"freeAndCuedRemindingAssessment\" has no explicitly defined characteristics, domain, or range restrictions, and does not specify any super-properties or inverse properties. Its intended use and meaning should be clarified by additional documentation or context, as current axioms do not constrain its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it accurate that 'freeAndCuedRemindingAssessment' does not have a specified domain? | Can 'freeAndCuedRemindingAssessment' be used with any type of subject, or is its domain restricted? | What can be the domain of the property 'freeAndCuedRemindingAssessment'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: handTrajectory\nDescription: The property \"handTrajectory\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based solely on its name and lack of further restrictions, it can be inferred that this property is used to associate entities with information related to the movement or path of a hand, but its usage is not formally constrained within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can serve as the domain for the property 'handTrajectory'? | Is it correct that the property 'handTrajectory' does not specify a domain? | Is it valid for the property 'handTrajectory' to have no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: gender\nDescription: The property \"gender\" has no explicitly defined characteristics, domain, range, or hierarchy with other properties. There is no current description or axiomatic restriction, indicating that its usage context and value types are unspecified within the ontology. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'gender' relate to values other than a class or datatype? | What entities, if any, should be used as subjects with the 'gender' property? | Is it correct that the property 'gender' has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkingSpeedInstantaneous\nDescription: The property \"walkingSpeedInstantaneous\" has no specified characteristics, domain, or range restrictions, and is not defined as a sub-property or inverse of any other property. The property is expected to represent an entity's instantaneous walking speed, but lacks formal axiomatization to constrain or further describe its use.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the range of the property 'walkingSpeedInstantaneous'? | What kind of entities can be used as the subject for the property 'walkingSpeedInstantaneous'? | Is it correct that 'walkingSpeedInstantaneous' currently has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasUPDRSScore\nDescription: The property \"hasUPDRSScore\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to associate an entity with its Unified Parkinson's Disease Rating Scale (UPDRS) score, reflecting clinical assessments in Parkinson's disease. No further constraints or relationships are specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasUPDRSScore' does not have a defined domain? | Is it valid for 'hasUPDRSScore' to not restrict its range to a specific class? | Are there any specific types of subjects that must be associated with the property 'hasUPDRSScore'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dsm_ivDepressionCriteria\nDescription: The property \"dsm_ivDepressionCriteria\" has no explicitly defined characteristics, domain, or range constraints, and it is not specified as a sub-property of any other property nor does it have an inverse property. Based on its name, it is intended to relate an entity to the diagnostic criteria for depression as defined in DSM-IV, but this intended usage is not formally constrained by the provided axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'dsm_ivDepressionCriteria' have values outside of any defined range? | What entities, if any, are allowed as the range for 'dsm_ivDepressionCriteria'? | What are the possible domains for the property 'dsm_ivDepressionCriteria'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: latency\nDescription: The property \"latency\" has no explicitly specified characteristics, domain, or range constraints. It is not defined as a sub-property or inverse of any other property. The usage and applicable types for this property are unspecified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'latency' does not have any specified domain? | What types of values can appear as the range for the property 'latency'? | Is it appropriate that the property 'latency' currently has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: educationLevel\nDescription: The property \"educationLevel\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its use is not constrained to specific classes or value types, allowing for flexible application in the ontology. No further description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of values can be the range of the property 'educationLevel'? | Is it accurate that the property 'educationLevel' does not have a specified range? | Is it correct that the property educationLevel does not have an explicitly defined domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: npi\nDescription: The property \"npi\" has no specified characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and does not have any inverse properties. This indicates \"npi\" is a general property with no explicit structural or semantic constraints currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the domain of the property 'npi'? | What can be the range of the property 'npi'? | Is it appropriate for the property 'npi' to have no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stoppingDisplacement\nDescription: The property \"stoppingDisplacement\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No current description is provided. The intended use or semantics of this property should be specified for greater clarity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can entities outside any specific class use the property 'stoppingDisplacement' as their subject? | Does the property 'stoppingDisplacement' allow objects of any type as its range? | What can be the range of the property 'stoppingDisplacement'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: trailMakingTest\nDescription: The property \"trailMakingTest\" has no specified characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely used to associate an entity with a trail making test, but no further ontological constraints or relationships are defined for this property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can appear as the subject of the property 'trailMakingTest'? | Is it correct that the property 'trailMakingTest' does not have a defined domain? | Can any entity serve as the range for the 'trailMakingTest' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: involvesTask\nDescription: The property \"involvesTask\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property, nor does it have an inverse property. This indicates that \"involvesTask\" is a general property intended to relate entities to unspecified tasks, without formal constraints on the types of entities or tasks involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can any type of entity use 'involvesTask' as a property subject? | Is it correct that the property 'involvesTask' does not have a specified range? | What types of entities can serve as the range for the property 'involvesTask'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stressLevel\nDescription: The property \"stressLevel\" has no explicitly defined characteristics, domain, or range restrictions, nor any specified super-properties or inverse properties. Its intended purpose is not further described in the available axioms or documentation.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'stressLevel' does not have any specified domain? | Can 'stressLevel' be associated with any type of entity as its value? | Is it correct that the property 'stressLevel' currently has no specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dynamicBalance\nDescription: The property \"dynamicBalance\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate entities in the context of maintaining or evaluating balance under changing conditions, but no formal constraints or further documentation are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it appropriate for 'dynamicBalance' to lack a specified domain? | What entities are permitted to be subjects of the property 'dynamicBalance'? | Can the property 'dynamicBalance' have a domain other than what is currently specified (None)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasRecord\nDescription: The property \"hasRecord\" does not have explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is likely intended to associate an entity with a record, but no further semantic constraints are specified by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasRecord' does not specify a domain? | What types of entities can be the subject of the property 'hasRecord'? | Can anything be used as the range of 'hasRecord', or should its range be defined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: fabScore\nDescription: The property \"fabScore\" has no specified domain, range, characteristics, super-properties, or inverse properties. Its usage and constraints are not defined by axioms, indicating that it is a general property without ontology-imposed restrictions or semantic details.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can act as the domain for the 'fabScore' property? | Is it correct that the property 'fabScore' has no specified domain? | Does the property 'fabScore' have a range other than None? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkingSpeed\nDescription: The property \"walkingSpeed\" has no specified characteristics, domain, range, super-properties, or inverse properties. This property is likely intended to capture the walking speed of an entity, but no formal usage constraints or value types are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'walkingSpeed' be associated with any entity regardless of its type? | Is it correct that the property 'walkingSpeed' does not have a defined domain? | What types of entities can be used as the subject of the 'walkingSpeed' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: areasOfNoInterestExplored\nDescription: The property \"areasOfNoInterestExplored\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This suggests it is a general property without specified restrictions or relationships to other properties or classes.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['rdfs:Literal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'areasOfNoInterestExplored' have a range other than rdfs:Literal? | Is every value associated with 'areasOfNoInterestExplored' necessarily an rdfs:Literal? | What types of entities can be used as the value for the property 'areasOfNoInterestExplored'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: compliantInstructionsOrder\nDescription: The property \"compliantInstructionsOrder\" has no defined characteristics, domain, range, super-properties, or inverse properties. This indicates it is a generic property without specified constraints in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['xsd:boolean'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value used with the property 'compliantInstructionsOrder' required to be a boolean? | Could 'compliantInstructionsOrder' ever have a value that is not of type xsd:boolean? | What types of entities are permitted as the range for 'compliantInstructionsOrder'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: apathyInventory\nDescription: The property \"apathyInventory\" has no specified characteristics, domain, range, super-properties, or inverse properties. This indicates that it is a general property without defined constraints or hierarchical relationships in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topDataProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is apathyInventory classified as a data property within the ontology? | What superproperties does apathyInventory have according to the property hierarchy? | Which data properties are subsumed by owl:topDataProperty within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasMonoTaskScore\nDescription: The property \"hasMonoTaskScore\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its usage is unconstrained by axioms, making its intended purpose dependent on its contextual application within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasScore'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasScore the superproperty of hasMonoTaskScore? | Which properties are classified as subproperties under hasScore? | Does usage of hasMonoTaskScore always entail usage of hasScore? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: areasOfInterestExplored\nDescription: The property \"areasOfInterestExplored\" has no explicitly defined characteristics, domain, or range restrictions. It is not asserted as a sub-property of any other property, nor does it have an inverse property specified. This suggests it can be used flexibly to relate unspecified entities without additional logical constraints.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['rdfs:Literal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'areasOfInterestExplored' take any object other than a literal value? | Is every object associated with 'areasOfInterestExplored' necessarily an rdfs:Literal? | What types of values are permitted as the range for 'areasOfInterestExplored'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasClinicalDiagnosis\nDescription: The property \"hasClinicalDiagnosis\" does not have any specified characteristics, domain, or range constraints. It is not defined as a sub-property of any other property, nor does it have an inverse property. This general property can be used to relate entities to their clinical diagnosis without restrictions on the types of subjects or objects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasDiagnosis'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasClinicalDiagnosis a specific type of the hasDiagnosis property? | Which properties are considered subproperties of hasDiagnosis? | What superproperties are directly associated with hasClinicalDiagnosis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein-ligand docking\nDescription: Protein-ligand docking is a subclass of molecular docking, focused on modeling the binding interactions between proteins and ligands. It is formally restricted to topics involving protein interactions and must produce as output a protein-ligand complex. Methods in this class aim to predict both the position and orientation of a ligand when bound to a protein receptor or enzyme, utilizing comparative modeling or other computational techniques to model protein-ligand (e.g., protein-peptide) binding events.\nAxiom: {'subClassOf': ['Molecular docking'], 'propertyRestrictions': ['[has output some Protein-ligand complex]']}\nGenerated CQs:", "output": "Does every protein-ligand docking necessarily involve some aspect related to protein interactions? | Is it required that protein-ligand docking has a topic associated with protein interactions? | Does protein-ligand docking always pertain to a subject within the domain of protein interactions? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ensembl gene ID\nDescription: Ensembl gene ID is a subclass of both Gene ID and Ensembl ID, representing a unique identifier specifically assigned to a gene or related feature within the Ensembl database. This class is used to distinctly reference genetic loci in the Ensembl genome annotation system, ensuring unambiguous identification of genetic entities and facilitating cross-referencing between biological databases.\nAxiom: {'subClassOf': ['Gene ID']}\nGenerated CQs:", "output": "Is Ensembl gene ID classified under Ensembl ID? | Which instances are defined as specific types of Ensembl ID, such as Ensembl gene ID? | What broader identifiers encompass the Ensembl gene ID category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GeneR\nDescription: GeneR is defined as a subclass of software that is implemented in the R programming language. Members of this class are characterized by accepting multiple specified data input types: general data formatted as R data frames, gene lists with specific data format specifications, and data in FASTA format. These input constraints ensure that any instance of GeneR-typed software is capable of handling commonly used biological data formats, particularly those relevant for bioinformatics applications in R.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has specified data input some (data and [has format specification some R data frame])]', '[has specified data input some (Gene list and [has format specification some data format specification])]', '[is encoded in some R language]', '[has specified data input some (data and [has format specification some FASTA])]']}\nGenerated CQs:", "output": "Is GeneR categorized under the broader class of software? | What are the specific subclasses defined within the class of software, including GeneR? | To which upper-level classes does GeneR belong according to the hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: maCorrPlot\nDescription: maCorrPlot is a subclass of software designed for use in data visualization, background correction, and data normalization workflows. It requires data inputs specifically in mas5 or .rma formats, and its outputs include at least one Graph plot. maCorrPlot is implemented in the R language, and the authoritative source for this software is Bioconductor. This class formalizes the functional characteristics and technical restrictions of maCorrPlot, ensuring its application in specialized bioinformatic data analysis pipelines.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data output some Graph plot]', '[is encoded in some R language]', '[is published by hasValue Bioconductor]', '[is executed in some (data visualization and background correction and data normalization)]']}\nGenerated CQs:", "output": "Is it required that any specified data input for maCorrPlot has a format specification restricted exclusively to mas5 format or .rma format? | Can maCorrPlot accept a specified data input if its format specification is neither mas5 format nor .rma format? | Does the property restriction ensure that all specified data inputs for maCorrPlot must have a format specification only among mas5 format or .rma format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CRG Expresso Web Tool\nDescription: CRG Expresso Web Tool is defined as a subclass of TCoffee, with several specific characteristics. Individuals of this class are required to have documentation identified as ns6:gkl092 and provide at least one web user interface. They must utilize some version of the CRG TCoffee 9.02.r1228 software. Additionally, their outputs must result from a software publishing process in which the Centre for Genomic Regulation (CRG) of Barcelona is a participant. This class models web-based tools for TCoffee developed and documented by CRG, with online accessibility and provenance traceable to the institution.\nAxiom: {'subClassOf': ['TCoffee'], 'propertyRestrictions': ['[has documentation hasValue ns6:gkl092]', '[has interface some web user interface]', '[output of some (software publishing process and [has participant hasValue Centre for Genomic Regulation (CRG) of Barcelona])]']}\nGenerated CQs:", "output": "Is it required for the CRG Expresso Web Tool to utilize at least one instance of the CRG TCoffee 9.02.r1228 software? | Does every use of the CRG Expresso Web Tool involve employing the CRG TCoffee 9.02.r1228 as software? | Can the CRG Expresso Web Tool use software other than CRG TCoffee 9.02.r1228, or is use restricted to this version only? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Transcriptomics\nDescription: Transcriptomics is defined as a subclass of both Genomics and Gene expression, focusing on the comprehensive analysis of transcriptomes—the complete set of RNA molecules present in a given cell, tissue, or organism. This class encompasses topics and research related to measuring, analyzing, and interpreting gene expression at the RNA level, thereby linking the study of genetic material (genomics) with the actual molecular output (gene expression) observed in biological samples.\nAxiom: {'subClassOf': ['Gene expression']}\nGenerated CQs:", "output": "Is Transcriptomics classified within the hierarchy of Genomics? | What broader categories encompass Transcriptomics in the context of genomics research? | Which specialized fields are narrower in scope than Genomics, such as Transcriptomics? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: qpgraph\nDescription: qpgraph is a subclass of software that is specifically designed for use in descriptive statistical calculations, particularly those involving gene expression data as input. It outputs graph plots, with data formats specified as R data frames. qpgraph implements Pearson correlation estimators and AvgNRRs, and is encoded in the R programming language. This software is published by Bioconductor, ensuring its integration within the bioinformatics community.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some descriptive statistical calculation]', '[has specified data output some (Graph plot and [has format specification only R data frame])]', '[has specified data input some Gene expression data]', '[is encoded in some R language]', '[is published by hasValue Bioconductor]']}\nGenerated CQs:", "output": "Does every qpgraph have to implement at least one functionality that is both a Pearson correlation estimator and an AvgNRRs? | Is it required for qpgraph to employ methods that satisfy the criteria of both Pearson correlation estimator and AvgNRRs? | Can an entity be classified as qpgraph if it lacks an implementation comprising both Pearson correlation estimator and AvgNRRs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AtlasImage\nDescription: AtlasImage is defined as a subclass of software, specifically distinguished by being the output of at least one software publishing process in which Clontech Laboratories, Inc is a participant. This ensures that any instance of AtlasImage is software generated or published through such a process involving Clontech Laboratories, Inc.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[output of some (software publishing process and [has participant hasValue Clontech Laboratories, Inc])]']}\nGenerated CQs:", "output": "Is AtlasImage classified under the broader category of software? | Which specific entities are categorized as subclasses of software, such as AtlasImage? | To what higher-level categories does AtlasImage pertain within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: affypdnn\nDescription: affypdnn is defined as a subclass of software, with several specific characteristics. It operates on input that must be a text data set in the format of an R data frame, and it is encoded in the R programming language. The software produces output in the form of graph plots. Additionally, it is explicitly published by Bioconductor. These axioms collectively specify affypdnn as R-based software for producing graphical representations from structured text data sets, distributed via Bioconductor.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has specified data input some (Text data set and [has format specification some R data frame])]', '[is encoded in some R language]', '[has specified data output some Graph plot]', '[is published by hasValue Bioconductor]']}\nGenerated CQs:", "output": "Is affypdnn categorized as a type of software? | What other subclasses fall under software alongside affypdnn? | Which higher-level classes encompass affypdnn? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: rsbml\nDescription: rsbml is defined as a subclass of software, specifically characterized by several axioms. It must be executed through at least one of the following processes: parse or cross validation. The software is encoded in the R programming language and is published by Bioconductor. Regarding data interaction, rsbml takes as input data that is strictly formatted according to the SBML specification and produces output data formatted exclusively according to the XML specification. These axioms collectively ensure that any instance of rsbml adheres to these strict requirements concerning its function, implementation language, publisher, and I/O data format.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some (parse and cross validation)]', '[is published by hasValue Bioconductor]', '[has specified data input some [has format specification only SBML]]', '[has specified data output some [has format specification only XML]]']}\nGenerated CQs:", "output": "Is it required that every rsbml property restriction be encoded in at least one R language? | Can an rsbml property restriction exist without being encoded in any R language? | Does the ontology allow for multiple R languages to encode a single rsbml property restriction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Data retrieval\nDescription: Data retrieval is defined as a subclass of Query and retrieval, specifically focusing on retrieving an entry or part of an entry from a data resource that matches a supplied query. Every instance of Data retrieval requires an input that is an Identifier, such as an accession number or an indexed term. This process may involve obtaining primary data and annotations associated with the query. The class formalizes retrieval activities where a unique identifier or an indexed keyword is used to locate and access relevant data entries within a resource.\nAxiom: {'subClassOf': ['Query and retrieval'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Is it required that a Data retrieval instance has at least one 'has input' relationship to an Identifier? | Can a Data retrieval process exist without being associated with any Identifier through the 'has input' property? | Does Data retrieval necessarily involve input that is classified as an Identifier? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Raw microarray data\nDescription: Raw microarray data is a subclass of both Experimental measurement and Microarray hybridisation data. It refers to the unprocessed data generated from microarray experiments, as commonly found in formats like Affymetrix CEL or GPR files. This data typically adheres to MIAME compliance and captures the initial measurements resulting from hybridisation events in a microarray assay.\nAxiom: {'subClassOf': ['Experimental measurement']}\nGenerated CQs:", "output": "Is Raw microarray data classified under the broader category of Microarray hybridisation data? | Which specific data types fall under Microarray hybridisation data, such as Raw microarray data? | What are the parent categories for Raw microarray data within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Dotplot plotting\nDescription: Dotplot plotting is a subclass of Plotting, Sequence word comparison, and Sequence alignment visualisation, indicating its role in both visual representation and comparative analysis of biological sequences. Any Dotplot plotting process is characterized by producing some Dotplot as output. It specifically involves drawing a dotplot to visualize sequence similarities, which are identified through word-matching or character comparison techniques. This class formalizes visualization methods for interpreting sequence alignments using dotplots.\nAxiom: {'subClassOf': ['Plotting', 'Sequence alignment visualisation'], 'propertyRestrictions': ['[has output some Dotplot]']}\nGenerated CQs:", "output": "Does Dotplot plotting fall under the category of Sequence word comparison? | Which methods are classified under Sequence word comparison, such as Dotplot plotting? | What broader methodological class does Dotplot plotting belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Obsolete\nDescription: Obsolete is defined as a subclass of Development status, indicating it represents a specific developmental state. It is explicitly disjoint with Maintained, meaning an entity cannot simultaneously be classified as both Obsolete and Maintained. This ensures a clear distinction between entities that are no longer in active use or development (Obsolete) and those that continue to be supported or updated (Maintained).\nAxiom: {'subClassOf': ['Development status'], 'disjointWith': []}\nGenerated CQs:", "output": "What logical separation is asserted between Obsolete and Maintained entities in the ontology? | Is it permitted for a resource to be classified as both Obsolete and Maintained? | Which classes are declared as disjoint with Maintained in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein family report\nDescription: Protein family report is defined as a subclass of Protein report, focusing specifically on content whose topic concerns one or more protein families. It is formally characterized by the requirement that it pertains to, or discusses, some protein families. According to its current definition, it provides informative content on a specific protein family or related classification, encompassing groups of protein sequences or structures.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has topic some Protein families]']}\nGenerated CQs:", "output": "Is Protein report a broader category that encompasses Protein family report? | Which types of reports are classified under Protein report, including Protein family report? | To what higher-level categories does Protein family report belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CDF binary format\nDescription: CDF binary format is defined as a subclass of Binary format and is specifically published by Affymetrix. This class represents the binary variant of the CDF format; due to historical uncertainty about the format's original specification (ASCII or binary), this class has been clearly designated for the binary version, while a separate class (CDF ASCII format) exists for the ASCII variant.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[is published by hasValue Affymetrix]']}\nGenerated CQs:", "output": "Is CDF binary format categorized as a subclass of Binary format? | Which types are encompassed by the Binary format class, and does this include CDF binary format? | What are the broader format categories that include CDF binary format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: derivative software not allowed\nDescription: derivative software not allowed is defined as a subclass of Derivatives clause, and is explicitly disjoint with derivative software allowed. This means that any clause categorized under derivative software not allowed falls within the broader category of Derivatives clause, but cannot simultaneously be considered as allowing derivative software. This class formalizes the restriction that the creation or use of derivative software is not permitted under this clause.\nAxiom: {'subClassOf': ['Derivatives clause'], 'disjointWith': []}\nGenerated CQs:", "output": "What logical separation exists between 'derivative software not allowed' and 'derivative software allowed' within the ontology? | Is any software classified as both 'derivative software not allowed' and 'derivative software allowed'? | Which software permission classes are specifically declared as disjoint with 'derivative software allowed'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence Alignment and Modeling System\nDescription: Sequence Alignment and Modeling System is a subclass of software, characterized by its role in the context of multiple sequence alignment. Any instance of this class must be executed within at least one multiple sequence alignment process, reflecting its functional application in computational biology for aligning and modeling biological sequences.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[is executed in some multiple sequence alignment]']}\nGenerated CQs:", "output": "Is Sequence Alignment and Modeling System classified as a type of software? | What are the specialized systems categorized under software, such as Sequence Alignment and Modeling System? | Which broader classes include Sequence Alignment and Modeling System? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PubChem bioassay ID\nDescription: PubChem bioassay ID is a subclass of both Identifier (typed) and PubChem ID, indicating it is a specific type of identifier used within the PubChem resource. It is defined as the identifier assigned to an assay entry in the PubChem database, enabling unambiguous reference to bioassays curated by PubChem.\nAxiom: {'subClassOf': ['PubChem ID']}\nGenerated CQs:", "output": "Does PubChem bioassay ID represent a specialized form of Identifier (typed)? | Which identifiers encompass PubChem bioassay ID as a more specific type? | Under which higher-level identifier categories does PubChem bioassay ID fall? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Surface rendering\nDescription: Surface rendering is defined as a subclass of both Structure visualisation and Protein surface calculation. It involves calculating the positions of dots, each specified by three coordinates (x, y, z) and typically a color, which are homogeneously distributed over the surface of a molecule. This process aids in the visual representation and analysis of molecular surfaces.\nAxiom: {'subClassOf': ['Protein surface calculation']}\nGenerated CQs:", "output": "Is Surface rendering categorized under the broader class of Structure visualisation? | What are the specific subclasses encompassed by Structure visualisation such as Surface rendering? | Under which higher-level visualisation categories can Surface rendering be classified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Structural (3D) profile ID\nDescription: Structural (3D) profile ID is a subclass of both Identifier (typed) and Accession, representing identifiers or names specifically assigned to structural (3D) profiles or templates. Members of this class serve as identifiers for some Structural profile, such as those representing structures or structure alignments, ensuring unambiguous referencing within structural data repositories.\nAxiom: {'subClassOf': ['Accession'], 'propertyRestrictions': ['[is identifier of some Structural profile]']}\nGenerated CQs:", "output": "Is Structural (3D) profile ID categorized under the broader class of Identifier (typed)? | Which specific subclasses fall under Identifier (typed), including Structural (3D) profile ID? | What higher-level categories encompass Structural (3D) profile ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FreeBSD\nDescription: FreeBSD is defined as a subclass of software license and is compatible with both GNU GPL v2 and GNU GPL v3 licenses. This license includes several clauses: the requirement that source code must be available, that distribution must include notices, and that derivative software is permitted. These characteristics ensure that FreeBSD enables broad software reuse and distribution while maintaining attribution and allowing for the creation of derivative works.\nAxiom: {'subClassOf': ['software license'], 'propertyRestrictions': ['[is compatible license of some GNU GPL v2]', '[has clause some Source code available]', '[has clause some derivative software allowed]', '[is compatible license of some GNU GPL v3]']}\nGenerated CQs:", "output": "Is it required that every FreeBSD instance has at least one clause associated with a distribution that includes notices? | Can FreeBSD possess a clause if it is not linked to any distribution with notices? | Does FreeBSD necessarily have a relationship via ‘has clause’ to some distribution entity that contains notices? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Secondary structure comparison\nDescription: Secondary structure comparison is a subclass of Comparison, specifically focused on evaluating or comparing molecular secondary structures. It is defined by the property restriction that its topic involves some form of structure comparison. Members of this class are concerned with the comparative analysis of two or more molecular secondary structures, as indicated by its definition.\nAxiom: {'subClassOf': ['Comparison'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Must every instance of the secondary structure comparison propertyRestrictions involve the topic of structure comparison? | Is it necessary for secondary structure comparison propertyRestrictions to relate to at least one structure comparison topic? | Can a secondary structure comparison propertyRestriction exist without referencing the structure comparison topic? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: phyloXML\nDescription: phyloXML is a standardized XML-based file format specifically designed for representing phylogenetic trees, networks, and their associated data. It is defined as a subclass of both XML and \"Phylogenetic tree format (XML)\", situating it within the hierarchy of XML-based structured formats and explicitly identifying its domain focus on phylogenetics. This ensures that instances of phyloXML are recognized as conforming to general XML standards while also supporting specialized requirements for phylogenetic data representation.\nAxiom: {'subClassOf': ['XML']}\nGenerated CQs:", "output": "Is phyloXML a specialized instance of Phylogenetic tree format (XML)? | Which formats are encompassed by the category of Phylogenetic tree format (XML), including phyloXML? | What broader data format categories does phyloXML fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Query and retrieval\nDescription: Query and retrieval is a subclass of information processing that focuses on searching or querying data resources to retrieve entries or annotations. Members of this class produce some form of data as output and are concerned specifically with topics related to data search, query, and retrieval. This formalization ensures that any process classified under query and retrieval involves both the act of querying/searching and the acquisition of data or annotations from relevant data resources.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has output some data]', '[has topic some Data search, query and retrieval]']}\nGenerated CQs:", "output": "Does Query and retrieval fall under the broader classification of information processing? | Which specific categories are encompassed within information processing, including Query and retrieval? | What higher-level concepts include Query and retrieval as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LBE\nDescription: LBE is defined as a subclass of software specifically designed for execution within differential expression analysis workflows. LBE must be encoded in some R language and is required to implement the FDR (False Discovery Rate) method. It accepts as input gene expression datasets, which must conform to a specified data format. The outputs of LBE include (1) graphical plots, which are constrained to possess image format specifications, and (2) data outputs provided as R data frames. This class formalization highlights LBE's role as a specialized analytical software tool in genomics, with rigorous specifications for input formats, output formats, and methodological implementation.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is encoded in some R language]', \"[implements some 'FDR']\", '[has specified data output some (data and [has format specification some R data frame])]', '[is executed in some differential expression analysis]', '[has specified data input some (Gene expression dataset and [has format specification some data format specification])]']}\nGenerated CQs:", "output": "Is it required that an LBE propertyRestriction's specified data output includes both a Graph plot and at least one image format? | Must the specified data output produced by an LBE propertyRestriction combine a Graph plot with an output that conforms to some image format? | Does every LBE propertyRestriction ensure that its specified data output is composed of a Graph plot which is provided in some image format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence redundancy removal\nDescription: Sequence redundancy removal is defined as a subclass of Sequence comparison. This class includes processes that take two or more molecular sequences as input, compare them, and identify and remove redundant sequences based on specific criteria. According to its axioms, any instance of Sequence redundancy removal must have at least one output that is a Sequence.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has output some Sequence]']}\nGenerated CQs:", "output": "Does sequence redundancy removal fall under the broader category of sequence comparison? | What are the specific subclasses encompassed by sequence comparison, including sequence redundancy removal? | Which parent categories include sequence redundancy removal within their hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: dhf\nDescription: dhf is a subclass of both Textual format and Database hits (sequence) format. It represents a format for EMBASSY domain hits files (DHF), which store sequence hits that have domain classification information, specifically relating the hits to SCOP or CATH protein families as identified from sequence database searches. This format is used for capturing and conveying domain-related relationships identified through such searches.\nAxiom: {'subClassOf': ['Database hits (sequence) format']}\nGenerated CQs:", "output": "Is dhf classified as a type of Textual format? | Which specific formats are categorized under Textual format, such as dhf? | What broader categories encompass dhf within the hierarchy of formats? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Map\nDescription: Map is defined as a subclass of data, with the restriction that it must be associated with at least one instance of Mapping via the has topic property. It is described as a map of (typically one) DNA sequence annotated with positional or non-positional features, indicating that instances of this class function as representations of sequence data linked to mapping information.\nAxiom: {'subClassOf': ['data'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Is it required that every Map has at least one topic associated via the has topic property that is an instance of Mapping? | Can a Map exist that does not have the has topic property relating it to any Mapping? | Does the presence of a Mapping as a value for the has topic property qualify an entity as a Map? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence feature detection\nDescription: Sequence feature detection is a subclass of the obsolete concept in EDAM, as well as sequence analysis and prediction and recognition. It specifically concerns the detection of positional sequence features, such as functional and other key sites, within molecular sequences. Formally, this class includes topics related to sequence sites, features, and motifs (via the 'has topic' property), and is characterized by producing sequence features as output (via the 'has output' property). This ensures the class encompasses analysis methods that predict or recognize annotated features within sequences.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)', 'Prediction and recognition'], 'propertyRestrictions': ['[has topic some Sequence sites, features and motifs]', '[has output some Sequence features]']}\nGenerated CQs:", "output": "Is Sequence analysis a general category that encompasses Sequence feature detection? | What specific types of analyses fall under the umbrella of Sequence analysis, such as Sequence feature detection? | To which broader analytical categories does Sequence feature detection belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Restriction map\nDescription: Restriction map is defined as a subclass of both Sequence map and Sequence image, meaning it inherits characteristics of representing ordered features on a nucleic acid sequence and being a visual representation. A restriction map specifically depicts the locations of restriction enzyme cleavage sites (restriction sites) along a nucleic acid sequence, providing a visual overview of where enzymes cut within the sequence.\nAxiom: {'subClassOf': ['Sequence image']}\nGenerated CQs:", "output": "Does Restriction map fall under the classification of Sequence map? | Which map types are more specific than Sequence map, such as Restriction map? | What broader mapping categories include Restriction map as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Organism name\nDescription: Organism name is defined as a subclass of both Name and Organism identifier. It represents the name assigned to an organism or a group of organisms, serving as an identifier within biological contexts. This class formalizes organism names as entities that are both names and identifiers specific to organisms.\nAxiom: {'subClassOf': ['Name']}\nGenerated CQs:", "output": "Is Organism identifier a generalization of Organism name? | What identifiers encompass Organism name as a more specific instance? | Which classes are broader than Organism name, including Organism identifier? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Medline Display Format\nDescription: Medline Display Format is a type of textual and bibliographic reference format specifically designed for presenting abstracts and citation information from the Medline database. This format ensures that bibliographic reference information, including essential citation details, is systematically included for scientific articles indexed in Medline.\nAxiom: {'subClassOf': ['Bibliographic reference format']}\nGenerated CQs:", "output": "Is Medline Display Format categorized as a type of Textual format? | Which specific formats fall under the category of Textual format, including Medline Display Format? | What broader format classes does Medline Display Format belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pathway or network identifier\nDescription: Pathway or network identifier is a subclass of Identifier (typed) and is characterized by the property that it serves as an identifier for some Pathway or network. This class represents identifiers assigned to entries within databases cataloging biological pathways or networks. Any instance of this class functions specifically to uniquely reference a pathway or network entity.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[is identifier of some Pathway or network]']}\nGenerated CQs:", "output": "Is every Pathway or network identifier categorized under Identifier (typed)? | What identifiers exist as more specific types beneath Identifier (typed), including Pathway or network identifier? | To which higher-level identifier categories does Pathway or network identifier belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Database search\nDescription: Database search is a subclass of Query and retrieval, constrained such that it produces at least some Database search results as output. This class represents processes where a supplied query is compared against each entry in a database or data resource, returning those entries—or parts thereof—that are similar to the query. Typically, this involves identifying high-scoring matches, as exemplified by tasks like a BLAST search of a sequence database.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has output some Database search results]']}\nGenerated CQs:", "output": "Is Database search classified under Query and retrieval? | What specific types fall under Query and retrieval, including Database search? | Which broader categories encompass Database search? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: aaindex\nDescription: aaindex is defined as a subclass of both Textual format and Amino acid index format. It specifically refers to the amino acid index format utilized by the AAindex database, which is used to represent data about amino acid properties in a textual structure. This class ensures that any format identified as aaindex must inherit characteristics of textual formats for amino acid indices.\nAxiom: {'subClassOf': ['Textual format']}\nGenerated CQs:", "output": "Is aaindex classified as a more specific form of Amino acid index format? | Which formats fall under the category of Amino acid index format, such as aaindex? | What broader classes does aaindex belong to within the context of amino acid index representation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Affymetrix-compliant data\nDescription: Affymetrix-compliant data is defined as a subclass of data, and is equivalent to data that has some format specification which itself is a data format specification published by Affymetrix. This means any instance of Affymetrix-compliant data must be associated with at least one data format specification that is officially published by Affymetrix, ensuring adherence to the standards set by the organization.\nAxiom: {'subClassOf': ['data'], 'equivalentClass': []}\nGenerated CQs:", "output": "Is Affymetrix-compliant data defined as data that has a format specification which is published by Affymetrix? | Does Affymetrix-compliant data require at least one format specification that is both a data format specification and has Affymetrix as its publisher? | Is being Affymetrix-compliant equivalent to having a format specification that is simultaneously a data format specification and published by Affymetrix? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Book ID\nDescription: Book ID is defined as a subclass of both Identifier (typed) and Accession, representing a unique identifier assigned specifically to a book. This class ensures that each book instance can be distinctly referenced and accessed via its Book ID, supporting precise identification and management within collections or systems.\nAxiom: {'subClassOf': ['Accession']}\nGenerated CQs:", "output": "Is every Book ID classified under the broader group of Identifier? | What identifiers specifically fall under the category of Book ID? | Which superordinate classes does Book ID belong to in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 2bit\nDescription: 2bit is a binary format specifically designed for storing nucleotide sequences, utilizing 2 bits per nucleotide to enable compact representation. It is formally defined as a subclass of both Raw sequence format and Binary format. In addition to encoding standard nucleotide bases, the 2bit format allows for the representation of unknown nucleotides and supports lower-case masking to indicate regions of reduced confidence or biological relevance.\nAxiom: {'subClassOf': ['Binary format']}\nGenerated CQs:", "output": "Is 2bit categorized under the broader class of Raw sequence format? | Which data formats are specific types of Raw sequence format, including 2bit? | What general format classifications does 2bit inherit within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Structural variation\nDescription: Structural variation is defined as a subclass of both Genetic variation and Chromosomes, representing changes in the structure of chromosomes. This class encompasses various types of chromosomal alterations, including deletions, duplications, copy-number variants, insertions, inversions, and translocations. These variations can be either microscopic or submicroscopic, reflecting a broad spectrum of structural differences within chromosomes that contribute to genetic diversity.\nAxiom: {'subClassOf': ['Chromosomes']}\nGenerated CQs:", "output": "Is Structural variation categorized as a type of Genetic variation? | Which specific variations fall under the broader class of Genetic variation, including Structural variation? | What higher-level categories encompass Structural variation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Stock number\nDescription: Stock number is defined as a subclass of both Identifier (typed) and Accession, representing a specific type of typed identifier used for cataloguing. It is characterized as an identifier assigned to stock from a catalogue of biological resources, enabling precise identification and tracking of biological material in resource collections.\nAxiom: {'subClassOf': ['Accession']}\nGenerated CQs:", "output": "Does Stock number fall under the category of Identifier? | Which specific Identifier types include Stock number as a subclass? | What broader categories is Stock number classified under according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence similarity search\nDescription: Sequence similarity search is defined as a subclass of both Sequence comparison and Database search. It refers to the process of searching a sequence database to retrieve sequences that are similar to a given query sequence. This class links the computational method of comparing biological or other sequences with the practical task of searching databases, emphasizing the retrieval of similar sequences based on a defined similarity criterion.\nAxiom: {'subClassOf': ['Sequence comparison']}\nGenerated CQs:", "output": "Is Sequence similarity search classified under Database search within the ontology? | What specific search types are categorized as subclasses of Database search, including Sequence similarity search? | Which overarching classes encompass Sequence similarity search? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene name\nDescription: Gene name is defined as a subclass of both Name and Gene identifier. It refers to the name of a gene, typically assigned by a person or according to a specific naming scheme. Gene names are generally more intuitive and readable than gene symbols, may include whitespace, and are often used to identify similar genes across different species or to help derive gene symbols.\nAxiom: {'subClassOf': ['Name']}\nGenerated CQs:", "output": "Is Gene identifier a broader classification encompassing Gene name? | Which entities are categorized as more specific types under Gene identifier, such as Gene name? | To which higher-level categories does Gene name conceptually relate within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: metahdep\nDescription: metahdep is a subclass of software, characterized by several specific property restrictions. It implements at least one Bayesian Model and must be encoded in the R programming language. Additionally, metahdep is published exclusively by Bioconductor. In terms of data handling, it requires a gene expression dataset as input and produces graph plots as outputs, with these outputs specifically formatted as R data frames. This formalization ensures that any software classified as metahdep aligns with these ontological and technical specifications.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some Bayesian Model]', '[is encoded in some R language]', '[has specified data output some (Graph plot and [has format specification only R data frame])]', '[has specified data input some Gene expression dataset]']}\nGenerated CQs:", "output": "Is it necessary for a metahdep to be published exclusively by Bioconductor? | Does the property restriction on metahdep imply that Bioconductor must always be its publisher? | Can a metahdep be considered valid if it is published by any entity other than Bioconductor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: xls\nDescription: xls is defined as a subclass of both XML and Document format, indicating that it is a type of document format that utilizes XML technology. It specifically refers to the Microsoft Excel spreadsheet format, which is used for storing, organizing, and exchanging tabular data in Excel.\nAxiom: {'subClassOf': ['XML']}\nGenerated CQs:", "output": "Is xls classified under the broader group of Document format? | Which formats fall under the category of Document format, specifically including xls? | What broader format categories encompass xls as a type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylip character frequencies format\nDescription: Phylip character frequencies format is a subclass of both Textual format and Phylogenetic continuous quantitative character format. It is defined as a PHYLIP file format specifically intended to represent character frequency data within phylogenetic analyses. Members of this class are textual file formats designed to encode continuous quantitative character frequencies, supporting data exchange and processing in phylogenetic studies.\nAxiom: {'subClassOf': ['Phylogenetic continuous quantitative character format']}\nGenerated CQs:", "output": "Is Phylip character frequencies format classified under the broader group of Textual format? | Which formats are specified as subcategories of Textual format, including Phylip character frequencies format? | What higher-level categories encompass Phylip character frequencies format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NCBI taxonomy ID\nDescription: NCBI taxonomy ID is defined as a subclass of both Ontology concept ID and Organism accession. This class represents a stable, unique identifier assigned to each taxonomic group (such as species, family, order, or any other rank) in the NCBI taxonomy database. It provides a persistent and distinct reference for organisms within the taxonomy framework.\nAxiom: {'subClassOf': ['Organism accession']}\nGenerated CQs:", "output": "Is the NCBI taxonomy ID classified as a type of Ontology concept ID? | Which identifiers are subclasses of Ontology concept ID, including NCBI taxonomy ID? | What broader categories encompass the NCBI taxonomy ID as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MIRIAM data type name\nDescription: MIRIAM data type name is a subclass of Data resource definition name, representing the name of a data type sourced from the MIRIAM database. Additionally, each instance serves as an identifier for some Database metadata. This ensures that every MIRIAM data type name uniquely references metadata within a database context, as per the definition from MIRIAM.\nAxiom: {'subClassOf': ['Data resource definition name'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Does every MIRIAM data type name have the property 'is identifier of' with at least one Database metadata? | Is it necessary for a MIRIAM data type name to serve as an identifier for some Database metadata? | Can a MIRIAM data type name exist without being an identifier for any Database metadata? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DNDC\nDescription: DNDC is a subclass of software, specifically described as a Soil Chemistry Model. It is characterized by having both graphical user interface (GUI) and command-line interface (CLI) options for user interaction. The software is accessible online, with its homepage given as both ns15:dndc.html and http://www.dndc.sr.unh.edu/. DNDC requires as input data that conforms to a tab-delimited file format. The output of DNDC results from a software development process involving the University of New Hampshire as a participant. Furthermore, DNDC is used within the context of modelling.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has interface some graphical user interface]', '[has specified data input some (data and [has format specification some tab delimited file format])]', '[output of some (software development process and [has participant hasValue University of New Hampshire])]', '[has interface some command-line interface]', '[is executed in some modelling]', '[has website homepage hasValue http://www.dndc.sr.unh.edu/]']}\nGenerated CQs:", "output": "Must every instance of DNDC have the website homepage property set specifically to ns15:dndc.html? | Can the website homepage of a DNDC instance be assigned any value other than ns15:dndc.html? | Is ns15:dndc.html the exclusive value permitted for the website homepage property of DNDC? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Proteolytic digest\nDescription: Proteolytic digest is defined as a subclass of Sequence set (protein), where each instance is characterized by having some association with the topic of Proteomics. According to its description, a proteolytic digest consists of a protein sequence that has been cleaved into peptide fragments—either enzymatically or chemically—with known fragment masses. This class formalization ensures that any proteolytic digest is a specialized set of protein sequences relevant to studies or analyses in proteomics.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has topic some Proteomics]']}\nGenerated CQs:", "output": "Is Proteolytic digest classified under the broader category of Sequence set (protein)? | Which subclasses are encompassed by Sequence set (protein), including Proteolytic digest? | What general categories does Proteolytic digest fall under within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GIF\nDescription: GIF (Graphics Interchange Format) is a binary format and a type of raster image format. As a subclass of both 'Binary format' and 'raster image format', GIF files encode images in a way suitable for binary data storage and manipulation, and specifically for raster-based rendering. This class defines digital image files that use the GIF specification for encoding, widely recognized for supporting simple graphics and animations.\nAxiom: {'subClassOf': ['raster image format']}\nGenerated CQs:", "output": "Is GIF classified as a type of Binary format? | Which file formats are categorized under Binary format, including GIF? | What broader format categories does GIF fall under in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GeneticsDesign\nDescription: GeneticsDesign is a subclass of software, characterized by its input and output specifications and its implementation language. Specifically, any instance of GeneticsDesign must accept as input data that is in the form of an R data frame (with an associated format specification), produce as output a text data set (constrained to specified textual formats), and be encoded in the R programming language. This formalization ensures standardized interoperability and data handling within the class's defined domain.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data output some (Text data set and [has format specification some Textual format])]', '[has specified data input some (data and [has format specification some R data frame])]']}\nGenerated CQs:", "output": "Is every GeneticsDesign necessarily encoded in at least one instance of R language? | Can a GeneticsDesign exist without being encoded in R language? | Does the ontology require that each GeneticsDesign is linked to some R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: unambiguous sequence\nDescription: unambiguous sequence is a subclass of both Textual format and Raw sequence format. It represents a molecular sequence expressed using an alphabet that may include unknown positions but explicitly excludes any ambiguity characters. This ensures that while some sequence positions can be unspecified, there is no use of letters or codes that represent multiple possible residues or bases at a single position.\nAxiom: {'subClassOf': ['Raw sequence format']}\nGenerated CQs:", "output": "Is unambiguous sequence categorized under the broader class of Textual format? | Which types are directly more general than unambiguous sequence, specifically including Textual format? | What specific subcategories does Textual format encompass, such as unambiguous sequence? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: codata\nDescription: codata is defined as a subclass of both Textual format and Sequence record format (text), indicating that it is a text-based file format specifically designed for representing sequence records. It is referenced as the \"Codata entry format,\" meaning that its primary use is to encode and store sequence data in a structured text format, consistent with conventions of both its parent classes.\nAxiom: {'subClassOf': ['Textual format']}\nGenerated CQs:", "output": "Is codata a specialization of Sequence record format? | Which record formats are classified as types of Sequence record format, including codata? | What broader record format categories encompass codata? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: iHOP symbol\nDescription: iHOP symbol is defined as a unique identifier of a protein or gene used in the iHOP database. Formally, this class is a subclass of Gene ID, Identifier (hybrid), and Protein accession, indicating that any iHOP symbol instance can be considered a specialized identifier spanning gene and protein contexts. This class captures identifiers with hybrid characteristics, linking gene and protein entities within the iHOP database.\nAxiom: {'subClassOf': ['Identifier (hybrid)', 'Protein accession']}\nGenerated CQs:", "output": "Is iHOP symbol classified under the broader category of Gene ID? | Which identifiers are more specific classifications within Gene ID, such as iHOP symbol? | What general types does iHOP symbol fall under in the context of biological identifiers? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: unambiguous pure rna sequence\nDescription: unambiguous pure rna sequence is a subclass of both unambiguous pure and rna. Members of this class are defined as RNA sequences composed strictly of the characters A, C, G, and U, allowing for possible unknown positions but excluding any ambiguity or non-sequence characters. This ensures that all instances represent RNA sequences that are both unambiguous and free from characters outside the canonical RNA alphabet.\nAxiom: {'subClassOf': ['unambiguous pure']}\nGenerated CQs:", "output": "Is unambiguous pure rna sequence classified as a type of rna? | Which subclasses are found under rna, specifically including unambiguous pure rna sequence? | What are the parent classes that unambiguous pure rna sequence is associated with? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: process\nDescription: process is a class that is explicitly disjoint with 'Obsolete concept (EDAM)', meaning no individual can be simultaneously classified as both a process and an obsolete concept. This distinction ensures clarity in categorization by separating active processes from deprecated or outdated conceptual entities.\nAxiom: {'disjointWith': []}\nGenerated CQs:", "output": "Is there any overlap defined between process and Obsolete concept (EDAM) in the ontology? | Can an entity be simultaneously classified as both a process and an Obsolete concept (EDAM)? | Which concepts are declared as disjoint with process in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: spML\nDescription: spML is a standardized format, defined as a subclass of both XML and experiment annotation format, specifically designed for the description of proteomics sample processing methods excluding the use of gels, prior to mass spectrometric protein identification. The standardization is overseen by HUPO PSI PS, and beyond proteomics, spML may also be applicable in the context of metabolomics.\nAxiom: {'subClassOf': ['Experiment annotation format']}\nGenerated CQs:", "output": "Is spML classified as a more specific type of XML? | Which markup languages are categorized under XML, such as spML? | To what higher-level language categories does spML belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence file editing\nDescription: Sequence file editing is a subclass of both Sequence analysis and Sequence editing. It encompasses basic, non-analytical operations performed on sequence files or reports (potentially including sequence features). Such operations include concatenating files, removing or reordering sequences, and creating subsets or new sequence files. Sequence file editing does not include analytical transformations but is focused on managing and organizing sequence data within files.\nAxiom: {'subClassOf': ['Sequence analysis']}\nGenerated CQs:", "output": "Is Sequence file editing categorized under the broader class of Sequence editing? | Which editing processes are subtypes of Sequence editing, including Sequence file editing? | To which higher-level categories does Sequence file editing pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TraML\nDescription: TraML (Transition Markup Language) is a standardized format established by HUPO PSI MSS for representing mass spectrometry transitions. In the ontology, TraML is defined as a subclass of both XML and Mass spectrometry data format, situating it as a specialized XML-based data format specifically for encoding transition information within the mass spectrometry domain.\nAxiom: {'subClassOf': ['XML']}\nGenerated CQs:", "output": "Is TraML classified under the broader category of Mass spectrometry data format? | Which data formats are narrower in scope than Mass spectrometry data format, such as TraML? | What higher-level categories include TraML as a member format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein property calculation (from sequence)\nDescription: Protein property calculation (from sequence) is defined as a subclass of both Protein property calculation and Protein sequence analysis. This class encompasses methods that calculate or predict physical or chemical properties—specifically non-positional properties—of a protein by processing its molecular sequence. The class focuses on deriving such properties based solely on sequence analysis, enabling the assessment of overall protein characteristics without reference to specific positional residues.\nAxiom: {'subClassOf': ['Protein property calculation']}\nGenerated CQs:", "output": "Is Protein property calculation (from sequence) classified as a form of Protein sequence analysis? | Which analyses fall under Protein sequence analysis, including Protein property calculation (from sequence)? | To what higher-level analytical category does Protein property calculation (from sequence) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Clustal\nDescription: Clustal is defined as a subclass of software, specifically characterized by the requirement that it is executed in at least one multiple sequence alignment process. This formalization indicates that any instance of Clustal must play a role in the execution of multiple sequence alignment tasks, reflecting its intended use as an alignment software tool within bioinformatics applications.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Is Clustal required to be executed in at least one multiple sequence alignment? | Does the execution of Clustal always involve a multiple sequence alignment process? | Can Clustal exist without being executed in any multiple sequence alignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence composition plot\nDescription: Sequence composition plot is defined as a subclass of both Sequence composition report and Plot, indicating that it inherits characteristics of compositional analysis reports and graphical representations. It represents a plot visualizing the character or word composition or their frequency within a molecular sequence, serving as a graphical summary of sequence content.\nAxiom: {'subClassOf': ['Plot']}\nGenerated CQs:", "output": "Is Sequence composition plot classified as a type under Sequence composition report? | Which specific reports fall under Sequence composition report, such as Sequence composition plot? | Under which broader report categories is Sequence composition plot organized? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: newick\nDescription: newick is defined as a subclass of both Textual format and Phylogenetic tree format (text). It represents a specific text-based notation for encoding phylogenetic trees, commonly referred to as the Newick format. This formalization positions newick within the hierarchy of textual data formats, specifically those used to represent phylogenetic tree structures.\nAxiom: {'subClassOf': ['Phylogenetic tree format (text)']}\nGenerated CQs:", "output": "Does newick fall under the general category of Textual format? | Which formats are subclassified beneath Textual format, such as newick? | What broader classifications encompass newick as a specific type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: bigBed\nDescription: bigBed is a subclass of both Binary format and Sequence annotation track format, representing a file format used to store large-scale sequence annotation tracks. It is defined as a binary embodiment of the textual BED format, designed for efficient storage and access to extensive genomic annotation data.\nAxiom: {'subClassOf': ['Binary format']}\nGenerated CQs:", "output": "Is bigBed classified under the general category of Sequence annotation track format? | What formats are considered specializations of Sequence annotation track format, such as bigBed? | Which higher-level track format categories include bigBed as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ClustalW format\nDescription: ClustalW format is a type of textual format that is also classified as an alignment format (text), meaning it is intended for representing sequence alignments in a human-readable text form. It is specifically defined for aligned biological sequences, as described in its definition, and inherits structural properties from both the general category of textual formats and the more specific alignment formats.\nAxiom: {'subClassOf': ['Alignment format (text)']}\nGenerated CQs:", "output": "Is ClustalW format classified under the broader class of Textual format? | What specific formats are categorized as subtypes of Textual format, including ClustalW format? | To which higher-level categories is ClustalW format hierarchically related? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TreeCon format\nDescription: TreeCon format is a type of phylogenetic tree format represented in text form. It is defined as a subclass of both Textual format and Phylogenetic tree format (text). The TreeCon format is specifically used for representing phylogenetic trees in a textual notation.\nAxiom: {'subClassOf': ['Phylogenetic tree format (text)']}\nGenerated CQs:", "output": "Is TreeCon format considered a specialized kind of Textual format? | What are the different subtypes classified under Textual format, including TreeCon format? | Which broader formats encompass TreeCon format as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 'codelink'\nDescription: codelink is defined as a subclass of software, specifically characterized by several property restrictions. It operates on specified data inputs that are XML or text data sets, and produces outputs in the form of text data sets and graph plots. codelink implementations are encoded in the R programming language and are used for executing background correction, data normalization, descriptive statistical calculation, and differential expression analysis. This formal definition ensures that codelink refers to R-based software tools designed for advanced data processing and statistical analysis workflows with defined input and output requirements.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data input some (XML or Text data set)]', '[has specified data output some (Text data set and Graph plot)]', '[is executed in some (background correction and data normalization and descriptive statistical calculation and differential expression analysis)]']}\nGenerated CQs:", "output": "Is it required for every codelink to be associated with at least one encoding in the R language? | Can a codelink exist without being encoded in the R language? | Are all instances of codelink necessarily linked to some resource in the R programming language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence record format\nDescription: Sequence record format is defined as a subclass of Format (typed) and is used specifically for representing a molecular sequence record. By axiom, every Sequence record format must be a format of at least one Sequence record. This class formalizes data formats that encode and store molecular sequence records, capturing the structural and representational standards utilized in molecular sequence data management.\nAxiom: {'subClassOf': ['Format (typed)'], 'propertyRestrictions': []}\nGenerated CQs:", "output": "Is every sequence record format necessarily associated with at least one sequence record via the 'is format of' property? | Does the existence of the 'is format of' relation from a sequence record format imply the presence of a linked sequence record? | Can a sequence record format be valid without being the format of any sequence record? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein sequence (raw)\nDescription: Protein sequence (raw) is defined as a subclass of both Protein sequence and Raw sequence, representing protein sequences in their unprocessed, primary form. Members of this class are characterized by being a string of characters that encode the raw sequence of amino acids without any modifications or annotations. This definition reflects the unaltered, direct representation of protein data.\nAxiom: {'subClassOf': ['Protein sequence']}\nGenerated CQs:", "output": "Is Protein sequence (raw) classified under the broader group of Raw sequence? | What are the more specific types of Raw sequence, including Protein sequence (raw)? | To which higher-level categories does Protein sequence (raw) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid features (quadruplexes)\nDescription: Nucleic acid features (quadruplexes) is classified as a subclass of Obsolete concept (EDAM), indicating that it represents a concept that is no longer active or recommended for current use in the ontology. The class is defined as a report on quadruplex-forming motifs in a nucleotide sequence, highlighting its focus on sequence motifs capable of forming quadruplex structures.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which concepts fall under the category of Obsolete concept (EDAM), including Nucleic acid features (quadruplexes)? | What broader categories include Nucleic acid features (quadruplexes) in this ontology? | Is Nucleic acid features (quadruplexes) classified under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CpG island and isochores\nDescription: CpG island and isochores is defined as a subclass of Gene transcription features, focusing on CpG-rich regions—commonly referred to as isochores—within nucleotide sequences. These regions are characterized by a high frequency of CpG dinucleotides and play important roles in gene regulation and transcriptional processes. The class specifically encompasses features related to the presence and function of CpG-rich regions in genomic sequences.\nAxiom: {'subClassOf': ['Gene transcription features']}\nGenerated CQs:", "output": "Which subclasses are defined within Gene transcription features, such as CpG island and isochores? | Are CpG island and isochores included as specific types under Gene transcription features? | What higher-level categories encompass CpG island and isochores in the context of gene transcription? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Logit-t algorithm\nDescription: Logit-t algorithm is a subclass of algorithm, indicating that it inherits all general characteristics of algorithms. No further constraints or distinguishing axioms are provided, so its definition is currently limited to being a type of algorithm.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "What are the specialized subclasses included within algorithm, such as Logit-t algorithm? | Which types of algorithm encompass the Logit-t algorithm as a specific example? | Is Logit-t algorithm classified under the general category of algorithm? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Amino acid index (White-Wimley data)\nDescription: Amino acid index (White-Wimley data) is a subclass of Amino acid index, specifically representing experimental free energy values associated with water-interface and water-octanol transitions for amino acids. This class formalizes data characterizing the thermodynamic properties of amino acids as measured by the White-Wimley method.\nAxiom: {'subClassOf': ['Amino acid index']}\nGenerated CQs:", "output": "What are the higher-level categories associated with \"Amino acid index (White-Wimley data)\"? | Which specific indices fall under the broader class of \"Amino acid index\" and include \"Amino acid index (White-Wimley data)\"? | Is \"Amino acid index (White-Wimley data)\" classified under the category \"Amino acid index\"? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence database search (by sequence using global alignment-based methods)\nDescription: Sequence database search (by sequence using global alignment-based methods) is classified as a subclass of Obsolete concept (EDAM). This class encompasses search tools and processes that identify sequences similar to a query by applying global alignment-based methods, such as the Needleman and Wunsch algorithm. These approaches compare entire sequences to maximize overall alignment, and are considered outdated in the current ontology context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which general knowledge categories encompass Sequence database search (by sequence using global alignment-based methods)? | What are the more specific concepts classified within Obsolete concept (EDAM), for example, Sequence database search (by sequence using global alignment-based methods)? | Does Sequence database search (by sequence using global alignment-based methods) fall under the category of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Database search (by sequence)\nDescription: Database search (by sequence) is classified as a subclass of Obsolete concept (EDAM), indicating it is no longer in active use within the ontology. It refers to the process of screening one or more molecular sequences against a database to identify similarities between the query sequence and database entries. This class represents a type of analysis focused on sequence comparison for the purpose of finding related or homologous sequences.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Database search (by sequence) classified under the broader category of Obsolete concept (EDAM)? | What are the more specific concepts that fall within Obsolete concept (EDAM), including Database search (by sequence)? | Which obsolete concepts, as defined in EDAM, encompass Database search (by sequence)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 50-50 MANOVA algorithm\nDescription: 50-50 MANOVA algorithm is defined as a subclass of algorithm, indicating it is a specific type of computational method. While no further axioms or restrictions are provided, this class represents algorithms designed for multivariate analysis of variance (MANOVA) employing a 50-50 partitioning strategy or criterion within their procedure.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "What algorithms encompass the 50-50 MANOVA algorithm as their subclass? | Under which broader algorithmic categories can the 50-50 MANOVA algorithm be grouped? | Is the 50-50 MANOVA algorithm classified as a specific type of algorithm? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Job identifier\nDescription: Job identifier is defined as a subclass of Identifier (typed). It represents an identifier specifically assigned to a submitted job, uniquely distinguishing it within a system or workflow. This class inherits all characteristics of Identifier (typed), ensuring that each job identifier maintains the constraints and semantics of typed identifiers.\nAxiom: {'subClassOf': ['Identifier (typed)']}\nGenerated CQs:", "output": "Which broader classes encompass Job identifier within the Identifier hierarchy? | Is Job identifier classified as a more specific type of Identifier? | What specific kinds of Identifier include Job identifier in their classification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: JPEG 2000\nDescription: JPEG 2000 is a subclass of raster image format, indicating that it is a specific type of raster image format. This classification places JPEG 2000 within the hierarchy of digital image encoding formats that represent images as a grid of pixels.\nAxiom: {'subClassOf': ['raster image format']}\nGenerated CQs:", "output": "What broader categories is JPEG 2000 an instance or subclass of? | Which raster image format subclasses include JPEG 2000? | Is JPEG 2000 classified as a kind of raster image format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DNA transduction map\nDescription: DNA transduction map is defined as a subclass of Genetic map. It specifically refers to a gene map that illustrates the distances between loci by utilizing relative cotransduction frequencies. This means such maps provide information about the relative positions of genes based on the likelihood of their co-transfer during the process of genetic transduction.\nAxiom: {'subClassOf': ['Genetic map']}\nGenerated CQs:", "output": "Which genetic map subclasses exist, and does this include DNA transduction map? | What are the direct superclasses associated with DNA transduction map? | Is DNA transduction map categorized under Genetic map? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Article comparison\nDescription: Article comparison is a subclass of Comparison, defined as an activity that involves the comparison of two or more scientific articles. This class formalizes instances where scientific articles are systematically contrasted or evaluated with respect to each other.\nAxiom: {'subClassOf': ['Comparison']}\nGenerated CQs:", "output": "Which comparisons encompass subtypes such as Article comparison? | What broader concept does Article comparison fall under within the ontology? | Is Article comparison categorized as a more specific form of Comparison? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: obsolete_Microarray data\nDescription: obsolete_Microarray data is defined as a subclass of Obsolete concept (EDAM), indicating that it represents a concept that is no longer in active use or has been superseded within the ontology. As an obsolete class, individuals should no longer be assigned to this category, and usage is discouraged in favor of more current concepts.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader category encompasses obsolete_Microarray data in the ontology? | Which data types are specified as subclasses of Obsolete concept (EDAM)? | Is obsolete_Microarray data classified under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lognormal Normal with Modied Variance Model\nDescription: Lognormal Normal with Modified Variance Model is defined as a subclass of algorithm. This class represents a specific type of algorithm, and is formally categorized under the general class of algorithms. Further specialization or characteristics about its function, parameters, or use are not specified in the current axioms.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Is Lognormal Normal with Modied Variance Model categorized under algorithm? | Which types of algorithm include Lognormal Normal with Modied Variance Model as a specialization? | What broader classes encompass Lognormal Normal with Modied Variance Model within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid stitch profile\nDescription: Nucleic acid stitch profile is a subclass of Nucleic acid melting profile. It represents a diagrammatic or computational depiction of hybridized or double-stranded nucleic acids (such as DNA or DNA/RNA hybrids) showing partly melted conformations and their associated probabilities across a range of temperatures. The stitch profile captures detailed features such as location, size, probability, and fluctuations of possible loop openings at specific temperatures, providing insights into the thermal stability and dynamic structural transitions of nucleic acids.\nAxiom: {'subClassOf': ['Nucleic acid melting profile']}\nGenerated CQs:", "output": "To which higher-level profile classes does Nucleic acid stitch profile belong? | Which more specific profiles fall under the category of Nucleic acid melting profile? | Is Nucleic acid stitch profile categorized under the broader class of Nucleic acid melting profile? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Structure alignment report\nDescription: Structure alignment report is defined as a subclass of Report, serving as a broad data type used primarily as a placeholder for more specific report types. It represents an informative report detailing data derived from the alignment of molecular tertiary structures, providing insight into structural similarities or differences between molecules.\nAxiom: {'subClassOf': ['Report']}\nGenerated CQs:", "output": "Which types of reports encompass Structure alignment report as a specific kind? | What broader report categories is Structure alignment report associated with? | Does Structure alignment report fall under the general classification of Report? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: predictive modeling task\nDescription: predictive modeling task is defined as a subclass of data mining task. It involves learning a (probabilistic) predictive model from a dataset comprising pairs (d, c), where d represents the description (of type Td) and c is the class or target (of type Tc). The core objective is to learn a mapping, m :: Td → Tc, that accurately predicts the target value c from the description d. The quality of a predictive modeling task is measured by how closely the predicted target values (m(d)) match the actual observed target values in the dataset.\nAxiom: {'subClassOf': ['data mining task']}\nGenerated CQs:", "output": "What broader task categories is predictive modeling task associated with? | Does predictive modeling task fall under the classification of data mining task? | Which data mining task subclasses include predictive modeling task? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Interaction data\nDescription: Interaction data is defined as a subclass of data. It represents information specifically pertaining to interactions, thereby inheriting all characteristics of data while providing a more focused context on records or attributes related to interactive events or behaviors.\nAxiom: {'subClassOf': ['data']}\nGenerated CQs:", "output": "Which specific data subclasses include Interaction data? | What broader categories does Interaction data fall under within the data hierarchy? | Is Interaction data classified as a type of data? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Spectral analysis\nDescription: Spectral analysis is a subclass of Analysis and refers to the process of analyzing a spectrum generated from a mass spectrometry experiment or other types of experiments. This class encompasses methods and practices for interpreting spectral data to extract relevant information, and is formally categorized under the broader concept of Analysis.\nAxiom: {'subClassOf': ['Analysis']}\nGenerated CQs:", "output": "What general classes does Spectral analysis fall under within the classification of Analysis? | Is Spectral analysis recognized as a category within the broader concept of Analysis? | Which types of Analysis include Spectral analysis as a more specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChemSpider entry format\nDescription: ChemSpider entry format is defined as a subclass of Obsolete concept (EDAM). It refers to the format used for entries in ChemSpider, a database of chemical structures and property predictions. The classification under \"Obsolete concept\" indicates that this format is no longer in active use or recommended.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which specific formats are categorized under Obsolete concept (EDAM), such as ChemSpider entry format? | What broader conceptual groups encompass ChemSpider entry format according to the classification hierarchy? | Is ChemSpider entry format classified as a type of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Codon usage\nDescription: Codon usage is defined as a subclass of the obsolete concept in EDAM, indicating that it is no longer actively maintained. The class represents a broad data type concerning patterns in the use of codons, and currently serves as a placeholder for more specific types related to codon usage data.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is codon usage classified as an obsolete concept in the EDAM ontology? | What concepts are categorized under the obsolete concept class in EDAM, including codon usage? | Which broader classes does codon usage belong to within the EDAM ontology structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Plasmid map drawing\nDescription: Plasmid map drawing is defined as a subclass of map drawing, specifically focused on the creation of circular maps depicting DNA structures, such as plasmids. This class encompasses graphical representations that illustrate the features, genes, and elements present on plasmid DNA, ensuring their visualization aligns with the broader category of map drawings.\nAxiom: {'subClassOf': ['Map drawing']}\nGenerated CQs:", "output": "Is plasmid map drawing classified under the broader category of map drawing? | Which types of map drawing include plasmid map drawing as a specific instance? | What are the parent categories of plasmid map drawing? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EMBOSS supermatcher error file\nDescription: EMBOSS supermatcher error file is categorized as an obsolete concept (EDAM ontology), indicating it is no longer in active use. It specifically refers to error files generated by the EMBOSS (EMBASSY) supermatcher tool.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is EMBOSS supermatcher error file classified under the broader concept of Obsolete concept (EDAM)? | What higher-level concepts encompass EMBOSS supermatcher error file within the ontology? | Which entities are specified as subclasses of Obsolete concept (EDAM), such as EMBOSS supermatcher error file? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence database name\nDescription: Sequence database name is defined as a subclass of Obsolete concept (EDAM), indicating that it represents a concept no longer in active use. The class refers to the name assigned to a molecular sequence database, specifying the designation or title under which such a database is identified. This definition clarifies that instances of this class are used to denote the names of molecular sequence databases but are considered obsolete within the ontology context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which specific concepts are contained within the category Obsolete concept (EDAM), including Sequence database name? | Is Sequence database name classified under the broader concept of Obsolete concept (EDAM)? | To which higher-level classes does Sequence database name belong within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Trauma medicine\nDescription: Trauma medicine is a subclass of Medicine, specifically focused on the treatment of bodily wounds or shock resulting from sudden physical injuries such as those caused by violence or accidents. This class encompasses the medical knowledge and practices involved in the immediate assessment, management, and care of trauma patients.\nAxiom: {'subClassOf': ['Medicine']}\nGenerated CQs:", "output": "Which medical specialties fall under the category of Medicine, including Trauma medicine? | What general medical domains encompass Trauma medicine? | Is Trauma medicine classified under the broader category of Medicine? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DTD\nDescription: DTD is a subclass of Obsolete concept (EDAM) and represents a document type definition (DTD). This class denotes a concept that is considered obsolete within the ontology. DTD is defined as a specification that describes the structure and permissible content of an XML document.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is DTD categorized under the broader concept of Obsolete concept (EDAM)? | Which concepts are classified as more specific instances of Obsolete concept (EDAM), such as DTD? | What higher-level classifications does DTD fall under in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: G protein-coupled receptors (GPCR)\nDescription: G protein-coupled receptors (GPCR) are defined as a subclass of Obsolete concept (EDAM). This class covers the topic of G-protein coupled receptors (GPCRs), as specified in its definition. Classification as an obsolete concept indicates that this class is no longer in active use or has been superseded within the ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which entities are categorized as specializations of Obsolete concept (EDAM), including G protein-coupled receptors (GPCR)? | Are G protein-coupled receptors (GPCR) classified under the obsolete concepts in EDAM ontology? | What broader categories encompass G protein-coupled receptors (GPCR) within the EDAM framework? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: geneseq\nDescription: geneseq is defined as a subclass of EMBL-like (text), indicating that it inherits the foundational characteristics of EMBL-like sequence formats. The class represents data in the Geneseq sequence format, serving as a specific variant or instance within the broader category of EMBL-like text formats.\nAxiom: {'subClassOf': ['EMBL-like (text)']}\nGenerated CQs:", "output": "Is geneseq categorized as a type of EMBL-like? | Which sequence types are narrower classifications under EMBL-like, such as geneseq? | What broader sequence categories encompass geneseq? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Molecular similarity score\nDescription: Molecular similarity score is defined as a subclass of Obsolete concept (EDAM). It refers to a score that quantifies the structural similarities between two molecules. This class represents outdated or deprecated concepts within the ontology context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are the more specific concepts classified beneath Obsolete concept (EDAM), such as Molecular similarity score? | Does Molecular similarity score fall under the category of Obsolete concept (EDAM)? | Which broader categories encompass Molecular similarity score within the EDAM ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: graphical user interface\nDescription: graphical user interface is defined as a subclass of software interface. This means every graphical user interface is a type of software interface, distinguished by its focus on visual elements for user interaction such as windows, icons, and menus, as opposed to purely text-based interfaces.\nAxiom: {'subClassOf': ['software interface']}\nGenerated CQs:", "output": "What higher-level categories encompass graphical user interface? | Which interfaces are specialized types of software interface, such as graphical user interface? | Is graphical user interface classified under the broader category of software interface? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Article report\nDescription: Article report is a subclass of Obsolete concept (EDAM). It refers to data derived from the analysis of a scientific text, such as a full-text article from a scientific journal. This classification indicates that the \"Article report\" concept is considered obsolete within the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Article report classified under the broader category of Obsolete concept (EDAM)? | Which specific concepts fall under Obsolete concept (EDAM), including Article report? | What more general concepts encompass Article report within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GenePix Pro 3\nDescription: GenePix Pro 3 is defined as a subclass of GenePix Pro. This means that every instance of GenePix Pro 3 is also an instance of GenePix Pro, inheriting all characteristics and constraints of the parent class. There are no additional distinguishing axioms or restrictions specified for this class beyond its hierarchical classification.\nAxiom: {'subClassOf': ['GenePix Pro']}\nGenerated CQs:", "output": "Is GenePix Pro 3 categorized as a type of GenePix Pro? | What broader categories does GenePix Pro 3 fall under in the classification hierarchy? | Which software types are classified under GenePix Pro, including GenePix Pro 3? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lipids\nDescription: Lipids is defined as a subclass of Biochemistry, formally situating it within the domain of biochemical studies. The class concerns lipids and their structures, encompassing topics related to the molecular composition, properties, and functions of lipids within biological systems.\nAxiom: {'subClassOf': ['Biochemistry']}\nGenerated CQs:", "output": "What higher-level categories include lipids in their classification hierarchy? | Which entities are more specific subcategories under biochemistry, such as lipids? | Are lipids encompassed within the broader classification of biochemistry? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Complex Estimation Algorithm\nDescription: Complex Estimation Algorithm is defined as a subclass of algorithm. This means that every complex estimation algorithm is an algorithm, inheriting all general properties applicable to algorithms, while also indicating a specialization focused on complex estimation tasks. No additional axioms or property restrictions are specified.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Is Complex Estimation Algorithm categorized under the broader class of algorithm? | What types fall under the classification of algorithm, including Complex Estimation Algorithm? | Which more abstract groupings does Complex Estimation Algorithm belong to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene features (exonic splicing enhancer)\nDescription: Gene features (exonic splicing enhancer) is defined as a subclass of Obsolete concept (EDAM), indicating that this concept is no longer in active use within the ontology. It refers to a report on exonic splicing enhancers (ESE) within an exon, documenting regions that promote the inclusion of exons during RNA splicing. The classification as obsolete suggests that researchers should refer to more current terms or concepts for this topic.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader categories encompass exonic splicing enhancer within the EDAM classification? | Is exonic splicing enhancer classified as an obsolete concept in EDAM? | Which gene features are designated as obsolete concepts according to EDAM? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cell biology\nDescription: Cell biology is a subclass of Biology, focusing on the study of cells. This class encompasses topics related to cells, including key genes and proteins involved in the cell cycle. It serves to address the molecular and functional aspects of cells within the broader context of biological sciences.\nAxiom: {'subClassOf': ['Biology']}\nGenerated CQs:", "output": "What specialized fields are classified as subtypes of Biology, such as Cell biology? | Which higher-level domains encompass Cell biology within their classification hierarchy? | Is Cell biology categorized under the broader discipline of Biology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence alignment (nucleic acid)\nDescription: Sequence alignment (nucleic acid) is a subclass of Sequence alignment, specifically referring to the alignment of multiple nucleotide sequences. This class captures the process by which two or more nucleic acid (DNA or RNA) sequences are arranged to identify regions of similarity, which may indicate functional, structural, or evolutionary relationships.\nAxiom: {'subClassOf': ['Sequence alignment']}\nGenerated CQs:", "output": "Which hierarchical parent classes is Sequence alignment (nucleic acid) associated with? | Is Sequence alignment (nucleic acid) classified under the broader category of Sequence alignment? | What specific types fall under Sequence alignment, and does this include Sequence alignment (nucleic acid)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence length range\nDescription: Sequence length range is a subclass of Obsolete concept (EDAM). It represents the specification of range(s) of length of sequences. This class is considered obsolete within the ontology, and its primary purpose was to define limits or intervals for the lengths that sequences can have.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are the more specific subclasses represented under Obsolete concept (EDAM), such as Sequence length range? | Is Sequence length range classified as a kind of Obsolete concept (EDAM)? | Which categories encompass Sequence length range, specifically considering its relationship to Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FACS data\nDescription: FACS data is defined as a subclass of data. This means that any instance of FACS data is categorized as data, with no additional constraints or distinguishing properties specified by the current axiom.\nAxiom: {'subClassOf': ['data']}\nGenerated CQs:", "output": "What broader data classifications does FACS data fall under? | Which data subtypes encompass FACS data as a more specialized instance? | Is FACS data recognized as a specific type under the general category of data? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: dynamic Bayesian network model\nDescription: dynamic Bayesian network model is defined as a subclass of Bayesian Model. This means every dynamic Bayesian network model is, by definition, a type of Bayesian Model, inheriting all its fundamental properties and characteristics. This class typically represents Bayesian models that allow for temporal or sequential representation of probabilistic dependencies, suitable for modeling dynamic systems where variables evolve over time.\nAxiom: {'subClassOf': ['Bayesian Model']}\nGenerated CQs:", "output": "Is dynamic Bayesian network model classified as a type of Bayesian Model? | Which models are categorized under Bayesian Model, including dynamic Bayesian network model? | What broader modeling categories encompass dynamic Bayesian network model? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Atomic x coordinate\nDescription: Atomic x coordinate is a subclass of Atomic coordinate that specifically represents the Cartesian x coordinate of an atom within a molecular structure. This class is used to denote the x-axis spatial position of an atom, distinguishing it from other possible spatial coordinates in molecular data.\nAxiom: {'subClassOf': ['Atomic coordinate']}\nGenerated CQs:", "output": "Which specific subtypes fall within Atomic coordinate, such as Atomic x coordinate? | What are the hierarchical parent classes of Atomic x coordinate? | Is Atomic x coordinate classified under the broader category of Atomic coordinate? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Northern blot experiment\nDescription: Northern blot experiment is defined as a subclass of Proteomics experiment. It concerns the investigation and analysis techniques used in Northern Blot experiments, which typically involve the detection and study of RNA molecules. This class is used to capture information, protocols, or procedures specifically related to Northern Blot experimental methods under the broader category of proteomics research.\nAxiom: {'subClassOf': ['Proteomics experiment']}\nGenerated CQs:", "output": "Is Northern blot experiment a specialized form of Proteomics experiment? | Does the category of Proteomics experiment include more specific experiments such as Northern blot experiment? | Which experiments fall under the class of Proteomics experiment, including Northern blot experiment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ensembl ID ('Danio rerio')\nDescription: Ensembl ID ('Danio rerio') is defined as a subclass of 'Obsolete concept (EDAM)'. It represents the identifier assigned to an entry—such as an exon, gene, transcript, or protein—in the Ensembl 'core' database for the 'Danio rerio' (zebrafish) division. This class specifies identifiers that are considered obsolete within the EDAM ontology context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What parent classes are defined for Ensembl ID ('Danio rerio') within the ontology? | Is Ensembl ID ('Danio rerio') categorized under the broader class of Obsolete concept (EDAM)? | Which identifiers are classified as subclasses of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: System metadata\nDescription: System metadata is defined as a subclass of Resource metadata. It specifically encompasses metadata that pertains to software, hardware, or other aspects of a computer system, distinguishing it from broader resource metadata by its focus on computer system components and their characteristics.\nAxiom: {'subClassOf': ['Resource metadata']}\nGenerated CQs:", "output": "Which types of metadata are included within the category of Resource metadata? | What broader metadata categories encompass System metadata? | Is System metadata categorized under Resource metadata? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EMBL accession\nDescription: EMBL accession is defined as a subclass of EMBL/GenBank/DDBJ ID, which means it is a specific type of sequence identifier within the broader INSDC (International Nucleotide Sequence Database Collaboration) context. Members of this class are accession numbers assigned to entries in the EMBL sequence database, serving as unique identifiers for nucleotide sequence records within EMBL.\nAxiom: {'subClassOf': ['EMBL/GenBank/DDBJ ID']}\nGenerated CQs:", "output": "Is every EMBL accession classified as an EMBL/GenBank/DDBJ ID? | What are the direct superclass categories for EMBL accession? | Which identifiers are specified as subclasses under EMBL/GenBank/DDBJ ID, such as EMBL accession? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene regulatory network processing\nDescription: Gene regulatory network processing is defined as a subclass of Obsolete concept (EDAM). It refers to processes that read and/or write networks of gene regulation. As an obsolete concept, its use is deprecated in favor of more current or accurate terms, but historically it represented the computational handling or manipulation of gene regulatory networks.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What higher-level classifications does gene regulatory network processing fall under? | Which concepts are classified as specializations of obsolete concept (EDAM), including gene regulatory network processing? | Is gene regulatory network processing categorized under obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: web user interface\nDescription: web user interface is defined as a subclass of graphical user interface, indicating that it inherits all properties and characteristics of graphical user interfaces. This class encompasses user interfaces accessed through web technologies, typically rendered in web browsers, and facilitates user interaction with software applications over the internet or an intranet.\nAxiom: {'subClassOf': ['graphical user interface']}\nGenerated CQs:", "output": "Which interfaces fall under the category of graphical user interface, such as web user interface? | Is web user interface classified as a type of graphical user interface? | What broader categories encompass web user interface? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid features report (expression signal)\nDescription: Nucleic acid features report (expression signal) is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer maintained or recommended for use. This class concerns regions within a nucleic acid sequence that contain a signal which alters a biological function, capturing sequence features relevant to changes in gene expression or functional activity.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Nucleic acid features report (expression signal) classified as a more specific concept under Obsolete concept (EDAM)? | What specialized types are listed within Obsolete concept (EDAM), including Nucleic acid features report (expression signal)? | Which broader groups encompass Nucleic acid features report (expression signal)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NONMEM data format\nDescription: NONMEM data format is a subclass of data format specification. It represents a specific data format standard used primarily for the input and handling of pharmacometric and population modeling data in NONMEM software. This class encapsulates all data structure requirements and constraints defined for compliant data interchange within NONMEM workflows.\nAxiom: {'subClassOf': ['data format specification']}\nGenerated CQs:", "output": "Is NONMEM data format categorized under data format specification? | Which data format specifications encompass more specific types such as NONMEM data format? | What are the superclass categories to which NONMEM data format belongs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein structure raw data\nDescription: Protein structure raw data is defined as a subclass of Experimental measurement. It represents raw data obtained from experimental methods used to determine protein structure. This class serves as a broad, placeholder data type, primarily intended to facilitate navigation within EDAM, rather than for direct annotation.\nAxiom: {'subClassOf': ['Experimental measurement']}\nGenerated CQs:", "output": "Which subtypes are encompassed within Experimental measurement, specifically including Protein structure raw data? | Is Protein structure raw data classified as a more specific type under Experimental measurement? | To which higher-level categories does Protein structure raw data pertain within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ASCII format\nDescription: ASCII format is defined as a subclass of plain text file format. This means that any instance of ASCII format is also a plain text file format, characterized by storing data as unformatted text using the ASCII character encoding standard. The definition ensures that ASCII format files are recognized specifically as plain text representations, inheriting all properties of plain text file formats.\nAxiom: {'subClassOf': ['plain text file format']}\nGenerated CQs:", "output": "Which file formats are subclasses within the plain text file format category, including ASCII format? | Is ASCII format categorized as a more specific type under plain text file format? | What broader file format categories does ASCII format fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogeny\nDescription: Phylogeny is defined as a subclass of Evolutionary biology, focusing on the study of evolutionary relationships among organisms. This class encompasses diverse phylogenetic methods, including the construction of phylogenetic trees from molecular sequence or morphological data, simulation of DNA sequence evolution, estimation or use of molecular clock and stratigraphic (age) data, and techniques for studying gene evolution. These methods collectively facilitate the analysis and inference of evolutionary patterns and relationships within and across species.\nAxiom: {'subClassOf': ['Evolutionary biology']}\nGenerated CQs:", "output": "Is Phylogeny categorized under the broader domain of Evolutionary biology? | What higher-level disciplines encompass Phylogeny within their scope? | Which fields are classified as subtypes of Evolutionary biology, such as Phylogeny? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: database creation\nDescription: database creation is classified as a subclass of information processing, meaning it represents a specific type of process involved in the handling or manipulation of information. Individuals of this class are characterized as activities or operations whose primary function is to establish or generate databases as part of broader information processing tasks.\nAxiom: {'subClassOf': ['information processing']}\nGenerated CQs:", "output": "What specific processes are included under information processing, such as database creation? | Is database creation classified as a form of information processing? | Which broader categories encompass database creation within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Amino acid name (single letter)\nDescription: Amino acid name (single letter) is defined as a subclass of Amino acid name. It represents a single-letter identifier used to denote amino acids, for example, \"G\" for glycine. This class is used to capture the standardized single-character codes assigned to specific amino acids.\nAxiom: {'subClassOf': ['Amino acid name']}\nGenerated CQs:", "output": "Does the single-letter amino acid name fall under the broader category of amino acid name? | To which higher-level groups is the single-letter amino acid name associated within the ontology? | Which specific designations are recognized as subclasses of amino acid name, including the single-letter representation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: raster image format\nDescription: raster image format is defined as a subclass of image format. This means every raster image format is an image format, but not all image formats are raster. Members of this class represent image formats in which images are composed of a grid of pixels, as opposed to formats based on vectors or other representations.\nAxiom: {'subClassOf': ['image format']}\nGenerated CQs:", "output": "Is raster image format encompassed within the broader classification of image format? | Which types of image format specifically include raster image format as a subclass? | What general format categories does raster image format fall under according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence alignment type\nDescription: Sequence alignment type is a subclass of Obsolete concept (EDAM). It represents a label or text token used to describe the type of a sequence alignment. Possible values encompass various alignment categories, such as those defined by EMBOSS and BLAST. This class captures the categorization of sequence alignments based on their methodological or functional characteristics.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which specific concepts are defined as subclasses of Obsolete concept (EDAM), such as Sequence alignment type? | What broader category encompasses Sequence alignment type according to the ontology? | Is Sequence alignment type categorized under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ensembl ID (Homo sapiens)\nDescription: Ensembl ID (Homo sapiens) is defined as a subclass of Obsolete concept (EDAM), indicating that it represents an outdated or deprecated notion within the ontology. It refers specifically to identifiers assigned to entries such as exons, genes, transcripts, or proteins within the Homo sapiens division of the Ensembl 'core' database. This class is intended for referencing unique identifiers for human genomic entities as catalogued in Ensembl, but it is marked as obsolete within the current ontology structure.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What parent categories include Ensembl ID (Homo sapiens) within the ontology? | Which concepts are more specific than Obsolete concept (EDAM), such as Ensembl ID (Homo sapiens)? | Is Ensembl ID (Homo sapiens) categorized under the broader group Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GO (molecular function)\nDescription: GO (molecular function) is classified as a subclass of Obsolete concept (EDAM), indicating it is no longer in active use within the ontology framework. It represents an enumerated string data type that provides a term definition for a molecular function from the Gene Ontology (GO). This class captures definitions associated with molecular functional terms, but is considered obsolete for current applications.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is molecular function classified under the category of Obsolete concept (EDAM)? | Which concepts are more specific subclasses within Obsolete concept (EDAM), including molecular function? | To which higher-level categories does molecular function, as represented by GO, belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (ZFIN)\nDescription: Gene ID (ZFIN) is defined as a subclass of Gene ID and represents an identifier specifically assigned to a gene in the Zebrafish Information Network (ZFIN) genome database. This class is intended to uniquely reference zebrafish genes within the context of ZFIN, ensuring clear identification and integration with the ZFIN resource.\nAxiom: {'subClassOf': ['Gene ID']}\nGenerated CQs:", "output": "Is every Gene ID (ZFIN) instance included under the broader Gene ID category? | What hierarchical categories does Gene ID (ZFIN) fall under within the ontology? | Which specific types of Gene ID exist, such as Gene ID (ZFIN)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence assembly format (text)\nDescription: Sequence assembly format (text) is a subclass of Sequence assembly format and refers specifically to formats used to represent sequence assembly data in a text-based form. This class encompasses any text format designed to store, exchange, or process sequence assembly information.\nAxiom: {'subClassOf': ['Sequence assembly format']}\nGenerated CQs:", "output": "Which sequence assembly formats encompass Sequence assembly format (text) as a more specific type? | What broader classes include Sequence assembly format (text) as a member? | Is Sequence assembly format (text) classified as a specific kind of Sequence assembly format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 2D PAGE experiment\nDescription: 2D PAGE experiment is defined as a subclass of Proteomics experiment. It specifically concerns two-dimensional gel electrophoresis (2D-PAGE) techniques, encompassing experiments, gels, or spots observed within a gel. This class captures experimental processes and data associated with the separation and analysis of proteins based on two distinct properties, typically isoelectric point and molecular weight, as utilized in 2D-PAGE within proteomic studies.\nAxiom: {'subClassOf': ['Proteomics experiment']}\nGenerated CQs:", "output": "Which broader experiment categories encompass 2D PAGE experiment? | What specific experiments are categorized as Proteomics experiment, such as 2D PAGE experiment? | Is every 2D PAGE experiment classified under the category of Proteomics experiment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Genome index\nDescription: Genome index is defined as a subclass of Data index. It refers to an index specifically constructed for a genome sequence, serving as a precomputed organizational structure that facilitates rapid sequence alignment, especially when dealing with large or numerous sequences. This enables efficient retrieval and comparison operations by accelerating computational alignment tasks involving genome data.\nAxiom: {'subClassOf': ['Data index']}\nGenerated CQs:", "output": "Which indexes are subclasses of Data index, with Genome index as an example? | Is Genome index categorized as a type of Data index? | What broader classifications encompass Genome index? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Database cross-mapping\nDescription: Database cross-mapping is a subclass of Data reference, representing the process or entity in which accession numbers or other database identifiers are mapped between two or more biological or biomedical databases. Typically implemented as a table, each row corresponds to an accession number and each column to a database being referenced, with cells containing identifiers of corresponding entries. Empty cells indicate the absence of a mapping for that database. Additional metadata such as version or date may also be included. This structure facilitates the integration and comparison of related data across different database sources.\nAxiom: {'subClassOf': ['Data reference']}\nGenerated CQs:", "output": "Which broader concepts is Database cross-mapping subsumed by? | What specific types fall under the category of Data reference, and does Database cross-mapping belong to them? | Is Database cross-mapping classified as a kind of Data reference? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Alignment processing\nDescription: Alignment processing is a subclass of 'Obsolete concept (EDAM)', indicating that it is no longer recommended for use. It is defined as the process of reading and/or writing alignments of two or more molecular sequences, structures, or derived data. This class encompasses methods or workflows that manipulate such alignments, but its obsolescence status suggests use of alternative, updated concepts where possible.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Alignment processing classified as an Obsolete concept (EDAM)? | What broader category encompasses Alignment processing within the EDAM ontology? | Which concepts fall under the category of Obsolete concept (EDAM), such as Alignment processing? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence alignment parameter\nDescription: Sequence alignment parameter is a subclass of Obsolete concept (EDAM) and is defined as some simple value controlling a sequence alignment or similar 'match' operation. This class represents conceptual parameters that guide how sequence alignment procedures are performed, but has been marked as obsolete in the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which parameters are considered subclasses of Obsolete concept (EDAM), including Sequence alignment parameter? | Is Sequence alignment parameter classified under the category of Obsolete concept (EDAM)? | What broader classes encompass the Sequence alignment parameter within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Recombination detection\nDescription: Recombination detection is a subclass of nucleic acid sequence alignment analysis, focused on identifying recombination events in aligned genetic sequences. This class covers the detection of recombination hotspots and coldspots, as well as the precise identification of recombination breakpoints within sequence alignments. Tools for recombination detection may employ various methods, including genetic algorithms, quartet-mapping, bootscanning, graphical techniques, or machine learning models such as random forests.\nAxiom: {'subClassOf': ['Nucleic acid sequence alignment analysis']}\nGenerated CQs:", "output": "Is Recombination detection classified under the broader category of Nucleic acid sequence alignment analysis? | To what higher-level analytical domains does Recombination detection pertain? | Which analytical methods are considered specializations of Nucleic acid sequence alignment analysis, such as Recombination detection? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Motif database search\nDescription: Motif database search is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer recommended for current use within the EDAM ontology. It refers to the process of screening a biological sequence against a motif or pattern database to identify potential matches. This category encompasses methods or tools designed to perform such computational searches, but is now considered outdated or superseded in this context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Motif database search classified as an instance of the broader category Obsolete concept (EDAM)? | Which concepts are encompassed by the Obsolete concept (EDAM) category, including Motif database search? | What hierarchical parent classes does Motif database search fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Residue bump detection\nDescription: Residue bump detection is a subclass of Residue non-canonical interaction detection. This class encompasses methods or processes that identify 'bumps' between residues in a molecular structure, defined as pairs of atoms where the Van der Waals' radii overlap (interpenetrate) beyond a specified threshold. This detection helps characterize unusual or sterically hindered residue interactions not considered canonical.\nAxiom: {'subClassOf': ['Residue non-canonical interaction detection']}\nGenerated CQs:", "output": "What detection types are encompassed by Residue non-canonical interaction detection, specifically including Residue bump detection? | Is Residue bump detection categorized under the broader group of Residue non-canonical interaction detection? | Which overarching detection categories does Residue bump detection fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: STRIDE log file\nDescription: STRIDE log file is defined as a subclass of Obsolete concept (EDAM), indicating that it represents a concept no longer in active use or recommended within the EDAM ontology. This class refers specifically to STRIDE log files, but its status as an obsolete concept suggests it should not be used for new data or annotation activities.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is STRIDE log file classified as a type of Obsolete concept (EDAM)? | Which log file types are included under Obsolete concept (EDAM), specifically encompassing STRIDE log file? | To which overarching categories does STRIDE log file belong according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Laboratory techniques\nDescription: Laboratory techniques is a subclass of Topic, defined as a topic concerning the procedures used to conduct an experiment. This class encapsulates various methods and processes essential for carrying out experimental investigations within laboratory settings.\nAxiom: {'subClassOf': ['Topic']}\nGenerated CQs:", "output": "Which categories under Topic encompass Laboratory techniques? | What broader conceptual groupings include Laboratory techniques? | Are laboratory techniques classified as a subset of Topic? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LabVIEW\nDescription: LabVIEW is defined as a subclass of programming language. This indicates that LabVIEW inherits all characteristics of programming languages, and any instance of LabVIEW is also considered a programming language. No further restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['programming language']}\nGenerated CQs:", "output": "Is LabVIEW classified under the category of programming languages? | Which broader classes encompass LabVIEW as a specialized instance? | What other concepts are subclasses of programming language alongside LabVIEW? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Atom ID\nDescription: Atom ID is defined as a subclass of Identifier (typed). It serves as an identifier—such as a character symbol—for a specific atom. This class captures identifiers that are explicitly associated with individual atoms, ensuring precise atom-level reference within the ontology.\nAxiom: {'subClassOf': ['Identifier (typed)']}\nGenerated CQs:", "output": "Is Atom ID categorized as a kind of Identifier? | Which specialized types are encompassed by the class Identifier? | What are the parent classes of Atom ID within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence alignment (hybrid)\nDescription: Sequence alignment (hybrid) is a subclass of Sequence alignment, specifically referring to the alignment of multiple molecular sequences of different types, such as genomic DNA and expressed sequence tags (EST), cDNA, or mRNA. This class captures alignments that integrate sequences representing distinct biological molecules, allowing for comparative analysis across different molecular sequence types.\nAxiom: {'subClassOf': ['Sequence alignment']}\nGenerated CQs:", "output": "Under which more general classes does Sequence alignment (hybrid) fall within the ontology? | Which types of alignment fall under the broader category of Sequence alignment, specifically including Sequence alignment (hybrid)? | Is Sequence alignment (hybrid) classified as a specialized form of Sequence alignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DictyBase gene report format\nDescription: DictyBase gene report format is defined as an entry format used within the DictyBase genome database. It is formally classified as a subclass of Obsolete concept (EDAM), indicating that this format is no longer in active use and has been superseded or retired. This class represents reporting structures for gene information specific to DictyBase, but its obsolete status means it should not be applied to current datasets or applications.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are the higher-level categories associated with DictyBase gene report format? | Which data formats are considered subclasses of Obsolete concept (EDAM)? | Is DictyBase gene report format classified under the broader category of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence-profile alignment (HMM) format\nDescription: Sequence-profile alignment (HMM) format is defined as a data format specifically used for representing alignments between biological sequences and hidden Markov model (HMM) profiles. According to its axioms, this class is a subclass of Obsolete concept (EDAM), indicating that it is no longer considered current or in active use within the EDAM ontology. This classification helps ensure that this format is recognized as deprecated and should not be used for new data or tools.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What more general classes does Sequence-profile alignment (HMM) format fall under within the ontology? | Is Sequence-profile alignment (HMM) format classified under the broader category of Obsolete concept (EDAM)? | Which formats are considered specific types of Obsolete concept (EDAM), such as Sequence-profile alignment (HMM) format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence editing (nucleic acid)\nDescription: Sequence editing (nucleic acid) is defined as a subclass of Obsolete concept (EDAM). It refers to the process of editing or changing a nucleic acid sequence, either in a random or specific manner. This class has been marked obsolete, indicating that its use is deprecated in the ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Sequence editing (nucleic acid) categorized under Obsolete concept (EDAM)? | What obsolete concepts in EDAM encompass Sequence editing (nucleic acid)? | Which specific processes are included within the Obsolete concept (EDAM) class, such as Sequence editing (nucleic acid)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: BIND entry format\nDescription: BIND entry format is defined as a subclass of the obsolete concept in EDAM, indicating it is no longer current or recommended for use. It specifically refers to the entry format used in the BIND database for protein interaction data. This classification marks the BIND entry format as both historically significant and deprecated within contemporary bioinformatics ontologies.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What higher-level classifications include BIND entry format? | Which entity types are classified as more specific than Obsolete concept (EDAM), such as BIND entry format? | Is BIND entry format categorized under the broader concept of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Multivariate correlation estimator\nDescription: Multivariate correlation estimator is defined as a subclass of algorithm. It encompasses algorithms specifically designed to estimate the correlation structure among multiple variables simultaneously. This class formalizes methods that take multivariate data as input and output information about the linear or nonlinear relationships among variables, supporting multivariate statistical analysis.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Which broader categories encompass Multivariate correlation estimator beyond its direct classification? | What algorithms exist that include Multivariate correlation estimator as a specific variant? | Is Multivariate correlation estimator categorized as a type of algorithm? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Genes and proteins resources\nDescription: Genes and proteins resources is defined as a subclass of the obsolete concept category in EDAM, indicating that it is no longer in current use or has been superseded. This class encompasses topics concerning specific genes, their encoded proteins, and groupings such as gene or protein families, focusing on resources related to molecular genetics and proteomics.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which resources are classified as subclasses of Obsolete concept (EDAM), such as Genes and proteins resources? | What higher-level classes does Genes and proteins resources fall under in the ontology? | Is Obsolete concept (EDAM) a superclass for Genes and proteins resources? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Peptide annotation\nDescription: Peptide annotation is defined as a subclass of the obsolete concept (EDAM), indicating that it is deprecated or no longer recommended for use. It is described as an informative report about a specific peptide, suggesting its historical role in providing details or metadata relating to peptides. Use of this class should be reconsidered due to its obsolete status.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are all the subclasses defined within Obsolete concept (EDAM), including Peptide annotation? | To which higher-level concepts does Peptide annotation belong? | Is Peptide annotation categorized under the broader class of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene name (MaizeGDB)\nDescription: Gene name (MaizeGDB) is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer in active use within the referenced ontology. It represents the name of a gene from the MaizeGDB (maize genes) database. This class should not be used for current annotation, as it has been marked obsolete.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "To which higher-level classes does Gene name (MaizeGDB) belong according to the ontology? | Which specific entities are classified as subclasses of Obsolete concept (EDAM), including Gene name (MaizeGDB)? | Is Gene name (MaizeGDB) categorized under the broader class of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: markx0\nDescription: markx0 is defined as a subclass of markx0 variant. It represents the Pearson MARKX0 alignment format, which pertains to a specific format used for sequence alignments. This class inherits all properties of markx0 variant and is characterized by its association with the MARKX0 alignment specification.\nAxiom: {'subClassOf': ['markx0 variant']}\nGenerated CQs:", "output": "What overarching classes include markx0 within the markx0 variant hierarchy? | Is markx0 classified under the broader group of markx0 variant? | Which variants categorize markx0 as a more specific form? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EMBOSS database resource definition\nDescription: EMBOSS database resource definition is a subclass of Obsolete concept (EDAM), indicating it is no longer in active use or has been superseded. It refers to a resource definition for an EMBOSS database, representing the specification or structured description of a database resource within the EMBOSS bioinformatics suite.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which concepts are direct specializations of Obsolete concept (EDAM), such as EMBOSS database resource definition? | What general categories encompass EMBOSS database resource definition in the EDAM ontology? | Is EMBOSS database resource definition classified as a type of Obsolete concept in EDAM? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein targeting and localization\nDescription: Protein targeting and localization is defined as a subclass of Protein expression. It encompasses the study of the mechanisms by which proteins are transported to specific locations within or outside the cell, including processes such as signal peptide-mediated transport, subcellular localization, and protein export. This class focuses on understanding how proteins reach their functional destinations as part of cellular protein expression dynamics.\nAxiom: {'subClassOf': ['Protein expression']}\nGenerated CQs:", "output": "What are the specialized subtypes of Protein expression, including Protein targeting and localization? | Which categories does Protein targeting and localization fall under with respect to Protein expression? | Is Protein expression a general category that encompasses Protein targeting and localization? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Microarray raw data analysis\nDescription: Microarray raw data analysis is defined as a subclass of Obsolete concept (EDAM), indicating it is no longer an actively maintained or recommended concept. It refers to the process of analyzing raw microarray data, typically involving the initial computational and statistical procedures applied to uninterpreted data obtained from microarray experiments. The obsolete status suggests that this method or term has been superseded by newer approaches or terminologies.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are the more specific types encompassed by Obsolete concept (EDAM), including Microarray raw data analysis? | Which broader concepts does Microarray raw data analysis inherit from within the ontology? | Is Microarray raw data analysis classified under the Obsolete concept (EDAM) category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Dylan\nDescription: Dylan is defined as a subclass of programming language, indicating that it represents a specific type of programming language. No additional axioms or restrictions are provided, so members of this class inherit all the general characteristics of programming languages.\nAxiom: {'subClassOf': ['programming language']}\nGenerated CQs:", "output": "What are the parent categories of Dylan in the ontology? | Which programming languages have Dylan as a specific type within their hierarchy? | Does Dylan belong to the category of programming languages? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Usage restricted\nDescription: Usage restricted is defined as a subclass of Usage clause. This means that every instance of Usage restricted is also considered a Usage clause, typically signifying a specific type of usage limitation or regulation formalized within a broader policy or agreement context. No further restrictions or disjointness are specified beyond this hierarchical relationship.\nAxiom: {'subClassOf': ['Usage clause']}\nGenerated CQs:", "output": "What broader clauses encompass Usage restricted as a subtype? | Does Usage restricted fall under the general category of Usage clause? | Which specific usages are classified within the Usage clause category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Metabolic disease\nDescription: Metabolic disease is defined as a subclass of Obsolete concept (EDAM), indicating its deprecated status within the ontology. It refers to a topic concerning the study of metabolic diseases, though its classification as obsolete suggests it should not be used for current or future annotation.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Does Metabolic disease fall under the overarching class of Obsolete concept (EDAM)? | Which specific concepts are categorized under Obsolete concept (EDAM), such as Metabolic disease? | What general classes or categories does Metabolic disease directly inherit from? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: application programming interface\nDescription: application programming interface is defined as a subclass of software interface. This means every application programming interface is a specialized form of software interface, facilitating communication and interaction between different software components or systems.\nAxiom: {'subClassOf': ['software interface']}\nGenerated CQs:", "output": "Does application programming interface fall under the category of software interface? | What are the more specific types classified within software interface, such as application programming interface? | To which higher-level categories is application programming interface assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetic tree generation (minimum distance methods)\nDescription: Phylogenetic tree generation (minimum distance methods) is a subclass of Phylogenetic tree generation (method centric). This class comprises approaches—such as the neighbor joining (NJ) clustering method—that construct phylogenetic trees by calculating or utilizing precomputed distances between sequences. The goal is to identify a tree where the discrepancies between the observed pairwise distances and those implied by the tree structure are minimized, allowing for accurate inference of evolutionary relationships.\nAxiom: {'subClassOf': ['Phylogenetic tree generation (method centric)']}\nGenerated CQs:", "output": "Which higher-level categories encompass Phylogenetic tree generation (minimum distance methods)? | Is Phylogenetic tree generation (minimum distance methods) classified within the broader group of Phylogenetic tree generation (method centric)? | What are the more specific types under Phylogenetic tree generation (method centric), including minimum distance methods? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein signal peptide detection (eukaryotes)\nDescription: Protein signal peptide detection (eukaryotes) is a subclass of Protein signal peptide detection. Members of this class are concerned with detecting or predicting signal peptides specifically in eukaryotic proteins, often also predicting their subcellular localization. This classification formalizes tasks or methods focused on identifying signal peptides in eukaryotic protein sequences.\nAxiom: {'subClassOf': ['Protein signal peptide detection']}\nGenerated CQs:", "output": "Which broader detection classes encompass 'Protein signal peptide detection (eukaryotes)'? | What specific detection categories are subclasses of 'Protein signal peptide detection', including the eukaryote-focused type? | Is 'Protein signal peptide detection (eukaryotes)' classified as a kind of 'Protein signal peptide detection'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Coding region prediction\nDescription: Coding region prediction is defined as a subclass of gene component prediction. It refers to the computational process of identifying protein-coding regions, such as coding sequences (CDS), exons, or open reading frames, within nucleotide sequences. This class formalizes prediction methods aimed specifically at detecting the parts of genes that encode proteins, distinguishing them from non-coding regions.\nAxiom: {'subClassOf': ['Gene component prediction']}\nGenerated CQs:", "output": "Does Coding region prediction represent a specialized form of Gene component prediction? | To which major prediction category does Coding region prediction belong? | Which subcategories fall under Gene component prediction, such as Coding region prediction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein secondary structure image\nDescription: Protein secondary structure image is a subclass of Protein image. It represents images specifically depicting the secondary structure of proteins, such as alpha helices and beta sheets. This class is defined by the oboInOwl:hasDefinition property: \"Image of protein secondary structure.\"\nAxiom: {'subClassOf': ['Protein image']}\nGenerated CQs:", "output": "Is Protein image a more general category that includes Protein secondary structure image? | Which specific types of Protein image exist, and does this include Protein secondary structure image? | To which superordinate image categories does Protein secondary structure image belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence cluster ID (UniRef90)\nDescription: Sequence cluster ID (UniRef90) is a subclass of Sequence cluster ID (UniRef). It represents a unique identifier assigned to each entry in the UniRef90 database, enabling the unambiguous referencing and retrieval of sequence clusters within the UniRef90 dataset.\nAxiom: {'subClassOf': ['Sequence cluster ID (UniRef)']}\nGenerated CQs:", "output": "Which specific sequence cluster IDs are included within Sequence cluster ID (UniRef), such as UniRef90? | What broader cluster identifier categories does Sequence cluster ID (UniRef90) fall under? | Is Sequence cluster ID (UniRef90) categorized under Sequence cluster ID (UniRef)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: REBASE proto enzyme report format\nDescription: REBASE proto enzyme report format is defined as a subclass of Obsolete concept (EDAM). It represents the format of an entry from the proto section of the REBASE enzyme database. This class is considered obsolete, indicating that the format is no longer in active use or has been superseded.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which broader conceptual categories recognize REBASE proto enzyme report format as a subordinate member? | Is REBASE proto enzyme report format classified under the overarching category of Obsolete concept (EDAM)? | What obsolete concepts (EDAM) include REBASE proto enzyme report format as a more specific subtype? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence word comparison\nDescription: Sequence word comparison is a subclass of Sequence comparison, specialized in identifying exact character or word matches between molecular sequences. Unlike full sequence alignment, this class represents operations that focus solely on pinpointing matching words or characters, providing a targeted approach for comparative analysis of sequence fragments.\nAxiom: {'subClassOf': ['Sequence comparison']}\nGenerated CQs:", "output": "Which types of comparisons are classified as subclasses of Sequence comparison? | Does Sequence word comparison fall under the broader class of Sequence comparison? | What general comparison categories include Sequence word comparison? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: amino acid protein sequence data\nDescription: amino acid protein sequence data is defined as a subclass of biological sequence data. This class represents sequence data composed specifically of amino acids, typically encoding the primary structure of proteins. Members of this class are distinguished from other types of biological sequence data, such as nucleic acid sequences, by representing the ordered series of amino acids that form protein molecules.\nAxiom: {'subClassOf': ['biological sequence data']}\nGenerated CQs:", "output": "Which subcategories fall under the class of biological sequence data? | Is amino acid protein sequence data a more specialized form of biological sequence data? | To which higher-level groups does amino acid protein sequence data pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ontology concept comment\nDescription: Ontology concept comment is a subclass of Obsolete concept (EDAM), representing a comment made on a concept within an ontology. This class is intended to capture annotations or remarks relevant to ontology concepts, though it is now considered obsolete within the EDAM framework.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader classes does Ontology concept comment directly belong to? | Which concepts fall under the Obsolete concept (EDAM) class, including Ontology concept comment? | Is every Ontology concept comment categorized under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Image\nDescription: Image is defined as a subclass of data, specifically representing biological or biomedical data that can be visually rendered—such as being displayed on a screen or plotted on a graph. Members of this class are characterized by their suitability for visual representation, distinguishing them within the spectrum of data types.\nAxiom: {'subClassOf': ['data']}\nGenerated CQs:", "output": "Which upper-level groups does Image fall under within the ontology? | Is Image categorized as a specialized type of data? | What types are encompassed under data, specifically including Image? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HGVbase entry format\nDescription: HGVbase entry format is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer in active use or has been deprecated. It represents the format of a record originating from the HGVbase database, which stored information about genotypes and phenotypes.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What specific concepts fall within Obsolete concept (EDAM), such as HGVbase entry format? | Which upper-level categories does HGVbase entry format belong to according to the ontology? | Is HGVbase entry format classified under the broader category of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GO concept name\nDescription: GO concept name is a subclass of Obsolete concept (EDAM), indicating that it refers to a concept that is no longer actively used within the EDAM ontology. It is defined as the name of a concept from the Gene Ontology (GO), according to its current definition. This class captures deprecated labels or identifiers associated with GO concepts.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is every GO concept name classified under Obsolete concept in EDAM? | What broader EDAM categories include GO concept name as a more specific class? | Which GO concept names fall within the scope of Obsolete concept in EDAM? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Directory metadata\nDescription: Directory metadata is defined as a subclass of the obsolete concept (EDAM), indicating that it is no longer in current use. It is characterized as a directory on disk from which files are read. This class groups metadata associated specifically with such directories, although its use is considered outdated within the ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Directory metadata categorized as a specialized form of Obsolete concept (EDAM)? | What broader conceptual groupings encompass Directory metadata? | Which concepts are classified under Obsolete concept (EDAM), such as Directory metadata? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid comparison\nDescription: Nucleic acid comparison is a subclass of Comparison, defined as the process of analyzing two or more nucleic acids to identify their similarities. This class is intended to capture activities focused on the comparative assessment of nucleic acid sequences or structures.\nAxiom: {'subClassOf': ['Comparison']}\nGenerated CQs:", "output": "To which parent classes does Nucleic acid comparison belong? | Which comparisons are classified more specifically as Nucleic acid comparisons? | Does Nucleic acid comparison fall under the category of Comparison? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: beta\nDescription: beta is defined as a subclass of Development status. This indicates that beta represents a specific stage or category within the broader concept of Development status, used to characterize entities according to their progress or phase in a development lifecycle. No further property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Development status']}\nGenerated CQs:", "output": "Which specific subclasses fall within Development status, such as beta? | Is beta categorized under the broader class of Development status? | What general classifications does beta fall under in terms of Development status hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Rank-invariant set normalization\nDescription: Rank-invariant set normalization is an algorithm and thus a subclass of algorithm. While no further properties or relationships are specified in the given axiom, this class represents computational procedures designed for data normalization in which certain ranked sets or features remain unchanged, ensuring comparability across samples.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Is rank-invariant set normalization classified under the general category of algorithm? | Which instances are recognized as more specific types of algorithm, such as rank-invariant set normalization? | What broader categories contain rank-invariant set normalization as a specific method? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CBS\nDescription: CBS is defined as a subclass of algorithm. This indicates that every instance of CBS is recognized as a type of algorithm, inheriting all properties and characteristics typical of algorithms. No additional distinguishing axioms or restrictions are specified for CBS.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "What are the specific subclasses found within the class algorithm, such as CBS? | Is CBS classified under the broader category of algorithm? | Which higher-level categories does CBS conceptually fall into? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Perl\nDescription: Perl is defined as a subclass of programming language, indicating that any instance of Perl is also an instance of programming language. This classification situates Perl within the broader category of languages designed for coding and software development.\nAxiom: {'subClassOf': ['programming language']}\nGenerated CQs:", "output": "To which higher-level categories does Perl belong within the programming language hierarchy? | Which programming languages include subclasses such as Perl? | Is Perl classified as a specialized form of programming language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Functional mapping\nDescription: Functional mapping is defined as a subclass of the obsolete concept (EDAM), indicating it is no longer recommended for current use. It refers to mapping the genetic architecture of dynamic complex traits, often involving the characterization of underlying quantitative trait loci (QTLs) or nucleotides (QTNs). This term historically described approaches for associating genetic markers with complex trait variation through quantitative analysis.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader conceptual categories include Functional mapping within the EDAM ontology? | Which concepts are classified under Obsolete concept (EDAM), including Functional mapping? | Is Functional mapping recognized as a specialized form of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ecology\nDescription: Ecology is a subclass of Biology, focused on the study of ecological and environmental sciences. It is especially concerned with the application of information technology in these fields, as emphasized in ecoinformatics. This class covers both foundational ecological knowledge and the technological methods used to analyze and manage ecological data.\nAxiom: {'subClassOf': ['Biology']}\nGenerated CQs:", "output": "Is Ecology classified under the broader discipline of Biology? | To which overarching domains does Ecology pertain within the life sciences hierarchy? | Which specialized fields fall under Biology, specifically referencing Ecology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Shell\nDescription: Shell is defined as a subclass of programming language, indicating that every shell is considered a type of programming language within the ontology. No additional constraints or distinguishing characteristics are provided in the axioms. Thus, any individual classified as a shell must also be recognized as a programming language.\nAxiom: {'subClassOf': ['programming language']}\nGenerated CQs:", "output": "Which specific constructs fall under the category of programming language, including Shell? | What broader classes does Shell belong to within the ontology? | Is Shell classified as a type of programming language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetic tree analysis (shape)\nDescription: Phylogenetic tree analysis (shape) is a subclass of Phylogenetic tree analysis, focused on analyzing the shape or topology of a phylogenetic tree. This class encompasses methods and approaches that examine structural features of the tree, such as its branching patterns, symmetry, or imbalance, to infer evolutionary relationships and patterns.\nAxiom: {'subClassOf': ['Phylogenetic tree analysis']}\nGenerated CQs:", "output": "Does Phylogenetic tree analysis (shape) fall under the general category of Phylogenetic tree analysis? | Which larger conceptual classes include Phylogenetic tree analysis (shape)? | What specific analyses are classified as subtypes of Phylogenetic tree analysis, such as Phylogenetic tree analysis (shape)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: data processing task\nDescription: data processing task is a subclass of information processing. It is defined as an information processing objective that specifies the goal for a data processing algorithm execution process, which, when applied to a dataset, is intended to produce a new dataset as output. This class formalizes the role of tasks that guide algorithm execution in transforming input datasets into resulting datasets.\nAxiom: {'subClassOf': ['information processing']}\nGenerated CQs:", "output": "Which tasks are recognized as specific kinds of information processing, such as data processing tasks? | To what higher-level categories does data processing task correspond within the information processing domain? | Is every data processing task classified under the broader group of information processing? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Structure-based sequence alignment\nDescription: Structure-based sequence alignment is a subclass of sequence alignment generation. This class refers to the process of aligning molecular sequences using both sequence and structural information, integrating structural data to improve alignment accuracy compared to purely sequence-based methods.\nAxiom: {'subClassOf': ['Sequence alignment generation']}\nGenerated CQs:", "output": "Is structure-based sequence alignment categorized under sequence alignment generation? | What specific types of sequence alignment generation include structure-based sequence alignment? | Which broader alignment processes encompass structure-based sequence alignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UMLS\nDescription: UMLS is defined as a subclass of Obsolete concept (EDAM), indicating that it represents a retired or superseded entity within the ontology. The class refers specifically to a term originating from the UMLS vocabulary, providing a clear provenance but signaling that the concept is no longer in active use within the EDAM framework.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is UMLS categorized under the broader Obsolete concept (EDAM)? | What are the direct parent categories of UMLS within this ontology? | Which concepts are subsumed by Obsolete concept (EDAM), and does this include UMLS? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Transcriptome assembly (de novo)\nDescription: Transcriptome assembly (de novo) is a subclass of Obsolete concept (EDAM). It is defined as the process of inferring a transcriptome sequence without the aid of a reference genome, by comparing short sequence reads directly to each other. This approach does not rely on any pre-existing genomic reference, and the class is considered obsolete in the referenced ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What concepts are specified as subclasses of Obsolete concept (EDAM), including transcriptome assembly (de novo)? | Which higher-level categories does transcriptome assembly (de novo) fall under in relation to Obsolete concept (EDAM)? | Is transcriptome assembly (de novo) classified under the category of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Structure formatting\nDescription: Structure formatting is defined as a subclass of Formatting. It involves the process of reformatting, specifically applied to files or reports containing tertiary structure data. This class represents formatting operations aimed at reorganizing or restructuring information related to tertiary structures.\nAxiom: {'subClassOf': ['Formatting']}\nGenerated CQs:", "output": "Is Structure formatting classified as a type of Formatting? | What are the distinct subclasses that fall under Formatting, including Structure formatting? | Which formatting categories encompass Structure formatting as a more specific subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: phylip sequence format\nDescription: phylip sequence format is a subclass of Obsolete concept (EDAM), indicating that it is no longer recommended for active use. This class represents the Phylip interleaved sequence format, a file format for representing sequence data. Its use is deprecated in favor of more current standards.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "To which broader concepts does phylip sequence format conceptually pertain? | Which sequence formats are considered more specific instances of Obsolete concept (EDAM), such as phylip sequence format? | Is phylip sequence format categorized under the broader concept of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Helical wheel\nDescription: Helical wheel is defined as a subclass of Protein secondary structure image. It represents an image depicting a peptide sequence as viewed along the axis of a helix, specifically designed to highlight amphipathicity and other structural properties. This class is used to capture visual representations relevant to the analysis of helical structures in proteins.\nAxiom: {'subClassOf': ['Protein secondary structure image']}\nGenerated CQs:", "output": "Which specific images fall under the category of Protein secondary structure image, including Helical wheel? | To which broader image classifications does Helical wheel belong? | Is Helical wheel recognized as a type of Protein secondary structure image? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (VBASE2)\nDescription: Gene ID (VBASE2) is defined as a subclass of Gene ID and represents an identifier assigned to a gene in the VBASE2 database. This class is intended to uniquely specify gene records within VBASE2, aligning with its formal role as a specialization of general gene identifiers.\nAxiom: {'subClassOf': ['Gene ID']}\nGenerated CQs:", "output": "Which general identifiers include VBASE2 as a specialized Gene ID? | Does VBASE2 fall under the broader classification of Gene ID? | What more specific Gene ID types encompass VBASE2? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence alignment (pair)\nDescription: Sequence alignment (pair) is defined as a subclass of Sequence alignment, specifically referring to the alignment of exactly two molecular sequences. This class formalizes pairwise comparison, distinguishing it from alignments involving multiple sequences.\nAxiom: {'subClassOf': ['Sequence alignment']}\nGenerated CQs:", "output": "What broader categories encompass Sequence alignment (pair)? | Is Sequence alignment (pair) a specific type under the general category of Sequence alignment? | Which types are classified as Sequence alignment, including Sequence alignment (pair)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gramene identifier\nDescription: Gramene identifier is defined as a subclass of Sequence accession (protein), representing an identifier that uniquely denotes an entry within the Gramene database. This class formalizes Gramene database entries as specific types of protein sequence accessions, ensuring any individual in this class is both a protein sequence accession and a valid Gramene database identifier.\nAxiom: {'subClassOf': ['Sequence accession (protein)']}\nGenerated CQs:", "output": "What higher-level classes encompass Gramene identifier within the context of protein sequence accessions? | Which identifiers are categorized under Sequence accession (protein), including Gramene identifier? | Does Gramene identifier represent a specialized form of Sequence accession (protein)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence submission\nDescription: Sequence submission is defined as a subclass of Obsolete concept (EDAM). It refers to the process of submitting a molecular sequence to a database. This categorization indicates that sequence submission is now considered an outdated or deprecated concept within the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What concepts are included as subclasses within Obsolete concept (EDAM), such as Sequence submission? | Is Sequence submission classified under the broader category of Obsolete concept (EDAM)? | Which higher-level categories encompass Sequence submission in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Backbone torsion angle calculation\nDescription: Backbone torsion angle calculation is a subclass of torsion angle calculation. This class represents the process of computing all backbone torsion angles for each residue within a protein structure, enabling detailed analysis of the protein’s conformational properties.\nAxiom: {'subClassOf': ['Torsion angle calculation']}\nGenerated CQs:", "output": "What categories fall under torsion angle calculation, and does that list include backbone torsion angle calculation? | Is backbone torsion angle calculation classified under torsion angle calculation? | Which broader calculation types encompass backbone torsion angle calculation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid sequences\nDescription: Nucleic acid sequences is defined as a subclass of Obsolete concept (EDAM). This class represents topics related to nucleotide sequences, encompassing associated concepts such as sequence sites, alignments, motifs, and profiles. Its classification as obsolete indicates that it is no longer actively maintained or recommended for current use within the ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Are nucleic acid sequences classified as a type of obsolete concept within EDAM? | What broader concepts encompass nucleic acid sequences in the EDAM ontology? | Which concepts are categorized under Obsolete concept (EDAM), including nucleic acid sequences? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: probability distribution estimation algorithm\nDescription: probability distribution estimation algorithm is defined as a subclass of single generalization algorithm. This class comprises algorithms that infer or estimate a probability distribution from data, rather than focusing on mapping individual inputs to outputs. Members of this class generalize from data in a way that results in a probabilistic model, which can then be used for tasks such as sampling, density estimation, or uncertainty quantification.\nAxiom: {'subClassOf': ['single generalization algorithm']}\nGenerated CQs:", "output": "Is every probability distribution estimation algorithm categorized as a type of single generalization algorithm? | Which algorithms are classified under single generalization algorithm, such as probability distribution estimation algorithm? | To what higher-level categories does probability distribution estimation algorithm belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ontology concept reference\nDescription: Ontology concept reference is defined as a subclass of Obsolete concept (EDAM), indicating that it is considered an outdated or superseded concept within the EDAM ontology framework. It refers specifically to a reference for a concept from an ontology, serving as a means to denote or cite ontology concepts.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Ontology concept reference categorized under Obsolete concept (EDAM)? | Which concepts are classified as subclasses of Obsolete concept (EDAM)? | To which higher-level concepts does Ontology concept reference belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Small molecule data\nDescription: Small molecule data is defined as a subclass of Obsolete concept (EDAM). It represents data concerning one or more small molecules and is considered a broad data type, typically used as a placeholder for more specific types. This class is deprecated in favor of more precise classifications.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which obsolete concepts within EDAM have Small molecule data as a subclass? | What broader categories include Small molecule data as a specific instance? | Is Obsolete concept (EDAM) a direct superclass of Small molecule data? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (GeneDB Trypanosoma brucei)\nDescription: Gene ID (GeneDB Trypanosoma brucei) is defined as a subclass of Obsolete concept (EDAM), indicating it is no longer in active use within the ontology. This class refers to gene identifiers that originate from the GeneDB database specifically for Trypanosoma brucei.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which concepts are designated as subclasses of Obsolete concept (EDAM), such as Gene ID (GeneDB Trypanosoma brucei)? | Is Gene ID (GeneDB Trypanosoma brucei) categorized under Obsolete concept (EDAM)? | What are the direct and indirect superclasses of Gene ID (GeneDB Trypanosoma brucei)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Chemical formula\nDescription: Chemical formula is a subclass of Molecular property (general) and is defined as a specification of a chemical structure. This class captures the properties related to the way a chemical structure is formally represented, linking it to the broader category of molecular properties.\nAxiom: {'subClassOf': ['Molecular property (general)']}\nGenerated CQs:", "output": "To which higher-level molecular property categories does chemical formula belong? | Which molecular properties have chemical formula as a more specific type? | Is a chemical formula classified under the broader category of molecular property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (GeneDB Glossina morsitans)\nDescription: Gene ID (GeneDB Glossina morsitans) is defined as a subclass of Obsolete concept (EDAM), indicating that it represents a concept no longer in active use. This class refers specifically to gene identifiers from the Glossina morsitans GeneDB database.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are the specific subclasses that are included in Obsolete concept (EDAM), such as Gene ID (GeneDB Glossina morsitans)? | Does Gene ID (GeneDB Glossina morsitans) fall under the category of Obsolete concept (EDAM)? | Which broader classes does Gene ID (GeneDB Glossina morsitans) belong to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UniProt format\nDescription: UniProt format is a subclass of the obsolete concept in the EDAM ontology, indicating it is no longer actively used or recommended for new work. It is defined as the sequence format used for UniProt entries. This class represents formats specifically designed for recording and representing protein sequence information in the UniProt knowledgebase.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is UniProt format classified under the broader category of Obsolete concept (EDAM)? | Which specific formats are subsumed by the Obsolete concept (EDAM), including UniProt format? | What more general concept categories encompass UniProt format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein surface report\nDescription: Protein surface report is an obsolete concept in the EDAM ontology, serving as a broad data type that acts as a placeholder for more specific types. It primarily facilitates navigation within EDAM and is not typically intended for annotation. This class encompasses data regarding the surface properties of protein structures, such as shape, hydropathy, and electrostatic patches.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which higher-level classes include Protein surface report as a member? | What are the concepts categorized under Obsolete concept (EDAM), including Protein surface report? | Is Obsolete concept (EDAM) a generalization of Protein surface report? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Data analysis\nDescription: Data analysis is defined as a subclass of Data management, representing processes focused on the systematic application of statistical and/or logical techniques to describe, illustrate, condense, recap, and evaluate data. This class encompasses activities that transform raw data into meaningful insights, ensuring that data is interpreted and summarized accurately within the broader framework of data management.\nAxiom: {'subClassOf': ['Data management']}\nGenerated CQs:", "output": "Which broader categories encompass Data analysis within their scope? | Is Data analysis regarded as a specialized form of Data management? | What are the more specific types classified under Data management, such as Data analysis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Database\nDescription: Database is defined as a subclass of Obsolete concept (EDAM). It refers to a digital data archive, generally structured around a relational model, but it can also utilize object-oriented, tree, or graph-based models. This formalization indicates that the concept of 'Database'—as described here—has been superseded or rendered obsolete within its ontological context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Can Database be categorized under Obsolete concept (EDAM)? | Which concepts are considered more specific types within the Obsolete concept (EDAM) category, including Database? | What broader classifications does Database fall under according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: clustering algorithm\nDescription: clustering algorithm is defined as a subclass of single generalization algorithm, indicating that it represents a specialized type of algorithm focused on grouping data points based on similarity or shared characteristics. By this axiom, every clustering algorithm is inherently a single generalization algorithm, inheriting its properties and constraints, but with a specific emphasis on unsupervised partitioning of data into clusters.\nAxiom: {'subClassOf': ['single generalization algorithm']}\nGenerated CQs:", "output": "Is every clustering algorithm encompassed by the category of single generalization algorithm? | Which specific algorithms fall under the single generalization algorithm category, including clustering algorithms? | To what higher-level algorithm categories does clustering algorithm belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CMA\nDescription: CMA is defined as a subclass of algorithm, meaning it inherits all characteristics of algorithms and represents a more specific type within this category. No further restrictions or disjointness axioms are specified, so CMA encompasses all properties of algorithm without any additional constraints.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Which kinds of algorithms include CMA as a more specific example? | What broader classes does CMA fall under in the ontology? | Is CMA categorized as a subtype of algorithm? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: INOH entry format\nDescription: INOH entry format is defined as a subclass of Obsolete concept (EDAM), indicating it represents a deprecated concept within the ontology. It refers specifically to the format of an entry from the INOH signal transduction pathways database, describing the data structure or specification once used by this resource.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Does INOH entry format belong to the broader category of Obsolete concept (EDAM)? | To which higher-level groupings is INOH entry format subsumed? | What specific formats are classified under Obsolete concept (EDAM), including INOH entry format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: sequence alignment\nDescription: sequence alignment is defined as a subclass of pattern discovery task. This means that every sequence alignment is considered a type of pattern discovery task, focusing on the process of arranging sequences (such as DNA, RNA, or protein sequences) to identify regions of similarity that may indicate functional, structural, or evolutionary relationships. This classification establishes sequence alignment as a specialized activity within the broader domain of discovering patterns in data.\nAxiom: {'subClassOf': ['pattern discovery task']}\nGenerated CQs:", "output": "What are the higher-level categories that encompass sequence alignment as a subclass? | Which specific tasks are subclasses of pattern discovery task, such as sequence alignment? | Is sequence alignment categorized under the broader class of pattern discovery task? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MRI\nDescription: MRI is defined as a subclass of Imaging and refers to techniques that use magnetic fields and radio waves to produce images, typically for investigating the anatomy and physiology of the human body. This classification ensures that MRI is recognized as a specific type of imaging modality, distinct in its mechanism and applications.\nAxiom: {'subClassOf': ['Imaging']}\nGenerated CQs:", "output": "What broader categories encompass MRI within the ontology? | Is MRI classified as a type of Imaging? | Which procedures fall under the category of Imaging, such as MRI? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ensembl ID ('Bos taurus')\nDescription: Ensembl ID ('Bos taurus') is defined as a subclass of Obsolete concept (EDAM), indicating that it is considered deprecated or outdated in the ontology context. This class represents an identifier assigned to an entry—such as an exon, gene, transcript, or protein—in the Ensembl 'core' database specific to the Bos taurus division.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which concepts are categorized as subclasses under Obsolete concept (EDAM), such as Ensembl ID ('Bos taurus')? | What are the broader classes that include Ensembl ID ('Bos taurus') as a member? | Does the Ensembl ID ('Bos taurus') belong to the set of Obsolete concepts (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 1 or more\nDescription: 1 or more is defined as a subclass of Obsolete concept (EDAM). It represents the idea of \"one or more things.\" This class is considered obsolete within the ontology and is not intended for current use.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is 1 or more categorized as an instance of the Obsolete concept in EDAM? | What higher-level classifications encompass 1 or more in the context of EDAM? | Which concepts are designated as subclasses under the Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (GeneDB Plasmodium falciparum)\nDescription: Gene ID (GeneDB Plasmodium falciparum) is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer in active use or superseded by other identifiers. It specifically represents a gene identifier assigned by the Plasmodium falciparum GeneDB database. This class captures identifiers unique to genes in this database, but should not be used for current annotation due to its obsolete status.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What other concepts, like Gene ID (GeneDB Plasmodium falciparum), are classified as subclasses of Obsolete concept (EDAM)? | Does Gene ID (GeneDB Plasmodium falciparum) fall under the general category of Obsolete concept (EDAM)? | Which higher-level groups include Gene ID (GeneDB Plasmodium falciparum) according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Position frequency matrix\nDescription: Position frequency matrix is defined as a subclass of Position-specific scoring matrix. It represents a profile, typically derived from a sequence alignment, structured as a simple matrix where each entry reflects the count of nucleotides or amino acids at each position. This formalization distinguishes Position frequency matrices by their use of raw residue counts per position, rather than scores or probabilities, within the broader category of position-specific scoring matrices.\nAxiom: {'subClassOf': ['Position-specific scoring matrix']}\nGenerated CQs:", "output": "What general matrix categories include Position frequency matrix as a conceptual member? | Which matrix types are classified beneath Position-specific scoring matrix, such as Position frequency matrix? | Does the Position frequency matrix fall under the broader grouping of Position-specific scoring matrix? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Agilent Feature Extraction software version 7.5\nDescription: Agilent Feature Extraction software version 7.5 is defined as a subclass of Agilent Feature Extraction Software. This classification indicates that version 7.5 inherits all general characteristics of the broader software class while representing a specific version distinguished by its unique features or updates. No additional constraints, disjointness, or property restrictions are asserted in the current axiom.\nAxiom: {'subClassOf': ['Agilent Feature Extraction Software']}\nGenerated CQs:", "output": "Is Agilent Feature Extraction software version 7.5 classified under Agilent Feature Extraction Software? | Which specific versions or types are encompassed by Agilent Feature Extraction Software? | Which broader software categories does Agilent Feature Extraction software version 7.5 fall into? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Error\nDescription: Error is defined as a subclass of the obsolete concept category, indicating that it is considered deprecated within the ontology. It represents data pertaining to an error generated by a computer system or tool. This class is maintained for reference to legacy data representations but should not be used for modeling current or future concepts.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which concepts are more specific than Obsolete concept (EDAM), including Error? | Is Error categorized as an instance of the broader Obsolete concept (EDAM)? | To what higher-level concepts does Error belong within the EDAM classification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Annotation retrieval\nDescription: Annotation retrieval is a subclass of Obsolete concept (EDAM). This class is intended for tools or methods that retrieve existing annotations (or documentation), typically on database entities, rather than predicting or generating new annotations. The focus is on accessing pre-existing information, distinguishing it from annotation prediction methods.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are the broader categories that Annotation retrieval is associated with? | Which concepts fall under the category of Obsolete concept (EDAM), such as Annotation retrieval? | Is Annotation retrieval classified as a narrower concept under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Diffraction data reduction\nDescription: Diffraction data reduction is defined as a subclass of Diffraction data analysis. It involves the processing of diffraction data into a corrected, ordered, and simplified form, preparing the data for further interpretation or analysis. This class represents methods and procedures specifically focused on transforming raw diffraction measurements into structured datasets suitable for downstream applications.\nAxiom: {'subClassOf': ['Diffraction data analysis']}\nGenerated CQs:", "output": "Is Diffraction data analysis a broader category that encompasses Diffraction data reduction? | What are the parent categories associated with Diffraction data reduction? | Which specific processes are classified under Diffraction data analysis, such as Diffraction data reduction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: lma\nDescription: lma is defined as a subclass of Binary format. This classification indicates that every instance of lma is, by definition, a type of Binary format, inheriting all its properties and constraints. No further characteristics or restrictions are specified in the given axiom.\nAxiom: {'subClassOf': ['Binary format']}\nGenerated CQs:", "output": "Is lma categorized under Binary format? | Which formats are more specific than Binary format, such as lma? | What broader classifications encompass lma as a type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Genome identifier\nDescription: Genome identifier is defined as a subclass of Identifier (typed), representing an identifier specifically assigned to a particular genome. This class formalizes genome identifiers as a distinct type of typed identifiers, ensuring that any instance classified under Genome identifier must be used to uniquely denote a genome within biological datasets.\nAxiom: {'subClassOf': ['Identifier (typed)']}\nGenerated CQs:", "output": "Is Genome identifier regarded as a more specific form of Identifier? | What broader classes does Genome identifier inherit characteristics from, given its classification? | Which types of Identifier encompass Genome identifier as a specialized instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: REST service\nDescription: REST service is defined as a subclass of web service. This means every REST service is a type of web service, inheriting all its general characteristics. No additional property restrictions or disjointness axioms are specified, so a REST service is formally distinguished only by its placement under the broader category of web service.\nAxiom: {'subClassOf': ['web service']}\nGenerated CQs:", "output": "What broader categories does REST service fall under according to the ontology? | Which web service subclasses include REST service within their classification? | Is REST service classified as a type of web service? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EMBOSS graph\nDescription: EMBOSS graph is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer in active use or recommended for use. Members of this class refer specifically to images of graphs generated by the EMBOSS suite, as stated in its definition.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is EMBOSS graph classified under the broader group of Obsolete concept (EDAM)? | Which concepts are categorized as specializations of Obsolete concept (EDAM), such as EMBOSS graph? | What higher-level classes include EMBOSS graph according to the ontology structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein features report (membrane regions)\nDescription: Protein features report (membrane regions) is a subclass of Obsolete concept (EDAM). It refers to topics concerning trans- or intra-membrane regions of a protein, typically describing physicochemical properties of secondary structure elements. As an obsolete concept, it indicates that this classification is no longer in current use or has been replaced in the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which specific concepts are considered subtypes of Obsolete concept (EDAM), such as Protein features report (membrane regions)? | Are all Protein features report (membrane regions) instances categorized under Obsolete concept (EDAM)? | To which broader classifications does Protein features report (membrane regions) pertain within EDAM? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RNAi report\nDescription: RNAi report is defined as a subclass of Obsolete concept (EDAM). This class represents topics concerning RNAi (RNA interference) experiments. Its classification under \"Obsolete concept\" indicates that this topic is no longer in active use within the ontology, although it historically referred to documenting or reporting on RNAi experimental data or findings.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is RNAi report categorized under the broader class of Obsolete concept (EDAM)? | What are the more general categories to which RNAi report belongs? | Which concepts are specific instances or subtypes of Obsolete concept (EDAM), including RNAi report? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence retrieval\nDescription: Sequence retrieval is defined as a subclass of Obsolete concept (EDAM), indicating that it represents a retired or deprecated concept within the EDAM ontology. This class encompasses methods for directly querying a sequence data resource—typically a sequence database—and retrieving sequences and/or their annotations. Direct retrieval methods, such as dbfetch, are included, but methods that perform calculations or further analysis on the sequences are excluded from this category.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Sequence retrieval categorized under the broader class of Obsolete concept (EDAM)? | What specific concepts are designated as subtypes of Obsolete concept (EDAM), including Sequence retrieval? | Which higher-level groupings encompass Sequence retrieval within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ligand identifier\nDescription: Ligand identifier is a subclass of Obsolete concept (EDAM), meaning it is considered outdated or superseded within the ontology. It is defined as a code word used to represent a ligand, such as those assigned in a PDB (Protein Data Bank) file. This classification and definition clarify that the concept was primarily employed to specify ligand codes in structural data resources but is no longer actively used.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which higher-level concepts encompass Ligand identifier within the EDAM ontology? | Is Ligand identifier currently categorized as an instance of Obsolete concept (EDAM)? | What identifiers are classified as obsolete concepts according to EDAM? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pfam clan ID\nDescription: Pfam clan ID is defined as a subclass of Protein family accession, representing the accession number associated specifically with a Pfam clan. This class captures unique identifiers used for referencing Pfam clans within the broader context of protein family accessions.\nAxiom: {'subClassOf': ['Protein family accession']}\nGenerated CQs:", "output": "What higher-level classifications does Pfam clan ID belong to within protein family ontologies? | Is every Pfam clan ID classified under the broader category of Protein family accession? | Which specific identifiers fall under the class Protein family accession, such as Pfam clan ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DragonDB author identifier\nDescription: DragonDB author identifier is defined as a subclass of Author ID, representing an identifier specifically assigned to authors within the DragonDB database. This class ensures that any instance identified as a DragonDB author identifier is formally recognized as a type of Author ID, uniquely referencing author entities in the DragonDB resource.\nAxiom: {'subClassOf': ['Author ID']}\nGenerated CQs:", "output": "Which identifier types are classified under Author ID, including DragonDB author identifier? | What broader categories encompass DragonDB author identifier? | Is DragonDB author identifier a more specific form of Author ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GenePix\nDescription: GenePix is defined as a subclass of Gene Pix. This indicates that any individual classified as GenePix must also meet all criteria associated with Gene Pix. No additional property restrictions, equivalence, or disjointness axioms are specified, thus GenePix inherits all characteristics of its superclass.\nAxiom: {'subClassOf': ['Gene Pix']}\nGenerated CQs:", "output": "Is Gene Pix a generalization of GenePix? | Which entities are more specific than Gene Pix, such as GenePix? | To what broader classes does GenePix belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Carbohydrates\nDescription: Carbohydrates is a subclass within the broader domain of Biochemistry. This class focuses on topics related to carbohydrates, typically encompassing their structural information. It formalizes the study and categorization of carbohydrates as chemical compounds within biochemistry, emphasizing their molecular structure and relevance in biological systems.\nAxiom: {'subClassOf': ['Biochemistry']}\nGenerated CQs:", "output": "Are Carbohydrates categorized under the broader domain of Biochemistry? | What higher-level classifications include Carbohydrates within their scope? | Which specific entities are classified as subtypes of Biochemistry, such as Carbohydrates? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene features (SECIS element)\nDescription: Gene features (SECIS element) is defined as a subclass of Obsolete concept (EDAM), indicating that this concept is no longer considered current or in active use. It is described as a report on the selenocysteine insertion sequence (SECIS) element in a DNA sequence, which pertains to the identification or annotation of SECIS elements involved in the incorporation of selenocysteine during translation. The obsolete status suggests that this class has been deprecated in favor of more up-to-date concepts.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "To which broader EDAM categories does the SECIS element gene feature belong? | Which gene features are defined as subclasses of the obsolete concept (EDAM), such as the SECIS element? | Is the SECIS element gene feature categorized under the obsolete concept class from EDAM? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein folding report\nDescription: Protein folding report is defined as a subclass of Obsolete concept (EDAM), indicating that this concept is no longer in active use. It refers to a report detailing the analysis or modeling of protein folding properties, folding pathways, and identifying residues or sites key to protein folding, such as nucleation or stabilization centers. This class encompasses documentation surrounding investigations into the mechanisms and factors governing protein folding.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which concepts fall under the category of Obsolete concept (EDAM), specifically including Protein folding report? | Is Protein folding report classified as a kind of Obsolete concept (EDAM)? | What broader conceptual group does Protein folding report belong to according to the taxonomy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Immunology\nDescription: Immunology is a subclass of Biomedical science, focusing on the application of information technology to the study of immunological processes, including immunological genes, proteins, peptide ligands, antigens, and related topics. This class captures the intersection of informatics and immunology within the broader context of biomedical sciences.\nAxiom: {'subClassOf': ['Biomedical science']}\nGenerated CQs:", "output": "What are the specialized fields that fall under Biomedical science, such as Immunology? | Is Immunology classified under the broader category of Biomedical science? | Which overarching scientific domains encompass Immunology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiProDB ID\nDescription: DiProDB ID is defined as a subclass of Oligonucleotide ID, representing an identifier specifically assigned to a dinucleotide property within the DiProDB database. This class is intended to uniquely reference dinucleotide properties catalogued in DiProDB, ensuring structured identification within oligonucleotide-related datasets.\nAxiom: {'subClassOf': ['Oligonucleotide ID']}\nGenerated CQs:", "output": "Which identifiers are considered specific forms of Oligonucleotide ID, including DiProDB ID? | What more general identifier categories encompass DiProDB ID? | Is DiProDB ID classified under the broader category of Oligonucleotide ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Wilcoxon\nDescription: Wilcoxon is defined as a subclass of algorithm, indicating that all instances of Wilcoxon are considered algorithms. No further property constraints or disjointness are specified, so its principal characteristic is its classification under the broader category of algorithm.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Which algorithms encompass Wilcoxon as a more specialized form? | What broader categories does Wilcoxon, as a subclass, fall under? | Is Wilcoxon classified as a specific kind of algorithm? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Neurobiology\nDescription: Neurobiology is a subclass of Biomedical science, focused on the study of the nervous system and brain, including their anatomy, physiology, and functional aspects. This class encompasses research and knowledge relating to how nervous tissue develops, operates, and influences behavior and health.\nAxiom: {'subClassOf': ['Biomedical science']}\nGenerated CQs:", "output": "What disciplines are categorized under Biomedical science, specifically including Neurobiology? | Which higher-level scientific categories encompass Neurobiology? | Is Neurobiology classified as a subset of Biomedical science? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pascal\nDescription: Pascal is defined as a subclass of programming language. This specifies that every instance of Pascal is inherently a programming language, inheriting all general characteristics and constraints of programming languages. No additional property restrictions or distinctions are currently asserted for this class.\nAxiom: {'subClassOf': ['programming language']}\nGenerated CQs:", "output": "What broader classes include Pascal as a member? | Which programming languages have Pascal as a specific example? | Is Pascal categorized as a type of programming language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence cutting\nDescription: Sequence cutting is defined as a subclass of Sequence editing, representing an operation that involves cutting or removing characters or a specific region from a molecular sequence. This class specifically captures the molecular sequence alteration process where a segment is excised, aligning with its role as a specialized form of sequence editing.\nAxiom: {'subClassOf': ['Sequence editing']}\nGenerated CQs:", "output": "Which higher-level classes contain Sequence cutting as a subclass? | What specific subtypes are encompassed within Sequence editing, including Sequence cutting? | Does Sequence cutting fall under the general category of Sequence editing? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Physicochemical property data processing\nDescription: Physicochemical property data processing is defined as a subclass of Obsolete concept (EDAM), representing processes that involve reading and/or writing data related to the physicochemical properties of molecules. This class is considered obsolete, meaning it is no longer recommended for use in current ontological frameworks.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "To which higher-level categories does Physicochemical property data processing belong? | Is Physicochemical property data processing classified as a type of Obsolete concept (EDAM)? | Which specific concepts are categorized under Obsolete concept (EDAM), including Physicochemical property data processing? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GenePix Pro [Axon Instruments]\nDescription: GenePix Pro [Axon Instruments] is defined as a subclass of GenePix Pro. This indicates that it inherits all characteristics and constraints of GenePix Pro, but may also include additional specific features or distinctions related to the Axon Instruments variant. No further disjointness or property restrictions are specified for this class.\nAxiom: {'subClassOf': ['GenePix Pro']}\nGenerated CQs:", "output": "Is GenePix Pro [Axon Instruments] classified under the broader category of GenePix Pro? | What higher-level categories include GenePix Pro [Axon Instruments] as a member? | Which software tools are specialized types of GenePix Pro, such as GenePix Pro [Axon Instruments]? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Locus ID (MMP)\nDescription: Locus ID (MMP) is defined as a subclass of Locus ID, representing identifiers specifically assigned to loci within the Maize Mapping Project. These identifiers uniquely reference genetic loci mapped in the context of this project, ensuring precise identification and integration with broader genetic resources.\nAxiom: {'subClassOf': ['Locus ID']}\nGenerated CQs:", "output": "What distinguishes Locus ID (MMP) as a specialized form of Locus ID? | Which instances are classified under Locus ID (MMP) within the overall set of Locus ID? | What hierarchical categories encompass Locus ID (MMP)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Reaction ID (SABIO-RK)\nDescription: Reaction ID (SABIO-RK) is defined as a subclass of Reaction ID and functions as an identifier for biological reactions specifically sourced from the SABIO-RK reactions database. This class ensures that any instance categorized as Reaction ID (SABIO-RK) serves to uniquely identify a biological reaction entry within the SABIO-RK database.\nAxiom: {'subClassOf': ['Reaction ID']}\nGenerated CQs:", "output": "What broader categories can Reaction ID (SABIO-RK) be classified under? | Does Reaction ID (SABIO-RK) belong to the more general class of Reaction ID? | Which specific types of Reaction ID encompass Reaction ID (SABIO-RK)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: outline document format\nDescription: outline document format is defined as a subclass of data format specification. This means it represents a specific type of data format specification focused on encoding or structuring outline documents, distinguishing it from other forms of data format specifications.\nAxiom: {'subClassOf': ['data format specification']}\nGenerated CQs:", "output": "Which types are encompassed by data format specification, such as outline document format? | Is outline document format classified under data format specification? | What higher-level categories does outline document format fall within? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Local-pooled-error\nDescription: Local-pooled-error is defined as a subclass of algorithm, indicating that it represents a specific type of algorithm. No further restrictions or distinguishing axioms are specified, so any instance of local-pooled-error must also be an instance of algorithm.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "What are the specific types of algorithm that include Local-pooled-error? | Does Local-pooled-error fall under the general category of algorithm? | To which broader classes does Local-pooled-error belong in the ontology hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (JCVI)\nDescription: Gene ID (JCVI) is a subclass of Gene ID and represents a unique identifier assigned to a gene by the J. Craig Venter Institute (JCVI). This ensures distinct identification and referencing of genes specifically annotated by JCVI within biological databases.\nAxiom: {'subClassOf': ['Gene ID']}\nGenerated CQs:", "output": "Does Gene ID (JCVI) represent a specialized form of Gene ID? | What specific identifiers are encompassed by the broader category Gene ID, such as Gene ID (JCVI)? | To which general identifier classes does Gene ID (JCVI) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid property\nDescription: Nucleic acid property is a subclass of Molecular property, representing reports that primarily describe intrinsic physical, chemical, or other properties of nucleic acid molecules, rather than their position in a sequence. This class encompasses broad data types, typically based on the analysis of nucleic acid sequence or structural data, and serves as a placeholder for more specific nucleic acid property types.\nAxiom: {'subClassOf': ['Molecular property']}\nGenerated CQs:", "output": "What specific properties are categorized under Molecular property, such as Nucleic acid property? | Does every Nucleic acid property fall under the broader group of Molecular properties? | Which higher-level classes encompass the Nucleic acid property category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Secondary structure processing\nDescription: Secondary structure processing is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer in active use within the EDAM ontology. This class refers to processes involving the reading and/or writing of molecular secondary structure, encompassing the handling or manipulation of such structural information.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which concepts are defined as subclasses of Obsolete concept (EDAM)? | To what higher-level groupings does Secondary structure processing belong? | Is Secondary structure processing categorized under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Affymetrix probe sets library file\nDescription: Affymetrix probe sets library file is defined as a subclass of Obsolete concept (EDAM). This class refers to an Affymetrix library file containing information about which probes belong to which probe set. As it is classified under obsolete concepts, it is considered deprecated within the ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader conceptual groups include Affymetrix probe sets library file? | Is Affymetrix probe sets library file classified as an instance of the broader Obsolete concept (EDAM)? | Which specific concepts are categorized under Obsolete concept (EDAM), such as Affymetrix probe sets library file? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence-profile alignment (Domainatrix signature)\nDescription: Sequence-profile alignment (Domainatrix signature) is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer in active use or recommended for current applications. This class represents the alignment of molecular sequences to a Domainatrix signature, where the signature itself embodies a sequence alignment. This concept is retained for historical or reference purposes within the ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Sequence-profile alignment (Domainatrix signature) classified under the broader category of Obsolete concept (EDAM)? | What are the more specific concepts included within Obsolete concept (EDAM), such as Sequence-profile alignment (Domainatrix signature)? | Which higher-level categories does Sequence-profile alignment (Domainatrix signature) fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Primer3 internal oligo mishybridizing library\nDescription: Primer3 internal oligo mishybridizing library is a subclass of Obsolete concept (EDAM). It represents a library of nucleotide sequences specifically designated to be avoided during hybridization events involving internal oligos. The purpose of this library is to prevent internal oligos from hybridizing to these sequences, rather than initiating priming from them. The library data is provided in a restricted FASTA format. As a member of the \"Obsolete concept (EDAM)\" category, this concept is no longer recommended for current use.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What specialized concepts are subsumed by Obsolete concept (EDAM), including Primer3 internal oligo mishybridizing library? | Does Primer3 internal oligo mishybridizing library fall under the general classification of Obsolete concept (EDAM)? | Which broader classes include Primer3 internal oligo mishybridizing library as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Calculation\nDescription: Calculation is defined as a subclass of Analysis. This class encompasses mathematical determinations of the value of something, typically a property of a molecule. Any individual of this class represents a process or act in which a quantitative or qualitative property—especially of a molecule—is derived through mathematical means, reflecting its analytical role within the ontology.\nAxiom: {'subClassOf': ['Analysis']}\nGenerated CQs:", "output": "Is Calculation categorized as a specific type of Analysis? | Which broader classes does Calculation belong to within the ontology? | What specialized concepts fall under the broader class of Analysis, such as Calculation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Strain data format\nDescription: Strain data format is defined as a subclass of the obsolete concept (EDAM), indicating that it is no longer actively maintained or recommended for use. It refers to the format used for reports on organism strain data or cell lines. This classification suggests that while historically relevant, this data format is now superseded or discouraged in current practices.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What more general categories include Strain data format within the ontology? | Is Strain data format classified as a type of Obsolete concept (EDAM)? | Which data formats fall under the broader category of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Distribution clause\nDescription: Distribution clause is defined as a subclass of license clause, indicating that it represents a specific type or aspect of licensing terms. Any individual of Distribution clause inherently possesses all characteristics of a license clause, but with additional specialization relevant to distribution-related conditions within a license.\nAxiom: {'subClassOf': ['license clause']}\nGenerated CQs:", "output": "Is a distribution clause categorized as a type of license clause? | What broader classes encompass a distribution clause, such as license clause? | Which specific clauses fall under the classification of license clause, including distribution clause? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein sites and features\nDescription: Protein sites and features is defined as a subclass of the obsolete concept (EDAM), indicating that this class is deprecated and should not be used for new annotation. It refers to topics concerning the detection, identification, and analysis of positional features in proteins, such as functional sites. This class is preserved for historic or compatibility purposes rather than active use in current ontology models.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader ontology classes encompass protein sites and features in EDAM? | Which specific subclasses fall within the obsolete concept (EDAM), including protein sites and features? | Are all protein sites and features categorized under the obsolete concept in EDAM? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (MIPS Maize)\nDescription: Gene ID (MIPS Maize) is defined as an identifier for genetic elements specific to the MIPS Maize database. This class is a subclass of Obsolete concept (EDAM), indicating that it is no longer recommended for use in contemporary ontological modeling or data annotation. Its usage is primarily historical or for legacy data referencing within the scope of MIPS Maize genetic element identification.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are the parent classes associated with Gene ID (MIPS Maize)? | Which concepts are directly classified as Obsolete concept (EDAM) and include Gene ID (MIPS Maize)? | Does Gene ID (MIPS Maize) fall under the broader classification of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ensembl ID ('Monodelphis domestica')\nDescription: Ensembl ID ('Monodelphis domestica') is defined as a subclass of Obsolete concept (EDAM). This class represents identifiers for entries such as exons, genes, transcripts, or proteins from the Ensembl 'core' database specific to the 'Monodelphis domestica' division. The obsolete status indicates that this identifier or concept is no longer recommended for current use.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader EDAM concepts encompass the Ensembl ID for Monodelphis domestica? | Is Monodelphis domestica Ensembl ID classified under the category of Obsolete concept in EDAM? | Which Ensembl IDs are designated as subclasses of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Free\nDescription: Free is defined as a subclass of Purchase cost, representing instances where the cost of software is zero. This class exclusively addresses the price aspect of software and does not pertain to the broader definition of \"free software\" as established by the GNU Project, which emphasizes user freedoms and community rights. The scope of this class is limited solely to monetary cost, clarifying that \"free\" in this context means no purchase payment is required for the software.\nAxiom: {'subClassOf': ['Purchase cost']}\nGenerated CQs:", "output": "Under what broader purchase cost categories does Free fall? | Is Free regarded as a specialized form of Purchase cost? | Which specific purchase costs include Free as an instance or subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Alignment format (XML)\nDescription: Alignment format (XML) is a subclass of Alignment format, specifically representing the XML-based standard used for encoding molecular sequence alignment information. This class formalizes alignment data expressed in XML format, ensuring structured, standardized representation and exchange within bioinformatics workflows.\nAxiom: {'subClassOf': ['Alignment format']}\nGenerated CQs:", "output": "What are the direct subclasses found under Alignment format, including Alignment format (XML)? | Is Alignment format (XML) categorized as a kind of Alignment format? | Which higher-level classification groups include Alignment format (XML)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Virus annotation (taxonomy)\nDescription: Virus annotation (taxonomy) is defined as a subclass of Obsolete concept (EDAM), indicating that it is considered outdated within the context of the ontology. It is described as an informative report on the taxonomy of a specific virus, providing taxonomic classification details relevant to viral species.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader classifications encompass Virus annotation (taxonomy) within the ontology? | Which concepts are specialized forms of Obsolete concept (EDAM), such as Virus annotation (taxonomy)? | Is Virus annotation (taxonomy) categorized under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Databank\nDescription: Databank is defined as a subclass of the obsolete concept (EDAM), indicating that it represents a concept no longer in active use. It is described as a flat-file (textual) data archive, typically meaning a structured collection of data stored in plain text format, rather than in a relational database or other advanced data management system. This class formalizes the notion of simple, text-based data repositories that have since been superseded by more modern data management paradigms.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What more general concepts encompass Databank within the ontology? | Which concepts are categorized under Obsolete concept (EDAM), including Databank? | Is Databank classified as a type of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mass spectrometry experiment\nDescription: Mass spectrometry experiment is a subclass of Obsolete concept (EDAM), indicating that it represents a topic or category that is now considered outdated within the EDAM framework. It is defined as a topic concerning mass spectrometry experiments, relating to experimental procedures or studies utilizing mass spectrometry techniques.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What higher-level concepts encompass Mass spectrometry experiment in this ontology? | Which specific experimental types fall within the category of Obsolete concept (EDAM)? | Is Mass spectrometry experiment classified under the broader group of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence composition calculation (nucleic acid)\nDescription: Sequence composition calculation (nucleic acid) is defined as a subclass of Obsolete concept (EDAM). It refers to methods or processes used to calculate the base frequency or word (oligonucleotide) composition within a nucleotide sequence. This concept is considered obsolete in the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader category does Sequence composition calculation (nucleic acid) belong to within the ontology? | Which specific concepts fall under the Obsolete concept (EDAM) category, including Sequence composition calculation (nucleic acid)? | Is Sequence composition calculation (nucleic acid) categorized under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RefSeq accession\nDescription: RefSeq accession is defined as a subclass of Sequence accession (hybrid) and represents an accession number uniquely identifying a database entry in the RefSeq database. This class ensures traceability and standard reference across biological sequence data as captured within RefSeq records.\nAxiom: {'subClassOf': ['Sequence accession (hybrid)']}\nGenerated CQs:", "output": "To what higher-level class does RefSeq accession belong within the sequence accession hierarchy? | Which accessions are recognized as more specific types within Sequence accession, including RefSeq accession? | Does the RefSeq accession category fall under the broader group of Sequence accession? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Secondary structure alignment\nDescription: Secondary structure alignment is defined as a subclass of Alignment. It refers specifically to the alignment of the one-dimensional representations of the secondary structure elements of two or more molecules. This class restricts members to those alignments that are based on comparing features such as alpha helices and beta strands, rather than primary sequence or three-dimensional structure.\nAxiom: {'subClassOf': ['Alignment']}\nGenerated CQs:", "output": "Which types of Alignment include Secondary structure alignment as a more specialized form? | Is Secondary structure alignment categorized under the broader concept of Alignment? | What general classifications encompass Secondary structure alignment as a subcategory? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Genotype and phenotype data\nDescription: Genotype and phenotype data is classified as a subclass of the Obsolete concept (EDAM), indicating that it is deprecated in the ontology. The class refers to data pertaining to a particular genotype, phenotype, or the relationship between a genotype and phenotype. This classification clarifies that any instance must represent information about genetic makeup, observable traits, or their associations, but the use of this class is discouraged in favor of more current concepts.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Does Genotype and phenotype data fall under the broader classification of Obsolete concept (EDAM)? | What are the broader conceptual categories to which Genotype and phenotype data is assigned in this context? | Which specific data types are included as subclasses beneath Obsolete concept (EDAM), such as Genotype and phenotype data? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence type\nDescription: Sequence type is a subclass of Obsolete concept (EDAM). It refers to a label (text token) describing a type of molecular sequence, which may reflect either the molecule (such as protein, nucleic acid, etc.) or characteristics of the sequence itself (such as being gapped or ambiguous). This concept is retained for reference but is categorized as obsolete within the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Sequence type categorized under the broader class of Obsolete concept (EDAM)? | What higher-level classes encompass Sequence type within the ontology? | Which subclasses fall under Obsolete concept (EDAM), including Sequence type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: usage non commercial only\nDescription: The class usage non commercial only is defined as a subclass of Usage restricted, indicating that its members are subject to usage limitations. Specifically, individuals in this class are permitted to use the associated resource only for non-commercial purposes, excluding any commercial exploitation or profit-making activities. This formalization ensures that any resource labeled with usage non commercial only inherits all general usage restrictions while explicitly prohibiting commercial use.\nAxiom: {'subClassOf': ['Usage restricted']}\nGenerated CQs:", "output": "Which overarching restrictions encompass usage non commercial only? | Is usage non commercial only classified under the broader category of Usage restricted? | What types fall under Usage restricted, including usage non commercial only? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NCBI gene report format\nDescription: NCBI gene report format is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer actively used or maintained. It refers to the entry (gene) format used by the NCBI database. Members of this class pertain to the data structure or template formerly applied for representing gene records in NCBI, but its classification as obsolete implies supersession by alternative formats or standards.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is NCBI gene report format classified under the broader category of Obsolete concept (EDAM)? | Which report formats are subclasses of Obsolete concept (EDAM), including NCBI gene report format? | To which obsolete conceptual categories does NCBI gene report format belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cardiology\nDescription: Cardiology is defined as a subclass of Medicine concerned with the study, diagnosis, and treatment of diseases and abnormalities of the heart and circulatory system. This class represents a medical specialty focused on cardiovascular health within the broader domain of medicine.\nAxiom: {'subClassOf': ['Medicine']}\nGenerated CQs:", "output": "Does Cardiology fall under the broader discipline of Medicine? | Under which major domains is Cardiology classified? | Which academic fields are more specialized than Medicine, such as Cardiology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TIGRFam entry format\nDescription: TIGRFam entry format is defined as a subclass of Obsolete concept (EDAM). It refers to the entry format used in the TIGRFam protein secondary database. This class is considered obsolete, indicating that it is no longer in active use or has been replaced in the relevant ontology or database context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is TIGRFam entry format classified under the broader concept of Obsolete concept (EDAM)? | Which higher-level categories encompass TIGRFam entry format within the ontology? | What formats are recognized as more specific instances of Obsolete concept (EDAM), such as TIGRFam entry format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Systems medicine\nDescription: Systems medicine is formally defined as a subclass of Medicine. It is an interdisciplinary field focused on understanding the dynamic systems of the human body as an integrated whole, incorporating biochemical, physiological, and environmental interactions essential to sustaining life. This classification emphasizes its foundational connection to Medicine while highlighting its systems-based, integrative approach.\nAxiom: {'subClassOf': ['Medicine']}\nGenerated CQs:", "output": "What higher-level categories include Systems medicine within their scope? | Does Systems medicine fall under the broader classification of Medicine? | Which subfields are encompassed by Medicine, including Systems medicine? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene name (ASPGD)\nDescription: Gene name (ASPGD) is defined as a subclass of Obsolete concept (EDAM), indicating it represents an outdated or retired concept within the ontology. It specifically refers to the name of a gene recorded in the Aspergillus Genome Database.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Can Gene name (ASPGD) be classified under the broader category of Obsolete concept (EDAM)? | What are the direct superclasses of Gene name (ASPGD)? | Which subclasses fall under Obsolete concept (EDAM), and does Gene name (ASPGD) appear among them? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: averaging\nDescription: averaging is defined as a subclass of information processing. This means that averaging is considered a specific type of information processing activity. Any instance of averaging inherits all characteristics of information processing, but is more specifically concerned with the methods or processes by which multiple values are combined to produce a representative value.\nAxiom: {'subClassOf': ['information processing']}\nGenerated CQs:", "output": "Which subcategories fall within information processing, particularly including averaging? | Is averaging classified under the broader category of information processing? | What higher-level concepts encompass averaging within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein folding, stability and design\nDescription: Protein folding, stability and design is a subclass of Protein structure analysis. It concerns the study of protein stability, the folding of proteins in three-dimensional space, and the relationships between protein sequence, structure, and function. This class includes topics such as the analysis of inter-atomic or inter-residue interactions within protein structures, investigation of the effects of mutations on protein stability or function, and the rational design of proteins with specific properties, often accomplished by introducing targeted changes to existing proteins (e.g., via site-directed mutagenesis).\nAxiom: {'subClassOf': ['Protein structure analysis']}\nGenerated CQs:", "output": "Which specialized topics fall under Protein structure analysis, such as Protein folding, stability and design? | Is Protein structure analysis a broader category that encompasses Protein folding, stability and design? | What higher-level classes does Protein folding, stability and design belong to within the protein research domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Microbiology\nDescription: Microbiology is defined as a subclass of biomedical science, focusing on the biology of microorganisms. This class encompasses scientific study and research related to microorganisms, such as bacteria, viruses, fungi, and protozoa, within the broader context of biomedical sciences.\nAxiom: {'subClassOf': ['Biomedical science']}\nGenerated CQs:", "output": "Is Microbiology categorized under the broader field of Biomedical science? | Which specialized disciplines fall under Biomedical science, including Microbiology? | Under which parent scientific domains is Microbiology classified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Amino acid index (hydropathy)\nDescription: Amino acid index (hydropathy) is a subclass of Amino acid index that refers to hydrophobic, hydrophilic, or charge properties of amino acids. Members of this class specifically characterize amino acids based on their tendency to interact with water or carry a charge, reflecting fundamental chemical and physical attributes important for protein structure and function.\nAxiom: {'subClassOf': ['Amino acid index']}\nGenerated CQs:", "output": "Which specific indices are covered under the broader category of Amino acid index, including hydropathy? | To what broader index classes does Amino acid index (hydropathy) pertain? | Is Amino acid index (hydropathy) classified as a type of Amino acid index? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetic tree generation (maximum likelihood and Bayesian methods)\nDescription: Phylogenetic tree generation (maximum likelihood and Bayesian methods) is a subclass of Phylogenetic tree generation (method centric). This class encompasses computational approaches for constructing phylogenetic trees by relating sequence data to hypothetical tree topologies through models of sequence evolution. Specifically, maximum likelihood methods identify the tree topology that maximizes the likelihood function based on the given data and model, while Bayesian analysis estimates the probability distribution of possible trees (including branch lengths and topology), often employing Monte Carlo algorithms for inference.\nAxiom: {'subClassOf': ['Phylogenetic tree generation (method centric)']}\nGenerated CQs:", "output": "Which specialized approaches belong to the category of method-centric phylogenetic tree generation, such as maximum likelihood and Bayesian methods? | Is phylogenetic tree generation using maximum likelihood and Bayesian methods classified under method-centric phylogenetic tree generation? | What are the broader categories that encompass phylogenetic tree generation with maximum likelihood and Bayesian methods? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Secondary structure alignment generation\nDescription: Secondary structure alignment generation is classified as a subclass of Obsolete concept (EDAM), indicating it is no longer in active use within the ontology. This class refers to the process of aligning molecular secondary structures represented as 1D strings, but its deprecated status suggests newer or alternative methods are now preferred.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which overarching categories encompass Secondary structure alignment generation? | Is Obsolete concept (EDAM) a direct superclass of Secondary structure alignment generation? | What specialized processes are classified under Obsolete concept (EDAM), such as Secondary structure alignment generation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ILLUMINA data\nDescription: ILLUMINA data is defined as a subclass of data, meaning it represents a specific type or category of data within the broader class of data. There are no additional property restrictions or disjointness axioms specified, so ILLUMINA data inherits all characteristics of the general data class, while being distinguished as data generated by ILLUMINA technologies or platforms.\nAxiom: {'subClassOf': ['data']}\nGenerated CQs:", "output": "Is ILLUMINA data classified as a specific type of data? | Which overarching types does ILLUMINA data inherit from? | What are the specialized categories that fall under data, such as ILLUMINA data? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gap opening penalty\nDescription: Gap opening penalty is defined as a subclass of Gap penalty. It specifically refers to a penalty applied for opening a gap in an alignment, as part of sequence alignment scoring schemes. This class represents a particular type of gap penalty, distinguishing the cost incurred at the initiation of a gap from other potential gap-related penalties.\nAxiom: {'subClassOf': ['Gap penalty']}\nGenerated CQs:", "output": "Is Gap penalty a broader classification that includes Gap opening penalty? | What are the higher-level categories that encompass Gap opening penalty? | Which specific penalty types fall under the Gap penalty category, such as Gap opening penalty? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Amino acid identifier format\nDescription: Amino acid identifier format is a subclass of Obsolete concept (EDAM), indicating it is no longer in active use. It is defined as a text format used to represent amino acid residues, specifying how amino acids are notated or encoded in text-based data representations.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which formats are specified as subclasses of Obsolete concept (EDAM), including Amino acid identifier format? | Does Amino acid identifier format fall under the category of Obsolete concept (EDAM)? | What are the parent classes of Amino acid identifier format in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MHC Class II epitopes report\nDescription: MHC Class II epitopes report is defined as a subclass of Obsolete concept (EDAM). It represents a report on predicted epitopes that bind to MHC class II molecules, but is currently considered obsolete within the ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "For which more general concept in EDAM is MHC Class II epitopes report a specific subtype? | Is MHC Class II epitopes report categorized under the obsolete concepts defined in EDAM? | Which obsolete concepts in EDAM have MHC Class II epitopes report as a specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Amino acid index (van der Waals radii)\nDescription: Amino acid index (van der Waals radii) is a subclass of Amino acid index that represents data on the van der Waals radii of atoms in different amino acid residues. This class is used to characterize the steric properties of amino acids by capturing the effective size of their constituent atoms, as reflected by van der Waals radii.\nAxiom: {'subClassOf': ['Amino acid index']}\nGenerated CQs:", "output": "Which specialized indices are categorized under Amino acid index, such as Amino acid index (van der Waals radii)? | What general classes is Amino acid index (van der Waals radii) a member of? | Does Amino acid index (van der Waals radii) fall under the broader class of Amino acid index? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence assembly report\nDescription: Sequence assembly report is defined as a subclass of Sequence alignment report, representing an informative report about a DNA sequence assembly. This report includes an overall quality assessment of the assembly and provides summary statistics such as counts, average length, and number of bases related to reads, matches, non-matches, contigs, and reads in pairs.\nAxiom: {'subClassOf': ['Sequence alignment report']}\nGenerated CQs:", "output": "What higher-level categories does Sequence assembly report belong to? | Does the Sequence assembly report fall under the broader category of Sequence alignment report? | Which specific reports are classified as subclasses of Sequence alignment report? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid features report (microsatellite)\nDescription: Nucleic acid features report (microsatellite) is a subclass of Obsolete concept (EDAM), indicating that it represents a topic or conceptual category that is no longer in active use within the EDAM ontology. It focuses specifically on the subject of microsatellite polymorphism in a DNA sequence, describing topics related to the identification and analysis of repeated DNA sequences (microsatellites) and their variability.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which specific concepts are classified as subclasses of Obsolete concept (EDAM), such as Nucleic acid features report (microsatellite)? | What general categories encompass Nucleic acid features report (microsatellite) within the ontology? | Does Nucleic acid features report (microsatellite) fall under the broader category of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EPS\nDescription: EPS is defined as a subclass of Textual format and refers specifically to Encapsulated PostScript format. This indicates that EPS files are considered a type of textual file format, characterized by their structure as encapsulated PostScript documents typically used for graphics and document exchange.\nAxiom: {'subClassOf': ['Textual format']}\nGenerated CQs:", "output": "Is EPS categorized under the general class of Textual format? | Which formats are specialized forms of Textual format, with EPS as an example? | In what broader format classifications does EPS reside? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Date\nDescription: Date is defined as a subclass of \"Obsolete concept (EDAM)\", indicating it is considered outdated in the current ontology context. It is described as a temporal date, referring to a specific point or period in time. This classification signals that although the concept refers to dates or points in time, its use is deprecated within the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Date classified as a kind of Obsolete concept in the EDAM ontology? | What broader conceptual categories does Date fall under within the EDAM ontology? | Which concepts are more specific than Obsolete concept (EDAM), specifically including Date? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ensembl ID ('Gasterosteus aculeatus')\nDescription: Ensembl ID ('Gasterosteus aculeatus') is defined as a subclass of Obsolete concept (EDAM). It represents an identifier assigned to entries such as exons, genes, transcripts, or proteins in the Ensembl 'core' database for the Gasterosteus aculeatus division. This class is considered obsolete in the ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Ensembl ID ('Gasterosteus aculeatus') classified under the category of Obsolete concept (EDAM)? | Which identifiers are categorized as specializations of Obsolete concept (EDAM), including Ensembl ID ('Gasterosteus aculeatus')? | What higher-level concepts encompass Ensembl ID ('Gasterosteus aculeatus') in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein interaction networks\nDescription: Protein interaction networks is a class categorized as an obsolete concept in EDAM, indicating that it is no longer in active use or has been retired in favor of more precise terminology. The class concerns topics related to networks representing interactions between proteins. Although previously used to describe the study or organization of protein-protein interactions, this concept now falls under obsolete classifications and is not recommended for new use.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)', 'Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "To which higher-level categories does Protein interaction networks belong according to EDAM? | Which more specific concepts are encompassed under Obsolete concept (EDAM), including Protein interaction networks? | Is Protein interaction networks classified within the broader category of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Viruses\nDescription: Viruses are defined as a subclass of organisms, encompassing any entity that is or pertains to a virus or group of viruses. This class includes topics such as viral sequence and structural data, interactions among viral proteins, and viral genomes with their associated molecular sequences, genes, and annotations. The scope covers resources specific to individual viruses, groups of viruses, or viruses in general.\nAxiom: {'subClassOf': ['Organisms']}\nGenerated CQs:", "output": "Which subclasses are encompassed by Organisms, such as Viruses? | What higher-level classes include Viruses as members? | Are all Viruses categorized under the broader class of Organisms? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (HGNC)\nDescription: Gene ID (HGNC) is defined as a subclass of Gene ID. It represents an identifier specifically assigned to a gene that has been approved by the HUGO Gene Nomenclature Committee (HGNC). This ensures that each gene is uniquely and consistently identified according to HGNC standards.\nAxiom: {'subClassOf': ['Gene ID']}\nGenerated CQs:", "output": "Which identifiers are subclasses under Gene ID, such as Gene ID (HGNC)? | Is Gene ID (HGNC) classified as a more specific form of Gene ID? | What broader identifier classes does Gene ID (HGNC) fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Tool identifier\nDescription: Tool identifier is defined as a subclass of Identifier (typed), specifically representing an identifier assigned to a bioinformatics tool such as an application or web service. This class ensures that every Tool identifier is a type of typed identifier, explicitly intended for uniquely distinguishing bioinformatics tools.\nAxiom: {'subClassOf': ['Identifier (typed)']}\nGenerated CQs:", "output": "Is Tool identifier regarded as a specific kind of Identifier? | Which identifiers include Tool identifier as a more specialized type? | What broader categories encompass Tool identifier within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HMMER3\nDescription: HMMER3 is defined as a subclass of HMMER format, representing profile HMM files specifically used with HMMER software versions 3.x. This class characterizes files formatted for compatibility with the HMMER3 suite, distinguishing them from other HMMER file versions or formats.\nAxiom: {'subClassOf': ['HMMER format']}\nGenerated CQs:", "output": "Does HMMER3 fall under the general category of HMMER format? | What types are covered as subclasses of HMMER format, specifically including HMMER3? | To which higher-level classes is HMMER3 directly related? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Misspelling\nDescription: Misspelling is defined as a subclass of the obsolete concept (EDAM), indicating that it is no longer an actively maintained or recommended concept within the ontology. It refers to a common misspelling of a word, formally capturing instances where a word is not spelled correctly according to standard conventions.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Does Misspelling fall under the overarching category of Obsolete concept (EDAM)? | To which higher-level concepts is Misspelling hierarchically related within EDAM? | What specific subclasses are encompassed by the Obsolete concept (EDAM) category, including Misspelling? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NCBI locus tag\nDescription: NCBI locus tag is defined as a subclass of Locus ID, representing identifiers specifically assigned to loci in the NCBI database. This class is used to designate and reference unique loci within the NCBI data framework, ensuring standardized identification and organization of genetic loci in NCBI resources.\nAxiom: {'subClassOf': ['Locus ID']}\nGenerated CQs:", "output": "Which higher-level identifiers does NCBI locus tag fall under? | Is NCBI locus tag classified under the broader category of Locus ID? | What subclasses are encompassed by Locus ID, and does this include NCBI locus tag? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RMA++\nDescription: RMA++ is defined as a subclass of algorithm, indicating that it represents a specific type or instance of algorithm. No additional restrictions or distinctions are specified, so any entity classified as RMA++ is inherently an algorithm by definition.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Which broader conceptual categories include RMA++ based on its classification? | Is RMA++ classified under the broader grouping of algorithm? | What specific types are encompassed within the category of algorithm, and does RMA++ appear among them? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene regulatory network report\nDescription: Gene regulatory network report is defined as a subclass of Obsolete concept (EDAM). It is described as a report that typically includes a map or diagram of a gene regulatory network, providing an overview of the regulatory interactions among genes. This class is considered obsolete within the EDAM ontology context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which types are more specific than Obsolete concept (EDAM), such as gene regulatory network report? | Does the category Obsolete concept (EDAM) encompass gene regulatory network reports? | Under which higher-level groupings would a gene regulatory network report be classified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ensembl\nDescription: Ensembl is defined as a subclass of software, indicating that it represents a type of software application or platform. This classification establishes Ensembl within the broader software category, without further restrictions or specified properties.\nAxiom: {'subClassOf': ['software']}\nGenerated CQs:", "output": "Which specific instances or subclasses fall under the category of software, such as Ensembl? | What broader classes does Ensembl belong to in the ontology? | Is Ensembl classified as a type of software? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HMM emission and transition counts\nDescription: HMM emission and transition counts are defined as a subclass of Obsolete concept (EDAM). This class represents the emission and transition counts within a hidden Markov model, which are generated after the model has been determined—such as following the assignment of residues or gaps to match, delete, and insert states. This classification denotes that the concept is considered obsolete in the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Are HMM emission and transition counts classified under the broader concept of Obsolete concept (EDAM)? | Which concepts are subsumed by Obsolete concept (EDAM), including HMM emission and transition counts? | What higher-level categories encompass HMM emission and transition counts in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence features\nDescription: Sequence features is defined as a subclass of data, representing the annotation of positional features on molecular sequences that can be specifically mapped to positions within the sequence. This class includes standardized feature tables and general reports documenting sequence features, potentially requiring internal conversion for integration. Sequence features facilitate the structured description and reporting of specific regions or attributes along molecular sequences.\nAxiom: {'subClassOf': ['data']}\nGenerated CQs:", "output": "Which classes are more specific than data, such as Sequence features? | Under which broader classes does Sequence features fall? | Is Sequence features categorized as a subset of data? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RNA-Seq alignment\nDescription: RNA-Seq alignment is defined as a subclass of the Obsolete concept (EDAM), indicating that it is considered outdated within the ontology. It concerns the alignment of large numbers of short RNA sequence reads to a reference genome—a process that has unique challenges due to the complexities introduced by RNA splicing. As a specialized topic within the broader category of sequence alignment, RNA-Seq alignment addresses issues specific to transcriptomic data, such as handling spliced reads.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "To which upper-level categories does RNA-Seq alignment fall, considering its status as Obsolete concept (EDAM)? | Is RNA-Seq alignment classified as an instance within the wider class of Obsolete concept (EDAM)? | Which concepts are narrower in scope than Obsolete concept (EDAM), particularly including RNA-Seq alignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DNA nucleotide sequence\nDescription: DNA nucleotide sequence is defined as a subclass of biological sequence data. It represents linear data sequences composed specifically of DNA nucleotides (adenine, thymine, cytosine, and guanine). This class formalizes the concept that any DNA nucleotide sequence is a type of biological sequence data, typically used to describe genetic information at the molecular level.\nAxiom: {'subClassOf': ['biological sequence data']}\nGenerated CQs:", "output": "Is DNA nucleotide sequence considered a specific type of biological sequence data? | Which biological sequence data subclasses include DNA nucleotide sequence? | What are the broader categories encompassing DNA nucleotide sequence? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetic tree report (tree stratigraphic)\nDescription: Phylogenetic tree report (tree stratigraphic) is defined as a subclass of Obsolete concept (EDAM). It refers to molecular clock and stratigraphic (age) data derived from phylogenetic tree analysis. This class is considered obsolete in the EDAM ontology, indicating it is no longer recommended for current usage or annotation.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Can Phylogenetic tree report (tree stratigraphic) be classified as an instance of Obsolete concept (EDAM)? | What are the subclasses identified under Obsolete concept (EDAM), including Phylogenetic tree report (tree stratigraphic)? | Which higher-level concept encompasses Phylogenetic tree report (tree stratigraphic)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Peptide identifier\nDescription: Peptide identifier is defined as a subclass of Molecule identifier. It represents an identifier assigned specifically to a peptide chain, distinguishing it from other types of molecular identifiers by its exclusive association with peptides. This class formalizes the concept of uniquely referencing peptide chains within molecular datasets or systems.\nAxiom: {'subClassOf': ['Molecule identifier']}\nGenerated CQs:", "output": "Is every Peptide identifier classified under the broader category of Molecule identifier? | Which identifier categories encompass Peptide identifier as a specific instance? | What specific types of identifiers are included within the class of Molecule identifier? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IntAct accession number\nDescription: IntAct accession number is defined as a subclass of Protein interaction ID, representing an accession number assigned to entries in the IntAct database. This class identifies unique entries documenting protein interactions within the IntAct database, ensuring standardized referencing and integration with protein interaction data resources.\nAxiom: {'subClassOf': ['Protein interaction ID']}\nGenerated CQs:", "output": "Which identifier categories encompass IntAct accession number as a specialized type? | What distinct subclasses are included within Protein interaction ID? | Is every IntAct accession number classified under Protein interaction ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Microsatellites\nDescription: Microsatellites are a subclass of DNA polymorphism characterized by very short sequences of nucleotides, specifically repeats of cytosine and adenosine, that occur in tandem and vary in repeat number among individuals. These polymorphisms are notable for their variability in the number of sequence repeats, making them useful markers in genetic studies. The class definition centers on the presence of repeated short DNA sequences within a DNA molecule, with emphasis on their role in genetic diversity.\nAxiom: {'subClassOf': ['DNA polymorphism']}\nGenerated CQs:", "output": "What broader classifications does microsatellite fall under within the context of DNA polymorphism? | Which types of DNA polymorphism include microsatellites as a specific example? | Are microsatellites recognized as a form of DNA polymorphism? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Medicine\nDescription: Medicine is defined as a subclass of Topic and is formally described as a subject concerned with research supporting healing through the diagnosis, treatment, and prevention of disease. This classification positions Medicine within the broader category of Topics, emphasizing its focus on health-related research and practices aimed at promoting healing and disease management.\nAxiom: {'subClassOf': ['Topic']}\nGenerated CQs:", "output": "What specific types fall under the category of Topic, including Medicine? | Which categories are broader than Medicine in the hierarchy? | Is Medicine classified as a subset of Topic? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GeneSNP ID\nDescription: GeneSNP ID is defined as a subclass of Sequence variation ID, representing an identifier specifically assigned to entries within the GeneSNP database. This class is intended to capture unique identifiers associated with sequence variations cataloged in the GeneSNP resource.\nAxiom: {'subClassOf': ['Sequence variation ID']}\nGenerated CQs:", "output": "What more general identifier types does GeneSNP ID inherit from? | Is Sequence variation ID a broader class that encompasses GeneSNP ID? | Which identifiers fall under the category of Sequence variation ID, such as GeneSNP ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence composition calculation (protein)\nDescription: Sequence composition calculation (protein) is a subclass of Obsolete concept (EDAM). This class represents calculations that determine the amino acid frequency or the word composition within a protein sequence, typically used to analyze sequence characteristics. As an obsolete concept, it indicates that this analytical function is outdated or has been superseded in the relevant ontology or domain context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Sequence composition calculation (protein) categorized under Obsolete concept (EDAM)? | What broader class does Sequence composition calculation (protein) belong to in the ontology? | Which concepts fall under the Obsolete concept (EDAM) category, such as Sequence composition calculation (protein)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PolyA signal detection\nDescription: PolyA signal detection is defined as a subclass of nucleic acid sequence feature detection. It refers specifically to the process of identifying polyadenylation signals within nucleotide sequences. This class inherits all characteristics of nucleic acid sequence feature detection and is distinguished by its focus on the detection of polyA signals, which are critical regulatory elements in gene expression and mRNA processing.\nAxiom: {'subClassOf': ['Nucleic acid sequence feature detection']}\nGenerated CQs:", "output": "What higher-level detection categories does PolyA signal detection belong to? | Is PolyA signal detection categorized as a type of Nucleic acid sequence feature detection? | Which detection methods are more specific than Nucleic acid sequence feature detection, including PolyA signal detection? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene name (Genolist)\nDescription: Gene name (Genolist) is defined as a subclass of the Obsolete concept (EDAM), indicating that it is no longer actively used or maintained. This class represents the name assigned to a gene entry from the Genolist genes database.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Gene name (Genolist) classified as a kind of Obsolete concept (EDAM)? | Which general types encompass Gene name (Genolist) within the ontology? | What specific concepts fall under Obsolete concept (EDAM), including Gene name (Genolist)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (SGN)\nDescription: Gene ID (SGN) is defined as a subclass of Gene ID and specifically refers to a gene identifier originating from the Sol Genomics Network. This class represents identifiers uniquely assigned to genes within the SGN resource, distinguishing them as a subset within the broader category of gene identifiers.\nAxiom: {'subClassOf': ['Gene ID']}\nGenerated CQs:", "output": "What identifiers are categorized under Gene ID, specifically including Gene ID (SGN)? | Is every instance classified as Gene ID (SGN) also recognized under Gene ID? | Which higher-level identifier types encompass Gene ID (SGN)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Plugin\nDescription: Plugin is defined as a subclass of role, indicating that it represents a specific type of role within the ontology. No additional property restrictions or disjointness axioms are present, so its characterization is currently limited to inheriting all features and constraints of the role class.\nAxiom: {'subClassOf': ['role']}\nGenerated CQs:", "output": "Which entities are classified under the broader category of role, including Plugin? | To which higher-level categories does Plugin belong within the ontology? | Is Plugin categorized as a type of role? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Restriction enzyme name\nDescription: Restriction enzyme name is a subclass of Enzyme name. It refers specifically to the name assigned to a restriction enzyme, a type of enzyme that recognizes and cuts DNA at specific sequences. This class is formally situated within the broader category of enzyme names, distinguishing names of restriction enzymes from other enzyme types.\nAxiom: {'subClassOf': ['Enzyme name']}\nGenerated CQs:", "output": "Which general categories encompass Restriction enzyme name within the enzyme classification? | What specific enzyme names are classified as subclasses of Enzyme name, including Restriction enzyme name? | Is Restriction enzyme name classified under the broader category of Enzyme name? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid features (siRNA)\nDescription: Nucleic acid features (siRNA) is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer an active or recommended term within the ontology. According to its definition, this class refers to a report on siRNA duplexes in mRNA. This formalization designates the class as representing obsolete concepts specifically related to the documentation of siRNA duplex features in messenger RNA.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Obsolete concept (EDAM) a broader category that includes Nucleic acid features (siRNA)? | Which concepts are more specific than Obsolete concept (EDAM), such as Nucleic acid features (siRNA)? | To which higher-level classifications does Nucleic acid features (siRNA) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pairwise protein tertiary structure alignment (all atoms)\nDescription: Pairwise protein tertiary structure alignment (all atoms) is an obsolete concept, classified as a subclass of Obsolete concept (EDAM). It refers to the alignment (superimposition) of exactly two protein tertiary (3D) structures, where all atoms are considered in the comparison. This class is no longer in active use, as indicated by its placement under the obsolete category.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Pairwise protein tertiary structure alignment (all atoms) classified as an instance of the broader Obsolete concept (EDAM)? | Which specific concepts are classified under Obsolete concept (EDAM), including Pairwise protein tertiary structure alignment (all atoms)? | To which upper-level categories does Pairwise protein tertiary structure alignment (all atoms) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SVG\nDescription: SVG is defined as a subclass of vector image format, indicating that every SVG is a type of vector image format. This classification situates SVG within the broader category of digital graphics that encode images using geometric and vector-based representations rather than rasterized pixels.\nAxiom: {'subClassOf': ['vector image format']}\nGenerated CQs:", "output": "Does SVG fall under the broader classification of vector image format? | Which image formats are included as subclasses within vector image format, such as SVG? | Of which more general categories is SVG a member according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Dotplot\nDescription: Dotplot is defined as a subclass of Sequence alignment report. It represents a report or graphical representation that depicts sequence similarities, typically identified through word-matching or character comparison methods. Members of this class provide visual summaries to highlight regions of similarity between biological sequences, facilitating the analysis of alignment patterns.\nAxiom: {'subClassOf': ['Sequence alignment report']}\nGenerated CQs:", "output": "Which report types are more specific than Sequence alignment report, such as Dotplot? | To which general categories does Dotplot belong within the context of sequence alignment documentation? | Is Dotplot categorized under the broader class of Sequence alignment report? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Systems biology\nDescription: Systems biology is defined as a subclass of Biology, focused on the holistic modeling and analysis of complex biological systems and their interactions. This class includes resources such as databases of models and methods used to construct or analyze these models, emphasizing an integrative approach to understanding biological complexity.\nAxiom: {'subClassOf': ['Biology']}\nGenerated CQs:", "output": "Is Systems biology classified as a specialized field within Biology? | What specific branches are encompassed by Biology, including Systems biology? | To which higher-level categories does Systems biology pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Dihedral angle validation\nDescription: Dihedral angle validation is a subclass of protein model validation. It is defined as the process of identifying, for each residue in a protein structure, any improper dihedral (phi/psi) angles. This class characterizes validation approaches focused specifically on assessing the correctness of backbone torsion angles in protein models.\nAxiom: {'subClassOf': ['Protein model validation']}\nGenerated CQs:", "output": "What are the overarching validation categories that encompass Dihedral angle validation? | Does Dihedral angle validation fall under the broader classification of Protein model validation? | Which validation methods are categorized as more specific types of Protein model validation, such as Dihedral angle validation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterPro architecture image\nDescription: InterPro architecture image is defined as a subclass of Obsolete concept (EDAM). It represents an image that visually depicts the arrangement of InterPro domains within a protein sequence, illustrating domain architecture as a series of non-overlapping domains. Such images may be generated from sequences screened against InterPro or derived directly from InterPro entry sequences. This class is considered obsolete.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which specific concepts are subclasses of Obsolete concept (EDAM), including InterPro architecture image? | Under which broader concept does InterPro architecture image fall? | Is InterPro architecture image categorized under Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: organization\nDescription: organization is defined as a subclass of material entity, indicating that every organization is regarded as a physical or material entity within the ontology. There are currently no further property restrictions or disjointness axioms specified for this class, so its definition is limited to its position as a specialized type of material entity.\nAxiom: {'subClassOf': ['material entity']}\nGenerated CQs:", "output": "Is an organization categorized as a type of material entity? | Which entities are classified as more specific forms of material entity, such as organization? | To what higher-level categories does organization belong according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: URN\nDescription: URN is defined as a subclass of URI, indicating that every URN is also a URI. It represents a Uniform Resource Name, which is a specific type of URI intended to serve as a unique, persistent identifier for a resource, independent of its location.\nAxiom: {'subClassOf': ['URI']}\nGenerated CQs:", "output": "Is URN categorized as a type of URI? | Which entities are classified under the URI category, including URN? | To what higher-level class does the concept of URN belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bayesian Model\nDescription: Bayesian Model is defined as a subclass of algorithm, indicating that it is a specialized form of algorithm. Members of this class use principles of Bayesian inference to update probabilities or model parameters based on observed data, aligning with the general approach of algorithms in processing and decision-making.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "What are the direct subclasses of algorithm, such as Bayesian Model? | Is Bayesian Model classified as a specific type of algorithm? | For which parent categories does Bayesian Model qualify as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Standardization and normalization\nDescription: Standardization and normalization is a subclass of Analysis, focusing specifically on processes designed to standardize or normalize data. Members of this class represent analytical procedures or techniques whose primary purpose is to bring data into a common format or scale, ensuring comparability and consistency across datasets.\nAxiom: {'subClassOf': ['Analysis']}\nGenerated CQs:", "output": "What types of Analysis include Standardization and normalization as a subclass? | Is Standardization and normalization categorized under the broader class of Analysis? | Which general classes encompass Standardization and normalization? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Job metadata\nDescription: Job metadata is a subclass of Obsolete concept (EDAM) and represents textual metadata associated with a submitted or completed job. This class encapsulates descriptive information pertaining to job instances, but is considered obsolete within the EDAM ontology context.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Which broader categories encompass Job metadata? | What concepts are categorized as subclasses of Obsolete concept (EDAM)? | Is Job metadata an instance of the broader category Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Platform unrestricted\nDescription: Platform unrestricted is defined as a subclass of Platform clause. This means every instance of Platform unrestricted is also a Platform clause, inheriting all its properties and relationships, but may have no additional restrictions or specific platform-related constraints imposed by its definition.\nAxiom: {'subClassOf': ['Platform clause']}\nGenerated CQs:", "output": "Which specific types are encompassed by the Platform clause class, such as Platform unrestricted? | Does Platform unrestricted fall under the classification of Platform clause? | What are the broader classes to which Platform unrestricted is assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cellular process pathways report\nDescription: Cellular process pathways report is defined as a subclass of the obsolete concept (EDAM), indicating that it represents a topic that is no longer in active use or is deprecated. According to its definition, it concerns topics related to cellular process pathways—mechanisms and interactions that occur within cells. This class should not be used for new classifications due to its obsolete status.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What are the specific concepts that fall within Obsolete concept (EDAM), such as Cellular process pathways report? | Is Cellular process pathways report classified under the broader category of Obsolete concept (EDAM)? | Which higher-level categories does Cellular process pathways report belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TIGRFam ID\nDescription: TIGRFam ID is defined as a subclass of Protein family accession. It represents the accession number assigned to an entry (family) within the TIGRFam database, serving as a unique identifier for protein families curated in this resource.\nAxiom: {'subClassOf': ['Protein family accession']}\nGenerated CQs:", "output": "To which broader accession categories does TIGRFam ID pertain? | What kinds of identifiers are encompassed under the category of Protein family accession? | Is TIGRFam ID classified as a specific type of Protein family accession? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Affymetrix probe sets information library file\nDescription: Affymetrix probe sets information library file is defined as a subclass of the obsolete concept (EDAM), indicating it is no longer considered current or maintained. This class represents Affymetrix library files that contain information about probe sets, including details such as the gene name associated with each probe set.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Does Affymetrix probe sets information library file fall under the category of Obsolete concept (EDAM)? | Which concepts are subclasses of Obsolete concept (EDAM), including Affymetrix probe sets information library file? | What higher-level classifications include Affymetrix probe sets information library file? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Data security\nDescription: Data security is defined as a subclass of Data management, focusing specifically on the protection of data assets. According to its current description, it addresses the safeguarding of data—including sensitive information such as patient health data—against unauthorized access, use, disclosure, disruption, modification, or destruction. This class thus captures all concepts and measures related to maintaining the confidentiality, integrity, and availability of data within broader data management practices.\nAxiom: {'subClassOf': ['Data management']}\nGenerated CQs:", "output": "Is Data security categorized as a type of Data management? | What broader classifications does Data security fall under? | Which concepts are defined as narrower than Data management, including Data security? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ARACNE algorithm\nDescription: ARACNE algorithm is defined as a subclass of algorithm. As an algorithm, it inherits the general properties and characteristics associated with computational procedures or problem-solving methods. No further axioms or distinguishing features are specified, so the class represents the set of algorithms known as ARACNE, without additional constraints or relations.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Which algorithms includes ARACNE algorithm as a specialized subclass? | What broader categories in the ontology does ARACNE algorithm fall under? | Is the ARACNE algorithm encompassed under the general class of algorithms? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence composition table\nDescription: Sequence composition table is defined as a subclass of Obsolete concept (EDAM). It represents a table that summarizes the composition or frequency of characters or words in a molecular sequence. This class is considered obsolete within the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader categories encompass Sequence composition table in the ontology? | Is Sequence composition table categorized under Obsolete concept (EDAM)? | Which concepts are defined as subclasses of Obsolete concept (EDAM), including Sequence composition table? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Data retrieval (database cross-reference)\nDescription: Data retrieval (database cross-reference) is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer in active use within the ontology. It refers to the action of searching a database to retrieve all relevant references to a particular entity or entry. This class has been deprecated and should be replaced with more current practices or concepts in data retrieval and database referencing.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What more general types does Data retrieval (database cross-reference) belong to within the ontology? | Which concepts are classified as subclasses of Obsolete concept (EDAM), including Data retrieval (database cross-reference)? | Is Data retrieval (database cross-reference) categorized as a kind of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein structural motif\nDescription: Protein structural motif is a subclass of Protein structure, representing a 3D coordinate and associated data for a protein (3D) structural motif. It refers to any group of contiguous or non-contiguous amino acid residues, typically forming a feature with a structural or functional role within the protein. This class captures structural motifs that are defined by their spatial configuration and functional or structural significance within protein architecture.\nAxiom: {'subClassOf': ['Protein structure']}\nGenerated CQs:", "output": "What broader classifications does Protein structural motif belong to? | Which types fall under the category of Protein structure, such as Protein structural motif? | Is every Protein structural motif included within the collection of Protein structures? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChEBI concept ID\nDescription: ChEBI concept ID is defined as a subclass of Ontology concept ID. It represents an identifier assigned to a concept within the ChEBI ontology, used for uniquely referencing entities in the ChEBI (Chemical Entities of Biological Interest) ontology.\nAxiom: {'subClassOf': ['Ontology concept ID']}\nGenerated CQs:", "output": "Which ontology concepts are superclasses of ChEBI concept IDs? | Is every ChEBI concept ID necessarily included in an ontology concept ID category? | What specific ChEBI concept IDs are categorized under a given ontology concept ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Structural data\nDescription: Structural data is a subclass of Obsolete concept (EDAM), serving as a broad data type intended as a placeholder for more specific data types. It encompasses data related to molecular structural information, although its classification as an obsolete concept indicates it has been superseded by more precise categories within the domain.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Structural data classified under the Obsolete concept (EDAM) category? | What broader ontological groups include Structural data within the EDAM schema? | Which more specific concepts are encompassed by Obsolete concept (EDAM), such as Structural data? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: gct\nDescription: gct is defined as a subclass of tab delimited file format. This means that every gct instance is a specific type of tab delimited file format, inheriting all characteristics of tab-delimited file formats while possibly adding further constraints or conventions unique to gct.\nAxiom: {'subClassOf': ['tab delimited file format']}\nGenerated CQs:", "output": "Which file formats are classified as specializations of tab delimited file format, such as gct? | What broader file format categories encompass gct? | Is gct categorized under tab delimited file format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 't-test'\nDescription: t-test is defined as a subclass of algorithm, indicating that it is a type of statistical procedure within the broader category of algorithms. This class represents methods used to determine if there is a significant difference between the means of two groups, commonly used in statistical hypothesis testing.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "What overarching classes include 't-test' as a member? | Is 't-test' categorized as a specific type of algorithm? | Which types fall under the broader class of algorithm, such as 't-test'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence cluster ID (UniRef)\nDescription: Sequence cluster ID (UniRef) is a subclass of Sequence cluster ID and is defined as the unique identifier of an entry from the UniRef database. This identifier is used to reference specific sequence clusters within the UniRef resource, ensuring precise and standardized access to cluster information.\nAxiom: {'subClassOf': ['Sequence cluster ID']}\nGenerated CQs:", "output": "Which identifiers are more specific types of Sequence cluster ID, such as Sequence cluster ID (UniRef)? | What broader identifier categories does Sequence cluster ID (UniRef) fall under? | Is Sequence cluster ID (UniRef) classified under the general category of Sequence cluster ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CGD gene report format\nDescription: CGD gene report format is an entry format associated with the Candida Genome Database, specifically designed for representing gene-related information. It is defined as a subclass of \"Obsolete concept (EDAM)\", indicating that this format is no longer in active use or has been replaced.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is CGD gene report format classified under the broader category of Obsolete concept (EDAM)? | What specific formats are categorized as subclasses of Obsolete concept (EDAM), including CGD gene report format? | Which general types encompass CGD gene report format according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein sequence properties plot\nDescription: Protein sequence properties plot is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer recommended for use within the ontology. It represents a plot illustrating the general physicochemical properties of a protein sequence, such as hydrophobicity, charge, or molecular weight distribution. This class is retained for historical reference and should not be used for new annotations.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "Is Protein sequence properties plot classified under the category of Obsolete concept (EDAM)? | Which broader conceptual group contains Protein sequence properties plot within the EDAM ontology? | What concepts are specified as subclasses of Obsolete concept (EDAM), such as Protein sequence properties plot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Drug structure\nDescription: Drug structure is defined as a subclass of Small molecule structure, representing the 3D coordinates and associated data describing the three-dimensional structure of a drug. This class specifically captures structural information essential for understanding the spatial and chemical configuration of drug molecules.\nAxiom: {'subClassOf': ['Small molecule structure']}\nGenerated CQs:", "output": "What higher-level structural categories encompass Drug structure? | Which structures are recognized as subtypes of Small molecule structure, including Drug structure? | Is Drug structure classified under the broader category of Small molecule structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NMTRAN\nDescription: NMTRAN is defined as a subclass of programming language, representing a specific type of language used for instructing computers. This classification indicates that NMTRAN shares all fundamental properties of programming languages, but possesses additional characteristics that distinguish it within this broader category.\nAxiom: {'subClassOf': ['programming language']}\nGenerated CQs:", "output": "Which programming languages encompass specializations such as NMTRAN? | Is NMTRAN recognized as a kind of programming language? | What higher-level classifications does NMTRAN fall under within programming languages? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein residue 3D cluster\nDescription: Protein residue 3D cluster is defined as a subclass of Protein residue interactions, representing groups of contacting residues within protein structures. These clusters highlight key structural residue networks, capturing the spatial and interactive organization of amino acids that contribute to the protein’s architecture and function.\nAxiom: {'subClassOf': ['Protein residue interactions']}\nGenerated CQs:", "output": "Is Protein residue 3D cluster classified as a kind of Protein residue interactions? | What broader classes does Protein residue 3D cluster fall under? | Which subclasses are encompassed within Protein residue interactions, including Protein residue 3D cluster? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Position weight matrix (PWM )\nDescription: Position weight matrix (PWM) is defined as a subclass of algorithm. PWMs are computational tools used in bioinformatics to represent motifs, such as transcription factor binding sites, by quantifying the preference for each nucleotide at every position in a sequence. As an algorithm, PWM systematically assigns weights based on observed frequencies, enabling efficient motif detection in genomic sequences.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Is Position weight matrix (PWM) categorized as a type of algorithm? | What are the parent categories for Position weight matrix (PWM) in the classification hierarchy? | Which algorithm subclasses include Position weight matrix (PWM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 'MI'\nDescription: MI is defined as a subclass of algorithm, indicating that every instance of MI is also recognized as an algorithm. No additional constraints or distinguishing characteristics are specified beyond its classification as an algorithm.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "Which algorithms have subclasses that include MI? | Is MI categorized as a specific type of algorithm? | What are the more general categories that MI is a part of? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Chi-square\nDescription: Chi-square is defined as a subclass of algorithm, indicating that it is a specific type of algorithm. No further disjointness or property restrictions are specified, so any individual of this class is understood solely as an algorithm, with no additional constraints or differentiating features provided in the current axiom.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "output": "What are the direct superclasses of Chi-square within the ontology? | Is Chi-square an instance of the broader category algorithm? | Which classes are classified under algorithm and include Chi-square? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DNA-Seq\nDescription: DNA-Seq is defined as a subclass of the Obsolete concept (EDAM) class. It refers to high-throughput sequencing techniques applied to randomly fragmented genomic DNA. This approach is commonly used in whole-genome sequencing and resequencing, as well as in studies involving SNP discovery and the identification of copy number variations and chromosomal rearrangements. The class is marked obsolete in the EDAM ontology, indicating it is deprecated for current use.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "output": "What broader classifications encompass DNA-Seq within the ontology? | Which concepts are categorized as more specific types of Obsolete concept (EDAM), including DNA-Seq? | Does DNA-Seq fall under the category of Obsolete concept (EDAM)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene features (coding region) format\nDescription: Gene features (coding region) format is a subclass of Gene annotation format, specifically designated for representing reports on coding regions within nucleotide sequences. This class formalizes formats that are used to annotate and convey information about regions of genetic sequences that code for proteins, emphasizing their role in gene annotation workflows.\nAxiom: {'subClassOf': ['Gene annotation format']}\nGenerated CQs:", "output": "To what higher-level annotation formats does Gene features (coding region) format belong? | Is Gene annotation format a more general category than Gene features (coding region) format? | Which annotation formats classify as specializations of Gene annotation format, such as Gene features (coding region) format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Locus ID (Tropgene)\nDescription: Locus ID (Tropgene) is a subclass of Locus ID and serves as an identifier specifically assigned to a locus within the Tropgene database. This class represents locus identifiers that are uniquely sourced from Tropgene, thereby distinguishing them from locus IDs in other repositories.\nAxiom: {'subClassOf': ['Locus ID']}\nGenerated CQs:", "output": "Is Locus ID (Tropgene) classified as a type of Locus ID? | Which higher-level identifier categories include Locus ID (Tropgene) as a member? | What specific identifiers are recognized under the broader class of Locus ID, such as Locus ID (Tropgene)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Molecular medicine\nDescription: Molecular medicine is defined as a subclass of translational medicine, focusing on the identification of molecular and genetic causes of diseases. It encompasses research and interventions aimed at correcting molecular-level abnormalities that lead to disease, thereby bridging fundamental molecular discoveries with clinical applications and patient care.\nAxiom: {'subClassOf': ['Translational medicine']}\nGenerated CQs:", "output": "What higher-level categories does Molecular medicine fall under? | Is Translational medicine a broader category that includes Molecular medicine as a type? | Which specific subtypes within Translational medicine encompass Molecular medicine? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Preclinical and clinical studies\nDescription: Preclinical and clinical studies is a subclass of Medicine research and development. This class includes activities focused on testing new medicines, vaccines, or medical procedures first on animals (preclinical studies) and then on humans (clinical studies), all conducted prior to regulatory approval. The formalization aligns with the definition, emphasizing the sequential and comprehensive process integral to medical research and development.\nAxiom: {'subClassOf': ['Medicine research or development']}\nGenerated CQs:", "output": "Are preclinical and clinical studies classified under the broader category of medicine research and development? | Which research and development activities are more specific subdivisions of medicine research and development, such as preclinical and clinical studies? | What general domains of research and development encompass preclinical and clinical studies? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MLInterfaces\nDescription: MLInterfaces is a subclass of software characterized by several specific features. It implements at least one k-nearest neighbour classification algorithm and is encoded in the R programming language. Members of this class must have specified data input from gene expression datasets and specified data output from ALL/AML datasets, with both types of data conforming to at least one specified data format specification. This ensures that MLInterfaces are R-based software tools specialized in handling gene expression and ALL/AML datasets for k-nearest neighbour classification, with clear input/output format requirements.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some k-nearest neighbour classification]', '[has specified data output some (ALL/AML data set and [has format specification some data format specification])]', '[has specified data input some (Gene expression dataset and [has format specification some data format specification])]', '[is encoded in only R language]']}\nGenerated CQs:", "output": "Is it required that every MLInterface is encoded in at least one R language? | Can an MLInterface exist without being associated with encoding in the R language? | Does the ontology specify that if an entity is an MLInterface, then it must be represented using some form of the R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Microsoft Excel 2007\nDescription: Microsoft Excel 2007 is defined as a subclass of Microsoft Excel with several specified properties. It accepts data input in both XLS spreadsheet and tab-delimited file formats, and can output data in XLS, XML spreadsheet, and tab-delimited file formats. Its release date is specified as ns1:00, and its homepage is http://office.microsoft.com/. Microsoft Excel 2007 has the version identifier \"Microsoft 2007 version\" and is directly succeeded by Microsoft Excel for Windows 2010. These formal properties distinguish Microsoft Excel 2007 in terms of version, supported data formats, and its place within the timeline of Excel releases.\nAxiom: {'subClassOf': ['Microsoft Excel'], 'propertyRestrictions': ['[has specified data input some (data and [has format specification some tab delimited file format])]', '[has specified data output some (data and [has format specification some XLS spreadsheet])]', '[has release date hasValue ns1:00]', '[has website homepage hasValue http://office.microsoft.com/]', '[directly followed by some Microsoft Excel for Windows 2010]', '[has specified data output some (data and [has format specification some tab delimited file format])]', '[has version hasValue Microsoft 2007 version]', '[has specified data input some (data and [has format specification some XLS spreadsheet])]', '[has specified data output some (data or [has format specification some XML spreadsheet])]']}\nGenerated CQs:", "output": "Does Microsoft Excel 2007 require at least one data output that follows the XML spreadsheet format specification? | Is there a necessity for any data output specified by Microsoft Excel 2007 to conform to the XML spreadsheet format? | Can Microsoft Excel 2007 provide a specified data output that is not both data and formatted as an XML spreadsheet? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GeneSelector\nDescription: GeneSelector is defined as a subclass of software that is encoded in the R language. Members of this class are characterized by implementing at least one of the following statistical or machine learning methods: SAM, BaldiLongT, FoxDimmicT, WilcEbam, Bayesian Model, Wilcoxon, Linear modelling, or t-test. This formalization indicates that any instance of GeneSelector must provide implementations for some of these methods in an R-based environment, supporting flexible selection and analysis of genes using diverse computational techniques.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some SAM]', '[implements some BaldiLongT]', '[implements some WilcEbam]', '[implements some Bayesian Model]', '[implements some Wilcoxon]', '[implements some Linear modelling]', \"[implements some 't-test']\", '[is encoded in some R language]', '[implements only FoxDimmicT]']}\nGenerated CQs:", "output": "Is it required for a GeneSelector to implement at least one instance of FoxDimmicT? | Can a GeneSelector exist without implementing FoxDimmicT at all? | Does every GeneSelector necessarily possess the ability to implement FoxDimmicT? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pathway ID (ConsensusPathDB)\nDescription: Pathway ID (ConsensusPathDB) is a subclass of both \"Pathway or network accession\" and \"ConsensusPathDB identifier.\" It refers to an identifier specifically assigned to a pathway within the ConsensusPathDB pathway database. This class is intended to capture and represent accession numbers or codes uniquely identifying pathways stored in ConsensusPathDB.\nAxiom: {'subClassOf': ['ConsensusPathDB identifier', 'Pathway and network accession']}\nGenerated CQs:", "output": "Is Pathway ID (ConsensusPathDB) a subtype of Pathway or network accession? | Which types are encompassed under Pathway or network accession, including Pathway ID (ConsensusPathDB)? | Under what broader classes can Pathway ID (ConsensusPathDB) be classified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: BioPAX\nDescription: BioPAX is defined as a subclass of biological pathway or network format, meaning it is a specific type of data format for representing biological pathways or networks. According to its current definition, BioPAX is intended for the exchange of pathway data, and its data model is defined using OWL (Web Ontology Language), ensuring structured and semantically rich data representation. This places BioPAX within the context of standardized formats facilitating pathway data sharing and interoperability in the life sciences.\nAxiom: {'subClassOf': ['Biological pathway and network format']}\nGenerated CQs:", "output": "Is BioPAX classified under the general category of Biological pathway or network format? | Which specific formats fall under the category of Biological pathway or network format, such as BioPAX? | What broader categories is BioPAX directly associated with in terms of data formats for biological pathways or networks? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 'beadarraySNP'\nDescription: beadarraySNP is a subclass of software designed for processing text-based data sets, producing graphical plots as output. It operates as part of data normalization workflows, indicating its use in preparing or standardizing data. Additionally, beadarraySNP is implemented in the R programming language. These axioms collectively characterize beadarraySNP as a software tool focused on data normalization tasks, with specified input (text data set), output (graph plots), and implementation (R language).\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data output some Graph plot]', '[has specified data input some Text data set]', '[is executed in some data normalization]', '[is encoded in only R language]']}\nGenerated CQs:", "output": "Is it necessary for a beadarraySNP to be encoded in at least one R language? | Can a beadarraySNP exist without being encoded in any R language? | Does every beadarraySNP instance require association with some R language through the 'is encoded in' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MEDME\nDescription: MEDME is defined as a subclass of software. It is characterized by its ability to accept specified data input, where the input data must have a format specification of an R data frame. The software produces specified data output, which must have a format specification of GFF (General Feature Format). Additionally, MEDME is encoded in the R programming language. This formalization ensures that any instance of MEDME must process data inputs as R data frames and produce outputs in GFF format, utilizing R for its implementation.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data output some (data and [has format specification some GFF])]', '[is encoded in some R language]', '[has specified data input some (data or [has format specification some R data frame])]']}\nGenerated CQs:", "output": "Does MEDME require at least one specified data input with a format specification of an R data frame? | Must every specified data input associated with MEDME include a format specification that is an R data frame? | Is it possible for MEDME to have a specified data input that lacks both the 'data' type and an 'R data frame' format specification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Splice site prediction\nDescription: Splice site prediction is defined as a subclass of nucleic acid sequence feature detection, specifically involving detection methods that are related to gene structure. Members of this class identify, predict, or analyze splice sites in nucleotide sequences—including methods that may require input of pre-mRNA or genomic DNA sequences. This ensures a focus on the prediction or analysis of gene structure elements relevant to splicing within nucleotide data.\nAxiom: {'subClassOf': ['Nucleic acid sequence feature detection'], 'propertyRestrictions': ['[has topic only Gene structure]']}\nGenerated CQs:", "output": "Is it required that splice site prediction concerns gene structure as a topic? | Can every instance of splice site prediction be associated with at least one gene structure through the 'has topic' relationship? | Is there a requirement for splice site prediction to reference gene structure in its property restrictions? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Functional enrichment\nDescription: Functional enrichment is a subclass of both Gene expression data analysis and Enrichment, and is characterized by the requirement that it has as its topic some form of function analysis. This class encompasses methods that analyze a set of genes—often derived from gene expression profiles or other gene sets—using an ontology of gene functions, such as the Gene Ontology (GO). The analysis typically takes a set of Gene IDs as input and produces a ranked list of functional terms (e.g., GO terms) each associated with a p-value, reflecting the statistical significance of enrichment.\nAxiom: {'subClassOf': ['Gene expression data analysis', 'Enrichment'], 'propertyRestrictions': ['[has topic only Function analysis]']}\nGenerated CQs:", "output": "Must every instance of Functional enrichment be associated with at least one topic of Function analysis? | Can a Functional enrichment process exist without having the topic of Function analysis? | Is it possible for Functional enrichment to have topics other than Function analysis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Acuity\nDescription: Acuity is defined as a subclass of software, and is characterized by being the output of at least one software publishing process in which Molecular Devices is a participant. This means that any instance of Acuity must be a software product that results from a publishing process involving Molecular Devices.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[output of some (software publishing process or [has participant hasValue Molecular Devices])]']}\nGenerated CQs:", "output": "Does every instance of Acuity necessarily produce an output related to a software publishing process involving Molecular Devices as a participant? | Can Acuity have any output that is not a result of a software publishing process with Molecular Devices participating? | Is it required that all outputs of Acuity are strictly derived from software publishing processes that include Molecular Devices as a participant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetic tree generation (from gene frequencies)\nDescription: Phylogenetic tree generation (from gene frequencies) is a subclass of Phylogenetic tree generation (data centric), specifically focusing on constructing phylogenetic trees using gene frequency data as input. This class is characterized by its association with the topic of gene expression and requires phylogenetic gene frequencies data as input. The formal definition emphasizes that the process involves phylogenetic tree construction derived from gene frequency data.\nAxiom: {'subClassOf': ['Phylogenetic tree generation (data centric)'], 'propertyRestrictions': ['[has input some Phylogenetic gene frequencies data]', '[has topic only Gene expression]']}\nGenerated CQs:", "output": "Must phylogenetic tree generation (from gene frequencies) always involve at least one topic related to gene expression? | Is it necessary for the process of phylogenetic tree generation (from gene frequencies) to be associated with gene expression as a topic? | Can phylogenetic tree generation (from gene frequencies) occur without referencing gene expression in its topic property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein structure prediction\nDescription: Protein structure prediction is a subclass of Protein analysis, Protein sequence analysis, Structure prediction, and Protein structure analysis, and is grouped under the broader category of Prediction and recognition (protein). This class concerns methods and topics related to the prediction, modelling, recognition, or design of protein secondary, tertiary, or other structural features. Individuals of this class are associated with outputs that include some form of protein structure, and the class specifically includes topics relevant to protein structure prediction.\nAxiom: {'subClassOf': ['Protein analysis', 'Protein sequence analysis', 'Structure prediction', 'Protein structure analysis', 'Structure prediction', 'Prediction or recognition (protein)'], 'propertyRestrictions': ['[has output some Protein structure]', '[has topic some Protein structure prediction]']}\nGenerated CQs:", "output": "Is Protein structure prediction categorized under Prediction and recognition (protein)? | Which specific prediction types, such as Protein structure prediction, fall under the class Prediction and recognition (protein)? | What broader categories encompass Protein structure prediction in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence signature recognition\nDescription: Sequence signature recognition is a subclass of Sequence feature detection concerned with identifying (scanning for) known motifs, patterns, and regular expressions in molecular sequence(s). It is characterized by generating outputs that include Sequence signature matches and is associated with topics such as Sequence sites, features, and motifs. This class formally captures analyses that detect established sequence elements within biological sequences.\nAxiom: {'subClassOf': ['Sequence feature detection'], 'propertyRestrictions': ['[has topic some Sequence sites, features and motifs]', '[has output only Sequence signature matches]']}\nGenerated CQs:", "output": "Does sequence signature recognition always produce at least one output that is a sequence signature match? | Is it required that the output of sequence signature recognition includes some sequence signature matches? | Can sequence signature recognition result in an output that does not involve any sequence signature matches? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: timecourse\nDescription: timecourse is defined as a subclass of software, distinguished by several specific characteristics. Instances of timecourse implement some RMA (Robust Multi-array Average) algorithm and are published exclusively by Bioconductor. They are encoded in the R programming language. For data handling, timecourse software requires as input some gene expression dataset and produces as output data that is strictly in the CEL binary format, conforming to the respective format specification. These axioms ensure that timecourse represents specialized software tools for processing gene expression datasets using the Bioconductor framework and RMA methodology within the R language environment.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some RMA]', '[is published by hasValue Bioconductor]', '[is encoded in some R language]', '[has specified data input some Gene expression dataset]', '[has specified data output some [has format specification some CEL binary format]]']}\nGenerated CQs:", "output": "Is it required that any specified data output in a timecourse must have format specification restricted solely to the CEL binary format? | Does the ontology allow a timecourse to have a specified data output with a format specification other than CEL binary format? | Must every output designated by has specified data output for a timecourse include at least one instance where its format specification is only CEL binary format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: sizepower\nDescription: sizepower is a subclass of software, specifically characterized by several key properties. It is implemented in the R programming language and is published by Bioconductor. The software is designed to be executed in the context of background correction, data normalization, and differential expression analysis tasks. It accepts input data exclusively in the R data frame format and produces output data also solely as R data frames. This ensures consistency in data formatting throughout its use and integration within bioinformatics workflows.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some (background correction and data normalization and differential expression analysis)]', '[has specified data output some [has format specification only R data frame]]', '[has specified data input some [has format specification only R data frame]]', '[is published by hasValue Bioconductor]', '[is encoded in only R language]']}\nGenerated CQs:", "output": "Is it necessary for a sizepower propertyRestriction to be encoded in at least one R language? | Can a sizepower propertyRestriction exist without being associated with any R language? | Does every sizepower propertyRestriction require an encoding in an R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein sequence alignment analysis\nDescription: Protein sequence alignment analysis is a subclass of Protein analysis, Prediction and recognition (protein), and Sequence alignment analysis. It is characterized by requiring at least one input of type Sequence alignment (protein). This class encompasses analyses performed on protein sequence alignments, typically to detect features or make predictions about the aligned sequences. The formal definition ensures that instances of this class specifically involve input data consisting of protein sequence alignments within the broader context of protein and sequence analysis.\nAxiom: {'subClassOf': ['Protein analysis', 'Prediction and recognition (protein)', 'Sequence alignment analysis'], 'propertyRestrictions': ['[has input only Sequence alignment (protein)]']}\nGenerated CQs:", "output": "Is it required that protein sequence alignment analysis always has at least one input that is a protein sequence alignment? | Can a protein sequence alignment analysis exist without taking any protein sequence alignment as input? | Must every input to a protein sequence alignment analysis be a protein sequence alignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: logitT\nDescription: logitT is defined as a subclass of software specialized in differential expression analysis. It must implement both the Logit-t algorithm and the t-test, be executed in the context of differential expression analysis, and is encoded in the R programming language. logitT requires input data specifically in CEL binary or CEL ASCII formats, as specified, and produces output strictly in the form of an R data frame. Additionally, it is formally associated with the Bioconductor project as its publisher.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': [\"[implements some (Logit-t algorithm and 't-test')]\", '[has specified data input some [has format specification only (CEL binary format or CEL ASCII format)]]', '[is encoded in some R language]', '[is published by hasValue Bioconductor]', '[has specified data output some [has format specification only R data frame]]', '[is executed in only differential expression analysis]']}\nGenerated CQs:", "output": "Is it required that every LogitT property restriction is associated with at least one execution in a differential expression analysis? | Does a LogitT property restriction necessarily participate in some form of differential expression analysis? | Can a LogitT property restriction exist without being executed in any differential expression analysis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MPL v2.0\nDescription: MPL v2.0 is defined as a subclass of MPL, meaning it inherits all characteristics of the general Mozilla Public License class. Additionally, MPL v2.0 is characterized by being a compatible license with both GNU GPL v2 and GNU GPL v3. This means that any license classified as MPL v2.0 must be compatible for use in projects licensed under either version 2 or version 3 of the GNU General Public License.\nAxiom: {'subClassOf': ['MPL'], 'propertyRestrictions': ['[is compatible license of some GNU GPL v2]', '[is compatible license of only GNU GPL v3]']}\nGenerated CQs:", "output": "Is every instance of an MPL v2.0 license required to be compatible with at least one GNU GPL v3 license? | Are there cases where an MPL v2.0 license does not have any compatibility relation with a GNU GPL v3 license? | Can an MPL v2.0 license be associated with compatibility only when at least one GNU GPL v3 license is involved? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein-protein interaction prediction\nDescription: Protein-protein interaction prediction is defined as a subclass of protein interaction prediction, focused specifically on the identification or prediction of interactions between proteins, including interfaces and binding sites. Members of this class are characterized by having outputs that are protein interaction reports and are concerned with topics relating to protein interactions. This ensures that any instance of this class is involved in generating reports about protein interactions and is centered on protein interaction phenomena.\nAxiom: {'subClassOf': ['Protein interaction prediction'], 'propertyRestrictions': ['[has topic some Protein interactions]', '[has output only Protein interaction report]']}\nGenerated CQs:", "output": "Must every protein-protein interaction prediction produce at least one protein interaction report as output? | Is the existence of a protein interaction report output required for an activity to be classified as a protein-protein interaction prediction? | Can a protein-protein interaction prediction be identified by the presence of a protein interaction report as its output? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: affyPara\nDescription: affyPara is a subclass of software, formally characterized by several property restrictions: it is published by Bioconductor; it is executed in processes involving averaging and correction and data normalization; its specified data input must include data with a format specification of either CEL binary format or CEL ASCII format; its specified data output includes both graph plots and outputs with a format specification of R data frame; and it is encoded in the R language. This class represents software tools that process CEL format data for statistical normalization and visualization in bioinformatics workflows.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is published by hasValue Bioconductor]', '[has specified data input some [has format specification only (CEL binary format or CEL ASCII format)]]', '[has specified data output some (Graph plot and [has format specification some R data frame])]', '[is encoded in some R language]', '[is executed in some (averaging or correction or data normalization)]']}\nGenerated CQs:", "output": "Is it necessary for affyPara to be executed in a context that includes averaging, correction, and data normalization? | Does the execution of affyPara always require all three processes: averaging, correction, and data normalization to be present? | Can affyPara be executed in any scenario where averaging, correction, and data normalization are not all applied together? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: vsn\nDescription: vsn is defined as a subclass of software, characterized by being implemented in the R language. It requires specific data input in the form of a gene expression dataset and is executed for tasks including correction, data normalization, and differential expression analysis. This formalization ensures that any instance of vsn is an R-based software tool designed to perform these essential bioinformatics processes on gene expression data.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data input some Gene expression dataset]', '[is executed in some (correction and data normalization and differential expression analysis)]', '[is encoded in only R language]']}\nGenerated CQs:", "output": "Is it required that every property restriction in vsn is encoded in at least one R language? | Does a property restriction in vsn necessarily have to be represented in some form of R language? | Can a vsn property restriction exist without being encoded in an R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cysteine bridge detection\nDescription: Cysteine bridge detection is defined as a subclass of protein cysteine and disulfide bond assignment. This class focuses on the identification of cysteine bridges, specifically by detecting disulfide bonds formed between cysteine residues within a protein structure using coordinate data. Individuals of this class perform or represent methods for recognizing these covalent linkages, which are important for protein stability and function.\nAxiom: {'subClassOf': ['Protein cysteine or disulfide bond assignment']}\nGenerated CQs:", "output": "Does cysteine bridge detection fall under the broader category of protein cysteine and disulfide bond assignment? | Which processes are recognized as specialized forms of protein cysteine and disulfide bond assignment, such as cysteine bridge detection? | To which overarching categories is cysteine bridge detection formally related in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence trace format\nDescription: Sequence trace format is a subclass of Sequence record format that serves specifically as a format for sequence trace data, including information such as base calls. According to its axioms, every Sequence trace format is associated with at least one Sequence trace, meaning it is designed to represent or encode the data generated during DNA sequencing processes. This class formalizes the relationship between sequence trace data and the file formats used to store such data.\nAxiom: {'subClassOf': ['Sequence record format'], 'propertyRestrictions': ['[is format of only Sequence trace]']}\nGenerated CQs:", "output": "Is every instance described by the sequence trace format propertyRestrictions required to be the format of at least one Sequence trace? | Can a sequence trace format propertyRestriction exist without being associated as the format of a Sequence trace? | Does the ontology permit a sequence trace format propertyRestriction that is not related to any Sequence trace through the 'is format of' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: matlab software\nDescription: matlab software is defined as a subclass of software, characterized by being encoded in some MATLAB language. Any individual of this class must be implemented using MATLAB programming language, making it equivalent to software whose code is written in MATLAB. This specification ensures that only software realized through MATLAB language belongs to this class.\nAxiom: {'subClassOf': ['software'], 'equivalentClass': ['[is encoded in only MATLAB language]']}\nGenerated CQs:", "output": "Is every matlab software instance necessarily encoded in some MATLAB language? | Is matlab software defined exactly as those entities that are encoded in MATLAB language? | Does the class matlab software precisely include all entities that are encoded using MATLAB language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein residue surface calculation\nDescription: Protein residue surface calculation is a subclass of Protein surface and interior calculation. This class refers to the process of calculating the solvent accessibility for each residue within a protein structure, determining how much of each residue's surface is exposed to the surrounding solvent.\nAxiom: {'subClassOf': ['Protein surface or interior calculation']}\nGenerated CQs:", "output": "Is Protein surface and interior calculation a broader classification encompassing Protein residue surface calculation? | Which calculation methods are classified under Protein surface and interior calculation, specifically including Protein residue surface calculation? | To which higher-level calculation categories does Protein residue surface calculation pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Algorithms for Calculating Microarray Enrichment\nDescription: Algorithms for Calculating Microarray Enrichment is a subclass of software that specifically implements algorithms for analyzing microarray data enrichment, incorporating both its core methodology and Chi-square analysis. Instances of this class must be encoded in the R programming language, take as input data that conforms to the R data frame format, and output at least some form of graphical plot. This class formalization ensures that any software classified here is designed for statistical analysis of microarray enrichment with explicit data format and output requirements.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data output some Graph plot]', '[has specified data input some (data and [has format specification some R data frame])]', '[implements some (Algorithms for Calculating Microarray Enrichment and Chi-square)]', '[is encoded in only R language]']}\nGenerated CQs:", "output": "Must every instance of 'Algorithms for Calculating Microarray Enrichment' be encoded in at least one R language implementation? | Is it possible for an 'Algorithm for Calculating Microarray Enrichment' to exist without being encoded in the R language? | Are there any algorithms for microarray enrichment that are encoded exclusively in the R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Free cysteine detection\nDescription: Free cysteine detection is a subclass of Protein cysteine and disulfide bond assignment, concerned with identifying cysteine residues in a protein structure that are not engaged in disulfide bonds (cysteine bridges) and do not serve as ligands to metals. This class ensures the detection and annotation of cysteine residues that are chemically free within protein structures.\nAxiom: {'subClassOf': ['Protein cysteine or disulfide bond assignment']}\nGenerated CQs:", "output": "Is Free cysteine detection classified under Protein cysteine and disulfide bond assignment? | What are the more specific processes that fall under Protein cysteine and disulfide bond assignment, such as Free cysteine detection? | Which broader categories encompass Free cysteine detection? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: affyTiling\nDescription: affyTiling is defined as a subclass of software that is published by Bioconductor. It is implemented in the R language, and its execution involves tasks related to correction and data normalization. The software implements RMA (Robust Multi-array Average) methods, with specified data input formats restricted to BPMAP and CEL binary formats. The data output produced by affyTiling is in the form of CSV data sets. This ontology representation ensures that any member of the affyTiling class is exclusively characterized by these properties and restrictions.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is published by hasValue Bioconductor]', '[is executed in some (correction and data normalization)]', '[has specified data output some CSV data set]', '[is encoded in some R language]', '[has specified data input some [has format specification only (BPMAP and CEL binary format)]]', '[implements only RMA]']}\nGenerated CQs:", "output": "Is it required that every affyTiling implements at least one RMA? | Can an affyTiling exist without implementing any RMA? | Does the implementation of some RMA distinguish affyTiling from other concepts? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RLMM\nDescription: RLMM is a subclass of software, characterized by its implementation of the Mahalanobis distance algorithm. It specifically requires data inputs that conform to the formats Xba.CQV, Xba.regions, and .raw files. The software outputs graph plots as part of its processing. RLMM is encoded in the R language and is designed to be executed within data normalization workflows. Additionally, it is published by Bioconductor. These axioms precisely define RLMM’s purpose and technical attributes within the domain of bioinformatics software.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some Mahalanobis distance]', '[has specified data output some Graph plot]', '[is encoded in some R language]', '[is executed in some data normalization]', '[is published by hasValue Bioconductor]', '[has specified data input some [has format specification some (Xba.CQV and Xba.regions and .raw files)]]']}\nGenerated CQs:", "output": "Is the specified data input for an RLMM propertyRestriction required to have a format specification that includes Xba.CQV, Xba.regions, and .raw files? | Can an RLMM propertyRestriction have a specified data input where the format specification is limited exclusively to Xba.CQV, Xba.regions, and .raw files? | Does an RLMM propertyRestriction necessarily entail that its specified data input must define format specifications corresponding to all three: Xba.CQV, Xba.regions, and .raw files? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MUSCLE 3.8.31\nDescription: MUSCLE 3.8.31 is a subclass of Drive5 MUSCLE and represents a specific release of the MUSCLE software (version 3.8.31). Instances of this class are characterized by having a defined download location (ns5:downloads.htm), access to at least one command-line interface, and are associated with documentation resources (ns5:muscle_userguide3.8.html and ns6:gkh340). This formalization ensures that any individual classified as MUSCLE 3.8.31 is identifiable by these version-specific properties and documentation links.\nAxiom: {'subClassOf': ['Drive5 MUSCLE'], 'propertyRestrictions': ['[has download location hasValue ns5:downloads.htm]', '[has documentation hasValue ns5:muscle_userguide3.8.html]', '[has version hasValue MUSCLE version 3.8.31]', '[has documentation hasValue ns6:gkh340]', '[has interface only command-line interface]']}\nGenerated CQs:", "output": "Is it required that MUSCLE 3.8.31 has an interface with at least one command-line interface? | Can MUSCLE 3.8.31 possess any interface that is not a command-line interface? | Does MUSCLE 3.8.31 necessarily support a command-line interface among its interfaces? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GenomeGraphs\nDescription: GenomeGraphs is defined as a subclass of software, specifically designed to handle gene expression datasets with explicit format specifications. It requires specified data inputs that must include a gene expression dataset accompanied by a data format specification. The software is encoded in the R programming language. Its data output consists of graph plots with format specifications that conform to an image format. These axioms formalize GenomeGraphs as an R-based software tool aimed at generating graphical representations of gene expression data, ensuring both input and output data comply with defined formats.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is encoded in some R language]', '[has specified data output some (Graph plot and [has format specification some image format])]', '[has specified data input some (Gene expression dataset or [has format specification some data format specification])]']}\nGenerated CQs:", "output": "Does a GenomeGraph necessarily require at least one specified data input that is a Gene expression dataset conforming to a data format specification? | Is it possible for a GenomeGraph to exist without having an input that is both a Gene expression dataset and meets a data format specification? | Are all specified data inputs for GenomeGraphs limited to those that are Gene expression datasets with some data format specification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetic tree reconstruction\nDescription: Phylogenetic tree reconstruction is a subclass of phylogenetic tree generation and is specifically concerned with topics pertaining to phylogeny. It involves reconstructing the inner node labels of a phylogenetic tree based on information from its leaves, distinguishing this process from merely analyzing an existing tree or constructing an entirely new tree. This class encapsulates methods and concepts relative to inferring ancestral relationships and internal features from observed leaf data in evolutionary trees.\nAxiom: {'subClassOf': ['Phylogenetic tree generation'], 'propertyRestrictions': ['[has topic only Phylogeny]']}\nGenerated CQs:", "output": "Is it required that phylogenetic tree reconstruction addresses at least one topic related to phylogeny? | Can a phylogenetic tree reconstruction process have the 'has topic' property only if the topic is phylogeny? | Must every instance of phylogenetic tree reconstruction involve a topic that is classified as phylogeny? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Codon usage table ID\nDescription: Codon usage table ID is a subclass of Identifier (typed), representing an identifier specifically used for codon usage tables and genetic codes. Each instance of this class is characterized by being an identifier of at least one genetic code or codon usage table. This class formalizes identifiers used to denote codon usage tables, such as those referring to specific genetic codes.\nAxiom: {'subClassOf': ['Identifier (typed)'], 'propertyRestrictions': ['[is identifier of some Genetic code]', '[is identifier of only Codon usage table]']}\nGenerated CQs:", "output": "Does every Codon usage table ID necessarily refer to at least one Codon usage table as its identifier? | Is it required that each instance of Codon usage table ID serves as an identifier for a Codon usage table? | Can a Codon usage table exist without being identified by a Codon usage table ID? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: vbmp\nDescription: vbmp is a subclass of software designed specifically for execution within cross validation processes. It is characterized by accepting data input strictly in the format of R data frames and producing outputs that include both graph plots and R data frames. The software is published by Bioconductor, is implemented in the R programming language, and employs Multinomial probit regression with Gaussian Process priors as a core method. These axioms ensure that vbmp is tightly integrated with R-centric workflows and statistical modeling techniques, particularly within the Bioconductor ecosystem.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data input some [has format specification only R data frame]]', '[has specified data output some (Graph plot and [has format specification only R data frame])]', '[is published by hasValue Bioconductor]', '[is encoded in some R language]', '[implements some Multinomial probit regression with Gaussian Process priors]', '[is executed in only cross validation]']}\nGenerated CQs:", "output": "Is it required that every vbmp instance must be executed in at least one cross validation? | Can a vbmp exist without being executed in any cross validation? | For any given vbmp, does there necessarily exist a cross validation where it is executed? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Structure prediction\nDescription: Structure prediction is defined as a subclass of both Prediction and recognition and Structure analysis, emphasizing its role within analytical and predictive frameworks. It is characterized by outputs that must include some form of Structure, and its topical focus centers specifically on structure prediction. The class addresses topics related to the prediction of molecular secondary or tertiary structure, uniting aspects of analysis and prediction to determine structural features of molecules.\nAxiom: {'subClassOf': ['Structure analysis', 'Structure analysis', 'Prediction or recognition'], 'propertyRestrictions': ['[has output some Structure]', '[has topic some Structure prediction]']}\nGenerated CQs:", "output": "Is Structure prediction classified under the broader type of Prediction and recognition? | Which specific kinds of Prediction and recognition encompass Structure prediction? | What are the more general categories that Structure prediction is a member of? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pathway or network processing\nDescription: Pathway or network processing is defined as a subclass of Operation (typed), encompassing activities that generate, analyze, or handle biological pathways or networks. Members of this class are characterized by the property restriction that they must have a topic involving molecular interactions, pathways, and networks. This ensures that all pathway or network processing operations are specifically concerned with the management or investigation of biological molecular interaction systems.\nAxiom: {'subClassOf': ['Operation (typed)'], 'propertyRestrictions': ['[has topic only Molecular interactions, pathways or networks]']}\nGenerated CQs:", "output": "Is it required that Pathway or network processing has topic that involves Molecular interactions, pathways, and networks? | Can any instance of Pathway or network processing be described without referencing Molecular interactions, pathways, and networks as a topic? | Must all Pathway or network processing activities relate to at least one topic of Molecular interactions, pathways, and networks? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein disordered structure\nDescription: Protein disordered structure is defined as a subclass of Protein sites, features and motifs. It refers to regions within a protein that lack a fixed or ordered three-dimensional structure. This class captures concepts related to structural disorder in proteins, distinguishing such regions as important features within the broader context of protein sites, features, and motifs.\nAxiom: {'subClassOf': ['Protein sites, features or motifs']}\nGenerated CQs:", "output": "Is Protein disordered structure classified under the category of Protein sites, features and motifs? | Which specific types are encompassed by Protein sites, features and motifs, including Protein disordered structure? | What are the broader ontological categories to which Protein disordered structure belongs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GeneData Expressionist Analyst v4.0.5\nDescription: GeneData Expressionist Analyst v4.0.5 is a subclass of software. It is specifically characterized as the output of a software publishing process in which Genedata participates. This definition ensures that any instance of this class is a software artifact resulting from such a process involving Genedata.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[output of some (software publishing process or [has participant hasValue Genedata])]']}\nGenerated CQs:", "output": "Is it required that the output of GeneData Expressionist Analyst v4.0.5 results from a software publishing process involving Genedata as a participant? | Does every output generated by GeneData Expressionist Analyst v4.0.5 have to originate from a software publishing process with Genedata as a participant? | Can an output of GeneData Expressionist Analyst v4.0.5 be produced without Genedata being a participant in the relevant software publishing process? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein property calculation\nDescription: Protein property calculation is defined as a subclass of Calculation, Protein analysis, and Prediction and recognition (protein), and is characterized by producing outputs related to Protein properties and being focused on topics concerning Protein properties. This class includes methods for rendering and visualizing properties of protein sequences, and is concerned with calculating or predicting physical or chemical properties of a protein, including any non-positional properties derived from processing the molecular sequence.\nAxiom: {'subClassOf': ['Calculation', 'Protein analysis', 'Prediction and recognition (protein)'], 'propertyRestrictions': ['[has output some Protein property]', '[has topic only Protein properties]']}\nGenerated CQs:", "output": "Is it required that protein property calculations always involve at least one topic related to protein properties? | Can a protein property calculation be associated with topics other than protein properties? | Does every protein property calculation explicitly reference at least one specific protein property through its topic? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MVCClass\nDescription: MVCClass is defined as a subclass of software, characterized by several property restrictions. Any member of MVCClass must have specified data input and output, both of which are data entities that conform to the R data frame format specification. Additionally, each MVCClass is executed within a data visualization context and is encoded in the R programming language. This ensures MVCClass instances are dedicated software components facilitating R data frame inputs and outputs, utilized specifically in R-based data visualization processes.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some data visualization]', '[is encoded in some R language]', '[has specified data input some (data and [has format specification some R data frame])]', '[has specified data output some (data or [has format specification some R data frame])]']}\nGenerated CQs:", "output": "Is every MVCClass required to provide at least one data output that is a data instance formatted as an R data frame? | Can an MVCClass be considered valid if it produces a data output that does not adhere to the R data frame format specification? | Does the requirement for MVCClass data output necessitate both the presence of data and its conformity to the R data frame format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Disease ID\nDescription: Disease ID is defined as a subclass of both Identifier (typed) and Accession. It serves specifically as an identifier for entries in disease databases and is constrained by the property that it must be an identifier of some Disease report. This formalization ensures that any Disease ID is associated uniquely with disease records.\nAxiom: {'subClassOf': ['Identifier (typed)', 'Accession'], 'propertyRestrictions': ['[is identifier of only Disease report]']}\nGenerated CQs:", "output": "Is every Disease ID required to serve as the identifier for at least one Disease report? | Can a Disease report exist without being associated with a Disease ID as its identifier? | Does a Disease ID function exclusively as an identifier for Disease reports? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LMGene\nDescription: LMGene is defined as a subclass of software, specifically characterized by its association with gene expression analysis. Every LMGene instance must be encoded in the R programming language and requires a specified data input that is both a gene expression dataset and accompanied by a data format specification. LMGene must execute data normalization and linear modeling procedures, and it implements linear modeling methods. The resulting data output is required to be a data object, specifically structured as an R data frame, and specified with an appropriate data format specification. This formalization captures the core purpose and constraints of LMGene as software dedicated to linear modeling of gene expression data in R.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is encoded in some R language]', '[has specified data input some (Gene expression dataset and [has format specification some data format specification])]', '[implements some Linear modelling]', '[is executed in some Linear modelling]', '[has specified data output some (data and [has format specification some R data frame])]', '[is executed in only data normalization]']}\nGenerated CQs:", "output": "Is it necessary for every LMGene to be executed in some form of data normalization? | Does the definition of LMGene require that it is associated with at least one execution within data normalization? | Can an LMGene exist without participating in any data normalization process? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence motif format\nDescription: Sequence motif format is a subclass of Format (typed), representing formats specifically used to describe sequence motifs. Every instance of Sequence motif format is constrained by the property that it must be a format of at least one Sequence motif. This ensures that Sequence motif formats are exclusively intended for representing or storing sequence motif data, distinguishing them from other format types with different content foci.\nAxiom: {'subClassOf': ['Format (typed)'], 'propertyRestrictions': ['[is format of only Sequence motif]']}\nGenerated CQs:", "output": "Is every Sequence motif required to be the format for at least one format property? | Does there exist a format property that is the format of a Sequence motif? | Must each Sequence motif be associated with a specific format through the 'is format of' relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RNA secondary structure visualisation\nDescription: RNA secondary structure visualisation is defined as a subclass of both RNA secondary structure analysis and Visualisation. It represents processes or tools that specifically visualize RNA secondary structures, including features such as knots and pseudoknots. Members of this class operate with at least one RNA secondary structure as input, ensuring the visualization pertains directly to RNA configurations. This class formalizes the role of visualization within the broader context of RNA structure analysis.\nAxiom: {'subClassOf': ['RNA secondary structure analysis', 'Visualisation'], 'propertyRestrictions': ['[has input only RNA secondary structure]']}\nGenerated CQs:", "output": "Is it required that an RNA secondary structure visualisation has at least one input that is an RNA secondary structure? | Can an RNA secondary structure visualisation exist if it does not have any RNA secondary structure as input? | Does every RNA secondary structure visualisation necessarily operate on some RNA secondary structure as its input? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence alignment ID\nDescription: Sequence alignment ID is defined as a subclass of both Identifier (typed) and Accession, and is restricted such that it serves as an identifier for some Sequence alignment instance. It is used as the identifier of a molecular sequence alignment, for example a record from an alignment database. This formalization ensures that any instance of Sequence alignment ID uniquely identifies a sequence alignment, and maintains compatibility with identifier and accession structures in related ontologies.\nAxiom: {'subClassOf': ['Identifier (typed)', 'Accession'], 'propertyRestrictions': ['[is identifier of only Sequence alignment]']}\nGenerated CQs:", "output": "Is it required for an identifier to always refer to at least one sequence alignment? | Does every value of the sequence alignment ID property correspond to a sequence alignment instance? | Can a sequence alignment ID exist without being the identifier of any sequence alignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: genomeIntervals\nDescription: genomeIntervals is defined as a subclass of software, specifically designed for execution in descriptive statistical calculations within genomics contexts. Instances of this class are published exclusively by Bioconductor, and are encoded in the R programming language. They accept input data strictly in GFF or R data frame formats, and produce output data solely as R data frames. This formalization ensures that any genomeIntervals resource adheres to Bioconductor's publication standards, operates within the R ecosystem, and supports defined data interoperability via precise input/output format restrictions.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some descriptive statistical calculation]', '[is published by hasValue Bioconductor]', '[has specified data output some [has format specification only R data frame]]', '[is encoded in some R language]', '[has specified data input only [has format specification only (GFF and R data frame)]]']}\nGenerated CQs:", "output": "Is it required that genomeIntervals has at least one specified data input whose format specification includes both GFF and R data frame? | Can a genomeIntervals entity have a specified data input with a format specification that is not restricted to both GFF and R data frame? | Does the property restriction mean that all specified data inputs for genomeIntervals must satisfy the condition of having both GFF and R data frame as their format specification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Quadruplex formation site detection\nDescription: Quadruplex formation site detection is a subclass of nucleic acid sequence feature detection, specifically focused on identifying regions within nucleotide sequences capable of forming quadruplex (4-stranded) structures. These quadruplexes, typically arising from guanine-rich regions, play important roles in biological processes and are potential therapeutic targets. The class is characterized by its association with nucleic acid structure prediction as a topic and the output of nucleic acid structure reports, ensuring that any instance of this class involves the detection and reporting of quadruplex-forming motifs.\nAxiom: {'subClassOf': ['Nucleic acid sequence feature detection'], 'propertyRestrictions': ['[has topic some Nucleic acid structure prediction]', '[has output only Nucleic acid structure report]']}\nGenerated CQs:", "output": "Does the detection of a quadruplex formation site require producing at least one nucleic acid structure report as output? | Is it necessary that any output generated by quadruplex formation site detection includes a nucleic acid structure report? | Can the output of quadruplex formation site detection be something other than a nucleic acid structure report? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChipReader 3.1\nDescription: ChipReader 3.1 is defined as a subclass of software. Any instance of ChipReader 3.1 is the output of at least one software publishing process in which Bio-Rad Laboratories, Inc. is a participant. This formalization captures the provenance of ChipReader 3.1, ensuring that each instance is uniquely associated with publishing activities involving Bio-Rad Laboratories, Inc.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[output of some (software publishing process or [has participant hasValue Bio-Rad Laboratories, Inc.])]']}\nGenerated CQs:", "output": "Does a ChipReader always produce output from at least one software publishing process that involves Bio-Rad Laboratories, Inc. as a participant? | Can a ChipReader generate any output without being linked to a software publishing process in which Bio-Rad Laboratories, Inc. participates? | Is it necessary for every ChipReader output to originate from a software publishing process that includes Bio-Rad Laboratories, Inc. as a participant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetic tree distances calculation\nDescription: Phylogenetic tree distances calculation is a subclass of Phylogenetic tree comparison, representing the process of comparing two or more phylogenetic trees specifically to calculate distances between them. Any instance of this class must have at least one output that is a type of Phylogenetic tree distances. This formalizes the concept of measuring differences or similarities between phylogenetic trees by producing quantitative distance values as results.\nAxiom: {'subClassOf': ['Phylogenetic tree comparison'], 'propertyRestrictions': ['[has output only Phylogenetic tree distances]']}\nGenerated CQs:", "output": "Does every instance of 'Phylogenetic tree distances calculation propertyRestrictions' necessarily produce at least one output of type 'Phylogenetic tree distances'? | Is it required that a 'Phylogenetic tree distances calculation propertyRestrictions' process has an output that is a 'Phylogenetic tree distances' entity? | Can a 'Phylogenetic tree distances calculation propertyRestrictions' exist without generating any 'Phylogenetic tree distances' as output? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DNA translation\nDescription: DNA translation is defined as a subclass of Sequence conversion, where the process involves converting one type of biological sequence into another. It is further characterized by having the topic of Protein expression, indicating its role in the generation of proteins. The class is described as the process that translates a DNA sequence into a protein, formalizing its biological role in interpreting genetic information to produce functional proteins.\nAxiom: {'subClassOf': ['Sequence conversion'], 'propertyRestrictions': ['[has topic only Protein expression]']}\nGenerated CQs:", "output": "Does DNA translation always have the topic of protein expression? | Is it necessary for DNA translation to be associated with some aspect of protein expression? | Can an instance of DNA translation exist without being linked to protein expression through the 'has topic' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Genetic code identifier\nDescription: Genetic code identifier is defined as a subclass of Identifier (typed) and is characterized by the property that it acts as an identifier of some Genetic code. Members of this class are used to uniquely identify genetic codes, ensuring precise association between the identifier and the represented genetic code. This formalization supports the role of such identifiers within ontological and bioinformatics contexts.\nAxiom: {'subClassOf': ['Identifier (typed)'], 'propertyRestrictions': ['[is identifier of only Genetic code]']}\nGenerated CQs:", "output": "Is every genetic code identifier necessarily associated with at least one genetic code? | Can a genetic code identifier exist without identifying a genetic code? | Are there genetic entities other than genetic codes that may be identified by a genetic code identifier? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Prediction and recognition (protein)\nDescription: Prediction and recognition (protein) is a subclass of Prediction and recognition, defined by its role in predicting, recognising, detecting, or identifying properties specific to proteins. This class encompasses processes, methods, or functions aimed at analyzing and determining various attributes or characteristics of proteins, such as structure, function, or presence.\nAxiom: {'subClassOf': ['Prediction or recognition']}\nGenerated CQs:", "output": "Is Prediction and recognition (protein) classified under Prediction and recognition? | Which specific classes are included within Prediction and recognition, such as Prediction and recognition (protein)? | What broader categories does Prediction and recognition (protein) fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ramachandran plot validation\nDescription: Ramachandran plot validation is a subclass of Dihedral angle validation, defined as the process of validating a Ramachandran plot for a protein structure. Instances of this class take a Ramachandran plot as input and produce a Protein structural quality report as output. This validation assesses the conformational quality of protein structures based on their dihedral angles, supporting rigorous structural bioinformatics analyses.\nAxiom: {'subClassOf': ['Dihedral angle validation'], 'propertyRestrictions': ['[has input some Ramachandran plot]', '[has output only Protein structural quality report]']}\nGenerated CQs:", "output": "Is it required that a Ramachandran plot validation always produces at least one Protein structural quality report as output? | Can every output generated by a Ramachandran plot validation be classified as a Protein structural quality report? | Does a Ramachandran plot validation ever produce an output that is not a Protein structural quality report? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: BasReader 3.01\nDescription: BasReader 3.01 is defined as a subclass of software. Members of this class are exclusively characterized as outputs produced by a software publishing process in which the participant Raytest is involved. This formalization ensures that BasReader 3.01 instances are software entities resulting from processes that specifically include Raytest as a participant.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[output of some (software publishing process or [has participant hasValue Raytest])]']}\nGenerated CQs:", "output": "Must any output of the BasReader 3.01 propertyRestrictions include results from a software publishing process that involves Raytest as a participant? | Is it necessary that BasReader 3.01 propertyRestrictions only produce outputs related to a software publishing process where Raytest is involved? | Can an output of BasReader 3.01 propertyRestrictions exist without stemming from a software publishing process in which Raytest is a participant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: globaltest\nDescription: globaltest is defined as a subclass of software with several specific characteristics. It is encoded in the R programming language and is published by Bioconductor. Instances of this class are designed to be executed within the context of descriptive statistical calculations. A globaltest implementation must have specified data input in the form of a gene expression dataset and produces specified data output, which can be either a graph plot or an R data frame (and only in the R data frame format). The class also includes a restriction that it implements the globaltest method. This formalization captures the essential features and functional requirements of the globaltest software component within a bioinformatics or statistical analysis context.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is encoded in some R language]', '[is published by hasValue Bioconductor]', '[is executed in some descriptive statistical calculation]', '[has specified data output some (Graph plot and [has format specification only R data frame])]', '[implements some globaltest]', '[has specified data input only Gene expression dataset]']}\nGenerated CQs:", "output": "Is it required for a globaltest propertyRestrictions instance to have at least one specified data input that is a Gene expression dataset? | Can a globaltest propertyRestrictions entity exist without a specified data input of the Gene expression dataset type? | Does globaltest propertyRestrictions necessarily involve having a specified data input related to Gene expression datasets? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene expression QTL analysis\nDescription: Gene expression QTL analysis is defined as a subclass of Gene expression data analysis, characterized by combining classical quantitative trait loci (QTL) analysis with gene expression profiling to identify cis- and trans-regulatory elements influencing the expression of phenotype-associated genes. Members of this class are further defined by the requirement that their analysis outputs include either a Pathway or network report, reflecting the integrative nature of the results produced.\nAxiom: {'subClassOf': ['Gene expression data analysis'], 'propertyRestrictions': ['[has output only Pathway or network report]']}\nGenerated CQs:", "output": "Does every Gene expression QTL analysis necessarily produce at least one output that is either a Pathway report or a Network report? | Is it possible for the output of a Gene expression QTL analysis to be something other than a Pathway report or Network report? | Are Pathway and Network reports the only required types of outputs generated by Gene expression QTL analysis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Taxonomy\nDescription: Taxonomy is defined as a subclass of data and evolutionary biology, focusing specifically on topics related to phylogeny. Members of this class involve the classification, identification, and naming of organisms, ensuring a systematic approach to understanding biological diversity and evolutionary relationships. The class is formally restricted to instances that are concerned with at least some aspect of phylogeny, aligning with its central role in evolutionary studies.\nAxiom: {'subClassOf': ['data', 'Evolutionary biology'], 'propertyRestrictions': ['[has topic only Phylogeny]']}\nGenerated CQs:", "output": "Is it required that any Taxonomy has at least one topic related to Phylogeny? | Does every instance of Taxonomy necessarily include a topic concerning Phylogeny? | Can a Taxonomy exist without having any topic involving Phylogeny? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: pcaMethods\nDescription: pcaMethods is a subclass of software designed for data analysis. It is encoded in the R language and published by Bioconductor. This class implements several algorithms, including Bayesian Model, Expectation-Maximization (EM) algorithm, Nonlinear Estimation by Iterative Partial Least Squares, and the SVDimpute algorithm. It operates within contexts of data visualization and cross-validation. The software requires data inputs strictly in R data frame format, and its outputs specifically include graphical plots.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some (Bayesian Model and Expectation-Maximization(EM) algorithm and Nonlinear Estimation by Iterative Partial Least Squares and SVDimpute algorithm)]', '[is published by hasValue Bioconductor]', '[has specified data output some Graph plot]', '[is executed in some (data visualization and cross validation)]', '[has specified data input some [has format specification only R data frame]]', '[is encoded in only R language]']}\nGenerated CQs:", "output": "Is it required that every PCA method implementation is encoded using the R language? | Can a PCA method exist without being encoded in the R language? | Does the ontology restrict PCA methods to only those that are encoded in the R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence checksum generation\nDescription: Sequence checksum generation is defined as a subclass of Generation. It requires, via property restrictions, that it has input some Sequence and is related to the topic of Data acquisition. Individuals of this class involve processes where a checksum is generated for a molecular sequence, serving as a method for verifying data integrity in the context of molecular data acquisition.\nAxiom: {'subClassOf': ['Generation'], 'propertyRestrictions': ['[has input some Sequence]', '[has topic only Data acquisition]']}\nGenerated CQs:", "output": "Must every sequence checksum generation be associated with at least one data acquisition topic? | Is it possible for sequence checksum generation to have a topic other than data acquisition? | Does sequence checksum generation necessarily involve the property 'has topic' connecting it to data acquisition? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein chemical modifications\nDescription: Protein chemical modifications is defined as a subclass of Protein sites, features and motifs. It refers to the topic concerning the chemical modification of a protein, encompassing alterations that affect specific protein sites or motifs. This class formalizes the grouping of all concepts related to protein chemical modifications within the broader context of protein features.\nAxiom: {'subClassOf': ['Protein sites, features or motifs']}\nGenerated CQs:", "output": "Are protein chemical modifications classified under the broader category of protein sites, features and motifs? | What specific subclasses exist within protein sites, features and motifs, including protein chemical modifications? | Which higher-level classes encompass protein chemical modifications? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Codon usage bias calculation\nDescription: Codon usage bias calculation is defined as a subclass of codon usage analysis. It is characterized by the production of at least one codon usage bias result as output. Members of this class specifically perform the calculation of codon usage bias, formally ensuring that any process or method classified here must output some form of codon usage bias metric as part of its analysis.\nAxiom: {'subClassOf': ['Codon usage analysis'], 'propertyRestrictions': ['[has output only Codon usage bias]']}\nGenerated CQs:", "output": "Does every calculation of codon usage bias necessarily produce at least one output of the type Codon usage bias? | Is it required that a codon usage bias calculation yields an output within the Codon usage bias category? | Can a codon usage bias calculation exist without generating any Codon usage bias as output? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OrderedList\nDescription: OrderedList is a subclass of software designed for differential expression analysis. It requires as input a gene expression dataset with an associated data format specification, and outputs a gene list, also accompanied by a format specification. OrderedList is implemented in the R programming language, executes within a differential expression analysis context, and provides similarity scoring functionality. These axioms define OrderedList as specialized analysis software with well-defined input/output standards and analytical capabilities, constrained to the context of gene expression data.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data input some (Gene expression dataset and [has format specification some data format specification])]', '[implements some Similarity score]', '[is encoded in some R language]', '[has specified data output some (Gene list and [has format specification some data format specification])]', '[is executed in only differential expression analysis]']}\nGenerated CQs:", "output": "Is every OrderedList instance required to participate in at least one differential expression analysis through the is executed in property? | Can an OrderedList be present without being associated with any differential expression analysis via is executed in? | Which analyses must an OrderedList be involved in through the is executed in relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Codon usage table\nDescription: Codon usage table is a subclass of data that specifically pertains to gene expression. It represents a structured table containing codon usage data calculated from one or more nucleic acid sequences. Such a table typically includes its name, optional comments, and columns listing codons alongside their corresponding usage data. Additionally, a codon usage table can be used to extract or represent a genetic code, providing valuable insights into the patterns of codon utilization associated with gene expression.\nAxiom: {'subClassOf': ['data'], 'propertyRestrictions': ['[has topic only Gene expression]']}\nGenerated CQs:", "output": "Is it required that every Codon usage table is associated with some aspect of Gene expression through the has topic property? | Can a Codon usage table exist without referencing Gene expression as a topic? | Does the presence of a 'has topic' relationship to Gene expression define Codon usage tables? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CRAM\nDescription: CRAM is a subclass of both Binary format and Alignment format (pair only), representing a file format used for storing pairwise alignments in a compressed binary representation. It is defined by its use of reference-based compression to efficiently encode alignment data, distinguishing it from other binary or alignment formats.\nAxiom: {'subClassOf': ['Binary format', 'Alignment format (pair some)']}\nGenerated CQs:", "output": "Is CRAM classified as a type of Alignment format (pair only)? | Which specific formats are categorized under Alignment format (pair only), and does this include CRAM? | What are the broader categories encompassing CRAM within alignment format classification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein cleavage sites\nDescription: Protein cleavage sites is a subclass of Protein sites, features and motifs, representing locations within a protein sequence where cleavage by a proteolytic enzyme or agent occurs. This class specifically captures the sites of proteolytic processing, which are essential for understanding post-translational modifications and protein maturation.\nAxiom: {'subClassOf': ['Protein sites, features or motifs']}\nGenerated CQs:", "output": "Are protein cleavage sites included as a specific type within protein sites, features and motifs? | What specialized categories exist under protein sites, features and motifs, such as protein cleavage sites? | Which broader classes encompass the concept of protein cleavage sites? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pathway ID (PharmGKB)\nDescription: Pathway ID (PharmGKB) is defined as an identifier for pathways specifically within the PharmGKB database, which focuses on pharmacogenetics and pharmacogenomics. This class is a subclass of both ‘Pathway or network accession’ and ‘PharmGKB ID’, situating it as a specialized identifier that uniquely refers to biochemical pathways catalogued by PharmGKB.\nAxiom: {'subClassOf': ['PharmGKB ID', 'Pathway and network accession']}\nGenerated CQs:", "output": "Is Pathway ID (PharmGKB) classified as a kind of Pathway or network accession? | Which identifiers are encompassed under Pathway or network accession, including Pathway ID (PharmGKB)? | To which higher-level accession categories does Pathway ID (PharmGKB) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: search engine\nDescription: search engine is defined as a subclass of software, and is formally equivalent to software that is executed in the context of web content search. This means that any instance of search engine must be a kind of software that operates specifically to facilitate the searching of web-based content.\nAxiom: {'subClassOf': ['software'], 'equivalentClass': ['(software or [is executed in some web content search])']}\nGenerated CQs:", "output": "Is every search engine necessarily a type of software that is executed in at least one web content search? | Can a search engine be precisely defined as the intersection of software and those entities executed within a web content search? | Is the class of search engines equivalent to software with the additional condition of being executed in some web content search? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: spikeLI\nDescription: spikeLI is defined as a subclass of software characterized by its implementation of some version of the Langmuir Isotherm. It is executed as part of both descriptive statistical calculation and differential expression analysis workflows. spikeLI is specifically encoded in the R language, accepts as input a gene expression dataset, and produces a graph plot as its specified output. This formalization captures spikeLI’s role as a specialized software tool for processing gene expression data and visualizing results through graphical plots.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some Langmuir Isotherm]', '[is executed in some (descriptive statistical calculation and differential expression analysis)]', '[is encoded in some R language]', '[has specified data input some Gene expression dataset]', '[has specified data output only Graph plot]']}\nGenerated CQs:", "output": "Is it required that a spikeLI instance produces at least one data output that is a Graph plot? | Can a spikeLI ever have a specified data output that is not a Graph plot? | Are all specified data outputs of spikeLI necessarily instances of Graph plot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Representative sequence identification\nDescription: Representative sequence identification is defined as a subclass of Sequence comparison. Individuals in this class are related to at least one topic involving sequence comparison (as specified by the property restriction: has topic some Sequence comparison). This class is concerned with the process of identifying a representative sequence from a set of sequences, generally utilizing pair-wise alignment scores or other sequence comparison methods.\nAxiom: {'subClassOf': ['Sequence comparison'], 'propertyRestrictions': ['[has topic only Sequence comparison]']}\nGenerated CQs:", "output": "Is it necessary for a Representative sequence identification to have the property 'has topic' associated with Sequence comparison? | Does every Representative sequence identification instance relate to at least one Sequence comparison through the 'has topic' property? | Can a Representative sequence identification exist without having 'has topic' connected to a Sequence comparison? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetics\nDescription: Phylogenetics is defined as a subclass of Phylogeny. This means that all instances of Phylogenetics are also considered instances of Phylogeny, inheriting its general properties and characteristics, while potentially adding more specific features relevant to the study of evolutionary relationships among biological entities.\nAxiom: {'subClassOf': ['Phylogeny', 'Sequence analysis']}\nGenerated CQs:", "output": "Is Phylogenetics categorized as a specific type of Sequence analysis? | Which disciplines are classified under Sequence analysis, and does this include Phylogenetics? | What are the broader conceptual categories that encompass Phylogenetics within sequence studies? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TAIR accession (protein)\nDescription: TAIR accession (protein) is defined as a subclass of Sequence accession (protein), indicating that it represents a specific type of protein sequence accession. Every member of this class serves as an identifier for at least one Sequence record, establishing a direct relationship between the TAIR accession and the protein sequence data it references.\nAxiom: {'subClassOf': ['Sequence accession (protein)', 'TAIR accession'], 'propertyRestrictions': ['[is identifier of some Sequence record]']}\nGenerated CQs:", "output": "Is TAIR accession (protein) categorized under the general class of TAIR accession? | What are the subclasses defined within TAIR accession, including TAIR accession (protein)? | Which broader classes encompass TAIR accession (protein)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein dipole moment calculation\nDescription: Protein dipole moment calculation is a class representing processes or activities that produce, as output, some instance of Protein dipole moment. There are no asserted superclass or disjoint class relationships, but any individual of this class must have at least one output that is a Protein dipole moment, according to the property restriction specified.\nAxiom: {'subClassOf': ['Protein property calculation (from sequence)'], 'propertyRestrictions': ['[has output some Protein dipole moment]']}\nGenerated CQs:", "output": "Does Protein dipole moment calculation represent a specific instance of Protein property calculation (from sequence)? | Which calculation types are classified under Protein property calculation (from sequence), such as Protein dipole moment calculation? | What broader categories include Protein dipole moment calculation as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HilbertVis\nDescription: HilbertVis is defined as a subclass of software, with specific data input and output requirements. It processes data inputs that must be formatted either in GFF or BED, each with corresponding format specifications. Its data output consists of graph plots formatted as image files. HilbertVis is implemented in the R programming language and is executed as part of data normalization processes.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data input some (data and [has format specification some GFF])]', '[has specified data output some (Graph plot and [has format specification some image format])]', '[has specified data input some (data and [has format specification some BED])]', '[is encoded in some R language]', '[is executed in some data normalization]', '[is executed in some data visualization]']}\nGenerated CQs:", "output": "Is every HilbertVis instance required to be executed in at least one data visualization? | Can a HilbertVis exist without being associated with any data visualization? | Does the definition of HilbertVis ensure execution within the context of a data visualization? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Single particle analysis\nDescription: Single particle analysis is defined as a subclass of both Structure analysis and Image analysis. This indicates that it inherits characteristics from both parent classes and involves analytical methods associated with structural and image data. There are no additional property restrictions specified for this class.\nAxiom: {'subClassOf': ['Structure analysis', 'Image analysis'], 'propertyRestrictions': ['[has topic some Structural biology]']}\nGenerated CQs:", "output": "Is it required that single particle analysis has at least one topic related to structural biology? | Can single particle analysis be associated with a topic that is not structural biology? | Must every instance of single particle analysis involve structural biology as a topic? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene annotation format\nDescription: Gene annotation format is defined as a subclass of Format (typed), indicating that it is a specific type of data format designed for representing gene annotation information. There are no additional property restrictions specified for this class.\nAxiom: {'subClassOf': ['Format (typed)'], 'propertyRestrictions': ['[is format of some Gene report]']}\nGenerated CQs:", "output": "Is every gene annotation format necessarily associated with at least one gene report through the 'is format of' property? | Does a gene annotation format serve as the format specifically for some gene report? | For a given gene annotation format, can we identify at least one gene report that it formats by means of the 'is format of' relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 50-50 MANOVA\nDescription: 50-50 MANOVA is a subclass of software characterized by several key features. It is produced as the output of at least one software publishing process in which Matforsk participates. This software implements at least one 50-50 MANOVA algorithm and is encoded in some version of the MATLAB language. These axioms together specify its association with Matforsk, its computational method, and its programming environment.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[output of some (software publishing process and [has participant hasValue Matforsk])]', '[implements some 50-50 MANOVA algorithm]', '[is encoded in some MATLAB language]', '[is encoded in some R language]']}\nGenerated CQs:", "output": "Is it required that 50-50 MANOVA is always encoded in some R language? | Can 50-50 MANOVA exist without being encoded in an R language? | Does every instance of 50-50 MANOVA entail encoding in at least one R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Immunoproteins, genes and antigens\nDescription: Immunoproteins, genes and antigens is defined as a subclass of Protein families, indicating that all members of this class are specialized groups within the broader set of protein families. This classification formally associates immunoproteins, relevant genes, and antigens with the functional and structural characteristics typical of protein families.\nAxiom: {'subClassOf': ['Protein families', 'Immunology']}\nGenerated CQs:", "output": "Are Immunoproteins, genes and antigens classified as a subgroup under Immunology? | Which classes fall under the broader category of Immunology, including Immunoproteins, genes and antigens? | What are the higher-level categories to which Immunoproteins, genes and antigens are assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene expression profile clustering\nDescription: Gene expression profile clustering is defined as a subclass of both Clustering and Gene expression profile comparison. This class encompasses methodologies that group gene expression profiles based on their similarities, thus facilitating comparative analyses. Members of this class inherit characteristics from both parent classes and represent processes or algorithms specifically focused on organizing gene expression data into distinct clusters for further interpretation.\nAxiom: {'subClassOf': ['Clustering', 'Gene expression profile comparison'], 'propertyRestrictions': ['[has output some Processed microarray data]']}\nGenerated CQs:", "output": "Does every gene expression profile clustering necessarily produce at least one output of processed microarray data? | Is it required that gene expression profile clustering leads to the availability of processed microarray data as an output? | Can there be a gene expression profile clustering without resulting in any processed microarray data as output? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: dat\nDescription: dat is defined as a subclass of both Textual format and Gene expression report format. This means all individuals classified as dat are considered textual formats specifically used for gene expression reporting. No additional property restrictions are specified for this class.\nAxiom: {'subClassOf': ['Textual format', 'Gene expression report format'], 'propertyRestrictions': ['[is format of some Microarray spots image]']}\nGenerated CQs:", "output": "Is it required that propertyRestrictions has the format property with some Microarray spots image? | Does every instance of propertyRestrictions involve a format that includes at least one Microarray spots image? | Can propertyRestrictions exist without being the format of any Microarray spots image? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: dasdna\nDescription: dasdna is defined as a subclass of XML, meaning every dasdna instance is also an instance of XML. No additional axioms specify further restrictions or characteristics, so dasdna inherits all properties of XML without further constraint.\nAxiom: {'subClassOf': ['XML', 'Sequence record format (XML)']}\nGenerated CQs:", "output": "Is dasdna categorized as a specific type within Sequence record format (XML)? | What formats are considered narrower concepts under Sequence record format (XML), such as dasdna? | Which broader format classifications does dasdna fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: pure dna\nDescription: pure dna is defined as a subclass of dna, meaning every instance of pure dna is also an instance of dna. This formalization indicates that pure dna inherits all properties and characteristics of dna, but no further constraints or distinctions are specified in the given axiom.\nAxiom: {'subClassOf': ['dna', 'pure nucleotide']}\nGenerated CQs:", "output": "Does pure dna qualify as an instance within the pure nucleotide category? | Which specific entities are classified under pure nucleotide, including pure dna? | To which broader classes is pure dna hierarchically associated? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CAF\nDescription: CAF is defined as a subclass of Sequence assembly format (text), indicating that it is a specialized text-based format used for representing assembled biological sequence data. Every CAF is a type of Sequence assembly format (text), inheriting all its general properties and characteristics.\nAxiom: {'subClassOf': ['Sequence assembly format (text)', 'Textual format']}\nGenerated CQs:", "output": "Does CAF fall under the category of Textual format? | What kinds of Textual format include CAF as a more specific type? | What broader categories encompass CAF in the ontology hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein interaction network comparison\nDescription: Protein interaction network comparison is defined as a subclass of Protein function comparison. This means that every instance of Protein interaction network comparison is also an instance of Protein function comparison, inheriting all of its general properties, but focusing specifically on the comparative analysis of protein interaction networks rather than other types of protein function comparisons.\nAxiom: {'subClassOf': ['Protein function comparison', 'Protein interaction network analysis']}\nGenerated CQs:", "output": "Is Protein interaction network comparison categorized as a specific kind of Protein interaction network analysis? | Which analysis methods are subclassed under Protein interaction network analysis, such as Protein interaction network comparison? | What broader analytical categories does Protein interaction network comparison inherit from? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: quantsmooth\nDescription: quantsmooth is defined as a subclass of software that is encoded in the R programming language. It is specifically designed to be executed as part of data visualization processes. Additionally, any instance of quantsmooth requires specified data input that must be either ILLUMINA data or a Gene expression dataset. These axioms ensure that quantsmooth is formally categorized as R-based software intended for data visualization applications within the domains of genomic or gene expression data analysis.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is encoded in some R language]', '[is executed in some data visualization]', '[has specified data input some (ILLUMINA data or Gene expression dataset)]', '[has specified data output some Graph plot]']}\nGenerated CQs:", "output": "Is it required that Quantsmooth must produce at least one specified data output that is a Graph plot? | Can Quantsmooth generate a specified data output other than a Graph plot? | Does Quantsmooth always provide a specified data output in the form of a Graph plot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Smultron\nDescription: Smultron is defined as a subclass of software. Any individual of this class must be executed in the context of some text editing, and is characterized by having a version with the value 3.5.1. Smultron requires as specified data input at least one ontology, where the ontology must have a format specification involving some textual format. Furthermore, any instance of Smultron must have a declared status categorized as a latest release. This formalization ensures that Smultron is represented as a specific software release used for text editing, handling ontologies in textual formats.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some text editing]', '[has version hasValue 3.5.1]', '[has specified data input some (Ontology and [has format specification some Textual format])]', '[has declared status some Latest release]', '[has website homepage hasValue http://www.peterborgapps.com/smultron/]']}\nGenerated CQs:", "output": "Is Smultron required to have the website homepage value set to http://www.peterborgapps.com/smultron/? | Does every instance of Smultron have the website homepage http://www.peterborgapps.com/smultron/? | Can a Smultron entity have a website homepage other than http://www.peterborgapps.com/smultron/? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: BAI\nDescription: BAI is defined as a subclass of Data index format. This indicates that every BAI instance is a specific type of Data index format, inheriting all characteristics of data indexing formats, without additional property restrictions.\nAxiom: {'subClassOf': ['Data index format'], 'propertyRestrictions': ['[is format of some Data index]']}\nGenerated CQs:", "output": "Is it required that every BAI is the format of at least one Data index? | Can a BAI exist without being the format of any Data index? | Does the definition of BAI permit it to be the format for multiple Data indices? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ontology format\nDescription: Ontology format is defined as a subclass of Format (typed), indicating that every ontology format is a specialized form of typed format. There are no additional property restrictions specified for this class.\nAxiom: {'subClassOf': ['Format (typed)'], 'propertyRestrictions': ['[is format of some Ontology]']}\nGenerated CQs:", "output": "Does every property restriction necessarily serve as the format of at least one ontology? | Is it required that a property restriction be associated with some ontology through the 'is format of' relationship? | For each property restriction, does there exist an ontology of which it is the format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Endnote\nDescription: Endnote is a software class characterized by several specific features: it has at least one graphical user interface, operates under a proprietary commercial software license, and is currently in live status. Each Endnote instance must have the homepage http://www.endnote.com/ as its website. It is executed within the context of citation management. Additionally, Endnote is the output of a software publishing process that involves Thompson Reuters as a participant.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has interface some graphical user interface]', '[has license some Proprietary commercial software license]', '[has declared status some Live]', '[has website homepage hasValue http://www.endnote.com/]', '[is executed in some citation management]', '[output of some (software publishing process and [has participant hasValue Thompson Reuters])]']}\nGenerated CQs:", "output": "Does Endnote fall under the broader classification of software? | What specific types are listed as subclasses of software, including Endnote? | Which higher-level categories include Endnote within their hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: BAR\nDescription: BAR is defined as a subclass of Binary format, meaning every BAR instance is also considered a Binary format. There are no additional property restrictions specified, so BAR inherits all characteristics and constraints of Binary format without further specialization.\nAxiom: {'subClassOf': ['Binary format'], 'propertyRestrictions': ['[is published by hasValue Affymetrix]']}\nGenerated CQs:", "output": "Is every instance of BAR necessarily published by Affymetrix? | Can a BAR exist if it is not published by Affymetrix? | Does BAR exclusively have the 'is published by' property value set to Affymetrix? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MPL\nDescription: MPL is defined as a subclass of software license. Any instance of MPL must include at least one clause related to distribution with notices, indicating that redistribution under this license requires providing specific notifications or documentation.\nAxiom: {'subClassOf': ['software license'], 'propertyRestrictions': ['[has clause some Distribution with notices]', '[has clause some Source code available]']}\nGenerated CQs:", "output": "Is it required that every MPL instance includes at least one clause where source code is available? | Can an MPL be considered valid if it lacks any clause with available source code? | Does the existence of a clause with source code availability suffice for an MPL to meet its property restrictions? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Text mining\nDescription: Text mining is defined as a subclass of Analysis, focusing specifically on mining information from text data. By axiom, any instance of Text mining must be related to Data mining as a topic (i.e., it analyzes or investigates themes related to data mining) and must produce at least one Text mining report as output. This ensures that all activities or processes classified as Text mining are a type of analysis centered on data mining topics and result in formal text mining reports.\nAxiom: {'subClassOf': ['Analysis'], 'propertyRestrictions': ['[has topic some Data mining]', '[has output some Text mining report]', '[has input some Report]']}\nGenerated CQs:", "output": "Can every instance of Text mining be associated with at least one Report as input? | Is it required that a Text mining process uses a Report as an input? | Does the definition of Text mining ensure that it operates only when a Report is provided as input? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SAGx\nDescription: SAGx is defined as a class of entities that implement at least linear modelling and t-test statistical methods. Every member of this class is published specifically by Bioconductor and must accept as input a graph plot with data strictly formatted as an R data frame. Additionally, all instances of SAGx are encoded in the R programming language. These axioms formally specify the functional, provenance, data input, and implementation characteristics of this class.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': [\"[implements some (Linear modelling and 't-test')]\", '[is published by hasValue Bioconductor]', '[has specified data input some (Graph plot and [has format specification only R data frame])]', '[is encoded in some R language]']}\nGenerated CQs:", "output": "Is SAGx classified under the broader category of software? | Which types fall under the classification of software, including SAGx? | What overarching categories encompass SAGx within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Splice transcript prediction\nDescription: Splice transcript prediction is defined as a subclass of Splicing model analysis. This class represents analyses specifically focused on predicting transcript isoforms that result from RNA splicing events. No additional property restrictions are specified for this class.\nAxiom: {'subClassOf': ['Splicing model analysis'], 'propertyRestrictions': ['[has topic some Gene structure]']}\nGenerated CQs:", "output": "Is it required that every splice transcript prediction is associated with at least one gene structure through the 'has topic' property? | Can a splice transcript prediction exist without having the 'has topic' relation to a gene structure? | Does the 'has topic' property for splice transcript prediction necessarily include a gene structure as its value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: mspcrunch\nDescription: mspcrunch is defined as a subclass of Database hits (sequence) format, indicating that it represents a specific type of sequence data format used for recording database hits. Any individual classified as mspcrunch inherently possesses all the characteristics of Database hits (sequence) format. No additional restrictions or distinguishing features are specified in the current axioms.\nAxiom: {'subClassOf': ['Database hits (sequence) format', 'Textual format']}\nGenerated CQs:", "output": "Is mspcrunch categorized as a subtype of Textual format? | Which specific types fall under the broader class of Textual format, including mspcrunch? | What higher-level format classes does mspcrunch inherit from? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Epitope mapping\nDescription: Epitope mapping is a subclass of protein sequence feature detection, characterized by the requirement that it is related to at least one topic in immunology. Individuals of this class are processes or analyses focused on identifying specific regions (epitopes) within protein sequences that are relevant to immune responses.\nAxiom: {'subClassOf': ['Protein sequence feature detection', 'Mapping'], 'propertyRestrictions': ['[has topic some Immunology]']}\nGenerated CQs:", "output": "Does Epitope mapping fall under the general category of Mapping? | What specialized types are encompassed by Mapping, with reference to Epitope mapping? | Which broader concepts does Epitope mapping inherit from within the hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RBioinf\nDescription: RBioinf is a subclass of software, characterized by handling both data input and output with specific format requirements. It accepts as input data that must be in the form of an R data frame (enforcing a restriction on the input format) and produces output data that is an image, with a further constraint that the image must conform to a recognized image format. Additionally, RBioinf implements some form of linear modelling, indicating that it provides or supports linear modeling functionalities as part of its software capabilities.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data output some (Image and [has format specification some image format])]', '[has specified data input some (data and [has format specification some R data frame])]', '[implements some Linear modelling]', '[is encoded in some R language]']}\nGenerated CQs:", "output": "Is every instance of RBioinf required to be encoded in at least one R language? | Can RBioinf exist without being associated through the 'is encoded in' property with any R language? | Does the 'is encoded in' property for RBioinf necessarily involve an R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NMR spectrum\nDescription: NMR spectrum is defined as a class of entities with the property that they are associated with at least one topic in structural biology. This means any individual classified as an NMR spectrum must have a connection to structural biology through the has topic property.\nAxiom: {'subClassOf': ['Spectrum'], 'propertyRestrictions': ['[has topic some Structural biology]']}\nGenerated CQs:", "output": "Does NMR spectrum fall under the category of Spectrum? | What types of Spectrum include NMR spectrum as a specialized form? | Which more general classes encompass the NMR spectrum? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cell type name\nDescription: Cell type name is defined as a subclass of Name, meaning it inherits all characteristics of Name but specifically refers to names used for identifying cell types. No additional constraints or disjointness axioms are asserted for this class.\nAxiom: {'subClassOf': ['Name', 'Cell type identifier']}\nGenerated CQs:", "output": "Is Cell type name categorized under Cell type identifier? | Which specific cell type names are encompassed by Cell type identifier? | What broader classes does Cell type name fall within according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TreeBASE format\nDescription: TreeBASE format is defined as a subclass of Phylogenetic tree format (text), indicating that it represents a specific kind of text-based format for encoding phylogenetic trees. All individuals in this class must conform to the general characteristics and constraints of text-based phylogenetic tree formats as defined by its superclass.\nAxiom: {'subClassOf': ['Phylogenetic tree format (text)', 'Textual format']}\nGenerated CQs:", "output": "Does TreeBASE format fall under the category of Textual format? | Which specialized formats are encompassed by Textual format, including TreeBASE format? | What broader classifications include TreeBASE format as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OmniOutliner\nDescription: OmniOutliner is a subclass of software characterized by several specific property restrictions. It is the output of software development and software publishing processes in which the participant is Omni. The software is intended to be executed in the context of document outlining. Its official website is http://www.omnigroup.com/products/omnioutliner/, and it is distributed under some form of proprietary commercial software license.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[output of some (software development process and [has participant hasValue Omni])]', '[is executed in some document outlining]', '[output of some (software publishing process and [has participant hasValue Omni])]', '[has website homepage hasValue http://www.omnigroup.com/products/omnioutliner/]', '[has license some Proprietary commercial software license]', '[has specified data output some (data and [has format specification some OmniOutline format])]']}\nGenerated CQs:", "output": "Is it required for every OmniOutliner property restriction to specify data output in at least one data entity that has a format specification of OmniOutline format? | Does the existence of an OmniOutliner property restriction imply that there must be some data output conforming to the OmniOutline format? | Can an OmniOutliner property restriction exist without referencing any data output specified with the OmniOutline format? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene ID (SGD)\nDescription: Gene ID (SGD) is defined as a subclass of SGD ID, indicating that every Gene ID (SGD) instance is also an instance of SGD ID. This class represents identifiers specifically assigned to genes within the SGD (Saccharomyces Genome Database), and inherits all characteristics specified for SGD IDs.\nAxiom: {'subClassOf': ['SGD ID', 'Gene ID']}\nGenerated CQs:", "output": "Is Gene ID (SGD) classified under the broader category of Gene ID? | What specific types are encompassed by the Gene ID class, including Gene ID (SGD)? | Which general identifier categories does Gene ID (SGD) fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Taverna workflow format\nDescription: Taverna workflow format is defined as a subclass of XML, meaning all instances of Taverna workflow format are also instances of XML. This formalizes that Taverna workflow format inherits all characteristics of XML, distinguishing it as a specific type of XML-based format used to represent scientific workflows.\nAxiom: {'subClassOf': ['XML', 'Workflow format']}\nGenerated CQs:", "output": "Is Taverna workflow format classified under the broader category of Workflow format? | What specific workflow formats, such as Taverna workflow format, are included within Workflow format? | Which higher-level categories does Taverna workflow format fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: limmaGUI\nDescription: limmaGUI is a subclass of software specifically designed to work with text data sets. It accepts text data sets as input and produces text data sets as output, with the output being restricted to those formatted strictly according to the TIFF specification. limmaGUI implements some form of linear modelling functionality and is published by Bioconductor. This formalization ensures that any instance of limmaGUI is a software application with clearly defined input/output requirements, supports linear modelling, and is associated with the Bioconductor publisher.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[has specified data output some (Text data set and [has format specification only TIFF])]', '[implements some Linear modelling]', '[is published by hasValue Bioconductor]', '[has specified data input some Text data set]', '[is encoded in some R language]']}\nGenerated CQs:", "output": "Is every instance of limmaGUI necessarily encoded in at least one R language implementation? | Can limmaGUI be encoded in any programming language other than R language? | Must limmaGUI have an encoding relationship specifically with the R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein domain classification format\nDescription: Protein domain classification format is defined as a class of formats that are used specifically as formats of some Protein family report. Any instance of this class must serve as the format for at least one Protein family report, reflecting its role in organizing or structuring protein domain classification data.\nAxiom: {'subClassOf': ['Format (typed)'], 'propertyRestrictions': ['[is format of some Protein family report]']}\nGenerated CQs:", "output": "Is Protein domain classification format categorized as a more specific type of Format? | Which types fall under the broader classification of Format, including Protein domain classification format? | What higher-level categories does Protein domain classification format belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Virulence prediction\nDescription: Virulence prediction is a subclass of prediction and recognition, characterized by the requirement that its subject matter concerns microbiology. Any instance of virulence prediction must be related to at least one topic within the field of microbiology, ensuring a formal connection to biological processes or factors that influence pathogenicity.\nAxiom: {'subClassOf': ['Prediction and recognition', 'Sequence analysis'], 'propertyRestrictions': ['[has topic some Microbiology]']}\nGenerated CQs:", "output": "Is Virulence prediction recognized as a specific form of Sequence analysis? | Which analyses fall under the broader category of Sequence analysis, including Virulence prediction? | What parent categories encompass Virulence prediction within the ontology structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: bigWig\nDescription: bigWig is defined as a subclass of Sequence annotation track format, indicating that it represents a specific type of file format used for annotating sequences. Any individual classified as bigWig inherits all characteristics of sequence annotation track formats.\nAxiom: {'subClassOf': ['Sequence annotation track format', 'Binary format']}\nGenerated CQs:", "output": "Is bigWig classified under the broader Binary format category? | What Binary format subclasses exist, and does this include bigWig? | Which higher-level types encompass bigWig as a more specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CDF ASCII format\nDescription: CDF ASCII format is a subclass of ASCII format, indicating that every instance of CDF ASCII format is also an instance of ASCII format. There are no additional property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['ASCII format'], 'propertyRestrictions': ['[is published by hasValue Affymetrix]']}\nGenerated CQs:", "output": "Is every instance of the CDF ASCII format published exclusively by Affymetrix? | Must the publisher of any CDF ASCII format always be Affymetrix? | Can a valid CDF ASCII format have a publisher different from Affymetrix? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RDF format\nDescription: RDF format is defined as a subclass of XML, meaning every RDF format is considered a type of XML. This formalization indicates that RDF format inherits all characteristics of XML, situating it within the XML family of document representations.\nAxiom: {'subClassOf': ['XML', 'Ontology format']}\nGenerated CQs:", "output": "Is RDF format considered a more specific type within the broader category of Ontology format? | Which formats are classified as subclasses of Ontology format, including RDF format? | To what higher-level format categories does RDF format belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Transcription factor accession\nDescription: Transcription factor accession is defined as a subclass of both Accession and Transcription factor identifier. This means that every individual classified as a Transcription factor accession is recognized as both an Accession and a Transcription factor identifier, inheriting all their respective characteristics and constraints. This class is used to uniquely identify transcription factors through standardized accession identifiers.\nAxiom: {'subClassOf': ['Accession', 'Transcription factor identifier', 'Protein accession']}\nGenerated CQs:", "output": "Is a Protein accession a more general category that encompasses Transcription factor accession? | Which specific accessions fall under the category of Protein accession, including Transcription factor accession? | To which broader accession types does a Transcription factor accession belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Repeat sequence organisation analysis\nDescription: Repeat sequence organisation analysis is defined as a subclass of Sequence composition calculation. This means that any instance of Repeat sequence organisation analysis is also an instance of Sequence composition calculation, inheriting its characteristics and properties. The class focuses specifically on analyzing the organization of repeat sequences within the broader context of sequence composition calculations.\nAxiom: {'subClassOf': ['Sequence composition calculation', 'Repeat sequence analysis']}\nGenerated CQs:", "output": "Does Repeat sequence organisation analysis fall under the broader category of Repeat sequence analysis? | Which analyses are specific types included within Repeat sequence analysis, such as Repeat sequence organisation analysis? | What higher-level analysis categories encompass Repeat sequence organisation analysis? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Enzyme kinetics data\nDescription: Enzyme kinetics data is defined as a subclass of Protein property, representing properties specifically related to the kinetic behaviors and characteristics of enzymes. Any instance of enzyme kinetics data is recognized as a specific type of property associated with proteins, focusing on measurements such as reaction rates, substrate affinities, and catalytic constants.\nAxiom: {'subClassOf': ['Protein property', 'Reaction data']}\nGenerated CQs:", "output": "Does Enzyme kinetics data qualify as a more specific form of Reaction data? | Which data types are categorized under Reaction data, including Enzyme kinetics data? | To which higher-level data categories does Enzyme kinetics data pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RFAM accession\nDescription: RFAM accession is defined as a subclass of Accession, indicating that it inherits all properties and constraints of Accession while representing a specific type of accession identifier used within the RFAM database. No additional distinguishing axioms or restrictions are specified beyond its specialization as an Accession.\nAxiom: {'subClassOf': ['Accession', 'RNA family identifier']}\nGenerated CQs:", "output": "Does RFAM accession fall under the category of RNA family identifier? | Which identifiers are classified as more specific types of RNA family identifier, including RFAM accession? | What are the broader identifier categories that include RFAM accession? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GPCR coupling selectivity prediction\nDescription: GPCR coupling selectivity prediction is a subclass of both Protein interaction prediction and GPCR analysis, indicating that it concerns computational inference methods related to the interaction and functional analysis of G protein-coupled receptors (GPCRs). Every instance of this class is required to produce at least one output of type Protein report. This formalism ensures that any process or tool classified under GPCR coupling selectivity prediction must involve the analysis of GPCR coupling selectivity and result in a relevant protein report as output.\nAxiom: {'subClassOf': ['Protein interaction prediction', 'GPCR analysis', 'Protein property calculation (from sequence)'], 'propertyRestrictions': ['[has output some Protein report]']}\nGenerated CQs:", "output": "Does GPCR coupling selectivity prediction fall under the category of Protein property calculation (from sequence)? | Which concepts are classified as subclasses of Protein property calculation (from sequence), including GPCR coupling selectivity prediction? | What are the broader categories that encompass GPCR coupling selectivity prediction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Scanning software G2565AA version A6.3.1\nDescription: Scanning software G2565AA version A6.3.1 is defined as a subclass of scanning software, inheriting all the general characteristics of scanning software without any additional distinguishing property-based restrictions.\nAxiom: {'subClassOf': ['scanning software'], 'propertyRestrictions': ['[is developed by hasValue Agilent Technologies]']}\nGenerated CQs:", "output": "Is Scanning software G2565AA version A6.3.1 necessarily developed by Agilent Technologies? | Can Scanning software G2565AA version A6.3.1 have a developer other than Agilent Technologies? | Does the property restriction require that Agilent Technologies is assigned as the developer for Scanning software G2565AA version A6.3.1? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InChI\nDescription: InChI is defined as a subclass of textual format, indicating that it represents a type of information expressed in text form. Every instance of InChI is therefore also a textual format, inheriting all characteristics of textual data representations.\nAxiom: {'subClassOf': ['Textual format', 'Chemical formula format']}\nGenerated CQs:", "output": "Is InChI classified as a more specific type of Chemical formula format? | What chemical formula formats encompass InChI as a subset? | Which broader categories does InChI, as a format, fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Reference map name (SWISS-2DPAGE)\nDescription: Reference map name (SWISS-2DPAGE) is defined as a subclass of Name, indicating that every instance of Reference map name (SWISS-2DPAGE) is a specific kind of Name. There are no further restrictions or distinguishing axioms specified for this class.\nAxiom: {'subClassOf': ['Name', 'Gel ID']}\nGenerated CQs:", "output": "Does Reference map name (SWISS-2DPAGE) fall under the category of Gel ID? | Which types are classified as more specific than Gel ID, such as Reference map name (SWISS-2DPAGE)? | To which broader class or classes does Reference map name (SWISS-2DPAGE) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Python 2.6\nDescription: Python 2.6 is defined as a class of entities for which the property 'has version' is restricted to have the value 'Python version 2.6'. Membership in this class requires that the entity is specifically associated with version 2.6 of Python.\nAxiom: {'subClassOf': ['Python'], 'propertyRestrictions': ['[has version hasValue Python version 2.6]']}\nGenerated CQs:", "output": "Does Python 2.6 fall under the broader classification of Python? | Which versions or variants are subclasses of Python, including Python 2.6? | Of which higher-level software languages is Python 2.6 a specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: cghMCR\nDescription: The class cghMCR represents a computational resource that is published by Bioconductor and implements some MCR algorithm. Instances of this class must be encoded in the R language and are executed in the context of data normalization. They require input data that is an R data frame (as specified by the input format) and produce output that includes graph plots and R data frames with explicit format specifications. This formalization ensures the resource strictly adheres to R-based input/output conventions and adheres to data normalization workflows within the Bioconductor ecosystem.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is published by hasValue Bioconductor]', '[is executed in some data normalization]', '[has specified data output some (Graph plot and [has format specification only R data frame])]', '[is encoded in some R language]', '[implements some MCR algorithm]', '[has specified data input some [has format specification only R data frame]]']}\nGenerated CQs:", "output": "Is cghMCR categorized under the broader class of software? | Which entities are specified as subclasses of software, such as cghMCR? | To what parent classes is cghMCR directly associated in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Feature Extraction Software\nDescription: Feature Extraction Software is defined as a subclass of Affymetrix GeneChip Operating Software. This classification indicates that every Feature Extraction Software is considered a specialized form of Affymetrix GeneChip Operating Software, inheriting all its characteristics. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['Affymetrix GeneChip Operating Software'], 'propertyRestrictions': ['[is executed in some feature extraction]']}\nGenerated CQs:", "output": "Must every Feature Extraction Software be associated with at least one instance of execution within a feature extraction process? | Is it a requirement that Feature Extraction Software instances operate within some kind of feature extraction context? | Can Feature Extraction Software exist without being executed in any feature extraction activity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Agilent Technologies Software\nDescription: Agilent Technologies Software is defined as software that is an output of some software publishing process, where Agilent Technologies participates in the process. Formally, any instance of this class must result from a software publishing activity involving Agilent Technologies as a participant. This ensures that only software authored or published with Agilent Technologies' involvement is classified under this class.\nAxiom: {'subClassOf': ['software'], 'equivalentClass': ['[output of some (software publishing process and [has participant hasValue Agilent Technologies])]']}\nGenerated CQs:", "output": "Does Agilent Technologies Software fall under the broader classification of software? | Which specific categories are encompassed within the software class, such as Agilent Technologies Software? | What higher-level groups include Agilent Technologies Software as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Phylogenetic tree generation (from molecular sequences)\nDescription: Phylogenetic tree generation (from molecular sequences) is defined as a subclass of Phylogenetic tree generation (data centric), indicating that it represents a specialized form of phylogenetic tree generation focusing specifically on the analysis and processing of molecular sequence data to construct phylogenetic trees. All characteristics and constraints of the parent class apply to this subclass.\nAxiom: {'subClassOf': ['Phylogenetic tree generation (data centric)', 'Sequence analysis']}\nGenerated CQs:", "output": "Is phylogenetic tree generation (from molecular sequences) included within the scope of sequence analysis? | What are the distinct types of sequence analysis activities, including phylogenetic tree generation (from molecular sequences)? | Which higher-level analytical processes encompass phylogenetic tree generation (from molecular sequences) as a more specific method? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: File format name\nDescription: File format name is defined as a subclass of Name. This indicates that every File format name is also a Name, inheriting all properties of Name, but it specifically refers to names associated with file formats. No additional constraints or differentiations are specified.\nAxiom: {'subClassOf': ['Name', 'Format identifier']}\nGenerated CQs:", "output": "Does File format name fall under the broader class of Format identifier? | Which entities are classified as more specific instances of Format identifier, such as File format name? | What higher-level categories does File format name belong to within this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChipSkipper\nDescription: ChipSkipper is defined as a subclass of software. This means every instance of ChipSkipper is an instance of software, inheriting all properties and characteristics of the software class. There are no additional property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[output of some (software publishing process and [has participant hasValue EMBL])]']}\nGenerated CQs:", "output": "Is every output of a ChipSkipper software publishing process required to have EMBL as a participant? | Does the software publishing process output by ChipSkipper always involve EMBL as one of its participants? | Can a ChipSkipper software publishing process produce any output without the involvement of EMBL as a participant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein binding site prediction (from structure)\nDescription: Protein binding site prediction (from structure) is defined as a subclass of Protein binding site prediction, indicating that it specializes in predicting protein binding sites specifically based on structural information. No additional axioms restrict or further define this class.\nAxiom: {'subClassOf': ['Protein binding site prediction', 'Protein structural motif recognition']}\nGenerated CQs:", "output": "Is Protein structural motif recognition the direct superclass of Protein binding site prediction (from structure)? | Which specific recognition methods are classified under Protein structural motif recognition? | To which broader recognition categories does Protein binding site prediction (from structure) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence alignment validation\nDescription: Sequence alignment validation is defined as a subclass of Sequence alignment analysis. This indicates that every instance of Sequence alignment validation is also considered an instance of Sequence alignment analysis, inheriting all its properties and constraints. This class specifically represents analyses dedicated to verifying or assessing the quality, correctness, or validity of sequence alignments.\nAxiom: {'subClassOf': ['Sequence alignment analysis', 'Validation']}\nGenerated CQs:", "output": "Is Sequence alignment validation categorized as a type of Validation? | Which Validation subclasses include Sequence alignment validation? | What broader groups does Sequence alignment validation fall under within the Validation hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TAIR accession\nDescription: TAIR accession is defined as a subclass of Identifier (hybrid), indicating that it is a specific type of identifier within the ontology. This formalization ensures that every TAIR accession inherits all characteristics of Identifier (hybrid), establishing its role in uniquely identifying entities, likely related to the TAIR (The Arabidopsis Information Resource) database.\nAxiom: {'subClassOf': ['Identifier (hybrid)', 'Accession']}\nGenerated CQs:", "output": "Is TAIR accession categorized as a kind of Accession? | Which specific types of Accession include TAIR accession? | To what higher-level classes does TAIR accession belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HMMER profile alignment (sequences versus HMMs)\nDescription: HMMER profile alignment (sequences versus HMMs) is defined as a subclass of Textual format, indicating that it is a type of data or result represented in a textual form. This class specifically pertains to output or formats generated from performing sequence alignments against Hidden Markov Models (HMMs), and is characterized by its textual data structure.\nAxiom: {'subClassOf': ['Textual format', 'Sequence-profile alignment format']}\nGenerated CQs:", "output": "Does HMMER profile alignment (sequences versus HMMs) fall under the category of Sequence-profile alignment format? | What specific alignment formats are classified as types of Sequence-profile alignment format, including HMMER profile alignment (sequences versus HMMs)? | Which broader alignment format categories does HMMER profile alignment (sequences versus HMMs) inherit from? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Enzyme ID (BioCyc)\nDescription: Enzyme ID (BioCyc) is defined as a subclass of Enzyme ID, indicating that it represents a specialized category of enzyme identifiers used specifically within the BioCyc database. Individuals of this class inherit all characteristics of Enzyme ID but are uniquely associated with the BioCyc resource.\nAxiom: {'subClassOf': ['Enzyme ID', 'BioCyc ID']}\nGenerated CQs:", "output": "Is an Enzyme ID (BioCyc) classified under the broader identifier category of BioCyc ID? | Which identifier types are included as specializations of BioCyc ID, such as Enzyme ID (BioCyc)? | What hierarchical categories does Enzyme ID (BioCyc) fall under within the scope of BioCyc identifiers? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein-protein interaction prediction (from protein structure)\nDescription: Protein-protein interaction prediction (from protein structure) is a subclass of both Protein feature detection and Protein-protein interaction prediction. This class represents predictive analyses that infer potential interactions between proteins specifically by analyzing their structural features, thus inheriting properties related to both detecting features in proteins and predicting their mutual interactions.\nAxiom: {'subClassOf': ['Protein feature detection', 'Protein-protein interaction prediction', 'Protein structure analysis']}\nGenerated CQs:", "output": "Is protein-protein interaction prediction (from protein structure) categorized under protein structure analysis? | Which analysis methods are recognized as more specific forms of protein structure analysis, such as protein-protein interaction prediction (from protein structure)? | What broader analytical categories encompass protein-protein interaction prediction (from protein structure)? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TCoffee\nDescription: TCoffee is defined as a subclass of software, indicating that any instance of TCoffee is necessarily a software application. There are no additional property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some multiple sequence alignment]']}\nGenerated CQs:", "output": "Is it necessary for TCoffee to be executed in a multiple sequence alignment? | Does TCoffee always participate in at least one multiple sequence alignment process? | Can TCoffee exist without being executed in a multiple sequence alignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 'domainsignatures'\nDescription: domainsignatures is defined as a subclass of software that implements some Gene-Set Enrichment Analysis. Instances of this class are required to take a Gene list as a specified data input and produce a Graph plot as a specified data output. Furthermore, domainsignatures are executed within the context of descriptive statistical calculation, indicating their analytical purpose in biological or computational workflows.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some Gene-Set Enrichment Analysis]', '[has specified data input some Gene list]', '[has specified data output some Graph plot]', '[is executed in some descriptive statistical calculation]', '[is encoded in some R language]']}\nGenerated CQs:", "output": "Is every domainsignature required to be encoded in at least one R language? | Are there any domainsignatures that must only be encoded in an R language and not in any other language? | Can a domainsignature exist without being encoded in an R language? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: nexusnon\nDescription: nexusnon is a subclass of both Textual format and Sequence record format (text), indicating that it represents a type of sequence record format that is specifically in textual form. All instances of nexusnon inherit the characteristics of textual formats and sequence record formats represented as text.\nAxiom: {'subClassOf': ['Textual format', 'Sequence record format (text)', 'Alignment format (text)']}\nGenerated CQs:", "output": "Is nexusnon categorized under the broader class of Alignment format? | Which Alignment format subclasses are defined, including nexusnon? | To which superordinate classes does nexusnon belong within the Alignment format hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence image\nDescription: Sequence image is defined as a subclass of Image, signifying that every Sequence image is an Image with all the properties and constraints of the Image class. No additional axioms or restrictions are imposed beyond this classification.\nAxiom: {'subClassOf': ['Image', 'Sequence report']}\nGenerated CQs:", "output": "Is Sequence report a generalization of Sequence image? | Which specific types fall under the category of Sequence report, including Sequence image? | What broader concepts encompass Sequence image in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Reaction ID (KEGG)\nDescription: Reaction ID (KEGG) is defined as a subclass of KEGG object identifier. This means that each Reaction ID (KEGG) is a specific type of identifier used in the KEGG database to uniquely represent biochemical reactions, inheriting all characteristics of KEGG object identifiers.\nAxiom: {'subClassOf': ['KEGG object identifier', 'Reaction ID']}\nGenerated CQs:", "output": "Are all Reaction ID (KEGG) instances classified under Reaction ID? | Which identifiers constitute subclasses of Reaction ID, specifically including Reaction ID (KEGG)? | Which upper-level categories include Reaction ID (KEGG) as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Staden format\nDescription: Staden format is defined as a subclass of Textual format, meaning it represents a specific type of format characterized by text-based structure. Any instance of Staden format is necessarily an instance of Textual format, inheriting all properties and constraints applicable to textual representations.\nAxiom: {'subClassOf': ['Textual format', 'Sequence record format (text)']}\nGenerated CQs:", "output": "Is every Staden format classified under Sequence record format? | Which sequence record formats encompass Staden format as a more specific type? | Under which broader record format categories is Staden format organized? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein structural motifs and surfaces\nDescription: Protein structural motifs and surfaces is defined as a subclass of both Obsolete concept (EDAM) and Protein structure analysis. This means it represents concepts within protein structure analysis that have been designated obsolete in the EDAM ontology. Individuals of this class are associated with outdated or superseded notions related to motifs and surfaces observed in protein structures.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)', 'Protein structure analysis', 'Protein sites, features and motifs']}\nGenerated CQs:", "output": "Is \"Protein structural motifs and surfaces\" classified under the broader group \"Protein sites, features and motifs\"? | Which entities are defined as more specific components within \"Protein sites, features and motifs\"? | What broader categories encompass \"Protein structural motifs and surfaces\"? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IRanges\nDescription: IRanges is a class that represents processes or operations encoded in the R language, specifically executed in the contexts of data normalization and decision tree induction. Any instance of IRanges must be associated with at least one specified data input and one specified data output, both of which are data entities formatted according to the R data frame specification. This formalization ensures that IRanges relates to R-encoded analytical procedures with clearly defined input and output data structures compatible with R data frames.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some data normalization]', '[has specified data input some (data and [has format specification some R data frame])]', '[is executed in some decision tree induction]', '[is encoded in some R language]', '[has specified data output some (data and [has format specification some R data frame])]']}\nGenerated CQs:", "output": "Can IRanges be classified as a type of software? | What instances are included within the subclasses of software, such as IRanges? | Which broader classes encompass IRanges? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Peptide ID\nDescription: Peptide ID is a subclass of Molecule accession, meaning every Peptide ID is also a type of Molecule accession. This classification specifies that Peptide ID is used to uniquely reference peptides within a molecular database or ontology context.\nAxiom: {'subClassOf': ['Molecule accession', 'Peptide identifier']}\nGenerated CQs:", "output": "Is Peptide identifier a broader classification that includes Peptide ID as a more specific type? | Which identifiers are considered subclasses of Peptide identifier, such as Peptide ID? | What are the parent classes of the Peptide ID concept in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence generation (protein)\nDescription: Sequence generation (protein) is defined as a subclass of Protein analysis. This indicates that sequence generation (protein) is a specialized form of protein analysis, encompassing processes or methods specifically related to generating the amino acid sequence of proteins. All characteristics and constraints applicable to Protein analysis also apply to Sequence generation (protein).\nAxiom: {'subClassOf': ['Protein analysis', 'Sequence generation']}\nGenerated CQs:", "output": "Is Sequence generation (protein) classified under the broader category of Sequence generation? | What more specific types fall under Sequence generation, including Sequence generation (protein)? | To which higher-level categories does Sequence generation (protein) belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is executed in\nDescription: The property \"is executed in\" relates instances of the class \"software\" to instances of \"information processing.\" It has no explicitly defined characteristics, super-properties, or inverse property. The domain restriction specifies that the subject must be software, and the range restriction specifies that the object must be information processing. This property is used to indicate the information processing context or environment in which a software entity operates.\nAxiom: {'characteristics': [], 'domain': ['software'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is information processing the only type of entity that can be in the range of 'is executed in'? | Can 'is executed in' relate to anything outside the scope of information processing as its range? | What entities may serve as the range for the property 'is executed in'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is version of\nDescription: The property \"is version of\" has no explicitly defined characteristics or super-properties. It has a domain restricted to \"version name\" and no specified range. This property is intended to relate version names to the entities they are versions of, as referenced by the external resource: http://softwareontology.wordpress.com/2012/06/20/versioning-in-swo/. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'is version of' have a subject that is not a version? | Is every object used with the property 'is version of' required to be a version name? | What entities are permitted as the domain for the property 'is version of'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: followed by\nDescription: The property \"followed by\" is defined as a transitive object property and a sub-property of owl:topObjectProperty. Its domain and range are unrestricted. The inverse property is \"preceded by.\" According to the current description, this property is based on relations used in RO and BFO ontologies and is assumed to represent the transitive form, though not yet incorporated into BFO2.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse property of 'followed by' in the ontology? | If entity A is followed by entity B, does it necessarily mean that B is preceded by A? | How do the properties 'followed by' and 'preceded by' correspond to each other within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is input of\nDescription: The property \"is input of\" relates an entity classified as \"data\" (domain) to an \"information processing\" activity (range). It has no explicitly defined characteristics or super-properties, and its inverse is \"has input.\" According to its current definition, \"'A is_input_of B' specifies that subject A is a necessary or actual input or input argument to object B,\" where A may be any data entity and B is an information processing operation. In the EDAM ontology, \"is_input_of\" is typically not asserted between concepts, but its inverse—\"has_input\"—is defined.\nAxiom: {'characteristics': [], 'domain': ['data'], 'range': ['information processing'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties ‘is input of’ and ‘has input’ connected in the ontology? | If entity X is input of process Y, does it follow that process Y has input X? | Which property acts as the inverse of ‘is input of’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is topic of\nDescription: The property \"is topic of\" relates an instance of 'Topic' (the subject) to an instance of 'data or information processing' (the object), indicating that the topic is the subject or scope of the referenced data or process. The domain is restricted to 'Topic', while the range includes data or information processing entities. There are no declared property characteristics, super-properties, or sub-properties. The inverse property is 'has topic'. In EDAM, this property is not used directly between EDAM concepts; instead, the inverse 'has topic' is applied. The property asserts that a topic A is the topic of object B, establishing a scope relationship.\nAxiom: {'characteristics': [], 'domain': ['Topic'], 'range': ['(data and information processing)'], 'subPropertyOf': [], 'inverseOf': ['has topic']}\nGenerated CQs:", "output": "Can the property 'is topic of' have a range other than 'data or information processing'? | Is every entity in the range of 'is topic of' required to be a 'data or information processing' item? | What types of entities can serve as the range for the property 'is topic of'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is published by\nDescription: The property \"is published by\" relates data format specifications or software to organizations, indicating the publishing organization responsible for these entities. It has no explicitly defined characteristics or inverse properties. The property is a sub-property of owl:topObjectProperty, making it a general object property. Its domain includes data format specifications or software, and its range is restricted to organizations.\nAxiom: {'characteristics': [], 'domain': ['(data format specification and software)'], 'range': ['organization'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'is published by' have a subject other than a data format specification or software? | What types of entities can be the domain for the 'is published by' property? | Are all instances used with the 'is published by' property required to be either data format specifications or software as subjects? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: has specified data input\nDescription: The property \"has specified data input\" does not have defined characteristics, domain, super-properties, or an inverse property. Its range is specified as \"data\", indicating that this property is used to relate an entity to a data input.\nAxiom: {'characteristics': [], 'domain': ['software'], 'range': ['data'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can entities other than software be subjects of the property 'has specified data input'? | Is it mandatory that every subject using 'has specified data input' belongs to the class software? | Which types of entities are permitted as the domain of the property 'has specified data input'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: has format specification\nDescription: The property \"has format specification\" relates an information content entity to a data format specification. It has no explicitly defined characteristics or super-properties. Its domain is restricted to information content entities, and its range is restricted to data format specifications. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['information content entity'], 'range': ['data format specification'], 'subPropertyOf': ['is encoded in'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every use of the has format specification property also an instance of the is encoded in property? | Which subproperties are defined under the is encoded in property, including has format specification? | What are the superproperties of the has format specification property within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: has license\nDescription: The property \"has license\" has no explicitly defined characteristics, domain, or range restrictions. It is declared as a sub-property of \"is about,\" indicating that any assertion using \"has license\" also implies a broader \"is about\" relationship. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['software license'], 'subPropertyOf': ['is about'], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'has license' ever have a range different from 'software license'? | Is every entity linked by the 'has license' property required to be a 'software license'? | What types of resources can appear as the range for the 'has license' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: output of\nDescription: The property \"output of\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. This suggests that its usage is not constrained by the ontology and can be broadly applied without formal limitations.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['participates in'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every output of a property that is a subproperty of output also considered to participate in some activity or process? | Which properties are included as subproperties under output and thereby inherit the participates in relationship? | What are the superproperties of output based on its subPropertyOf relationship with participates in? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Recognition\nDescription: Recognition is defined as a subclass of Observation. It is characterized by two key property restrictions: it can only describe instances of ComplexActivity events, and recognitions must be provided exclusively by either a Person or a ProcessingComponent. This ensures that all individuals of the Recognition class represent observations describing complex activities, with clear provenance limited to human or automated sources.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[describes only event:ComplexActivity]', '[providedBy only (event:Person or ProcessingComponent)]']}\nGenerated CQs:", "output": "Does Recognition fall under the broader classification of Observation? | Which categories are more specific than Observation and encompass Recognition? | What higher-level classes does Recognition conceptually fit within? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Result\nDescription: Result is defined as a class whose instances must be described by exactly one home:DaySummary or home:Problem, and may only describe such entities. Each Result must be provided by exactly one agent, which must be either an event:Person or a ProcessingComponent, and cannot be provided by any other type. Every Result must have a reporting time, which must be exactly one instance of time:Instant, and no other type is allowed. Additionally, each Result must have exactly one plausibility metric, which must be of datatype xsd:double. This formalization ensures that every Result precisely links to its provenance, timing, evaluation, and what it represents within the domain.\nAxiom: {'propertyRestrictions': ['[providedBy exactly 1 (event:Person or ProcessingComponent)]', '[hasReportingTime exactly 1 time:Instant]', '[hasReportingTime only time:Instant]', '[describes only (home:DaySummary or home:Problem)]', '[hasPlausibilityMetric exactly 1 xsd:double]', '[providedBy only (event:Person or ProcessingComponent)]', '[hasPlausibilityMetric only xsd:double]']}\nGenerated CQs:", "output": "Is a Result required to describe either exactly one DaySummary or exactly one Problem, but not both or any other type? | Can a Result provide a description that is limited strictly to one instance among DaySummary or Problem? | Does the ontology enforce that each Result corresponds to one and only one entity of the DaySummary or Problem categories? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Accelerometer\nDescription: Accelerometer is defined as a subclass of WearableSensor. This means that every accelerometer is considered a wearable sensor, inheriting all characteristics of wearable sensors. Accelerometers are specialized sensors used in wearable devices to measure acceleration forces, which can be used to detect motion, orientation, and activity levels. No additional axioms further constrain the class.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "output": "What broader sensor groups does Accelerometer belong to? | Is Accelerometer categorized under WearableSensor? | Which other types of sensors are classified as WearableSensor alongside Accelerometer? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DTI-2\nDescription: DTI-2 is defined as a subclass of WearableSensor, indicating that it inherits all characteristics of wearable sensors. This means any instance of DTI-2 is necessarily a wearable sensor, though no further distinguishing properties or restrictions are specified.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "output": "Which sensor types are more specific than WearableSensor, specifically including DTI-2? | To which parent categories does DTI-2 conceptually belong? | Does DTI-2 fall under the category of WearableSensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableMicrophone\nDescription: WearableMicrophone is defined as a subclass of WearableSensor. This class represents microphones that are designed to be worn on the body, distinguishing them from other types of wearable sensors by their specific function of capturing audio signals. Members of this class inherit all attributes and behaviors of wearable sensors, with a focus on audio data acquisition.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "output": "Which types of WearableSensor include WearableMicrophone as a more specific subclass? | Into what higher-level classes can the WearableMicrophone entity be grouped? | Does WearableMicrophone fall under the broader class of WearableSensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableVideoCamera\nDescription: WearableVideoCamera is defined as a subclass of WearableSensor. This means any instance of WearableVideoCamera is also an instance of WearableSensor, inheriting all characteristics of wearable sensors. WearableVideoCamera specifically refers to sensors that are worn on the body and are capable of capturing video data.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "output": "To which broader sensor categories does WearableVideoCamera belong according to the ontology? | Is WearableVideoCamera classified as a kind of WearableSensor? | Which sensor types are considered more specific instances of WearableSensor, such as WearableVideoCamera? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Alert\nDescription: Alert is defined as a subclass of Feedback, meaning every instance of Alert is also considered an instance of Feedback. This class captures specific types of feedback events characterized as alerts, distinguishing them from other forms of feedback. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Feedback']}\nGenerated CQs:", "output": "Is Alert classified as a type of Feedback? | What are all subclasses categorized under Feedback, such as Alert? | Which higher-level categories does Alert fall under? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ambient2DVideoCamera\nDescription: Ambient2DVideoCamera is defined as a subclass of FixedSensor, indicating that every Ambient2DVideoCamera is a type of sensor with a fixed position. This class represents video cameras designed to capture ambient, two-dimensional visual information from a stationary location.\nAxiom: {'subClassOf': ['FixedSensor']}\nGenerated CQs:", "output": "Which sensor types are categorized as subclasses of FixedSensor, such as Ambient2DVideoCamera? | What parent classes are associated with Ambient2DVideoCamera? | Does Ambient2DVideoCamera fall under the category of FixedSensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: _3DVideoCamera\nDescription: _3DVideoCamera is defined as a subclass of FixedSensor, indicating that every instance of _3DVideoCamera is a type of sensor that operates in a fixed position. This class represents cameras capable of capturing three-dimensional video data, inheriting all characteristics of fixed sensors.\nAxiom: {'subClassOf': ['FixedSensor']}\nGenerated CQs:", "output": "Which sensor types are subclasses of FixedSensor, with reference to 3DVideoCamera? | Does the category FixedSensor include more specific types such as 3DVideoCamera? | To which higher-level classes does 3DVideoCamera belong within this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FixedSensor\nDescription: FixedSensor is defined as a subclass of Sensor. This indicates that every FixedSensor is a type of Sensor, inheriting all characteristics of the Sensor class. No additional constraints or distinguishing axioms are specified beyond this hierarchical relationship, meaning FixedSensors share the essential properties of Sensors.\nAxiom: {'subClassOf': ['Sensor']}\nGenerated CQs:", "output": "What more general groupings include FixedSensor as a member? | Which types are directly categorized under Sensor, such as FixedSensor? | Is FixedSensor classified within the broader group of Sensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableSensor\nDescription: WearableSensor is defined as a subclass of Sensor. This means that every instance of WearableSensor is also considered an instance of Sensor, inheriting its general properties and behaviors. WearableSensor typically refers to a sensor designed to be worn on the human body for the purpose of monitoring physiological signals, activity, or environmental parameters.\nAxiom: {'subClassOf': ['Sensor']}\nGenerated CQs:", "output": "Which entities are defined as more specific types within Sensor, such as WearableSensor? | What higher-level groups does WearableSensor belong to in the ontology? | Does the category WearableSensor fall under the broader classification of Sensor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Measurement\nDescription: Measurement is defined as a subclass of Observation. Every Measurement instance formally describes only entities classified as event:Measurement, ensuring it cannot describe other types of events. Additionally, each Measurement must be provided by either an event:Person or a Sensor, restricting its provenance to these two sources. This specification captures the nature of measurements as observational entities exclusively linked to specific events and originating strictly from people or sensor devices.\nAxiom: {'subClassOf': ['Observation'], 'propertyRestrictions': ['[providedBy only (event:Person or Sensor)]', '[describes some event:Measurement]']}\nGenerated CQs:", "output": "Is every instance described by the Measurement property necessarily an event:Measurement? | Can Measurement describe anything other than event:Measurement entities? | Does the Measurement property exclusively reference individuals classified as event:Measurement? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Report\nDescription: Report is a class defined by a set of strict property restrictions: each instance must be provided by exactly one event:Person and must refer to exactly one instance of either home:Questionnaire, lab:ClinicalRecord, or lab:DemographicCharacteristicsRecord. Additionally, every Report must have exactly one hasPlausibilityMetric value of type xsd:double and exactly one hasReportingTime value of type time:Instant, with no other values permitted for these properties. The class definition ensures that each Report is uniquely associated with one provider, one time of reporting, a plausibility metric, and one described source record, reflecting a precise and singular reporting activity.\nAxiom: {'propertyRestrictions': ['[hasPlausibilityMetric exactly 1 xsd:double]', '[hasPlausibilityMetric only xsd:double]', '[providedBy exactly 1 event:Person]', '[hasReportingTime exactly 1 time:Instant]', '[providedBy only event:Person]', '[hasReportingTime only time:Instant]', '[describes exactly 1 (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]', '[describes only (home:Questionnaire and lab:ClinicalRecord and lab:DemographicCharacteristicsRecord)]']}\nGenerated CQs:", "output": "Are reports allowed to describe any resource other than Questionnaire, Clinical Record, or Demographic Characteristics Record? | Is a report's describes property strictly limited to Questionnaire, Clinical Record, or Demographic Characteristics Record? | Does every report exclusively describe either a Questionnaire, Clinical Record, or Demographic Characteristics Record? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Detection\nDescription: Detection is a class characterized by property restrictions specifying that it describes only instances of either AtomicActivity or ObjectEvent. Additionally, every Detection must be provided by some ProcessingComponent. There are no asserted superclass relationships for Detection, and its purpose is to represent structured information about recognized or identified events generated through processing components, with its scope strictly limited to atomic activities or object events.\nAxiom: {'subClassOf': ['Observation'], 'propertyRestrictions': ['[describes only (event:AtomicActivity or event:ObjectEvent)]', '[providedBy only ProcessingComponent]']}\nGenerated CQs:", "output": "Is Detection encompassed by the broader category of Observation? | Which Observation subclasses are present in the ontology, such as Detection? | What more general categories is Detection a part of within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Observation\nDescription: Observation is a class characterized by the following axioms:  \n- Each Observation describes exactly one event (event:Event), and describes only events of this type.\n- Every Observation is provided by exactly one provider, which must be either a Person (event:Person), a ProcessingComponent, or a Sensor.\n- Each Observation has exactly one reporting time, which must be an instance of time:Instant.\n- Each Observation is associated with exactly one plausibility metric, represented as an xsd:double value.\nThese constraints ensure that every instance of Observation unambiguously records a single event through a specific provider, is time-stamped, and is quantitatively assessed for plausibility.\nAxiom: {'propertyRestrictions': ['[describes only event:Event]', '[providedBy only (event:Person or ProcessingComponent or Sensor)]', '[providedBy exactly 1 (event:Person or ProcessingComponent or Sensor)]', '[describes exactly 1 event:Event]', '[hasReportingTime only time:Instant]', '[hasReportingTime exactly 1 time:Instant]', '[hasPlausibilityMetric exactly 1 xsd:double]', '[hasPlausibilityMetric only xsd:double]']}\nGenerated CQs:", "output": "Are the plausibility metrics associated with an Observation exclusively of datatype xsd:double? | Can an Observation have a plausibility metric that is not represented as an xsd:double value? | Is it only permissible for an Observation’s hasPlausibilityMetric property to reference values of type xsd:double? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sensor\nDescription: Sensor is a class whose instances are restricted to being attached only to entities of type event:Entity. This property restriction ensures that any individual belonging to the Sensor class must have the attachedTo relationship exclusively with event:Entity instances, reinforcing a precise connection between sensors and entities within the ontology.\nAxiom: {'propertyRestrictions': ['[attachedTo only event:Entity]', '[attachedTo exactly 1 event:Entity]']}\nGenerated CQs:", "output": "Is every Sensor required to be attached to exactly one Entity? | Can a Sensor ever be attached to more than one Entity at the same time? | Is it possible for a Sensor to exist without being attached to any Entity? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: roomLocalisation\nDescription: The property \"roomLocalisation\" has no explicitly defined domain, range, or characteristics, and is not specified as a sub-property or inverse of any other property. In the absence of further axioms or existing description, its use and related entities remain unspecified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'roomLocalisation' has no domain specified? | What kinds of entities can be in the range of the property 'roomLocalisation'? | What entities can serve as the domain for the property 'roomLocalisation'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasParticipant\nDescription: The property \"hasParticipant\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. It can be used to relate any two individuals in the ontology without restriction. No additional description or constraints are provided by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'hasParticipant' has no defined range? | Can the property 'hasParticipant' be used with objects of any class as its range? | What types of entities are permitted as subjects of the 'hasParticipant' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. This property is generally intended to associate an entity with a quality but its precise usage is not restricted by axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the domain of the property 'hasQuality'? | Is it correct that the property 'hasQuality' does not specify a range? | Can anything be considered the range of 'hasQuality', or should it be restricted? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasAgent\nDescription: The property \"hasAgent\" does not have asserted characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and has no specified inverse. This property is intended to relate entities to their agents, but its usage is not formally constrained by ontology axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there any entities that cannot be a value for the property 'hasAgent'? | Which types of entities, if any, can appear as subjects of the 'hasAgent' property? | Is it correct that the property 'hasAgent' does not have a specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: providedBy\nDescription: The property \"providedBy\" has no specified characteristics, domain, or range, and is not defined as a sub-property of or inverse to any other property. Its use and applicable classes are unrestricted, indicating a general-purpose relationship for associating entities with their providers.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can any type of entity be used as the range of 'providedBy'? | What are the possible domains for the property 'providedBy'? | What can serve as the range for the property 'providedBy'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no explicitly defined characteristics, domain, or range restrictions, and does not specify any super-properties or inverse properties. It is used to relate entities to their duration, but the types of subjects or objects are not formally constrained.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'duration' does not have a specified range in the ontology? | Can 'duration' be applied to any subject, or should it be restricted to specific classes? | What types of entities can serve as the domain for the 'duration' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPlausibilityMetric\nDescription: The property \"hasPlausibilityMetric\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property and has no defined inverse. The purpose of this property is not currently described and would depend on its intended use within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there any restrictions on what can serve as the domain for the property 'hasPlausibilityMetric'? | What classes or entities can appear as the subject of the property 'hasPlausibilityMetric'? | Is it correct that 'hasPlausibilityMetric' has no defined range in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: attachedTo\nDescription: The property \"attachedTo\" has no explicitly defined characteristics, domain, or range restrictions and is not specified as a sub-property or an inverse of any other property. This indicates that \"attachedTo\" is a general-purpose property intended to express an unspecified attachment relationship between entities.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What kinds of entities can appear as the object when using the property 'attachedTo'? | Is there any range specified for the property 'attachedTo'? | Is it appropriate for 'attachedTo' to have no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property and has no inverse property declared. Its intended usage is not further detailed by current axioms or description.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there classes besides the unspecified domain that could be linked to the property 'startTime'? | What entities can serve as the domain for the property 'startTime'? | Is it correct that the property 'startTime' does not have a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: refersTo\nDescription: The property \"refersTo\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This indicates its use is unconstrained with respect to the types of entities it connects, allowing it to relate any two individuals without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'refersTo' have subjects that do not belong to any particular class? | What types of entities can appear as the object of the 'refersTo' property? | What entities can serve as the domain of the property 'refersTo'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: describes\nDescription: The property \"describes\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. It is a general property intended to associate one entity with another in a descriptive relationship, without restrictions on the types of entities it connects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Are there constraints on what can be the domain of the 'describes' property? | What types of entities, if any, can act as the subject for the 'describes' property? | Is it correct that the property 'describes' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasReportingTime\nDescription: The property \"hasReportingTime\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a subproperty of any other property and does not have an inverse property. No additional description or constraints are currently provided, indicating that its intended usage and value type are not restricted by the ontology at this stage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can have the property 'hasReportingTime' as their domain? | Is it correct that the property 'hasReportingTime' has no range defined? | What kinds of entities, if any, can be used as the value of the property 'hasReportingTime'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmericanHot\nDescription: AmericanHot is defined as a subclass of NamedPizza, distinguished by the requirement that it has toppings including hot green pepper, jalapeno pepper, tomato, peperoni sausage, and mozzarella. Its origin is specified as America. AmericanHot pizzas are explicitly disjoint from numerous other pizza classes, ensuring no individual pizza can simultaneously belong to these groups. The pizza is further characterized by a topping restriction: it may only have mozzarella, peperoni sausage, jalapeno pepper, tomato, or hot green pepper as toppings. This formalization enforces a precise set of permissible toppings and uniquely identifies AmericanHot within the ontology of named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some HotGreenPepperTopping]', '[hasTopping some JalapenoPepperTopping]', '[hasTopping some TomatoTopping]', '[hasCountryOfOrigin hasValue America]', '[hasTopping some PeperoniSausageTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or PeperoniSausageTopping or JalapenoPepperTopping or TomatoTopping or HotGreenPepperTopping)]']}\nGenerated CQs:", "output": "What logical constraint separates AmericanHot from UnclosedPizza according to the ontology? | Is it allowable for an instance of pizza to belong to both AmericanHot and UnclosedPizza classes? | Which classes are defined as disjoint with AmericanHot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Capricciosa\nDescription: Capricciosa is defined as a subclass of NamedPizza, and is explicitly disjoint from a range of other specified pizza types, ensuring no individual can simultaneously belong to Capricciosa and any of those classes. Members of Capricciosa must have at least one topping each of tomato, ham, olive, mozzarella, anchovies, peperonata, and caper. Additionally, their toppings are strictly limited to only anchovies, mozzarella, tomato, peperonata, ham, caper, or olive—no other toppings are permitted. This formalization ensures a precise and consistent definition for Capricciosa pizza within the ontology.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or PeperonataTopping or HamTopping or CaperTopping or OliveTopping)]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping some CaperTopping]']}\nGenerated CQs:", "output": "What formal separation is specified between Capricciosa and Caprina in the ontology? | Is any pizza instance classified as both Capricciosa and Caprina permitted by the ontology? | Which other pizza types are declared as mutually exclusive with Caprina? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fiorentina\nDescription: Fiorentina is defined as a subclass of NamedPizza and is explicitly disjoint with a variety of other specific pizza types, ensuring that no individual pizza can simultaneously be classified as both Fiorentina and any of those listed (e.g., Mushroom, Margherita, FourSeasons). Members of the Fiorentina class are characterized by the following topping constraints: they must include at least one of each of the following toppings—TomatoTopping, GarlicTopping, OliveTopping, MozzarellaTopping, ParmesanTopping, and SpinachTopping. Additionally, Fiorentina pizzas are restricted to having only the following toppings: MozzarellaTopping, GarlicTopping, TomatoTopping, SpinachTopping, OliveTopping, or ParmesanTopping. This axiomatisation precisely defines Fiorentina pizzas in terms of both required ingredients and clear differentiation from other pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Rosa', 'QuattroFormaggi', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (MozzarellaTopping or GarlicTopping or TomatoTopping or SpinachTopping or OliveTopping or ParmesanTopping)]', '[hasTopping some GarlicTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some SpinachTopping]']}\nGenerated CQs:", "output": "What is the formal connection specified between Fiorentina and Giardiniera in the ontology? | Can a pizza instance be classified as both Fiorentina and Giardiniera simultaneously? | Which classes are defined as mutually exclusive with Fiorentina? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FruttiDiMare\nDescription: FruttiDiMare is defined as a subclass of NamedPizza and is explicitly disjoint with a variety of other specific pizza types, ensuring that no individual can simultaneously belong to FruttiDiMare and any of the listed pizza classes. Members of this class are strictly characterized by their toppings: they can have only garlic, tomato, or mixed seafood toppings—with each FruttiDiMare pizza required to feature at least one of each (tomato, garlic, and mixed seafood toppings). This formalization specifies that FruttiDiMare pizzas are exclusively seafood-themed, with a distinct combination of these three toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping only (GarlicTopping or TomatoTopping or MixedSeafoodTopping)]', '[hasTopping some TomatoTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some MixedSeafoodTopping]']}\nGenerated CQs:", "output": "What logical difference is asserted between FruttiDiMare and Caprina in the ontology? | Can any pizza instance belong simultaneously to the classes FruttiDiMare and Caprina? | Which classes are explicitly defined as disjoint with Caprina? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LaReine\nDescription: LaReine is defined as a subclass of NamedPizza and is declared disjoint with a number of other specific pizza classes, including Mushroom, Napoletana, Veneziana, and others—ensuring no individual pizza can be classified as both a LaReine and any of these listed classes. \n\nLaReine pizzas are characterized by several property restrictions: every LaReine pizza must have at least one topping of each of the following types—MushroomTopping, TomatoTopping, HamTopping, OliveTopping, and MozzarellaTopping. Additionally, the only permitted toppings for LaReine pizzas are MozzarellaTopping, TomatoTopping, HamTopping, OliveTopping, or MushroomTopping; no other toppings are allowed. This ensures that the LaReine pizza is strictly defined by this specific set of ingredients.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'Napoletana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or OliveTopping or MushroomTopping)]']}\nGenerated CQs:", "output": "How are LaReine and Veneziana defined in terms of class disjointness within the ontology? | Is it allowed for a pizza to be classified simultaneously as LaReine and Veneziana? | Which classes are asserted to be mutually exclusive with LaReine in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mushroom\nDescription: Mushroom is defined as a subclass of NamedPizza, and it is disjoint from a wide range of other specific pizza types, ensuring that an individual cannot simultaneously belong to the Mushroom class and any of those listed classes. Members of the Mushroom class are required to have MushroomTopping, TomatoTopping, and MozzarellaTopping among their toppings. Additionally, they may only have MozzarellaTopping, TomatoTopping, or MushroomTopping as toppings, and no others. This formalization ensures that Mushroom pizzas are uniquely characterized by the exclusive combination of these three toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or MushroomTopping)]', '[hasTopping some TomatoTopping]', '[hasTopping some MozzarellaTopping]']}\nGenerated CQs:", "output": "What formal separation is asserted between Mushroom and Cajun in the ontology? | Is it allowed for an entity to belong to both the Mushroom and Cajun categories simultaneously? | Which classes are explicitly specified as being disjoint with Cajun? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Parmense\nDescription: Parmense is defined as a subclass of NamedPizza and is explicitly disjoint with a wide range of other pizza types, ensuring that no individual pizza can simultaneously be classified as Parmense and any of the listed disjoint pizzas. Parmense pizzas are characterized by a specific set of required toppings: each must include at least some tomato, ham, parmesan, mozzarella, and asparagus toppings. Furthermore, they may only have these toppings—no additional ingredients are permitted. This formalization strictly specifies the distinctive composition of Parmense pizzas within the NamedPizza hierarchy.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'Caprina', 'Soho', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AsparagusTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or ParmesanTopping or AsparagusTopping)]']}\nGenerated CQs:", "output": "What is the ontological relationship between Parmense and SloppyGiuseppe? | Is there any entity that can simultaneously belong to both Parmense and SloppyGiuseppe classes? | Which classes are specified as mutually exclusive with Parmense? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrinceCarlo\nDescription: PrinceCarlo is defined as a subclass of NamedPizza, making it a specific kind of pizza with a distinct identity. It is explicitly disjoint with a comprehensive set of other named pizzas, such that no individual pizza can be simultaneously classified as PrinceCarlo and any of those other pizzas (e.g., Mushroom, LaReine, Napoletana, etc.).\n\nFrom the property restrictions, any PrinceCarlo pizza must have at least the following toppings: TomatoTopping, MozzarellaTopping, ParmesanTopping, LeekTopping, and RosemaryTopping. Furthermore, the only toppings permitted on a PrinceCarlo pizza are LeekTopping, RosemaryTopping, MozzarellaTopping, TomatoTopping, and ParmesanTopping. This formalization ensures that PrinceCarlo pizzas are uniquely characterized by this specific and exclusive combination of toppings, and cannot include any others.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (LeekTopping or RosemaryTopping or MozzarellaTopping or TomatoTopping or ParmesanTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some LeekTopping]', '[hasTopping some RosemaryTopping]']}\nGenerated CQs:", "output": "Are PrinceCarlo and Giardiniera considered mutually exclusive pizza types within the ontology? | Is there any possibility for a pizza to be classified simultaneously as PrinceCarlo and Giardiniera? | Which pizza classes are specified as disjoint with Giardiniera? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Rosa\nDescription: Rosa is defined as a subclass of NamedPizza, explicitly disjoint with a range of other specific pizza types (such as Mushroom, Margherita, AmericanHot, and others), ensuring an individual pizza cannot simultaneously belong to Rosa and any of those disjoint classes. Members of the Rosa class are characterized by their toppings: every Rosa pizza must have at least one TomatoTopping, one GorgonzolaTopping, and one MozzarellaTopping, and it may only contain these three toppings (no other toppings are permitted). This formalization strictly captures the unique identity and allowed ingredients of the Rosa pizza type.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some GorgonzolaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or GorgonzolaTopping)]', '[hasTopping some MozzarellaTopping]']}\nGenerated CQs:", "output": "What logical separation is asserted between Rosa and PrinceCarlo in the ontology? | Is there any individual that can belong to both Rosa and PrinceCarlo? | Which classes are declared as disjoint with PrinceCarlo? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SloppyGiuseppe\nDescription: SloppyGiuseppe is defined as a subclass of NamedPizza, and is explicitly disjoint with a set of other specific pizza types, ensuring that any instance cannot simultaneously belong to these other pizza classes. It is characterized by the presence of HotSpicedBeefTopping, TomatoTopping, GreenPepperTopping, MozzarellaTopping, and OnionTopping as mandatory ingredients. Furthermore, it is restricted to only these toppings: no other topping types are permitted on a SloppyGiuseppe. This formalization ensures the class captures a distinct and exclusive pizza variety, consistently reflecting its specific ingredient profile.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'Caprina', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some HotSpicedBeefTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some GreenPepperTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasTopping only (HotSpicedBeefTopping or MozzarellaTopping or TomatoTopping or OnionTopping or GreenPepperTopping)]']}\nGenerated CQs:", "output": "What is the ontological distinction specified between SloppyGiuseppe and Soho? | Is there any instance that can belong to both the SloppyGiuseppe and Soho categories? | Which classes are formally declared as disjoint with Soho? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnclosedPizza\nDescription: UnclosedPizza is defined as a subclass of NamedPizza, disjoint with a specific set of pizzas including Mushroom, AmericanHot, Margherita, and others, ensuring mutual exclusivity with these named varieties. Every UnclosedPizza is characterized by having at least one MozzarellaTopping, but there is no restriction on additional toppings. As described, membership in UnclosedPizza does not imply classification as either a VegetarianPizza or a NonVegetarianPizza, as its topping composition may be incomplete or unspecified. This formalization supports the open nature of its topping definitions within the ontology.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'PrinceCarlo', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MozzarellaTopping]']}\nGenerated CQs:", "output": "What logical separation exists between UnclosedPizza and Capricciosa according to the ontology? | Is it permitted for a pizza to belong to both UnclosedPizza and Capricciosa categories? | Which classes are formally specified as disjoint with Capricciosa? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnchoviesTopping\nDescription: AnchoviesTopping is modeled as a subclass of FishTopping, signifying that it is a specific type of fish-based topping. It is explicitly disjoint with both MixedSeafoodTopping and PrawnsTopping, meaning an individual instance cannot simultaneously be categorized as AnchoviesTopping and either of those other toppings. This ensures a clear and mutually exclusive classification among these seafood-themed pizza toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['MixedSeafoodTopping']}\nGenerated CQs:", "output": "How does the ontology specify the incompatibility between AnchoviesTopping and PrawnsTopping? | Is any pizza topping allowed to be classified as both AnchoviesTopping and PrawnsTopping simultaneously? | Which toppings are asserted to be disjoint with AnchoviesTopping in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MixedSeafoodTopping\nDescription: MixedSeafoodTopping is defined as a subclass of FishTopping, meaning every MixedSeafoodTopping is a type of fish-based topping. It is explicitly disjoint with AnchoviesTopping and PrawnsTopping, so no individual topping can simultaneously be considered a MixedSeafoodTopping and either an AnchoviesTopping or PrawnsTopping. This class represents seafood toppings that are distinct from pure anchovy or prawn toppings, ensuring clear differentiation among various fish-based toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['PrawnsTopping']}\nGenerated CQs:", "output": "What formal separation is defined between MixedSeafoodTopping and AnchoviesTopping within the ontology? | Is there any possibility for a topping to be classified as both MixedSeafoodTopping and AnchoviesTopping? | Which other topping classes, if any, are explicitly stated as disjoint with AnchoviesTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrawnsTopping\nDescription: PrawnsTopping is defined as a subclass of FishTopping, indicating it is a specific kind of fish-based topping. It is explicitly disjoint with both MixedSeafoodTopping and AnchoviesTopping, which means no individual topping can simultaneously be classified as PrawnsTopping and either of the other two classes. This formalization ensures that members of PrawnsTopping are uniquely identifiable as prawn-based toppings, distinct from other seafood or anchovy-based toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['AnchoviesTopping']}\nGenerated CQs:", "output": "How does the ontology differentiate between PrawnsTopping and MixedSeafoodTopping? | Is there any instance that can qualify as both PrawnsTopping and MixedSeafoodTopping? | Which topping categories are specified as disjoint with PrawnsTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GarlicTopping\nDescription: GarlicTopping is defined as a subclass of VegetableTopping, meaning it is a type of vegetable-based topping. It is explicitly disjoint with several other specific vegetable toppings, such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that an individual cannot belong to both GarlicTopping and any of these other topping classes. Additionally, GarlicTopping is characterized by the property that its members must have at least some medium level of spiciness (hasSpiciness some Medium).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "output": "What logical separation is defined between GarlicTopping and SpinachTopping? | Is there any topping that could simultaneously be classified as GarlicTopping and SpinachTopping? | Which other topping classes are declared as mutually exclusive with SpinachTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MushroomTopping\nDescription: MushroomTopping is a subclass of VegetableTopping and is explicitly disjoint from other specific vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, and others—ensuring that no individual can simultaneously belong to more than one of these topping types. Furthermore, MushroomTopping is characterized by the property that it must have some level of mild spiciness (hasSpiciness some Mild). This formalization defines MushroomTopping as a mild-flavored vegetable topping that is distinct from other named vegetable toppings in the ontology.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "output": "What type of distinction is asserted between MushroomTopping and PetitPoisTopping in the ontology? | Could an individual topping be classified as both MushroomTopping and PetitPoisTopping? | Which topping classes are defined as incompatible with PetitPoisTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OnionTopping\nDescription: OnionTopping is defined as a subclass of VegetableTopping, representing a type of topping derived from vegetables. It is explicitly disjoint with several other vegetable topping classes, such as RocketTopping, LeekTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that no individual can simultaneously belong to OnionTopping and any of these classes. Additionally, OnionTopping is characterized by the property restriction that all its instances must have at least some medium level of spiciness (hasSpiciness some Medium).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "output": "How does the ontology distinguish between OnionTopping and OliveTopping? | Is there an instance that can simultaneously be classified as both OnionTopping and OliveTopping? | Which other topping classes are specified as disjoint with OliveTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PepperTopping\nDescription: PepperTopping is defined as a subclass of VegetableTopping, indicating it is a specific type of vegetable-based topping. It is explicitly disjoint with RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—meaning no individual can simultaneously be a PepperTopping and any of these other vegetable topping classes. This establishes PepperTopping as a distinct and non-overlapping category within vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'TomatoTopping']}\nGenerated CQs:", "output": "What logical constraint separates PepperTopping from PetitPoisTopping in the ontology? | Is any topping instance allowed to belong to both PepperTopping and PetitPoisTopping simultaneously? | Which topping classes are defined as disjoint with PepperTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpinachTopping\nDescription: SpinachTopping is defined as a subclass of VegetableTopping and is explicitly disjoint from a variety of other vegetable-based toppings, including RocketTopping, LeekTopping, OnionTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping. Individuals of this class must have at least one hasSpiciness property value that is Mild. This ensures that SpinachTopping exclusively refers to mild, spinach-based toppings that do not overlap with other vegetable toppings in the ontology.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['LeekTopping', 'OnionTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "output": "What is the formal distinction between SpinachTopping and RocketTopping within the ontology? | Is it allowed for a pizza to have both SpinachTopping and RocketTopping simultaneously? | Which classes are asserted to be disjoint with SpinachTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CajunSpiceTopping\nDescription: CajunSpiceTopping is a subclass of HerbSpiceTopping, formally distinguished by the restriction that it must have some degree of hot spiciness (hasSpiciness some Hot). It is explicitly disjoint with RosemaryTopping, meaning an individual cannot be both a CajunSpiceTopping and a RosemaryTopping. Members of this class are herb and spice toppings that contribute a hot or spicy flavor profile, aligning with the characteristics of Cajun seasoning.\nAxiom: {'subClassOf': ['HerbSpiceTopping'], 'disjointWith': [], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "output": "How does the ontology specify the connection or distinction between CajunSpiceTopping and RosemaryTopping? | Is there any instance that can be classified as both CajunSpiceTopping and RosemaryTopping? | Which other topping classes are defined as mutually exclusive with RosemaryTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseTopping\nDescription: CheeseTopping is defined as a subclass of PizzaTopping, representing toppings made from cheese products that are used on pizzas. It is explicitly disjoint from other topping types such as MeatTopping, SauceTopping, VegetableTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no individual topping instance can simultaneously belong to both CheeseTopping and any of these other topping categories. This classification enforces a clear distinction between cheese-based toppings and all other types of pizza toppings.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping']}\nGenerated CQs:", "output": "How does the ontology express the incompatibility between CheeseTopping and FruitTopping? | Is there any topping instance that can simultaneously belong to both CheeseTopping and FruitTopping categories? | Which topping categories are stated as mutually exclusive with CheeseTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FruitTopping\nDescription: FruitTopping is defined as a subclass of PizzaTopping, meaning it represents a specific type of topping used on pizzas. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, and NutTopping, ensuring that no topping can simultaneously belong to FruitTopping and any of these other topping categories. This formalization guarantees that FruitTopping exclusively includes toppings derived from fruit and distinguishes them from all other major topping types.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping']}\nGenerated CQs:", "output": "How are FruitTopping and VegetableTopping represented in terms of mutual exclusivity within the ontology? | Is there any scenario in which a topping can be classified simultaneously as both a FruitTopping and a VegetableTopping? | Which classes are defined as disjoint with VegetableTopping in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HerbSpiceTopping\nDescription: HerbSpiceTopping is defined as a subclass of PizzaTopping, representing toppings made exclusively from herbs or spices that are suitable for use on pizzas. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, NutTopping, and FruitTopping, ensuring that no individual topping can simultaneously belong to both HerbSpiceTopping and any of these other specified topping categories. This class formalizes the separation of herb and spice-based toppings from all other topping types within the ontology.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'FruitTopping']}\nGenerated CQs:", "output": "What is the formal separation established between HerbSpiceTopping and NutTopping in the ontology? | Is it allowed for a pizza topping to be classified as both a HerbSpiceTopping and a NutTopping? | Which classes, besides NutTopping, are specified as disjoint with HerbSpiceTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MeatTopping\nDescription: MeatTopping is defined as a subclass of PizzaTopping, representing toppings derived specifically from meat products. It is disjoint with SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no single topping instance can simultaneously belong to both MeatTopping and any of these other topping categories. This formalization enforces a clear categorical separation between meat-based and other types of pizza toppings.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['SauceTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'NutTopping', 'FruitTopping']}\nGenerated CQs:", "output": "What ontological separation is established between MeatTopping and HerbSpiceTopping? | Is any topping allowed to be classified simultaneously as a MeatTopping and an HerbSpiceTopping? | Which topping categories are defined as mutually exclusive with HerbSpiceTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SauceTopping\nDescription: SauceTopping is defined as a subclass of PizzaTopping and is explicitly disjoint with MeatTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping. This means SauceTopping represents a distinct category of pizza topping, specifically for sauces, and no individual can simultaneously belong to SauceTopping and any of the aforementioned topping classes.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping']}\nGenerated CQs:", "output": "What logical separation does the ontology assert between SauceTopping and FruitTopping? | Is there any topping entity that can simultaneously be classified as both SauceTopping and FruitTopping? | Which classes of toppings are formally identified as disjoint with SauceTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetableTopping\nDescription: VegetableTopping is defined as a subclass of PizzaTopping, representing pizza toppings that are derived from vegetables. It is explicitly disjoint with MeatTopping, SauceTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no topping can simultaneously belong to VegetableTopping and any of these other topping categories. This formalization guarantees that VegetableTopping exclusively encompasses toppings of vegetable origin, and clearly separates it from other distinct topping types used on pizzas.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping', 'FruitTopping']}\nGenerated CQs:", "output": "How are VegetableTopping and SauceTopping differentiated within the ontology? | Is there any entity that can simultaneously be classified as both a VegetableTopping and a SauceTopping? | Which classes are defined as disjoint with SauceTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ParmesanTopping\nDescription: ParmesanTopping is defined as a subclass of CheeseTopping, representing cheese-based toppings specifically comprised of parmesan. It is explicitly disjoint from GoatsCheeseTopping, MozzarellaTopping, GorgonzolaTopping, and FourCheesesTopping, ensuring no individual can simultaneously belong to these classes. Members of this class are characterized by having some level of mild spiciness, as specified by the property restriction [hasSpiciness some Mild].\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'MozzarellaTopping', 'GorgonzolaTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "output": "What distinction is modeled between ParmesanTopping and FourCheesesTopping within the ontology? | Could an instance belong simultaneously to both ParmesanTopping and FourCheesesTopping classes? | Which other topping classes are asserted as incompatible with FourCheesesTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HamTopping\nDescription: HamTopping is defined as a subclass of MeatTopping, indicating that it is a type of meat-based pizza topping. It is explicitly disjoint with PeperoniSausageTopping, HotSpicedBeefTopping, and ChickenTopping, meaning an individual topping cannot simultaneously be classified as ham and any of these other meat toppings. This formalization ensures that HamTopping remains distinct from other specific meat toppings within the ontology.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'ChickenTopping']}\nGenerated CQs:", "output": "What formal separation is specified between HamTopping and HotSpicedBeefTopping in the ontology? | Is there any instance that can be classified simultaneously as HamTopping and HotSpicedBeefTopping? | Which other topping categories are asserted as disjoint with HamTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeperoniSausageTopping\nDescription: PeperoniSausageTopping is defined as a subclass of MeatTopping, representing a specific type of meat-based pizza topping. It is explicitly disjoint with HotSpicedBeefTopping, HamTopping, and ChickenTopping, ensuring that no individual topping can be classified as more than one of these types simultaneously. Members of this class are characterized by possessing at least some medium level of spiciness, as specified by the property restriction [hasSpiciness some Medium]. This formalization ensures clear differentiation within meat toppings and enforces the requirement for moderate spiciness in PeperoniSausageTopping.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['HamTopping', 'ChickenTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "output": "What separation is defined between PeperoniSausageTopping and HotSpicedBeefTopping in the ontology? | Is it allowable for a single topping instance to belong to both PeperoniSausageTopping and HotSpicedBeefTopping? | Which topping types are asserted as disjoint with PeperoniSausageTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DeepPanBase\nDescription: DeepPanBase is defined as a subclass of PizzaBase, establishing it as a specific type of pizza base. It is explicitly disjoint with ThinAndCrispyBase, which means that no pizza base can simultaneously be classified as both a DeepPanBase and a ThinAndCrispyBase. This formalization ensures clear differentiation between thick, deep pan styles and thin, crispy bases within the ontology.\nAxiom: {'subClassOf': ['PizzaBase'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology distinguish between DeepPanBase and ThinAndCrispyBase? | Is it permissible for a pizza base to be classified as both DeepPanBase and ThinAndCrispyBase? | Which base types are specified as mutually exclusive with DeepPanBase in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ThinAndCrispyBase\nDescription: ThinAndCrispyBase is a subclass of PizzaBase, representing a specific type of pizza base. It is explicitly declared as disjoint with DeepPanBase, ensuring that no individual pizza base can simultaneously be classified as both ThinAndCrispyBase and DeepPanBase. This formalization distinguishes thin and crispy bases from deep pan bases within the ontology.\nAxiom: {'subClassOf': ['PizzaBase'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology specify the difference between ThinAndCrispyBase and DeepPanBase? | Is any pizza base classified under both ThinAndCrispyBase and DeepPanBase? | What other base types are explicitly declared as disjoint with DeepPanBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GreenPepperTopping\nDescription: GreenPepperTopping is defined as a subclass of PepperTopping, indicating it inherits all characteristics of pepper-based pizza toppings. It is explicitly disjoint with SweetPepperTopping, JalapenoPepperTopping, and PeperonataTopping—ensuring that no instance can simultaneously belong to more than one of these classes. This formalization distinguishes green pepper toppings from other specific pepper varieties within the ontology.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['JalapenoPepperTopping', 'PeperonataTopping']}\nGenerated CQs:", "output": "What is the ontological separation specified between GreenPepperTopping and SweetPepperTopping? | Is there any instance that can be simultaneously classified as both GreenPepperTopping and SweetPepperTopping? | Which classes are defined as mutually exclusive with GreenPepperTopping in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Hot\nDescription: Hot is defined as a subclass of Spiciness, indicating it represents an elevated or intense level of spicy sensation. It is explicitly disjoint with the classes Mild and Medium, ensuring that no instance can be both Hot and either Mild or Medium at the same time. This formalization clarifies that Hot describes a distinct, non-overlapping intensity within the spectrum of spiciness.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Medium']}\nGenerated CQs:", "output": "What type of logical separation is defined between Hot and Mild? | Is it allowed for an entity to be classified as both Hot and Mild simultaneously? | Which classes, apart from Mild, are explicitly stated as disjoint with Hot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Medium\nDescription: Medium is a subclass of Spiciness, representing a specific level or category of spiciness. It is formally defined as disjoint with both Mild and Hot, meaning that no individual instance can belong to more than one of these classes simultaneously. This ensures that any item classified as Medium cannot be considered Mild or Hot in terms of spiciness.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Mild']}\nGenerated CQs:", "output": "How are Medium and Hot classes differentiated within the ontology? | Is there any instance that can belong to both the Medium and Hot categories? | Which classes are defined as mutually exclusive with Medium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mild\nDescription: Mild is a subclass of Spiciness, representing a specific level of spiciness distinct from other grades. It is explicitly disjoint with both Hot and Medium, ensuring that an instance classified as Mild cannot simultaneously be classified as Hot or Medium. This enforces a clear and exclusive categorization among the spiciness levels.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Medium']}\nGenerated CQs:", "output": "What is the formal separation defined between Mild and Hot in the ontology? | Can an entity be classified as both Mild and Hot? | Which classes are specified as disjoint with Hot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PizzaBase\nDescription: PizzaBase is defined as a subclass of Food, indicating that every PizzaBase is a type of food. It is explicitly disjoint with IceCream, Pizza, and PizzaTopping, ensuring that an individual cannot simultaneously be a PizzaBase and any of these other classes. This formalization distinguishes PizzaBase as a unique foundational component in food ontology, separate from finished pizzas, their toppings, or dessert items like ice cream.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['IceCream', 'Pizza']}\nGenerated CQs:", "output": "What distinguishes PizzaBase from PizzaTopping in the ontology? | Is any entity permitted to be an instance of both PizzaBase and PizzaTopping? | Which classes are specified as disjoint with PizzaBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PizzaTopping\nDescription: PizzaTopping is defined as a subclass of Food, representing edible items that can be used to top a pizza. It is formally disjoint from the classes IceCream, Pizza, and PizzaBase, ensuring that no individual can simultaneously be a PizzaTopping and an instance of any of these other classes. This separation enforces a clear distinction between pizza toppings, the pizza base, the assembled pizza, and unrelated foods like ice cream.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['Pizza', 'PizzaBase']}\nGenerated CQs:", "output": "How does the ontology define the separation between PizzaTopping and IceCream? | Is there any instance that can belong to both PizzaTopping and IceCream categories? | Which classes are explicitly marked as mutually exclusive with IceCream? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DomainConcept\nDescription: DomainConcept is a class that is explicitly disjoint with ValuePartition, meaning no individual can simultaneously be a member of both DomainConcept and ValuePartition. This ensures a clear separation between entities considered DomainConcepts and those defined as ValuePartitions within the ontology.\nAxiom: {'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology differentiate between DomainConcept and ValuePartition? | Is there any instance that can belong to both DomainConcept and ValuePartition? | Which classes are specified as disjoint with ValuePartition? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ValuePartition\nDescription: ValuePartition is a pattern used to represent a set of mutually exclusive and exhaustive subclasses that serve as the only permissible values for a particular property. It is disjoint with DomainConcept, ensuring that no individual can belong to both classes. The parent ValuePartition class is employed in property restrictions, and its subclasses collectively cover all possible values for the property—membership cannot extend beyond these predefined subclasses without modifying the ValuePartition. This structure enforces a fixed set of alternatives, supporting controlled vocabularies and value enumerations within the ontology.\nAxiom: {'disjointWith': []}\nGenerated CQs:", "output": "How are ValuePartition and DomainConcept differentiated within the ontology? | Is there any entity that can simultaneously be a ValuePartition and a DomainConcept? | Which classes are specified as disjoint with DomainConcept? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Food\nDescription: Food is defined as a subclass of DomainConcept. This means that every instance of Food is considered a type of DomainConcept, representing consumable items or substances within the modeled domain. No further restrictions or disjoint relationships are specified in the current axiom.\nAxiom: {'subClassOf': ['DomainConcept']}\nGenerated CQs:", "output": "Is Food classified under the broader category of DomainConcept? | What general categories is Food a member of within the ontology? | Which more specific classes, such as Food, are encompassed by DomainConcept? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NamedPizza\nDescription: NamedPizza is defined as a subclass of Pizza, representing pizzas that are explicitly listed or recognized on a pizza menu. Members of this class inherit all properties of Pizza and are distinguished by being menu-identified variants, rather than custom or unnamed creations.\nAxiom: {'subClassOf': ['Pizza']}\nGenerated CQs:", "output": "Which categories encompass NamedPizza as a member? | Is NamedPizza classified as a type of Pizza? | What specific varieties are encompassed within the supercategory Pizza, including NamedPizza? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PineKernels\nDescription: PineKernels is defined as a subclass of NutTopping, indicating that all PineKernels are considered a type of nut-based topping. No further property restrictions or disjointness axioms are specified, so individuals classified as PineKernels inherit all characteristics of NutTopping.\nAxiom: {'subClassOf': ['NutTopping']}\nGenerated CQs:", "output": "Which toppings are defined as more specific forms of NutTopping, such as PineKernels? | Is PineKernels classified under the broader group of NutTopping? | What more general topping categories include PineKernels as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RedOnionTopping\nDescription: RedOnionTopping is defined as a subclass of OnionTopping, representing toppings specifically comprised of red onion. All individuals classified as RedOnionTopping inherit the characteristics and constraints applicable to OnionTopping.\nAxiom: {'subClassOf': ['OnionTopping']}\nGenerated CQs:", "output": "Which toppings are specified as subclasses of OnionTopping, such as RedOnionTopping? | What parent classes does RedOnionTopping belong to within the topping hierarchy? | Is RedOnionTopping categorized under the broader class of OnionTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: American\nDescription: American is defined as a subclass of NamedPizza and is explicitly disjoint from several other specific pizza types, such as Mushroom, LaReine, Napoletana, and others, ensuring that an individual cannot simultaneously belong to more than one of these classes. Members of the American class must have the following toppings: tomato topping, pepperoni sausage topping, and mozzarella topping. Furthermore, they can have only mozzarella, pepperoni sausage, or tomato as toppings—no other toppings are permitted. Additionally, the country of origin for this pizza is specified as America. This formalization distinguishes the American pizza by its unique combination of toppings and origin, while preventing any overlap with the other named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasCountryOfOrigin hasValue America]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or PeperoniSausageTopping or TomatoTopping)]', '[hasTopping only PeperoniSausageTopping]']}\nGenerated CQs:", "output": "Does an American pizza necessarily include at least one Peperoni Sausage topping? | Is the presence of Peperoni Sausage topping required for something to be classified as American pizza? | Can an American pizza exist without having any Peperoni Sausage toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cajun\nDescription: Cajun is defined as a subclass of NamedPizza and is explicitly disjoint with a variety of other pizza types, ensuring that no pizza can belong to Cajun and any of the disjoint classes simultaneously. Each Cajun pizza must have, as toppings, tomato, Tobasco pepper sauce, mozzarella, onion, peperonata, and prawns. Furthermore, the only allowed toppings on a Cajun pizza are prawn, Tobasco pepper sauce, mozzarella, tomato, onion, and peperonata. This formalization strictly characterizes Cajun pizzas by both required and exclusive toppings, distinguishing them from other named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some TobascoPepperSauce]', '[hasTopping only (PrawnsTopping or TobascoPepperSauce or MozzarellaTopping or TomatoTopping or OnionTopping or PeperonataTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping only PrawnsTopping]']}\nGenerated CQs:", "output": "Is it required that a Cajun pizza has at least one topping of Prawns? | Can a pizza be classified as Cajun without having any PrawnsTopping? | Does every Cajun pizza necessarily include the hasTopping property linked to PrawnsTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Caprina\nDescription: Caprina is defined as a subclass of NamedPizza and is explicitly disjoint from a diverse set of other named pizzas, ensuring that no individual pizza can simultaneously be a Caprina and any of the pizzas listed (such as Mushroom, LaReine, etc.). Members of the Caprina class are characterized by their toppings: each Caprina must have at least one instance each of tomato topping, sundried tomato topping, mozzarella topping, and goat’s cheese topping. Additionally, Caprina pizzas can only have mozzarella, tomato, sundried tomato, or goat’s cheese as toppings—no other toppings are permitted. This formalization guarantees a specific and exclusive combination of ingredients for any pizza classified as Caprina.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or SundriedTomatoTopping or GoatsCheeseTopping)]', '[hasTopping some GoatsCheeseTopping]', '[hasTopping only SundriedTomatoTopping]']}\nGenerated CQs:", "output": "Is it necessary for a Caprina pizza to include at least one Sundried Tomato topping? | Can a Caprina be identified without having the hasTopping property with SundriedTomatoTopping? | Does every instance of Caprina always have some topping that is SundriedTomatoTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FourSeasons\nDescription: FourSeasons is a subclass of NamedPizza and is explicitly disjoint from several other specific pizza classes, ensuring that no pizza can be simultaneously classified as FourSeasons and any of the listed disjoint pizzas (such as Mushroom, Margherita, QuattroFormaggi, etc.). Members of the FourSeasons class are characterized by having at least one of each of the following toppings: mushroom, tomato, peperoni sausage, olive, mozzarella, anchovies, and capers. Additionally, the set of possible toppings for FourSeasons pizzas is restricted to only anchovies, mozzarella, peperoni sausage, tomato, capers, olives, and mushrooms—no other toppings are permitted. This formalization captures the standard combinatory topping profile of the FourSeasons pizza variant.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some PeperoniSausageTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or PeperoniSausageTopping or TomatoTopping or CaperTopping or OliveTopping or MushroomTopping)]', '[hasTopping some CaperTopping]', '[hasTopping only AnchoviesTopping]']}\nGenerated CQs:", "output": "Is it required for a FourSeasons pizza to include AnchoviesTopping as one of its toppings? | Can a pizza be classified as FourSeasons if it does not have any AnchoviesTopping? | Does every instance of FourSeasons necessarily have at least one topping that is AnchoviesTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Giardiniera\nDescription: Giardiniera is defined as a subclass of NamedPizza, and is explicitly disjoint from several other pizza classes such as Mushroom, LaReine, Napoletana, and others—ensuring that no pizza can simultaneously be classified as Giardiniera and any of these classes. Members of Giardiniera are characterized by a combination of specific toppings: they must contain at least some MushroomTopping, TomatoTopping, OliveTopping, MozzarellaTopping, SlicedTomatoTopping, PeperonataTopping, PetitPoisTopping, and LeekTopping. Furthermore, Giardiniera pizzas are strictly limited to having toppings only from the set: LeekTopping, MozzarellaTopping, TomatoTopping, PetitPoisTopping, PeperonataTopping, OliveTopping, MushroomTopping, and SlicedTomatoTopping. This formalization ensures that any pizza classified as Giardiniera has an exclusive and characteristic combination of the specified toppings and no others.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping only (LeekTopping or MozzarellaTopping or TomatoTopping or PetitPoisTopping or PeperonataTopping or OliveTopping or MushroomTopping or SlicedTomatoTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some SlicedTomatoTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping some PetitPoisTopping]', '[hasTopping some LeekTopping]', '[hasTopping only OliveTopping]']}\nGenerated CQs:", "output": "Must a Giardiniera have at least one topping that is an OliveTopping? | Is it possible for a Giardiniera to be classified as such without having any OliveTopping? | Does the presence of OliveTopping qualify a pizza as Giardiniera, regardless of its other toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Margherita\nDescription: Margherita is defined as a subclass of NamedPizza and is explicitly disjoint from a range of other specific pizza varieties, ensuring that no individual pizza can simultaneously be classified as both Margherita and any of those listed (such as Mushroom, LaReine, or Napoletana). Margherita pizzas are characterized by a strict topping composition: they must have at least one TomatoTopping and one MozzarellaTopping, and they can only have MozzarellaTopping or TomatoTopping as toppings—no other topping types are permitted. This formalization captures the essential simplicity and distinctiveness of the Margherita pizza.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping)]', '[hasTopping only TomatoTopping]']}\nGenerated CQs:", "output": "Is it required that every Margherita pizza includes at least one TomatoTopping as a topping? | Can a pizza be classified as Margherita if it lacks TomatoTopping among its toppings? | Does the presence of TomatoTopping serve as a necessary condition for identifying a pizza as Margherita? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Napoletana\nDescription: Napoletana is defined as a subclass of NamedPizza and is explicitly disjoint with a wide range of other specific pizza types, ensuring that no individual pizza can simultaneously belong to Napoletana and any of those classes. Members of the Napoletana class must have toppings including tomato, olive, mozzarella, anchovies, and capers, with the restriction that only these toppings (and no others) are permitted. Additionally, the country of origin for Napoletana is restricted to Italy. This class therefore represents a distinct and well-defined type of pizza with a uniquely specified combination of Italian origin and allowable toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasCountryOfOrigin hasValue Italy]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or CaperTopping or OliveTopping)]', '[hasTopping only CaperTopping]']}\nGenerated CQs:", "output": "Is it necessary for a Napoletana pizza to have at least one topping that is a CaperTopping? | Does every instance of Napoletana include the property hasTopping with some value from CaperTopping? | Can a pizza be classified as Napoletana if it lacks any CaperTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PolloAdAstra\nDescription: PolloAdAstra is defined as a subclass of NamedPizza and is explicitly disjoint with other specified pizzas, ensuring that no individual pizza can simultaneously be an instance of PolloAdAstra and any of the listed alternative named pizzas. Members of this class must have at least one of each of the following toppings: Red Onion, Cajun Spice, Tomato, Garlic, Sweet Pepper, Mozzarella, and Chicken. Furthermore, the only permissible toppings are Chicken, Mozzarella, Garlic, Tomato, Red Onion, Cajun Spice, and Sweet Pepper; no other toppings are allowed. This formalization provides a precise specification of PolloAdAstra as a distinct pizza type characterized by its unique and restricted combination of toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some RedOnionTopping]', '[hasTopping some CajunSpiceTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some SweetPepperTopping]', '[hasTopping only (ChickenTopping or MozzarellaTopping or GarlicTopping or TomatoTopping or RedOnionTopping or CajunSpiceTopping or SweetPepperTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ChickenTopping]', '[hasTopping only TomatoTopping]']}\nGenerated CQs:", "output": "Is it required for a PolloAdAstra pizza to have at least one TomatoTopping? | Can a PolloAdAstra pizza exist without having any TomatoTopping as one of its toppings? | Does every instance of PolloAdAstra use TomatoTopping among its toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: QuattroFormaggi\nDescription: QuattroFormaggi is defined as a subclass of NamedPizza and is explicitly disjoint with a range of other specific pizza classes, meaning an individual pizza cannot simultaneously belong to QuattroFormaggi and any of the listed disjoint classes. Members of this class must have at least one tomato topping and at least one four-cheeses topping. Additionally, QuattroFormaggi pizzas are restricted to having only tomato and four-cheeses toppings—no other topping types are permitted. This formalization guarantees that any pizza classified as QuattroFormaggi has a distinctive combination of tomato and four-cheeses toppings, consistent with its traditional recipe.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some FourCheesesTopping]', '[hasTopping only (FourCheesesTopping or TomatoTopping)]', '[hasTopping only TomatoTopping]']}\nGenerated CQs:", "output": "Is it necessary for a QuattroFormaggi pizza to have at least one TomatoTopping as a topping? | Can a pizza be classified as QuattroFormaggi if it does not include any TomatoTopping among its toppings? | Does the presence of TomatoTopping serve as a required condition for an item to be recognized as QuattroFormaggi? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Siciliana\nDescription: Siciliana is a subclass of NamedPizza, explicitly disjoint from numerous other specific pizza types, ensuring that no individual pizza can be simultaneously classified as Siciliana and any of the listed varieties (e.g., Mushroom, Margherita, FourSeasons, etc.). Siciliana pizzas are characterized by their toppings: they must include some tomato topping, garlic topping, ham topping, artichoke topping, olive topping, mozzarella topping, and anchovies topping. Furthermore, these pizzas are restricted to only have toppings from the following: anchovies, mozzarella, garlic, artichoke, tomato, ham, and olive—no additional toppings are permitted. This formalization precisely defines the Siciliana pizza in terms of both its composition and differentiation from other pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some HamTopping]', '[hasTopping some ArtichokeTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasTopping only (AnchoviesTopping and MozzarellaTopping and GarlicTopping and ArtichokeTopping and TomatoTopping and HamTopping and OliveTopping)]']}\nGenerated CQs:", "output": "Are Siciliana pizzas restricted to having only Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, or Olive as toppings? | Could a pizza still be classified as Siciliana if it includes a topping not listed among Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, or Olive? | Does the definition of Siciliana exclude all toppings other than Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, and Olive from being present on the pizza? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Soho\nDescription: Soho is defined as a subclass of NamedPizza and is explicitly disjoint with a range of other specific pizza types, ensuring that no instance can simultaneously belong to both Soho and these other classes. Members of the Soho class are characterized by their required toppings: each Soho pizza must include tomato, garlic, olive, mozzarella, parmesan, and rocket toppings. Additionally, the only permitted toppings for Soho pizzas are mozzarella, garlic, tomato, rocket, olive, or parmesan, meaning no other toppings are allowed on this type of pizza. This formalization strictly specifies both the mandatory inclusion and the exclusivity of particular toppings for Soho pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (MozzarellaTopping or GarlicTopping or TomatoTopping or RocketTopping or OliveTopping or ParmesanTopping)]', '[hasTopping some GarlicTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping only RocketTopping]']}\nGenerated CQs:", "output": "Is it required for a Soho pizza to have at least one topping of RocketTopping? | Does every Soho pizza include RocketTopping as one of its toppings? | Can a Soho pizza exist without having any RocketTopping among its toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Veneziana\nDescription: Veneziana is defined as a subclass of NamedPizza and is disjoint with a range of other specific pizzas, ensuring no individual instance can simultaneously belong to Veneziana and any of those disjoint classes. Members of the Veneziana class must have only the following toppings: MozzarellaTopping, TomatoTopping, SultanaTopping, OnionTopping, CaperTopping, OliveTopping, or PineKernels; each member is also required to have at least one of each of these toppings present. Additionally, Veneziana pizzas have Italy as their country of origin. This ontological definition captures the uniquely defined set of ingredients and exclusive identity of the Veneziana pizza within the broader NamedPizza category.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping only (MozzarellaTopping or TomatoTopping or SultanaTopping or OnionTopping or CaperTopping or OliveTopping or PineKernels)]', '[hasTopping some PineKernels]', '[hasTopping some TomatoTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasCountryOfOrigin hasValue Italy]', '[hasTopping some CaperTopping]', '[hasTopping only SultanaTopping]']}\nGenerated CQs:", "output": "Must a Veneziana pizza have at least one SultanaTopping as one of its toppings? | Is the presence of SultanaTopping a required condition for classifying a pizza as Veneziana? | Can a pizza lacking SultanaTopping ever be correctly categorized as Veneziana? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ArtichokeTopping\nDescription: ArtichokeTopping is defined as a subclass of VegetableTopping and is explicitly disjoint with a range of other vegetable toppings, including RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that no individual can be classified as an ArtichokeTopping and any of these other types simultaneously. Furthermore, every member of the ArtichokeTopping class is constrained to have at least some level of mild spiciness (hasSpiciness some Mild), distinguishing it by its gentle flavor profile within the broader category of vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every ArtichokeTopping required to have at least one spiciness level classified as Mild? | Can an ArtichokeTopping exist without possessing any degree of spiciness identified as Mild? | Does the definition of ArtichokeTopping permit toppings with only Mild spiciness, or could additional spiciness levels also be present? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AsparagusTopping\nDescription: AsparagusTopping is defined as a subclass of VegetableTopping, meaning it represents a specific type of vegetable-based topping. It is disjoint with several other vegetable toppings, including RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that an individual cannot simultaneously belong to any of these classes. Additionally, every instance of AsparagusTopping must have some level of mild spiciness, as specified by the hasSpiciness property restriction.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every AsparagusTopping required to have at least one 'hasSpiciness' property with a Mild value? | Must AsparagusTopping always be associated with some level of Mild spiciness through the hasSpiciness property? | Can there exist an instance of AsparagusTopping without having any Mild spiciness via the hasSpiciness relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CaperTopping\nDescription: CaperTopping is defined as a subclass of VegetableTopping, indicating that it is a specific type of vegetable-based topping. It is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, meaning that an individual topping cannot belong to both CaperTopping and any of these classes simultaneously. Additionally, CaperTopping is characterized by having a property restriction requiring that it has some level of spiciness classified as Mild.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Must every CaperTopping have at least one hasSpiciness value that is Mild? | Is it possible for a CaperTopping to lack any hasSpiciness relation with Mild as a value? | Does the definition of CaperTopping require the existence of a Mild spiciness property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeekTopping\nDescription: LeekTopping is defined as a subclass of VegetableTopping, representing toppings made from leeks. It is explicitly disjoint from a range of other vegetable toppings—including RocketTopping, OnionTopping, SpinachTopping, and others—ensuring that no individual can be both a LeekTopping and any of these other toppings simultaneously. Furthermore, members of this class are characterized by the property that they have at least some level of mild spiciness (hasSpiciness some Mild), distinguishing their flavor profile among vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it necessary for a LeekTopping to have the property 'hasSpiciness' with at least one Mild value? | Does every instance of LeekTopping possess a spiciness that includes Mild as one of its characteristics? | Can a LeekTopping exist without being associated with some degree of Mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OliveTopping\nDescription: OliveTopping is defined as a subclass of VegetableTopping and is disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—meaning an individual cannot belong to both OliveTopping and any of these classes. Members of the OliveTopping class are further characterized by the property that they have at least some level of spiciness classified as mild.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every OliveTopping required to have a spiciness property with at least one value of Mild? | Can an OliveTopping exist without any mild spiciness associated with it? | Are all OliveTopping instances guaranteed to possess some degree of mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PetitPoisTopping\nDescription: PetitPoisTopping is defined as a subclass of VegetableTopping and is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, and TomatoTopping—meaning no individual can simultaneously belong to PetitPoisTopping and any of these other topping classes. Additionally, PetitPoisTopping is characterized by the property restriction that it has some level of spiciness classified as Mild. This formalization ensures that PetitPoisTopping represents a unique, mildly spicy vegetable topping distinct from all other specified vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that a PetitPoisTopping ingredient has at least one spiciness level classified as Mild? | Does every PetitPoisTopping possess the property 'hasSpiciness' relating it to Mild spiciness? | Can a PetitPoisTopping exist without any association to Mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RocketTopping\nDescription: RocketTopping is defined as a subclass of VegetableTopping, representing a specific type of vegetable-based topping. It is disjoint with multiple other vegetable toppings, including LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—ensuring no individual can simultaneously belong to RocketTopping and any of these classes. Additionally, RocketTopping is characterized by the property that it must have at least some medium level of spiciness (hasSpiciness some Medium).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Medium]']}\nGenerated CQs:", "output": "Is it necessary for a RocketTopping to have the hasSpiciness property with Medium as its value? | Must every instance of RocketTopping exhibit at least some degree of Medium spiciness? | Does the presence of Medium spiciness through the hasSpiciness property define a RocketTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TomatoTopping\nDescription: TomatoTopping is a subclass of VegetableTopping, representing toppings derived from tomatoes. It is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, and PetitPoisTopping, ensuring that no individual can simultaneously be both a TomatoTopping and any of these other toppings. Additionally, TomatoTopping is defined to always have some level of mild spiciness, as specified by the restriction [hasSpiciness some Mild].\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that every TomatoTopping possesses at least one spiciness classified as Mild? | Can a TomatoTopping exist without having any mild spiciness attribute? | Does the definition of TomatoTopping permit it to have only non-mild spiciness levels? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RosemaryTopping\nDescription: RosemaryTopping is defined as a subclass of HerbSpiceTopping, representing toppings that are both herbal and spicy in nature. This class is explicitly disjoint with CajunSpiceTopping, ensuring that no topping can be classified simultaneously as RosemaryTopping and CajunSpiceTopping. RosemaryTopping is further characterized by the property restriction that it must have at least some mild spiciness, distinguishing it from toppings with no or higher levels of spiciness.\nAxiom: {'subClassOf': ['HerbSpiceTopping'], 'disjointWith': ['CajunSpiceTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every RosemaryTopping required to have a spiciness level that is Mild? | Can a RosemaryTopping exist without any mild spiciness property? | Must all instances of RosemaryTopping possess at least one spiciness classified as Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FishTopping\nDescription: FishTopping is defined as a subclass of PizzaTopping and is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no topping instance can simultaneously belong to more than one of these classes. Members of the FishTopping class are characterized by the property that they possess at least some mild level of spiciness, as specified by the 'hasSpiciness some Mild' restriction. This formalization guarantees the uniqueness and specific mild spiciness characteristic of any pizza topping categorized as FishTopping.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'CheeseTopping', 'HerbSpiceTopping', 'NutTopping', 'FruitTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Must every FishTopping include at least one instance with hasSpiciness set to Mild? | Is it required that FishTopping hasSpiciness relates to Mild in at least one case? | Can a topping classified as FishTopping exist without being associated with any Mild spiciness level? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NutTopping\nDescription: NutTopping is defined as a subclass of PizzaTopping, representing pizza toppings that consist specifically of nuts. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, and FruitTopping, ensuring that no topping instance can simultaneously belong to these other topping categories. Additionally, every NutTopping must have at least some level of mild spiciness, as constrained by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'FruitTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it necessary for a NutTopping to have at least one hasSpiciness property value that is Mild? | Must every instance of NutTopping be associated with some mild level of spiciness through the hasSpiciness property? | Does the presence of a NutTopping imply the existence of a hasSpiciness relationship to Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FourCheesesTopping\nDescription: FourCheesesTopping is defined as a subclass of CheeseTopping, representing a specific type of cheese topping distinguished by its composition of four cheeses. It is declared disjoint with GoatsCheeseTopping, MozzarellaTopping, GorgonzolaTopping, and ParmesanTopping, meaning an individual topping cannot simultaneously be classified as FourCheesesTopping and any of these other specific cheese toppings. Additionally, FourCheesesTopping must have a spiciness level that is at least mildly spicy, as specified by the restriction that it has some Mild spiciness.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'MozzarellaTopping', 'GorgonzolaTopping', 'ParmesanTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Must every FourCheesesTopping have at least one hasSpiciness relationship to Mild? | Is it required for a FourCheesesTopping to exhibit some level of spiciness classified as Mild? | Does the existence of a Mild spiciness property suffice for an instance to be considered a FourCheesesTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GoatsCheeseTopping\nDescription: GoatsCheeseTopping is defined as a subclass of CheeseTopping and is explicitly disjoint with MozzarellaTopping, GorgonzolaTopping, ParmesanTopping, and FourCheesesTopping, meaning an individual topping cannot simultaneously belong to any of these classes. GoatsCheeseTopping is characterized by the property that it has some degree of mild spiciness (hasSpiciness some Mild), indicating that any topping of this class is mildly spicy.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['MozzarellaTopping', 'GorgonzolaTopping', 'ParmesanTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that any GoatsCheeseTopping must exhibit at least one instance of the hasSpiciness property with value Mild? | Does every GoatsCheeseTopping have an associated spiciness level that includes Mild? | Can a GoatsCheeseTopping exist without being characterized by the hasSpiciness property set to Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GorgonzolaTopping\nDescription: GorgonzolaTopping is defined as a subclass of CheeseTopping, representing a specific type of cheese-based topping. It is explicitly disjoint with GoatsCheeseTopping, MozzarellaTopping, ParmesanTopping, and FourCheesesTopping, ensuring that an individual cannot simultaneously belong to any of these classes. GorgonzolaTopping is characterized by having some level of mild spiciness, as specified by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'MozzarellaTopping', 'ParmesanTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that every GorgonzolaTopping has at least one spiciness characteristic classified as Mild? | Can a GorgonzolaTopping exist without being associated with the Mild level of spiciness? | Does the definition of GorgonzolaTopping necessitate that it possesses the property 'hasSpiciness' with respect to Mild flavor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MozzarellaTopping\nDescription: MozzarellaTopping is a subclass of CheeseTopping, representing a cheese-based topping specifically characterized by its mild spiciness and Italian origin. It is explicitly disjoint from GoatsCheeseTopping, GorgonzolaTopping, ParmesanTopping, and FourCheesesTopping, ensuring that no individual can simultaneously be an instance of MozzarellaTopping and any of these other cheese topping classes. All individuals of MozzarellaTopping are associated with a mild level of spiciness and must originate from Italy.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'GorgonzolaTopping', 'ParmesanTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasCountryOfOrigin hasValue Italy]', '[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that every MozzarellaTopping has at least some level of spiciness categorized as Mild? | Can a MozzarellaTopping exist without having the hasSpiciness property set to Mild? | Does the presence of MozzarellaTopping entail that it must be associated with a Mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChickenTopping\nDescription: ChickenTopping is defined as a subclass of MeatTopping and is explicitly disjoint with PeperoniSausageTopping, HotSpicedBeefTopping, and HamTopping, ensuring that no individual can simultaneously belong to both ChickenTopping and any of these other meat topping classes. Members of the ChickenTopping class are required to have at least some level of spiciness characterized as Mild. This formalization specifies that ChickenTopping represents mild, non-overlapping meat-based pizza toppings distinct from other specified meat varieties.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'HotSpicedBeefTopping', 'HamTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Does every ChickenTopping require at least one hasSpiciness property value of Mild? | Is it necessary for a ChickenTopping to be associated with some level of spiciness classified as Mild? | Can a ChickenTopping exist without having any hasSpiciness relationship to Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HotSpicedBeefTopping\nDescription: HotSpicedBeefTopping is defined as a subclass of MeatTopping, representing a specific type of meat-based pizza topping. It is disjoint with PeperoniSausageTopping, HamTopping, and ChickenTopping, meaning no individual topping can simultaneously belong to any of these classes and HotSpicedBeefTopping. Members of this class are characterized by having at least some degree of spiciness classified as Hot, distinguishing them from other meat toppings in the ontology.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'HamTopping', 'ChickenTopping'], 'propertyRestrictions': ['[hasSpiciness only Hot]']}\nGenerated CQs:", "output": "Must every HotSpicedBeefTopping have at least one hasSpiciness property value that is Hot? | Is it necessary for HotSpicedBeefTopping to be associated with some level of hot spiciness via the hasSpiciness property? | Can a HotSpicedBeefTopping exist without having the hasSpiciness property filled with a Hot value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: JalapenoPepperTopping\nDescription: JalapenoPepperTopping is formally defined as a subclass of PepperTopping, indicating that it inherits all general characteristics of pepper-based toppings. It is explicitly disjoint with SweetPepperTopping, GreenPepperTopping, and PeperonataTopping, meaning that no individual can simultaneously be an instance of JalapenoPepperTopping and any of these other topping types. Additionally, this class is characterized by the property restriction that every JalapenoPepperTopping must exhibit some level of hot spiciness, ensuring that all members are differentiated by their distinctly hot flavor profile.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['SweetPepperTopping', 'GreenPepperTopping', 'PeperonataTopping'], 'propertyRestrictions': ['[hasSpiciness only Hot]']}\nGenerated CQs:", "output": "Must every JalapenoPepperTopping have at least one instance of spiciness classified as Hot? | Is it required for JalapenoPepperTopping to possess the hasSpiciness property associated with Hot? | Can JalapenoPepperTopping exist without being connected to Hot via the hasSpiciness property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeperonataTopping\nDescription: PeperonataTopping is defined as a subclass of PepperTopping, meaning it inherits all characteristics typical of pepper-based pizza toppings. It is explicitly disjoint with SweetPepperTopping, GreenPepperTopping, and JalapenoPepperTopping, so no individual can simultaneously belong to any of those classes and PeperonataTopping. Every instance of PeperonataTopping is required to have at least some medium level of spiciness, as specified by its property restriction on hasSpiciness. This ensures that PeperonataTopping is uniquely distinguished by both its type within pepper toppings and its characteristic spiciness.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['SweetPepperTopping', 'GreenPepperTopping', 'JalapenoPepperTopping'], 'propertyRestrictions': ['[hasSpiciness only Medium]']}\nGenerated CQs:", "output": "Must every PeperonataTopping have at least one hasSpiciness property with Medium as its value? | Can a PeperonataTopping exist without being associated with Medium spiciness through the hasSpiciness property? | Is it a requirement that PeperonataTopping be linked to Medium spiciness by means of the hasSpiciness property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SweetPepperTopping\nDescription: SweetPepperTopping is defined as a subclass of PepperTopping, specifying that it represents a type of pepper-based topping. It is explicitly disjoint with GreenPepperTopping, JalapenoPepperTopping, and PeperonataTopping, so no individual can be both a SweetPepperTopping and any of these other pepper toppings. Additionally, SweetPepperTopping has a property restriction requiring that it exhibits at least some mild level of spiciness (hasSpiciness some Mild), distinguishing it from potentially hotter pepper toppings.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['GreenPepperTopping', 'JalapenoPepperTopping', 'PeperonataTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every SweetPepperTopping required to have a spiciness level that is at least Mild? | Must there exist at least one instance where SweetPepperTopping has spiciness classified as Mild? | Can a SweetPepperTopping exist without being associated with Mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IceCream\nDescription: IceCream is defined as a subclass of Food, and is explicitly disjoint with Pizza, PizzaTopping, and PizzaBase, ensuring that no individual can simultaneously belong to any of these classes. All members of the IceCream class must have at least one topping from FruitTopping, as specified by the property restriction (hasTopping some FruitTopping). The current modeling highlights a domain constraint issue: since the hasTopping property has Pizza as its domain, any use of hasTopping causes the reasoner to infer membership in Pizza. Combined with the disjointness between Pizza and IceCream, this results in a logical inconsistency, illustrating the importance of carefully aligning property domains with intended class usage.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['Pizza', 'PizzaTopping', 'PizzaBase'], 'propertyRestrictions': ['[hasTopping only FruitTopping]']}\nGenerated CQs:", "output": "Is it required for every IceCream to include at least one topping that is a FruitTopping? | Can an IceCream exist without having any FruitTopping as a topping? | Does the presence of a FruitTopping as a topping suffice for something to be classified as IceCream? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pizza\nDescription: Pizza is defined as a subclass of Food and is explicitly disjoint with IceCream, PizzaTopping, and PizzaBase, ensuring that no individual can simultaneously be an instance of Pizza and any of these disjoint classes. Every Pizza must have at least one base, specified by the restriction that it must have some relationship via hasBase to an instance of PizzaBase. This formalization captures the essential structure of a pizza: a food item composed of a particular base and distinguished from toppings or other food types such as ice cream.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['IceCream', 'PizzaTopping', 'PizzaBase'], 'propertyRestrictions': ['[hasBase only PizzaBase]']}\nGenerated CQs:", "output": "Must every Pizza have at least one 'hasBase' relationship with some PizzaBase? | Is it required that a Pizza is associated with a PizzaBase via the 'hasBase' property? | Can a Pizza exist without having a 'hasBase' connection to any instance of PizzaBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SlicedTomatoTopping\nDescription: SlicedTomatoTopping is defined as a subclass of TomatoTopping and is explicitly disjoint with SundriedTomatoTopping, ensuring that no individual can be both a SlicedTomatoTopping and a SundriedTomatoTopping. Members of this class are characterized by the property that they must have at least some level of mild spiciness, as specified by the hasSpiciness restriction.\nAxiom: {'subClassOf': ['TomatoTopping'], 'disjointWith': ['SundriedTomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Must a SlicedTomatoTopping possess the property hasSpiciness with at least some value classified as Mild? | Does every instance of SlicedTomatoTopping necessarily have some form of spiciness level that is Mild? | Can a SlicedTomatoTopping exist without being associated to Mild via the hasSpiciness property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SundriedTomatoTopping\nDescription: SundriedTomatoTopping is a subclass of TomatoTopping, meaning it inherits all characteristics typical of tomato-based toppings. It is defined as disjoint with SlicedTomatoTopping, ensuring that an individual cannot be both a SundriedTomatoTopping and a SlicedTomatoTopping. Additionally, every instance of SundriedTomatoTopping must have at least some mild level of spiciness, as specified by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['TomatoTopping'], 'disjointWith': ['SlicedTomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that every SundriedTomatoTopping possesses the hasSpiciness property with at least one Mild instance? | Can SundriedTomatoTopping have spiciness levels other than Mild, or must it always include Mild spiciness? | Does the ontology entail that SundriedTomatoTopping must be associated with some form of Mild spiciness via the hasSpiciness relation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizza\nDescription: VegetarianPizza is defined as a subclass of Pizza that is disjoint with NonVegetarianPizza, meaning no pizza can be both vegetarian and non-vegetarian. It is equivalent to pizzas that have neither meat toppings nor fish toppings—specifically, these pizzas do not have any topping that is an instance of MeatTopping or FishTopping. VegetarianPizza may have any combination of non-meat, non-fish toppings or no toppings at all, as specified in the current description. This ensures that only pizzas entirely free of meat and fish toppings are classified as VegetarianPizza.\nAxiom: {'disjointWith': ['NonVegetarianPizza'], 'equivalentClass': ['(Pizza and not [hasTopping some MeatTopping] and not [hasTopping only FishTopping])']}\nGenerated CQs:", "output": "Is every VegetarianPizza necessarily a Pizza that does not have any toppings which qualify as MeatTopping or FishTopping? | Is VegetarianPizza equivalent to the intersection of Pizza and those lacking both meat and fish as toppings? | Can VegetarianPizza be fully characterized as Pizzas for which there does not exist a MeatTopping or FishTopping among their toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NonVegetarianPizza\nDescription: NonVegetarianPizza is formally defined as any Pizza that is not a VegetarianPizza. It is explicitly disjoint with VegetarianPizza, ensuring that no individual pizza can be both a NonVegetarianPizza and a VegetarianPizza. The equivalence axiom specifies that NonVegetarianPizza includes all and only those pizzas that are instances of Pizza but not classified as VegetarianPizza.\nAxiom: {'disjointWith': ['VegetarianPizza'], 'equivalentClass': ['(Pizza or not VegetarianPizza)']}\nGenerated CQs:", "output": "Is every NonVegetarianPizza necessarily a Pizza that is not a VegetarianPizza? | Is NonVegetarianPizza logically defined as the intersection of Pizza and the complement of VegetarianPizza? | Does the class NonVegetarianPizza exclude any Pizza that is a VegetarianPizza? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseyPizza\nDescription: CheeseyPizza is formally defined as any Pizza that has at least one cheese topping, expressed by the equivalence axiom: CheeseyPizza ≡ Pizza and (hasTopping some CheeseTopping). This means that every instance of CheeseyPizza must be a pizza with one or more cheese toppings, aligning with the description: any pizza that has at least one cheese topping.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only CheeseTopping])']}\nGenerated CQs:", "output": "Is a CheeseyPizza necessarily a Pizza that has at least one CheeseTopping as a topping? | Is the set of CheeseyPizza identical to the intersection of all Pizzas and those having some CheeseTopping? | Can an individual be classified as CheeseyPizza only if it is both a Pizza and possesses at least one hasTopping relationship to CheeseTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Country\nDescription: Country is an enumerated class, defined as exactly the set containing America, England, France, Germany, and Italy. It is equivalent to the intersection of this set and DomainConcept, meaning each Country instance must be one of these individuals and also a DomainConcept. By axiom, no other individuals can be classified as Country; all specified countries are explicitly different from each other.\nAxiom: {'equivalentClass': ['({America, Italy, Germany, France, England} or DomainConcept)']}\nGenerated CQs:", "output": "Is Country defined as the intersection of the individuals America, Italy, Germany, France, England and the class DomainConcept? | Does every instance of Country correspond to one of America, Italy, Germany, France, or England and also to DomainConcept? | Are there any individuals that are America, Italy, Germany, France, or England and DomainConcept but not classified as Country? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterestingPizza\nDescription: InterestingPizza is defined as a subclass of Pizza that has at least three toppings, as specified by a minimum cardinality restriction (hasTopping min 3). This class is equivalent to pizzas possessing at least three values for the hasTopping property, regardless of the type of topping. It is important to note that this restriction is not a qualified cardinality constraint (QCR); it does not require that the toppings belong to a specific class such as PizzaTopping. This formalization captures any pizza with three or more toppings without specifying their types.\nAxiom: {'equivalentClass': ['([hasTopping min 3] or Pizza)']}\nGenerated CQs:", "output": "Does every InterestingPizza necessarily have at least three toppings and be a Pizza? | Can InterestingPizza be considered identical to the intersection of Pizzas with a minimum of three toppings? | Is having at least three toppings a necessary and sufficient condition for a Pizza to be an InterestingPizza? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MeatyPizza\nDescription: MeatyPizza is defined as any pizza (Pizza) that has at least one meat topping, formalized through an existential restriction stating that members of this class must bear at least one hasTopping relationship to an individual of class MeatTopping. This class is equivalent to the intersection of Pizza and those entities with some MeatTopping as a topping, ensuring all MeatyPizza instances feature at least one meat-based topping.\nAxiom: {'equivalentClass': ['([hasTopping only MeatTopping] or Pizza)']}\nGenerated CQs:", "output": "Is MeatyPizza defined as the intersection of Pizza and entities having at least one meat topping? | Does every MeatyPizza necessarily include some topping categorized as MeatTopping? | Can MeatyPizza be fully characterized as a Pizza that has at least one MeatTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyPizza\nDescription: SpicyPizza is defined as any pizza (i.e., an instance of the class Pizza) that has at least one topping which is a SpicyTopping. This equivalence axiom ensures that all and only those pizzas with some spicy topping are classified under SpicyPizza. Thus, membership in the SpicyPizza class is determined precisely by the presence of at least one spicy topping.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping some SpicyTopping])']}\nGenerated CQs:", "output": "Is every SpicyPizza necessarily a Pizza that has at least one topping classified as a SpicyTopping? | Can SpicyPizza be precisely defined as the intersection of the class Pizza and those with some SpicyTopping? | Is SpicyPizza equivalent to pizzas that are distinguished by having at least one spicy topping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyPizzaEquivalent\nDescription: SpicyPizzaEquivalent is defined as any Pizza that has at least one topping which is both a PizzaTopping and has a spiciness level of Hot. This equivalence axiom provides an alternative to approaches relying on a predefined SpicyTopping class, specifying instead that membership in SpicyPizzaEquivalent requires the existence of a topping meeting both conditions. This ensures precise classification of spicy pizzas based on their actual toppings' spiciness attributes.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only ([hasSpiciness some Hot] or PizzaTopping)])']}\nGenerated CQs:", "output": "Is every SpicyPizzaEquivalent necessarily a Pizza with at least one topping that is both a PizzaTopping and possesses some degree of Hot spiciness? | Is SpicyPizzaEquivalent logically defined as the intersection of Pizza and those with a topping that is both a PizzaTopping and includes some Hot spiciness? | Can SpicyPizzaEquivalent be fully characterized as a Pizza that has a topping which is a PizzaTopping and has some Hot as its spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyTopping\nDescription: SpicyTopping is defined as an equivalent class to pizza toppings that possess a spiciness level of Hot. This means every SpicyTopping is a PizzaTopping and must have at least one instance of hot spiciness. Formally, individuals in this class are restricted to those pizza toppings that are characterized by having a hot spiciness attribute.\nAxiom: {'equivalentClass': ['([hasSpiciness some Hot] or PizzaTopping)']}\nGenerated CQs:", "output": "Is every SpicyTopping necessarily both a PizzaTopping and something that has spiciness characterized as Hot? | Can SpicyTopping be defined as the intersection of PizzaTopping and entities with the property hasSpiciness some Hot? | Is SpicyTopping equivalent to all PizzaTopping instances that have at least one Hot spiciness attribute? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ThinAndCrispyPizza\nDescription: ThinAndCrispyPizza is formally defined as a subclass of Pizza whose base is exclusively of type ThinAndCrispyBase. This means any individual classified as a ThinAndCrispyPizza must be a Pizza and can only have ThinAndCrispyBase as its base, with no other base types permitted. This equivalence axiom precisely characterizes ThinAndCrispyPizza by its unique crust style.\nAxiom: {'equivalentClass': ['(Pizza and [hasBase some ThinAndCrispyBase])']}\nGenerated CQs:", "output": "Is every ThinAndCrispyPizza required to have only ThinAndCrispyBase as its base? | Is ThinAndCrispyPizza equivalent to pizzas that exclusively use ThinAndCrispyBase? | Can ThinAndCrispyPizza be fully defined as the intersection of Pizza and things with base restricted solely to ThinAndCrispyBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizzaEquivalent1\nDescription: VegetarianPizzaEquivalent1 is defined as any pizza (member of the Pizza class) whose toppings, if present, are exclusively vegetarian; that is, it only has toppings that are instances of VegetarianTopping, or it has no toppings at all. Formally, it is equivalent to the intersection of Pizza and those that satisfy the restriction 'hasTopping only VegetarianTopping'. According to the description, this class should be inferred to be equivalent to VegetarianPizzaEquiv2 but is not equivalent to the broader VegetarianPizza class, as the latter does not assume that PizzaTopping encompasses all possible toppings.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only VegetarianTopping])']}\nGenerated CQs:", "output": "Does VegetarianPizzaEquivalent1 include only those Pizzas where all toppings are VegetarianTopping? | Is VegetarianPizzaEquivalent1 equivalent to the intersection of Pizza and items whose toppings are restricted to VegetarianTopping? | Can VegetarianPizzaEquivalent1 be defined as a Pizza that necessarily has only VegetarianTopping as its topping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizzaEquivalent2\nDescription: VegetarianPizzaEquivalent2 is defined as a class equivalent to pizzas that have only sauce, cheese, vegetable, fruit, nut, or herb & spice toppings—no other topping types are permitted. This definition provides an alternative to VegetarianPizzaEquiv1 by specifying allowed toppings directly, avoiding dependency on a pre-defined VegetarianTopping class. However, it is noted that this approach may be less maintainable and is not equivalent to the original VegetarianPizza class.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only (SauceTopping and CheeseTopping and VegetableTopping and FruitTopping and NutTopping and HerbSpiceTopping)])']}\nGenerated CQs:", "output": "Is VegetarianPizzaEquivalent2 defined as a Pizza that can only have toppings that are either SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping? | Can a VegetarianPizzaEquivalent2 ever have a topping outside the categories of SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping? | Is being a Pizza with toppings restricted exclusively to SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping sufficient for classification as a VegetarianPizzaEquivalent2? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianTopping\nDescription: VegetarianTopping is formally defined as a pizza topping that must be one of the following: SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping. This equivalence axiom ensures that every VegetarianTopping is a subclass of PizzaTopping and cannot be any topping outside this specified set. In practice, this means only toppings within these categories are considered vegetarian according to the ontology.\nAxiom: {'equivalentClass': ['(PizzaTopping or (SauceTopping and CheeseTopping and VegetableTopping and FruitTopping and NutTopping and HerbSpiceTopping))']}\nGenerated CQs:", "output": "Is every VegetarianTopping necessarily classified as a PizzaTopping and also as one of: SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping? | Is VegetarianTopping equivalent to the intersection of PizzaTopping with the union of SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, and HerbSpiceTopping? | Does VegetarianTopping include any toppings apart from SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping within the category of PizzaTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseyVegetableTopping\nDescription: CheeseyVegetableTopping is defined as a subclass of VegetableTopping, meaning every instance of CheeseyVegetableTopping is also an instance of VegetableTopping. There are no additional restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['VegetableTopping', 'CheeseTopping']}\nGenerated CQs:", "output": "Is CheeseyVegetableTopping categorized as a type of CheeseTopping? | What specific types fall under the class CheeseTopping, with regard to CheeseyVegetableTopping? | Which broader classes encompass CheeseyVegetableTopping within their classification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HotGreenPepperTopping\nDescription: HotGreenPepperTopping is defined as a subclass of GreenPepperTopping, meaning every HotGreenPepperTopping is a type of GreenPepperTopping. There are no additional property restrictions or axioms specified for this class.\nAxiom: {'subClassOf': ['GreenPepperTopping'], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "output": "Is every HotGreenPepperTopping required to have a spiciness level that includes some instance of Hot? | Can a HotGreenPepperTopping exist that does not possess the hasSpiciness property with a value classified as Hot? | Does the presence of the hasSpiciness property with Hot necessarily characterize all instances of HotGreenPepperTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ParmaHamTopping\nDescription: ParmaHamTopping is defined as a subclass of HamTopping. This means every instance of ParmaHamTopping is necessarily an instance of HamTopping, inheriting all properties and characteristics of HamTopping. No additional distinguishing property restrictions are specified for this class.\nAxiom: {'subClassOf': ['HamTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "output": "Is every ParmaHamTopping required to have at least one level of spiciness classified as Mild? | Can a ParmaHamTopping exist without any Mild spiciness level? | Does the definition of ParmaHamTopping allow for spiciness levels other than Mild, provided that at least one is Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Spiciness\nDescription: Spiciness is defined as a subclass of ValuePartition, indicating that it represents a partitioning value within a larger classification scheme. As a ValuePartition, it is intended to categorize entities based on specific qualitative values or levels of spiciness. No additional equivalent class axioms are specified.\nAxiom: {'subClassOf': ['ValuePartition'], 'equivalentClass': ['(Hot or Medium or Mild)']}\nGenerated CQs:", "output": "Is Spiciness defined as exactly the union of Hot, Medium, and Mild? | Are all instances of Hot, Medium, or Mild considered Spiciness? | Does Spiciness include any categories apart from Hot, Medium, and Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SultanaTopping\nDescription: SultanaTopping is a class defined by the property restriction that its members must exhibit some medium level of spiciness, as specified by the hasSpiciness property. No further superclass or disjointness constraints are asserted for this class.\nAxiom: {'subClassOf': ['FruitTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "output": "Is SultanaTopping classified as a kind of FruitTopping? | What toppings are considered subtypes of FruitTopping, including SultanaTopping? | Which higher-level topping categories encompass SultanaTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TobascoPepperSauce\nDescription: TobascoPepperSauce is a class defined by its property restriction: all instances must have at least some degree of spiciness classified as Hot. There are no asserted superclass relationships, but the essential characteristic of this class is the requirement that every TobascoPepperSauce possesses hot spiciness.\nAxiom: {'subClassOf': ['SauceTopping'], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "output": "Is TobascoPepperSauce classified as a subcategory of SauceTopping? | Which toppings are more specific instances under SauceTopping, such as TobascoPepperSauce? | To which broader topping classes does TobascoPepperSauce belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RealItalianPizza\nDescription: RealItalianPizza is defined as an equivalent class to pizzas that have Italy as their country of origin. This means any individual that is classified as a pizza and is specifically identified as originating from Italy is considered a RealItalianPizza. The class captures the concept of authentic Italian pizza through this origin-based restriction.\nAxiom: {'equivalentClass': ['(Pizza and [hasCountryOfOrigin hasValue Italy])'], 'propertyRestrictions': ['[hasBase only ThinAndCrispyBase]']}\nGenerated CQs:", "output": "Is RealItalianPizza required to have only ThinAndCrispyBase as its base? | Can a RealItalianPizza have any base type other than ThinAndCrispyBase? | Does the definition of RealItalianPizza exclude all bases except for ThinAndCrispyBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasSpiciness\nDescription: The property \"hasSpiciness\" is a functional property, meaning each subject can have at most one value for this property. Its range is restricted to the class \"Spiciness,\" but no explicit domain is specified. It is designed to denote the spiciness level of an entity, particularly in the context of a ValuePartition. There are no super-properties or inverse properties defined.\nAxiom: {'characteristics': ['Functional'], 'domain': ['None'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'hasSpiciness' accept any value that is not classified as Spiciness as its range? | Are all possible values of 'hasSpiciness' instances of the class Spiciness? | Which types of entities can serve as the range for the 'hasSpiciness' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isToppingOf\nDescription: The property \"isToppingOf\" is a functional object property, meaning each instance of \"PizzaTopping\" can be a topping of at most one \"Pizza\". Its domain is restricted to \"PizzaTopping\" and its range to \"Pizza\". \"isToppingOf\" is a sub-property of \"isIngredientOf\" and has \"hasTopping\" as its inverse. According to the description, each topping instance should only be associated with a single pizza.\nAxiom: {'characteristics': ['Functional'], 'domain': ['PizzaTopping'], 'range': ['Pizza'], 'subPropertyOf': ['isIngredientOf'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties ‘isToppingOf’ and ‘hasTopping’ related in terms of inverses within the ontology? | If an individual A isToppingOf B, does this entail that B hasTopping A in the ontology? | What property is defined as the inverse of ‘isToppingOf’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasIngredient\nDescription: The property \"hasIngredient\" is a transitive object property relating entities of type Food to other Food entities. Because of its transitivity, if Food A hasIngredient Food B and Food B hasIngredient Food C, then Food A also hasIngredient Food C. It has \"Food\" as both its domain and range, ensuring it only connects food items. The property is the inverse of \"isIngredientOf\" and carries no additional super-properties. Current comments note that due to transitivity, the ingredients of ingredients are considered ingredients of the whole.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['Food'], 'range': ['Food'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse property of ‘hasIngredient’ in the ontology? | If entity X has ingredient Y, does this entail that Y is an ingredient of X? | How does the ontology define the connection between ‘hasIngredient’ and ‘isIngredientOf’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasBase\nDescription: The property \"hasBase\" is both functional and inverse functional, ensuring that each Pizza has exactly one PizzaBase and each PizzaBase is associated with exactly one Pizza. Its domain is Pizza, and its range is PizzaBase, indicating it links pizzas to their bases. \"hasBase\" is a sub-property of \"hasIngredient,\" specifying it as a specialized form of ingredient relationship. It has an inverse property \"isBaseOf,\" which links PizzaBase to Pizza.\nAxiom: {'characteristics': ['Functional', 'InverseFunctional'], 'domain': ['Pizza'], 'range': ['PizzaBase'], 'subPropertyOf': ['hasIngredient'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the object properties ‘hasBase’ and ‘isBaseOf’ connected in terms of inverse relations within the ontology? | If entity A hasBase entity B, does the ontology entail that entity B isBaseOf entity A? | Which object property is defined as the inverse of ‘isBaseOf’ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasTopping\nDescription: The property \"hasTopping\" is an inverse functional object property, meaning each pizza topping can be associated with at most one pizza via this property. Its domain is restricted to Pizza, and its range is PizzaTopping. \"hasTopping\" is a sub-property of \"hasIngredient\" and has \"isToppingOf\" as its inverse property. Note that \"hasTopping\" is inverse functional because \"isToppingOf\" is functional.\nAxiom: {'characteristics': ['InverseFunctional'], 'domain': ['Pizza'], 'range': ['PizzaTopping'], 'subPropertyOf': ['hasIngredient'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties ‘hasTopping’ and ‘isToppingOf’ related in terms of logical inverses in the ontology? | If item A hasTopping item B, does the ontology entail that item B isToppingOf item A? | Which property functions as the inverse of ‘hasTopping’ in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isBaseOf\nDescription: The property \"isBaseOf\" is both functional and inverse functional, meaning each PizzaBase is the base of at most one Pizza, and each Pizza has at most one PizzaBase. Its domain is restricted to PizzaBase, and its range is Pizza. \"isBaseOf\" is a sub-property of \"isIngredientOf\" and has \"hasBase\" as its inverse property. This property is used to relate a PizzaBase to the Pizza for which it serves as the base.\nAxiom: {'characteristics': ['Functional', 'InverseFunctional'], 'domain': ['PizzaBase'], 'range': ['Pizza'], 'subPropertyOf': ['isIngredientOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Which property is formally specified as the inverse of ‘isBaseOf’ in the ontology? | If entity A isBaseOf entity B, does the ontology entail that B hasBase A? | How does the ontology define the logical connection between ‘isBaseOf’ and ‘hasBase’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isIngredientOf\nDescription: The property \"isIngredientOf\" is a transitive property relating instances of Food to other instances of Food, designating that one food is an ingredient of another. Its domain and range are both restricted to the class Food. \"isIngredientOf\" is the inverse of \"hasIngredient\" and should mirror all subproperties and attributes associated with \"hasIngredient,\" as noted in its current description. No super-properties are specified.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['Food'], 'range': ['Food'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse relationship defined between 'isIngredientOf' and 'hasIngredient' in the ontology? | If entity X is an ingredient of entity Y, does the ontology assert that Y has ingredient X? | Which property functions as the inverse for 'isIngredientOf' within this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasCountryOfOrigin\nDescription: The property \"hasCountryOfOrigin\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property, nor does it have an inverse property. Typically, \"hasCountryOfOrigin\" is intended to relate entities to their country of origin, but no further restrictions or definitions are enforced by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'hasCountryOfOrigin' does not have a specified domain? | What types of subjects are allowed for the property 'hasCountryOfOrigin'? | Is it correct that 'hasCountryOfOrigin' does not have a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Instant\nDescription: time:Instant is a subclass of time:TemporalEntity, representing a specific point in time without duration. It is explicitly disjoint with time:ProperInterval, meaning no individual can be both a time:Instant and a time:ProperInterval. This enforces a clear ontological distinction between an instantaneous temporal entity and a temporal interval with measurable duration.\nAxiom: {'subClassOf': ['time:TemporalEntity'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology specify the mutual exclusivity between time:Instant and time:ProperInterval? | Is any entity allowed to be typed as both time:Instant and time:ProperInterval simultaneously? | Which classes are declared as disjoint with time:Instant within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DateTimeInterval\nDescription: time:DateTimeInterval is defined as a subclass of time:ProperInterval. This means every DateTimeInterval is a specific type of ProperInterval, representing a continuous interval of time with explicitly defined start and end date-time values. The class is intended for use where temporal intervals need to be precisely bounded using date and time information.\nAxiom: {'subClassOf': ['time:ProperInterval']}\nGenerated CQs:", "output": "Is time:DateTimeInterval categorized under time:ProperInterval? | What kinds of intervals are classified as time:ProperInterval, considering time:DateTimeInterval? | Which broader interval types does time:DateTimeInterval fall into? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Interval\nDescription: time:Interval is defined as a subclass of time:TemporalEntity, signifying that it represents a specific type of temporal entity. Instances of time:Interval describe durations or spans of time, distinct from other temporal entities such as instants, emphasizing an interval’s extension across a portion of the temporal dimension.\nAxiom: {'subClassOf': ['time:TemporalEntity']}\nGenerated CQs:", "output": "To which higher-level temporal categories does time:Interval directly relate? | Is every time:Interval encompassed within the broader class of time:TemporalEntity? | Which specific entities are classified under time:TemporalEntity, such as time:Interval? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:ProperInterval\nDescription: time:ProperInterval is defined as a subclass of time:Interval. This means every instance of time:ProperInterval is also an instance of time:Interval, inheriting all its properties. Proper intervals represent temporal intervals with distinct start and end points (i.e., the start and end times are different), distinguishing them from instantaneous time points or degenerate intervals where start equals end.\nAxiom: {'subClassOf': ['time:Interval']}\nGenerated CQs:", "output": "Is time:Interval a broader category encompassing time:ProperInterval? | What other subclasses exist under time:Interval besides time:ProperInterval? | To which upper-level classifications does time:ProperInterval belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DayOfWeek\nDescription: time:DayOfWeek is defined as a class equivalent to the set containing time:Monday, time:Tuesday, time:Wednesday, time:Thursday, time:Friday, time:Saturday, and time:Sunday. This means that any individual of time:DayOfWeek must be exactly one of these seven days, formally capturing the conventional enumeration of days in a week.\nAxiom: {'equivalentClass': ['{time:Wednesday, time:Friday, time:Saturday, time:Tuesday, time:Monday, time:Sunday, time:Thursday}']}\nGenerated CQs:", "output": "Is DayOfWeek identical to the set containing Wednesday, Friday, Saturday, Tuesday, Monday, Sunday, and Thursday? | Is each member of the set {Wednesday, Friday, Saturday, Tuesday, Monday, Sunday, Thursday} necessarily an instance of DayOfWeek? | Are there any classes included in DayOfWeek apart from the specified days: Wednesday, Friday, Saturday, Tuesday, Monday, Sunday, and Thursday? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:TemporalUnit\nDescription: time:TemporalUnit is a class that is defined as being equivalent to the set containing time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, and time:unitWeek. This means that any individual that is an instance of any of these specific temporal units (such as month, minute, day, hour, year, second, or week) is also an instance of time:TemporalUnit, and vice versa. The class thus serves as a grouping for the major standard units used to measure time.\nAxiom: {'equivalentClass': ['{time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, time:unitWeek}']}\nGenerated CQs:", "output": "Is every time:TemporalUnit necessarily one of time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, or time:unitWeek? | Does time:TemporalUnit exclude any temporal concept other than the specified units (month, minute, day, hour, year, second, week)? | Is time:TemporalUnit logically equivalent to the union of time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, and time:unitWeek? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:TemporalEntity\nDescription: time:TemporalEntity is defined as a class equivalent to either time:Instant or time:Interval. This means any instance of time:TemporalEntity must be either an instant (representing a single point in time) or an interval (representing a duration between two points in time). This equivalence captures the generality of temporal entities, encompassing both points and periods within a temporal framework.\nAxiom: {'equivalentClass': ['(time:Instant and time:Interval)']}\nGenerated CQs:", "output": "Is time:TemporalEntity defined as the union of time:Instant and time:Interval? | Are all instances of time:TemporalEntity necessarily either a time:Instant or a time:Interval? | Does time:TemporalEntity include any instance that is not a time:Instant or a time:Interval? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:January\nDescription: time:January is defined as a class whose members have the month property with the value \"01\" and the unit type property with the value time:unitMonth. This ensures that any instance of time:January specifically represents the calendar month of January, consistently characterized by being of unit type month.\nAxiom: {'subClassOf': ['time:DateTimeDescription'], 'propertyRestrictions': ['[time:month hasValue --01]', '[time:unitType hasValue time:unitMonth]']}\nGenerated CQs:", "output": "Is time:January included as a specific instance within the broader class of time:DateTimeDescription? | Which subclasses fall under time:DateTimeDescription, and does this include time:January? | To which higher-level time classification does time:January belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Year\nDescription: time:Year is defined as a class whose instances have exactly one value for the property time:years, and exactly zero values for the properties time:months, time:weeks, time:days, time:hours, time:minutes, and time:seconds. This ensures that any individual of this class represents a duration or quantity consisting strictly of one year, with no additional smaller time units included.\nAxiom: {'subClassOf': ['time:DurationDescription'], 'propertyRestrictions': ['[time:years exactly 1]', '[time:months exactly 0]', '[time:hours exactly 0]', '[time:weeks exactly 0]', '[time:seconds exactly 0]', '[time:days exactly 0]', '[time:minutes exactly 0]']}\nGenerated CQs:", "output": "Is time:DurationDescription a more general category that includes time:Year? | What are the subclasses characterized under time:DurationDescription, such as time:Year? | Which broader classes does time:Year inherit properties from in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DateTimeDescription\nDescription: time:DateTimeDescription is a class characterized by a set of temporal property restrictions, where each instance can have at most one value for properties such as week, dayOfWeek, minute, day, month, timeZone, hour, year, and dayOfYear, ensuring singular temporal specification for these components. Additionally, every instance must have exactly one value for unitType, enforcing a precise definition of the temporal unit being described. This class is designed to represent detailed, unambiguous descriptions of specific date and time elements.\nAxiom: {'propertyRestrictions': ['[time:week max 1]', '[time:dayOfWeek max 1]', '[time:minute max 1]', '[time:day max 1]', '[time:month max 1]', '[time:timeZone max 1]', '[time:hour max 1]', '[time:unitType exactly 1]', '[time:year max 1]', '[time:dayOfYear max 1]', '[time:second max 1]']}\nGenerated CQs:", "output": "Is there a restriction that a time:DateTimeDescription can have at most one value for the property time:second? | Does a time:DateTimeDescription ever include more than one time:second property? | Is it possible for a time:DateTimeDescription to refer to multiple seconds values simultaneously? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DurationDescription\nDescription: time:DurationDescription is a class characterized by specifying temporal durations, with property restrictions enforcing that at most one value can be associated with each of the following properties: time:hours, time:minutes, time:seconds, time:days, time:weeks, and time:years. This ensures that any instance of time:DurationDescription can include, for each temporal unit, no more than a single value, supporting unambiguous and clearly defined durations.\nAxiom: {'propertyRestrictions': ['[time:hours max 1]', '[time:seconds max 1]', '[time:weeks max 1]', '[time:days max 1]', '[time:years max 1]', '[time:minutes max 1]', '[time:months max 1]']}\nGenerated CQs:", "output": "Is it required that a DurationDescription has at most one value for the 'months' property? | Can a DurationDescription be associated with more than one 'months' property value? | Does the ontology restrict DurationDescription entities to a single 'months' property assignment? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalOverlappedBy\nDescription: The property \"time:intervalOverlappedBy\" has no explicitly defined domain, range, characteristics, or super-properties. It is specified as the inverse of \"time:intervalOverlaps\", indicating that if one interval is overlapped by another, the second interval overlaps the first. No further restrictions or features are defined for this property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse property of ‘intervalOverlappedBy’ in the ontology? | If interval A is overlapped by interval B, does it follow that interval B overlaps interval A according to the defined properties? | How are the properties ‘intervalOverlappedBy’ and ‘intervalOverlaps’ connected in terms of inverse relationships? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalAfter\nDescription: The property \"time:intervalAfter\" has no explicitly defined characteristics, domain, or range restrictions. It does not have any super-properties. Its inverse property is \"time:intervalBefore,\" indicating that if one interval is after another, the second is before the first. This property is used to relate temporal intervals where one occurs after the other.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the ontological relationship established between 'intervalAfter' and 'intervalBefore'? | If interval A occurs after interval B, must interval B occur before interval A? | Which property is defined as the inverse of 'intervalAfter' in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalOverlaps\nDescription: The property \"time:intervalOverlaps\" relates two individuals, both of which must be instances of time:ProperInterval. It has no explicitly defined characteristics, no super-properties, and no specified inverse property. This property is used to indicate that two proper time intervals overlap with each other in time.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalOverlaps' relate to anything other than a ProperInterval as its object? | Is there any ProperInterval that cannot be used as the range for the property 'intervalOverlaps'? | What types of entities can appear as the range for the property 'intervalOverlaps'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalFinishedBy\nDescription: The property \"time:intervalFinishedBy\" has no explicitly defined characteristics, domain, or range restrictions, and is not declared as a sub-property of any other property. It is specified as the inverse of \"time:intervalFinishes,\" indicating a reciprocal relationship between temporal intervals where one interval is finished by another. No additional description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the logical connection between 'intervalFinishedBy' and 'intervalFinishes' in the ontology? | If time interval A is related to interval B using 'intervalFinishedBy', does this entail that B is related to A via 'intervalFinishes'? | Which property is defined as the inverse of 'intervalFinishedBy' in the time ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalMetBy\nDescription: The property \"time:intervalMetBy\" has no explicitly defined characteristics, domain, or range restrictions, and does not have any super-properties. It is specified as the inverse of \"time:intervalMeets,\" indicating a temporal relation where one interval is met by another. No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the ontological connection between the properties ‘intervalMetBy’ and ‘intervalMeets’? | If an interval A is met by interval B, does this entail that B meets A according to the ontology? | Which property is defined as the inverse of ‘intervalMetBy’ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalContains\nDescription: The property \"time:intervalContains\" has no explicitly defined domain, range, or characteristics. It specifies an inverse property relationship with \"time:intervalDuring,\" indicating that if one time interval contains another, the latter occurs within the bounds of the former. No super-properties are defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "How does the ontology represent the connection between 'intervalContains' and 'intervalDuring' properties? | If a time interval A contains time interval B, does the ontology entail that B occurs during A? | Which property is identified as the inverse of 'intervalContains' in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasBeginning\nDescription: The property \"time:hasBeginning\" links instances of time:TemporalEntity to a time:Instant that marks their starting point. It has no specified characteristics or super-properties, and it does not have an inverse property. The domain is time:TemporalEntity and the range is time:Instant, indicating its use for specifying the beginning instant of a temporal entity.\nAxiom: {'characteristics': [], 'domain': ['time:TemporalEntity'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:hasBeginning' have an object that is not a time:Instant? | Is every entity used as the range of 'time:hasBeginning' required to be a time:Instant? | What types of values are permitted as the object of the 'time:hasBeginning' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:dayOfWeek\nDescription: The property \"time:dayOfWeek\" has no explicitly defined characteristics or super-properties. Its domain is \"time:DateTimeDescription,\" meaning it is used with instances describing date and time. Its range is \"time:DayOfWeek,\" indicating the value should be a day of the week. No inverse property is specified. This property associates a DateTime description with the specific day of the week it represents.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:DayOfWeek'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for a property like 'dayOfWeek' to have a domain other than DateTimeDescription? | Must all instances associated with 'dayOfWeek' be types of DateTimeDescription? | Which kinds of entities are permitted as the domain for 'dayOfWeek'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:year\nDescription: The property \"time:year\" links instances of time:DateTimeDescription to values of type xsd:gYear, representing a specific year. It does not have additional property characteristics, super-properties, or an inverse property defined.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'time:year' accept values other than those of type xsd:gYear as its range? | Are all values associated with 'time:year' required to be instances of xsd:gYear? | What possible data types can be used as the range for the property 'time:year'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:days\nDescription: The property \"time:days\" has no declared characteristics or super-properties. Its domain is restricted to instances of \"time:DurationDescription,\" and its range is specified as \"xsd:decimal.\" This property is used to indicate the number of days, represented as a decimal value, associated with a given duration description. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:days' be applied to any subject other than an instance of time:DurationDescription? | What entities are allowed as subjects when using the property 'time:days'? | Is it possible for something that is not a time:DurationDescription to have a 'time:days' value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalMeets\nDescription: The property \"time:intervalMeets\" relates two individuals of type time:ProperInterval, indicating that one time interval immediately precedes another without overlapping. It has no defined characteristics, super-properties, or inverse property. Its domain and range are both restricted to time:ProperInterval.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:intervalMeets' relate any subject other than a time:ProperInterval? | Are all instances using 'time:intervalMeets' as a subject required to be of type time:ProperInterval? | Which classes are permitted as the domain for the 'time:intervalMeets' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:week\nDescription: The property \"time:week\" relates an instance of \"time:DateTimeDescription\" to a non-negative integer value, representing the week component of a date-time description. It has no defined characteristics, super-properties, or inverse properties. The property ensures that the week is expressed as a non-negative integer, but otherwise imposes no additional restrictions.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'week' be associated with any object other than a nonNegativeInteger as its value? | Is it correct that the only possible range for 'week' is xsd:nonNegativeInteger, or can other datatypes be used? | What types of values are permissible as the range of the property 'week'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:after\nDescription: The property \"time:after\" has no explicitly defined characteristics, domain, or range restrictions, and does not have any super-properties. It is specified as the inverse of the property \"time:before,\" indicating that if one entity is related to another via \"time:after,\" the second entity is related to the first via \"time:before.\" No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse property of 'time:after' in the ontology? | If entity A is related to entity B through 'time:after', does the ontology entail that B is related to A through 'time:before'? | How do the properties 'time:after' and 'time:before' correspond as logical inverses in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:before\nDescription: The property \"time:before\" is a transitive property used to relate two instances of time:TemporalEntity, indicating that one temporal entity occurs before another. It has both its domain and range restricted to time:TemporalEntity. No super-properties or inverse properties are specified.\nAxiom: {'characteristics': ['Transitive'], 'domain': [], 'range': ['time:TemporalEntity'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:before' be used with subjects that are not instances of 'time:TemporalEntity'? | Are there any 'time:TemporalEntity' instances that cannot participate as domains in the 'time:before' relationship? | What types of entities are permissible as the domain for the property 'time:before'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalStartedBy\nDescription: The property \"time:intervalStartedBy\" has no explicitly defined characteristics, domain, or range restrictions, and is not a sub-property of any other property. It is specified as the inverse of \"time:intervalStarts,\" indicating that if an interval is started by another, then the latter starts the former. No additional constraints or relationships are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse relationship specified between the properties ‘intervalStartedBy’ and ‘intervalStarts’ in the ontology? | Does the assertion that interval A intervalStartedBy interval B entail that interval B intervalStarts interval A? | Which property functions as the inverse of ‘intervalStartedBy’ according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalFinishes\nDescription: The property \"time:intervalFinishes\" links two instances of time:ProperInterval, indicating that the subject interval finishes at the endpoint of the object interval but does not necessarily start at the same time. It has no additional characteristics, super-properties, or inverse properties defined. Both its domain and range are restricted to time:ProperInterval.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned to 'intervalFinishes' necessarily a ProperInterval? | Can 'intervalFinishes' associate with any object that is not a ProperInterval as its value? | What entities are permitted as the range of the property 'intervalFinishes'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:day\nDescription: The property \"time:day\" relates an instance of time:DateTimeDescription to a value of type xsd:gDay, representing the day component of a date. It has no specified characteristics, super-properties, or inverse properties.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned to the property 'time:day' necessarily of type xsd:gDay? | Can 'time:day' ever be associated with an object outside the range xsd:gDay? | What types of values are permitted as the range of the property 'time:day'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:weeks\nDescription: The property \"time:weeks\" has no specified domain or super-properties and does not possess special characteristics or an inverse property. Its range is restricted to decimal values (xsd:decimal), indicating that it represents a quantity measured in weeks.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:weeks' be associated with entities other than 'time:DurationDescription' as its subject? | Is there any 'time:DurationDescription' that does not use the property 'time:weeks'? | What types of entities may serve as the domain for the property 'time:weeks'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:minutes\nDescription: The property \"time:minutes\" has no specified characteristics or super-properties. Its domain is restricted to instances of \"time:DurationDescription\", indicating that it is used to associate a duration description with a value representing minutes. No explicit range or inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can values for 'time:minutes' only be of type xsd:decimal? | Is every range value for 'time:minutes' constrained exclusively to xsd:decimal? | What possible datatypes can serve as the range for the property 'time:minutes'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:seconds\nDescription: The property \"time:seconds\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is restricted to values of type xsd:decimal, indicating that it is intended to represent decimal values for seconds.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:seconds' have a subject other than a time:DurationDescription? | Is there any time:DurationDescription that cannot be associated with 'time:seconds'? | What types of entities can be the domain for the property 'time:seconds'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:xsdDateTime\nDescription: The property \"time:xsdDateTime\" has no explicitly defined characteristics or super-properties and does not specify an inverse property. Its domain is restricted to \"time:DateTimeInterval\", indicating it is used to associate instances of \"time:DateTimeInterval\" with values, likely of dateTime type, though no explicit range is set.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeInterval'], 'range': ['xsd:dateTime'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned via the property 'time:xsdDateTime' necessarily of type xsd:dateTime? | Can 'time:xsdDateTime' have a range different from xsd:dateTime? | What data types are permissible as the range for the property 'time:xsdDateTime'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:unitType\nDescription: The property \"time:unitType\" has no specified characteristics or super-properties. Its domain is restricted to instances of \"time:DateTimeDescription\", indicating it is used to associate a date-time description with some unit type. No range, inverse property, or additional axioms are defined.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['time:TemporalUnit'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'unitType' be used with any value other than instances of 'TemporalUnit'? | Is every object of the 'unitType' property required to be a 'TemporalUnit'? | What classes can appear as the range for the 'unitType' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:month\nDescription: The property \"time:month\" has no defined domain, characteristics, super-properties, or inverse properties. Its range is restricted to values of the datatype xsd:gMonth, indicating that it is used to associate an entity with a specific month, represented in the XML Schema gMonth format.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:gMonth'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any entity other than time:DateTimeDescription that can be the subject of the property time:month? | Are all objects used with the property time:month required to represent months? | What types of entities can act as the domain for the property time:month? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:timeZone\nDescription: The property \"time:timeZone\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"time:DateTimeDescription\". No explicit range is specified. This property is used to associate a \"DateTimeDescription\" with its corresponding time zone.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['tzont:TimeZone'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned using the property 'time:timeZone' required to be a tzont:TimeZone? | Can the property 'time:timeZone' reference any class other than tzont:TimeZone as its range? | What entities are permitted to serve as the range for the property 'time:timeZone'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hour\nDescription: The property \"time:hour\" has no specified characteristics, domain, or super-properties. Its range is restricted to non-negative integers (xsd:nonNegativeInteger), representing an hour value. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:hour' be used with subjects other than time:DateTimeDescription? | What entities are permitted as the domain for the property 'time:hour'? | Is there any instance of time:DateTimeDescription that cannot be associated with the property 'time:hour'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasEnd\nDescription: The property \"time:hasEnd\" has no specified characteristics or super-properties. Its domain is restricted to instances of \"time:TemporalEntity,\" indicating that it relates a temporal entity to some unspecified value representing its end. No explicit range, inverse property, or additional characteristics are defined.\nAxiom: {'characteristics': [], 'domain': ['time:TemporalEntity'], 'range': ['time:Instant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it necessary for every value associated with the property 'time:hasEnd' to be a time:Instant? | Can entities other than time:Instant appear as the range of the property 'time:hasEnd'? | What types of entities are permitted as the range for 'time:hasEnd'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalDuring\nDescription: The property \"time:intervalDuring\" does not specify any domain, characteristics, super-properties, or inverse properties. Its range is restricted to instances of \"time:ProperInterval,\" indicating it is used to relate a subject to a temporal interval that is a proper interval.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalDuring' be used with subjects other than ProperInterval? | What types of entities are permissible as the subject for the property 'intervalDuring'? | Are there any entities classified as ProperInterval that cannot be the subject of 'intervalDuring'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inDateTime\nDescription: The property \"time:inDateTime\" has no explicitly defined characteristics or range restrictions. Its domain is specified as time:Instant, indicating that it is intended to relate instances of time:Instant to other entities. There are no super-properties or inverse properties defined for this property.\nAxiom: {'characteristics': [], 'domain': ['time:Instant'], 'range': ['time:DateTimeDescription'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'time:inDateTime' accept any range other than 'time:DateTimeDescription'? | Is every value associated with 'time:inDateTime' required to be a 'time:DateTimeDescription'? | What entities can serve as the range for the property 'time:inDateTime'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:dayOfYear\nDescription: The property \"time:dayOfYear\" has no declared characteristics or inverse properties. It is used with subjects of type \"time:DateTimeDescription\" but does not specify a range. This property typically relates a date-time description to its corresponding day of the year. No super-properties are specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'dayOfYear' have values that are not nonNegativeIntegers? | What types of values are permitted as the range for 'dayOfYear'? | Is every object associated with 'dayOfYear' required to be a nonNegativeInteger? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hours\nDescription: The property \"time:hours\" has no explicitly defined characteristics or super-properties. Its domain is restricted to instances of \"time:DurationDescription\", indicating it is used to associate duration descriptions with a value describing hours. No range, inverse property, or additional constraints are specified.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:hours' have a range other than xsd:decimal? | Are all values assigned via 'time:hours' required to be decimals? | Which datatypes are permissible as the range for the property 'time:hours'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDateTimeDescription\nDescription: The property \"time:hasDateTimeDescription\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is restricted to instances of \"time:DateTimeDescription\", indicating its use to associate entities with a date-time description.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeInterval'], 'range': ['time:DateTimeDescription'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'hasDateTimeDescription' be associated with any subject other than a DateTimeInterval? | Is it possible for an object linked via 'hasDateTimeDescription' not to conform to a DateTimeDescription? | What entities are permitted to serve as the domain for the 'hasDateTimeDescription' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:second\nDescription: The property \"time:second\" has no specified characteristics, domain, super-properties, or inverse property. Its range is restricted to values of type xsd:decimal, indicating that it is intended to relate entities to decimal values representing seconds.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'time:second' be used with any class other than 'time:DateTimeDescription' as its subject? | Which classes are permitted as subjects for the 'time:second' property? | Are all subjects of the 'time:second' property necessarily instances of 'time:DateTimeDescription'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:minute\nDescription: The property \"time:minute\" has no explicitly defined characteristics, sub-properties, or inverse properties. Its domain is restricted to instances of \"time:DateTimeDescription,\" indicating it is used to relate a DateTimeDescription to a value representing the minute. No range constraint is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any value other than a nonNegativeInteger that can be used as the range of 'time:minute'? | Are all objects associated with the property 'time:minute' necessarily nonNegativeIntegers? | What types of values are permitted as the range for the property 'time:minute'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDurationDescription\nDescription: The property \"time:hasDurationDescription\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is specified as \"time:DurationDescription,\" indicating that it is used to associate an entity with a description of duration.\nAxiom: {'characteristics': [], 'domain': ['time:TemporalEntity'], 'range': ['time:DurationDescription'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is the property 'time:hasDurationDescription' ever used with a subject that is not a time:TemporalEntity? | What entities may serve as the domain for 'time:hasDurationDescription'? | Can an individual with the type time:TemporalEntity always be described using the 'time:hasDurationDescription' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalStarts\nDescription: The property \"time:intervalStarts\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is restricted to instances of \"time:ProperInterval,\" indicating that it is intended to relate an entity to a proper time interval that is being started.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalStarts' be used with subjects other than ProperInterval? | Is there any ProperInterval that cannot be associated with the property 'intervalStarts'? | What types of entities may serve as the domain for the 'intervalStarts' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalBefore\nDescription: The property \"time:intervalBefore\" has no explicitly defined characteristics or super-properties. Its domain and range are both restricted to \"time:ProperInterval\", indicating that it relates one proper time interval to another such that the first interval occurs strictly before the second. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': ['time:before'], 'inverseOf': []}\nGenerated CQs:", "output": "Which properties are defined as subproperties of time:before within the ontology? | Is every occurrence of the time:intervalBefore property also valid as an occurrence of time:before? | What is the hierarchical relationship between time:intervalBefore and time:before according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inXSDDateTime\nDescription: The property \"time:inXSDDateTime\" has no explicitly defined characteristics, domain restrictions, super-properties, or inverse properties. Its range is restricted to values of the datatype xsd:dateTime, indicating that it relates a subject to a specific date and time in XML Schema dateTime format.\nAxiom: {'characteristics': [], 'domain': ['time:Instant'], 'range': ['xsd:dateTime'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'time:inXSDDateTime' have a subject that is not a 'time:Instant'? | Are all instances related through 'time:inXSDDateTime' necessarily 'time:Instant'? | What are the possible domains for the property 'time:inXSDDateTime'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inside\nDescription: The property \"time:inside\" has a domain restricted to instances of time:Interval, indicating it is used to relate time intervals to other entities. There are no explicitly defined range, characteristics, super-properties, or inverse property specified.\nAxiom: {'characteristics': [], 'domain': ['time:Interval'], 'range': ['time:Instant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'inside' be used with values other than 'Instant'? | Is every value used with the property 'inside' required to be a 'time:Instant'? | What kinds of entities are allowed to appear as the range when using the 'inside' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:months\nDescription: The property \"time:months\" has a domain restriction to \"time:DurationDescription,\" meaning it is used with instances describing durations. No explicit range, characteristics, super-properties, or inverse properties are specified. This property likely relates duration descriptions to month-related values or entities.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'time:months' have any range other than xsd:decimal? | Are all values used with the property 'time:months' required to be of type xsd:decimal? | What data types are permitted as values for the property 'time:months'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalEquals\nDescription: The property \"time:intervalEquals\" has no explicit domain, super-properties, or inverse properties, and is not characterized by specific logical traits such as transitivity or symmetry. Its range is restricted to instances of \"time:ProperInterval,\" indicating that it is used to relate entities to proper time intervals.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'intervalEquals' be used with subjects that are not instances of 'ProperInterval'? | Are all values associated with the property 'intervalEquals' required to be of a specific type or class? | What types of entities can serve as the domain for the property 'intervalEquals'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:years\nDescription: The property \"time:years\" has no explicitly defined characteristics, domain restrictions, super-properties, or inverse properties. Its range is specified as xsd:decimal, indicating that the property relates subjects to decimal values representing a quantity of years.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'time:years' be used with entities that are not instances of 'time:DurationDescription'? | Is 'time:DurationDescription' the only possible domain for the property 'time:years'? | What types of objects are allowed as the subject when using the property 'time:years'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalObject\nDescription: PhysicalObject is defined as a subclass of PhysicalEndurant, indicating that it inherits all characteristics of entities that persist through time while maintaining their identity. It is explicitly disjoint with Stuff, which means no individual can simultaneously be both a PhysicalObject and Stuff. This class represents discrete, countable entities as opposed to unstructured or undifferentiated substances.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology characterize the distinction between PhysicalObject and Stuff? | Is there any entity that can simultaneously be classified as both PhysicalObject and Stuff? | Which classes are specified as mutually exclusive with Stuff within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MixedStuff\nDescription: MixedStuff is defined as a subclass of Stuff, with the additional restriction that any instance must have at least two component parts, each of which is itself an instance of Stuff (expressed as having at least two 'hasPartStuff' relations to Stuff). MixedStuff is explicitly disjoint with PureStuff, ensuring no overlap between mixtures and pure substances.\n\nConceptually, MixedStuff captures the essence of mixtures as materials composed of variable proportions of distinct, observable components that can be physically separated. The classification is based on the nature and roles of the components, explicitly excluding cases such as different phases of the same substance (e.g., ice in water), which remain PureStuff. Colloids are considered MixedStuff only when composed of different kinds of Stuff, maintaining the requirement for distinct observable constituents.\nAxiom: {'subClassOf': ['Stuff', '(Stuff and [hasPartStuff min 2 Stuff])'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology define the distinction between MixedStuff and PureStuff? | Is there any instance that can belong to both MixedStuff and PureStuff? | Which classes are logically incompatible with PureStuff according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ContinuousMedium\nDescription: ContinuousMedium is defined as a subclass of StuffRole and is also known as dispersion medium. It is explicitly disjoint with DispersedPhase, ensuring that no individual can simultaneously belong to both classes. Members of ContinuousMedium are characterized by having a colloidFormingRelation to at least one DispersedPhase, reflecting their essential role in colloidal systems as the medium in which dispersed phases are distributed.\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': [], 'propertyRestrictions': ['[colloidFormingRelation some DispersedPhase]']}\nGenerated CQs:", "output": "What logical separation is defined between ContinuousMedium and DispersedPhase within the ontology? | Can an entity simultaneously be classified as both ContinuousMedium and DispersedPhase? | Which classes are explicitly stated as mutually exclusive with DispersedPhase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solute\nDescription: Solute is defined as a subclass of StuffRole and is explicitly disjoint from Solvent, ensuring that no entity can simultaneously be both a Solute and a Solvent. Formally, every Solute is related through the inverse of solutionFormingRelation to some Solvent, indicating its essential role in solution formation. Conceptually, a Solute is a substance that is dissolved in another substance (the Solvent).\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': [], 'propertyRestrictions': ['[inverseOf solutionFormingRelation some Solvent]']}\nGenerated CQs:", "output": "What is the formal distinction between Solute and Solvent in the ontology? | Is there any entity that can belong to both the Solute and Solvent classes? | Which entities or classes are explicitly specified as disjoint with Solute? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HeterogeneousMixture\nDescription: HeterogeneousMixture is a subclass of MixedStuff, formally disjoint from HomogeneousMixture, meaning no mixture can be both heterogeneous and homogeneous simultaneously. Members of this class are defined by having at least two different granule types (each being a Molecule or MultiMoleculeParticle) and consisting of a minimum of two distinct parts, each being either MixedStuff or PureStuff. Additionally, every HeterogeneousMixture exhibits exactly one instance of UnevenDistribution, ensuring that its components are not distributed uniformly. As described, a HeterogeneousMixture is a combination of different substances, often with visibly different particle sizes, which do not react chemically and can be separated by physical means (such as filtration). Unlike a homogeneous mixture, any portion of a heterogeneous mixture may differ in composition from the whole, unless special care is taken in selecting the portion.\nAxiom: {'subClassOf': ['MixedStuff'], 'disjointWith': [], 'propertyRestrictions': ['[hasGranuleType min 2 (Molecule or MultiMoleculeParticle)]', '[hasPartStuff min 2 (MixedStuff or PureStuff)]', '[hasStuffDistribution exactly 1 UnevenDistribution]']}\nGenerated CQs:", "output": "How are HeterogeneousMixture and HomogeneousMixture differentiated within the ontology? | Is any mixture classified as both HeterogeneousMixture and HomogeneousMixture simultaneously? | Which mixture types are specified as disjoint with HomogeneousMixture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalEndurant\nDescription: PhysicalEndurant is a subclass of Endurant, representing entities that persist through time while maintaining their identity. It is explicitly disjoint with Role, meaning no instance can simultaneously be a PhysicalEndurant and a Role. Additionally, PhysicalEndurant is equivalent to om-1:Phenomenon, indicating that these two classes share the exact same set of individuals. This class is used to capture enduring phenomena in ontological modeling, distinct from roles that entities might play.\nAxiom: {'subClassOf': ['Endurant'], 'disjointWith': [], 'equivalentClass': ['om-1:Phenomenon']}\nGenerated CQs:", "output": "What ontological separation is established between PhysicalEndurant and Role? | Is any entity allowed to be classified as both PhysicalEndurant and Role simultaneously? | Which classes are defined as mutually exclusive with Role in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StructuredPureStuff\nDescription: StructuredPureStuff is defined as a subclass of PureStuff and is disjoint with UnstructuredPureStuff, ensuring that no individual can be both StructuredPureStuff and UnstructuredPureStuff. Formally, StructuredPureStuff is equivalent to PureStuff that has granules exclusively of exactly one type of molecule. This class covers matter composed of a single molecular type (allowing for minor conformational variations or rare impurities), such as water (H₂O), table sugar, silica (SiO₂), or vitamin A. The synonym \"Compound\" applies here, reflecting the requirement that instances consist of precisely one molecular species, rather than just a single molecule.\nAxiom: {'subClassOf': ['PureStuff'], 'disjointWith': [], 'equivalentClass': ['(PureStuff and [hasGranuleType only Molecule] and [hasGranuleType exactly 1 Molecule])']}\nGenerated CQs:", "output": "How does the ontology define the connection between StructuredPureStuff and UnstructuredPureStuff? | Is there any instance classified under both StructuredPureStuff and UnstructuredPureStuff? | Which classes are stated as mutually exclusive with UnstructuredPureStuff? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Endurant\nDescription: Endurant is formally specified as a class disjoint with Perdurant, which ensures that no individual entity can be simultaneously classified as both an Endurant and a Perdurant. This distinction typically reflects the ontological separation between entities that persist wholly through time (Endurants, such as physical objects) and those that occur in or unfold over time (Perdurants, such as events or processes).\nAxiom: {'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology formally separate Endurant and Perdurant classes? | Is there any instance that can simultaneously be classified as both Endurant and Perdurant? | What other ontology classes are specified as disjoint with Perdurant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AbstractRegion\nDescription: AbstractRegion is defined as a subclass of Region. This indicates that every instance of AbstractRegion is also an instance of Region, inheriting all its characteristics. The class formalizes a conceptual or non-physical specialization of Region, but no additional constraints or distinctions are provided beyond its subsumption in the hierarchy.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "To what parent class does AbstractRegion pertain? | Is AbstractRegion encompassed within the wider class of Region? | Which subclasses fall under the class Region, including AbstractRegion? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalRegion\nDescription: PhysicalRegion is defined as a subclass of Region, indicating that every PhysicalRegion is, by definition, a type of Region. This formalization distinguishes PhysicalRegion as a specific conceptual or spatial area within the broader class of Region, with characteristics or properties that pertain to physical or tangible attributes.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "Which kinds of regions include PhysicalRegion as a specialized form? | What are the immediate superclasses of PhysicalRegion within the ontology? | Is PhysicalRegion classified as a specific type of Region? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: om-1:Quantity\nDescription: om-1:Quantity is defined as a subclass of Region. This means every om-1:Quantity is categorized within the broader class of Region, inheriting its general characteristics. No additional restrictions or differentiations are provided, so om-1:Quantity serves to represent a more specific concept or type of Region within the ontology.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "Which subclasses are defined under Region, such as om-1:Quantity? | Does om-1:Quantity fall under the general category of Region? | What higher-level concepts is om-1:Quantity classified as a member of? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmountOfStuff\nDescription: AmountOfStuff is defined as a subclass of PhysicalEndurant, representing entities that persist through time while maintaining their identity as physical particulars. According to the current description, it aligns with DOLCE's notion of \"amount of matter\" and applies exclusively to specific, individual entities (particulars) rather than universals or collections. This class captures the concept of a definite quantity of physical substance.\nAxiom: {'subClassOf': ['PhysicalEndurant']}\nGenerated CQs:", "output": "Which specific concepts are included as subclasses of PhysicalEndurant, such as AmountOfStuff? | Is AmountOfStuff classified under the broader category of PhysicalEndurant? | What are the higher-level categories to which AmountOfStuff is assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AssociationalColloid\nDescription: AssociationalColloid is defined as a subclass of Colloid. This class includes colloidal systems characterized by the association of amphiphilic molecules, such as hydrophobic/hydrophilic interactions. Typical examples are micellar colloids (e.g., soap solutions), where molecules form aggregates known as micelles. Properties specific to this class can include aggregation numbers—typically a range—reflecting the number of molecules per micelle, often determined by the critical micelle concentration.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "What are the parent categories for AssociationalColloid in the ontology? | Which types of Colloid include AssociationalColloid as a more specific instance? | Does AssociationalColloid fall under the broader category of Colloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DispersionColloid\nDescription: DispersionColloid is defined as a subclass of Colloid and represents the most common type among colloids, distinguishing it from other types within the Colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "What broader classes does DispersionColloid belong to? | Is DispersionColloid classified as a specific form of Colloid? | Which subclasses are encompassed by the concept of Colloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MolecularColloid\nDescription: MolecularColloid is defined as a subclass of Colloid, representing colloidal systems in which the constituent molecules are sufficiently large to exhibit the characteristic behaviors of particles with intermediate sizes, typical of other types of colloids. Examples include latex and other materials with large polymers, such as starchy substances. This classification emphasizes the particle size and molecular structure as distinguishing factors within the broader colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "Which specific subtypes of Colloid encompass MolecularColloid? | To what overarching categories does MolecularColloid pertain within the ontology? | Is MolecularColloid categorized under the broader class of Colloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Atom\nDescription: Atom is defined as a subclass of PhysicalObject, indicating that every atom is considered a physical entity within the ontology. This classification places atoms within the broader category of tangible objects, establishing their role as fundamental physical units that compose matter.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Does Atom fall under the category of PhysicalObject? | Which entities are more specific than PhysicalObject, such as Atom? | What broader classes does Atom belong to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ion\nDescription: Ion is defined as a subclass of PhysicalObject, meaning it represents a kind of physical entity. No further property restrictions, disjointness, or specific characteristics are asserted in the axioms, so the class encompasses any physical object identified as an ion—typically, an atom or molecule with a net electric charge due to the loss or gain of electrons.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Is an Ion classified as a type of PhysicalObject? | What overarching categories encompass Ion as a subordinate type? | Which entities are specified as subclasses under PhysicalObject, such as Ion? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MultiMoleculeParticle\nDescription: MultiMoleculeParticle is defined as a subclass of PhysicalObject, referring to a particle composed of multiple molecules, such as those found in suspensions or colloidal droplets (distinct from sub-atomic particles). This class is intended for cases where individual entities are aggregates of molecules, and, as noted in its annotation, is considered a pragmatic solution within the ontology structure rather than a rigorous chemical classification.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Does MultiMoleculeParticle fall under the broader class of PhysicalObject? | What are the more abstract categories to which MultiMoleculeParticle is assigned? | Which entities are categorized as types of PhysicalObject, specifically including MultiMoleculeParticle? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DispersedPhase\nDescription: DispersedPhase is defined as a subclass of StuffRole. It refers to the role played by a substance within the context of a colloidal system, specifically as the phase that is distributed throughout another phase (the ContinuousMedium). The relationship (colloidFormingRelation) exists between the DispersedPhase and the ContinuousMedium themselves, rather than their respective bearers (stuffs), emphasizing that simply combining the substance bearers does not suffice to form a colloid. Proper mixing is required to achieve a homogeneous colloidal mixture; the ability of a substance to serve as either dispersed phase or continuous medium depends on the specific system being formed.\nAxiom: {'subClassOf': ['StuffRole']}\nGenerated CQs:", "output": "Is DispersedPhase classified under the broader category of StuffRole? | Which roles are encompassed within StuffRole, including DispersedPhase? | What higher-level categories does DispersedPhase belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solvent\nDescription: Solvent is defined as a subclass of StuffRole. It represents a substance in which another substance, known as the solute, is dissolved. Solvents are essential participants in solution-forming relations, acting as the medium that enables solutes to dissolve and sometimes facilitating various chemical reactions during the dissolution process. This formalization emphasizes the role-based nature of solvents within chemical systems.\nAxiom: {'subClassOf': ['StuffRole']}\nGenerated CQs:", "output": "What are the more general roles associated with Solvent? | Is Solvent classified under the broader category of StuffRole? | Which roles are encompassed by StuffRole, including Solvent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Drop\nDescription: Drop is defined as a subclass of Piece, representing a specific type of piece, such as a drop of blood. This class serves as an example to illustrate a distinct, often small and discrete, portion or quantity of a substance.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "Is Drop categorized under the broader class of Piece? | Which subclasses fall under the category of Piece, with Drop included? | What broader classes include Drop within their hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lump\nDescription: Lump is defined as a subclass of Piece, representing a specific type of piece. The class is exemplified by instances such as a \"lump of clay,\" illustrating that a lump is considered a particular form or configuration of a piece. This class serves as an example of how the concept of \"piece\" can be specialized.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "Which entities are specified as subtypes under Piece, such as Lump? | Is Lump classified as a type of Piece? | What broader classes encompass Lump within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Slice\nDescription: Slice is defined as a subclass of Piece, representing a specific type of piece. As indicated in the example, a Slice could refer to a slice of bread, illustrating that this class captures instances where something is cut or divided into thin, flat portions.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "What overarching types does Slice inherit from within the hierarchy? | Which subtypes fall under the category of Piece, including Slice? | Is Slice categorized under the broader class of Piece? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EvenDistribution\nDescription: EvenDistribution is defined as a subclass of AbstractRegion. This indicates that every instance of EvenDistribution is a type of abstract region, but with additional implied properties that distinguish it from other abstract regions. No further property restrictions, equivalence, or disjointness axioms are specified. The class likely represents distributions characterized by some notion of \"evenness\" or uniformity, although the specifics are not constrained by the given axiom.\nAxiom: {'subClassOf': ['AbstractRegion']}\nGenerated CQs:", "output": "Is EvenDistribution classified as a type within AbstractRegion? | What broader classes does EvenDistribution hierarchically fall under? | Which entities are direct specializations of AbstractRegion, such as EvenDistribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnevenDistribution\nDescription: UnevenDistribution is defined as a subclass of AbstractRegion. This indicates that every instance of UnevenDistribution is a specific kind of AbstractRegion, likely representing regions or segments where distribution is not uniform. No additional constraints or properties are specified, so this class primarily serves to differentiate non-uniform or irregular distributions within the broader category of abstract regions.\nAxiom: {'subClassOf': ['AbstractRegion']}\nGenerated CQs:", "output": "What kinds of specialized regions are encompassed by AbstractRegion, specifically including UnevenDistribution? | Is UnevenDistribution classified under the broader group of AbstractRegion? | To which higher-level categories does UnevenDistribution pertain within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gas\nDescription: Gas is defined as a subclass of StuffState. This classification indicates that Gas represents a particular state or condition in which a substance (stuff) can exist. Any individual classified as Gas inherits the general properties of StuffState, marking it as a type of physical state distinct from other possible states (such as solid or liquid).\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "Which higher-level classes encompass Gas? | What entities are categorized more specifically than StuffState, including Gas? | Is Gas classified as a specific type within the broader StuffState category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Liquid\nDescription: liquid is defined as a subclass of StuffState, representing a specific physical state of matter. All instances of liquid must also be instances of StuffState, situating liquids within the broader classification of material states such as solid or gas. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "Which general categories in the ontology include Liquid as a member? | What other specific states are encompassed by StuffState besides Liquid? | Is Liquid classified under the broader category of StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solid\nDescription: Solid is defined as a subclass of StuffState, representing a particular state of matter. This class encompasses all entities that exist in the solid state, distinguishing them from other possible states such as liquid or gas. All instances of Solid inherit the characteristics of StuffState.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "Which specific states of stuff are categorized as subtypes of StuffState, such as Solid? | What are the general states that Solid is classified within? | Does Solid fall under the broader grouping of StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MicellarColloid\nDescription: MicellarColloid is defined as a subclass of AssociationalColloid. Although the formal axioms do not distinguish it further from AssociationalColloid, the usage of the term \"MicellarColloid\" reflects domain-specific terminology differences between food physics and colloid chemistry. Therefore, individuals of this class share all characteristics of AssociationalColloid, with differentiation rooted primarily in contextual nomenclature rather than ontological structure.\nAxiom: {'subClassOf': ['AssociationalColloid']}\nGenerated CQs:", "output": "What higher-level classes does MicellarColloid fall under within the ontology? | Which classes are specialized instances of AssociationalColloid, including MicellarColloid? | Is MicellarColloid classified under the broader group of AssociationalColloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Paste\nDescription: Paste is defined as a subclass of Suspension. It is characterized as a type of suspension with a reduced proportion of dispersion medium, in which the dispersed phase exhibits connectivity (i.e., the particles are linked or form a continuous structure). This differentiates pastes from other suspensions, where the dispersed phase may be unconnected and more freely suspended in the medium.\nAxiom: {'subClassOf': ['Suspension']}\nGenerated CQs:", "output": "What broader classifications is Paste associated with in the ontology? | Does Paste fall under the more general category of Suspension? | Which subclasses are encompassed by Suspension, specifically including Paste? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Role\nDescription: Role is defined as a subclass of Endurant, indicating that any individual classified as a Role is also necessarily an Endurant. This positions Role as an entity that persists through time while possibly undergoing changes. No further restrictions or disjointness conditions are specified for this class.\nAxiom: {'subClassOf': ['Endurant']}\nGenerated CQs:", "output": "Which entities are classified under Endurant, including Role? | Is Role a specialized type of Endurant? | What broader classes encompass Role within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Region\nDescription: Region is defined as a subclass of Abstract, indicating that it represents an abstract concept rather than a physical entity. This classification implies that instances of Region are used to denote conceptual or non-physical areas, rather than tangible, material locations.\nAxiom: {'subClassOf': ['Abstract']}\nGenerated CQs:", "output": "Which entities are defined as subclasses within Abstract, including Region? | Is Region a specific type classified under Abstract? | What broader categories encompass Region as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: om-1:Unit_of_measure\nDescription: om-1:Unit_of_measure is defined as a subclass of Abstract, indicating that it represents a conceptual or non-physical entity within the ontology. This class is intended to capture the abstract nature of measurement units used to quantify physical or abstract quantities, rather than representing tangible objects themselves.\nAxiom: {'subClassOf': ['Abstract']}\nGenerated CQs:", "output": "What higher-level classes does Unit_of_measure inherit from? | Which subclasses fall under the Abstract category, such as Unit_of_measure? | Is Unit_of_measure categorized under the broader class of Abstract? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: State\nDescription: State is defined as a subclass of Perdurant, indicating that it represents a temporally extended entity or occurrence. As a Perdurant, a State exists over a period of time, rather than as an instantaneous or static entity. No further restrictions or distinctions are specified in the current axioms.\nAxiom: {'subClassOf': ['Perdurant']}\nGenerated CQs:", "output": "Which concepts are classified as subtypes of Perdurant, including State? | Is State a specialized form of Perdurant? | To which general categories is State hierarchically related within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffState\nDescription: StuffState is defined as a subclass of State. It represents the general state in which a substance (or \"stuff\") exists, such as solid, liquid, or gas. While it is relevant for describing the phase of a specific material (e.g., water as ice, liquid, or vapor), the class also accommodates cases like colloids, where the states of mixed components are important. The focus of StuffState is on the state as a property of a substance in general, rather than on the particular state of an individual stuff. This provides a foundation for distinguishing and reasoning about the states of matter across different contexts, including mixtures and colloidal systems.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "Is StuffState categorized under the broader class of State? | Which subclasses fall under State, including StuffState? | What higher-level classes encompass StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Container\nDescription: Container is defined as a subclass of PhysicalEndurant, signifying that every container is a type of physical entity that persists through time while maintaining its identity. No additional property restrictions or distinguishing features are specified in the current axiom.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'propertyRestrictions': ['[inverseOf containedIn only (AmountOfStuff or PhysicalObject)]']}\nGenerated CQs:", "output": "Is every entity that contains a Container required to be either an AmountOfStuff or a PhysicalObject? | Can a Container be contained in something other than an AmountOfStuff or a PhysicalObject? | Does the property 'containedIn' for a Container necessarily exclude all classes except AmountOfStuff and PhysicalObject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Stuff\nDescription: Stuff is a class whose individuals are characterized by having only states of type StuffState via the hasState property, and each individual can have at most three such states. This ensures that every Stuff instance is related exclusively to StuffState instances, with an upper limit of three hasState relationships.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'propertyRestrictions': ['[hasState only StuffState]', '[hasState max 3 StuffState]']}\nGenerated CQs:", "output": "Is Stuff classified under the category of PhysicalEndurant? | What are the subclasses encompassed by PhysicalEndurant, including Stuff? | To which higher-level classes does Stuff belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Molecule\nDescription: Molecule is defined as a subclass of PhysicalObject. This indicates that every instance of Molecule is necessarily a physical object, inheriting all properties and constraints applicable to physical objects. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['PhysicalObject'], 'propertyRestrictions': ['[hasPart some Atom]']}\nGenerated CQs:", "output": "Is every molecule composed of at least one atom as a part? | Must a molecule necessarily possess the 'hasPart' relationship with an atom? | Can a molecule exist without having any atom as one of its parts? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bulk\nDescription: Bulk is defined as a subclass of Stuff, characterized by one of the following: it either possesses a granule type that is a Molecule or MultiMoleculeParticle, or it contains parts that are instances of Stuff. Additionally, all of its granule types (if any) are restricted to being Molecule or MultiMoleculeParticle, and all of its parts (if any) must also be instances of Stuff. This formalization ensures that Bulk consists exclusively of molecular or multi-molecular entities, or is composed from other Stuff, maintaining a strict part-whole and compositional structure.\nAxiom: {'subClassOf': ['Stuff', '(([hasGranuleType some (Molecule or MultiMoleculeParticle)] or [hasPartStuff some Stuff]) and ([hasGranuleType only (Molecule or MultiMoleculeParticle)] or [hasPartStuff only Stuff]))', '(MixedStuff or StructuredPureStuff)']}\nGenerated CQs:", "output": "Is Bulk classified under either MixedStuff or StructuredPureStuff categories? | Which concepts are more specific than the union of MixedStuff and StructuredPureStuff, such as Bulk? | Into which overarching groups does Bulk fit within the ontology: MixedStuff, StructuredPureStuff, or both? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PureStuff\nDescription: PureStuff is defined as equivalent to the intersection of Stuff with several precise property restrictions: it must have exactly one granule type, which is either an Atom, Molecule, or MultiMoleculeParticle; it must consist of exactly one part stuff, which must be either PureBulk, StructuredPureStuff, or UnstructuredPureStuff; and it must have exactly one stuff distribution, which must be an EvenDistribution. This formalization ensures that any instance of PureStuff is a homogeneous material entity, composed in a uniform way at the granule and part level, and evenly distributed throughout.\nAxiom: {'subClassOf': ['Stuff'], 'equivalentClass': ['(Stuff and [hasGranuleType exactly 1 (Atom or Molecule or MultiMoleculeParticle)] and [hasPartStuff exactly 1 (PureBulk or StructuredPureStuff or UnstructuredPureStuff)] and [hasStuffDistribution exactly 1 EvenDistribution])']}\nGenerated CQs:", "output": "Is Stuff a more general category that includes PureStuff? | Which entities are categorized as more specific instances under Stuff, such as PureStuff? | To what broader groupings does PureStuff logically belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Colloid\nDescription: Colloid is defined as a subclass of HomogeneousMixture. This means every colloid is a type of homogeneous mixture, sharing its properties, but may also have additional characteristics distinguishing it from other homogeneous mixtures. There are no specified equivalence relationships to other classes.\nAxiom: {'subClassOf': ['HomogeneousMixture'], 'equivalentClass': ['(HomogeneousMixture and [hasPartStuff exactly 1 (Stuff and [hasState some StuffState] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some StuffState] and [inverseOf srInheresIn some DispersedPhase])] and [hasNrOfPhase some DatatypeRestriction(xsd:int minInclusive 2)])']}\nGenerated CQs:", "output": "Is a Colloid equivalent to a homogeneous mixture that contains exactly one part of stuff in a continuous medium state and exactly one part of stuff in a dispersed phase state? | Does every Colloid necessarily have at least two phases according to the number of phases property? | Is a Colloid fully defined as the intersection of HomogeneousMixture and mixtures with specific parts characterized by their state and location in continuous medium and dispersed phase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solution\nDescription: Solution is defined as a type of homogeneous mixture that contains at least two different phases. Each solution must have at least two component parts: one part functioning as a solute and the other as a solvent. Both the solute and solvent are classified as \"stuff\" that consists exclusively of granules of type atom, ion, or molecule. This formalization ensures that a solution, by definition, is made up of distinct solute and solvent entities, each inhering in \"stuff\" with specific granule types, and the overall mixture must exhibit at least two phases.\nAxiom: {'subClassOf': ['HomogeneousMixture'], 'equivalentClass': ['(HomogeneousMixture and [hasPartStuff some (Stuff and [inverseOf srInheresIn some Solute] and [hasGranuleType only (Atom or Ion or Molecule)])] and [hasPartStuff some (Stuff and [inverseOf srInheresIn some Solvent] and [hasGranuleType only (Atom or Ion or Molecule)])] and [hasNrOfPhase some DatatypeRestriction(xsd:int minInclusive 2)])']}\nGenerated CQs:", "output": "Does Solution fall under the general group of HomogeneousMixture? | Which specific classes are categorized as HomogeneousMixture, such as Solution? | To what broader mixture types does Solution belong within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Distribution\nDescription: Distribution is a class defined by the property restriction that every instance must have at least one quale (quality or manner) that is either an EvenDistribution or an UnevenDistribution. This asserts that all individuals of Distribution are characterized by possessing a specific type of distributional quality, distinguishing them based on whether they exhibit evenness or unevenness in their distribution.\nAxiom: {'subClassOf': ['Quality'], 'propertyRestrictions': ['[hasQuale some (EvenDistribution or UnevenDistribution)]']}\nGenerated CQs:", "output": "Is Distribution classified under the broader group of Quality? | What specific kinds of Quality include Distribution as a subclass? | Which overarching categories encompass Distribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Emulsion\nDescription: Emulsion is defined as a subclass of DispersionColloid. This means every emulsion is formally classified as a specific type of dispersion colloid, inheriting all characteristics of dispersion colloids, but with additional distinguishing properties specific to emulsions. No additional equivalent class is specified.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does an Emulsion necessarily consist of exactly one part that is a liquid state Stuff inhering in the ContinuousMedium and exactly one part that is a liquid state Stuff inhering in the DispersedPhase? | Is Emulsion logically equivalent to the intersection of DispersionColloid and those having exactly one liquid Stuff in the ContinuousMedium and exactly one liquid Stuff in the DispersedPhase? | Can Emulsion be fully defined as a DispersionColloid with two and only two parts: each a liquid Stuff, where one part inheres in the ContinuousMedium and the other in the DispersedPhase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Foam\nDescription: Foam is defined as a subclass of DispersionColloid, indicating that every foam is a type of dispersion colloid. There are no additional equivalence constraints specified, so the class is characterized solely by its position in the subclass hierarchy.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])])']}\nGenerated CQs:", "output": "Does a Foam necessarily consist of exactly one part that is a Stuff with a gaseous state inhering in a DispersedPhase and exactly one part that is a Stuff with a liquid state inhering in a ContinuousMedium? | Is Foam defined as the intersection of DispersionColloid and systems comprising precisely one gaseous phase as the dispersed part and one liquid phase as the continuous medium? | Are all instances of Foam required to have both a single gas-phase dispersed component and a single liquid-phase continuous component as part stuffs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gel\nDescription: Gel is defined as a subclass of DispersionColloid, indicating that every gel is a type of dispersion colloid. There are no additional equivalence axioms specified, so gel is characterized solely by its classification within the hierarchy of colloidal systems.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])])']}\nGenerated CQs:", "output": "Must every Gel contain exactly one part that is a Stuff in the liquid state inhering in a DispersedPhase, and exactly one part that is a Stuff in the solid state inhering in a ContinuousMedium? | Is Gel equivalent to the intersection of DispersionColloid and those entities composed of precisely one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium? | Does the definition of Gel permit any hasPartStuff relationships other than one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LiquidAerosol\nDescription: LiquidAerosol is defined as a subclass of DispersionColloid. This means every instance of LiquidAerosol is necessarily an instance of DispersionColloid, inheriting all its characteristics. Currently, no additional equivalence or further property restrictions are specified for LiquidAerosol.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Is every LiquidAerosol necessarily composed of one part that is Stuff in a gaseous state inhering in a ContinuousMedium, and one part that is Stuff in a liquid state inhering in a DispersedPhase? | Is LiquidAerosol logically defined as an intersection of DispersionColloid with those entities having exactly one gaseous part in a ContinuousMedium and exactly one liquid part in a DispersedPhase? | Can a LiquidAerosol exist without meeting the precise conditions of having these two distinct parts each with the required state and inherence? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sol\nDescription: Sol is defined as a type of dispersion colloid that is equivalent to a system containing exactly one portion of solid-phase matter (stuff) existing in a dispersed phase, and exactly one portion of liquid-phase matter (stuff) existing in a continuous medium. This specification enforces that a sol consists of solid particles dispersed uniformly within a liquid, consistent with colloidal solution definitions in which solids are dispersed in a liquid continuous medium.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does Sol fall under the category of DispersionColloid? | Which specific types are encompassed by DispersionColloid, such as Sol? | What parent classes are associated with Sol in this context? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidAerosol\nDescription: SolidAerosol is defined as a subclass of DispersionColloid. This indicates that every SolidAerosol is a type of DispersionColloid, inheriting all properties of the parent class. No additional equivalence conditions or property restrictions are specified.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Is SolidAerosol equivalent to entities that are DispersionColloid and contain exactly one part that is solid in a dispersed phase, and exactly one part that is gas in a continuous medium? | Does every SolidAerosol necessarily have precisely one Gas component distributed in a continuous medium and one Solid component distributed in a dispersed phase? | Is the class SolidAerosol fully captured by the intersection of DispersionColloid and those entities with exactly one solid part in a dispersed phase and exactly one gas part in a continuous medium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidFoam\nDescription: SolidFoam is defined as a type of DispersionColloid that consists of exactly two distinct components: one component is a portion of matter (Stuff) in a gaseous state, which specifically exists as the dispersed phase; the other component is a portion of matter (Stuff) in a solid state, which specifically serves as the continuous medium. This equivalence ensures that every instance of SolidFoam is composed of a gas dispersed within a continuous solid matrix, precisely modeling the structure of solid foams (such as pumice or foam rubber).\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])])']}\nGenerated CQs:", "output": "Is SolidFoam categorized as a more specific instance under DispersionColloid? | Which subclasses are encompassed by DispersionColloid, specifically including SolidFoam? | To which upper-level categories does SolidFoam conceptually correspond within colloidal classifications? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidSol\nDescription: SolidSol is defined as a class equivalent to a type of dispersion colloid in which exactly two distinct solid substances are present: one solid substance inheres in the continuous medium, and the other solid substance inheres in the dispersed phase. This means that every instance of SolidSol consists of a colloidal system where both the dispersed phase and the continuous medium are solids, each represented as exactly one part with a solid state.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does SolidSol fall within the classification of DispersionColloid? | Which types are classified as subcategories under DispersionColloid, such as SolidSol? | To what broader classes does SolidSol pertain within the ontology's structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NumberOfPhases\nDescription: NumberOfPhases is a class whose individuals are required to have at least one value for the property hasDataValue, where this value must be a non-negative integer (as specified by the xsd:nonNegativeInteger datatype). This formalization ensures that every instance of NumberOfPhases is associated with a non-negative integer data value.\nAxiom: {'subClassOf': ['AbstractRegion'], 'propertyRestrictions': ['[hasDataValue some xsd:nonNegativeInteger]']}\nGenerated CQs:", "output": "Is NumberOfPhases categorized under the broader class of AbstractRegion? | Which entities are subclasses of AbstractRegion, such as NumberOfPhases? | What general classes does NumberOfPhases fall under within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HomogeneousMixture\nDescription: HomogeneousMixture is defined as a subclass of MixedStuff. The class is characterized by the restriction that its members may only have granule types of atom, ion, or molecule—meaning a homogeneous mixture is composed exclusively of these fundamental chemical units. This restriction ensures that any instance of HomogeneousMixture cannot contain granules of any other type, supporting the concept that such mixtures are uniform in composition at the granule level.\nAxiom: {'subClassOf': ['MixedStuff'], 'propertyRestrictions': ['[hasGranuleType only (Atom or Ion or Molecule)]', '[hasStuffDistribution exactly 1 EvenDistribution]']}\nGenerated CQs:", "output": "Must every HomogeneousMixture have exactly one hasStuffDistribution property value that is an EvenDistribution? | Is it required that a HomogeneousMixture cannot have more than one or fewer than one hasStuffDistribution, and that the distribution must be EvenDistribution? | Does any instance of HomogeneousMixture necessarily possess a single hasStuffDistribution of type EvenDistribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeastPortion\nDescription: LeastPortion is defined as a subclass of Portion, meaning every instance of LeastPortion is also an instance of Portion. No further distinguishing characteristics or constraints are specified by the current axioms.\nAxiom: {'subClassOf': ['Portion', 'not [hasPortion some Portion]']}\nGenerated CQs:", "output": "Which entities are classified as LeastPortion under the restriction of not having any associated Portion via hasPortion? | Does being a member of LeastPortion imply the absence of any hasPortion relationship to Portion? | What classes are included in the category of entities that do not possess any Portion through the hasPortion property, such as LeastPortion? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Piece\nDescription: Piece is defined as a subclass of Portion, meaning every instance of Piece is also an instance of Portion. There are no additional property restrictions or disjointness axioms specified, so Piece inherits all characteristics applicable to Portion without further specification.\nAxiom: {'subClassOf': ['Portion'], 'propertyRestrictions': ['[isSelfContainedScatteredPortionOf some AmountOfStuff]']}\nGenerated CQs:", "output": "Is every Piece necessarily a self-contained scattered portion of some AmountOfStuff? | Can a Piece exist without being a self-contained scattered portion of an AmountOfStuff? | Are there any instances where a Piece is not associated through isSelfContainedScatteredPortionOf with an AmountOfStuff? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Portion\nDescription: Portion is defined as a subclass of AmountOfStuff, indicating that every instance of Portion is also an instance of AmountOfStuff. There are no additional property restrictions or distinguishing axioms specified for this class.\nAxiom: {'subClassOf': ['AmountOfStuff'], 'propertyRestrictions': ['[portionOf some AmountOfStuff]']}\nGenerated CQs:", "output": "Is every Portion necessarily a portion of some AmountOfStuff? | Is it required for a Portion to be linked via 'portionOf' to at least one AmountOfStuff instance? | Can a Portion exist without being associated with an AmountOfStuff through the 'portionOf' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PureBulk\nDescription: PureBulk is defined as a subclass of PureStuff. This means every instance of PureBulk is also an instance of PureStuff, inheriting all its characteristics. No additional equivalence or unique property restrictions are specified for PureBulk.\nAxiom: {'subClassOf': ['PureStuff'], 'equivalentClass': ['(PureStuff and [hasGranuleType only MultiMoleculeParticle] and [hasGranuleType exactly 1 MultiMoleculeParticle])']}\nGenerated CQs:", "output": "Is PureBulk equivalent to the class of PureStuff that has exactly one granule type, and that granule type is only MultiMoleculeParticle? | Does every instance of PureBulk necessarily have only one granule type, which must be a MultiMoleculeParticle, and must also be PureStuff? | Are all PureBulk entities strictly those PureStuff individuals with hasGranuleType limited to exactly one occurrence of MultiMoleculeParticle? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnstructuredPureStuff\nDescription: UnstructuredPureStuff is defined as a class equivalent to the intersection of PureStuff, entities that have only atoms as their granule type, and entities that possess exactly one atom as their granule type. This means that every instance of UnstructuredPureStuff must be a PureStuff composed exclusively of a single atom, and cannot have any other type or number of granules.\nAxiom: {'subClassOf': ['PureStuff'], 'equivalentClass': ['(PureStuff and [hasGranuleType only Atom] and [hasGranuleType exactly 1 Atom])']}\nGenerated CQs:", "output": "Is UnstructuredPureStuff included as a specific type within PureStuff? | Which subclasses fall under the category of PureStuff, such as UnstructuredPureStuff? | To what higher-level groups does UnstructuredPureStuff pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidHeterogeneousMixture\nDescription: SolidHeterogeneousMixture is defined as a subclass of HeterogeneousMixture. This means every SolidHeterogeneousMixture is a type of HeterogeneousMixture, specifically characterized by its solid state, though no additional equivalence or further property restrictions are specified in the axioms.\nAxiom: {'subClassOf': ['HeterogeneousMixture'], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff min 2 (Stuff and [hasState some Solid])])']}\nGenerated CQs:", "output": "Is every SolidHeterogeneousMixture necessarily a HeterogeneousMixture that contains at least two parts composed of Stuff in the solid state? | Is the class SolidHeterogeneousMixture logically equivalent to the intersection of HeterogeneousMixture and mixtures having a minimum of two solid-state Stuff components? | Can SolidHeterogeneousMixture be defined as a HeterogeneousMixture with at least two constituent parts which are solid kinds of Stuff? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Suspension\nDescription: Suspension is formally defined as a subclass of entities possessing at least one granule type that is a Molecule and at least one granule type that is a MultiMoleculeParticle. It is equivalent to a heterogeneous mixture comprised of parts that meet two criteria: it contains some portion of liquid matter (continuous medium) and some portion of solid matter (dispersed phase). Each part of liquid or solid must inhere in their respective phases—liquid in the continuous medium and solid in the dispersed phase. This formalization captures the essential ontological features of a suspension as a heterogeneous mixture where solid particles are dispersed within a liquid medium.\nAxiom: {'subClassOf': ['([hasGranuleType some Molecule] and [hasGranuleType some MultiMoleculeParticle])', 'HeterogeneousMixture'], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff some (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff some (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does Suspension fall within the broader group of HeterogeneousMixture? | Which mixtures are classified as subtypes of HeterogeneousMixture, such as Suspension? | What are the higher-level mixture categories that encompass Suspension? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffRole\nDescription: StuffRole is a class whose members are characterized by the property restriction that they must inhere in some entity classified as Stuff; that is, every instance of StuffRole is related via the srInheresIn property to at least one instance of Stuff. This ensures that StuffRole is specifically tied to entities that inhere in the category of Stuff.\nAxiom: {'subClassOf': ['Role'], 'propertyRestrictions': ['[srInheresIn some Stuff]']}\nGenerated CQs:", "output": "Is StuffRole categorized as a more specific type within the broader concept of Role? | Which subtypes fall under the umbrella of Role, specifically including StuffRole? | What are the overarching classes to which StuffRole belongs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatterPortion\nDescription: The property \"scatterPortion\" represents a relationship between an original whole and a portion that was once a contiguous part of that whole but has become spatially or contextually separated over time. This property is a subproperty of \"hasProperPart\" and has \"scatteredPortionOf\" as its inverse. It has no explicitly defined domain or range restrictions. Typical examples include a slice of bread cut from a loaf or wine poured into a glass from a bottle. The property is useful for modeling portions that have been separated, with potential for further specialization according to whether the portion is associated with a container or not.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the ontological connection between the properties ‘scatterPortion’ and ‘scatteredPortionOf’? | If entity A scatterPortion B, does ontology entail that B scatteredPortionOf A? | Which property is defined as the inverse of ‘scatterPortion’ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: inheresIn\nDescription: The property \"inheresIn\" has no specified characteristics or super-properties. Its domain is restricted to the class \"Role,\" and its range is restricted to \"PhysicalEndurant.\" This indicates that \"inheresIn\" relates a Role to a PhysicalEndurant entity. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['Role'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'inheresIn' relate to anything other than a PhysicalEndurant as its object? | What types of entities are valid as the range for the property 'inheresIn'? | Is it possible for a value of 'inheresIn' to not be a PhysicalEndurant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasSelfContainedScatteredPortion\nDescription: The property \"hasSelfContainedScatteredPortion\" relates to entities such as lumps, puddles, slices, or other discrete pieces. It has no explicitly defined domain or range restrictions and no defined characteristics. It is a sub-property of \"scatterPortion\" and has \"isSelfContainedScatteredPortionOf\" as its inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['scatterPortion'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the connection between 'hasSelfContainedScatteredPortion' and 'isSelfContainedScatteredPortionOf' as defined in the ontology? | If entity A has a self-contained scattered portion B, does it follow that B is a self-contained scattered portion of A, according to the ontology? | Which property acts as the inverse of 'hasSelfContainedScatteredPortion'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPartStuff\nDescription: The property \"hasPartStuff\" lacks explicit domain and range constraints, and does not possess any special property characteristics. It is specified as a subproperty of \"hasProperPart\" and is the inverse of \"stuffPartOf\". Notably, its use implies that the related entities are distinct kinds of \"stuffs\", as the current description highlights a requirement for distinction between the entities involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse relationship established between ‘hasPartStuff’ and ‘stuffPartOf’ in the ontology? | If entity A has a part-stuff B via ‘hasPartStuff’, does that indicate that B is related to A through ‘stuffPartOf’? | Which object property is declared as the inverse of ‘hasPartStuff’ in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasContainedScatteredPortion\nDescription: The property \"hasContainedScatteredPortion\" is used to relate a container to scattered portions necessarily contained within it (e.g., water in a glass). It has no explicit domain or range restrictions and does not declare any specific property characteristics. It is a sub-property of \"scatterPortion\" and has \"isContainedScatteredPortionOf\" as its inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['scatterPortion'], 'inverseOf': []}\nGenerated CQs:", "output": "In what way are the properties 'hasContainedScatteredPortion' and 'isContainedScatteredPortionOf' related in the ontology? | If an entity A hasContainedScatteredPortion B, does it follow that B isContainedScatteredPortionOf A? | Which property is modeled as the inverse of 'hasContainedScatteredPortion' in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: solutionFormingRelation\nDescription: The property \"solutionFormingRelation\" relates a Solvent (domain) to a Solute (range) and is a sub-property of \"stuffFormingRelation.\" It has no additional property characteristics or specified inverse. This property is used to represent the chemical dissolution process, where one substance (the solute) is dissolved by another (the solvent).\nAxiom: {'characteristics': [], 'domain': ['Solvent'], 'range': [], 'subPropertyOf': ['stuffFormingRelation'], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'solutionFormingRelation' relate to anything other than a Solute as its object? | Is every entity used as the object in 'solutionFormingRelation' required to be a Solute? | What kinds of entities can appear as the range of the 'solutionFormingRelation' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: contiguousPortion\nDescription: The property \"contiguousPortion\" is defined as a sub-property of \"hasProperPart\" with no explicitly specified domain or range restrictions. It has no declared characteristics. The property has an inverse, \"isContiguousPortionOf,\" indicating a bidirectional relationship. This property is intended to relate an entity to one of its proper parts that is contiguous.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the object properties ‘contiguousPortion’ and ‘isContiguousPortionOf’ interconnected in the ontology? | If entity A is linked to entity B via ‘contiguousPortion’, does that entail that B is related to A through ‘isContiguousPortionOf’? | What object property is defined as the inverse of ‘contiguousPortion’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: instantiation\nDescription: The property \"instantiation\" is an object property with domain \"AmountOfStuff\" and range \"Stuff\", indicating that it relates particular amounts of matter to their corresponding type of stuff. This property is intentionally typed for exclusive use in scenarios where first- and second-order entities coexist in the ontology's TBox. For example, it connects a specific amount, such as \"1kg of gold\", to the general stuff \"Gold.\" It has no explicitly defined characteristics, super-properties, or inverse properties.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['Stuff'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is the domain of the property 'instantiation' restricted solely to 'AmountOfStuff'? | Are there any entities of type 'AmountOfStuff' that cannot be associated with the 'instantiation' property? | What are the possible domains for the property 'instantiation'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDataValue\nDescription: The property \"hasDataValue\" relates instances of the class \"Abstract\" to data values. Although its intended conceptual range is any data type, no range is currently specified due to technical limitations in expressing unrestricted datatypes. The property has no explicitly defined characteristics, super-properties, or inverse properties.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any class other than Abstract that can be the subject of the 'hasDataValue' property? | Can 'hasDataValue' be used with any entity that is not an instance of Abstract? | What classes are permitted as the domain of the 'hasDataValue' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPortion\nDescription: The property \"hasPortion\" is a sub-property of \"hasProperPart\" and has \"portionOf\" as its inverse. While there are no explicit domain or range restrictions or defined characteristics, \"hasPortion\" is intended to relate an entity to a part that consists of the same substance or kind as the whole. Practically, it represents portions or divisions of a material entity at a given instant; for example, different amounts of wine divided from a whole. The property is useful in representing naive chemistry, although continuous changes at the molecular level may challenge the strict philosophical notion of 'portion.'\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the logical connection between ‘hasPortion’ and ‘portionOf’ in the ontology? | If entity X hasPortion Y, does this infer that Y portionOf X? | Which property is defined as the inverse of ‘hasPortion’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPart\nDescription: The property \"hasPart\" does not have explicitly defined characteristics, domain, or range restrictions in its current axiom. It is specified as the inverse of the property \"partOf\" and has no super-properties. According to the existing description, \"hasPart\" may overlap with related notions like \"hasComponent\" and \"composedOf,\" with subtleties in the essentiality or accidental nature of parts in different contexts. Domain and range constraints, where relevant, are managed in the inverse property \"partOf.\" This property is intended for modeling part-whole relationships.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "How are the object properties ‘hasPart’ and ‘partOf’ connected as inverse properties within the ontology? | If entity A ‘hasPart’ entity B, does the ontology state that B is ‘partOf’ A? | Which property in the ontology is defined as the inverse of ‘hasPart’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasScatterStuffPart\nDescription: The property \"hasScatterStuffPart\" is defined as a sub-property of \"hasProperPart\" and has \"scatteredStuffPartOf\" as its inverse property. There are no explicitly specified characteristics, domain, or range restrictions for this property. It is intended to associate an entity with a scattered or distributed part of itself, aligning it with the mereological concept of proper parts but specifically for parts that are scattered.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties ‘hasScatterStuffPart’ and ‘scatteredStuffPartOf’ connected in the ontology? | If an entity X hasScatterStuffPart Y, does it follow that Y scatteredStuffPartOf X? | Which property is considered the inverse of ‘hasScatterStuffPart’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasProperPart\nDescription: The property \"hasProperPart\" has no explicitly defined characteristics, domain, or range restrictions. It is a sub-property of \"hasPart,\" indicating a hierarchical relationship. The inverse property is \"properPartOf,\" which relates an entity to its proper whole. This property is used to specify that one entity is a proper (non-identical) part of another.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the formal connection between the properties 'hasProperPart' and 'properPartOf' as defined in the ontology? | If an entity A has a proper part B, does the ontology entail that B is a proper part of A? | Which property is explicitly stated as the inverse of 'hasProperPart' in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasStuffDistribution\nDescription: The property \"hasStuffDistribution\" has no specified domain, range, characteristics, super-properties, or inverse properties. Based on its axioms, it is a generic property that can relate any type of entities without restriction. No additional description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'hasStuffDistribution' has no specified domain? | What kinds of entities can act as the subject when using the property 'hasStuffDistribution'? | Is it possible for the property 'hasStuffDistribution' to exist without a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stuffFormingRelation\nDescription: The property \"stuffFormingRelation\" relates individuals that are either ContinuousMedium, DispersedPhase, Solute, or Solvent. It has no explicit property characteristics, super-properties, or inverses. This property is used to represent relationships that characterize the formation or interactions among substances within a mixture, such as surface tension effects, molecular interactions (e.g., hydrogen bonding), or compositional ratios (e.g., the proportional amounts required to form a mixture like lemonade). Both the domain and range are restricted to the aforementioned substance types.\nAxiom: {'characteristics': [], 'domain': ['(ContinuousMedium or DispersedPhase or Solute or Solvent)'], 'range': ['(ContinuousMedium and DispersedPhase and Solute and Solvent)'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for 'stuffFormingRelation' to relate to an entity that is not a ContinuousMedium, DispersedPhase, Solute, or Solvent? | Are all possible ranges for 'stuffFormingRelation' restricted to ContinuousMedium, DispersedPhase, Solute, or Solvent? | Which types of entities can serve as the range for the property 'stuffFormingRelation'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: portionOf\nDescription: The property \"portionOf\" relates an entity of type AmountOfStuff or Stuff to another entity of the same type, representing a portion or part of the same kind of matter (e.g., a slice of cake to the cake, a glass of wine to the bottle of wine). The domain and range are both restricted to AmountOfStuff or Stuff. It is a sub-property of \"properPartOf\" and has no specified characteristics or inverse property. This property is intended for use with mass nouns or non-countable substances.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value used with the property 'portionOf' required to be either an AmountOfStuff or Stuff? | Can 'portionOf' have a range that is not AmountOfStuff or Stuff? | What entities are permitted as the range of the property 'portionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContainedScatteredPortionOf\nDescription: The property \"isContainedScatteredPortionOf\" relates instances of AmountOfStuff or Stuff to other instances of the same types, indicating that the subject is a portion that originated from a larger whole and currently requires a container. As a subproperty of \"scatteredPortionOf,\" it specifically captures the context where a portion, such as 'wine in a wine glass,' was part of a bulk amount, now separated and needing containment. No explicit property characteristics, inverse, or additional hierarchical relations are defined.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['scatteredPortionOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Does 'isContainedScatteredPortionOf' have a range other than AmountOfStuff or Stuff? | Can the property 'isContainedScatteredPortionOf' be used with values that are not instances of AmountOfStuff or Stuff? | What types of entities are permitted as the range for 'isContainedScatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatteredStuffPartOf\nDescription: The property \"scatteredStuffPartOf\" is a subproperty of \"properPartOf\" and relates instances of \"AmountOfStuff\" or \"Stuff\" to other instances within the same classes. It is intended to connect quantities or types of matter—typically those denoted by mass nouns in natural language (e.g., gold, milk, mayonnaise)—with their constituent ingredients that are of a different type (e.g., alcohol in wine, oil in mayonnaise, sugar in cake). The property does not specify domain or range characteristics beyond these classes and has no defined inverse. It also suggests a temporal dimension, where the part was once a contiguous proper part of the whole, but is now scattered or integrated.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'scatteredStuffPartOf' apply to subjects other than AmountOfStuff or Stuff? | What classes are permitted as the domain for the property 'scatteredStuffPartOf'? | Is it possible for an instance that is not an AmountOfStuff or Stuff to use the 'scatteredStuffPartOf' property as its subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatteredPortionOf\nDescription: The property \"scatteredPortionOf\" has a domain and range restricted to either AmountOfStuff or Stuff. It is defined as a subproperty of \"properPartOf\" and has no explicitly specified characteristics or inverse. This property is intended to represent a specific kind of portion relationship but is not made a subproperty of \"portionOf\" to avoid reasoning cycles and undecidability in Description Logics. The distinction between this property and related properties is primarily temporal, which is not expressible in OWL; therefore, \"scatteredPortionOf\" and \"portionOf\" are modeled as sibling properties to enable practical property chaining in reasoning.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned via 'scatteredPortionOf' restricted to being an AmountOfStuff or Stuff? | What types of entities can be the object of the 'scatteredPortionOf' property? | Are there any entities other than AmountOfStuff or Stuff that can be in the range of 'scatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" has no explicitly defined characteristics or super-properties. Its domain includes entities classified as Endurant or Perdurant, and its range is restricted to instances of Quality. This property is used to relate an Endurant or Perdurant to a Quality. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['(Endurant and Perdurant)'], 'range': ['Quality'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'hasQuality' be used with subjects other than Endurant or Perdurant? | Are all instances associated with 'hasQuality' required to be either Endurant or Perdurant as the subject? | What entities are permitted to serve as the domain for the property 'hasQuality'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isSelfContainedScatteredPortionOf\nDescription: The property \"isSelfContainedScatteredPortionOf\" relates an entity classified as \"AmountOfStuff\" or \"Stuff\" to another entity of the same types, indicating that the former is a self-standing, scattered portion of the latter (such as a lump, drop, or slice). It is a sub-property of \"scatteredPortionOf\" and does not specify any particular characteristics or inverse properties. This property is typically used to denote portions that were once part of a larger whole but now exist as distinct, stand-alone pieces.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['scatteredPortionOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for 'isSelfContainedScatteredPortionOf' to have a domain other than AmountOfStuff or Stuff? | Can entities outside of AmountOfStuff or Stuff be involved as the subject of the property 'isSelfContainedScatteredPortionOf'? | What kinds of entities are permitted as the domain for 'isSelfContainedScatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stuffPartOf\nDescription: The property \"stuffPartOf\" relates entities classified as AmountOfStuff or Stuff to other entities of the same categories, indicating a part-whole relationship specifically among mass nouns or substances that are not typically countable. It is a subproperty of \"properPartOf,\" emphasizing that the 'part' is a distinct type of stuff or ingredient within another. No additional property characteristics or inverse are specified. Examples include alcohol as a stuff-part of wine, oil in mayonnaise, or sugar in cake.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'stuffPartOf' refer to objects other than AmountOfStuff or Stuff as its value? | Is every value associated with the property 'stuffPartOf' required to be of type AmountOfStuff or Stuff? | What types of resources are permitted as the range of the 'stuffPartOf' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContiguousPortionOf\nDescription: The property \"isContiguousPortionOf\" relates an instance of AmountOfStuff or Stuff to another of the same types, indicating that the subject is a contiguous portion of the object. It is defined as a sub-property of \"properPartOf\" and has no specified inverse or additional property characteristics. Although originally intended as a super-property of \"portionOf\", it is classified as a sibling to avoid logical cycles and maintain decidability within OWL reasoning. This distinction primarily addresses semantic differences involving temporality not representable in OWL.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is the domain of the property 'isContiguousPortionOf' limited to AmountOfStuff or Stuff, or can it include other classes? | Are there any instances of AmountOfStuff or Stuff that cannot be subjects of 'isContiguousPortionOf'? | What entity types are eligible to serve as the domain for the property 'isContiguousPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasState\nDescription: The property \"hasState\" links individuals of the class \"PhysicalEndurant\" to instances of the class \"State\". It has no specified characteristics, super-properties, or inverse properties. The domain restriction ensures it is only used with \"PhysicalEndurant\" entities, and its range is limited to \"State\".\nAxiom: {'characteristics': [], 'domain': ['PhysicalEndurant'], 'range': ['State'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasState considered a subtype of owl:topObjectProperty? | What superproperties are associated with hasState in the property hierarchy? | Does hasState directly fall under the domain of owl:topObjectProperty? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: properContainedIn\nDescription: The property \"properContainedIn\" has no specified domain, range, characteristics, super-properties, or inverse properties. This suggests it is a general-purpose property intended to express that one entity is properly contained within another, but no formal constraints are imposed on the types of entities it can relate.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is properPartOf a superproperty of properContainedIn? | What are the subproperties encompassed by properPartOf? | Which properties serve as superproperties for properContainedIn? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasNrOfPhase\nDescription: The property \"hasNrOfPhase\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is specified as xsd:integer, indicating that it relates an entity to an integer value representing the number of phases.\nAxiom: {'characteristics': [], 'domain': ['Stuff'], 'range': ['xsd:integer'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'hasNrOfPhase' be used with any subject other than 'Stuff'? | Is it possible for an entity that is not classified as 'Stuff' to have a value for 'hasNrOfPhase'? | What types of entities are permitted as the domain of the property 'hasNrOfPhase'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: srInheresIn\nDescription: The property \"srInheresIn\" has no defined characteristics or range restrictions. Its domain is restricted to instances of \"StuffRole\". It is a sub-property of \"inheresIn\", indicating it specializes this more general relationship. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['StuffRole'], 'range': ['Stuff'], 'subPropertyOf': ['inheresIn'], 'inverseOf': []}\nGenerated CQs:", "output": "Is anything other than Stuff allowed as the range of the property 'srInheresIn'? | Can 'srInheresIn' relate to values that are not instances of Stuff? | What types of entities can serve as the range for the property 'srInheresIn'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: partOf\nDescription: The property \"partOf\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is a general property intended to express a part-whole relationship, with no further formal restrictions defined by axioms.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is partOf a transitive property, such that if an entity is part of a second entity, and the second is part of a third, the first entity is part of the third? | Can the partOf property infer that if object A is part of object B, and object B is part of object C, then object A is part of object C? | Does the ontology require partOf to satisfy the transitive characteristic over related entities? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: colloidFormingRelation\nDescription: The property \"colloidFormingRelation\" has no explicitly defined characteristics or domain constraints. Its range is restricted to individuals of the class \"DispersedPhase.\" It is a subproperty of \"stuffFormingRelation,\" indicating that it inherits general properties from this broader relation. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['ContinuousMedium'], 'range': ['DispersedPhase'], 'subPropertyOf': ['stuffFormingRelation'], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for the property 'colloidFormingRelation' to have a subject that is not a ContinuousMedium? | What types of entities can appear as the domain for the property 'colloidFormingRelation'? | Are all subjects of 'colloidFormingRelation' instances of ContinuousMedium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: properPartOf\nDescription: The property \"properPartOf\" has no specified characteristics, domain, range, super-properties, or inverse properties. This suggests that it is a general-purpose relation intended to express a proper part-whole relationship between entities without any additional constraints or formal links to other properties.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['partOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is properPartOf classified as a subproperty of partOf within the ontology? | Which properties are identified as subproperties under partOf? | Does the use of properPartOf property entail the use of partOf property for the same subject and object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasGranuleType\nDescription: The property \"hasGranuleType\" has no specified characteristics or domain restrictions. Its range is limited to individuals classified under \"PhysicalObject\". It is a subproperty of \"owl:topObjectProperty\" and does not have an explicitly defined inverse property. This property is intended to relate an entity to a type of physical object.\nAxiom: {'characteristics': [], 'domain': ['Stuff'], 'range': ['PhysicalObject'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is the subject of 'hasGranuleType' always required to be a Stuff? | Are there any entities besides Stuff that can be associated with the 'hasGranuleType' property as its domain? | What classes can serve as the domain for the property 'hasGranuleType'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containedIn\nDescription: The property \"containedIn\" does not have specified characteristics, domain, range, super-properties, or an inverse property. It is a general property intended to relate entities without explicit constraints on its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['partOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is containedIn defined as a more specific property under partOf? | Which properties are recognized as subproperties of partOf? | What are the superproperties assigned to containedIn in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuale\nDescription: The property \"hasQuale\" has no explicitly defined characteristics, domain, or super-properties. Its range is restricted to the class \"Abstract,\" indicating that it relates an entity to an abstract entity. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['Quality'], 'range': ['Abstract'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can entities other than Quality appear as the subject of the property 'hasQuale'? | What types of individuals can serve as the domain for the property 'hasQuale'? | Is 'hasQuale' ever used where the subject is not a member of Quality? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ADLProblem\nDescription: ADLProblem is defined as a subclass of Problem. This means every instance of ADLProblem is also an instance of Problem, establishing a hierarchical relationship where ADLProblem specifies a more specialized type of problem related to activities of daily living (ADL). No further property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "Which types of Problem include ADLProblem as a more specific instance? | Is ADLProblem a specialized form within the overarching class of Problem? | What broader categories encompass ADLProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExerciseProblem\nDescription: ExerciseProblem is defined as a subclass of Problem. This means that every ExerciseProblem is considered a type of Problem, inheriting all characteristics of the Problem class. No additional distinguishing axioms or property restrictions are specified for ExerciseProblem in the current definition.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "What are the specialized types of Problem, such as ExerciseProblem? | Does ExerciseProblem fall under the wider category of Problem? | Which broader classifications encompass ExerciseProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodProblem\nDescription: MoodProblem is defined as a subclass of Problem, indicating that any instance of MoodProblem is also an instance of Problem. This classification establishes MoodProblem as a specific type of problem, but does not currently provide further distinguishing characteristics beyond its placement in the hierarchy.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "Does MoodProblem fall under the general category of Problem? | What are the hierarchically broader classes that include MoodProblem? | Which specific types are encompassed within the broader class Problem, such as MoodProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepProblem\nDescription: SleepProblem is defined as a subclass of Problem, representing a specific category of problems related to sleep. Any individual classified as a SleepProblem is, by definition, also a Problem, inheriting all general properties and restrictions of the Problem class but specializing them to issues involving sleep.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "What broader categories encompass SleepProblem? | Is SleepProblem categorized under Problem types? | Which subcategories exist within the Problem class, such as SleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialProblem\nDescription: SocialProblem is defined as a subclass of Problem. This means every social problem is recognized as a problem, but with distinguishing features or contexts that are social in nature. The axiom places SocialProblem within the hierarchy of problems, ensuring that social problems inherit all general characteristics of problems while being specifically identified for their relevance to societal issues.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "output": "Which specific types are subsumed by Problem, including SocialProblem? | To which overarching categories does SocialProblem belong within the ontology? | Is every SocialProblem categorized under the broader class of Problem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ADLSummary\nDescription: ADLSummary is a subclass of DaySummary. This means that every instance of ADLSummary is also an instance of DaySummary and inherits its properties and constraints. No additional axioms or distinguishing features are specified beyond its hierarchical relationship.\nAxiom: {'subClassOf': ['DaySummary']}\nGenerated CQs:", "output": "Which specific summaries are encompassed within DaySummary, such as ADLSummary? | Is ADLSummary classified under the broader group of DaySummary types? | What higher-level categories include ADLSummary? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExcessiveNapProblem\nDescription: ExcessiveNapProblem is defined as a subclass of NappingProblem. It represents a specific type of napping issue characterized by an unusually high frequency or duration of naps, distinguishing it from other forms of napping problems.\nAxiom: {'subClassOf': ['NappingProblem']}\nGenerated CQs:", "output": "Is ExcessiveNapProblem classified under the broader group of NappingProblem? | What are the direct superclasses associated with ExcessiveNapProblem? | Which specific types of NappingProblem encompass ExcessiveNapProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FailureToPrepareMeal\nDescription: FailureToPrepareMeal is defined as a subclass of MealProblem, representing a specific type of problem wherein a meal is not successfully prepared. All instances of FailureToPrepareMeal are, by definition, also considered instances of MealProblem, aligning this class within the broader context of meal-related issues.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "Which broader classes encompass FailureToPrepareMeal? | Does FailureToPrepareMeal fall under the category of MealProblem? | What types of issues are included as subclasses of MealProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InappropriateMealDuration\nDescription: InappropriateMealDuration is defined as a subclass of MealProblem. This class represents meal-related issues specifically concerning the duration of meals. Any instance of InappropriateMealDuration is inherently a type of MealProblem, indicating that problems related to the amount of time spent during meals fall under this category.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "Which specific problems are encompassed by the general class MealProblem, including InappropriateMealDuration? | Is InappropriateMealDuration classified under the broader category of MealProblem? | To which overarching problem categories does InappropriateMealDuration pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InappropriateMealLocation\nDescription: InappropriateMealLocation is a subclass of MealProblem. This class represents issues or problems specifically related to unsuitable or improper locations for meals. Every instance of InappropriateMealLocation is also considered a type of MealProblem, highlighting its role in categorizing location-based meal issues.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "Is InappropriateMealLocation categorized under the broader class of MealProblem? | Which types are classified as more specific instances of MealProblem, including InappropriateMealLocation? | To which higher-level categories does InappropriateMealLocation belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterruptedMeal\nDescription: InterruptedMeal is a subclass of MealProblem, indicating that it represents a specific type of issue arising during a meal. Members of this class are characterized as meal-related problems where the meal is disrupted or not completed as intended. This formalization ensures that any instance of InterruptedMeal also qualifies as a MealProblem, distinguishing it from other meal-related issues by its defining feature of interruption.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "Which problem types encompass InterruptedMeal as a more specific instance? | What categories represent the superclass of InterruptedMeal? | Does InterruptedMeal belong to the broader classification of MealProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MissedMeal\nDescription: MissedMeal is defined as a subclass of MealProblem, meaning it represents a specific type of problem related to meals. Any instance of MissedMeal is, by definition, also an instance of MealProblem. This classification is used to denote situations where a meal is not consumed as expected.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "output": "What broader classifications does MissedMeal fall under within the ontology? | Which problems are subclasses of MealProblem, specifically including MissedMeal? | Is MissedMeal categorized as a kind of MealProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FragmentedSleepProblem\nDescription: FragmentedSleepProblem is a subclass of InterruptedSleepProblem, representing a specific type of sleep disturbance characterized by sleep fragmentation. This condition involves frequent interruptions or arousals during sleep, leading to broken or non-continuous sleep.\nAxiom: {'subClassOf': ['InterruptedSleepProblem']}\nGenerated CQs:", "output": "Is FragmentedSleepProblem categorized as a type of InterruptedSleepProblem? | Which specific sleep problems are classified under InterruptedSleepProblem, such as FragmentedSleepProblem? | What broader sleep problem categories encompass FragmentedSleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nocturia\nDescription: Nocturia is defined as a subclass of InterruptedSleepProblem. Individuals with nocturia typically experience interrupted sleep due to visiting the bathroom more than twice during the night. This classification formalizes nocturia as a specific type of sleep disturbance characterized by frequent nighttime urination.\nAxiom: {'subClassOf': ['InterruptedSleepProblem']}\nGenerated CQs:", "output": "Is Nocturia classified as a kind of InterruptedSleepProblem? | Which sleep problems are considered subtypes of InterruptedSleepProblem, such as Nocturia? | What broader problem categories include Nocturia among their subclasses? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HighStressLevel\nDescription: HighStressLevel is defined as a subclass of MoodProblem, indicating that all individuals classified as HighStressLevel are also considered to have a mood-related problem. This formalization groups HighStressLevel within the broader category of mood issues for more precise reasoning and classification. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['MoodProblem']}\nGenerated CQs:", "output": "Is HighStressLevel classified under the broader group of MoodProblem? | What higher-level categories does HighStressLevel fall under within the context of mood problems? | Which mood-related issues encompass HighStressLevel as a specific case? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SelfReportedLowMood\nDescription: SelfReportedLowMood is defined as a subclass of MoodProblem, indicating that all individuals classified under SelfReportedLowMood are also considered types of MoodProblem. This formalization implies that SelfReportedLowMood represents a specific form or instance of mood problem, characterized by being self-reported rather than externally assessed.\nAxiom: {'subClassOf': ['MoodProblem']}\nGenerated CQs:", "output": "Which conditions are categorized as more specific forms of MoodProblem, such as SelfReportedLowMood? | Does SelfReportedLowMood fall under the broader classification of MoodProblem? | To which overarching classes does SelfReportedLowMood pertain within the mood domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientAccelerometerCounts\nDescription: InsufficientAccelerometerCounts is defined as a subclass of ExerciseProblem. This class represents a specific type of exercise problem where the measured accelerometer counts are lower than required or expected levels, indicating an issue with the quantity or quality of motion captured during exercise activities.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "output": "Which more specific problems are encompassed by ExerciseProblem, such as InsufficientAccelerometerCounts? | Is InsufficientAccelerometerCounts classified under the broader category of ExerciseProblem? | What higher-level categories include InsufficientAccelerometerCounts as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ShortStrideLength\nDescription: ShortStrideLength is defined as a subclass of ExerciseProblem. This indicates that it represents a specific type of issue encountered during exercise, categorized under general exercise problems. No further constraints or distinguishing characteristics are specified.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "output": "What specific types fall under the category of ExerciseProblem, including ShortStrideLength? | Is ShortStrideLength classified as a type of ExerciseProblem? | Which higher-level categories encompass ShortStrideLength as a member? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SlowWalkSpeed\nDescription: SlowWalkSpeed is defined as a subclass of ExerciseProblem, indicating that it represents a specific type of problem or difficulty related to walking at a slow speed. Members of this class are considered instances where an individual's slow walking speed is identified as an exercise-related issue.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "output": "Which higher-level classes include SlowWalkSpeed as a subordinate concept? | What specific subtypes fall under ExerciseProblem, such as SlowWalkSpeed? | Is SlowWalkSpeed classified as a type of ExerciseProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientFaceToFaceInteraction\nDescription: InsufficientFaceToFaceInteraction is defined as a subclass of SocialProblem. This class represents social problems that arise specifically from a lack of direct, in-person interactions between individuals. Any instance of InsufficientFaceToFaceInteraction is, by definition, also an instance of SocialProblem, indicating its relevance within the broader context of social issues.\nAxiom: {'subClassOf': ['SocialProblem']}\nGenerated CQs:", "output": "Is InsufficientFaceToFaceInteraction categorized as a specific type of SocialProblem? | Which more general classifications include InsufficientFaceToFaceInteraction within their scope? | What kinds of SocialProblem encompass InsufficientFaceToFaceInteraction as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientTelephoneInteraction\nDescription: InsufficientTelephoneInteraction is defined as a subclass of SocialProblem. This means that every instance of InsufficientTelephoneInteraction is also an instance of SocialProblem, situating it within the broader category of issues impacting social well-being. No further property restrictions or disjointness axioms are specified, so its definition relies solely on its classification as a type of social problem.\nAxiom: {'subClassOf': ['SocialProblem']}\nGenerated CQs:", "output": "Which specific social problems include InsufficientTelephoneInteraction as a subtype? | What are the more general categories that encompass InsufficientTelephoneInteraction? | Is InsufficientTelephoneInteraction classified under the broader category of SocialProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterruptedSleepProblem\nDescription: InterruptedSleepProblem is defined as a subclass of SleepProblem, indicating that every instance of InterruptedSleepProblem is also an instance of SleepProblem. This class characterizes sleep issues specifically involving interruptions or disturbances during sleep, distinguishing it from other types of sleep problems.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "To which parent classes is InterruptedSleepProblem associated? | What types of SleepProblem are defined, and does this include InterruptedSleepProblem? | Does InterruptedSleepProblem fall under the general classification of SleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NappingProblem\nDescription: NappingProblem is defined as a subclass of SleepProblem, indicating that any instance classified as a NappingProblem is also recognized as a SleepProblem. This class formalizes issues specifically related to napping, distinguishing it from other types of sleep problems.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "What are all the more specific problem types that fall under SleepProblem, including NappingProblem? | Which upper-level categories encompass NappingProblem? | Is NappingProblem categorized under the broader class of SleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeriodicLimbMovement\nDescription: PeriodicLimbMovement is defined as a subclass of SleepProblem, indicating that every instance of PeriodicLimbMovement is also considered a type of sleep problem. This class captures disturbances involving repetitive limb movements during sleep, aligning with the broader classification of sleep-related disorders.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "What are the parent categories associated with PeriodicLimbMovement? | Which specific types of SleepProblem include PeriodicLimbMovement? | Is PeriodicLimbMovement classified under the broader category of SleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepDurationProblem\nDescription: SleepDurationProblem is defined as a subclass of SleepProblem. Members of this class experience issues related specifically to sleep duration. According to the current description, this class is characterized by individuals whose sleep duration is less than 7 hours. This formalization ensures that all instances of SleepDurationProblem represent cases where insufficient sleep time is the primary issue.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "Which types of sleep issues are classified as more specific than SleepProblem, such as SleepDurationProblem? | To what higher-level groups does SleepDurationProblem belong within the ontology? | Is SleepDurationProblem categorized under the broader class of SleepProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepEfficiencyProblem\nDescription: SleepEfficiencyProblem is a subclass of SleepProblem, referring specifically to cases where an individual's sleep efficiency is less than 85%. This classification distinguishes SleepEfficiencyProblem from other sleep-related issues by focusing on reduced efficiency in sleep, as formally defined by the subclass axiom and supported by the given comment.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "Which subclasses are encompassed by SleepProblem, such as SleepEfficiencyProblem? | Does SleepEfficiencyProblem fall under the broader classification of SleepProblem? | What higher-level categories are associated with SleepEfficiencyProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepLatencyProblem\nDescription: SleepLatencyProblem is a subclass of SleepProblem, representing a specific type of sleep issue. Members of this class are characterized by experiencing sleep latency (the time taken to fall asleep) exceeding 30 minutes. This definition situates SleepLatencyProblem within the broader category of sleep-related disorders, with a focus on delayed sleep onset.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "output": "Which more specific problems are categorized within SleepProblem, such as SleepLatencyProblem? | Does SleepLatencyProblem fall under the broader classification of SleepProblem? | What higher-level categories does SleepLatencyProblem pertain to in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MealProblem\nDescription: MealProblem is defined as a subclass of ADLProblem, indicating that it represents a specific kind of difficulty or issue related to Activities of Daily Living (ADL). Any instance of MealProblem is also an instance of ADLProblem, inheriting its characteristics and properties, but is used to specifically denote problems associated with meal-related activities.\nAxiom: {'subClassOf': ['ADLProblem']}\nGenerated CQs:", "output": "Which problem types are more specific instances of ADLProblem, such as MealProblem? | To which higher-level classifications is MealProblem associated within the context of ADLProblem? | Does MealProblem fall under the overarching category of ADLProblem? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodQuestionnaire\nDescription: MoodQuestionnaire is defined as a subclass of Questionnaire. This class represents questionnaires designed specifically to assess or measure mood-related aspects of an individual. All MoodQuestionnaire instances inherit the general characteristics of Questionnaire, while focusing on evaluating emotional or affective states.\nAxiom: {'subClassOf': ['Questionnaire']}\nGenerated CQs:", "output": "Is MoodQuestionnaire classified under the broader group of Questionnaire? | What higher-level categories encompass MoodQuestionnaire? | Which questionnaire types are more specific than Questionnaire, for example, MoodQuestionnaire? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepQuestionnaire\nDescription: SleepQuestionnaire is defined as a subclass of Questionnaire. This means every SleepQuestionnaire is a type of Questionnaire, typically designed to assess or gather information related to sleep patterns, habits, or disorders. No additional restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Questionnaire']}\nGenerated CQs:", "output": "What are the direct parent classes of SleepQuestionnaire in the ontology? | Is SleepQuestionnaire categorized under the broader class of Questionnaire? | Which types of Questionnaire include SleepQuestionnaire as a specific example? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:LongNap\nDescription: event:LongNap is a class characterized by the requirement that all its instances have the property ‘highlight’ set to true. This means every long nap event is marked as highlighted, distinguishing it from other types of events that may not have this property. There are no additional subclass, disjointness, or other property axioms specified.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "output": "Is the highlight property of a LongNap event universally constrained to the value true? | Does every LongNap event necessarily have the highlight property set to true? | Can a LongNap event exist without having the highlight property valued as true? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NapAfterLunch\nDescription: event:NapAfterLunch is a class characterized by having the property highlight with a required value of true for all its instances. This means every instance of event:NapAfterLunch must be associated with the property highlight set to true, signifying its notable or emphasized status within a given context. No other description is currently provided, so the class is defined solely by this property restriction.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "output": "Must every instance of NapAfterLunch have the property 'highlight' with the value true? | Is it required that NapAfterLunch events are always associated with a 'highlight' property set to true? | Can a NapAfterLunch event exist without possessing 'highlight' equal to true? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NightKitchenVisit\nDescription: event:NightKitchenVisit is a class characterized by the property restriction that any instance must have the attribute 'highlight' with a value of true. This means that all individuals classified under event:NightKitchenVisit are specifically marked or emphasized via the 'highlight' property. In the absence of additional superclasses or disjointness, this class is primarily defined by this property restriction.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "output": "Is it required for every NightKitchenVisit event to have the property ‘highlight’ set to true? | Are all instances of NightKitchenVisit characterized by the property ‘highlight’ having the value true? | Does the ontology restrict the ‘highlight’ property of NightKitchenVisit events so that only those with value true are permitted? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NightLivingRoomVisit\nDescription: event:NightLivingRoomVisit is a class characterized by the property restriction that every instance must have the property 'highlight' with the value 'true'. This formalization ensures that any individual classified as event:NightLivingRoomVisit is specifically marked as highlighted, indicating its special significance or prominence.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "output": "Is it possible for any NightLivingRoomVisit event to exist without the highlight property being true? | Must every NightLivingRoomVisit event have the highlight property set to true? | Are all NightLivingRoomVisit events required to entail highlight equals true as a property restriction? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Problem\nDescription: Problem is a class characterized by the existence of at least one possible contributing factor, which must be an instance of event:Event. This means that any individual classified as a Problem is associated with one or more events identified as potential factors contributing to the occurrence of the problem.\nAxiom: {'propertyRestrictions': ['[possibleContributingFactor only event:Event]']}\nGenerated CQs:", "output": "Does a problem necessarily have at least one possible contributing factor that is an event? | Is it required for every instance of Problem to be associated with some event as a possible contributing factor? | Can a problem exist without having any event identified as a possible contributing factor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExerciseSummary\nDescription: ExerciseSummary is a subclass of DaySummary that represents a summary record of an exercise session. Each instance is characterized by exactly one value for strideLength (xsd:double), walkSpeed (xsd:double), distanceTravelled (xsd:double), heartRate (xsd:double), exerciseIntensity (literal), accelerometerCountsPerMinute (xsd:int), and exerciseStartTime (time:Instant). Additionally, exerciseDuration is associated only with values of type time:DurationDescription. These property restrictions ensure every ExerciseSummary captures precise and comprehensive data on exercise metrics within the context of a single day.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[exerciseStartTime only time:Instant]', '[distanceTravelled only xsd:double]', '[strideLength exactly 1 xsd:double]', '[exerciseDuration only time:DurationDescription]', '[walkSpeed exactly 1 xsd:double]', '[heartRate only xsd:double]', '[heartRate exactly 1 xsd:double]', '[walkSpeed only xsd:double]', '[exerciseIntensity exactly 1]', '[exerciseStartTime exactly 1 time:Instant]', '[strideLength only xsd:double]', '[distanceTravelled exactly 1 xsd:double]', '[accelerometerCountsPerMinute exactly 1 xsd:int]', '[exerciseIntensity only rdfs:Literal]', '[accelerometerCountsPerMinute only xsd:int]', '[exerciseDuration exactly 1 time:DurationDescription]']}\nGenerated CQs:", "output": "Is every instance of ExerciseSummary required to have exactly one value for the property exerciseDuration of type DurationDescription? | Can an ExerciseSummary have more than one or fewer than one exerciseDuration specified? | Does ExerciseSummary allow any value for exerciseDuration other than exactly one DurationDescription? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodSummary\nDescription: MoodSummary is defined as a subclass of DaySummary. Each instance of MoodSummary is characterized by having some association with physical hygiene and some involvement in discussion. It must have exactly one value for the property numberOfSocialInteractions, and this value must be of the integer data type. Additionally, the stressLevel property, if present, is restricted to literal values. This formalization ensures that MoodSummary captures daily summaries with a focus on physical hygiene, social interactions, discussion involvement, and reported stress levels, following specified data type constraints.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[physicalHygiene some owl:Thing]', '[numberOfSocialInteractions exactly 1 xsd:int]', '[numberOfSocialInteractions only xsd:int]', '[stressLevel only rdfs:Literal]', '[involvementInDiscussion some owl:Thing]', '[stressLevel exactly 1]']}\nGenerated CQs:", "output": "Is it required that each MoodSummary instance is associated with exactly one stressLevel? | Can a MoodSummary have more or fewer than one value for the property stressLevel? | Does the ontology restrict MoodSummary to have a single, unique stressLevel per instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepSummary\nDescription: SleepSummary is defined as a subclass of DaySummary, representing a summary of sleep-related metrics associated with a particular day. Each SleepSummary instance is required to have exactly one value for the following properties: totalDurationOfNaps (xsd:int), sleepBedTime (xsd:dateTime), duration (xsd:int), sleepEfficiency (xsd:double), sleepMovementIndex (xsd:double), numberOfNaps (xsd:int), numberOfAwakenings (xsd:int), wakeUpTime (xsd:dateTime), lightLevel (xsd:string), sleepTime (xsd:dateTime), sleepLatency (xsd:int), and numberOfArousals (xsd:int). Additionally, each property is restricted to its specified datatype, such as integers for counts and durations, doubles for efficiency and movement index, strings for light level, and dateTime for time-related events. This formalization ensures a consistent and complete record of sleep characteristics for each instance.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[totalDurationOfNaps exactly 1 xsd:int]', '[sleepBedTime exactly 1 xsd:dateTime]', '[duration only xsd:int]', '[sleepEfficiency exactly 1 xsd:double]', '[sleepMovementIndex only xsd:double]', '[duration exactly 1 xsd:int]', '[sleepMovementIndex exactly 1 xsd:double]', '[numberOfNaps only xsd:int]', '[totalDurationOfNaps only xsd:int]', '[numberOfNaps exactly 1 xsd:int]', '[numberOfArousals only xsd:int]', '[numberOfAwakenings exactly 1 xsd:int]', '[wakeUpTime only xsd:dateTime]', '[numberOfBedExits only xsd:int]', '[lightLevel only xsd:string]', '[sleepTime exactly 1 xsd:dateTime]', '[sleepBedTime only xsd:dateTime]', '[numberOfAwakenings only xsd:int]', '[lightLevel exactly 1 xsd:string]', '[sleepLatency exactly 1 xsd:int]', '[sleepEfficiency only xsd:double]', '[sleepLatency only xsd:int]', '[numberOfArousals exactly 1 xsd:int]', '[sleepTime only xsd:dateTime]', '[wakeUpTime exactly 1 xsd:dateTime]', '[numberOfBedExits exactly 1 xsd:int]']}\nGenerated CQs:", "output": "Is it required that a SleepSummary must have exactly one value for the property numberOfBedExits? | Can a SleepSummary record more or fewer than one numberOfBedExits, or must it always be exactly one? | Does every instance of SleepSummary necessarily include a single numberOfBedExits value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialSummary\nDescription: SocialSummary is defined as a subclass of DaySummary that records an individual’s daily social activities with specific constraints. Each SocialSummary must have exactly one integer-valued numberOfSocialInteractions, one integer-valued numberOfFaceToFaceConversations, one integer-valued numberOfPhoneConversations, and one integer-valued numberOfCommunicativeAttempts. All these properties are restricted to integer values (xsd:int), ensuring data consistency and precise quantification of daily social behaviors.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[numberOfSocialInteractions only xsd:int]', '[numberOfFaceToFaceConversations only xsd:int]', '[numberOfPhoneConversations exactly 1 xsd:int]', '[numberOfCommunicativeAttempts exactly 1 xsd:int]', '[numberOfCommunicativeAttempts only xsd:int]', '[numberOfSocialInteractions exactly 1 xsd:int]', '[numberOfFaceToFaceConversations exactly 1 xsd:int]', '[numberOfPhoneConversations only xsd:int]']}\nGenerated CQs:", "output": "Is every instance of SocialSummary required to have the numberOfPhoneConversations property assigned only values of type integer? | Can the property numberOfPhoneConversations for SocialSummary ever be a value other than an integer? | Does the SocialSummary class restrict numberOfPhoneConversations exclusively to integer values? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EatingSummary\nDescription: EatingSummary is defined as a subclass of ADLSummary. Individuals of this class have the following property constraints: any eatingLocation associated with an EatingSummary must refer only to instances of event:Place, and each EatingSummary must have exactly one eatingDuration, which is of type time:DurationDescription. This formalization ensures that each EatingSummary uniquely specifies the place and precisely one duration for the eating activity.\nAxiom: {'subClassOf': ['ADLSummary'], 'propertyRestrictions': ['[eatingLocation only event:Place]', '[eatingDuration exactly 1 time:DurationDescription]', '[eatingDuration only time:DurationDescription]', '[eatingLocation exactly 1 event:Place]']}\nGenerated CQs:", "output": "Is it mandatory for every EatingSummary to reference exactly one eatingLocation of type event:Place? | Can an EatingSummary ever refer to more than one or fewer than one eatingLocation? | Does each EatingSummary necessarily associate with a single event:Place as its eating location? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DaySummary\nDescription: DaySummary is a class characterized by having exactly one date (of type xsd:dateTime) and exactly one associated patient (of type event:Patient). Each instance of DaySummary is required to have at least one date value specified, ensuring a temporal context for the summary. This formalization enforces that a DaySummary always references a single patient and a single date.\nAxiom: {'propertyRestrictions': ['[date exactly 1 xsd:dateTime]', '[forPatient exactly 1 event:Patient]', '[date some xsd:dateTime]', '[forPatient some event:Patient]']}\nGenerated CQs:", "output": "Does every DaySummary necessarily reference at least one Patient via the forPatient property? | Is it required that any DaySummary instance be linked to a Patient through forPatient? | Can a DaySummary exist without being associated with a Patient by the forPatient relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eatingDuration\nDescription: The property \"eatingDuration\" has no explicitly defined characteristics or inverse property. Its domain is restricted to the class \"EatingSummary,\" indicating it describes aspects related to eating events. The property is a sub-property of \"time:hasDurationDescription,\" suggesting it inherits the semantics of specifying a duration. No explicit range is defined, leaving the range unspecific in this axiom.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['None'], 'subPropertyOf': ['time:hasDurationDescription'], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any class other than EatingSummary that can be the domain of 'eatingDuration'? | Can the property 'eatingDuration' be asserted for any entity that is not an EatingSummary? | What are the possible classes that 'eatingDuration' can have as its subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepTime\nDescription: The property \"sleepTime\" has no specified characteristics, domain, or range restrictions. It does not have any super-properties or inverse properties defined. Based on its name, \"sleepTime\" likely represents the time or duration related to an entity's sleep, but further constraints or intended usage are not specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'sleepTime' does not have a defined range? | Can the property 'sleepTime' be assigned to any class, or should its domain be defined? | What can be the range of the property 'sleepTime'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: lightLevel\nDescription: The property \"lightLevel\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional description or axiomatic restrictions are provided, suggesting its intended use is either unspecified or context-dependent within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'lightLevel' take any subject, since its domain is undefined? | Is it correct that the 'lightLevel' property has no assigned domain? | Can 'lightLevel' have a range constraint besides being unspecified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepBedTime\nDescription: The property \"sleepBedTime\" has no defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to represent the time at which an individual goes to bed for sleep, but no formal constraints or descriptions are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of values can be the range of the property 'sleepBedTime'? | Can any entity be associated with the 'sleepBedTime' property regardless of its type? | What kinds of entities can be subjects of the 'sleepBedTime' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfArousals\nDescription: The property \"numberOfArousals\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Based on its name, it is likely intended to represent the count or frequency of arousal events associated with an entity, but no formal constraints are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Should 'numberOfArousals' be restricted to a specific class as its domain? | What can be the domain of the property 'numberOfArousals'? | Is it correct that the property 'numberOfArousals' does not specify any range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfCommunicativeAttempts\nDescription: The property \"numberOfCommunicativeAttempts\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it likely represents a quantitative value indicating how many times an entity attempts communication. No further semantic restrictions are specified by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'numberOfCommunicativeAttempts' be associated with subjects of any type, given the absence of a specified domain? | What entities can be used as the value for the property 'numberOfCommunicativeAttempts'? | Is it correct that the property 'numberOfCommunicativeAttempts' does not have a defined domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfNaps\nDescription: The property \"numberOfNaps\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property and does not have an inverse property. The intended use of this property may be to associate an entity with the number of naps it takes, but no formal restrictions are currently imposed.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities are permitted to be the value of the property 'numberOfNaps'? | What types of entities, if any, can be the subject of 'numberOfNaps'? | Is it correct that the property 'numberOfNaps' does not restrict its range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: strideLength\nDescription: The property \"strideLength\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Its description and usage context should be clarified in the ontology, as no formal axioms currently constrain its application.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it valid for 'strideLength' to have no range defined? | Can 'strideLength' be used with subjects other than those in a specified class? | What possible entities can serve as the domain for the 'strideLength' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepEfficiency\nDescription: The property \"sleepEfficiency\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Its intended use is not further specified by axioms, indicating it may be used flexibly unless additional constraints are provided elsewhere in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can entities outside of any specified class be associated as the value of 'sleepEfficiency'? | Can 'sleepEfficiency' relate to entities other than those with a defined domain? | What types of values can be assigned as the range of the property 'sleepEfficiency'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfFaceToFaceConversations\nDescription: The property \"numberOfFaceToFaceConversations\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a subproperty or inverse of any other property. It is likely intended to represent the count of face-to-face conversations associated with an entity, but no further axiomatic constraints are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'numberOfFaceToFaceConversations' has no specified range? | What potential classes or entities can be the domain of 'numberOfFaceToFaceConversations'? | Is 'numberOfFaceToFaceConversations' required to have a specific class as its domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: endTime\nDescription: The property \"endTime\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. This suggests that \"endTime\" can be used flexibly to relate an entity to its corresponding end time, but the specific types of subjects and values are not constrained by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it valid for the property 'endTime' to have no specified range? | Is it correct that the property 'endTime' does not have a defined domain? | Can any resource, regardless of class, have an 'endTime' value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasValue\nDescription: The property \"hasValue\" has no specified domain, range, characteristics, or super-properties. It is not defined as an inverse of any other property. Based on the axiom, \"hasValue\" is a general-purpose property with unconstrained usage. Its intended meaning and constraints should be clarified within specific ontological contexts.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'hasValue' relate to any type of object as its value? | What kinds of entities can be the subject of the property 'hasValue'? | Is it correct that the property 'hasValue' does not have a specified range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: date\nDescription: The property \"date\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates that its intended usage and applicable types are not currently specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'date range' does not have a specified domain? | What possible entities can act as the range for the property 'date range'? | Could the property 'date' be associated with subjects of any class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfSocialInteractions\nDescription: The property \"numberOfSocialInteractions\" has no explicitly defined characteristics, domain, or range constraints, and is not specified as a sub-property or inverse of any other property. This suggests it can be used flexibly to associate any subject and object, though its intended purpose is to represent the count or quantity of social interactions related to an entity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'numberOfSocialInteractions' be associated with any particular type of value as its range? | What entities can act as the subject for the property 'numberOfSocialInteractions'? | Should the property 'numberOfSocialInteractions' be associated with any specific class as its domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepMovementIndex\nDescription: The property \"sleepMovementIndex\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Its use and meaning are unspecified in the ontology, as no descriptive information or axioms restrict or explain its application or value type.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it valid for 'sleepMovementIndex' to not specify a range? | Are there entities that should be explicitly in the range of 'sleepMovementIndex'? | What are the possible domains for the property 'sleepMovementIndex'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkSpeed\nDescription: The property \"walkSpeed\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to represent the walking speed of an entity, but no formal constraints or further description are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the 'walkSpeed' property take values of any type as its range? | What entities can serve as the range for the property 'walkSpeed'? | Is it correct that the property 'walkSpeed' does not specify a range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: forPatient\nDescription: The property \"forPatient\" has no explicitly defined domain, range, or characteristics. It does not specify any super-properties or inverse properties. Based on its name, it is intended to relate an entity or process to a patient, typically indicating that something is meant or designated for an individual receiving care.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'forPatient' have any value as its range? | What are the possible domain classes for the property 'forPatient'? | Is it correct that the property 'forPatient' does not specify any domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: accelerometerCountsPerMinute\nDescription: The property \"accelerometerCountsPerMinute\" has no specified domain, range, characteristics, super-properties, or inverse properties. It is designed to represent the number of counts detected by an accelerometer per minute but is not restricted to any particular subject or value type by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can be subjects of the 'accelerometerCountsPerMinute' property? | Is the property 'accelerometerCountsPerMinute' restricted to any particular domain? | Is it accurate that 'accelerometerCountsPerMinute' has no assigned domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: physicalHygiene\nDescription: The property \"physicalHygiene\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Its usage and scope are not further restricted by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'physicalHygiene' relate to instances of any class, or should its range be defined? | Can 'physicalHygiene' relate to entities of any type as its subject? | What can be the range of the property 'physicalHygiene'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: possibleContributingFactor\nDescription: The property \"possibleContributingFactor\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property of any other property. No inverse property is defined. This property is intended to relate entities to possible factors that may contribute to a particular situation or event, but its usage is not restricted to specific classes or value types.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'possibleContributingFactor' does not specify a domain? | Are there any restrictions on what can be the range of 'possibleContributingFactor'? | What entities can serve as the domain for the property 'possibleContributingFactor'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: distanceTravelled\nDescription: The property \"distanceTravelled\" has no specified characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and has no declared inverse property. Based on its name, it is likely intended to represent the distance an entity has moved or covered, but no formal constraints are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'distanceTravelled' does not have a specified range? | What possible types of values can serve as the range for 'distanceTravelled'? | What kinds of entities can serve as the subject for the property 'distanceTravelled'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasBeginning\nDescription: The property \"time:hasBeginning\" has no explicitly defined characteristics, domain, or range constraints, nor does it specify any super-properties or inverse properties. Based on its name, it is likely intended to relate a temporal entity to its starting point or beginning, but no formal axioms restrict its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What entities can serve as the domain for the property 'time:hasBeginning'? | Can the property 'time:hasBeginning' be associated with subjects of any type? | Can 'time:hasBeginning' have a range other than what is currently defined? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: totalDurationOfNaps\nDescription: The property \"totalDurationOfNaps\" currently has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is intended to represent the total duration of naps associated with an entity. However, without further axioms, its precise usage within the ontology remains unspecified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it valid for the property 'totalDurationOfNaps' to have no specified range? | What entities can serve as the domain for the property 'totalDurationOfNaps'? | Should 'totalDurationOfNaps' be restricted to values of a certain datatype or class as its range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepLatency\nDescription: The property \"sleepLatency\" has no defined domain, range, or formal characteristics, and lacks specification of super-properties or an inverse property. Its formal usage and intended meaning must be inferred from its name, which typically refers to the duration or interval between attempting to sleep and the onset of sleep. No additional restrictions or relationships are provided in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it accurate that the property 'sleepLatency' does not have a defined domain? | Is it correct that the property 'sleepLatency' does not have a defined range? | Are there any constraints on the range of 'sleepLatency', or can it be associated with any type of value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfPhoneConversations\nDescription: The property \"numberOfPhoneConversations\" has no explicitly defined characteristics, domain, or range restrictions, and is not declared as a sub-property or inverse of any other property. Its intended use is to represent the number of telephone conversations associated with an entity, but its application is unconstrained in the current specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'numberOfPhoneConversations' be associated with entities of any type as its range? | What types of values, if any, can be used as the range for the property 'numberOfPhoneConversations'? | Is it possible for 'numberOfPhoneConversations' to have a defined domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDurationDescription\nDescription: The property \"time:hasDurationDescription\" has no specified domain, range, characteristics, super-properties, or inverse properties. It is used to associate entities with their duration descriptions, but no additional constraints or relationships are imposed by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can be the subject of the property 'time:hasDurationDescription'? | Could 'time:hasDurationDescription' be used with values of any type, given it currently lacks a defined range? | What entities or data types can serve as the range for 'time:hasDurationDescription'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no explicitly defined domain, range, characteristics, super-properties, or inverse property. It is intended to represent the concept of duration, but no further constraints or relationships are specified by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'duration' refer to entities of any type as its range? | Are there entities that can act as the subject of 'duration', given its domain is undefined? | What can be the domain of the property 'duration'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfBedExits\nDescription: The property \"numberOfBedExits\" has no explicitly defined characteristics, domain, or range, and is not specified as a sub-property or inverse of any other property. Based on its name, it likely represents the quantity of times a bed exit occurs in a given context, but further specification of its scope and value type is not provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What can be the range of the property 'numberOfBedExits'? | Can 'numberOfBedExits' be associated with entities of any type, not restricted to a specific class? | Is it correct that the property 'numberOfBedExits' has no range specified? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: involvementInDiscussion\nDescription: The property \"involvementInDiscussion\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is intended to relate two entities in the context of participation or involvement in a discussion, but its usage is unconstrained by ontological axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that the property 'involvementInDiscussion' has no specified domain? | What types of entities can be the domain of the 'involvementInDiscussion' property? | Is it correct that the property involvementInDiscussion does not define any range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfAwakenings\nDescription: The property \"numberOfAwakenings\" has no defined domain, range, characteristics, super-properties, or inverse properties. It is intended to represent the number of times an awakening event occurs, but its usage is not currently constrained by axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it accurate that the property 'numberOfAwakenings' does not have a specified range? | Can 'numberOfAwakenings' be associated with any type of subject regardless of its class? | What are the possible ranges for the property 'numberOfAwakenings'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: heartRate\nDescription: The property \"heartRate\" has no specified domain, range, super-properties, or inverse properties, and lacks defined characteristics. Its intended use is to associate an entity with its heart rate, but no formal constraints on its usage are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'heartRate' be used with any type of subject, or are there implicit constraints? | Is it correct that the property 'heartRate' does not specify any range? | Is it correct that the property 'heartRate' does not have a defined domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stressLevel\nDescription: The property \"stressLevel\" has no defined domain or range restrictions, and no specified characteristics, super-properties, or inverse properties. This indicates that \"stressLevel\" can relate any subject to any object, with its precise usage intended to be determined by context or further specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can be the subject of the property 'stressLevel'? | What types of values can be used as the range for the property 'stressLevel'? | Is it correct that 'stressLevel' does not have a defined domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: wakeUpTime\nDescription: The property \"wakeUpTime\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate an entity to a time value indicating when waking up occurs, but no formal constraints or additional documentation are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of values can be used as the range for the 'wakeUpTime' property? | Is it correct that the 'wakeUpTime' property does not have a defined range? | Is it correct that 'wakeUpTime' has no specified domain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no specified domain or range restrictions and does not inherit from any super-property. It has no explicitly defined characteristics, nor is any inverse property specified. This property is intended to represent the beginning time of an event or process, though the exact usage context is unconstrained by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'startTime' point to values other than those specified as its range? | What kinds of entities can serve as the range for the property 'startTime'? | Is it correct that the property 'startTime' does not have a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseIntensity\nDescription: The property \"exerciseIntensity\" has no defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate an entity to a measure or classification of physical activity intensity, but no formal constraints or description are specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What types of entities can serve as the domain for the property 'exerciseIntensity'? | Are there entities that could be valid ranges for 'exerciseIntensity'? | Can 'exerciseIntensity' be associated with subjects outside of any defined class? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eatingLocation\nDescription: The property \"eatingLocation\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates that \"eatingLocation\" can relate any individuals without specific type constraints, and its intended semantics should be determined by its usage context.\nAxiom: {'characteristics': [], 'domain': ['EatingSummary'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for something other than an EatingSummary to have an eatingLocation? | Are there any instances of EatingSummary that do not have an eatingLocation? | What types of subjects are allowed to use the eatingLocation property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseStartTime\nDescription: The property \"exerciseStartTime\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property, nor does it have an inverse property. This property can be used flexibly without ontological constraints on its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['time:hasBeginning'], 'inverseOf': []}\nGenerated CQs:", "output": "Is exerciseStartTime considered a more specific form of time:hasBeginning? | Which properties are classified as subproperties of time:hasBeginning? | Does exerciseStartTime always entail the use of time:hasBeginning when describing an event? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseDuration\nDescription: The property \"exerciseDuration\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates that the property's usage is unrestricted by specific class or value constraints within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['time:hasBeginning'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every instance of the exerciseDuration property also an instance of time:hasBeginning? | Which properties are subproperties encompassed by time:hasBeginning in the ontology? | What superproperties does exerciseDuration have according to the property hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: highlight\nDescription: The property \"highlight\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is restricted to boolean values (xsd:boolean), indicating it is used to denote a true or false status for a given subject.\nAxiom: {'characteristics': [], 'domain': ['event:Event'], 'range': ['xsd:boolean'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any entity other than an Event that can be the subject of 'highlight'? | What types of individuals may appear as the domain of the 'highlight' property? | Must the subject of 'highlight' always be an Event? "}
