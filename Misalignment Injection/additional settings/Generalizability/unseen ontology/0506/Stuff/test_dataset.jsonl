{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalObject\nDescription: PhysicalObject is defined as a subclass of PhysicalEndurant, indicating that it inherits all characteristics of entities that persist through time while maintaining their identity. It is explicitly disjoint with Stuff, which means no individual can simultaneously be both a PhysicalObject and Stuff. This class represents discrete, countable entities as opposed to unstructured or undifferentiated substances.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology characterize the distinction between PhysicalObject and Stuff? | Is there any entity that can simultaneously be classified as both PhysicalObject and Stuff? | Which classes are specified as mutually exclusive with Stuff within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MixedStuff\nDescription: MixedStuff is defined as a subclass of Stuff, with the additional restriction that any instance must have at least two component parts, each of which is itself an instance of Stuff (expressed as having at least two 'hasPartStuff' relations to Stuff). MixedStuff is explicitly disjoint with PureStuff, ensuring no overlap between mixtures and pure substances.\n\nConceptually, MixedStuff captures the essence of mixtures as materials composed of variable proportions of distinct, observable components that can be physically separated. The classification is based on the nature and roles of the components, explicitly excluding cases such as different phases of the same substance (e.g., ice in water), which remain PureStuff. Colloids are considered MixedStuff only when composed of different kinds of Stuff, maintaining the requirement for distinct observable constituents.\nAxiom: {'subClassOf': ['Stuff', '(Stuff and [hasPartStuff min 2 Stuff])'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology define the distinction between MixedStuff and PureStuff? | Is there any instance that can belong to both MixedStuff and PureStuff? | Which classes are logically incompatible with PureStuff according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ContinuousMedium\nDescription: ContinuousMedium is defined as a subclass of StuffRole and is also known as dispersion medium. It is explicitly disjoint with DispersedPhase, ensuring that no individual can simultaneously belong to both classes. Members of ContinuousMedium are characterized by having a colloidFormingRelation to at least one DispersedPhase, reflecting their essential role in colloidal systems as the medium in which dispersed phases are distributed.\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': [], 'propertyRestrictions': ['[colloidFormingRelation some DispersedPhase]']}\nGenerated CQs:", "output": "What logical separation is defined between ContinuousMedium and DispersedPhase within the ontology? | Can an entity simultaneously be classified as both ContinuousMedium and DispersedPhase? | Which classes are explicitly stated as mutually exclusive with DispersedPhase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solute\nDescription: Solute is defined as a subclass of StuffRole and is explicitly disjoint from Solvent, ensuring that no entity can simultaneously be both a Solute and a Solvent. Formally, every Solute is related through the inverse of solutionFormingRelation to some Solvent, indicating its essential role in solution formation. Conceptually, a Solute is a substance that is dissolved in another substance (the Solvent).\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': [], 'propertyRestrictions': ['[inverseOf solutionFormingRelation some Solvent]']}\nGenerated CQs:", "output": "What is the formal distinction between Solute and Solvent in the ontology? | Is there any entity that can belong to both the Solute and Solvent classes? | Which entities or classes are explicitly specified as disjoint with Solute? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HeterogeneousMixture\nDescription: HeterogeneousMixture is a subclass of MixedStuff, formally disjoint from HomogeneousMixture, meaning no mixture can be both heterogeneous and homogeneous simultaneously. Members of this class are defined by having at least two different granule types (each being a Molecule or MultiMoleculeParticle) and consisting of a minimum of two distinct parts, each being either MixedStuff or PureStuff. Additionally, every HeterogeneousMixture exhibits exactly one instance of UnevenDistribution, ensuring that its components are not distributed uniformly. As described, a HeterogeneousMixture is a combination of different substances, often with visibly different particle sizes, which do not react chemically and can be separated by physical means (such as filtration). Unlike a homogeneous mixture, any portion of a heterogeneous mixture may differ in composition from the whole, unless special care is taken in selecting the portion.\nAxiom: {'subClassOf': ['MixedStuff'], 'disjointWith': [], 'propertyRestrictions': ['[hasGranuleType min 2 (Molecule or MultiMoleculeParticle)]', '[hasPartStuff min 2 (MixedStuff or PureStuff)]', '[hasStuffDistribution exactly 1 UnevenDistribution]']}\nGenerated CQs:", "output": "How are HeterogeneousMixture and HomogeneousMixture differentiated within the ontology? | Is any mixture classified as both HeterogeneousMixture and HomogeneousMixture simultaneously? | Which mixture types are specified as disjoint with HomogeneousMixture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalEndurant\nDescription: PhysicalEndurant is a subclass of Endurant, representing entities that persist through time while maintaining their identity. It is explicitly disjoint with Role, meaning no instance can simultaneously be a PhysicalEndurant and a Role. Additionally, PhysicalEndurant is equivalent to om-1:Phenomenon, indicating that these two classes share the exact same set of individuals. This class is used to capture enduring phenomena in ontological modeling, distinct from roles that entities might play.\nAxiom: {'subClassOf': ['Endurant'], 'disjointWith': [], 'equivalentClass': ['om-1:Phenomenon']}\nGenerated CQs:", "output": "What ontological separation is established between PhysicalEndurant and Role? | Is any entity allowed to be classified as both PhysicalEndurant and Role simultaneously? | Which classes are defined as mutually exclusive with Role in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StructuredPureStuff\nDescription: StructuredPureStuff is defined as a subclass of PureStuff and is disjoint with UnstructuredPureStuff, ensuring that no individual can be both StructuredPureStuff and UnstructuredPureStuff. Formally, StructuredPureStuff is equivalent to PureStuff that has granules exclusively of exactly one type of molecule. This class covers matter composed of a single molecular type (allowing for minor conformational variations or rare impurities), such as water (H₂O), table sugar, silica (SiO₂), or vitamin A. The synonym \"Compound\" applies here, reflecting the requirement that instances consist of precisely one molecular species, rather than just a single molecule.\nAxiom: {'subClassOf': ['PureStuff'], 'disjointWith': [], 'equivalentClass': ['(PureStuff and [hasGranuleType only Molecule] and [hasGranuleType exactly 1 Molecule])']}\nGenerated CQs:", "output": "How does the ontology define the connection between StructuredPureStuff and UnstructuredPureStuff? | Is there any instance classified under both StructuredPureStuff and UnstructuredPureStuff? | Which classes are stated as mutually exclusive with UnstructuredPureStuff? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Endurant\nDescription: Endurant is formally specified as a class disjoint with Perdurant, which ensures that no individual entity can be simultaneously classified as both an Endurant and a Perdurant. This distinction typically reflects the ontological separation between entities that persist wholly through time (Endurants, such as physical objects) and those that occur in or unfold over time (Perdurants, such as events or processes).\nAxiom: {'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology formally separate Endurant and Perdurant classes? | Is there any instance that can simultaneously be classified as both Endurant and Perdurant? | What other ontology classes are specified as disjoint with Perdurant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AbstractRegion\nDescription: AbstractRegion is defined as a subclass of Region. This indicates that every instance of AbstractRegion is also an instance of Region, inheriting all its characteristics. The class formalizes a conceptual or non-physical specialization of Region, but no additional constraints or distinctions are provided beyond its subsumption in the hierarchy.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "To what parent class does AbstractRegion pertain? | Is AbstractRegion encompassed within the wider class of Region? | Which subclasses fall under the class Region, including AbstractRegion? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalRegion\nDescription: PhysicalRegion is defined as a subclass of Region, indicating that every PhysicalRegion is, by definition, a type of Region. This formalization distinguishes PhysicalRegion as a specific conceptual or spatial area within the broader class of Region, with characteristics or properties that pertain to physical or tangible attributes.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "Which kinds of regions include PhysicalRegion as a specialized form? | What are the immediate superclasses of PhysicalRegion within the ontology? | Is PhysicalRegion classified as a specific type of Region? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: om-1:Quantity\nDescription: om-1:Quantity is defined as a subclass of Region. This means every om-1:Quantity is categorized within the broader class of Region, inheriting its general characteristics. No additional restrictions or differentiations are provided, so om-1:Quantity serves to represent a more specific concept or type of Region within the ontology.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "Which subclasses are defined under Region, such as om-1:Quantity? | Does om-1:Quantity fall under the general category of Region? | What higher-level concepts is om-1:Quantity classified as a member of? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmountOfStuff\nDescription: AmountOfStuff is defined as a subclass of PhysicalEndurant, representing entities that persist through time while maintaining their identity as physical particulars. According to the current description, it aligns with DOLCE's notion of \"amount of matter\" and applies exclusively to specific, individual entities (particulars) rather than universals or collections. This class captures the concept of a definite quantity of physical substance.\nAxiom: {'subClassOf': ['PhysicalEndurant']}\nGenerated CQs:", "output": "Which specific concepts are included as subclasses of PhysicalEndurant, such as AmountOfStuff? | Is AmountOfStuff classified under the broader category of PhysicalEndurant? | What are the higher-level categories to which AmountOfStuff is assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AssociationalColloid\nDescription: AssociationalColloid is defined as a subclass of Colloid. This class includes colloidal systems characterized by the association of amphiphilic molecules, such as hydrophobic/hydrophilic interactions. Typical examples are micellar colloids (e.g., soap solutions), where molecules form aggregates known as micelles. Properties specific to this class can include aggregation numbers—typically a range—reflecting the number of molecules per micelle, often determined by the critical micelle concentration.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "What are the parent categories for AssociationalColloid in the ontology? | Which types of Colloid include AssociationalColloid as a more specific instance? | Does AssociationalColloid fall under the broader category of Colloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DispersionColloid\nDescription: DispersionColloid is defined as a subclass of Colloid and represents the most common type among colloids, distinguishing it from other types within the Colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "What broader classes does DispersionColloid belong to? | Is DispersionColloid classified as a specific form of Colloid? | Which subclasses are encompassed by the concept of Colloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MolecularColloid\nDescription: MolecularColloid is defined as a subclass of Colloid, representing colloidal systems in which the constituent molecules are sufficiently large to exhibit the characteristic behaviors of particles with intermediate sizes, typical of other types of colloids. Examples include latex and other materials with large polymers, such as starchy substances. This classification emphasizes the particle size and molecular structure as distinguishing factors within the broader colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "Which specific subtypes of Colloid encompass MolecularColloid? | To what overarching categories does MolecularColloid pertain within the ontology? | Is MolecularColloid categorized under the broader class of Colloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Atom\nDescription: Atom is defined as a subclass of PhysicalObject, indicating that every atom is considered a physical entity within the ontology. This classification places atoms within the broader category of tangible objects, establishing their role as fundamental physical units that compose matter.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Does Atom fall under the category of PhysicalObject? | Which entities are more specific than PhysicalObject, such as Atom? | What broader classes does Atom belong to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ion\nDescription: Ion is defined as a subclass of PhysicalObject, meaning it represents a kind of physical entity. No further property restrictions, disjointness, or specific characteristics are asserted in the axioms, so the class encompasses any physical object identified as an ion—typically, an atom or molecule with a net electric charge due to the loss or gain of electrons.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Is an Ion classified as a type of PhysicalObject? | What overarching categories encompass Ion as a subordinate type? | Which entities are specified as subclasses under PhysicalObject, such as Ion? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MultiMoleculeParticle\nDescription: MultiMoleculeParticle is defined as a subclass of PhysicalObject, referring to a particle composed of multiple molecules, such as those found in suspensions or colloidal droplets (distinct from sub-atomic particles). This class is intended for cases where individual entities are aggregates of molecules, and, as noted in its annotation, is considered a pragmatic solution within the ontology structure rather than a rigorous chemical classification.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Does MultiMoleculeParticle fall under the broader class of PhysicalObject? | What are the more abstract categories to which MultiMoleculeParticle is assigned? | Which entities are categorized as types of PhysicalObject, specifically including MultiMoleculeParticle? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DispersedPhase\nDescription: DispersedPhase is defined as a subclass of StuffRole. It refers to the role played by a substance within the context of a colloidal system, specifically as the phase that is distributed throughout another phase (the ContinuousMedium). The relationship (colloidFormingRelation) exists between the DispersedPhase and the ContinuousMedium themselves, rather than their respective bearers (stuffs), emphasizing that simply combining the substance bearers does not suffice to form a colloid. Proper mixing is required to achieve a homogeneous colloidal mixture; the ability of a substance to serve as either dispersed phase or continuous medium depends on the specific system being formed.\nAxiom: {'subClassOf': ['StuffRole']}\nGenerated CQs:", "output": "Is DispersedPhase classified under the broader category of StuffRole? | Which roles are encompassed within StuffRole, including DispersedPhase? | What higher-level categories does DispersedPhase belong to? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solvent\nDescription: Solvent is defined as a subclass of StuffRole. It represents a substance in which another substance, known as the solute, is dissolved. Solvents are essential participants in solution-forming relations, acting as the medium that enables solutes to dissolve and sometimes facilitating various chemical reactions during the dissolution process. This formalization emphasizes the role-based nature of solvents within chemical systems.\nAxiom: {'subClassOf': ['StuffRole']}\nGenerated CQs:", "output": "What are the more general roles associated with Solvent? | Is Solvent classified under the broader category of StuffRole? | Which roles are encompassed by StuffRole, including Solvent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Drop\nDescription: Drop is defined as a subclass of Piece, representing a specific type of piece, such as a drop of blood. This class serves as an example to illustrate a distinct, often small and discrete, portion or quantity of a substance.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "Is Drop categorized under the broader class of Piece? | Which subclasses fall under the category of Piece, with Drop included? | What broader classes include Drop within their hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lump\nDescription: Lump is defined as a subclass of Piece, representing a specific type of piece. The class is exemplified by instances such as a \"lump of clay,\" illustrating that a lump is considered a particular form or configuration of a piece. This class serves as an example of how the concept of \"piece\" can be specialized.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "Which entities are specified as subtypes under Piece, such as Lump? | Is Lump classified as a type of Piece? | What broader classes encompass Lump within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Slice\nDescription: Slice is defined as a subclass of Piece, representing a specific type of piece. As indicated in the example, a Slice could refer to a slice of bread, illustrating that this class captures instances where something is cut or divided into thin, flat portions.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "What overarching types does Slice inherit from within the hierarchy? | Which subtypes fall under the category of Piece, including Slice? | Is Slice categorized under the broader class of Piece? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EvenDistribution\nDescription: EvenDistribution is defined as a subclass of AbstractRegion. This indicates that every instance of EvenDistribution is a type of abstract region, but with additional implied properties that distinguish it from other abstract regions. No further property restrictions, equivalence, or disjointness axioms are specified. The class likely represents distributions characterized by some notion of \"evenness\" or uniformity, although the specifics are not constrained by the given axiom.\nAxiom: {'subClassOf': ['AbstractRegion']}\nGenerated CQs:", "output": "Is EvenDistribution classified as a type within AbstractRegion? | What broader classes does EvenDistribution hierarchically fall under? | Which entities are direct specializations of AbstractRegion, such as EvenDistribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnevenDistribution\nDescription: UnevenDistribution is defined as a subclass of AbstractRegion. This indicates that every instance of UnevenDistribution is a specific kind of AbstractRegion, likely representing regions or segments where distribution is not uniform. No additional constraints or properties are specified, so this class primarily serves to differentiate non-uniform or irregular distributions within the broader category of abstract regions.\nAxiom: {'subClassOf': ['AbstractRegion']}\nGenerated CQs:", "output": "What kinds of specialized regions are encompassed by AbstractRegion, specifically including UnevenDistribution? | Is UnevenDistribution classified under the broader group of AbstractRegion? | To which higher-level categories does UnevenDistribution pertain within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gas\nDescription: Gas is defined as a subclass of StuffState. This classification indicates that Gas represents a particular state or condition in which a substance (stuff) can exist. Any individual classified as Gas inherits the general properties of StuffState, marking it as a type of physical state distinct from other possible states (such as solid or liquid).\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "Which higher-level classes encompass Gas? | What entities are categorized more specifically than StuffState, including Gas? | Is Gas classified as a specific type within the broader StuffState category? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Liquid\nDescription: liquid is defined as a subclass of StuffState, representing a specific physical state of matter. All instances of liquid must also be instances of StuffState, situating liquids within the broader classification of material states such as solid or gas. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "Which general categories in the ontology include Liquid as a member? | What other specific states are encompassed by StuffState besides Liquid? | Is Liquid classified under the broader category of StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solid\nDescription: Solid is defined as a subclass of StuffState, representing a particular state of matter. This class encompasses all entities that exist in the solid state, distinguishing them from other possible states such as liquid or gas. All instances of Solid inherit the characteristics of StuffState.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "Which specific states of stuff are categorized as subtypes of StuffState, such as Solid? | What are the general states that Solid is classified within? | Does Solid fall under the broader grouping of StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MicellarColloid\nDescription: MicellarColloid is defined as a subclass of AssociationalColloid. Although the formal axioms do not distinguish it further from AssociationalColloid, the usage of the term \"MicellarColloid\" reflects domain-specific terminology differences between food physics and colloid chemistry. Therefore, individuals of this class share all characteristics of AssociationalColloid, with differentiation rooted primarily in contextual nomenclature rather than ontological structure.\nAxiom: {'subClassOf': ['AssociationalColloid']}\nGenerated CQs:", "output": "What higher-level classes does MicellarColloid fall under within the ontology? | Which classes are specialized instances of AssociationalColloid, including MicellarColloid? | Is MicellarColloid classified under the broader group of AssociationalColloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Paste\nDescription: Paste is defined as a subclass of Suspension. It is characterized as a type of suspension with a reduced proportion of dispersion medium, in which the dispersed phase exhibits connectivity (i.e., the particles are linked or form a continuous structure). This differentiates pastes from other suspensions, where the dispersed phase may be unconnected and more freely suspended in the medium.\nAxiom: {'subClassOf': ['Suspension']}\nGenerated CQs:", "output": "What broader classifications is Paste associated with in the ontology? | Does Paste fall under the more general category of Suspension? | Which subclasses are encompassed by Suspension, specifically including Paste? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Role\nDescription: Role is defined as a subclass of Endurant, indicating that any individual classified as a Role is also necessarily an Endurant. This positions Role as an entity that persists through time while possibly undergoing changes. No further restrictions or disjointness conditions are specified for this class.\nAxiom: {'subClassOf': ['Endurant']}\nGenerated CQs:", "output": "Which entities are classified under Endurant, including Role? | Is Role a specialized type of Endurant? | What broader classes encompass Role within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Region\nDescription: Region is defined as a subclass of Abstract, indicating that it represents an abstract concept rather than a physical entity. This classification implies that instances of Region are used to denote conceptual or non-physical areas, rather than tangible, material locations.\nAxiom: {'subClassOf': ['Abstract']}\nGenerated CQs:", "output": "Which entities are defined as subclasses within Abstract, including Region? | Is Region a specific type classified under Abstract? | What broader categories encompass Region as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: om-1:Unit_of_measure\nDescription: om-1:Unit_of_measure is defined as a subclass of Abstract, indicating that it represents a conceptual or non-physical entity within the ontology. This class is intended to capture the abstract nature of measurement units used to quantify physical or abstract quantities, rather than representing tangible objects themselves.\nAxiom: {'subClassOf': ['Abstract']}\nGenerated CQs:", "output": "What higher-level classes does Unit_of_measure inherit from? | Which subclasses fall under the Abstract category, such as Unit_of_measure? | Is Unit_of_measure categorized under the broader class of Abstract? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: State\nDescription: State is defined as a subclass of Perdurant, indicating that it represents a temporally extended entity or occurrence. As a Perdurant, a State exists over a period of time, rather than as an instantaneous or static entity. No further restrictions or distinctions are specified in the current axioms.\nAxiom: {'subClassOf': ['Perdurant']}\nGenerated CQs:", "output": "Which concepts are classified as subtypes of Perdurant, including State? | Is State a specialized form of Perdurant? | To which general categories is State hierarchically related within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffState\nDescription: StuffState is defined as a subclass of State. It represents the general state in which a substance (or \"stuff\") exists, such as solid, liquid, or gas. While it is relevant for describing the phase of a specific material (e.g., water as ice, liquid, or vapor), the class also accommodates cases like colloids, where the states of mixed components are important. The focus of StuffState is on the state as a property of a substance in general, rather than on the particular state of an individual stuff. This provides a foundation for distinguishing and reasoning about the states of matter across different contexts, including mixtures and colloidal systems.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "Is StuffState categorized under the broader class of State? | Which subclasses fall under State, including StuffState? | What higher-level classes encompass StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Container\nDescription: Container is defined as a subclass of PhysicalEndurant, signifying that every container is a type of physical entity that persists through time while maintaining its identity. No additional property restrictions or distinguishing features are specified in the current axiom.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'propertyRestrictions': ['[inverseOf containedIn only (AmountOfStuff or PhysicalObject)]']}\nGenerated CQs:", "output": "Is every entity that contains a Container required to be either an AmountOfStuff or a PhysicalObject? | Can a Container be contained in something other than an AmountOfStuff or a PhysicalObject? | Does the property 'containedIn' for a Container necessarily exclude all classes except AmountOfStuff and PhysicalObject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Stuff\nDescription: Stuff is a class whose individuals are characterized by having only states of type StuffState via the hasState property, and each individual can have at most three such states. This ensures that every Stuff instance is related exclusively to StuffState instances, with an upper limit of three hasState relationships.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'propertyRestrictions': ['[hasState only StuffState]', '[hasState max 3 StuffState]']}\nGenerated CQs:", "output": "Is Stuff classified under the category of PhysicalEndurant? | What are the subclasses encompassed by PhysicalEndurant, including Stuff? | To which higher-level classes does Stuff belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Molecule\nDescription: Molecule is defined as a subclass of PhysicalObject. This indicates that every instance of Molecule is necessarily a physical object, inheriting all properties and constraints applicable to physical objects. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['PhysicalObject'], 'propertyRestrictions': ['[hasPart some Atom]']}\nGenerated CQs:", "output": "Is every molecule composed of at least one atom as a part? | Must a molecule necessarily possess the 'hasPart' relationship with an atom? | Can a molecule exist without having any atom as one of its parts? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bulk\nDescription: Bulk is defined as a subclass of Stuff, characterized by one of the following: it either possesses a granule type that is a Molecule or MultiMoleculeParticle, or it contains parts that are instances of Stuff. Additionally, all of its granule types (if any) are restricted to being Molecule or MultiMoleculeParticle, and all of its parts (if any) must also be instances of Stuff. This formalization ensures that Bulk consists exclusively of molecular or multi-molecular entities, or is composed from other Stuff, maintaining a strict part-whole and compositional structure.\nAxiom: {'subClassOf': ['Stuff', '(([hasGranuleType some (Molecule or MultiMoleculeParticle)] or [hasPartStuff some Stuff]) and ([hasGranuleType only (Molecule or MultiMoleculeParticle)] or [hasPartStuff only Stuff]))', '(MixedStuff or StructuredPureStuff)']}\nGenerated CQs:", "output": "Is Bulk classified under either MixedStuff or StructuredPureStuff categories? | Which concepts are more specific than the union of MixedStuff and StructuredPureStuff, such as Bulk? | Into which overarching groups does Bulk fit within the ontology: MixedStuff, StructuredPureStuff, or both? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PureStuff\nDescription: PureStuff is defined as equivalent to the intersection of Stuff with several precise property restrictions: it must have exactly one granule type, which is either an Atom, Molecule, or MultiMoleculeParticle; it must consist of exactly one part stuff, which must be either PureBulk, StructuredPureStuff, or UnstructuredPureStuff; and it must have exactly one stuff distribution, which must be an EvenDistribution. This formalization ensures that any instance of PureStuff is a homogeneous material entity, composed in a uniform way at the granule and part level, and evenly distributed throughout.\nAxiom: {'subClassOf': ['Stuff'], 'equivalentClass': ['(Stuff and [hasGranuleType exactly 1 (Atom or Molecule or MultiMoleculeParticle)] and [hasPartStuff exactly 1 (PureBulk or StructuredPureStuff or UnstructuredPureStuff)] and [hasStuffDistribution exactly 1 EvenDistribution])']}\nGenerated CQs:", "output": "Is Stuff a more general category that includes PureStuff? | Which entities are categorized as more specific instances under Stuff, such as PureStuff? | To what broader groupings does PureStuff logically belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Colloid\nDescription: Colloid is defined as a subclass of HomogeneousMixture. This means every colloid is a type of homogeneous mixture, sharing its properties, but may also have additional characteristics distinguishing it from other homogeneous mixtures. There are no specified equivalence relationships to other classes.\nAxiom: {'subClassOf': ['HomogeneousMixture'], 'equivalentClass': ['(HomogeneousMixture and [hasPartStuff exactly 1 (Stuff and [hasState some StuffState] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some StuffState] and [inverseOf srInheresIn some DispersedPhase])] and [hasNrOfPhase some DatatypeRestriction(xsd:int minInclusive 2)])']}\nGenerated CQs:", "output": "Is a Colloid equivalent to a homogeneous mixture that contains exactly one part of stuff in a continuous medium state and exactly one part of stuff in a dispersed phase state? | Does every Colloid necessarily have at least two phases according to the number of phases property? | Is a Colloid fully defined as the intersection of HomogeneousMixture and mixtures with specific parts characterized by their state and location in continuous medium and dispersed phase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solution\nDescription: Solution is defined as a type of homogeneous mixture that contains at least two different phases. Each solution must have at least two component parts: one part functioning as a solute and the other as a solvent. Both the solute and solvent are classified as \"stuff\" that consists exclusively of granules of type atom, ion, or molecule. This formalization ensures that a solution, by definition, is made up of distinct solute and solvent entities, each inhering in \"stuff\" with specific granule types, and the overall mixture must exhibit at least two phases.\nAxiom: {'subClassOf': ['HomogeneousMixture'], 'equivalentClass': ['(HomogeneousMixture and [hasPartStuff some (Stuff and [inverseOf srInheresIn some Solute] and [hasGranuleType only (Atom or Ion or Molecule)])] and [hasPartStuff some (Stuff and [inverseOf srInheresIn some Solvent] and [hasGranuleType only (Atom or Ion or Molecule)])] and [hasNrOfPhase some DatatypeRestriction(xsd:int minInclusive 2)])']}\nGenerated CQs:", "output": "Does Solution fall under the general group of HomogeneousMixture? | Which specific classes are categorized as HomogeneousMixture, such as Solution? | To what broader mixture types does Solution belong within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Distribution\nDescription: Distribution is a class defined by the property restriction that every instance must have at least one quale (quality or manner) that is either an EvenDistribution or an UnevenDistribution. This asserts that all individuals of Distribution are characterized by possessing a specific type of distributional quality, distinguishing them based on whether they exhibit evenness or unevenness in their distribution.\nAxiom: {'subClassOf': ['Quality'], 'propertyRestrictions': ['[hasQuale some (EvenDistribution or UnevenDistribution)]']}\nGenerated CQs:", "output": "Is Distribution classified under the broader group of Quality? | What specific kinds of Quality include Distribution as a subclass? | Which overarching categories encompass Distribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Emulsion\nDescription: Emulsion is defined as a subclass of DispersionColloid. This means every emulsion is formally classified as a specific type of dispersion colloid, inheriting all characteristics of dispersion colloids, but with additional distinguishing properties specific to emulsions. No additional equivalent class is specified.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does an Emulsion necessarily consist of exactly one part that is a liquid state Stuff inhering in the ContinuousMedium and exactly one part that is a liquid state Stuff inhering in the DispersedPhase? | Is Emulsion logically equivalent to the intersection of DispersionColloid and those having exactly one liquid Stuff in the ContinuousMedium and exactly one liquid Stuff in the DispersedPhase? | Can Emulsion be fully defined as a DispersionColloid with two and only two parts: each a liquid Stuff, where one part inheres in the ContinuousMedium and the other in the DispersedPhase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Foam\nDescription: Foam is defined as a subclass of DispersionColloid, indicating that every foam is a type of dispersion colloid. There are no additional equivalence constraints specified, so the class is characterized solely by its position in the subclass hierarchy.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])])']}\nGenerated CQs:", "output": "Does a Foam necessarily consist of exactly one part that is a Stuff with a gaseous state inhering in a DispersedPhase and exactly one part that is a Stuff with a liquid state inhering in a ContinuousMedium? | Is Foam defined as the intersection of DispersionColloid and systems comprising precisely one gaseous phase as the dispersed part and one liquid phase as the continuous medium? | Are all instances of Foam required to have both a single gas-phase dispersed component and a single liquid-phase continuous component as part stuffs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gel\nDescription: Gel is defined as a subclass of DispersionColloid, indicating that every gel is a type of dispersion colloid. There are no additional equivalence axioms specified, so gel is characterized solely by its classification within the hierarchy of colloidal systems.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])])']}\nGenerated CQs:", "output": "Must every Gel contain exactly one part that is a Stuff in the liquid state inhering in a DispersedPhase, and exactly one part that is a Stuff in the solid state inhering in a ContinuousMedium? | Is Gel equivalent to the intersection of DispersionColloid and those entities composed of precisely one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium? | Does the definition of Gel permit any hasPartStuff relationships other than one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LiquidAerosol\nDescription: LiquidAerosol is defined as a subclass of DispersionColloid. This means every instance of LiquidAerosol is necessarily an instance of DispersionColloid, inheriting all its characteristics. Currently, no additional equivalence or further property restrictions are specified for LiquidAerosol.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Is every LiquidAerosol necessarily composed of one part that is Stuff in a gaseous state inhering in a ContinuousMedium, and one part that is Stuff in a liquid state inhering in a DispersedPhase? | Is LiquidAerosol logically defined as an intersection of DispersionColloid with those entities having exactly one gaseous part in a ContinuousMedium and exactly one liquid part in a DispersedPhase? | Can a LiquidAerosol exist without meeting the precise conditions of having these two distinct parts each with the required state and inherence? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sol\nDescription: Sol is defined as a type of dispersion colloid that is equivalent to a system containing exactly one portion of solid-phase matter (stuff) existing in a dispersed phase, and exactly one portion of liquid-phase matter (stuff) existing in a continuous medium. This specification enforces that a sol consists of solid particles dispersed uniformly within a liquid, consistent with colloidal solution definitions in which solids are dispersed in a liquid continuous medium.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does Sol fall under the category of DispersionColloid? | Which specific types are encompassed by DispersionColloid, such as Sol? | What parent classes are associated with Sol in this context? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidAerosol\nDescription: SolidAerosol is defined as a subclass of DispersionColloid. This indicates that every SolidAerosol is a type of DispersionColloid, inheriting all properties of the parent class. No additional equivalence conditions or property restrictions are specified.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Is SolidAerosol equivalent to entities that are DispersionColloid and contain exactly one part that is solid in a dispersed phase, and exactly one part that is gas in a continuous medium? | Does every SolidAerosol necessarily have precisely one Gas component distributed in a continuous medium and one Solid component distributed in a dispersed phase? | Is the class SolidAerosol fully captured by the intersection of DispersionColloid and those entities with exactly one solid part in a dispersed phase and exactly one gas part in a continuous medium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidFoam\nDescription: SolidFoam is defined as a type of DispersionColloid that consists of exactly two distinct components: one component is a portion of matter (Stuff) in a gaseous state, which specifically exists as the dispersed phase; the other component is a portion of matter (Stuff) in a solid state, which specifically serves as the continuous medium. This equivalence ensures that every instance of SolidFoam is composed of a gas dispersed within a continuous solid matrix, precisely modeling the structure of solid foams (such as pumice or foam rubber).\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])])']}\nGenerated CQs:", "output": "Is SolidFoam categorized as a more specific instance under DispersionColloid? | Which subclasses are encompassed by DispersionColloid, specifically including SolidFoam? | To which upper-level categories does SolidFoam conceptually correspond within colloidal classifications? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidSol\nDescription: SolidSol is defined as a class equivalent to a type of dispersion colloid in which exactly two distinct solid substances are present: one solid substance inheres in the continuous medium, and the other solid substance inheres in the dispersed phase. This means that every instance of SolidSol consists of a colloidal system where both the dispersed phase and the continuous medium are solids, each represented as exactly one part with a solid state.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does SolidSol fall within the classification of DispersionColloid? | Which types are classified as subcategories under DispersionColloid, such as SolidSol? | To what broader classes does SolidSol pertain within the ontology's structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NumberOfPhases\nDescription: NumberOfPhases is a class whose individuals are required to have at least one value for the property hasDataValue, where this value must be a non-negative integer (as specified by the xsd:nonNegativeInteger datatype). This formalization ensures that every instance of NumberOfPhases is associated with a non-negative integer data value.\nAxiom: {'subClassOf': ['AbstractRegion'], 'propertyRestrictions': ['[hasDataValue some xsd:nonNegativeInteger]']}\nGenerated CQs:", "output": "Is NumberOfPhases categorized under the broader class of AbstractRegion? | Which entities are subclasses of AbstractRegion, such as NumberOfPhases? | What general classes does NumberOfPhases fall under within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HomogeneousMixture\nDescription: HomogeneousMixture is defined as a subclass of MixedStuff. The class is characterized by the restriction that its members may only have granule types of atom, ion, or molecule—meaning a homogeneous mixture is composed exclusively of these fundamental chemical units. This restriction ensures that any instance of HomogeneousMixture cannot contain granules of any other type, supporting the concept that such mixtures are uniform in composition at the granule level.\nAxiom: {'subClassOf': ['MixedStuff'], 'propertyRestrictions': ['[hasGranuleType only (Atom or Ion or Molecule)]', '[hasStuffDistribution exactly 1 EvenDistribution]']}\nGenerated CQs:", "output": "Must every HomogeneousMixture have exactly one hasStuffDistribution property value that is an EvenDistribution? | Is it required that a HomogeneousMixture cannot have more than one or fewer than one hasStuffDistribution, and that the distribution must be EvenDistribution? | Does any instance of HomogeneousMixture necessarily possess a single hasStuffDistribution of type EvenDistribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeastPortion\nDescription: LeastPortion is defined as a subclass of Portion, meaning every instance of LeastPortion is also an instance of Portion. No further distinguishing characteristics or constraints are specified by the current axioms.\nAxiom: {'subClassOf': ['Portion', 'not [hasPortion some Portion]']}\nGenerated CQs:", "output": "Which entities are classified as LeastPortion under the restriction of not having any associated Portion via hasPortion? | Does being a member of LeastPortion imply the absence of any hasPortion relationship to Portion? | What classes are included in the category of entities that do not possess any Portion through the hasPortion property, such as LeastPortion? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Piece\nDescription: Piece is defined as a subclass of Portion, meaning every instance of Piece is also an instance of Portion. There are no additional property restrictions or disjointness axioms specified, so Piece inherits all characteristics applicable to Portion without further specification.\nAxiom: {'subClassOf': ['Portion'], 'propertyRestrictions': ['[isSelfContainedScatteredPortionOf some AmountOfStuff]']}\nGenerated CQs:", "output": "Is every Piece necessarily a self-contained scattered portion of some AmountOfStuff? | Can a Piece exist without being a self-contained scattered portion of an AmountOfStuff? | Are there any instances where a Piece is not associated through isSelfContainedScatteredPortionOf with an AmountOfStuff? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Portion\nDescription: Portion is defined as a subclass of AmountOfStuff, indicating that every instance of Portion is also an instance of AmountOfStuff. There are no additional property restrictions or distinguishing axioms specified for this class.\nAxiom: {'subClassOf': ['AmountOfStuff'], 'propertyRestrictions': ['[portionOf some AmountOfStuff]']}\nGenerated CQs:", "output": "Is every Portion necessarily a portion of some AmountOfStuff? | Is it required for a Portion to be linked via 'portionOf' to at least one AmountOfStuff instance? | Can a Portion exist without being associated with an AmountOfStuff through the 'portionOf' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PureBulk\nDescription: PureBulk is defined as a subclass of PureStuff. This means every instance of PureBulk is also an instance of PureStuff, inheriting all its characteristics. No additional equivalence or unique property restrictions are specified for PureBulk.\nAxiom: {'subClassOf': ['PureStuff'], 'equivalentClass': ['(PureStuff and [hasGranuleType only MultiMoleculeParticle] and [hasGranuleType exactly 1 MultiMoleculeParticle])']}\nGenerated CQs:", "output": "Is PureBulk equivalent to the class of PureStuff that has exactly one granule type, and that granule type is only MultiMoleculeParticle? | Does every instance of PureBulk necessarily have only one granule type, which must be a MultiMoleculeParticle, and must also be PureStuff? | Are all PureBulk entities strictly those PureStuff individuals with hasGranuleType limited to exactly one occurrence of MultiMoleculeParticle? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnstructuredPureStuff\nDescription: UnstructuredPureStuff is defined as a class equivalent to the intersection of PureStuff, entities that have only atoms as their granule type, and entities that possess exactly one atom as their granule type. This means that every instance of UnstructuredPureStuff must be a PureStuff composed exclusively of a single atom, and cannot have any other type or number of granules.\nAxiom: {'subClassOf': ['PureStuff'], 'equivalentClass': ['(PureStuff and [hasGranuleType only Atom] and [hasGranuleType exactly 1 Atom])']}\nGenerated CQs:", "output": "Is UnstructuredPureStuff included as a specific type within PureStuff? | Which subclasses fall under the category of PureStuff, such as UnstructuredPureStuff? | To what higher-level groups does UnstructuredPureStuff pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidHeterogeneousMixture\nDescription: SolidHeterogeneousMixture is defined as a subclass of HeterogeneousMixture. This means every SolidHeterogeneousMixture is a type of HeterogeneousMixture, specifically characterized by its solid state, though no additional equivalence or further property restrictions are specified in the axioms.\nAxiom: {'subClassOf': ['HeterogeneousMixture'], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff min 2 (Stuff and [hasState some Solid])])']}\nGenerated CQs:", "output": "Is every SolidHeterogeneousMixture necessarily a HeterogeneousMixture that contains at least two parts composed of Stuff in the solid state? | Is the class SolidHeterogeneousMixture logically equivalent to the intersection of HeterogeneousMixture and mixtures having a minimum of two solid-state Stuff components? | Can SolidHeterogeneousMixture be defined as a HeterogeneousMixture with at least two constituent parts which are solid kinds of Stuff? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Suspension\nDescription: Suspension is formally defined as a subclass of entities possessing at least one granule type that is a Molecule and at least one granule type that is a MultiMoleculeParticle. It is equivalent to a heterogeneous mixture comprised of parts that meet two criteria: it contains some portion of liquid matter (continuous medium) and some portion of solid matter (dispersed phase). Each part of liquid or solid must inhere in their respective phases—liquid in the continuous medium and solid in the dispersed phase. This formalization captures the essential ontological features of a suspension as a heterogeneous mixture where solid particles are dispersed within a liquid medium.\nAxiom: {'subClassOf': ['([hasGranuleType some Molecule] and [hasGranuleType some MultiMoleculeParticle])', 'HeterogeneousMixture'], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff some (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff some (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does Suspension fall within the broader group of HeterogeneousMixture? | Which mixtures are classified as subtypes of HeterogeneousMixture, such as Suspension? | What are the higher-level mixture categories that encompass Suspension? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffRole\nDescription: StuffRole is a class whose members are characterized by the property restriction that they must inhere in some entity classified as Stuff; that is, every instance of StuffRole is related via the srInheresIn property to at least one instance of Stuff. This ensures that StuffRole is specifically tied to entities that inhere in the category of Stuff.\nAxiom: {'subClassOf': ['Role'], 'propertyRestrictions': ['[srInheresIn some Stuff]']}\nGenerated CQs:", "output": "Is StuffRole categorized as a more specific type within the broader concept of Role? | Which subtypes fall under the umbrella of Role, specifically including StuffRole? | What are the overarching classes to which StuffRole belongs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatterPortion\nDescription: The property \"scatterPortion\" represents a relationship between an original whole and a portion that was once a contiguous part of that whole but has become spatially or contextually separated over time. This property is a subproperty of \"hasProperPart\" and has \"scatteredPortionOf\" as its inverse. It has no explicitly defined domain or range restrictions. Typical examples include a slice of bread cut from a loaf or wine poured into a glass from a bottle. The property is useful for modeling portions that have been separated, with potential for further specialization according to whether the portion is associated with a container or not.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the ontological connection between the properties ‘scatterPortion’ and ‘scatteredPortionOf’? | If entity A scatterPortion B, does ontology entail that B scatteredPortionOf A? | Which property is defined as the inverse of ‘scatterPortion’ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: inheresIn\nDescription: The property \"inheresIn\" has no specified characteristics or super-properties. Its domain is restricted to the class \"Role,\" and its range is restricted to \"PhysicalEndurant.\" This indicates that \"inheresIn\" relates a Role to a PhysicalEndurant entity. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['Role'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'inheresIn' relate to anything other than a PhysicalEndurant as its object? | What types of entities are valid as the range for the property 'inheresIn'? | Is it possible for a value of 'inheresIn' to not be a PhysicalEndurant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasSelfContainedScatteredPortion\nDescription: The property \"hasSelfContainedScatteredPortion\" relates to entities such as lumps, puddles, slices, or other discrete pieces. It has no explicitly defined domain or range restrictions and no defined characteristics. It is a sub-property of \"scatterPortion\" and has \"isSelfContainedScatteredPortionOf\" as its inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['scatterPortion'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the connection between 'hasSelfContainedScatteredPortion' and 'isSelfContainedScatteredPortionOf' as defined in the ontology? | If entity A has a self-contained scattered portion B, does it follow that B is a self-contained scattered portion of A, according to the ontology? | Which property acts as the inverse of 'hasSelfContainedScatteredPortion'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPartStuff\nDescription: The property \"hasPartStuff\" lacks explicit domain and range constraints, and does not possess any special property characteristics. It is specified as a subproperty of \"hasProperPart\" and is the inverse of \"stuffPartOf\". Notably, its use implies that the related entities are distinct kinds of \"stuffs\", as the current description highlights a requirement for distinction between the entities involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse relationship established between ‘hasPartStuff’ and ‘stuffPartOf’ in the ontology? | If entity A has a part-stuff B via ‘hasPartStuff’, does that indicate that B is related to A through ‘stuffPartOf’? | Which object property is declared as the inverse of ‘hasPartStuff’ in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasContainedScatteredPortion\nDescription: The property \"hasContainedScatteredPortion\" is used to relate a container to scattered portions necessarily contained within it (e.g., water in a glass). It has no explicit domain or range restrictions and does not declare any specific property characteristics. It is a sub-property of \"scatterPortion\" and has \"isContainedScatteredPortionOf\" as its inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['scatterPortion'], 'inverseOf': []}\nGenerated CQs:", "output": "In what way are the properties 'hasContainedScatteredPortion' and 'isContainedScatteredPortionOf' related in the ontology? | If an entity A hasContainedScatteredPortion B, does it follow that B isContainedScatteredPortionOf A? | Which property is modeled as the inverse of 'hasContainedScatteredPortion' in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: solutionFormingRelation\nDescription: The property \"solutionFormingRelation\" relates a Solvent (domain) to a Solute (range) and is a sub-property of \"stuffFormingRelation.\" It has no additional property characteristics or specified inverse. This property is used to represent the chemical dissolution process, where one substance (the solute) is dissolved by another (the solvent).\nAxiom: {'characteristics': [], 'domain': ['Solvent'], 'range': [], 'subPropertyOf': ['stuffFormingRelation'], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'solutionFormingRelation' relate to anything other than a Solute as its object? | Is every entity used as the object in 'solutionFormingRelation' required to be a Solute? | What kinds of entities can appear as the range of the 'solutionFormingRelation' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: contiguousPortion\nDescription: The property \"contiguousPortion\" is defined as a sub-property of \"hasProperPart\" with no explicitly specified domain or range restrictions. It has no declared characteristics. The property has an inverse, \"isContiguousPortionOf,\" indicating a bidirectional relationship. This property is intended to relate an entity to one of its proper parts that is contiguous.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the object properties ‘contiguousPortion’ and ‘isContiguousPortionOf’ interconnected in the ontology? | If entity A is linked to entity B via ‘contiguousPortion’, does that entail that B is related to A through ‘isContiguousPortionOf’? | What object property is defined as the inverse of ‘contiguousPortion’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: instantiation\nDescription: The property \"instantiation\" is an object property with domain \"AmountOfStuff\" and range \"Stuff\", indicating that it relates particular amounts of matter to their corresponding type of stuff. This property is intentionally typed for exclusive use in scenarios where first- and second-order entities coexist in the ontology's TBox. For example, it connects a specific amount, such as \"1kg of gold\", to the general stuff \"Gold.\" It has no explicitly defined characteristics, super-properties, or inverse properties.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['Stuff'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is the domain of the property 'instantiation' restricted solely to 'AmountOfStuff'? | Are there any entities of type 'AmountOfStuff' that cannot be associated with the 'instantiation' property? | What are the possible domains for the property 'instantiation'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDataValue\nDescription: The property \"hasDataValue\" relates instances of the class \"Abstract\" to data values. Although its intended conceptual range is any data type, no range is currently specified due to technical limitations in expressing unrestricted datatypes. The property has no explicitly defined characteristics, super-properties, or inverse properties.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any class other than Abstract that can be the subject of the 'hasDataValue' property? | Can 'hasDataValue' be used with any entity that is not an instance of Abstract? | What classes are permitted as the domain of the 'hasDataValue' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPortion\nDescription: The property \"hasPortion\" is a sub-property of \"hasProperPart\" and has \"portionOf\" as its inverse. While there are no explicit domain or range restrictions or defined characteristics, \"hasPortion\" is intended to relate an entity to a part that consists of the same substance or kind as the whole. Practically, it represents portions or divisions of a material entity at a given instant; for example, different amounts of wine divided from a whole. The property is useful in representing naive chemistry, although continuous changes at the molecular level may challenge the strict philosophical notion of 'portion.'\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the logical connection between ‘hasPortion’ and ‘portionOf’ in the ontology? | If entity X hasPortion Y, does this infer that Y portionOf X? | Which property is defined as the inverse of ‘hasPortion’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPart\nDescription: The property \"hasPart\" does not have explicitly defined characteristics, domain, or range restrictions in its current axiom. It is specified as the inverse of the property \"partOf\" and has no super-properties. According to the existing description, \"hasPart\" may overlap with related notions like \"hasComponent\" and \"composedOf,\" with subtleties in the essentiality or accidental nature of parts in different contexts. Domain and range constraints, where relevant, are managed in the inverse property \"partOf.\" This property is intended for modeling part-whole relationships.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "How are the object properties ‘hasPart’ and ‘partOf’ connected as inverse properties within the ontology? | If entity A ‘hasPart’ entity B, does the ontology state that B is ‘partOf’ A? | Which property in the ontology is defined as the inverse of ‘hasPart’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasScatterStuffPart\nDescription: The property \"hasScatterStuffPart\" is defined as a sub-property of \"hasProperPart\" and has \"scatteredStuffPartOf\" as its inverse property. There are no explicitly specified characteristics, domain, or range restrictions for this property. It is intended to associate an entity with a scattered or distributed part of itself, aligning it with the mereological concept of proper parts but specifically for parts that are scattered.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties ‘hasScatterStuffPart’ and ‘scatteredStuffPartOf’ connected in the ontology? | If an entity X hasScatterStuffPart Y, does it follow that Y scatteredStuffPartOf X? | Which property is considered the inverse of ‘hasScatterStuffPart’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasProperPart\nDescription: The property \"hasProperPart\" has no explicitly defined characteristics, domain, or range restrictions. It is a sub-property of \"hasPart,\" indicating a hierarchical relationship. The inverse property is \"properPartOf,\" which relates an entity to its proper whole. This property is used to specify that one entity is a proper (non-identical) part of another.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the formal connection between the properties 'hasProperPart' and 'properPartOf' as defined in the ontology? | If an entity A has a proper part B, does the ontology entail that B is a proper part of A? | Which property is explicitly stated as the inverse of 'hasProperPart' in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasStuffDistribution\nDescription: The property \"hasStuffDistribution\" has no specified domain, range, characteristics, super-properties, or inverse properties. Based on its axioms, it is a generic property that can relate any type of entities without restriction. No additional description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'hasStuffDistribution' has no specified domain? | What kinds of entities can act as the subject when using the property 'hasStuffDistribution'? | Is it possible for the property 'hasStuffDistribution' to exist without a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stuffFormingRelation\nDescription: The property \"stuffFormingRelation\" relates individuals that are either ContinuousMedium, DispersedPhase, Solute, or Solvent. It has no explicit property characteristics, super-properties, or inverses. This property is used to represent relationships that characterize the formation or interactions among substances within a mixture, such as surface tension effects, molecular interactions (e.g., hydrogen bonding), or compositional ratios (e.g., the proportional amounts required to form a mixture like lemonade). Both the domain and range are restricted to the aforementioned substance types.\nAxiom: {'characteristics': [], 'domain': ['(ContinuousMedium or DispersedPhase or Solute or Solvent)'], 'range': ['(ContinuousMedium and DispersedPhase and Solute and Solvent)'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for 'stuffFormingRelation' to relate to an entity that is not a ContinuousMedium, DispersedPhase, Solute, or Solvent? | Are all possible ranges for 'stuffFormingRelation' restricted to ContinuousMedium, DispersedPhase, Solute, or Solvent? | Which types of entities can serve as the range for the property 'stuffFormingRelation'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: portionOf\nDescription: The property \"portionOf\" relates an entity of type AmountOfStuff or Stuff to another entity of the same type, representing a portion or part of the same kind of matter (e.g., a slice of cake to the cake, a glass of wine to the bottle of wine). The domain and range are both restricted to AmountOfStuff or Stuff. It is a sub-property of \"properPartOf\" and has no specified characteristics or inverse property. This property is intended for use with mass nouns or non-countable substances.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value used with the property 'portionOf' required to be either an AmountOfStuff or Stuff? | Can 'portionOf' have a range that is not AmountOfStuff or Stuff? | What entities are permitted as the range of the property 'portionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContainedScatteredPortionOf\nDescription: The property \"isContainedScatteredPortionOf\" relates instances of AmountOfStuff or Stuff to other instances of the same types, indicating that the subject is a portion that originated from a larger whole and currently requires a container. As a subproperty of \"scatteredPortionOf,\" it specifically captures the context where a portion, such as 'wine in a wine glass,' was part of a bulk amount, now separated and needing containment. No explicit property characteristics, inverse, or additional hierarchical relations are defined.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['scatteredPortionOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Does 'isContainedScatteredPortionOf' have a range other than AmountOfStuff or Stuff? | Can the property 'isContainedScatteredPortionOf' be used with values that are not instances of AmountOfStuff or Stuff? | What types of entities are permitted as the range for 'isContainedScatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatteredStuffPartOf\nDescription: The property \"scatteredStuffPartOf\" is a subproperty of \"properPartOf\" and relates instances of \"AmountOfStuff\" or \"Stuff\" to other instances within the same classes. It is intended to connect quantities or types of matter—typically those denoted by mass nouns in natural language (e.g., gold, milk, mayonnaise)—with their constituent ingredients that are of a different type (e.g., alcohol in wine, oil in mayonnaise, sugar in cake). The property does not specify domain or range characteristics beyond these classes and has no defined inverse. It also suggests a temporal dimension, where the part was once a contiguous proper part of the whole, but is now scattered or integrated.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'scatteredStuffPartOf' apply to subjects other than AmountOfStuff or Stuff? | What classes are permitted as the domain for the property 'scatteredStuffPartOf'? | Is it possible for an instance that is not an AmountOfStuff or Stuff to use the 'scatteredStuffPartOf' property as its subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatteredPortionOf\nDescription: The property \"scatteredPortionOf\" has a domain and range restricted to either AmountOfStuff or Stuff. It is defined as a subproperty of \"properPartOf\" and has no explicitly specified characteristics or inverse. This property is intended to represent a specific kind of portion relationship but is not made a subproperty of \"portionOf\" to avoid reasoning cycles and undecidability in Description Logics. The distinction between this property and related properties is primarily temporal, which is not expressible in OWL; therefore, \"scatteredPortionOf\" and \"portionOf\" are modeled as sibling properties to enable practical property chaining in reasoning.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value assigned via 'scatteredPortionOf' restricted to being an AmountOfStuff or Stuff? | What types of entities can be the object of the 'scatteredPortionOf' property? | Are there any entities other than AmountOfStuff or Stuff that can be in the range of 'scatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" has no explicitly defined characteristics or super-properties. Its domain includes entities classified as Endurant or Perdurant, and its range is restricted to instances of Quality. This property is used to relate an Endurant or Perdurant to a Quality. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['(Endurant and Perdurant)'], 'range': ['Quality'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'hasQuality' be used with subjects other than Endurant or Perdurant? | Are all instances associated with 'hasQuality' required to be either Endurant or Perdurant as the subject? | What entities are permitted to serve as the domain for the property 'hasQuality'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isSelfContainedScatteredPortionOf\nDescription: The property \"isSelfContainedScatteredPortionOf\" relates an entity classified as \"AmountOfStuff\" or \"Stuff\" to another entity of the same types, indicating that the former is a self-standing, scattered portion of the latter (such as a lump, drop, or slice). It is a sub-property of \"scatteredPortionOf\" and does not specify any particular characteristics or inverse properties. This property is typically used to denote portions that were once part of a larger whole but now exist as distinct, stand-alone pieces.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['scatteredPortionOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for 'isSelfContainedScatteredPortionOf' to have a domain other than AmountOfStuff or Stuff? | Can entities outside of AmountOfStuff or Stuff be involved as the subject of the property 'isSelfContainedScatteredPortionOf'? | What kinds of entities are permitted as the domain for 'isSelfContainedScatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stuffPartOf\nDescription: The property \"stuffPartOf\" relates entities classified as AmountOfStuff or Stuff to other entities of the same categories, indicating a part-whole relationship specifically among mass nouns or substances that are not typically countable. It is a subproperty of \"properPartOf,\" emphasizing that the 'part' is a distinct type of stuff or ingredient within another. No additional property characteristics or inverse are specified. Examples include alcohol as a stuff-part of wine, oil in mayonnaise, or sugar in cake.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'stuffPartOf' refer to objects other than AmountOfStuff or Stuff as its value? | Is every value associated with the property 'stuffPartOf' required to be of type AmountOfStuff or Stuff? | What types of resources are permitted as the range of the 'stuffPartOf' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContiguousPortionOf\nDescription: The property \"isContiguousPortionOf\" relates an instance of AmountOfStuff or Stuff to another of the same types, indicating that the subject is a contiguous portion of the object. It is defined as a sub-property of \"properPartOf\" and has no specified inverse or additional property characteristics. Although originally intended as a super-property of \"portionOf\", it is classified as a sibling to avoid logical cycles and maintain decidability within OWL reasoning. This distinction primarily addresses semantic differences involving temporality not representable in OWL.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is the domain of the property 'isContiguousPortionOf' limited to AmountOfStuff or Stuff, or can it include other classes? | Are there any instances of AmountOfStuff or Stuff that cannot be subjects of 'isContiguousPortionOf'? | What entity types are eligible to serve as the domain for the property 'isContiguousPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasState\nDescription: The property \"hasState\" links individuals of the class \"PhysicalEndurant\" to instances of the class \"State\". It has no specified characteristics, super-properties, or inverse properties. The domain restriction ensures it is only used with \"PhysicalEndurant\" entities, and its range is limited to \"State\".\nAxiom: {'characteristics': [], 'domain': ['PhysicalEndurant'], 'range': ['State'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is hasState considered a subtype of owl:topObjectProperty? | What superproperties are associated with hasState in the property hierarchy? | Does hasState directly fall under the domain of owl:topObjectProperty? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: properContainedIn\nDescription: The property \"properContainedIn\" has no specified domain, range, characteristics, super-properties, or inverse properties. This suggests it is a general-purpose property intended to express that one entity is properly contained within another, but no formal constraints are imposed on the types of entities it can relate.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is properPartOf a superproperty of properContainedIn? | What are the subproperties encompassed by properPartOf? | Which properties serve as superproperties for properContainedIn? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasNrOfPhase\nDescription: The property \"hasNrOfPhase\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is specified as xsd:integer, indicating that it relates an entity to an integer value representing the number of phases.\nAxiom: {'characteristics': [], 'domain': ['Stuff'], 'range': ['xsd:integer'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'hasNrOfPhase' be used with any subject other than 'Stuff'? | Is it possible for an entity that is not classified as 'Stuff' to have a value for 'hasNrOfPhase'? | What types of entities are permitted as the domain of the property 'hasNrOfPhase'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: srInheresIn\nDescription: The property \"srInheresIn\" has no defined characteristics or range restrictions. Its domain is restricted to instances of \"StuffRole\". It is a sub-property of \"inheresIn\", indicating it specializes this more general relationship. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['StuffRole'], 'range': ['Stuff'], 'subPropertyOf': ['inheresIn'], 'inverseOf': []}\nGenerated CQs:", "output": "Is anything other than Stuff allowed as the range of the property 'srInheresIn'? | Can 'srInheresIn' relate to values that are not instances of Stuff? | What types of entities can serve as the range for the property 'srInheresIn'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: partOf\nDescription: The property \"partOf\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is a general property intended to express a part-whole relationship, with no further formal restrictions defined by axioms.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is partOf a transitive property, such that if an entity is part of a second entity, and the second is part of a third, the first entity is part of the third? | Can the partOf property infer that if object A is part of object B, and object B is part of object C, then object A is part of object C? | Does the ontology require partOf to satisfy the transitive characteristic over related entities? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: colloidFormingRelation\nDescription: The property \"colloidFormingRelation\" has no explicitly defined characteristics or domain constraints. Its range is restricted to individuals of the class \"DispersedPhase.\" It is a subproperty of \"stuffFormingRelation,\" indicating that it inherits general properties from this broader relation. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['ContinuousMedium'], 'range': ['DispersedPhase'], 'subPropertyOf': ['stuffFormingRelation'], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for the property 'colloidFormingRelation' to have a subject that is not a ContinuousMedium? | What types of entities can appear as the domain for the property 'colloidFormingRelation'? | Are all subjects of 'colloidFormingRelation' instances of ContinuousMedium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: properPartOf\nDescription: The property \"properPartOf\" has no specified characteristics, domain, range, super-properties, or inverse properties. This suggests that it is a general-purpose relation intended to express a proper part-whole relationship between entities without any additional constraints or formal links to other properties.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['partOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is properPartOf classified as a subproperty of partOf within the ontology? | Which properties are identified as subproperties under partOf? | Does the use of properPartOf property entail the use of partOf property for the same subject and object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasGranuleType\nDescription: The property \"hasGranuleType\" has no specified characteristics or domain restrictions. Its range is limited to individuals classified under \"PhysicalObject\". It is a subproperty of \"owl:topObjectProperty\" and does not have an explicitly defined inverse property. This property is intended to relate an entity to a type of physical object.\nAxiom: {'characteristics': [], 'domain': ['Stuff'], 'range': ['PhysicalObject'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is the subject of 'hasGranuleType' always required to be a Stuff? | Are there any entities besides Stuff that can be associated with the 'hasGranuleType' property as its domain? | What classes can serve as the domain for the property 'hasGranuleType'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containedIn\nDescription: The property \"containedIn\" does not have specified characteristics, domain, range, super-properties, or an inverse property. It is a general property intended to relate entities without explicit constraints on its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['partOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is containedIn defined as a more specific property under partOf? | Which properties are recognized as subproperties of partOf? | What are the superproperties assigned to containedIn in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuale\nDescription: The property \"hasQuale\" has no explicitly defined characteristics, domain, or super-properties. Its range is restricted to the class \"Abstract,\" indicating that it relates an entity to an abstract entity. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['Quality'], 'range': ['Abstract'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can entities other than Quality appear as the subject of the property 'hasQuale'? | What types of individuals can serve as the domain for the property 'hasQuale'? | Is 'hasQuale' ever used where the subject is not a member of Quality? "}
