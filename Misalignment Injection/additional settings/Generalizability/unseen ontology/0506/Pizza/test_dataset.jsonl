{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmericanHot\nDescription: AmericanHot is defined as a subclass of NamedPizza, distinguished by the requirement that it has toppings including hot green pepper, jalapeno pepper, tomato, peperoni sausage, and mozzarella. Its origin is specified as America. AmericanHot pizzas are explicitly disjoint from numerous other pizza classes, ensuring no individual pizza can simultaneously belong to these groups. The pizza is further characterized by a topping restriction: it may only have mozzarella, peperoni sausage, jalapeno pepper, tomato, or hot green pepper as toppings. This formalization enforces a precise set of permissible toppings and uniquely identifies AmericanHot within the ontology of named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some HotGreenPepperTopping]', '[hasTopping some JalapenoPepperTopping]', '[hasTopping some TomatoTopping]', '[hasCountryOfOrigin hasValue America]', '[hasTopping some PeperoniSausageTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or PeperoniSausageTopping or JalapenoPepperTopping or TomatoTopping or HotGreenPepperTopping)]']}\nGenerated CQs:", "output": "What logical constraint separates AmericanHot from UnclosedPizza according to the ontology? | Is it allowable for an instance of pizza to belong to both AmericanHot and UnclosedPizza classes? | Which classes are defined as disjoint with AmericanHot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Capricciosa\nDescription: Capricciosa is defined as a subclass of NamedPizza, and is explicitly disjoint from a range of other specified pizza types, ensuring no individual can simultaneously belong to Capricciosa and any of those classes. Members of Capricciosa must have at least one topping each of tomato, ham, olive, mozzarella, anchovies, peperonata, and caper. Additionally, their toppings are strictly limited to only anchovies, mozzarella, tomato, peperonata, ham, caper, or olive—no other toppings are permitted. This formalization ensures a precise and consistent definition for Capricciosa pizza within the ontology.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or PeperonataTopping or HamTopping or CaperTopping or OliveTopping)]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping some CaperTopping]']}\nGenerated CQs:", "output": "What formal separation is specified between Capricciosa and Caprina in the ontology? | Is any pizza instance classified as both Capricciosa and Caprina permitted by the ontology? | Which other pizza types are declared as mutually exclusive with Caprina? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fiorentina\nDescription: Fiorentina is defined as a subclass of NamedPizza and is explicitly disjoint with a variety of other specific pizza types, ensuring that no individual pizza can simultaneously be classified as both Fiorentina and any of those listed (e.g., Mushroom, Margherita, FourSeasons). Members of the Fiorentina class are characterized by the following topping constraints: they must include at least one of each of the following toppings—TomatoTopping, GarlicTopping, OliveTopping, MozzarellaTopping, ParmesanTopping, and SpinachTopping. Additionally, Fiorentina pizzas are restricted to having only the following toppings: MozzarellaTopping, GarlicTopping, TomatoTopping, SpinachTopping, OliveTopping, or ParmesanTopping. This axiomatisation precisely defines Fiorentina pizzas in terms of both required ingredients and clear differentiation from other pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Rosa', 'QuattroFormaggi', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (MozzarellaTopping or GarlicTopping or TomatoTopping or SpinachTopping or OliveTopping or ParmesanTopping)]', '[hasTopping some GarlicTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some SpinachTopping]']}\nGenerated CQs:", "output": "What is the formal connection specified between Fiorentina and Giardiniera in the ontology? | Can a pizza instance be classified as both Fiorentina and Giardiniera simultaneously? | Which classes are defined as mutually exclusive with Fiorentina? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FruttiDiMare\nDescription: FruttiDiMare is defined as a subclass of NamedPizza and is explicitly disjoint with a variety of other specific pizza types, ensuring that no individual can simultaneously belong to FruttiDiMare and any of the listed pizza classes. Members of this class are strictly characterized by their toppings: they can have only garlic, tomato, or mixed seafood toppings—with each FruttiDiMare pizza required to feature at least one of each (tomato, garlic, and mixed seafood toppings). This formalization specifies that FruttiDiMare pizzas are exclusively seafood-themed, with a distinct combination of these three toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping only (GarlicTopping or TomatoTopping or MixedSeafoodTopping)]', '[hasTopping some TomatoTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some MixedSeafoodTopping]']}\nGenerated CQs:", "output": "What logical difference is asserted between FruttiDiMare and Caprina in the ontology? | Can any pizza instance belong simultaneously to the classes FruttiDiMare and Caprina? | Which classes are explicitly defined as disjoint with Caprina? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LaReine\nDescription: LaReine is defined as a subclass of NamedPizza and is declared disjoint with a number of other specific pizza classes, including Mushroom, Napoletana, Veneziana, and others—ensuring no individual pizza can be classified as both a LaReine and any of these listed classes. \n\nLaReine pizzas are characterized by several property restrictions: every LaReine pizza must have at least one topping of each of the following types—MushroomTopping, TomatoTopping, HamTopping, OliveTopping, and MozzarellaTopping. Additionally, the only permitted toppings for LaReine pizzas are MozzarellaTopping, TomatoTopping, HamTopping, OliveTopping, or MushroomTopping; no other toppings are allowed. This ensures that the LaReine pizza is strictly defined by this specific set of ingredients.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'Napoletana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or OliveTopping or MushroomTopping)]']}\nGenerated CQs:", "output": "How are LaReine and Veneziana defined in terms of class disjointness within the ontology? | Is it allowed for a pizza to be classified simultaneously as LaReine and Veneziana? | Which classes are asserted to be mutually exclusive with LaReine in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mushroom\nDescription: Mushroom is defined as a subclass of NamedPizza, and it is disjoint from a wide range of other specific pizza types, ensuring that an individual cannot simultaneously belong to the Mushroom class and any of those listed classes. Members of the Mushroom class are required to have MushroomTopping, TomatoTopping, and MozzarellaTopping among their toppings. Additionally, they may only have MozzarellaTopping, TomatoTopping, or MushroomTopping as toppings, and no others. This formalization ensures that Mushroom pizzas are uniquely characterized by the exclusive combination of these three toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or MushroomTopping)]', '[hasTopping some TomatoTopping]', '[hasTopping some MozzarellaTopping]']}\nGenerated CQs:", "output": "What formal separation is asserted between Mushroom and Cajun in the ontology? | Is it allowed for an entity to belong to both the Mushroom and Cajun categories simultaneously? | Which classes are explicitly specified as being disjoint with Cajun? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Parmense\nDescription: Parmense is defined as a subclass of NamedPizza and is explicitly disjoint with a wide range of other pizza types, ensuring that no individual pizza can simultaneously be classified as Parmense and any of the listed disjoint pizzas. Parmense pizzas are characterized by a specific set of required toppings: each must include at least some tomato, ham, parmesan, mozzarella, and asparagus toppings. Furthermore, they may only have these toppings—no additional ingredients are permitted. This formalization strictly specifies the distinctive composition of Parmense pizzas within the NamedPizza hierarchy.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'Caprina', 'Soho', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AsparagusTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or ParmesanTopping or AsparagusTopping)]']}\nGenerated CQs:", "output": "What is the ontological relationship between Parmense and SloppyGiuseppe? | Is there any entity that can simultaneously belong to both Parmense and SloppyGiuseppe classes? | Which classes are specified as mutually exclusive with Parmense? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrinceCarlo\nDescription: PrinceCarlo is defined as a subclass of NamedPizza, making it a specific kind of pizza with a distinct identity. It is explicitly disjoint with a comprehensive set of other named pizzas, such that no individual pizza can be simultaneously classified as PrinceCarlo and any of those other pizzas (e.g., Mushroom, LaReine, Napoletana, etc.).\n\nFrom the property restrictions, any PrinceCarlo pizza must have at least the following toppings: TomatoTopping, MozzarellaTopping, ParmesanTopping, LeekTopping, and RosemaryTopping. Furthermore, the only toppings permitted on a PrinceCarlo pizza are LeekTopping, RosemaryTopping, MozzarellaTopping, TomatoTopping, and ParmesanTopping. This formalization ensures that PrinceCarlo pizzas are uniquely characterized by this specific and exclusive combination of toppings, and cannot include any others.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (LeekTopping or RosemaryTopping or MozzarellaTopping or TomatoTopping or ParmesanTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some LeekTopping]', '[hasTopping some RosemaryTopping]']}\nGenerated CQs:", "output": "Are PrinceCarlo and Giardiniera considered mutually exclusive pizza types within the ontology? | Is there any possibility for a pizza to be classified simultaneously as PrinceCarlo and Giardiniera? | Which pizza classes are specified as disjoint with Giardiniera? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Rosa\nDescription: Rosa is defined as a subclass of NamedPizza, explicitly disjoint with a range of other specific pizza types (such as Mushroom, Margherita, AmericanHot, and others), ensuring an individual pizza cannot simultaneously belong to Rosa and any of those disjoint classes. Members of the Rosa class are characterized by their toppings: every Rosa pizza must have at least one TomatoTopping, one GorgonzolaTopping, and one MozzarellaTopping, and it may only contain these three toppings (no other toppings are permitted). This formalization strictly captures the unique identity and allowed ingredients of the Rosa pizza type.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some GorgonzolaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or GorgonzolaTopping)]', '[hasTopping some MozzarellaTopping]']}\nGenerated CQs:", "output": "What logical separation is asserted between Rosa and PrinceCarlo in the ontology? | Is there any individual that can belong to both Rosa and PrinceCarlo? | Which classes are declared as disjoint with PrinceCarlo? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SloppyGiuseppe\nDescription: SloppyGiuseppe is defined as a subclass of NamedPizza, and is explicitly disjoint with a set of other specific pizza types, ensuring that any instance cannot simultaneously belong to these other pizza classes. It is characterized by the presence of HotSpicedBeefTopping, TomatoTopping, GreenPepperTopping, MozzarellaTopping, and OnionTopping as mandatory ingredients. Furthermore, it is restricted to only these toppings: no other topping types are permitted on a SloppyGiuseppe. This formalization ensures the class captures a distinct and exclusive pizza variety, consistently reflecting its specific ingredient profile.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'Caprina', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some HotSpicedBeefTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some GreenPepperTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasTopping only (HotSpicedBeefTopping or MozzarellaTopping or TomatoTopping or OnionTopping or GreenPepperTopping)]']}\nGenerated CQs:", "output": "What is the ontological distinction specified between SloppyGiuseppe and Soho? | Is there any instance that can belong to both the SloppyGiuseppe and Soho categories? | Which classes are formally declared as disjoint with Soho? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnclosedPizza\nDescription: UnclosedPizza is defined as a subclass of NamedPizza, disjoint with a specific set of pizzas including Mushroom, AmericanHot, Margherita, and others, ensuring mutual exclusivity with these named varieties. Every UnclosedPizza is characterized by having at least one MozzarellaTopping, but there is no restriction on additional toppings. As described, membership in UnclosedPizza does not imply classification as either a VegetarianPizza or a NonVegetarianPizza, as its topping composition may be incomplete or unspecified. This formalization supports the open nature of its topping definitions within the ontology.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'PrinceCarlo', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MozzarellaTopping]']}\nGenerated CQs:", "output": "What logical separation exists between UnclosedPizza and Capricciosa according to the ontology? | Is it permitted for a pizza to belong to both UnclosedPizza and Capricciosa categories? | Which classes are formally specified as disjoint with Capricciosa? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnchoviesTopping\nDescription: AnchoviesTopping is modeled as a subclass of FishTopping, signifying that it is a specific type of fish-based topping. It is explicitly disjoint with both MixedSeafoodTopping and PrawnsTopping, meaning an individual instance cannot simultaneously be categorized as AnchoviesTopping and either of those other toppings. This ensures a clear and mutually exclusive classification among these seafood-themed pizza toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['MixedSeafoodTopping']}\nGenerated CQs:", "output": "How does the ontology specify the incompatibility between AnchoviesTopping and PrawnsTopping? | Is any pizza topping allowed to be classified as both AnchoviesTopping and PrawnsTopping simultaneously? | Which toppings are asserted to be disjoint with AnchoviesTopping in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MixedSeafoodTopping\nDescription: MixedSeafoodTopping is defined as a subclass of FishTopping, meaning every MixedSeafoodTopping is a type of fish-based topping. It is explicitly disjoint with AnchoviesTopping and PrawnsTopping, so no individual topping can simultaneously be considered a MixedSeafoodTopping and either an AnchoviesTopping or PrawnsTopping. This class represents seafood toppings that are distinct from pure anchovy or prawn toppings, ensuring clear differentiation among various fish-based toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['PrawnsTopping']}\nGenerated CQs:", "output": "What formal separation is defined between MixedSeafoodTopping and AnchoviesTopping within the ontology? | Is there any possibility for a topping to be classified as both MixedSeafoodTopping and AnchoviesTopping? | Which other topping classes, if any, are explicitly stated as disjoint with AnchoviesTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrawnsTopping\nDescription: PrawnsTopping is defined as a subclass of FishTopping, indicating it is a specific kind of fish-based topping. It is explicitly disjoint with both MixedSeafoodTopping and AnchoviesTopping, which means no individual topping can simultaneously be classified as PrawnsTopping and either of the other two classes. This formalization ensures that members of PrawnsTopping are uniquely identifiable as prawn-based toppings, distinct from other seafood or anchovy-based toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['AnchoviesTopping']}\nGenerated CQs:", "output": "How does the ontology differentiate between PrawnsTopping and MixedSeafoodTopping? | Is there any instance that can qualify as both PrawnsTopping and MixedSeafoodTopping? | Which topping categories are specified as disjoint with PrawnsTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GarlicTopping\nDescription: GarlicTopping is defined as a subclass of VegetableTopping, meaning it is a type of vegetable-based topping. It is explicitly disjoint with several other specific vegetable toppings, such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that an individual cannot belong to both GarlicTopping and any of these other topping classes. Additionally, GarlicTopping is characterized by the property that its members must have at least some medium level of spiciness (hasSpiciness some Medium).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "output": "What logical separation is defined between GarlicTopping and SpinachTopping? | Is there any topping that could simultaneously be classified as GarlicTopping and SpinachTopping? | Which other topping classes are declared as mutually exclusive with SpinachTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MushroomTopping\nDescription: MushroomTopping is a subclass of VegetableTopping and is explicitly disjoint from other specific vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, and others—ensuring that no individual can simultaneously belong to more than one of these topping types. Furthermore, MushroomTopping is characterized by the property that it must have some level of mild spiciness (hasSpiciness some Mild). This formalization defines MushroomTopping as a mild-flavored vegetable topping that is distinct from other named vegetable toppings in the ontology.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "output": "What type of distinction is asserted between MushroomTopping and PetitPoisTopping in the ontology? | Could an individual topping be classified as both MushroomTopping and PetitPoisTopping? | Which topping classes are defined as incompatible with PetitPoisTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OnionTopping\nDescription: OnionTopping is defined as a subclass of VegetableTopping, representing a type of topping derived from vegetables. It is explicitly disjoint with several other vegetable topping classes, such as RocketTopping, LeekTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that no individual can simultaneously belong to OnionTopping and any of these classes. Additionally, OnionTopping is characterized by the property restriction that all its instances must have at least some medium level of spiciness (hasSpiciness some Medium).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "output": "How does the ontology distinguish between OnionTopping and OliveTopping? | Is there an instance that can simultaneously be classified as both OnionTopping and OliveTopping? | Which other topping classes are specified as disjoint with OliveTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PepperTopping\nDescription: PepperTopping is defined as a subclass of VegetableTopping, indicating it is a specific type of vegetable-based topping. It is explicitly disjoint with RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—meaning no individual can simultaneously be a PepperTopping and any of these other vegetable topping classes. This establishes PepperTopping as a distinct and non-overlapping category within vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'TomatoTopping']}\nGenerated CQs:", "output": "What logical constraint separates PepperTopping from PetitPoisTopping in the ontology? | Is any topping instance allowed to belong to both PepperTopping and PetitPoisTopping simultaneously? | Which topping classes are defined as disjoint with PepperTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpinachTopping\nDescription: SpinachTopping is defined as a subclass of VegetableTopping and is explicitly disjoint from a variety of other vegetable-based toppings, including RocketTopping, LeekTopping, OnionTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping. Individuals of this class must have at least one hasSpiciness property value that is Mild. This ensures that SpinachTopping exclusively refers to mild, spinach-based toppings that do not overlap with other vegetable toppings in the ontology.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['LeekTopping', 'OnionTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "output": "What is the formal distinction between SpinachTopping and RocketTopping within the ontology? | Is it allowed for a pizza to have both SpinachTopping and RocketTopping simultaneously? | Which classes are asserted to be disjoint with SpinachTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CajunSpiceTopping\nDescription: CajunSpiceTopping is a subclass of HerbSpiceTopping, formally distinguished by the restriction that it must have some degree of hot spiciness (hasSpiciness some Hot). It is explicitly disjoint with RosemaryTopping, meaning an individual cannot be both a CajunSpiceTopping and a RosemaryTopping. Members of this class are herb and spice toppings that contribute a hot or spicy flavor profile, aligning with the characteristics of Cajun seasoning.\nAxiom: {'subClassOf': ['HerbSpiceTopping'], 'disjointWith': [], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "output": "How does the ontology specify the connection or distinction between CajunSpiceTopping and RosemaryTopping? | Is there any instance that can be classified as both CajunSpiceTopping and RosemaryTopping? | Which other topping classes are defined as mutually exclusive with RosemaryTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseTopping\nDescription: CheeseTopping is defined as a subclass of PizzaTopping, representing toppings made from cheese products that are used on pizzas. It is explicitly disjoint from other topping types such as MeatTopping, SauceTopping, VegetableTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no individual topping instance can simultaneously belong to both CheeseTopping and any of these other topping categories. This classification enforces a clear distinction between cheese-based toppings and all other types of pizza toppings.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping']}\nGenerated CQs:", "output": "How does the ontology express the incompatibility between CheeseTopping and FruitTopping? | Is there any topping instance that can simultaneously belong to both CheeseTopping and FruitTopping categories? | Which topping categories are stated as mutually exclusive with CheeseTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FruitTopping\nDescription: FruitTopping is defined as a subclass of PizzaTopping, meaning it represents a specific type of topping used on pizzas. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, and NutTopping, ensuring that no topping can simultaneously belong to FruitTopping and any of these other topping categories. This formalization guarantees that FruitTopping exclusively includes toppings derived from fruit and distinguishes them from all other major topping types.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping']}\nGenerated CQs:", "output": "How are FruitTopping and VegetableTopping represented in terms of mutual exclusivity within the ontology? | Is there any scenario in which a topping can be classified simultaneously as both a FruitTopping and a VegetableTopping? | Which classes are defined as disjoint with VegetableTopping in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HerbSpiceTopping\nDescription: HerbSpiceTopping is defined as a subclass of PizzaTopping, representing toppings made exclusively from herbs or spices that are suitable for use on pizzas. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, NutTopping, and FruitTopping, ensuring that no individual topping can simultaneously belong to both HerbSpiceTopping and any of these other specified topping categories. This class formalizes the separation of herb and spice-based toppings from all other topping types within the ontology.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'FruitTopping']}\nGenerated CQs:", "output": "What is the formal separation established between HerbSpiceTopping and NutTopping in the ontology? | Is it allowed for a pizza topping to be classified as both a HerbSpiceTopping and a NutTopping? | Which classes, besides NutTopping, are specified as disjoint with HerbSpiceTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MeatTopping\nDescription: MeatTopping is defined as a subclass of PizzaTopping, representing toppings derived specifically from meat products. It is disjoint with SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no single topping instance can simultaneously belong to both MeatTopping and any of these other topping categories. This formalization enforces a clear categorical separation between meat-based and other types of pizza toppings.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['SauceTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'NutTopping', 'FruitTopping']}\nGenerated CQs:", "output": "What ontological separation is established between MeatTopping and HerbSpiceTopping? | Is any topping allowed to be classified simultaneously as a MeatTopping and an HerbSpiceTopping? | Which topping categories are defined as mutually exclusive with HerbSpiceTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SauceTopping\nDescription: SauceTopping is defined as a subclass of PizzaTopping and is explicitly disjoint with MeatTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping. This means SauceTopping represents a distinct category of pizza topping, specifically for sauces, and no individual can simultaneously belong to SauceTopping and any of the aforementioned topping classes.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping']}\nGenerated CQs:", "output": "What logical separation does the ontology assert between SauceTopping and FruitTopping? | Is there any topping entity that can simultaneously be classified as both SauceTopping and FruitTopping? | Which classes of toppings are formally identified as disjoint with SauceTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetableTopping\nDescription: VegetableTopping is defined as a subclass of PizzaTopping, representing pizza toppings that are derived from vegetables. It is explicitly disjoint with MeatTopping, SauceTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no topping can simultaneously belong to VegetableTopping and any of these other topping categories. This formalization guarantees that VegetableTopping exclusively encompasses toppings of vegetable origin, and clearly separates it from other distinct topping types used on pizzas.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping', 'FruitTopping']}\nGenerated CQs:", "output": "How are VegetableTopping and SauceTopping differentiated within the ontology? | Is there any entity that can simultaneously be classified as both a VegetableTopping and a SauceTopping? | Which classes are defined as disjoint with SauceTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ParmesanTopping\nDescription: ParmesanTopping is defined as a subclass of CheeseTopping, representing cheese-based toppings specifically comprised of parmesan. It is explicitly disjoint from GoatsCheeseTopping, MozzarellaTopping, GorgonzolaTopping, and FourCheesesTopping, ensuring no individual can simultaneously belong to these classes. Members of this class are characterized by having some level of mild spiciness, as specified by the property restriction [hasSpiciness some Mild].\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'MozzarellaTopping', 'GorgonzolaTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "output": "What distinction is modeled between ParmesanTopping and FourCheesesTopping within the ontology? | Could an instance belong simultaneously to both ParmesanTopping and FourCheesesTopping classes? | Which other topping classes are asserted as incompatible with FourCheesesTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HamTopping\nDescription: HamTopping is defined as a subclass of MeatTopping, indicating that it is a type of meat-based pizza topping. It is explicitly disjoint with PeperoniSausageTopping, HotSpicedBeefTopping, and ChickenTopping, meaning an individual topping cannot simultaneously be classified as ham and any of these other meat toppings. This formalization ensures that HamTopping remains distinct from other specific meat toppings within the ontology.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'ChickenTopping']}\nGenerated CQs:", "output": "What formal separation is specified between HamTopping and HotSpicedBeefTopping in the ontology? | Is there any instance that can be classified simultaneously as HamTopping and HotSpicedBeefTopping? | Which other topping categories are asserted as disjoint with HamTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeperoniSausageTopping\nDescription: PeperoniSausageTopping is defined as a subclass of MeatTopping, representing a specific type of meat-based pizza topping. It is explicitly disjoint with HotSpicedBeefTopping, HamTopping, and ChickenTopping, ensuring that no individual topping can be classified as more than one of these types simultaneously. Members of this class are characterized by possessing at least some medium level of spiciness, as specified by the property restriction [hasSpiciness some Medium]. This formalization ensures clear differentiation within meat toppings and enforces the requirement for moderate spiciness in PeperoniSausageTopping.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['HamTopping', 'ChickenTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "output": "What separation is defined between PeperoniSausageTopping and HotSpicedBeefTopping in the ontology? | Is it allowable for a single topping instance to belong to both PeperoniSausageTopping and HotSpicedBeefTopping? | Which topping types are asserted as disjoint with PeperoniSausageTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DeepPanBase\nDescription: DeepPanBase is defined as a subclass of PizzaBase, establishing it as a specific type of pizza base. It is explicitly disjoint with ThinAndCrispyBase, which means that no pizza base can simultaneously be classified as both a DeepPanBase and a ThinAndCrispyBase. This formalization ensures clear differentiation between thick, deep pan styles and thin, crispy bases within the ontology.\nAxiom: {'subClassOf': ['PizzaBase'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology distinguish between DeepPanBase and ThinAndCrispyBase? | Is it permissible for a pizza base to be classified as both DeepPanBase and ThinAndCrispyBase? | Which base types are specified as mutually exclusive with DeepPanBase in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ThinAndCrispyBase\nDescription: ThinAndCrispyBase is a subclass of PizzaBase, representing a specific type of pizza base. It is explicitly declared as disjoint with DeepPanBase, ensuring that no individual pizza base can simultaneously be classified as both ThinAndCrispyBase and DeepPanBase. This formalization distinguishes thin and crispy bases from deep pan bases within the ontology.\nAxiom: {'subClassOf': ['PizzaBase'], 'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology specify the difference between ThinAndCrispyBase and DeepPanBase? | Is any pizza base classified under both ThinAndCrispyBase and DeepPanBase? | What other base types are explicitly declared as disjoint with DeepPanBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GreenPepperTopping\nDescription: GreenPepperTopping is defined as a subclass of PepperTopping, indicating it inherits all characteristics of pepper-based pizza toppings. It is explicitly disjoint with SweetPepperTopping, JalapenoPepperTopping, and PeperonataTopping—ensuring that no instance can simultaneously belong to more than one of these classes. This formalization distinguishes green pepper toppings from other specific pepper varieties within the ontology.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['JalapenoPepperTopping', 'PeperonataTopping']}\nGenerated CQs:", "output": "What is the ontological separation specified between GreenPepperTopping and SweetPepperTopping? | Is there any instance that can be simultaneously classified as both GreenPepperTopping and SweetPepperTopping? | Which classes are defined as mutually exclusive with GreenPepperTopping in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Hot\nDescription: Hot is defined as a subclass of Spiciness, indicating it represents an elevated or intense level of spicy sensation. It is explicitly disjoint with the classes Mild and Medium, ensuring that no instance can be both Hot and either Mild or Medium at the same time. This formalization clarifies that Hot describes a distinct, non-overlapping intensity within the spectrum of spiciness.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Medium']}\nGenerated CQs:", "output": "What type of logical separation is defined between Hot and Mild? | Is it allowed for an entity to be classified as both Hot and Mild simultaneously? | Which classes, apart from Mild, are explicitly stated as disjoint with Hot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Medium\nDescription: Medium is a subclass of Spiciness, representing a specific level or category of spiciness. It is formally defined as disjoint with both Mild and Hot, meaning that no individual instance can belong to more than one of these classes simultaneously. This ensures that any item classified as Medium cannot be considered Mild or Hot in terms of spiciness.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Mild']}\nGenerated CQs:", "output": "How are Medium and Hot classes differentiated within the ontology? | Is there any instance that can belong to both the Medium and Hot categories? | Which classes are defined as mutually exclusive with Medium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mild\nDescription: Mild is a subclass of Spiciness, representing a specific level of spiciness distinct from other grades. It is explicitly disjoint with both Hot and Medium, ensuring that an instance classified as Mild cannot simultaneously be classified as Hot or Medium. This enforces a clear and exclusive categorization among the spiciness levels.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Medium']}\nGenerated CQs:", "output": "What is the formal separation defined between Mild and Hot in the ontology? | Can an entity be classified as both Mild and Hot? | Which classes are specified as disjoint with Hot? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PizzaBase\nDescription: PizzaBase is defined as a subclass of Food, indicating that every PizzaBase is a type of food. It is explicitly disjoint with IceCream, Pizza, and PizzaTopping, ensuring that an individual cannot simultaneously be a PizzaBase and any of these other classes. This formalization distinguishes PizzaBase as a unique foundational component in food ontology, separate from finished pizzas, their toppings, or dessert items like ice cream.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['IceCream', 'Pizza']}\nGenerated CQs:", "output": "What distinguishes PizzaBase from PizzaTopping in the ontology? | Is any entity permitted to be an instance of both PizzaBase and PizzaTopping? | Which classes are specified as disjoint with PizzaBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PizzaTopping\nDescription: PizzaTopping is defined as a subclass of Food, representing edible items that can be used to top a pizza. It is formally disjoint from the classes IceCream, Pizza, and PizzaBase, ensuring that no individual can simultaneously be a PizzaTopping and an instance of any of these other classes. This separation enforces a clear distinction between pizza toppings, the pizza base, the assembled pizza, and unrelated foods like ice cream.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['Pizza', 'PizzaBase']}\nGenerated CQs:", "output": "How does the ontology define the separation between PizzaTopping and IceCream? | Is there any instance that can belong to both PizzaTopping and IceCream categories? | Which classes are explicitly marked as mutually exclusive with IceCream? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DomainConcept\nDescription: DomainConcept is a class that is explicitly disjoint with ValuePartition, meaning no individual can simultaneously be a member of both DomainConcept and ValuePartition. This ensures a clear separation between entities considered DomainConcepts and those defined as ValuePartitions within the ontology.\nAxiom: {'disjointWith': []}\nGenerated CQs:", "output": "How does the ontology differentiate between DomainConcept and ValuePartition? | Is there any instance that can belong to both DomainConcept and ValuePartition? | Which classes are specified as disjoint with ValuePartition? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ValuePartition\nDescription: ValuePartition is a pattern used to represent a set of mutually exclusive and exhaustive subclasses that serve as the only permissible values for a particular property. It is disjoint with DomainConcept, ensuring that no individual can belong to both classes. The parent ValuePartition class is employed in property restrictions, and its subclasses collectively cover all possible values for the property—membership cannot extend beyond these predefined subclasses without modifying the ValuePartition. This structure enforces a fixed set of alternatives, supporting controlled vocabularies and value enumerations within the ontology.\nAxiom: {'disjointWith': []}\nGenerated CQs:", "output": "How are ValuePartition and DomainConcept differentiated within the ontology? | Is there any entity that can simultaneously be a ValuePartition and a DomainConcept? | Which classes are specified as disjoint with DomainConcept? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Food\nDescription: Food is defined as a subclass of DomainConcept. This means that every instance of Food is considered a type of DomainConcept, representing consumable items or substances within the modeled domain. No further restrictions or disjoint relationships are specified in the current axiom.\nAxiom: {'subClassOf': ['DomainConcept']}\nGenerated CQs:", "output": "Is Food classified under the broader category of DomainConcept? | What general categories is Food a member of within the ontology? | Which more specific classes, such as Food, are encompassed by DomainConcept? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NamedPizza\nDescription: NamedPizza is defined as a subclass of Pizza, representing pizzas that are explicitly listed or recognized on a pizza menu. Members of this class inherit all properties of Pizza and are distinguished by being menu-identified variants, rather than custom or unnamed creations.\nAxiom: {'subClassOf': ['Pizza']}\nGenerated CQs:", "output": "Which categories encompass NamedPizza as a member? | Is NamedPizza classified as a type of Pizza? | What specific varieties are encompassed within the supercategory Pizza, including NamedPizza? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PineKernels\nDescription: PineKernels is defined as a subclass of NutTopping, indicating that all PineKernels are considered a type of nut-based topping. No further property restrictions or disjointness axioms are specified, so individuals classified as PineKernels inherit all characteristics of NutTopping.\nAxiom: {'subClassOf': ['NutTopping']}\nGenerated CQs:", "output": "Which toppings are defined as more specific forms of NutTopping, such as PineKernels? | Is PineKernels classified under the broader group of NutTopping? | What more general topping categories include PineKernels as a subclass? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RedOnionTopping\nDescription: RedOnionTopping is defined as a subclass of OnionTopping, representing toppings specifically comprised of red onion. All individuals classified as RedOnionTopping inherit the characteristics and constraints applicable to OnionTopping.\nAxiom: {'subClassOf': ['OnionTopping']}\nGenerated CQs:", "output": "Which toppings are specified as subclasses of OnionTopping, such as RedOnionTopping? | What parent classes does RedOnionTopping belong to within the topping hierarchy? | Is RedOnionTopping categorized under the broader class of OnionTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: American\nDescription: American is defined as a subclass of NamedPizza and is explicitly disjoint from several other specific pizza types, such as Mushroom, LaReine, Napoletana, and others, ensuring that an individual cannot simultaneously belong to more than one of these classes. Members of the American class must have the following toppings: tomato topping, pepperoni sausage topping, and mozzarella topping. Furthermore, they can have only mozzarella, pepperoni sausage, or tomato as toppings—no other toppings are permitted. Additionally, the country of origin for this pizza is specified as America. This formalization distinguishes the American pizza by its unique combination of toppings and origin, while preventing any overlap with the other named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasCountryOfOrigin hasValue America]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or PeperoniSausageTopping or TomatoTopping)]', '[hasTopping only PeperoniSausageTopping]']}\nGenerated CQs:", "output": "Does an American pizza necessarily include at least one Peperoni Sausage topping? | Is the presence of Peperoni Sausage topping required for something to be classified as American pizza? | Can an American pizza exist without having any Peperoni Sausage toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cajun\nDescription: Cajun is defined as a subclass of NamedPizza and is explicitly disjoint with a variety of other pizza types, ensuring that no pizza can belong to Cajun and any of the disjoint classes simultaneously. Each Cajun pizza must have, as toppings, tomato, Tobasco pepper sauce, mozzarella, onion, peperonata, and prawns. Furthermore, the only allowed toppings on a Cajun pizza are prawn, Tobasco pepper sauce, mozzarella, tomato, onion, and peperonata. This formalization strictly characterizes Cajun pizzas by both required and exclusive toppings, distinguishing them from other named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some TobascoPepperSauce]', '[hasTopping only (PrawnsTopping or TobascoPepperSauce or MozzarellaTopping or TomatoTopping or OnionTopping or PeperonataTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping only PrawnsTopping]']}\nGenerated CQs:", "output": "Is it required that a Cajun pizza has at least one topping of Prawns? | Can a pizza be classified as Cajun without having any PrawnsTopping? | Does every Cajun pizza necessarily include the hasTopping property linked to PrawnsTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Caprina\nDescription: Caprina is defined as a subclass of NamedPizza and is explicitly disjoint from a diverse set of other named pizzas, ensuring that no individual pizza can simultaneously be a Caprina and any of the pizzas listed (such as Mushroom, LaReine, etc.). Members of the Caprina class are characterized by their toppings: each Caprina must have at least one instance each of tomato topping, sundried tomato topping, mozzarella topping, and goat’s cheese topping. Additionally, Caprina pizzas can only have mozzarella, tomato, sundried tomato, or goat’s cheese as toppings—no other toppings are permitted. This formalization guarantees a specific and exclusive combination of ingredients for any pizza classified as Caprina.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or SundriedTomatoTopping or GoatsCheeseTopping)]', '[hasTopping some GoatsCheeseTopping]', '[hasTopping only SundriedTomatoTopping]']}\nGenerated CQs:", "output": "Is it necessary for a Caprina pizza to include at least one Sundried Tomato topping? | Can a Caprina be identified without having the hasTopping property with SundriedTomatoTopping? | Does every instance of Caprina always have some topping that is SundriedTomatoTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FourSeasons\nDescription: FourSeasons is a subclass of NamedPizza and is explicitly disjoint from several other specific pizza classes, ensuring that no pizza can be simultaneously classified as FourSeasons and any of the listed disjoint pizzas (such as Mushroom, Margherita, QuattroFormaggi, etc.). Members of the FourSeasons class are characterized by having at least one of each of the following toppings: mushroom, tomato, peperoni sausage, olive, mozzarella, anchovies, and capers. Additionally, the set of possible toppings for FourSeasons pizzas is restricted to only anchovies, mozzarella, peperoni sausage, tomato, capers, olives, and mushrooms—no other toppings are permitted. This formalization captures the standard combinatory topping profile of the FourSeasons pizza variant.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some PeperoniSausageTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or PeperoniSausageTopping or TomatoTopping or CaperTopping or OliveTopping or MushroomTopping)]', '[hasTopping some CaperTopping]', '[hasTopping only AnchoviesTopping]']}\nGenerated CQs:", "output": "Is it required for a FourSeasons pizza to include AnchoviesTopping as one of its toppings? | Can a pizza be classified as FourSeasons if it does not have any AnchoviesTopping? | Does every instance of FourSeasons necessarily have at least one topping that is AnchoviesTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Giardiniera\nDescription: Giardiniera is defined as a subclass of NamedPizza, and is explicitly disjoint from several other pizza classes such as Mushroom, LaReine, Napoletana, and others—ensuring that no pizza can simultaneously be classified as Giardiniera and any of these classes. Members of Giardiniera are characterized by a combination of specific toppings: they must contain at least some MushroomTopping, TomatoTopping, OliveTopping, MozzarellaTopping, SlicedTomatoTopping, PeperonataTopping, PetitPoisTopping, and LeekTopping. Furthermore, Giardiniera pizzas are strictly limited to having toppings only from the set: LeekTopping, MozzarellaTopping, TomatoTopping, PetitPoisTopping, PeperonataTopping, OliveTopping, MushroomTopping, and SlicedTomatoTopping. This formalization ensures that any pizza classified as Giardiniera has an exclusive and characteristic combination of the specified toppings and no others.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping only (LeekTopping or MozzarellaTopping or TomatoTopping or PetitPoisTopping or PeperonataTopping or OliveTopping or MushroomTopping or SlicedTomatoTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some SlicedTomatoTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping some PetitPoisTopping]', '[hasTopping some LeekTopping]', '[hasTopping only OliveTopping]']}\nGenerated CQs:", "output": "Must a Giardiniera have at least one topping that is an OliveTopping? | Is it possible for a Giardiniera to be classified as such without having any OliveTopping? | Does the presence of OliveTopping qualify a pizza as Giardiniera, regardless of its other toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Margherita\nDescription: Margherita is defined as a subclass of NamedPizza and is explicitly disjoint from a range of other specific pizza varieties, ensuring that no individual pizza can simultaneously be classified as both Margherita and any of those listed (such as Mushroom, LaReine, or Napoletana). Margherita pizzas are characterized by a strict topping composition: they must have at least one TomatoTopping and one MozzarellaTopping, and they can only have MozzarellaTopping or TomatoTopping as toppings—no other topping types are permitted. This formalization captures the essential simplicity and distinctiveness of the Margherita pizza.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping)]', '[hasTopping only TomatoTopping]']}\nGenerated CQs:", "output": "Is it required that every Margherita pizza includes at least one TomatoTopping as a topping? | Can a pizza be classified as Margherita if it lacks TomatoTopping among its toppings? | Does the presence of TomatoTopping serve as a necessary condition for identifying a pizza as Margherita? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Napoletana\nDescription: Napoletana is defined as a subclass of NamedPizza and is explicitly disjoint with a wide range of other specific pizza types, ensuring that no individual pizza can simultaneously belong to Napoletana and any of those classes. Members of the Napoletana class must have toppings including tomato, olive, mozzarella, anchovies, and capers, with the restriction that only these toppings (and no others) are permitted. Additionally, the country of origin for Napoletana is restricted to Italy. This class therefore represents a distinct and well-defined type of pizza with a uniquely specified combination of Italian origin and allowable toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasCountryOfOrigin hasValue Italy]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or CaperTopping or OliveTopping)]', '[hasTopping only CaperTopping]']}\nGenerated CQs:", "output": "Is it necessary for a Napoletana pizza to have at least one topping that is a CaperTopping? | Does every instance of Napoletana include the property hasTopping with some value from CaperTopping? | Can a pizza be classified as Napoletana if it lacks any CaperTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PolloAdAstra\nDescription: PolloAdAstra is defined as a subclass of NamedPizza and is explicitly disjoint with other specified pizzas, ensuring that no individual pizza can simultaneously be an instance of PolloAdAstra and any of the listed alternative named pizzas. Members of this class must have at least one of each of the following toppings: Red Onion, Cajun Spice, Tomato, Garlic, Sweet Pepper, Mozzarella, and Chicken. Furthermore, the only permissible toppings are Chicken, Mozzarella, Garlic, Tomato, Red Onion, Cajun Spice, and Sweet Pepper; no other toppings are allowed. This formalization provides a precise specification of PolloAdAstra as a distinct pizza type characterized by its unique and restricted combination of toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some RedOnionTopping]', '[hasTopping some CajunSpiceTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some SweetPepperTopping]', '[hasTopping only (ChickenTopping or MozzarellaTopping or GarlicTopping or TomatoTopping or RedOnionTopping or CajunSpiceTopping or SweetPepperTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ChickenTopping]', '[hasTopping only TomatoTopping]']}\nGenerated CQs:", "output": "Is it required for a PolloAdAstra pizza to have at least one TomatoTopping? | Can a PolloAdAstra pizza exist without having any TomatoTopping as one of its toppings? | Does every instance of PolloAdAstra use TomatoTopping among its toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: QuattroFormaggi\nDescription: QuattroFormaggi is defined as a subclass of NamedPizza and is explicitly disjoint with a range of other specific pizza classes, meaning an individual pizza cannot simultaneously belong to QuattroFormaggi and any of the listed disjoint classes. Members of this class must have at least one tomato topping and at least one four-cheeses topping. Additionally, QuattroFormaggi pizzas are restricted to having only tomato and four-cheeses toppings—no other topping types are permitted. This formalization guarantees that any pizza classified as QuattroFormaggi has a distinctive combination of tomato and four-cheeses toppings, consistent with its traditional recipe.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some FourCheesesTopping]', '[hasTopping only (FourCheesesTopping or TomatoTopping)]', '[hasTopping only TomatoTopping]']}\nGenerated CQs:", "output": "Is it necessary for a QuattroFormaggi pizza to have at least one TomatoTopping as a topping? | Can a pizza be classified as QuattroFormaggi if it does not include any TomatoTopping among its toppings? | Does the presence of TomatoTopping serve as a required condition for an item to be recognized as QuattroFormaggi? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Siciliana\nDescription: Siciliana is a subclass of NamedPizza, explicitly disjoint from numerous other specific pizza types, ensuring that no individual pizza can be simultaneously classified as Siciliana and any of the listed varieties (e.g., Mushroom, Margherita, FourSeasons, etc.). Siciliana pizzas are characterized by their toppings: they must include some tomato topping, garlic topping, ham topping, artichoke topping, olive topping, mozzarella topping, and anchovies topping. Furthermore, these pizzas are restricted to only have toppings from the following: anchovies, mozzarella, garlic, artichoke, tomato, ham, and olive—no additional toppings are permitted. This formalization precisely defines the Siciliana pizza in terms of both its composition and differentiation from other pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some HamTopping]', '[hasTopping some ArtichokeTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasTopping only (AnchoviesTopping and MozzarellaTopping and GarlicTopping and ArtichokeTopping and TomatoTopping and HamTopping and OliveTopping)]']}\nGenerated CQs:", "output": "Are Siciliana pizzas restricted to having only Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, or Olive as toppings? | Could a pizza still be classified as Siciliana if it includes a topping not listed among Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, or Olive? | Does the definition of Siciliana exclude all toppings other than Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, and Olive from being present on the pizza? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Soho\nDescription: Soho is defined as a subclass of NamedPizza and is explicitly disjoint with a range of other specific pizza types, ensuring that no instance can simultaneously belong to both Soho and these other classes. Members of the Soho class are characterized by their required toppings: each Soho pizza must include tomato, garlic, olive, mozzarella, parmesan, and rocket toppings. Additionally, the only permitted toppings for Soho pizzas are mozzarella, garlic, tomato, rocket, olive, or parmesan, meaning no other toppings are allowed on this type of pizza. This formalization strictly specifies both the mandatory inclusion and the exclusivity of particular toppings for Soho pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (MozzarellaTopping or GarlicTopping or TomatoTopping or RocketTopping or OliveTopping or ParmesanTopping)]', '[hasTopping some GarlicTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping only RocketTopping]']}\nGenerated CQs:", "output": "Is it required for a Soho pizza to have at least one topping of RocketTopping? | Does every Soho pizza include RocketTopping as one of its toppings? | Can a Soho pizza exist without having any RocketTopping among its toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Veneziana\nDescription: Veneziana is defined as a subclass of NamedPizza and is disjoint with a range of other specific pizzas, ensuring no individual instance can simultaneously belong to Veneziana and any of those disjoint classes. Members of the Veneziana class must have only the following toppings: MozzarellaTopping, TomatoTopping, SultanaTopping, OnionTopping, CaperTopping, OliveTopping, or PineKernels; each member is also required to have at least one of each of these toppings present. Additionally, Veneziana pizzas have Italy as their country of origin. This ontological definition captures the uniquely defined set of ingredients and exclusive identity of the Veneziana pizza within the broader NamedPizza category.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping only (MozzarellaTopping or TomatoTopping or SultanaTopping or OnionTopping or CaperTopping or OliveTopping or PineKernels)]', '[hasTopping some PineKernels]', '[hasTopping some TomatoTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasCountryOfOrigin hasValue Italy]', '[hasTopping some CaperTopping]', '[hasTopping only SultanaTopping]']}\nGenerated CQs:", "output": "Must a Veneziana pizza have at least one SultanaTopping as one of its toppings? | Is the presence of SultanaTopping a required condition for classifying a pizza as Veneziana? | Can a pizza lacking SultanaTopping ever be correctly categorized as Veneziana? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ArtichokeTopping\nDescription: ArtichokeTopping is defined as a subclass of VegetableTopping and is explicitly disjoint with a range of other vegetable toppings, including RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that no individual can be classified as an ArtichokeTopping and any of these other types simultaneously. Furthermore, every member of the ArtichokeTopping class is constrained to have at least some level of mild spiciness (hasSpiciness some Mild), distinguishing it by its gentle flavor profile within the broader category of vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every ArtichokeTopping required to have at least one spiciness level classified as Mild? | Can an ArtichokeTopping exist without possessing any degree of spiciness identified as Mild? | Does the definition of ArtichokeTopping permit toppings with only Mild spiciness, or could additional spiciness levels also be present? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AsparagusTopping\nDescription: AsparagusTopping is defined as a subclass of VegetableTopping, meaning it represents a specific type of vegetable-based topping. It is disjoint with several other vegetable toppings, including RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that an individual cannot simultaneously belong to any of these classes. Additionally, every instance of AsparagusTopping must have some level of mild spiciness, as specified by the hasSpiciness property restriction.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every AsparagusTopping required to have at least one 'hasSpiciness' property with a Mild value? | Must AsparagusTopping always be associated with some level of Mild spiciness through the hasSpiciness property? | Can there exist an instance of AsparagusTopping without having any Mild spiciness via the hasSpiciness relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CaperTopping\nDescription: CaperTopping is defined as a subclass of VegetableTopping, indicating that it is a specific type of vegetable-based topping. It is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, meaning that an individual topping cannot belong to both CaperTopping and any of these classes simultaneously. Additionally, CaperTopping is characterized by having a property restriction requiring that it has some level of spiciness classified as Mild.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Must every CaperTopping have at least one hasSpiciness value that is Mild? | Is it possible for a CaperTopping to lack any hasSpiciness relation with Mild as a value? | Does the definition of CaperTopping require the existence of a Mild spiciness property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeekTopping\nDescription: LeekTopping is defined as a subclass of VegetableTopping, representing toppings made from leeks. It is explicitly disjoint from a range of other vegetable toppings—including RocketTopping, OnionTopping, SpinachTopping, and others—ensuring that no individual can be both a LeekTopping and any of these other toppings simultaneously. Furthermore, members of this class are characterized by the property that they have at least some level of mild spiciness (hasSpiciness some Mild), distinguishing their flavor profile among vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it necessary for a LeekTopping to have the property 'hasSpiciness' with at least one Mild value? | Does every instance of LeekTopping possess a spiciness that includes Mild as one of its characteristics? | Can a LeekTopping exist without being associated with some degree of Mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OliveTopping\nDescription: OliveTopping is defined as a subclass of VegetableTopping and is disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—meaning an individual cannot belong to both OliveTopping and any of these classes. Members of the OliveTopping class are further characterized by the property that they have at least some level of spiciness classified as mild.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every OliveTopping required to have a spiciness property with at least one value of Mild? | Can an OliveTopping exist without any mild spiciness associated with it? | Are all OliveTopping instances guaranteed to possess some degree of mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PetitPoisTopping\nDescription: PetitPoisTopping is defined as a subclass of VegetableTopping and is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, and TomatoTopping—meaning no individual can simultaneously belong to PetitPoisTopping and any of these other topping classes. Additionally, PetitPoisTopping is characterized by the property restriction that it has some level of spiciness classified as Mild. This formalization ensures that PetitPoisTopping represents a unique, mildly spicy vegetable topping distinct from all other specified vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that a PetitPoisTopping ingredient has at least one spiciness level classified as Mild? | Does every PetitPoisTopping possess the property 'hasSpiciness' relating it to Mild spiciness? | Can a PetitPoisTopping exist without any association to Mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RocketTopping\nDescription: RocketTopping is defined as a subclass of VegetableTopping, representing a specific type of vegetable-based topping. It is disjoint with multiple other vegetable toppings, including LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—ensuring no individual can simultaneously belong to RocketTopping and any of these classes. Additionally, RocketTopping is characterized by the property that it must have at least some medium level of spiciness (hasSpiciness some Medium).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Medium]']}\nGenerated CQs:", "output": "Is it necessary for a RocketTopping to have the hasSpiciness property with Medium as its value? | Must every instance of RocketTopping exhibit at least some degree of Medium spiciness? | Does the presence of Medium spiciness through the hasSpiciness property define a RocketTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TomatoTopping\nDescription: TomatoTopping is a subclass of VegetableTopping, representing toppings derived from tomatoes. It is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, and PetitPoisTopping, ensuring that no individual can simultaneously be both a TomatoTopping and any of these other toppings. Additionally, TomatoTopping is defined to always have some level of mild spiciness, as specified by the restriction [hasSpiciness some Mild].\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that every TomatoTopping possesses at least one spiciness classified as Mild? | Can a TomatoTopping exist without having any mild spiciness attribute? | Does the definition of TomatoTopping permit it to have only non-mild spiciness levels? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RosemaryTopping\nDescription: RosemaryTopping is defined as a subclass of HerbSpiceTopping, representing toppings that are both herbal and spicy in nature. This class is explicitly disjoint with CajunSpiceTopping, ensuring that no topping can be classified simultaneously as RosemaryTopping and CajunSpiceTopping. RosemaryTopping is further characterized by the property restriction that it must have at least some mild spiciness, distinguishing it from toppings with no or higher levels of spiciness.\nAxiom: {'subClassOf': ['HerbSpiceTopping'], 'disjointWith': ['CajunSpiceTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every RosemaryTopping required to have a spiciness level that is Mild? | Can a RosemaryTopping exist without any mild spiciness property? | Must all instances of RosemaryTopping possess at least one spiciness classified as Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FishTopping\nDescription: FishTopping is defined as a subclass of PizzaTopping and is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no topping instance can simultaneously belong to more than one of these classes. Members of the FishTopping class are characterized by the property that they possess at least some mild level of spiciness, as specified by the 'hasSpiciness some Mild' restriction. This formalization guarantees the uniqueness and specific mild spiciness characteristic of any pizza topping categorized as FishTopping.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'CheeseTopping', 'HerbSpiceTopping', 'NutTopping', 'FruitTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Must every FishTopping include at least one instance with hasSpiciness set to Mild? | Is it required that FishTopping hasSpiciness relates to Mild in at least one case? | Can a topping classified as FishTopping exist without being associated with any Mild spiciness level? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NutTopping\nDescription: NutTopping is defined as a subclass of PizzaTopping, representing pizza toppings that consist specifically of nuts. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, and FruitTopping, ensuring that no topping instance can simultaneously belong to these other topping categories. Additionally, every NutTopping must have at least some level of mild spiciness, as constrained by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'FruitTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it necessary for a NutTopping to have at least one hasSpiciness property value that is Mild? | Must every instance of NutTopping be associated with some mild level of spiciness through the hasSpiciness property? | Does the presence of a NutTopping imply the existence of a hasSpiciness relationship to Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FourCheesesTopping\nDescription: FourCheesesTopping is defined as a subclass of CheeseTopping, representing a specific type of cheese topping distinguished by its composition of four cheeses. It is declared disjoint with GoatsCheeseTopping, MozzarellaTopping, GorgonzolaTopping, and ParmesanTopping, meaning an individual topping cannot simultaneously be classified as FourCheesesTopping and any of these other specific cheese toppings. Additionally, FourCheesesTopping must have a spiciness level that is at least mildly spicy, as specified by the restriction that it has some Mild spiciness.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'MozzarellaTopping', 'GorgonzolaTopping', 'ParmesanTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Must every FourCheesesTopping have at least one hasSpiciness relationship to Mild? | Is it required for a FourCheesesTopping to exhibit some level of spiciness classified as Mild? | Does the existence of a Mild spiciness property suffice for an instance to be considered a FourCheesesTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GoatsCheeseTopping\nDescription: GoatsCheeseTopping is defined as a subclass of CheeseTopping and is explicitly disjoint with MozzarellaTopping, GorgonzolaTopping, ParmesanTopping, and FourCheesesTopping, meaning an individual topping cannot simultaneously belong to any of these classes. GoatsCheeseTopping is characterized by the property that it has some degree of mild spiciness (hasSpiciness some Mild), indicating that any topping of this class is mildly spicy.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['MozzarellaTopping', 'GorgonzolaTopping', 'ParmesanTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that any GoatsCheeseTopping must exhibit at least one instance of the hasSpiciness property with value Mild? | Does every GoatsCheeseTopping have an associated spiciness level that includes Mild? | Can a GoatsCheeseTopping exist without being characterized by the hasSpiciness property set to Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GorgonzolaTopping\nDescription: GorgonzolaTopping is defined as a subclass of CheeseTopping, representing a specific type of cheese-based topping. It is explicitly disjoint with GoatsCheeseTopping, MozzarellaTopping, ParmesanTopping, and FourCheesesTopping, ensuring that an individual cannot simultaneously belong to any of these classes. GorgonzolaTopping is characterized by having some level of mild spiciness, as specified by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'MozzarellaTopping', 'ParmesanTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that every GorgonzolaTopping has at least one spiciness characteristic classified as Mild? | Can a GorgonzolaTopping exist without being associated with the Mild level of spiciness? | Does the definition of GorgonzolaTopping necessitate that it possesses the property 'hasSpiciness' with respect to Mild flavor? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MozzarellaTopping\nDescription: MozzarellaTopping is a subclass of CheeseTopping, representing a cheese-based topping specifically characterized by its mild spiciness and Italian origin. It is explicitly disjoint from GoatsCheeseTopping, GorgonzolaTopping, ParmesanTopping, and FourCheesesTopping, ensuring that no individual can simultaneously be an instance of MozzarellaTopping and any of these other cheese topping classes. All individuals of MozzarellaTopping are associated with a mild level of spiciness and must originate from Italy.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'GorgonzolaTopping', 'ParmesanTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasCountryOfOrigin hasValue Italy]', '[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that every MozzarellaTopping has at least some level of spiciness categorized as Mild? | Can a MozzarellaTopping exist without having the hasSpiciness property set to Mild? | Does the presence of MozzarellaTopping entail that it must be associated with a Mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChickenTopping\nDescription: ChickenTopping is defined as a subclass of MeatTopping and is explicitly disjoint with PeperoniSausageTopping, HotSpicedBeefTopping, and HamTopping, ensuring that no individual can simultaneously belong to both ChickenTopping and any of these other meat topping classes. Members of the ChickenTopping class are required to have at least some level of spiciness characterized as Mild. This formalization specifies that ChickenTopping represents mild, non-overlapping meat-based pizza toppings distinct from other specified meat varieties.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'HotSpicedBeefTopping', 'HamTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Does every ChickenTopping require at least one hasSpiciness property value of Mild? | Is it necessary for a ChickenTopping to be associated with some level of spiciness classified as Mild? | Can a ChickenTopping exist without having any hasSpiciness relationship to Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HotSpicedBeefTopping\nDescription: HotSpicedBeefTopping is defined as a subclass of MeatTopping, representing a specific type of meat-based pizza topping. It is disjoint with PeperoniSausageTopping, HamTopping, and ChickenTopping, meaning no individual topping can simultaneously belong to any of these classes and HotSpicedBeefTopping. Members of this class are characterized by having at least some degree of spiciness classified as Hot, distinguishing them from other meat toppings in the ontology.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'HamTopping', 'ChickenTopping'], 'propertyRestrictions': ['[hasSpiciness only Hot]']}\nGenerated CQs:", "output": "Must every HotSpicedBeefTopping have at least one hasSpiciness property value that is Hot? | Is it necessary for HotSpicedBeefTopping to be associated with some level of hot spiciness via the hasSpiciness property? | Can a HotSpicedBeefTopping exist without having the hasSpiciness property filled with a Hot value? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: JalapenoPepperTopping\nDescription: JalapenoPepperTopping is formally defined as a subclass of PepperTopping, indicating that it inherits all general characteristics of pepper-based toppings. It is explicitly disjoint with SweetPepperTopping, GreenPepperTopping, and PeperonataTopping, meaning that no individual can simultaneously be an instance of JalapenoPepperTopping and any of these other topping types. Additionally, this class is characterized by the property restriction that every JalapenoPepperTopping must exhibit some level of hot spiciness, ensuring that all members are differentiated by their distinctly hot flavor profile.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['SweetPepperTopping', 'GreenPepperTopping', 'PeperonataTopping'], 'propertyRestrictions': ['[hasSpiciness only Hot]']}\nGenerated CQs:", "output": "Must every JalapenoPepperTopping have at least one instance of spiciness classified as Hot? | Is it required for JalapenoPepperTopping to possess the hasSpiciness property associated with Hot? | Can JalapenoPepperTopping exist without being connected to Hot via the hasSpiciness property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeperonataTopping\nDescription: PeperonataTopping is defined as a subclass of PepperTopping, meaning it inherits all characteristics typical of pepper-based pizza toppings. It is explicitly disjoint with SweetPepperTopping, GreenPepperTopping, and JalapenoPepperTopping, so no individual can simultaneously belong to any of those classes and PeperonataTopping. Every instance of PeperonataTopping is required to have at least some medium level of spiciness, as specified by its property restriction on hasSpiciness. This ensures that PeperonataTopping is uniquely distinguished by both its type within pepper toppings and its characteristic spiciness.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['SweetPepperTopping', 'GreenPepperTopping', 'JalapenoPepperTopping'], 'propertyRestrictions': ['[hasSpiciness only Medium]']}\nGenerated CQs:", "output": "Must every PeperonataTopping have at least one hasSpiciness property with Medium as its value? | Can a PeperonataTopping exist without being associated with Medium spiciness through the hasSpiciness property? | Is it a requirement that PeperonataTopping be linked to Medium spiciness by means of the hasSpiciness property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SweetPepperTopping\nDescription: SweetPepperTopping is defined as a subclass of PepperTopping, specifying that it represents a type of pepper-based topping. It is explicitly disjoint with GreenPepperTopping, JalapenoPepperTopping, and PeperonataTopping, so no individual can be both a SweetPepperTopping and any of these other pepper toppings. Additionally, SweetPepperTopping has a property restriction requiring that it exhibits at least some mild level of spiciness (hasSpiciness some Mild), distinguishing it from potentially hotter pepper toppings.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['GreenPepperTopping', 'JalapenoPepperTopping', 'PeperonataTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is every SweetPepperTopping required to have a spiciness level that is at least Mild? | Must there exist at least one instance where SweetPepperTopping has spiciness classified as Mild? | Can a SweetPepperTopping exist without being associated with Mild spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IceCream\nDescription: IceCream is defined as a subclass of Food, and is explicitly disjoint with Pizza, PizzaTopping, and PizzaBase, ensuring that no individual can simultaneously belong to any of these classes. All members of the IceCream class must have at least one topping from FruitTopping, as specified by the property restriction (hasTopping some FruitTopping). The current modeling highlights a domain constraint issue: since the hasTopping property has Pizza as its domain, any use of hasTopping causes the reasoner to infer membership in Pizza. Combined with the disjointness between Pizza and IceCream, this results in a logical inconsistency, illustrating the importance of carefully aligning property domains with intended class usage.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['Pizza', 'PizzaTopping', 'PizzaBase'], 'propertyRestrictions': ['[hasTopping only FruitTopping]']}\nGenerated CQs:", "output": "Is it required for every IceCream to include at least one topping that is a FruitTopping? | Can an IceCream exist without having any FruitTopping as a topping? | Does the presence of a FruitTopping as a topping suffice for something to be classified as IceCream? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pizza\nDescription: Pizza is defined as a subclass of Food and is explicitly disjoint with IceCream, PizzaTopping, and PizzaBase, ensuring that no individual can simultaneously be an instance of Pizza and any of these disjoint classes. Every Pizza must have at least one base, specified by the restriction that it must have some relationship via hasBase to an instance of PizzaBase. This formalization captures the essential structure of a pizza: a food item composed of a particular base and distinguished from toppings or other food types such as ice cream.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['IceCream', 'PizzaTopping', 'PizzaBase'], 'propertyRestrictions': ['[hasBase only PizzaBase]']}\nGenerated CQs:", "output": "Must every Pizza have at least one 'hasBase' relationship with some PizzaBase? | Is it required that a Pizza is associated with a PizzaBase via the 'hasBase' property? | Can a Pizza exist without having a 'hasBase' connection to any instance of PizzaBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SlicedTomatoTopping\nDescription: SlicedTomatoTopping is defined as a subclass of TomatoTopping and is explicitly disjoint with SundriedTomatoTopping, ensuring that no individual can be both a SlicedTomatoTopping and a SundriedTomatoTopping. Members of this class are characterized by the property that they must have at least some level of mild spiciness, as specified by the hasSpiciness restriction.\nAxiom: {'subClassOf': ['TomatoTopping'], 'disjointWith': ['SundriedTomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Must a SlicedTomatoTopping possess the property hasSpiciness with at least some value classified as Mild? | Does every instance of SlicedTomatoTopping necessarily have some form of spiciness level that is Mild? | Can a SlicedTomatoTopping exist without being associated to Mild via the hasSpiciness property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SundriedTomatoTopping\nDescription: SundriedTomatoTopping is a subclass of TomatoTopping, meaning it inherits all characteristics typical of tomato-based toppings. It is defined as disjoint with SlicedTomatoTopping, ensuring that an individual cannot be both a SundriedTomatoTopping and a SlicedTomatoTopping. Additionally, every instance of SundriedTomatoTopping must have at least some mild level of spiciness, as specified by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['TomatoTopping'], 'disjointWith': ['SlicedTomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "output": "Is it required that every SundriedTomatoTopping possesses the hasSpiciness property with at least one Mild instance? | Can SundriedTomatoTopping have spiciness levels other than Mild, or must it always include Mild spiciness? | Does the ontology entail that SundriedTomatoTopping must be associated with some form of Mild spiciness via the hasSpiciness relation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizza\nDescription: VegetarianPizza is defined as a subclass of Pizza that is disjoint with NonVegetarianPizza, meaning no pizza can be both vegetarian and non-vegetarian. It is equivalent to pizzas that have neither meat toppings nor fish toppings—specifically, these pizzas do not have any topping that is an instance of MeatTopping or FishTopping. VegetarianPizza may have any combination of non-meat, non-fish toppings or no toppings at all, as specified in the current description. This ensures that only pizzas entirely free of meat and fish toppings are classified as VegetarianPizza.\nAxiom: {'disjointWith': ['NonVegetarianPizza'], 'equivalentClass': ['(Pizza and not [hasTopping some MeatTopping] and not [hasTopping only FishTopping])']}\nGenerated CQs:", "output": "Is every VegetarianPizza necessarily a Pizza that does not have any toppings which qualify as MeatTopping or FishTopping? | Is VegetarianPizza equivalent to the intersection of Pizza and those lacking both meat and fish as toppings? | Can VegetarianPizza be fully characterized as Pizzas for which there does not exist a MeatTopping or FishTopping among their toppings? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NonVegetarianPizza\nDescription: NonVegetarianPizza is formally defined as any Pizza that is not a VegetarianPizza. It is explicitly disjoint with VegetarianPizza, ensuring that no individual pizza can be both a NonVegetarianPizza and a VegetarianPizza. The equivalence axiom specifies that NonVegetarianPizza includes all and only those pizzas that are instances of Pizza but not classified as VegetarianPizza.\nAxiom: {'disjointWith': ['VegetarianPizza'], 'equivalentClass': ['(Pizza or not VegetarianPizza)']}\nGenerated CQs:", "output": "Is every NonVegetarianPizza necessarily a Pizza that is not a VegetarianPizza? | Is NonVegetarianPizza logically defined as the intersection of Pizza and the complement of VegetarianPizza? | Does the class NonVegetarianPizza exclude any Pizza that is a VegetarianPizza? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseyPizza\nDescription: CheeseyPizza is formally defined as any Pizza that has at least one cheese topping, expressed by the equivalence axiom: CheeseyPizza ≡ Pizza and (hasTopping some CheeseTopping). This means that every instance of CheeseyPizza must be a pizza with one or more cheese toppings, aligning with the description: any pizza that has at least one cheese topping.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only CheeseTopping])']}\nGenerated CQs:", "output": "Is a CheeseyPizza necessarily a Pizza that has at least one CheeseTopping as a topping? | Is the set of CheeseyPizza identical to the intersection of all Pizzas and those having some CheeseTopping? | Can an individual be classified as CheeseyPizza only if it is both a Pizza and possesses at least one hasTopping relationship to CheeseTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Country\nDescription: Country is an enumerated class, defined as exactly the set containing America, England, France, Germany, and Italy. It is equivalent to the intersection of this set and DomainConcept, meaning each Country instance must be one of these individuals and also a DomainConcept. By axiom, no other individuals can be classified as Country; all specified countries are explicitly different from each other.\nAxiom: {'equivalentClass': ['({America, Italy, Germany, France, England} or DomainConcept)']}\nGenerated CQs:", "output": "Is Country defined as the intersection of the individuals America, Italy, Germany, France, England and the class DomainConcept? | Does every instance of Country correspond to one of America, Italy, Germany, France, or England and also to DomainConcept? | Are there any individuals that are America, Italy, Germany, France, or England and DomainConcept but not classified as Country? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterestingPizza\nDescription: InterestingPizza is defined as a subclass of Pizza that has at least three toppings, as specified by a minimum cardinality restriction (hasTopping min 3). This class is equivalent to pizzas possessing at least three values for the hasTopping property, regardless of the type of topping. It is important to note that this restriction is not a qualified cardinality constraint (QCR); it does not require that the toppings belong to a specific class such as PizzaTopping. This formalization captures any pizza with three or more toppings without specifying their types.\nAxiom: {'equivalentClass': ['([hasTopping min 3] or Pizza)']}\nGenerated CQs:", "output": "Does every InterestingPizza necessarily have at least three toppings and be a Pizza? | Can InterestingPizza be considered identical to the intersection of Pizzas with a minimum of three toppings? | Is having at least three toppings a necessary and sufficient condition for a Pizza to be an InterestingPizza? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MeatyPizza\nDescription: MeatyPizza is defined as any pizza (Pizza) that has at least one meat topping, formalized through an existential restriction stating that members of this class must bear at least one hasTopping relationship to an individual of class MeatTopping. This class is equivalent to the intersection of Pizza and those entities with some MeatTopping as a topping, ensuring all MeatyPizza instances feature at least one meat-based topping.\nAxiom: {'equivalentClass': ['([hasTopping only MeatTopping] or Pizza)']}\nGenerated CQs:", "output": "Is MeatyPizza defined as the intersection of Pizza and entities having at least one meat topping? | Does every MeatyPizza necessarily include some topping categorized as MeatTopping? | Can MeatyPizza be fully characterized as a Pizza that has at least one MeatTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyPizza\nDescription: SpicyPizza is defined as any pizza (i.e., an instance of the class Pizza) that has at least one topping which is a SpicyTopping. This equivalence axiom ensures that all and only those pizzas with some spicy topping are classified under SpicyPizza. Thus, membership in the SpicyPizza class is determined precisely by the presence of at least one spicy topping.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping some SpicyTopping])']}\nGenerated CQs:", "output": "Is every SpicyPizza necessarily a Pizza that has at least one topping classified as a SpicyTopping? | Can SpicyPizza be precisely defined as the intersection of the class Pizza and those with some SpicyTopping? | Is SpicyPizza equivalent to pizzas that are distinguished by having at least one spicy topping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyPizzaEquivalent\nDescription: SpicyPizzaEquivalent is defined as any Pizza that has at least one topping which is both a PizzaTopping and has a spiciness level of Hot. This equivalence axiom provides an alternative to approaches relying on a predefined SpicyTopping class, specifying instead that membership in SpicyPizzaEquivalent requires the existence of a topping meeting both conditions. This ensures precise classification of spicy pizzas based on their actual toppings' spiciness attributes.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only ([hasSpiciness some Hot] or PizzaTopping)])']}\nGenerated CQs:", "output": "Is every SpicyPizzaEquivalent necessarily a Pizza with at least one topping that is both a PizzaTopping and possesses some degree of Hot spiciness? | Is SpicyPizzaEquivalent logically defined as the intersection of Pizza and those with a topping that is both a PizzaTopping and includes some Hot spiciness? | Can SpicyPizzaEquivalent be fully characterized as a Pizza that has a topping which is a PizzaTopping and has some Hot as its spiciness? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyTopping\nDescription: SpicyTopping is defined as an equivalent class to pizza toppings that possess a spiciness level of Hot. This means every SpicyTopping is a PizzaTopping and must have at least one instance of hot spiciness. Formally, individuals in this class are restricted to those pizza toppings that are characterized by having a hot spiciness attribute.\nAxiom: {'equivalentClass': ['([hasSpiciness some Hot] or PizzaTopping)']}\nGenerated CQs:", "output": "Is every SpicyTopping necessarily both a PizzaTopping and something that has spiciness characterized as Hot? | Can SpicyTopping be defined as the intersection of PizzaTopping and entities with the property hasSpiciness some Hot? | Is SpicyTopping equivalent to all PizzaTopping instances that have at least one Hot spiciness attribute? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ThinAndCrispyPizza\nDescription: ThinAndCrispyPizza is formally defined as a subclass of Pizza whose base is exclusively of type ThinAndCrispyBase. This means any individual classified as a ThinAndCrispyPizza must be a Pizza and can only have ThinAndCrispyBase as its base, with no other base types permitted. This equivalence axiom precisely characterizes ThinAndCrispyPizza by its unique crust style.\nAxiom: {'equivalentClass': ['(Pizza and [hasBase some ThinAndCrispyBase])']}\nGenerated CQs:", "output": "Is every ThinAndCrispyPizza required to have only ThinAndCrispyBase as its base? | Is ThinAndCrispyPizza equivalent to pizzas that exclusively use ThinAndCrispyBase? | Can ThinAndCrispyPizza be fully defined as the intersection of Pizza and things with base restricted solely to ThinAndCrispyBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizzaEquivalent1\nDescription: VegetarianPizzaEquivalent1 is defined as any pizza (member of the Pizza class) whose toppings, if present, are exclusively vegetarian; that is, it only has toppings that are instances of VegetarianTopping, or it has no toppings at all. Formally, it is equivalent to the intersection of Pizza and those that satisfy the restriction 'hasTopping only VegetarianTopping'. According to the description, this class should be inferred to be equivalent to VegetarianPizzaEquiv2 but is not equivalent to the broader VegetarianPizza class, as the latter does not assume that PizzaTopping encompasses all possible toppings.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only VegetarianTopping])']}\nGenerated CQs:", "output": "Does VegetarianPizzaEquivalent1 include only those Pizzas where all toppings are VegetarianTopping? | Is VegetarianPizzaEquivalent1 equivalent to the intersection of Pizza and items whose toppings are restricted to VegetarianTopping? | Can VegetarianPizzaEquivalent1 be defined as a Pizza that necessarily has only VegetarianTopping as its topping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizzaEquivalent2\nDescription: VegetarianPizzaEquivalent2 is defined as a class equivalent to pizzas that have only sauce, cheese, vegetable, fruit, nut, or herb & spice toppings—no other topping types are permitted. This definition provides an alternative to VegetarianPizzaEquiv1 by specifying allowed toppings directly, avoiding dependency on a pre-defined VegetarianTopping class. However, it is noted that this approach may be less maintainable and is not equivalent to the original VegetarianPizza class.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only (SauceTopping and CheeseTopping and VegetableTopping and FruitTopping and NutTopping and HerbSpiceTopping)])']}\nGenerated CQs:", "output": "Is VegetarianPizzaEquivalent2 defined as a Pizza that can only have toppings that are either SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping? | Can a VegetarianPizzaEquivalent2 ever have a topping outside the categories of SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping? | Is being a Pizza with toppings restricted exclusively to SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping sufficient for classification as a VegetarianPizzaEquivalent2? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianTopping\nDescription: VegetarianTopping is formally defined as a pizza topping that must be one of the following: SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping. This equivalence axiom ensures that every VegetarianTopping is a subclass of PizzaTopping and cannot be any topping outside this specified set. In practice, this means only toppings within these categories are considered vegetarian according to the ontology.\nAxiom: {'equivalentClass': ['(PizzaTopping or (SauceTopping and CheeseTopping and VegetableTopping and FruitTopping and NutTopping and HerbSpiceTopping))']}\nGenerated CQs:", "output": "Is every VegetarianTopping necessarily classified as a PizzaTopping and also as one of: SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping? | Is VegetarianTopping equivalent to the intersection of PizzaTopping with the union of SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, and HerbSpiceTopping? | Does VegetarianTopping include any toppings apart from SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping within the category of PizzaTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseyVegetableTopping\nDescription: CheeseyVegetableTopping is defined as a subclass of VegetableTopping, meaning every instance of CheeseyVegetableTopping is also an instance of VegetableTopping. There are no additional restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['VegetableTopping', 'CheeseTopping']}\nGenerated CQs:", "output": "Is CheeseyVegetableTopping categorized as a type of CheeseTopping? | What specific types fall under the class CheeseTopping, with regard to CheeseyVegetableTopping? | Which broader classes encompass CheeseyVegetableTopping within their classification? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HotGreenPepperTopping\nDescription: HotGreenPepperTopping is defined as a subclass of GreenPepperTopping, meaning every HotGreenPepperTopping is a type of GreenPepperTopping. There are no additional property restrictions or axioms specified for this class.\nAxiom: {'subClassOf': ['GreenPepperTopping'], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "output": "Is every HotGreenPepperTopping required to have a spiciness level that includes some instance of Hot? | Can a HotGreenPepperTopping exist that does not possess the hasSpiciness property with a value classified as Hot? | Does the presence of the hasSpiciness property with Hot necessarily characterize all instances of HotGreenPepperTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ParmaHamTopping\nDescription: ParmaHamTopping is defined as a subclass of HamTopping. This means every instance of ParmaHamTopping is necessarily an instance of HamTopping, inheriting all properties and characteristics of HamTopping. No additional distinguishing property restrictions are specified for this class.\nAxiom: {'subClassOf': ['HamTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "output": "Is every ParmaHamTopping required to have at least one level of spiciness classified as Mild? | Can a ParmaHamTopping exist without any Mild spiciness level? | Does the definition of ParmaHamTopping allow for spiciness levels other than Mild, provided that at least one is Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Spiciness\nDescription: Spiciness is defined as a subclass of ValuePartition, indicating that it represents a partitioning value within a larger classification scheme. As a ValuePartition, it is intended to categorize entities based on specific qualitative values or levels of spiciness. No additional equivalent class axioms are specified.\nAxiom: {'subClassOf': ['ValuePartition'], 'equivalentClass': ['(Hot or Medium or Mild)']}\nGenerated CQs:", "output": "Is Spiciness defined as exactly the union of Hot, Medium, and Mild? | Are all instances of Hot, Medium, or Mild considered Spiciness? | Does Spiciness include any categories apart from Hot, Medium, and Mild? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SultanaTopping\nDescription: SultanaTopping is a class defined by the property restriction that its members must exhibit some medium level of spiciness, as specified by the hasSpiciness property. No further superclass or disjointness constraints are asserted for this class.\nAxiom: {'subClassOf': ['FruitTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "output": "Is SultanaTopping classified as a kind of FruitTopping? | What toppings are considered subtypes of FruitTopping, including SultanaTopping? | Which higher-level topping categories encompass SultanaTopping? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TobascoPepperSauce\nDescription: TobascoPepperSauce is a class defined by its property restriction: all instances must have at least some degree of spiciness classified as Hot. There are no asserted superclass relationships, but the essential characteristic of this class is the requirement that every TobascoPepperSauce possesses hot spiciness.\nAxiom: {'subClassOf': ['SauceTopping'], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "output": "Is TobascoPepperSauce classified as a subcategory of SauceTopping? | Which toppings are more specific instances under SauceTopping, such as TobascoPepperSauce? | To which broader topping classes does TobascoPepperSauce belong? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RealItalianPizza\nDescription: RealItalianPizza is defined as an equivalent class to pizzas that have Italy as their country of origin. This means any individual that is classified as a pizza and is specifically identified as originating from Italy is considered a RealItalianPizza. The class captures the concept of authentic Italian pizza through this origin-based restriction.\nAxiom: {'equivalentClass': ['(Pizza and [hasCountryOfOrigin hasValue Italy])'], 'propertyRestrictions': ['[hasBase only ThinAndCrispyBase]']}\nGenerated CQs:", "output": "Is RealItalianPizza required to have only ThinAndCrispyBase as its base? | Can a RealItalianPizza have any base type other than ThinAndCrispyBase? | Does the definition of RealItalianPizza exclude all bases except for ThinAndCrispyBase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasSpiciness\nDescription: The property \"hasSpiciness\" is a functional property, meaning each subject can have at most one value for this property. Its range is restricted to the class \"Spiciness,\" but no explicit domain is specified. It is designed to denote the spiciness level of an entity, particularly in the context of a ValuePartition. There are no super-properties or inverse properties defined.\nAxiom: {'characteristics': ['Functional'], 'domain': ['None'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'hasSpiciness' accept any value that is not classified as Spiciness as its range? | Are all possible values of 'hasSpiciness' instances of the class Spiciness? | Which types of entities can serve as the range for the 'hasSpiciness' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isToppingOf\nDescription: The property \"isToppingOf\" is a functional object property, meaning each instance of \"PizzaTopping\" can be a topping of at most one \"Pizza\". Its domain is restricted to \"PizzaTopping\" and its range to \"Pizza\". \"isToppingOf\" is a sub-property of \"isIngredientOf\" and has \"hasTopping\" as its inverse. According to the description, each topping instance should only be associated with a single pizza.\nAxiom: {'characteristics': ['Functional'], 'domain': ['PizzaTopping'], 'range': ['Pizza'], 'subPropertyOf': ['isIngredientOf'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties ‘isToppingOf’ and ‘hasTopping’ related in terms of inverses within the ontology? | If an individual A isToppingOf B, does this entail that B hasTopping A in the ontology? | What property is defined as the inverse of ‘isToppingOf’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasIngredient\nDescription: The property \"hasIngredient\" is a transitive object property relating entities of type Food to other Food entities. Because of its transitivity, if Food A hasIngredient Food B and Food B hasIngredient Food C, then Food A also hasIngredient Food C. It has \"Food\" as both its domain and range, ensuring it only connects food items. The property is the inverse of \"isIngredientOf\" and carries no additional super-properties. Current comments note that due to transitivity, the ingredients of ingredients are considered ingredients of the whole.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['Food'], 'range': ['Food'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse property of ‘hasIngredient’ in the ontology? | If entity X has ingredient Y, does this entail that Y is an ingredient of X? | How does the ontology define the connection between ‘hasIngredient’ and ‘isIngredientOf’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasBase\nDescription: The property \"hasBase\" is both functional and inverse functional, ensuring that each Pizza has exactly one PizzaBase and each PizzaBase is associated with exactly one Pizza. Its domain is Pizza, and its range is PizzaBase, indicating it links pizzas to their bases. \"hasBase\" is a sub-property of \"hasIngredient,\" specifying it as a specialized form of ingredient relationship. It has an inverse property \"isBaseOf,\" which links PizzaBase to Pizza.\nAxiom: {'characteristics': ['Functional', 'InverseFunctional'], 'domain': ['Pizza'], 'range': ['PizzaBase'], 'subPropertyOf': ['hasIngredient'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the object properties ‘hasBase’ and ‘isBaseOf’ connected in terms of inverse relations within the ontology? | If entity A hasBase entity B, does the ontology entail that entity B isBaseOf entity A? | Which object property is defined as the inverse of ‘isBaseOf’ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasTopping\nDescription: The property \"hasTopping\" is an inverse functional object property, meaning each pizza topping can be associated with at most one pizza via this property. Its domain is restricted to Pizza, and its range is PizzaTopping. \"hasTopping\" is a sub-property of \"hasIngredient\" and has \"isToppingOf\" as its inverse property. Note that \"hasTopping\" is inverse functional because \"isToppingOf\" is functional.\nAxiom: {'characteristics': ['InverseFunctional'], 'domain': ['Pizza'], 'range': ['PizzaTopping'], 'subPropertyOf': ['hasIngredient'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the properties ‘hasTopping’ and ‘isToppingOf’ related in terms of logical inverses in the ontology? | If item A hasTopping item B, does the ontology entail that item B isToppingOf item A? | Which property functions as the inverse of ‘hasTopping’ in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isBaseOf\nDescription: The property \"isBaseOf\" is both functional and inverse functional, meaning each PizzaBase is the base of at most one Pizza, and each Pizza has at most one PizzaBase. Its domain is restricted to PizzaBase, and its range is Pizza. \"isBaseOf\" is a sub-property of \"isIngredientOf\" and has \"hasBase\" as its inverse property. This property is used to relate a PizzaBase to the Pizza for which it serves as the base.\nAxiom: {'characteristics': ['Functional', 'InverseFunctional'], 'domain': ['PizzaBase'], 'range': ['Pizza'], 'subPropertyOf': ['isIngredientOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Which property is formally specified as the inverse of ‘isBaseOf’ in the ontology? | If entity A isBaseOf entity B, does the ontology entail that B hasBase A? | How does the ontology define the logical connection between ‘isBaseOf’ and ‘hasBase’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isIngredientOf\nDescription: The property \"isIngredientOf\" is a transitive property relating instances of Food to other instances of Food, designating that one food is an ingredient of another. Its domain and range are both restricted to the class Food. \"isIngredientOf\" is the inverse of \"hasIngredient\" and should mirror all subproperties and attributes associated with \"hasIngredient,\" as noted in its current description. No super-properties are specified.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['Food'], 'range': ['Food'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse relationship defined between 'isIngredientOf' and 'hasIngredient' in the ontology? | If entity X is an ingredient of entity Y, does the ontology assert that Y has ingredient X? | Which property functions as the inverse for 'isIngredientOf' within this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasCountryOfOrigin\nDescription: The property \"hasCountryOfOrigin\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property, nor does it have an inverse property. Typically, \"hasCountryOfOrigin\" is intended to relate entities to their country of origin, but no further restrictions or definitions are enforced by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it correct that 'hasCountryOfOrigin' does not have a specified domain? | What types of subjects are allowed for the property 'hasCountryOfOrigin'? | Is it correct that 'hasCountryOfOrigin' does not have a defined range? "}
