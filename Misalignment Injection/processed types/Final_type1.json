{
    "AfricanWildlifeOntology1": {
        "classes": {
            "CarnivorousPlant": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[eats some animal]"
                    ]
                },
                "description": "CarnivorousPlant is defined as a subclass of plant whose members are characterized by possessing the ability to consume animals; specifically, each member must eat at least some animals. This distinguishes CarnivorousPlant from other plants by its unique adaptation for animal consumption.",
                "CQ": [
                    {
                        "axiom": "CarnivorousPlant subClassOf plant",
                        "CQ": [
                            "Is CarnivorousPlant classified under the broader category of plant?",
                            "Which types of plant include CarnivorousPlant as a more specific subclass?",
                            "What general plant categories encompass CarnivorousPlant?"
                        ]
                    },
                    {
                        "axiom": "CarnivorousPlant propertyRestrictions [eats some animal]",
                        "CQ": [
                            "Must every CarnivorousPlant have at least one instance of 'eats' relating to an animal?",
                            "Is it required for CarnivorousPlants to exhibit the 'eats' property with some animal?",
                            "Does the existence of a CarnivorousPlant imply that it consumes at least one animal through the 'eats' property?"
                        ]
                    }
                ],
                "removed axiom": "CarnivorousPlant subClassOf plant",
                "Target CQ": [
                    "Is CarnivorousPlant classified under the broader category of plant?",
                    "Which types of plant include CarnivorousPlant as a more specific subclass?",
                    "What general plant categories encompass CarnivorousPlant?"
                ],
                "Valid CQ": [
                    "Must every CarnivorousPlant have at least one instance of 'eats' relating to an animal?",
                    "Is it required for CarnivorousPlants to exhibit the 'eats' property with some animal?",
                    "Does the existence of a CarnivorousPlant imply that it consumes at least one animal through the 'eats' property?"
                ],
                "type": "Type1"
            },
            "Phloem": {
                "axiom": {
                    "subClassOf": [
                        "PlantParts"
                    ],
                    "propertyRestrictions": []
                },
                "description": "Phloem is defined as a subclass of PlantParts and is characterized by being a proper part of some Stem. This formalization specifies that every instance of Phloem must be a plant part that exists as a structural component within a stem, reflecting its biological role in the transport system of plants.",
                "CQ": [
                    {
                        "axiom": "Phloem subClassOf PlantParts",
                        "CQ": [
                            "Is Phloem classified under PlantParts?",
                            "What components are considered subclasses of PlantParts, such as Phloem?",
                            "To which broader classes does Phloem belong?"
                        ]
                    },
                    {
                        "axiom": "Phloem propertyRestrictions [is-proper-part-of some Stem]",
                        "CQ": [
                            "Is it required that every instance of Phloem is a proper part of some Stem?",
                            "Is the relationship ‘is-proper-part-of’ between Phloem and Stem necessarily present for each Phloem?",
                            "Can there exist a Phloem that is not a proper part of any Stem?"
                        ]
                    }
                ],
                "removed axiom": "Phloem propertyRestrictions [is-proper-part-of some Stem]",
                "Target CQ": [
                    "Is it required that every instance of Phloem is a proper part of some Stem?",
                    "Is the relationship ‘is-proper-part-of’ between Phloem and Stem necessarily present for each Phloem?",
                    "Can there exist a Phloem that is not a proper part of any Stem?"
                ],
                "Valid CQ": [
                    "Is Phloem classified under PlantParts?",
                    "What components are considered subclasses of PlantParts, such as Phloem?",
                    "To which broader classes does Phloem belong?"
                ],
                "type": "Type1"
            },
            "leaf": {
                "axiom": {
                    "subClassOf": [
                        "PlantParts"
                    ],
                    "propertyRestrictions": []
                },
                "description": "leaf is defined as a subclass of PlantParts and is characterized by the property restriction that each leaf must be part of either a twig or a branch. This formalization specifies that leaves are plant structures specifically found as components of twigs or branches, aligning with the description that leaves are parts of branches.",
                "CQ": [
                    {
                        "axiom": "leaf subClassOf PlantParts",
                        "CQ": [
                            "Is leaf categorized as a particular kind of PlantParts?",
                            "Which entities are more specific than PlantParts, such as leaf?",
                            "What higher-level groups include leaf in their classification?"
                        ]
                    },
                    {
                        "axiom": "leaf propertyRestrictions [is-part-of some (Twig or branch)]",
                        "CQ": [
                            "Must a leaf always be part of a twig or a branch according to the ontology?",
                            "Can a leaf exist without being part of either a twig or a branch?",
                            "Are twigs and branches the only structures to which a leaf may belong as a part?"
                        ]
                    }
                ],
                "removed axiom": "leaf propertyRestrictions [is-part-of some (Twig or branch)]",
                "Target CQ": [
                    "Must a leaf always be part of a twig or a branch according to the ontology?",
                    "Can a leaf exist without being part of either a twig or a branch?",
                    "Are twigs and branches the only structures to which a leaf may belong as a part?"
                ],
                "Valid CQ": [
                    "Is leaf categorized as a particular kind of PlantParts?",
                    "Which entities are more specific than PlantParts, such as leaf?",
                    "What higher-level groups include leaf in their classification?"
                ],
                "type": "Type1"
            },
            "carnivore": {
                "axiom": {
                    "subClassOf": [
                        "animal"
                    ],
                    "disjointWith": [],
                    "equivalentClass": [
                        "([eats only animal] or [eats only [is-part-of some animal]])"
                    ]
                },
                "description": "carnivore is defined as a subclass of animal and is disjoint with herbivore, meaning that no individual can be both a carnivore and a herbivore. It is equivalent to the class of animals whose diet consists exclusively of other animals or of parts derived from animals (i.e., they eat only animals or only things that are part of animals). This formalization captures the precise biological definition: carnivores are exactly those animals that eat only animals or animal parts.",
                "CQ": [
                    {
                        "axiom": "carnivore subClassOf animal",
                        "CQ": [
                            "Is animal a general category comprising carnivore?",
                            "What types are more specific than animal, including carnivore?",
                            "Which broader groups is carnivore classified under?"
                        ]
                    },
                    {
                        "axiom": "carnivore disjointWith herbivore",
                        "CQ": [
                            "What logical separation is specified between carnivore and herbivore within the ontology?",
                            "Is it permissible for an entity to be classified as both a carnivore and a herbivore?",
                            "Which classes are formally identified as disjoint with carnivore?"
                        ]
                    },
                    {
                        "axiom": "carnivore equivalentClass ([eats only animal] or [eats only [is-part-of some animal]])",
                        "CQ": [
                            "Is a carnivore defined as an organism that eats only animals or only parts that belong to animals?",
                            "Does the class carnivore include all entities that have the property 'eats' restricted solely to animals or to parts that are components of animals?",
                            "Are all instances of carnivore necessarily limited to consuming either animals or objects that are part of animals, according to the eats property restriction?"
                        ]
                    }
                ],
                "removed axiom": "carnivore disjointWith herbivore",
                "Target CQ": [
                    "What logical separation is specified between carnivore and herbivore within the ontology?",
                    "Is it permissible for an entity to be classified as both a carnivore and a herbivore?",
                    "Which classes are formally identified as disjoint with carnivore?"
                ],
                "Valid CQ": [
                    "Is animal a general category comprising carnivore?",
                    "What types are more specific than animal, including carnivore?",
                    "Which broader groups is carnivore classified under?",
                    "Is a carnivore defined as an organism that eats only animals or only parts that belong to animals?",
                    "Does the class carnivore include all entities that have the property 'eats' restricted solely to animals or to parts that are components of animals?",
                    "Are all instances of carnivore necessarily limited to consuming either animals or objects that are part of animals, according to the eats property restriction?"
                ],
                "type": "Type1"
            },
            "lion": {
                "axiom": {
                    "subClassOf": [
                        "animal"
                    ],
                    "propertyRestrictions": [
                        "[eats some Impala]"
                    ]
                },
                "description": "lion is defined as a subclass of animal, with dietary restrictions stating that it eats only herbivores, and among its possible prey, it is known to eat impalas. This means any individual classified as a lion is exclusively a consumer of herbivores, consistent with its role as a carnivorous predator in ecological systems. The description affirms that lions are animals that restrict their diet strictly to herbivorous species.",
                "CQ": [
                    {
                        "axiom": "lion subClassOf animal",
                        "CQ": [
                            "Is animal a more general classification than lion?",
                            "Which entities are categorized under animal, such as lion?",
                            "What broader classes does lion fall under within the ontology?"
                        ]
                    },
                    {
                        "axiom": "lion propertyRestrictions [eats only herbivore]",
                        "CQ": [
                            "Is every entity that a lion eats required to be a herbivore within the ontology?",
                            "Can a lion consume anything other than a herbivore according to the defined restrictions?",
                            "Does the ontology restrict lion's diet exclusively to entities classified as herbivores?"
                        ]
                    },
                    {
                        "axiom": "lion propertyRestrictions [eats some Impala]",
                        "CQ": [
                            "Is it required for a lion to consume at least one impala?",
                            "Can a lion be classified as such without ever eating an impala?",
                            "Does the existence of a feeding relationship between a lion and an impala necessarily hold for all lions?"
                        ]
                    }
                ],
                "removed axiom": "lion propertyRestrictions [eats only herbivore]",
                "Target CQ": [
                    "Is every entity that a lion eats required to be a herbivore within the ontology?",
                    "Can a lion consume anything other than a herbivore according to the defined restrictions?",
                    "Does the ontology restrict lion's diet exclusively to entities classified as herbivores?"
                ],
                "Valid CQ": [
                    "Is animal a more general classification than lion?",
                    "Which entities are categorized under animal, such as lion?",
                    "What broader classes does lion fall under within the ontology?",
                    "Is it required for a lion to consume at least one impala?",
                    "Can a lion be classified as such without ever eating an impala?",
                    "Does the existence of a feeding relationship between a lion and an impala necessarily hold for all lions?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "is-proper-part-of": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "is-part-of"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"is-proper-part-of\" is an irreflexive property, meaning no entity can be a proper part of itself. It does not have explicitly defined domain or range restrictions. This property is a subproperty of \"is-part-of,\" indicating a more specific parthood relation where the part is strictly contained within another entity. No inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "is-proper-part-of characteristics Irreflexive",
                        "CQ": [
                            "Is is-proper-part-of an irreflexive property, meaning that no entity in the ontology can be a proper part of itself?",
                            "Can an individual in the domain have is-proper-part-of relationship to itself according to the irreflexivity characteristic?",
                            "Does the irreflexive nature of is-proper-part-of prevent any class member from being related to itself through this property?"
                        ]
                    },
                    {
                        "axiom": "is-proper-part-of domain None",
                        "CQ": [
                            "What can be the domain of the property 'is-proper-part-of'?",
                            "Is it correct that 'is-proper-part-of' does not have an explicitly defined domain?",
                            "Are any entities restricted from being the subject of the 'is-proper-part-of' property?"
                        ]
                    },
                    {
                        "axiom": "is-proper-part-of range None",
                        "CQ": [
                            "What kinds of entities can appear as the object when using the 'is-proper-part-of' property?",
                            "Is the property 'is-proper-part-of' allowed to have any specified range?",
                            "Can 'is-proper-part-of' be linked to values of any type, or should it have a defined range?"
                        ]
                    },
                    {
                        "axiom": "is-proper-part-of subPropertyOf is-part-of",
                        "CQ": [
                            "Is every instance of is-proper-part-of also an instance of is-part-of?",
                            "Which properties are defined as subproperties of is-part-of?",
                            "What superproperties does is-proper-part-of possess within the ontology?"
                        ]
                    }
                ],
                "removed axiom": "is-proper-part-of characteristics Irreflexive",
                "Target CQ": [
                    "Is is-proper-part-of an irreflexive property, meaning that no entity in the ontology can be a proper part of itself?",
                    "Can an individual in the domain have is-proper-part-of relationship to itself according to the irreflexivity characteristic?",
                    "Does the irreflexive nature of is-proper-part-of prevent any class member from being related to itself through this property?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'is-proper-part-of'?",
                    "Is it correct that 'is-proper-part-of' does not have an explicitly defined domain?",
                    "Are any entities restricted from being the subject of the 'is-proper-part-of' property?",
                    "What kinds of entities can appear as the object when using the 'is-proper-part-of' property?",
                    "Is the property 'is-proper-part-of' allowed to have any specified range?",
                    "Can 'is-proper-part-of' be linked to values of any type, or should it have a defined range?",
                    "Is every instance of is-proper-part-of also an instance of is-part-of?",
                    "Which properties are defined as subproperties of is-part-of?",
                    "What superproperties does is-proper-part-of possess within the ontology?"
                ],
                "type": "Type1"
            },
            "is-part-of": {
                "axiom": {
                    "characteristics": [
                        "Transitive"
                    ],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"is-part-of\" is defined as both transitive and reflexive, meaning that if an entity is part of another, and that entity is part of a third, then the first is part of the third, and every entity is considered part of itself. There are no explicit domain or range restrictions, no super-properties, and no defined inverse property. This property is typically used to represent part-whole relationships within the ontology.",
                "CQ": [
                    {
                        "axiom": "is-part-of characteristics Transitive",
                        "CQ": [
                            "Is is-part-of a transitive property, so that if entity A is part of entity B and entity B is part of entity C, then entity A is also part of entity C?",
                            "Does the is-part-of relation infer indirect part-whole associations through its transitivity?",
                            "Can the transitive nature of is-part-of enable cascading part relationships across multiple entities?"
                        ]
                    },
                    {
                        "axiom": "is-part-of characteristics Reflexive",
                        "CQ": [
                            "Is is-part-of defined as a reflexive property, such that every entity in the ontology is related to itself via is-part-of?",
                            "Does the is-part-of relation ensure that all individuals are members of their own part structure?",
                            "Is it entailed that for any individual, the is-part-of property connects the individual to itself?"
                        ]
                    },
                    {
                        "axiom": "is-part-of domain None",
                        "CQ": [
                            "What can be the domain of the property 'is-part-of'?",
                            "Is it correct that the property 'is-part-of' does not have a specified domain?",
                            "Can 'is-part-of' be associated with entities of any type as its subject?"
                        ]
                    },
                    {
                        "axiom": "is-part-of range None",
                        "CQ": [
                            "Can the property 'is-part-of' have a range, or is it correct that it has none?",
                            "Which entities could potentially serve as the range for the property 'is-part-of'?",
                            "Is it necessary for 'is-part-of' to have a defined range in this ontology?"
                        ]
                    }
                ],
                "removed axiom": "is-part-of characteristics Reflexive",
                "Target CQ": [
                    "Is is-part-of defined as a reflexive property, such that every entity in the ontology is related to itself via is-part-of?",
                    "Does the is-part-of relation ensure that all individuals are members of their own part structure?",
                    "Is it entailed that for any individual, the is-part-of property connects the individual to itself?"
                ],
                "Valid CQ": [
                    "Is is-part-of a transitive property, so that if entity A is part of entity B and entity B is part of entity C, then entity A is also part of entity C?",
                    "Does the is-part-of relation infer indirect part-whole associations through its transitivity?",
                    "Can the transitive nature of is-part-of enable cascading part relationships across multiple entities?",
                    "What can be the domain of the property 'is-part-of'?",
                    "Is it correct that the property 'is-part-of' does not have a specified domain?",
                    "Can 'is-part-of' be associated with entities of any type as its subject?",
                    "Can the property 'is-part-of' have a range, or is it correct that it has none?",
                    "Which entities could potentially serve as the range for the property 'is-part-of'?",
                    "Is it necessary for 'is-part-of' to have a defined range in this ontology?"
                ],
                "type": "Type1"
            }
        }
    },
    "event": {
        "classes": {
            "Measurement": {
                "axiom": {
                    "subClassOf": [
                        "Event"
                    ],
                    "propertyRestrictions": [
                        "[hasQuality only PhysicalQuality]",
                        "[refersTo exactly 1 Entity]",
                        "[hasValue exactly 1]",
                        "[hasQuality exactly 1 PhysicalQuality]",
                        "[refersTo only Entity]"
                    ]
                },
                "description": "Measurement is defined as a subclass of Event. Each instance of Measurement must refer to exactly one Entity and is related only to entities of the class Entity. It must also possess exactly one PhysicalQuality, and the hasQuality property can only reference members of PhysicalQuality. Additionally, every Measurement must have exactly one value, this value being a literal as specified by the rdfs:Literal datatype. These axioms ensure that each Measurement event precisely characterizes the act of quantifying a single quality of a single entity and recording this observation as a literal value.",
                "CQ": [
                    {
                        "axiom": "Measurement subClassOf Event",
                        "CQ": [
                            "Is Measurement categorized as a more specific instance within the Event class?",
                            "Which subclasses are included under Event, specifically including Measurement?",
                            "What are the general class hierarchies that Measurement falls under?"
                        ]
                    },
                    {
                        "axiom": "Measurement propertyRestrictions [hasQuality only PhysicalQuality]",
                        "CQ": [
                            "Is every quality associated with a Measurement necessarily a PhysicalQuality?",
                            "Can a Measurement have any quality other than a PhysicalQuality?",
                            "Does the definition of Measurement restrict its qualities exclusively to PhysicalQuality?"
                        ]
                    },
                    {
                        "axiom": "Measurement propertyRestrictions [refersTo exactly 1 Entity]",
                        "CQ": [
                            "Is every Measurement linked to exactly one Entity via the refersTo property?",
                            "Can a Measurement be associated with more than one Entity through refersTo?",
                            "Does a Measurement necessarily require a single Entity as its refersTo value, excluding both zero and multiple associations?"
                        ]
                    },
                    {
                        "axiom": "Measurement propertyRestrictions [hasValue exactly 1]",
                        "CQ": [
                            "Is each Measurement associated with exactly one value for the property 'hasValue'?",
                            "Can a Measurement have multiple or no values for 'hasValue', or is it limited to precisely one?",
                            "Does the ontology require that every Measurement instance is linked to one and only one 'hasValue'?"
                        ]
                    },
                    {
                        "axiom": "Measurement propertyRestrictions [hasValue some rdfs:Literal]",
                        "CQ": [
                            "Is every Measurement associated with at least one value via the property hasValue?",
                            "Does the definition of Measurement require it to have the hasValue property linked to an rdfs:Literal?",
                            "Can a Measurement exist without specifying a hasValue relationship to any data value?"
                        ]
                    },
                    {
                        "axiom": "Measurement propertyRestrictions [hasQuality exactly 1 PhysicalQuality]",
                        "CQ": [
                            "Must every Measurement have exactly one associated PhysicalQuality through the hasQuality property?",
                            "Is it possible for a Measurement to have more than one PhysicalQuality linked by the hasQuality relation?",
                            "Does the ontology restrict Measurement instances to relate via hasQuality to one and only one PhysicalQuality?"
                        ]
                    },
                    {
                        "axiom": "Measurement propertyRestrictions [refersTo only Entity]",
                        "CQ": [
                            "Is it required that any measurement can only refer to entities and not to other kinds of things?",
                            "Are all possible references of measurement instances restricted exclusively to entities?",
                            "Does the property 'refersTo' in the context of measurement prohibit reference to anything except members of the Entity class?"
                        ]
                    }
                ],
                "removed axiom": "Measurement propertyRestrictions [hasValue some rdfs:Literal]",
                "Target CQ": [
                    "Is every Measurement associated with at least one value via the property hasValue?",
                    "Does the definition of Measurement require it to have the hasValue property linked to an rdfs:Literal?",
                    "Can a Measurement exist without specifying a hasValue relationship to any data value?"
                ],
                "Valid CQ": [
                    "Is Measurement categorized as a more specific instance within the Event class?",
                    "Which subclasses are included under Event, specifically including Measurement?",
                    "What are the general class hierarchies that Measurement falls under?",
                    "Is every quality associated with a Measurement necessarily a PhysicalQuality?",
                    "Can a Measurement have any quality other than a PhysicalQuality?",
                    "Does the definition of Measurement restrict its qualities exclusively to PhysicalQuality?",
                    "Is every Measurement linked to exactly one Entity via the refersTo property?",
                    "Can a Measurement be associated with more than one Entity through refersTo?",
                    "Does a Measurement necessarily require a single Entity as its refersTo value, excluding both zero and multiple associations?",
                    "Is each Measurement associated with exactly one value for the property 'hasValue'?",
                    "Can a Measurement have multiple or no values for 'hasValue', or is it limited to precisely one?",
                    "Does the ontology require that every Measurement instance is linked to one and only one 'hasValue'?",
                    "Must every Measurement have exactly one associated PhysicalQuality through the hasQuality property?",
                    "Is it possible for a Measurement to have more than one PhysicalQuality linked by the hasQuality relation?",
                    "Does the ontology restrict Measurement instances to relate via hasQuality to one and only one PhysicalQuality?",
                    "Is it required that any measurement can only refer to entities and not to other kinds of things?",
                    "Are all possible references of measurement instances restricted exclusively to entities?",
                    "Does the property 'refersTo' in the context of measurement prohibit reference to anything except members of the Entity class?"
                ],
                "type": "Type1"
            },
            "PhoneRinging": {
                "axiom": {
                    "subClassOf": [
                        "Ringing"
                    ],
                    "propertyRestrictions": []
                },
                "description": "PhoneRinging is defined as a subclass of Ringing, describing events or states where ringing occurs specifically due to a telephone. Every instance of PhoneRinging is associated with at least one agent that is a telephone, as specified by the property restriction (hasAgent some Telephone). This ensures that PhoneRinging refers exclusively to ringing acts caused by telephones, distinguishing it from other types of ringing (such as an alarm or bell).",
                "CQ": [
                    {
                        "axiom": "PhoneRinging subClassOf Ringing",
                        "CQ": [
                            "Is PhoneRinging categorized under the broader class of Ringing?",
                            "What instances fall under Ringing that are more specific, such as PhoneRinging?",
                            "Which higher-level classes include PhoneRinging as a subtype?"
                        ]
                    },
                    {
                        "axiom": "PhoneRinging propertyRestrictions [hasAgent some Telephone]",
                        "CQ": [
                            "Is it required that each PhoneRinging event involves at least one agent that is a Telephone?",
                            "Can a PhoneRinging event occur without being associated with a Telephone agent through the hasAgent property?",
                            "Does the occurrence of PhoneRinging always necessitate a Telephone participating as the agent via hasAgent?"
                        ]
                    }
                ],
                "removed axiom": "PhoneRinging propertyRestrictions [hasAgent some Telephone]",
                "Target CQ": [
                    "Is it required that each PhoneRinging event involves at least one agent that is a Telephone?",
                    "Can a PhoneRinging event occur without being associated with a Telephone agent through the hasAgent property?",
                    "Does the occurrence of PhoneRinging always necessitate a Telephone participating as the agent via hasAgent?"
                ],
                "Valid CQ": [
                    "Is PhoneRinging categorized under the broader class of Ringing?",
                    "What instances fall under Ringing that are more specific, such as PhoneRinging?",
                    "Which higher-level classes include PhoneRinging as a subtype?"
                ],
                "type": "Type1"
            },
            "InLocation": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[roomLocalisation some Room]"
                    ]
                },
                "description": "InLocation is defined as a subclass of AtomicActivity, representing activities associated with a specific physical location. Every instance of InLocation must have at least one roomLocalisation relationship to a Room, ensuring that all activities of this class are explicitly linked to a room where they occur.",
                "CQ": [
                    {
                        "axiom": "InLocation subClassOf AtomicActivity",
                        "CQ": [
                            "Does every instance of InLocation represent a form of AtomicActivity?",
                            "What are the more specific activities classified under AtomicActivity, such as InLocation?",
                            "Which upper-level activity categories include InLocation as a member?"
                        ]
                    },
                    {
                        "axiom": "InLocation propertyRestrictions [roomLocalisation some Room]",
                        "CQ": [
                            "Is it required that every instance of InLocation is associated with at least one Room via the roomLocalisation property?",
                            "Can an entity classified as InLocation exist without having a roomLocalisation relationship to a Room?",
                            "Does the presence of the roomLocalisation property with a Room determine whether an entity is an instance of InLocation?"
                        ]
                    }
                ],
                "removed axiom": "InLocation subClassOf AtomicActivity",
                "Target CQ": [
                    "Does every instance of InLocation represent a form of AtomicActivity?",
                    "What are the more specific activities classified under AtomicActivity, such as InLocation?",
                    "Which upper-level activity categories include InLocation as a member?"
                ],
                "Valid CQ": [
                    "Is it required that every instance of InLocation is associated with at least one Room via the roomLocalisation property?",
                    "Can an entity classified as InLocation exist without having a roomLocalisation relationship to a Room?",
                    "Does the presence of the roomLocalisation property with a Room determine whether an entity is an instance of InLocation?"
                ],
                "type": "Type1"
            },
            "HeartRate": {
                "axiom": {
                    "subClassOf": [
                        "PhysiologicalMeasurement"
                    ],
                    "propertyRestrictions": [
                        "[hasRate exactly 1]"
                    ]
                },
                "description": "HeartRate is defined as a subclass of PhysiologicalMeasurement, representing a specific type of physiological measurement characterized by having exactly one associated rate value, which must be provided as a literal (numerical) value. This class ensures that every instance of HeartRate records precisely one measurement value through the hasRate property.",
                "CQ": [
                    {
                        "axiom": "HeartRate subClassOf PhysiologicalMeasurement",
                        "CQ": [
                            "Does HeartRate fall under the classification of PhysiologicalMeasurement?",
                            "Which specific measurements are recognized as subtypes of PhysiologicalMeasurement, including HeartRate?",
                            "What broader measurement categories encompass HeartRate?"
                        ]
                    },
                    {
                        "axiom": "HeartRate propertyRestrictions [hasRate exactly 1]",
                        "CQ": [
                            "Is it required that each HeartRate instance is associated with exactly one value via the hasRate property?",
                            "Can a HeartRate have more than one or fewer than one hasRate value assigned?",
                            "Does the ontology prevent a HeartRate from having multiple or no hasRate properties?"
                        ]
                    },
                    {
                        "axiom": "HeartRate propertyRestrictions [hasRate some rdfs:Literal]",
                        "CQ": [
                            "Is every instance of HeartRate required to have at least one value assigned through the hasRate property?",
                            "Does the ontology specify that HeartRate always possesses a hasRate property linking to a literal value?",
                            "Is it necessary for HeartRate to be characterized by the presence of some hasRate relationship with a literal datatype?"
                        ]
                    }
                ],
                "removed axiom": "HeartRate propertyRestrictions [hasRate some rdfs:Literal]",
                "Target CQ": [
                    "Is every instance of HeartRate required to have at least one value assigned through the hasRate property?",
                    "Does the ontology specify that HeartRate always possesses a hasRate property linking to a literal value?",
                    "Is it necessary for HeartRate to be characterized by the presence of some hasRate relationship with a literal datatype?"
                ],
                "Valid CQ": [
                    "Does HeartRate fall under the classification of PhysiologicalMeasurement?",
                    "Which specific measurements are recognized as subtypes of PhysiologicalMeasurement, including HeartRate?",
                    "What broader measurement categories encompass HeartRate?",
                    "Is it required that each HeartRate instance is associated with exactly one value via the hasRate property?",
                    "Can a HeartRate have more than one or fewer than one hasRate value assigned?",
                    "Does the ontology prevent a HeartRate from having multiple or no hasRate properties?"
                ],
                "type": "Type1"
            },
            "InRoom": {
                "axiom": {
                    "subClassOf": [
                        "InLocation"
                    ],
                    "propertyRestrictions": []
                },
                "description": "InRoom is defined as a subclass of InLocation, indicating that it represents a more specific type of location context. Every instance of InRoom must be associated with at least one Place through the roomLocalisation property. This formalization ensures that anything classified as InRoom is located within a specified Place, thereby refining its spatial characterization within a broader location hierarchy.",
                "CQ": [
                    {
                        "axiom": "InRoom subClassOf InLocation",
                        "CQ": [
                            "Does InRoom represent a more specific instance within the broader InLocation category?",
                            "What are the direct subclasses that fall under InLocation, such as InRoom?",
                            "Which higher-level categories encompass InRoom as a subcategory?"
                        ]
                    },
                    {
                        "axiom": "InRoom propertyRestrictions [roomLocalisation some Place]",
                        "CQ": [
                            "Is every instance of InRoom associated with at least one Place via the roomLocalisation property?",
                            "Does the existence of the roomLocalisation property for InRoom necessarily indicate a connection to a Place?",
                            "Must an InRoom relation always specify a Place as its roomLocalisation?"
                        ]
                    }
                ],
                "removed axiom": "InRoom propertyRestrictions [roomLocalisation some Place]",
                "Target CQ": [
                    "Is every instance of InRoom associated with at least one Place via the roomLocalisation property?",
                    "Does the existence of the roomLocalisation property for InRoom necessarily indicate a connection to a Place?",
                    "Must an InRoom relation always specify a Place as its roomLocalisation?"
                ],
                "Valid CQ": [
                    "Does InRoom represent a more specific instance within the broader InLocation category?",
                    "What are the direct subclasses that fall under InLocation, such as InRoom?",
                    "Which higher-level categories encompass InRoom as a subcategory?"
                ],
                "type": "Type1"
            },
            "KettleOn": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[hasAgent some Kettle]"
                    ]
                },
                "description": "KettleOn is a subclass of On, representing states or events in which something is switched on. Specifically, KettleOn instances are characterized by having some agent that is a Kettle (i.e., a Kettle is responsible for or involved in the 'on' state). This ensures that only situations where a Kettle is turned on are included in this class.",
                "CQ": [
                    {
                        "axiom": "KettleOn subClassOf On",
                        "CQ": [
                            "Does KettleOn represent a specific instance within the broader class On?",
                            "Which situations classified as On also include KettleOn as a specialized case?",
                            "What general categories encompass KettleOn within the hierarchy of On?"
                        ]
                    },
                    {
                        "axiom": "KettleOn propertyRestrictions [hasAgent some Kettle]",
                        "CQ": [
                            "Is every instance classified under KettleOn required to have at least one hasAgent relationship to a Kettle?",
                            "Can there be a KettleOn event without any associated Kettle via the hasAgent property?",
                            "Does the definition of KettleOn ensure the existence of a hasAgent link to a Kettle?"
                        ]
                    }
                ],
                "removed axiom": "KettleOn subClassOf On",
                "Target CQ": [
                    "Does KettleOn represent a specific instance within the broader class On?",
                    "Which situations classified as On also include KettleOn as a specialized case?",
                    "What general categories encompass KettleOn within the hierarchy of On?"
                ],
                "Valid CQ": [
                    "Is every instance classified under KettleOn required to have at least one hasAgent relationship to a Kettle?",
                    "Can there be a KettleOn event without any associated Kettle via the hasAgent property?",
                    "Does the definition of KettleOn ensure the existence of a hasAgent link to a Kettle?"
                ],
                "type": "Type1"
            },
            "Lying": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[objectLocalisation some Furniture]"
                    ]
                },
                "description": "Lying is defined as a subclass of Posture and is characterized by the requirement that it occurs in association with some piece of Furniture. Any instance of Lying must involve an object that is at least partially localized on furniture, distinguishing this posture from other postures that may occur in different contexts.",
                "CQ": [
                    {
                        "axiom": "Lying subClassOf Posture",
                        "CQ": [
                            "Is Lying an instance of the general category Posture?",
                            "Which specific types of Posture include Lying as a subclass?",
                            "Under which broader classes within the ontology is Lying classified?"
                        ]
                    },
                    {
                        "axiom": "Lying propertyRestrictions [objectLocalisation some Furniture]",
                        "CQ": [
                            "Is it required that any instance of Lying must have an object localisation within some Furniture?",
                            "Can an Lying activity occur without involving the localisation of an object related to Furniture?",
                            "Does every Lying instance necessarily involve the localisation of an object that is classified as Furniture?"
                        ]
                    }
                ],
                "removed axiom": "Lying subClassOf Posture",
                "Target CQ": [
                    "Is Lying an instance of the general category Posture?",
                    "Which specific types of Posture include Lying as a subclass?",
                    "Under which broader classes within the ontology is Lying classified?"
                ],
                "Valid CQ": [
                    "Is it required that any instance of Lying must have an object localisation within some Furniture?",
                    "Can an Lying activity occur without involving the localisation of an object related to Furniture?",
                    "Does every Lying instance necessarily involve the localisation of an object that is classified as Furniture?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "hasLightLevel": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"hasLightLevel\" has no explicitly defined domain, range, or logical characteristics. It is a sub-property of \"hasValue,\" indicating that it is used to relate entities to their light level values in a manner more specific than the general value association. No inverse property is defined.",
                "CQ": [
                    {
                        "axiom": "hasLightLevel domain None",
                        "CQ": [
                            "Is it correct that the property 'hasLightLevel' does not have a specified domain?",
                            "What types of entities can be subjects of the 'hasLightLevel' property?",
                            "Can something other than a specific class serve as the domain for 'hasLightLevel'?"
                        ]
                    },
                    {
                        "axiom": "hasLightLevel range None",
                        "CQ": [
                            "Is it correct that the property 'hasLightLevel' does not specify a range?",
                            "What types of values can be associated as the range of the 'hasLightLevel' property?",
                            "Can any entity serve as a range for the property 'hasLightLevel', or should a specific type be defined?"
                        ]
                    },
                    {
                        "axiom": "hasLightLevel subPropertyOf hasValue",
                        "CQ": [
                            "Is hasValue a superproperty of hasLightLevel?",
                            "Which properties are defined as subproperties of hasValue within the ontology?",
                            "Do all instances of hasLightLevel also satisfy the conditions of hasValue?"
                        ]
                    }
                ],
                "removed axiom": "hasLightLevel subPropertyOf hasValue",
                "Target CQ": [
                    "Is hasValue a superproperty of hasLightLevel?",
                    "Which properties are defined as subproperties of hasValue within the ontology?",
                    "Do all instances of hasLightLevel also satisfy the conditions of hasValue?"
                ],
                "Valid CQ": [
                    "Is it correct that the property 'hasLightLevel' does not have a specified domain?",
                    "What types of entities can be subjects of the 'hasLightLevel' property?",
                    "Can something other than a specific class serve as the domain for 'hasLightLevel'?",
                    "Is it correct that the property 'hasLightLevel' does not specify a range?",
                    "What types of values can be associated as the range of the 'hasLightLevel' property?",
                    "Can any entity serve as a range for the property 'hasLightLevel', or should a specific type be defined?"
                ],
                "type": "Type1"
            },
            "hasConductivity": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"hasConductivity\" currently lacks explicit domain and range constraints and does not have specified logical characteristics or an inverse property. It is defined as a sub-property of \"hasValue,\" indicating that it inherits the semantics of associating an entity with a value, specifically in the context of electrical or thermal conductivity.",
                "CQ": [
                    {
                        "axiom": "hasConductivity domain None",
                        "CQ": [
                            "What types of entities can be the domain of the property 'hasConductivity'?",
                            "Is it correct that 'hasConductivity' does not have a specified domain?",
                            "Are there any classes that should be considered as potential domains for 'hasConductivity'?"
                        ]
                    },
                    {
                        "axiom": "hasConductivity range None",
                        "CQ": [
                            "Is it correct that the property 'hasConductivity' does not have a specified range?",
                            "What entities can serve as the range for the property 'hasConductivity'?",
                            "Can any kind of value be associated as the object of 'hasConductivity', given its range is undefined?"
                        ]
                    },
                    {
                        "axiom": "hasConductivity subPropertyOf hasValue",
                        "CQ": [
                            "Does the presence of the hasConductivity property guarantee the presence of the hasValue property?",
                            "Which properties are defined as subproperties under hasValue within the ontology?",
                            "Is hasValue a direct superproperty of hasConductivity?"
                        ]
                    }
                ],
                "removed axiom": "hasConductivity subPropertyOf hasValue",
                "Target CQ": [
                    "Does the presence of the hasConductivity property guarantee the presence of the hasValue property?",
                    "Which properties are defined as subproperties under hasValue within the ontology?",
                    "Is hasValue a direct superproperty of hasConductivity?"
                ],
                "Valid CQ": [
                    "What types of entities can be the domain of the property 'hasConductivity'?",
                    "Is it correct that 'hasConductivity' does not have a specified domain?",
                    "Are there any classes that should be considered as potential domains for 'hasConductivity'?",
                    "Is it correct that the property 'hasConductivity' does not have a specified range?",
                    "What entities can serve as the range for the property 'hasConductivity'?",
                    "Can any kind of value be associated as the object of 'hasConductivity', given its range is undefined?"
                ],
                "type": "Type1"
            },
            "hasTemperature": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"hasTemperature\" inherits from the broader property \"hasValue\" but does not specify any domain or range restrictions, nor any specific logical characteristics. No inverse property is defined. This property is intended to associate an entity with its temperature, but its use is broadly unconstrained by the current axioms.",
                "CQ": [
                    {
                        "axiom": "hasTemperature domain None",
                        "CQ": [
                            "What can be the domain of the property 'hasTemperature'?",
                            "Is it correct that the property 'hasTemperature' does not specify any domain?",
                            "Can 'hasTemperature' be used with any type of subject, or are there intended restrictions on its domain?"
                        ]
                    },
                    {
                        "axiom": "hasTemperature range None",
                        "CQ": [
                            "Does the property 'hasTemperature' have a defined range?",
                            "What types of values can be used as the range for the property 'hasTemperature'?",
                            "Is it correct that 'hasTemperature' has no specified range?"
                        ]
                    },
                    {
                        "axiom": "hasTemperature subPropertyOf hasValue",
                        "CQ": [
                            "Does the use of hasTemperature always entail the use of hasValue?",
                            "Is hasValue considered a superproperty of hasTemperature in the ontology?",
                            "Which subproperties fall under hasValue, including hasTemperature?"
                        ]
                    }
                ],
                "removed axiom": "hasTemperature subPropertyOf hasValue",
                "Target CQ": [
                    "Does the use of hasTemperature always entail the use of hasValue?",
                    "Is hasValue considered a superproperty of hasTemperature in the ontology?",
                    "Which subproperties fall under hasValue, including hasTemperature?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'hasTemperature'?",
                    "Is it correct that the property 'hasTemperature' does not specify any domain?",
                    "Can 'hasTemperature' be used with any type of subject, or are there intended restrictions on its domain?",
                    "Does the property 'hasTemperature' have a defined range?",
                    "What types of values can be used as the range for the property 'hasTemperature'?",
                    "Is it correct that 'hasTemperature' has no specified range?"
                ],
                "type": "Type1"
            }
        }
    },
    "OntoDT": {
        "classes": {
            "Datatype Specification Language Representation": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[represents some datatype]"
                    ]
                },
                "description": "Datatype Specification Language Representation is a subclass of representation, characterized by the property that it represents at least one datatype. This class encompasses languages or symbolic forms specifically designed to define, describe, or model datatypes through a formal representation. Every individual in this class must be associated with the representation of some datatype, reflecting its role in specifying datatype structure or characteristics.",
                "CQ": [
                    {
                        "axiom": "Datatype Specification Language Representation subClassOf representation",
                        "CQ": [
                            "Is Datatype Specification Language Representation categorized under the broader class of representation?",
                            "Which representation subclasses include Datatype Specification Language Representation?",
                            "What are the parent classes of Datatype Specification Language Representation?"
                        ]
                    },
                    {
                        "axiom": "Datatype Specification Language Representation propertyRestrictions [represents some datatype]",
                        "CQ": [
                            "Is it required that every Datatype Specification Language Representation represents some datatype?",
                            "Can a Datatype Specification Language Representation exist without representing any datatype?",
                            "Does the ontology ensure that each Datatype Specification Language Representation is associated with at least one datatype through the 'represents' property?"
                        ]
                    }
                ],
                "removed axiom": "Datatype Specification Language Representation subClassOf representation",
                "Target CQ": [
                    "Is Datatype Specification Language Representation categorized under the broader class of representation?",
                    "Which representation subclasses include Datatype Specification Language Representation?",
                    "What are the parent classes of Datatype Specification Language Representation?"
                ],
                "Valid CQ": [
                    "Is it required that every Datatype Specification Language Representation represents some datatype?",
                    "Can a Datatype Specification Language Representation exist without representing any datatype?",
                    "Does the ontology ensure that each Datatype Specification Language Representation is associated with at least one datatype through the 'represents' property?"
                ],
                "type": "Type1"
            },
            "defined generator parameter": {
                "axiom": {
                    "subClassOf": [
                        "specification"
                    ],
                    "propertyRestrictions": []
                },
                "description": "defined generator parameter is a subclass of specification, meaning it inherits all characteristics of the specification class. Additionally, any individual in this class must possess at least one identifier, specified through the property has_identifier and linked to a parameter identifier. This definition ensures that every defined generator parameter instance is uniquely identified in the context of specifications.",
                "CQ": [
                    {
                        "axiom": "defined generator parameter subClassOf specification",
                        "CQ": [
                            "Is defined generator parameter classified under specification?",
                            "What specifications encompass the defined generator parameter as a more specific type?",
                            "Which broader classifications include defined generator parameter within their scope?"
                        ]
                    },
                    {
                        "axiom": "defined generator parameter propertyRestrictions [has_identifier some parameter identifier]",
                        "CQ": [
                            "Must every defined generator parameter have at least one 'has_identifier' relationship with a parameter identifier?",
                            "Is it required that a defined generator parameter is associated, via the 'has_identifier' property, to some parameter identifier?",
                            "Can a defined generator parameter exist without any 'has_identifier' link to a parameter identifier?"
                        ]
                    }
                ],
                "removed axiom": "defined generator parameter propertyRestrictions [has_identifier some parameter identifier]",
                "Target CQ": [
                    "Must every defined generator parameter have at least one 'has_identifier' relationship with a parameter identifier?",
                    "Is it required that a defined generator parameter is associated, via the 'has_identifier' property, to some parameter identifier?",
                    "Can a defined generator parameter exist without any 'has_identifier' link to a parameter identifier?"
                ],
                "Valid CQ": [
                    "Is defined generator parameter classified under specification?",
                    "What specifications encompass the defined generator parameter as a more specific type?",
                    "Which broader classifications include defined generator parameter within their scope?"
                ],
                "type": "Type1"
            },
            "extending subtype generator": {
                "axiom": {
                    "subClassOf": [
                        "subtype generator"
                    ],
                    "propertyRestrictions": []
                },
                "description": "extending subtype generator is defined as a subclass of subtype generator. It is characterized by the property restriction that every instance must have at least one member from an extended-value-list. This ensures that individuals of this class are subtype generators specifically connected to one or more extended value lists, reflecting their extended generative capability.",
                "CQ": [
                    {
                        "axiom": "extending subtype generator subClassOf subtype generator",
                        "CQ": [
                            "Is extending subtype generator categorized under subtype generator?",
                            "Which generators are classified as subtypes of subtype generator, including extending subtype generator?",
                            "What broader generator categories does extending subtype generator fall into?"
                        ]
                    },
                    {
                        "axiom": "extending subtype generator propertyRestrictions [has_member some extended-value-list]",
                        "CQ": [
                            "Is every instance of extending subtype generator required to have at least one has_member relationship to an extended-value-list?",
                            "Does extending subtype generator always include some member specified within extended-value-list?",
                            "Can an extending subtype generator exist without any association to an extended-value-list through has_member?"
                        ]
                    }
                ],
                "removed axiom": "extending subtype generator propertyRestrictions [has_member some extended-value-list]",
                "Target CQ": [
                    "Is every instance of extending subtype generator required to have at least one has_member relationship to an extended-value-list?",
                    "Does extending subtype generator always include some member specified within extended-value-list?",
                    "Can an extending subtype generator exist without any association to an extended-value-list through has_member?"
                ],
                "Valid CQ": [
                    "Is extending subtype generator categorized under subtype generator?",
                    "Which generators are classified as subtypes of subtype generator, including extending subtype generator?",
                    "What broader generator categories does extending subtype generator fall into?"
                ],
                "type": "Type1"
            },
            "size subtype generator": {
                "axiom": {
                    "subClassOf": [
                        "subtype generator"
                    ],
                    "propertyRestrictions": []
                },
                "description": "size subtype generator is a subclass of subtype generator whose members are characterized by necessarily having at least one associated member of type size. This ensures that any instance of size subtype generator must be linked to one or more sizes, establishing its role in creating subtypes specifically based on size distinctions.",
                "CQ": [
                    {
                        "axiom": "size subtype generator subClassOf subtype generator",
                        "CQ": [
                            "Is size subtype generator categorized under subtype generator?",
                            "What specific types are included within the broader class of subtype generator?",
                            "Which more general classes is size subtype generator a member of?"
                        ]
                    },
                    {
                        "axiom": "size subtype generator propertyRestrictions [has_member some size]",
                        "CQ": [
                            "Is every instance of 'size subtype generator' required to have at least one 'has_member' relationship to a 'size'?",
                            "Does 'size subtype generator' always include at least one member classified as 'size'?",
                            "Can a 'size subtype generator' exist without linking to any entity of type 'size' via the 'has_member' property?"
                        ]
                    }
                ],
                "removed axiom": "size subtype generator propertyRestrictions [has_member some size]",
                "Target CQ": [
                    "Is every instance of 'size subtype generator' required to have at least one 'has_member' relationship to a 'size'?",
                    "Does 'size subtype generator' always include at least one member classified as 'size'?",
                    "Can a 'size subtype generator' exist without linking to any entity of type 'size' via the 'has_member' property?"
                ],
                "Valid CQ": [
                    "Is size subtype generator categorized under subtype generator?",
                    "What specific types are included within the broader class of subtype generator?",
                    "Which more general classes is size subtype generator a member of?"
                ],
                "type": "Type1"
            },
            "array generator": {
                "axiom": {
                    "subClassOf": [
                        "homogenous aggregate generator"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_quality some unordered aggregate]",
                        "[has_quality some fixed size]",
                        "[has_quality some multi dimensional]",
                        "[has_quality some index access]",
                        "[has_quality some non-unique values]"
                    ]
                },
                "description": "array generator is a subclass of homogenous aggregate generator and is explicitly disjoint with homogenous aggregate generator with variable size, ensuring that an instance cannot belong to both classes simultaneously. Members of the array generator class are characterized by possessing certain qualities: they are unordered aggregates, have a fixed size, can be multi-dimensional, allow index-based access, and may contain non-unique values. This combination of properties formally describes the essential characteristics of array generators, distinguishing them from other types of homogenous aggregate generators.",
                "CQ": [
                    {
                        "axiom": "array generator subClassOf homogenous aggregate generator",
                        "CQ": [
                            "Is array generator classified as a specific kind of homogenous aggregate generator?",
                            "What specific types are encompassed under the category of homogenous aggregate generator, such as array generator?",
                            "Which broader generator categories include array generator as a member?"
                        ]
                    },
                    {
                        "axiom": "array generator disjointWith homogenous aggregate generator with variable size",
                        "CQ": [
                            "Which generator classes are explicitly declared as mutually exclusive with homogenous aggregate generator with variable size?",
                            "Is there any circumstance under which a device can be considered both an array generator and a homogenous aggregate generator with variable size?",
                            "What disjointness constraints are specified for array generator within the ontology?"
                        ]
                    },
                    {
                        "axiom": "array generator propertyRestrictions [has_quality some unordered aggregate]",
                        "CQ": [
                            "Is it required that an array generator exhibits the has_quality relationship with at least one unordered aggregate?",
                            "Can any instance of array generator be found that does not possess has_quality with an unordered aggregate?",
                            "Does every array generator necessarily relate via has_quality to an entity classified as an unordered aggregate?"
                        ]
                    },
                    {
                        "axiom": "array generator propertyRestrictions [has_quality some fixed size]",
                        "CQ": [
                            "Must every array generator possess at least one quality classified as fixed size?",
                            "Are array generators required to have the property 'has_quality' with some instance of 'fixed size'?",
                            "Is it possible for an array generator to lack the 'fixed size' quality entirely?"
                        ]
                    },
                    {
                        "axiom": "array generator propertyRestrictions [has_quality some multi dimensional]",
                        "CQ": [
                            "Is it required that every array generator possesses at least one quality classified as multi dimensional?",
                            "Can an array generator exist without exhibiting the multi dimensional quality?",
                            "Does the presence of the multi dimensional quality define array generator entities within the ontology?"
                        ]
                    },
                    {
                        "axiom": "array generator propertyRestrictions [has_quality some index access]",
                        "CQ": [
                            "Is it necessary for an array generator to have a 'has_quality' relationship with some instance of index access?",
                            "Can every array generator be characterized by the existence of at least one 'has_quality' link to index access?",
                            "Does the definition of array generator require that there is at least one quality associated with index access?"
                        ]
                    },
                    {
                        "axiom": "array generator propertyRestrictions [has_quality some non-unique values]",
                        "CQ": [
                            "Is it required that an array generator must have at least one 'has_quality' relationship with non-unique values?",
                            "Can an array generator exist without possessing the 'has_quality' property that points to non-unique values?",
                            "Does every instance of array generator necessarily exhibit the 'has_quality' property with non-unique values in some capacity?"
                        ]
                    }
                ],
                "removed axiom": "array generator disjointWith homogenous aggregate generator with variable size",
                "Target CQ": [
                    "Which generator classes are explicitly declared as mutually exclusive with homogenous aggregate generator with variable size?",
                    "Is there any circumstance under which a device can be considered both an array generator and a homogenous aggregate generator with variable size?",
                    "What disjointness constraints are specified for array generator within the ontology?"
                ],
                "Valid CQ": [
                    "Is array generator classified as a specific kind of homogenous aggregate generator?",
                    "What specific types are encompassed under the category of homogenous aggregate generator, such as array generator?",
                    "Which broader generator categories include array generator as a member?",
                    "Is it required that an array generator exhibits the has_quality relationship with at least one unordered aggregate?",
                    "Can any instance of array generator be found that does not possess has_quality with an unordered aggregate?",
                    "Does every array generator necessarily relate via has_quality to an entity classified as an unordered aggregate?",
                    "Must every array generator possess at least one quality classified as fixed size?",
                    "Are array generators required to have the property 'has_quality' with some instance of 'fixed size'?",
                    "Is it possible for an array generator to lack the 'fixed size' quality entirely?",
                    "Is it required that every array generator possesses at least one quality classified as multi dimensional?",
                    "Can an array generator exist without exhibiting the multi dimensional quality?",
                    "Does the presence of the multi dimensional quality define array generator entities within the ontology?",
                    "Is it necessary for an array generator to have a 'has_quality' relationship with some instance of index access?",
                    "Can every array generator be characterized by the existence of at least one 'has_quality' link to index access?",
                    "Does the definition of array generator require that there is at least one quality associated with index access?",
                    "Is it required that an array generator must have at least one 'has_quality' relationship with non-unique values?",
                    "Can an array generator exist without possessing the 'has_quality' property that points to non-unique values?",
                    "Does every instance of array generator necessarily exhibit the 'has_quality' property with non-unique values in some capacity?"
                ],
                "type": "Type1"
            },
            "set generator": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has_quality some access by value]",
                        "[has_quality some unique values]"
                    ]
                },
                "description": "set generator is defined as a subclass of homogenous unordered aggregate generator with variable size. Members of this class are characterized by having the qualities of access by value and containing unique values. This means that each instance generates aggregates where elements are both accessed directly by their value (rather than by reference or position) and all elements within any generated aggregate are unique, with no duplicates permitted.",
                "CQ": [
                    {
                        "axiom": "set generator subClassOf homogenous unordered aggregate generator with variable size",
                        "CQ": [
                            "Is every set generator classified under homogenous unordered aggregate generator with variable size?",
                            "Which specific generators fall under the category of homogenous unordered aggregate generator with variable size?",
                            "What broader categories include set generator as a subclass?"
                        ]
                    },
                    {
                        "axiom": "set generator propertyRestrictions [has_quality some access by value]",
                        "CQ": [
                            "Does every set generator require at least one 'has_quality' relationship with an entity of type 'access by value'?",
                            "Is it necessary that a set generator possesses the 'has_quality' property that relates specifically to 'access by value'?",
                            "Is the presence of the 'has_quality' property with the value 'access by value' sufficient for something to be considered a set generator?"
                        ]
                    },
                    {
                        "axiom": "set generator propertyRestrictions [has_quality some unique values]",
                        "CQ": [
                            "Is it required that every set generator possesses at least one unique value as a quality?",
                            "Can a set generator's 'has_quality' relation be satisfied only by unique values?",
                            "Are unique values necessarily present among the qualities assigned to any set generator?"
                        ]
                    }
                ],
                "removed axiom": "set generator subClassOf homogenous unordered aggregate generator with variable size",
                "Target CQ": [
                    "Is every set generator classified under homogenous unordered aggregate generator with variable size?",
                    "Which specific generators fall under the category of homogenous unordered aggregate generator with variable size?",
                    "What broader categories include set generator as a subclass?"
                ],
                "Valid CQ": [
                    "Does every set generator require at least one 'has_quality' relationship with an entity of type 'access by value'?",
                    "Is it necessary that a set generator possesses the 'has_quality' property that relates specifically to 'access by value'?",
                    "Is the presence of the 'has_quality' property with the value 'access by value' sufficient for something to be considered a set generator?",
                    "Is it required that every set generator possesses at least one unique value as a quality?",
                    "Can a set generator's 'has_quality' relation be satisfied only by unique values?",
                    "Are unique values necessarily present among the qualities assigned to any set generator?"
                ],
                "type": "Type1"
            },
            "table generator": {
                "axiom": {
                    "subClassOf": [
                        "heterogenous aggregate generator"
                    ],
                    "propertyRestrictions": [
                        "[has_quality some variable size]",
                        "[has_quality some unordered aggregate]",
                        "[has_quality some two dimensional]"
                    ]
                },
                "description": "table generator is defined as a subclass of heterogenous aggregate generator and is characterized by several property restrictions: it must possess the qualities of having non-unique values, variable size, being an unordered aggregate, and being two dimensional. These constraints specify that any instance of table generator produces or represents a two-dimensional collection of items where elements may repeat, the number of items can vary, the arrangement lacks a specific sequence, and multiple types of elements (heterogeneity) are permitted.",
                "CQ": [
                    {
                        "axiom": "table generator subClassOf heterogenous aggregate generator",
                        "CQ": [
                            "Is table generator classified under the broader category of heterogenous aggregate generator?",
                            "What specific types are encompassed by heterogenous aggregate generator, including table generator?",
                            "To which higher-level categories does table generator belong within the ontology?"
                        ]
                    },
                    {
                        "axiom": "table generator propertyRestrictions [has_quality some non-unique values]",
                        "CQ": [
                            "Must a table generator possess at least one quality that is not unique among its values?",
                            "Can a table generator exhibit qualities where the same value is shared by more than one instance?",
                            "Is it required for a table generator to have the property 'has_quality' associated with values that are not unique?"
                        ]
                    },
                    {
                        "axiom": "table generator propertyRestrictions [has_quality some variable size]",
                        "CQ": [
                            "Is it required that every table generator possesses at least one variable size as a quality?",
                            "Does a table generator necessarily have the property ‘has_quality’ associated with some variable size?",
                            "Must all table generators be characterized by having a quality that is a variable size?"
                        ]
                    },
                    {
                        "axiom": "table generator propertyRestrictions [has_quality some unordered aggregate]",
                        "CQ": [
                            "Is every table generator required to have at least one quality that is an unordered aggregate?",
                            "Can a table generator ever lack the property 'has_quality' with an unordered aggregate as a value?",
                            "Does the existence of the 'has_quality' relationship between a table generator and an unordered aggregate imply that unordered aggregate is a necessary quality for all table generators?"
                        ]
                    },
                    {
                        "axiom": "table generator propertyRestrictions [has_quality some two dimensional]",
                        "CQ": [
                            "Is every table generator required to have at least one quality that is two dimensional?",
                            "Can a table generator possess qualities other than being two dimensional?",
                            "Does a two dimensional quality necessarily apply to all table generators through the has_quality relationship?"
                        ]
                    }
                ],
                "removed axiom": "table generator propertyRestrictions [has_quality some non-unique values]",
                "Target CQ": [
                    "Must a table generator possess at least one quality that is not unique among its values?",
                    "Can a table generator exhibit qualities where the same value is shared by more than one instance?",
                    "Is it required for a table generator to have the property 'has_quality' associated with values that are not unique?"
                ],
                "Valid CQ": [
                    "Is table generator classified under the broader category of heterogenous aggregate generator?",
                    "What specific types are encompassed by heterogenous aggregate generator, including table generator?",
                    "To which higher-level categories does table generator belong within the ontology?",
                    "Is it required that every table generator possesses at least one variable size as a quality?",
                    "Does a table generator necessarily have the property ‘has_quality’ associated with some variable size?",
                    "Must all table generators be characterized by having a quality that is a variable size?",
                    "Is every table generator required to have at least one quality that is an unordered aggregate?",
                    "Can a table generator ever lack the property 'has_quality' with an unordered aggregate as a value?",
                    "Does the existence of the 'has_quality' relationship between a table generator and an unordered aggregate imply that unordered aggregate is a necessary quality for all table generators?",
                    "Is every table generator required to have at least one quality that is two dimensional?",
                    "Can a table generator possess qualities other than being two dimensional?",
                    "Does a two dimensional quality necessarily apply to all table generators through the has_quality relationship?"
                ],
                "type": "Type1"
            },
            "choice generator": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[is_member_of some choice datatype]"
                    ]
                },
                "description": "choice generator is defined as a subclass of non-aggregate generator. Members of this class are further characterized by the property that they are associated with at least one choice datatype, as expressed by the restriction [is_member_of some choice datatype]. This means any individual classified as a choice generator must participate in or be a member of a choice datatype, distinguishing them from other forms of non-aggregate generators.",
                "CQ": [
                    {
                        "axiom": "choice generator subClassOf non-aggregate generator",
                        "CQ": [
                            "Is every choice generator categorized under non-aggregate generator?",
                            "Which generator types fall under the broader class of non-aggregate generator?",
                            "What more general classes include choice generator as a subclass?"
                        ]
                    },
                    {
                        "axiom": "choice generator propertyRestrictions [is_member_of some choice datatype]",
                        "CQ": [
                            "Is it required that a choice generator possesses at least one is_member_of relationship with an instance of the choice datatype?",
                            "Can a choice generator exist without being linked to any element from the choice datatype through the is_member_of property?",
                            "Are all choice generators necessarily associated via is_member_of with members from the specified choice datatype?"
                        ]
                    }
                ],
                "removed axiom": "choice generator subClassOf non-aggregate generator",
                "Target CQ": [
                    "Is every choice generator categorized under non-aggregate generator?",
                    "Which generator types fall under the broader class of non-aggregate generator?",
                    "What more general classes include choice generator as a subclass?"
                ],
                "Valid CQ": [
                    "Is it required that a choice generator possesses at least one is_member_of relationship with an instance of the choice datatype?",
                    "Can a choice generator exist without being linked to any element from the choice datatype through the is_member_of property?",
                    "Are all choice generators necessarily associated via is_member_of with members from the specified choice datatype?"
                ],
                "type": "Type1"
            },
            "class datatype": {
                "axiom": {
                    "subClassOf": [
                        "heterogenous aggregate datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_operation some AttributeSelect:class]",
                        "[has_operation some AttributeReplace:class]",
                        "[has_operation some Equal:class]",
                        "[has_member some class generator]",
                        "[has_quality some non-ordered]",
                        "[has_quality some non-numeric]",
                        "[has_member some attribute-list]"
                    ]
                },
                "description": "class datatype is a subclass of heterogenous aggregate datatype and is explicitly disjoint with record (tuple) datatype, ensuring that no individual can belong to both classes. Members of class datatype are characterized by the following property restrictions: they must have operations such as AttributeSelect, AttributeReplace, and Equal (each operating on class), must include members such as a class generator and an attribute-list, and must exhibit the qualities of being non-ordered and non-numeric. This formalization distinguishes class datatypes from other aggregates (like records) by their operations and inherent qualities.",
                "CQ": [
                    {
                        "axiom": "class datatype subClassOf heterogenous aggregate datatype",
                        "CQ": [
                            "Is class datatype classified under the group of heterogenous aggregate datatype?",
                            "Which datatypes are specialized forms of heterogenous aggregate datatype, including class datatype?",
                            "What broader datatype categories encompass class datatype?"
                        ]
                    },
                    {
                        "axiom": "class datatype disjointWith record (tuple) datatype",
                        "CQ": [
                            "What formal separation exists between class datatypes and record (tuple) datatypes in the ontology?",
                            "Can an entity simultaneously be classified as both a class datatype and a record (tuple) datatype?",
                            "Which datatypes are specified as being incompatible with class datatypes?"
                        ]
                    },
                    {
                        "axiom": "class datatype propertyRestrictions [has_operation some AttributeSelect:class]",
                        "CQ": [
                            "Is every instance of class required to have at least one has_operation relationship to an AttributeSelect?",
                            "Can a class exist without having an operation that is of type AttributeSelect?",
                            "Are classes defined such that they may have the has_operation property only with instances of AttributeSelect?"
                        ]
                    },
                    {
                        "axiom": "class datatype propertyRestrictions [has_operation some AttributeReplace:class]",
                        "CQ": [
                            "Is every instance of the class required to participate in at least one 'has_operation' relationship with an AttributeReplace instance?",
                            "Does the class necessarily have some association via 'has_operation' to objects categorized as AttributeReplace?",
                            "Can a member of this class exist without having the 'has_operation' property linking it to AttributeReplace?"
                        ]
                    },
                    {
                        "axiom": "class datatype propertyRestrictions [has_operation some Equal:class]",
                        "CQ": [
                            "Is every instance of class required to participate in at least one has_operation relationship with an individual of Equal:class?",
                            "Must class necessarily have some association via has_operation with Equal:class?",
                            "Can an individual of class exist without a has_operation link to any Equal:class?"
                        ]
                    },
                    {
                        "axiom": "class datatype propertyRestrictions [has_member some class generator]",
                        "CQ": [
                            "Is every instance of 'propertyRestrictions' required to have at least one value for 'has_member' that is a 'generator'?",
                            "Does 'propertyRestrictions' necessarily include a 'generator' through the 'has_member' property?",
                            "Can an instance of 'propertyRestrictions' exist without being related to a 'generator' via 'has_member'?"
                        ]
                    },
                    {
                        "axiom": "class datatype propertyRestrictions [has_quality some non-ordered]",
                        "CQ": [
                            "Is it required that every instance in the class has the 'has_quality' property relating to at least one instance of 'non-ordered'?",
                            "Does membership in the class entail possessing the 'has_quality' relationship with an entity of type 'non-ordered'?",
                            "Can a class member exist without having the 'has_quality' attribute associated with something classified as 'non-ordered'?"
                        ]
                    },
                    {
                        "axiom": "class datatype propertyRestrictions [has_quality some non-numeric]",
                        "CQ": [
                            "Is every instance of 'class' required to have at least one 'has_quality' property relating to a 'non-numeric' value?",
                            "Must all entities of type 'class' possess some 'has_quality' relationship to a non-numeric attribute?",
                            "Does the existence of the 'class' category entail that its members always exhibit at least one non-numeric quality via the 'has_quality' property?"
                        ]
                    },
                    {
                        "axiom": "class datatype propertyRestrictions [has_member some attribute-list]",
                        "CQ": [
                            "Are all instances of the class required to have at least one member with an attribute from the attribute-list due to the has_member property?",
                            "Does every member connected to the class via has_member necessarily possess at least one attribute from the attribute-list?",
                            "Is it always the case that the class includes some entity related by has_member to any attribute specified in the attribute-list?"
                        ]
                    }
                ],
                "removed axiom": "class datatype disjointWith record (tuple) datatype",
                "Target CQ": [
                    "What formal separation exists between class datatypes and record (tuple) datatypes in the ontology?",
                    "Can an entity simultaneously be classified as both a class datatype and a record (tuple) datatype?",
                    "Which datatypes are specified as being incompatible with class datatypes?"
                ],
                "Valid CQ": [
                    "Is class datatype classified under the group of heterogenous aggregate datatype?",
                    "Which datatypes are specialized forms of heterogenous aggregate datatype, including class datatype?",
                    "What broader datatype categories encompass class datatype?",
                    "Is every instance of class required to have at least one has_operation relationship to an AttributeSelect?",
                    "Can a class exist without having an operation that is of type AttributeSelect?",
                    "Are classes defined such that they may have the has_operation property only with instances of AttributeSelect?",
                    "Is every instance of the class required to participate in at least one 'has_operation' relationship with an AttributeReplace instance?",
                    "Does the class necessarily have some association via 'has_operation' to objects categorized as AttributeReplace?",
                    "Can a member of this class exist without having the 'has_operation' property linking it to AttributeReplace?",
                    "Is every instance of class required to participate in at least one has_operation relationship with an individual of Equal:class?",
                    "Must class necessarily have some association via has_operation with Equal:class?",
                    "Can an individual of class exist without a has_operation link to any Equal:class?",
                    "Is every instance of 'propertyRestrictions' required to have at least one value for 'has_member' that is a 'generator'?",
                    "Does 'propertyRestrictions' necessarily include a 'generator' through the 'has_member' property?",
                    "Can an instance of 'propertyRestrictions' exist without being related to a 'generator' via 'has_member'?",
                    "Is it required that every instance in the class has the 'has_quality' property relating to at least one instance of 'non-ordered'?",
                    "Does membership in the class entail possessing the 'has_quality' relationship with an entity of type 'non-ordered'?",
                    "Can a class member exist without having the 'has_quality' attribute associated with something classified as 'non-ordered'?",
                    "Is every instance of 'class' required to have at least one 'has_quality' property relating to a 'non-numeric' value?",
                    "Must all entities of type 'class' possess some 'has_quality' relationship to a non-numeric attribute?",
                    "Does the existence of the 'class' category entail that its members always exhibit at least one non-numeric quality via the 'has_quality' property?",
                    "Are all instances of the class required to have at least one member with an attribute from the attribute-list due to the has_member property?",
                    "Does every member connected to the class via has_member necessarily possess at least one attribute from the attribute-list?",
                    "Is it always the case that the class includes some entity related by has_member to any attribute specified in the attribute-list?"
                ],
                "type": "Type1"
            },
            "discrete-value identifier": {
                "axiom": {
                    "subClassOf": [
                        "identifier"
                    ],
                    "propertyRestrictions": []
                },
                "description": "discrete-value identifier is a subclass of identifier whose instances are constrained to have at least one associated value specified as an rdfs:Literal. This means that every discrete-value identifier must be linked to some literal value (such as a string, number, or date), formalizing the notion of identifiers that represent or encode discrete, literal data.",
                "CQ": [
                    {
                        "axiom": "discrete-value identifier subClassOf identifier",
                        "CQ": [
                            "Are all discrete-value identifiers classified under the identifier category?",
                            "Which identifier types are more specific, such as discrete-value identifier?",
                            "What broader class contains discrete-value identifier as a member?"
                        ]
                    },
                    {
                        "axiom": "discrete-value identifier propertyRestrictions [has-value some rdfs:Literal]",
                        "CQ": [
                            "Does every discrete-value identifier necessarily have a value for the property 'propertyRestrictions' that is a literal?",
                            "Is it required that each discrete-value identifier possesses at least one propertyRestrictions value belonging to rdfs:Literal?",
                            "Can a discrete-value identifier exist without having propertyRestrictions set to any literal value?"
                        ]
                    }
                ],
                "removed axiom": "discrete-value identifier propertyRestrictions [has-value some rdfs:Literal]",
                "Target CQ": [
                    "Does every discrete-value identifier necessarily have a value for the property 'propertyRestrictions' that is a literal?",
                    "Is it required that each discrete-value identifier possesses at least one propertyRestrictions value belonging to rdfs:Literal?",
                    "Can a discrete-value identifier exist without having propertyRestrictions set to any literal value?"
                ],
                "Valid CQ": [
                    "Are all discrete-value identifiers classified under the identifier category?",
                    "Which identifier types are more specific, such as discrete-value identifier?",
                    "What broader class contains discrete-value identifier as a member?"
                ],
                "type": "Type1"
            },
            "homogenity": {
                "axiom": {
                    "subClassOf": [
                        "aggregate generator property"
                    ],
                    "disjointWith": [
                        "agregate size",
                        "uniqueness",
                        "component mandatoriness",
                        "structurness",
                        "access type"
                    ],
                    "equivalentClass": [
                        "(homogenous or heterogenous)"
                    ]
                },
                "description": "homogenity is defined as a subclass of aggregate generator property and is explicitly disjoint with the classes aggregate size, uniqueness, component mandatoriness, structurness, recursiveness, and access type, ensuring that no individual can simultaneously belong to these. It is also equivalent to the union of homogenous or heterogenous, indicating that any instance of homogenity must be categorized as either homogenous or heterogenous with respect to an aggregate generator property.",
                "CQ": [
                    {
                        "axiom": "homogenity subClassOf aggregate generator property",
                        "CQ": [
                            "Is homogenity classified under the aggregate generator property category?",
                            "What specific properties are distinguished as subclasses of aggregate generator property, including homogenity?",
                            "Which higher-level property categories encompass homogenity?"
                        ]
                    },
                    {
                        "axiom": "homogenity disjointWith agregate size",
                        "CQ": [
                            "Are there any entities that can simultaneously belong to both the 'homogenity' and 'agregate size' classes?",
                            "Which ontology classes are specified as mutually exclusive with 'agregate size'?",
                            "How does the ontology formally distinguish between 'homogenity' and 'agregate size'?"
                        ]
                    },
                    {
                        "axiom": "homogenity disjointWith uniqueness",
                        "CQ": [
                            "How is the concept of homogenity formally separated from uniqueness in the ontology?",
                            "Is there any entity that can simultaneously possess both homogenity and uniqueness?",
                            "Which other concepts are specified as mutually exclusive with homogenity?"
                        ]
                    },
                    {
                        "axiom": "homogenity disjointWith component mandatoriness",
                        "CQ": [
                            "How does the ontology treat the connection between homogenity and component mandatoriness?",
                            "Is it valid for an entity to possess both homogenity and component mandatoriness simultaneously?",
                            "Which concepts are formally specified as incompatible with component mandatoriness within the ontology?"
                        ]
                    },
                    {
                        "axiom": "homogenity disjointWith structurness",
                        "CQ": [
                            "How are homogenity and structurness represented in relation to each other within the ontology?",
                            "Is any entity allowed to possess both homogenity and structurness simultaneously?",
                            "Which classes are defined as mutually exclusive with structurness?"
                        ]
                    },
                    {
                        "axiom": "homogenity disjointWith recursiveness",
                        "CQ": [
                            "How are homogeneity and recursiveness formally related within the ontology?",
                            "Is there an instance that can possess both homogeneity and recursiveness?",
                            "Which classes are stated to be incompatible with homogeneity?"
                        ]
                    },
                    {
                        "axiom": "homogenity disjointWith access type",
                        "CQ": [
                            "How does the ontology differentiate between homogenity and access type as separate concepts?",
                            "Is it permissible for an entity to be classified simultaneously as homogenity and access type?",
                            "Which classes are stated to be mutually exclusive with access type?"
                        ]
                    },
                    {
                        "axiom": "homogenity equivalentClass (homogenous or heterogenous)",
                        "CQ": [
                            "Is every instance classified as homogenity necessarily either homogenous or heterogenous?",
                            "Is the class homogenity equivalent to the union of homogenous and heterogenous?",
                            "Can anything be considered homogenity that does not fall under either homogenous or heterogenous?"
                        ]
                    }
                ],
                "removed axiom": "homogenity disjointWith recursiveness",
                "Target CQ": [
                    "How are homogeneity and recursiveness formally related within the ontology?",
                    "Is there an instance that can possess both homogeneity and recursiveness?",
                    "Which classes are stated to be incompatible with homogeneity?"
                ],
                "Valid CQ": [
                    "Is homogenity classified under the aggregate generator property category?",
                    "What specific properties are distinguished as subclasses of aggregate generator property, including homogenity?",
                    "Which higher-level property categories encompass homogenity?",
                    "Are there any entities that can simultaneously belong to both the 'homogenity' and 'agregate size' classes?",
                    "Which ontology classes are specified as mutually exclusive with 'agregate size'?",
                    "How does the ontology formally distinguish between 'homogenity' and 'agregate size'?",
                    "How is the concept of homogenity formally separated from uniqueness in the ontology?",
                    "Is there any entity that can simultaneously possess both homogenity and uniqueness?",
                    "Which other concepts are specified as mutually exclusive with homogenity?",
                    "How does the ontology treat the connection between homogenity and component mandatoriness?",
                    "Is it valid for an entity to possess both homogenity and component mandatoriness simultaneously?",
                    "Which concepts are formally specified as incompatible with component mandatoriness within the ontology?",
                    "How are homogenity and structurness represented in relation to each other within the ontology?",
                    "Is any entity allowed to possess both homogenity and structurness simultaneously?",
                    "Which classes are defined as mutually exclusive with structurness?",
                    "How does the ontology differentiate between homogenity and access type as separate concepts?",
                    "Is it permissible for an entity to be classified simultaneously as homogenity and access type?",
                    "Which classes are stated to be mutually exclusive with access type?",
                    "Is every instance classified as homogenity necessarily either homogenous or heterogenous?",
                    "Is the class homogenity equivalent to the union of homogenous and heterogenous?",
                    "Can anything be considered homogenity that does not fall under either homogenous or heterogenous?"
                ],
                "type": "Type1"
            },
            "component mandatoriness": {
                "axiom": {
                    "subClassOf": [
                        "aggregate generator property"
                    ],
                    "disjointWith": [
                        "recursiveness",
                        "access type"
                    ],
                    "equivalentClass": [
                        "(component mandatory or component non-mandatory)"
                    ]
                },
                "description": "component mandatoriness is defined as a subclass of aggregate generator property and is explicitly disjoint with structurness, recursiveness, and access type, ensuring no overlap among individuals of these classes. It is equivalent to the union of component mandatory and component non-mandatory, meaning every instance of component mandatoriness must be either component mandatory or component non-mandatory. This class categorizes aggregate generator properties by specifying whether a component is mandatory or not.",
                "CQ": [
                    {
                        "axiom": "component mandatoriness subClassOf aggregate generator property",
                        "CQ": [
                            "Is every instance of component mandatoriness necessarily an instance of aggregate generator property?",
                            "What properties are considered more specific subclasses under aggregate generator property?",
                            "Which broader property categories encompass component mandatoriness?"
                        ]
                    },
                    {
                        "axiom": "component mandatoriness disjointWith structurness",
                        "CQ": [
                            "How does the ontology distinguish between component mandatoriness and structurness?",
                            "Is there any entity that can simultaneously possess both component mandatoriness and structurness?",
                            "Which concepts are defined as mutually exclusive with structurness?"
                        ]
                    },
                    {
                        "axiom": "component mandatoriness disjointWith recursiveness",
                        "CQ": [
                            "How does the ontology differentiate between component mandatoriness and recursiveness?",
                            "Is any element allowed to possess both the properties of component mandatoriness and recursiveness?",
                            "Which concepts are specified as disjoint with recursiveness in the ontology?"
                        ]
                    },
                    {
                        "axiom": "component mandatoriness disjointWith access type",
                        "CQ": [
                            "What logical separation is established between component mandatoriness and access type in the ontology?",
                            "Is any entity allowed to simultaneously belong to both the component mandatoriness and access type categories?",
                            "Which classes, aside from access type, are specified as mutually exclusive with component mandatoriness?"
                        ]
                    },
                    {
                        "axiom": "component mandatoriness equivalentClass (component mandatory or component non-mandatory)",
                        "CQ": [
                            "Is component mandatoriness defined as either component mandatory or component non-mandatory?",
                            "Is the class component mandatoriness equivalent to the union of component mandatory and component non-mandatory?",
                            "Can any instance of component mandatoriness be classified as either component mandatory or component non-mandatory, but not outside these two categories?"
                        ]
                    }
                ],
                "removed axiom": "component mandatoriness disjointWith structurness",
                "Target CQ": [
                    "How does the ontology distinguish between component mandatoriness and structurness?",
                    "Is there any entity that can simultaneously possess both component mandatoriness and structurness?",
                    "Which concepts are defined as mutually exclusive with structurness?"
                ],
                "Valid CQ": [
                    "Is every instance of component mandatoriness necessarily an instance of aggregate generator property?",
                    "What properties are considered more specific subclasses under aggregate generator property?",
                    "Which broader property categories encompass component mandatoriness?",
                    "How does the ontology differentiate between component mandatoriness and recursiveness?",
                    "Is any element allowed to possess both the properties of component mandatoriness and recursiveness?",
                    "Which concepts are specified as disjoint with recursiveness in the ontology?",
                    "What logical separation is established between component mandatoriness and access type in the ontology?",
                    "Is any entity allowed to simultaneously belong to both the component mandatoriness and access type categories?",
                    "Which classes, aside from access type, are specified as mutually exclusive with component mandatoriness?",
                    "Is component mandatoriness defined as either component mandatory or component non-mandatory?",
                    "Is the class component mandatoriness equivalent to the union of component mandatory and component non-mandatory?",
                    "Can any instance of component mandatoriness be classified as either component mandatory or component non-mandatory, but not outside these two categories?"
                ],
                "type": "Type1"
            },
            "access type": {
                "axiom": {
                    "subClassOf": [],
                    "equivalentClass": [
                        "(direct access property or indirect acess property)"
                    ]
                },
                "description": "access type is defined as a subclass of aggregate generator property and is equivalent to the union of direct access property and indirect access property. This means that any instance of access type must be either a direct access property or an indirect access property, and no other properties qualify as access types outside of this definition.",
                "CQ": [
                    {
                        "axiom": "access type subClassOf aggregate generator property",
                        "CQ": [
                            "Is access type categorized under aggregate generator property?",
                            "Which types are more specific than aggregate generator property, such as access type?",
                            "What broader property classes include access type as a specialized type?"
                        ]
                    },
                    {
                        "axiom": "access type equivalentClass (direct access property or indirect acess property)",
                        "CQ": [
                            "Is an access type defined as either a direct access property or an indirect access property?",
                            "Are all instances of access type necessarily classified as direct access property, indirect access property, or both?",
                            "Can access type be characterized as the union of direct access property and indirect access property?"
                        ]
                    }
                ],
                "removed axiom": "access type subClassOf aggregate generator property",
                "Target CQ": [
                    "Is access type categorized under aggregate generator property?",
                    "Which types are more specific than aggregate generator property, such as access type?",
                    "What broader property classes include access type as a specialized type?"
                ],
                "Valid CQ": [
                    "Is an access type defined as either a direct access property or an indirect access property?",
                    "Are all instances of access type necessarily classified as direct access property, indirect access property, or both?",
                    "Can access type be characterized as the union of direct access property and indirect access property?"
                ],
                "type": "Type1"
            },
            "generated datatype": {
                "axiom": {
                    "subClassOf": [
                        "datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_member some generated datatype generator]"
                    ]
                },
                "description": "generated datatype is defined as a subclass of datatype and is explicitly disjoint with defined datatype, meaning no individual can be both a generated datatype and a defined datatype. Members of this class are further constrained by the property restriction that each generated datatype must have at least one member (has_member) that is a generated datatype generator. This formalization distinguishes generated datatypes from defined datatypes and ensures their association with specific generating mechanisms.",
                "CQ": [
                    {
                        "axiom": "generated datatype subClassOf datatype",
                        "CQ": [
                            "Does the class generated datatype represent a more specific form of datatype?",
                            "What are the immediate subclasses found within datatype, including generated datatype?",
                            "Which general classification does generated datatype fall under in the ontology?"
                        ]
                    },
                    {
                        "axiom": "generated datatype disjointWith defined datatype",
                        "CQ": [
                            "How does the ontology distinguish between generated datatype and defined datatype?",
                            "Is any entity allowed to be classified simultaneously as a generated datatype and a defined datatype?",
                            "Which datatypes are specified as being mutually exclusive with generated datatype?"
                        ]
                    },
                    {
                        "axiom": "generated datatype propertyRestrictions [has_member some generated datatype generator]",
                        "CQ": [
                            "Is it required that every instance with ‘has_member’ property must be associated with at least one item of type ‘generator’?",
                            "Does having at least one relation via ‘has_member’ to a ‘generator’ entity suffice to fulfill the restriction?",
                            "Are there any cases where an entity satisfies ‘has_member some generator’ without being linked to at least one ‘generator’?"
                        ]
                    }
                ],
                "removed axiom": "generated datatype disjointWith defined datatype",
                "Target CQ": [
                    "How does the ontology distinguish between generated datatype and defined datatype?",
                    "Is any entity allowed to be classified simultaneously as a generated datatype and a defined datatype?",
                    "Which datatypes are specified as being mutually exclusive with generated datatype?"
                ],
                "Valid CQ": [
                    "Does the class generated datatype represent a more specific form of datatype?",
                    "What are the immediate subclasses found within datatype, including generated datatype?",
                    "Which general classification does generated datatype fall under in the ontology?",
                    "Is it required that every instance with ‘has_member’ property must be associated with at least one item of type ‘generator’?",
                    "Does having at least one relation via ‘has_member’ to a ‘generator’ entity suffice to fulfill the restriction?",
                    "Are there any cases where an entity satisfies ‘has_member some generator’ without being linked to at least one ‘generator’?"
                ],
                "type": "Type1"
            },
            "field component": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[role_of some datatype]",
                        "[has_identifier some field identifier]"
                    ]
                },
                "description": "field component is defined as a subclass of datatype role. It is further characterized by two property restrictions: every field component must participate in the role_of relationship with at least one datatype, and must have at least one identifier of type field identifier. This formalization ensures that field components are specifically associated with datatypes and are uniquely identifiable within the ontology.",
                "CQ": [
                    {
                        "axiom": "field component subClassOf datatype role",
                        "CQ": [
                            "Does field component fall under the category of datatype role?",
                            "What components are classified as more specific types within datatype role, including field component?",
                            "Which broader categories encompass field component as a subclass?"
                        ]
                    },
                    {
                        "axiom": "field component propertyRestrictions [role_of some datatype]",
                        "CQ": [
                            "Is every field component required to have the property 'role_of' with at least one datatype?",
                            "Can a field component exist without being related to any datatype through the 'role_of' property?",
                            "Does the definition of field component allow for multiple instances of the 'role_of' property linking to different datatypes?"
                        ]
                    },
                    {
                        "axiom": "field component propertyRestrictions [has_identifier some field identifier]",
                        "CQ": [
                            "Is it required for every field component to have at least one identifier via the 'has_identifier' property?",
                            "Can a field component exist without possessing any field identifier assigned by 'has_identifier'?",
                            "Does the presence of a field identifier through 'has_identifier' necessarily pertain to all field components?"
                        ]
                    }
                ],
                "removed axiom": "field component subClassOf datatype role",
                "Target CQ": [
                    "Does field component fall under the category of datatype role?",
                    "What components are classified as more specific types within datatype role, including field component?",
                    "Which broader categories encompass field component as a subclass?"
                ],
                "Valid CQ": [
                    "Is every field component required to have the property 'role_of' with at least one datatype?",
                    "Can a field component exist without being related to any datatype through the 'role_of' property?",
                    "Does the definition of field component allow for multiple instances of the 'role_of' property linking to different datatypes?",
                    "Is it required for every field component to have at least one identifier via the 'has_identifier' property?",
                    "Can a field component exist without possessing any field identifier assigned by 'has_identifier'?",
                    "Does the presence of a field identifier through 'has_identifier' necessarily pertain to all field components?"
                ],
                "type": "Type1"
            },
            "alternative component": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has_member some tag-value list]",
                        "[has_member some alternative-type]"
                    ]
                },
                "description": "alternative component is defined as a subclass of datatype role, characterized by the requirement that it must have at least one member that is a tag-value list and at least one member that is an alternative-type. This means every instance of alternative component is associated with at least one tag-value list and one alternative-type via the has_member property, formalizing its structure as a composition of these elements.",
                "CQ": [
                    {
                        "axiom": "alternative component subClassOf datatype role",
                        "CQ": [
                            "Which datatype roles include alternative components as their subclasses?",
                            "Is alternative component categorized under the superclass datatype role?",
                            "What general classes encompass alternative component within their hierarchy?"
                        ]
                    },
                    {
                        "axiom": "alternative component propertyRestrictions [has_member some tag-value list]",
                        "CQ": [
                            "Is it required that an alternative component must have at least one member belonging to a tag-value list?",
                            "Can an alternative component exist without having any member that is included in a tag-value list?",
                            "Are all alternative components necessarily associated with the has_member property linked to some tag-value list?"
                        ]
                    },
                    {
                        "axiom": "alternative component propertyRestrictions [has_member some alternative-type]",
                        "CQ": [
                            "Is it necessary for an alternative component to have at least one member that is of type alternative-type?",
                            "Does every alternative component include some member classified as an alternative-type?",
                            "Can an alternative component exist without having any member that is an alternative-type?"
                        ]
                    }
                ],
                "removed axiom": "alternative component subClassOf datatype role",
                "Target CQ": [
                    "Which datatype roles include alternative components as their subclasses?",
                    "Is alternative component categorized under the superclass datatype role?",
                    "What general classes encompass alternative component within their hierarchy?"
                ],
                "Valid CQ": [
                    "Is it required that an alternative component must have at least one member belonging to a tag-value list?",
                    "Can an alternative component exist without having any member that is included in a tag-value list?",
                    "Are all alternative components necessarily associated with the has_member property linked to some tag-value list?",
                    "Is it necessary for an alternative component to have at least one member that is of type alternative-type?",
                    "Does every alternative component include some member classified as an alternative-type?",
                    "Can an alternative component exist without having any member that is an alternative-type?"
                ],
                "type": "Type1"
            },
            "index-type": {
                "axiom": {
                    "subClassOf": [
                        "datatype role"
                    ],
                    "propertyRestrictions": [
                        "[has_member some index upperbound]",
                        "[is_member_of some index-type list]",
                        "[has_member some index lowerbound]"
                    ]
                },
                "description": "index-type is a subclass of datatype role, characterized by specific property restrictions. Any instance of index-type must have as members both an index upperbound and an index lowerbound, indicating the range of allowable index values. Additionally, index-type instances are members of an index-type list and are associated, via the role_of property, with some datatype. This formalization ensures that index-type serves as a role connecting data types to index value ranges, organized within relevant index-type lists.",
                "CQ": [
                    {
                        "axiom": "index-type subClassOf datatype role",
                        "CQ": [
                            "Is index-type classified as a more specific type under the general category of datatype role?",
                            "Which specialized types are categorized beneath datatype role, such as index-type?",
                            "What broader categories encompass index-type within the ontology?"
                        ]
                    },
                    {
                        "axiom": "index-type propertyRestrictions [has_member some index upperbound]",
                        "CQ": [
                            "Must every instance of index-type have at least one 'has_member' relationship to an instance of index upperbound?",
                            "Is it required for an index-type to include at least one member that is classified as index upperbound via the 'has_member' property?",
                            "Can an index-type be considered valid if it lacks any 'has_member' connection to an index upperbound?"
                        ]
                    },
                    {
                        "axiom": "index-type propertyRestrictions [is_member_of some index-type list]",
                        "CQ": [
                            "Is every index-type entity required to be a member of at least one index-type list?",
                            "Can an index-type exist without being associated via is_member_of to any index-type list?",
                            "Does the definition of index-type necessitate a relationship through is_member_of to an index-type list?"
                        ]
                    },
                    {
                        "axiom": "index-type propertyRestrictions [role_of some datatype]",
                        "CQ": [
                            "Is it required that every index-type has at least one role_of relationship to a datatype?",
                            "Can an index-type exist without being associated through role_of to any datatype?",
                            "Does the presence of a role_of link with a datatype distinguish index-type from other classes?"
                        ]
                    },
                    {
                        "axiom": "index-type propertyRestrictions [has_member some index lowerbound]",
                        "CQ": [
                            "Is it required for propertyRestrictions to have at least one has_member relationship to an index in the lowerbound category?",
                            "Does every instance of propertyRestrictions include a member of type index whose value meets the lowerbound constraint?",
                            "Can propertyRestrictions exist without having any has_member connections to an index corresponding to lowerbound?"
                        ]
                    }
                ],
                "removed axiom": "index-type propertyRestrictions [role_of some datatype]",
                "Target CQ": [
                    "Is it required that every index-type has at least one role_of relationship to a datatype?",
                    "Can an index-type exist without being associated through role_of to any datatype?",
                    "Does the presence of a role_of link with a datatype distinguish index-type from other classes?"
                ],
                "Valid CQ": [
                    "Is index-type classified as a more specific type under the general category of datatype role?",
                    "Which specialized types are categorized beneath datatype role, such as index-type?",
                    "What broader categories encompass index-type within the ontology?",
                    "Must every instance of index-type have at least one 'has_member' relationship to an instance of index upperbound?",
                    "Is it required for an index-type to include at least one member that is classified as index upperbound via the 'has_member' property?",
                    "Can an index-type be considered valid if it lacks any 'has_member' connection to an index upperbound?",
                    "Is every index-type entity required to be a member of at least one index-type list?",
                    "Can an index-type exist without being associated via is_member_of to any index-type list?",
                    "Does the definition of index-type necessitate a relationship through is_member_of to an index-type list?",
                    "Is it required for propertyRestrictions to have at least one has_member relationship to an index in the lowerbound category?",
                    "Does every instance of propertyRestrictions include a member of type index whose value meets the lowerbound constraint?",
                    "Can propertyRestrictions exist without having any has_member connections to an index corresponding to lowerbound?"
                ],
                "type": "Type1"
            },
            "real field-list": {
                "axiom": {
                    "subClassOf": [
                        "field-list"
                    ],
                    "disjointWith": [
                        "boolean field-list"
                    ],
                    "propertyRestrictions": [
                        "[has_member some real field component]"
                    ]
                },
                "description": "real field-list is defined as a subclass of field-list, explicitly disjoint from boolean field-list and discrete field-list, ensuring no overlap in membership between these types. Members of real field-list are characterized by the property that they contain at least one real field component as a member. This formalization guarantees that any real field-list includes real-valued field components and cannot simultaneously be considered a boolean or discrete field-list.",
                "CQ": [
                    {
                        "axiom": "real field-list subClassOf field-list",
                        "CQ": [
                            "Is real field-list categorized under the scope of field-list?",
                            "Which specialized field-list types encompass real field-list?",
                            "What broader classes include real field-list within their hierarchy?"
                        ]
                    },
                    {
                        "axiom": "real field-list disjointWith boolean field-list",
                        "CQ": [
                            "What ontological separation is defined between real field-list and boolean field-list?",
                            "Is an entity allowed to be classified under both real field-list and boolean field-list categories?",
                            "Which field-list types are formally specified as disjoint with boolean field-list?"
                        ]
                    },
                    {
                        "axiom": "real field-list disjointWith discrete field-list",
                        "CQ": [
                            "What is the logical separation between real field-list and discrete field-list according to the ontology?",
                            "Is any field-list instance permitted to belong to both real and discrete field-list classes?",
                            "Which entities are declared as mutually exclusive with discrete field-list within the ontology?"
                        ]
                    },
                    {
                        "axiom": "real field-list propertyRestrictions [has_member some real field component]",
                        "CQ": [
                            "Is every real field-list required to have at least one member that is a real field component?",
                            "Does the property 'has_member' applied to a real field-list necessarily include some real field component?",
                            "Can a real field-list exist without having any members from the class of real field components?"
                        ]
                    }
                ],
                "removed axiom": "real field-list disjointWith discrete field-list",
                "Target CQ": [
                    "What is the logical separation between real field-list and discrete field-list according to the ontology?",
                    "Is any field-list instance permitted to belong to both real and discrete field-list classes?",
                    "Which entities are declared as mutually exclusive with discrete field-list within the ontology?"
                ],
                "Valid CQ": [
                    "Is real field-list categorized under the scope of field-list?",
                    "Which specialized field-list types encompass real field-list?",
                    "What broader classes include real field-list within their hierarchy?",
                    "What ontological separation is defined between real field-list and boolean field-list?",
                    "Is an entity allowed to be classified under both real field-list and boolean field-list categories?",
                    "Which field-list types are formally specified as disjoint with boolean field-list?",
                    "Is every real field-list required to have at least one member that is a real field component?",
                    "Does the property 'has_member' applied to a real field-list necessarily include some real field component?",
                    "Can a real field-list exist without having any members from the class of real field components?"
                ],
                "type": "Type1"
            },
            "primitive field-list": {
                "axiom": {
                    "subClassOf": [
                        "field-list"
                    ],
                    "propertyRestrictions": []
                },
                "description": "primitive field-list is defined as a subclass of field-list, with the restriction that it must have at least one member that is a primitive field component. This means that every instance of primitive field-list comprises a collection of fields where at least one member is a primitive field component.",
                "CQ": [
                    {
                        "axiom": "primitive field-list subClassOf field-list",
                        "CQ": [
                            "Is primitive field-list included in the set of subclasses of field-list?",
                            "What more general class does primitive field-list belong to within the ontology?",
                            "Which lists are classified as more specific instances under field-list, such as primitive field-list?"
                        ]
                    },
                    {
                        "axiom": "primitive field-list propertyRestrictions [has_member some primitive field component]",
                        "CQ": [
                            "Is every primitive field-list required to have at least one 'has_member' relationship with a primitive field component?",
                            "Can a primitive field-list exist if it does not include any primitive field component as a member?",
                            "Does the existence of a 'primitive field-list' imply the presence of a related 'primitive field component' via the 'has_member' property?"
                        ]
                    }
                ],
                "removed axiom": "primitive field-list propertyRestrictions [has_member some primitive field component]",
                "Target CQ": [
                    "Is every primitive field-list required to have at least one 'has_member' relationship with a primitive field component?",
                    "Can a primitive field-list exist if it does not include any primitive field component as a member?",
                    "Does the existence of a 'primitive field-list' imply the presence of a related 'primitive field component' via the 'has_member' property?"
                ],
                "Valid CQ": [
                    "Is primitive field-list included in the set of subclasses of field-list?",
                    "What more general class does primitive field-list belong to within the ontology?",
                    "Which lists are classified as more specific instances under field-list, such as primitive field-list?"
                ],
                "type": "Type1"
            },
            "dyadic operation": {
                "axiom": {
                    "subClassOf": [
                        "characterizing operation"
                    ],
                    "disjointWith": [
                        "niladic operation",
                        "n-adic operation"
                    ]
                },
                "description": "dyadic operation is defined as a subclass of characterizing operation, and is disjoint with niladic operation, monadic operation, and n-adic operation, ensuring that no individual can be simultaneously classified as any of these mutually exclusive operation types. A dyadic operation is characterized by mapping a pair of values from a given datatype to either another value of the same datatype or to a Boolean value. This formalization supports the clear distinction and function of dyadic operations within the hierarchy of operation arities.",
                "CQ": [
                    {
                        "axiom": "dyadic operation subClassOf characterizing operation",
                        "CQ": [
                            "Is every dyadic operation encompassed by the category of characterizing operation?",
                            "What operations fall under the broader class of characterizing operation, including dyadic operation?",
                            "Which more general operation types include dyadic operation?"
                        ]
                    },
                    {
                        "axiom": "dyadic operation disjointWith niladic operation",
                        "CQ": [
                            "How are dyadic operations and niladic operations classified with respect to each other in the ontology?",
                            "Is there an entity that can be considered both a dyadic operation and a niladic operation?",
                            "Which operation types are defined as disjoint with dyadic operations?"
                        ]
                    },
                    {
                        "axiom": "dyadic operation disjointWith monadic operation",
                        "CQ": [
                            "How does the ontology differentiate dyadic operations from monadic operations?",
                            "Is it permissible for an operation to be classified as both dyadic and monadic according to the ontology?",
                            "Which operation types are defined as mutually exclusive with monadic operations in the knowledge model?"
                        ]
                    },
                    {
                        "axiom": "dyadic operation disjointWith n-adic operation",
                        "CQ": [
                            "What is the ontological separation between dyadic operation and n-adic operation?",
                            "Is any mathematical operation classified as both a dyadic operation and an n-adic operation?",
                            "Which operation types are stated as disjoint with n-adic operation in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "dyadic operation disjointWith monadic operation",
                "Target CQ": [
                    "How does the ontology differentiate dyadic operations from monadic operations?",
                    "Is it permissible for an operation to be classified as both dyadic and monadic according to the ontology?",
                    "Which operation types are defined as mutually exclusive with monadic operations in the knowledge model?"
                ],
                "Valid CQ": [
                    "Is every dyadic operation encompassed by the category of characterizing operation?",
                    "What operations fall under the broader class of characterizing operation, including dyadic operation?",
                    "Which more general operation types include dyadic operation?",
                    "How are dyadic operations and niladic operations classified with respect to each other in the ontology?",
                    "Is there an entity that can be considered both a dyadic operation and a niladic operation?",
                    "Which operation types are defined as disjoint with dyadic operations?",
                    "What is the ontological separation between dyadic operation and n-adic operation?",
                    "Is any mathematical operation classified as both a dyadic operation and an n-adic operation?",
                    "Which operation types are stated as disjoint with n-adic operation in the ontology?"
                ],
                "type": "Type1"
            },
            "monadic operation": {
                "axiom": {
                    "subClassOf": [
                        "characterizing operation"
                    ],
                    "disjointWith": []
                },
                "description": "monadic operation is defined as a subclass of characterizing operation and is explicitly disjoint with n-adic operation, meaning an operation cannot be both monadic and n-adic. Monadic operations map a value of the given datatype to either another value of the same datatype or to a Boolean value, thus operating on a single input. This distinguishes monadic operations from n-adic operations, which take multiple inputs.",
                "CQ": [
                    {
                        "axiom": "monadic operation subClassOf characterizing operation",
                        "CQ": [
                            "Does a monadic operation fall under the category of characterizing operation?",
                            "Which operations are classified as specializations of characterizing operation, such as monadic operation?",
                            "To which higher-level operation types does monadic operation belong?"
                        ]
                    },
                    {
                        "axiom": "monadic operation disjointWith n-adic operation",
                        "CQ": [
                            "How does the ontology formally distinguish between monadic operations and n-adic operations?",
                            "Is it permitted for an operation to be both monadic and n-adic simultaneously within the ontology framework?",
                            "Which types of operations are specified as being mutually exclusive with n-adic operations?"
                        ]
                    }
                ],
                "removed axiom": "monadic operation disjointWith n-adic operation",
                "Target CQ": [
                    "How does the ontology formally distinguish between monadic operations and n-adic operations?",
                    "Is it permitted for an operation to be both monadic and n-adic simultaneously within the ontology framework?",
                    "Which types of operations are specified as being mutually exclusive with n-adic operations?"
                ],
                "Valid CQ": [
                    "Does a monadic operation fall under the category of characterizing operation?",
                    "Which operations are classified as specializations of characterizing operation, such as monadic operation?",
                    "To which higher-level operation types does monadic operation belong?"
                ],
                "type": "Type1"
            },
            "procedure-parameter-list": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has_member some procedure-paremeter declaration]"
                    ]
                },
                "description": "procedure-parameter-list is defined as a subclass of list specification, restricted so that it must have at least one member which is a procedure-parameter declaration. This formalization ensures that any instance of procedure-parameter-list represents a list where each member is specifically a declaration pertaining to procedure parameters.",
                "CQ": [
                    {
                        "axiom": "procedure-parameter-list subClassOf list specification",
                        "CQ": [
                            "Is procedure-parameter-list categorized under list specification?",
                            "Which specific types fall under the category of list specification, and does procedure-parameter-list appear among them?",
                            "What broader classifications include procedure-parameter-list?"
                        ]
                    },
                    {
                        "axiom": "procedure-parameter-list propertyRestrictions [has_member some procedure-paremeter declaration]",
                        "CQ": [
                            "Must every procedure-parameter-list include at least one member that is a procedure-parameter declaration?",
                            "Is the presence of a procedure-parameter declaration as a member required for an instance to be recognized as a procedure-parameter-list?",
                            "Can a procedure-parameter-list exist without having any procedure-parameter declaration as a member?"
                        ]
                    }
                ],
                "removed axiom": "procedure-parameter-list subClassOf list specification",
                "Target CQ": [
                    "Is procedure-parameter-list categorized under list specification?",
                    "Which specific types fall under the category of list specification, and does procedure-parameter-list appear among them?",
                    "What broader classifications include procedure-parameter-list?"
                ],
                "Valid CQ": [
                    "Must every procedure-parameter-list include at least one member that is a procedure-parameter declaration?",
                    "Is the presence of a procedure-parameter declaration as a member required for an instance to be recognized as a procedure-parameter-list?",
                    "Can a procedure-parameter-list exist without having any procedure-parameter declaration as a member?"
                ],
                "type": "Type1"
            },
            "extended-value-list": {
                "axiom": {
                    "subClassOf": [
                        "list specification"
                    ],
                    "propertyRestrictions": []
                },
                "description": "extended-value-list is defined as a subclass of list specification, meaning it inherits the general characteristics of list specifications. Additionally, every member of this class must have at least one associated extended-value identifier, as specified by the property has_identifier. This ensures that all instances of extended-value-list are identifiable through one or more extended-value identifiers.",
                "CQ": [
                    {
                        "axiom": "extended-value-list subClassOf list specification",
                        "CQ": [
                            "Is extended-value-list encompassed by the broader category of list specification?",
                            "What are the more specialized forms of list specification, particularly those including extended-value-list?",
                            "Which higher-level categories does extended-value-list fall under within the ontology?"
                        ]
                    },
                    {
                        "axiom": "extended-value-list propertyRestrictions [has_identifier some extended-value identifier]",
                        "CQ": [
                            "Is every instance of an extended-value-list required to have at least one has_identifier relationship with an extended-value identifier?",
                            "Can an extended-value-list exist without being linked by has_identifier to an extended-value identifier?",
                            "Does the presence of the has_identifier property between an extended-value-list and an extended-value identifier define the membership of extended-value-list in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "extended-value-list propertyRestrictions [has_identifier some extended-value identifier]",
                "Target CQ": [
                    "Is every instance of an extended-value-list required to have at least one has_identifier relationship with an extended-value identifier?",
                    "Can an extended-value-list exist without being linked by has_identifier to an extended-value identifier?",
                    "Does the presence of the has_identifier property between an extended-value-list and an extended-value identifier define the membership of extended-value-list in the ontology?"
                ],
                "Valid CQ": [
                    "Is extended-value-list encompassed by the broader category of list specification?",
                    "What are the more specialized forms of list specification, particularly those including extended-value-list?",
                    "Which higher-level categories does extended-value-list fall under within the ontology?"
                ],
                "type": "Type1"
            },
            "field-list": {
                "axiom": {
                    "subClassOf": [
                        "list specification"
                    ],
                    "propertyRestrictions": []
                },
                "description": "field-list is defined as a subclass of list specification, meaning it inherits all properties of a list specification. Additionally, it is characterized by a property restriction: every field-list must have at least one member that is a field component. This ensures that any instance of field-list specifically contains field components as its members.",
                "CQ": [
                    {
                        "axiom": "field-list subClassOf list specification",
                        "CQ": [
                            "Is field-list classified as a subtype of list specification?",
                            "What broader category does field-list fall under within the list specification hierarchy?",
                            "Which list specification subclasses encompass field-list?"
                        ]
                    },
                    {
                        "axiom": "field-list propertyRestrictions [has_member some field component]",
                        "CQ": [
                            "Must every field-list include at least one field component as a member?",
                            "Is it required for the has_member property of a field-list to relate to a field component?",
                            "Can a field-list exist without having any field component as its member?"
                        ]
                    }
                ],
                "removed axiom": "field-list propertyRestrictions [has_member some field component]",
                "Target CQ": [
                    "Must every field-list include at least one field component as a member?",
                    "Is it required for the has_member property of a field-list to relate to a field component?",
                    "Can a field-list exist without having any field component as its member?"
                ],
                "Valid CQ": [
                    "Is field-list classified as a subtype of list specification?",
                    "What broader category does field-list fall under within the list specification hierarchy?",
                    "Which list specification subclasses encompass field-list?"
                ],
                "type": "Type1"
            },
            "homogenous aggregate datatype with variable size": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has_member some homogenous aggregate generator with variable size]"
                    ]
                },
                "description": "homogenous aggregate datatype with variable size is a subclass of homogenous aggregate datatype. Each instance in this class is characterized by having at least one member that is a homogenous aggregate generator with variable size. This means members of this class are structured as aggregates comprised of homogeneous components, and the size or number of these components can vary, as generated by the associated generator.",
                "CQ": [
                    {
                        "axiom": "homogenous aggregate datatype with variable size subClassOf homogenous aggregate datatype",
                        "CQ": [
                            "Can a homogenous aggregate datatype with variable size be classified under homogenous aggregate datatype?",
                            "What are the specific types categorized as homogenous aggregate datatype, including those with variable size?",
                            "Which general datatype categories include homogenous aggregate datatype with variable size as a specialization?"
                        ]
                    },
                    {
                        "axiom": "homogenous aggregate datatype with variable size propertyRestrictions [has_member some homogenous aggregate generator with variable size]",
                        "CQ": [
                            "Is it necessary for a homogenous aggregate datatype with variable size to have at least one member that is a homogenous aggregate generator with variable size?",
                            "Does every homogenous aggregate datatype with variable size always include some homogenous aggregate generator with variable size as a member?",
                            "Can a homogenous aggregate datatype with variable size exist without containing any homogenous aggregate generator with variable size as a member?"
                        ]
                    }
                ],
                "removed axiom": "homogenous aggregate datatype with variable size subClassOf homogenous aggregate datatype",
                "Target CQ": [
                    "Can a homogenous aggregate datatype with variable size be classified under homogenous aggregate datatype?",
                    "What are the specific types categorized as homogenous aggregate datatype, including those with variable size?",
                    "Which general datatype categories include homogenous aggregate datatype with variable size as a specialization?"
                ],
                "Valid CQ": [
                    "Is it necessary for a homogenous aggregate datatype with variable size to have at least one member that is a homogenous aggregate generator with variable size?",
                    "Does every homogenous aggregate datatype with variable size always include some homogenous aggregate generator with variable size as a member?",
                    "Can a homogenous aggregate datatype with variable size exist without containing any homogenous aggregate generator with variable size as a member?"
                ],
                "type": "Type1"
            },
            "integer datatype": {
                "axiom": {
                    "subClassOf": [
                        "numeric ordered primitive datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_operation some NonNegative:integer]",
                        "[has_quality some ordered]",
                        "[has_operation some Equal:integer]",
                        "[has_operation some InOrder:interger]",
                        "[has_quality some numeric]",
                        "[has_quality some exact]",
                        "[has_operation some Add:integer]",
                        "[has_quality some unbounded]",
                        "[has_operation some Multiply:integer]",
                        "[has_operation some Negate:integer]"
                    ]
                },
                "description": "integer datatype is a subclass of numeric ordered primitive datatype, characterized by qualities such as being ordered, numeric, exact, and unbounded. It supports operations including addition, multiplication, negation, equality checking, and ordered comparison among integers, as well as ensuring the existence of non-negative integers. The class is explicitly disjoint with rational datatype, indicating that no individual can be both an integer and a rational that is not an integer. These axioms formalize the mathematical and operational properties unique to the integer datatype.",
                "CQ": [
                    {
                        "axiom": "integer datatype subClassOf numeric ordered primitive datatype",
                        "CQ": [
                            "Does integer datatype fall under the broader classification of numeric ordered primitive datatype?",
                            "What specific datatypes are categorized as subclasses of numeric ordered primitive datatype, including integer datatype?",
                            "Which higher-level datatype groups encompass integer datatype?"
                        ]
                    },
                    {
                        "axiom": "integer datatype disjointWith rational datatype",
                        "CQ": [
                            "What logical separation is established between integer datatype and rational datatype in the ontology?",
                            "Can a datatype simultaneously be classified as both integer and rational?",
                            "Which datatypes are explicitly specified as incompatible with rational datatype?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_operation some NonNegative:integer]",
                        "CQ": [
                            "Is it required that an integer entity possesses at least one 'has_operation' value that is a non-negative integer?",
                            "Can an integer instance exist without having any association to 'has_operation' with a non-negative integer value?",
                            "Does the scope of 'has_operation' for an integer specifically include only non-negative integer values?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_quality some ordered]",
                        "CQ": [
                            "Must every integer possess at least one 'has_quality' relationship with an entity classified as ordered?",
                            "Is the presence of the 'ordered' quality through the 'has_quality' property a necessary characteristic for all integers?",
                            "Do integers require a 'has_quality' association that entails the existence of the 'ordered' attribute?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_operation some Equal:integer]",
                        "CQ": [
                            "Must every instance related to 'has_operation' include at least one connection to an integer value through the 'Equal' restriction?",
                            "Is it necessary for the property 'has_operation' of an individual to relate that individual to an integer satisfying the 'Equal' constraint?",
                            "Are all individuals with the 'has_operation' property required to demonstrate the existence of an 'Equal' integer value?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_operation some InOrder:interger]",
                        "CQ": [
                            "Must every instance with an integer datatype have at least one 'has_operation' property relating it to an integer in the set InOrder?",
                            "Is it required for entities described by this axiom to possess some operation involving an integer classified as InOrder?",
                            "Can an entity with an integer datatype exist in this ontology without being linked by 'has_operation' to at least one InOrder integer value?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_quality some numeric]",
                        "CQ": [
                            "Must every integer possess at least one quality value that is numeric?",
                            "Is it required for instances of integer to be associated with a numeric quality through the has_quality property?",
                            "Can an integer exist without having the has_quality property linking it to a numeric value?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_quality some exact]",
                        "CQ": [
                            "Is it necessary for an integer to have the 'has_quality' property with at least one value of 'exact'?",
                            "Does every integer always possess the 'has_quality' property linked to 'exact', or can it be associated with other qualities as well?",
                            "Are there integers that do not have any 'has_quality' relationship with 'exact'?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_operation some Add:integer]",
                        "CQ": [
                            "Must every instance with an integer datatype property have at least one 'has_operation' relationship to an Add operation of type integer?",
                            "Is it required that any entity with an integer property value performs an Add operation involving integers?",
                            "Does the presence of an integer datatype property imply an association with the 'has_operation' property linking to an Add:integer?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_quality some unbounded]",
                        "CQ": [
                            "Is it required that every integer possesses at least one 'has_quality' relation to some value within the scope of 'unbounded'?",
                            "Does the definition of integer entail the existence of a 'has_quality' property with an unbounded value?",
                            "Must an integer always be associated with at least one unbounded quality through the 'has_quality' property?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_operation some Multiply:integer]",
                        "CQ": [
                            "Is it necessary for an integer to have at least one 'has_operation' relationship with a Multiply operation involving another integer?",
                            "Does every instance of integer participate in a 'has_operation' property where the operation performed is multiplication with another integer?",
                            "Are there integers that do not engage in any 'has_operation' relation with a Multiply operation involving an integer?"
                        ]
                    },
                    {
                        "axiom": "integer datatype propertyRestrictions [has_operation some Negate:integer]",
                        "CQ": [
                            "Is it required that an integer has at least one operation involving negation?",
                            "Can every integer be associated with some operation categorized as negation?",
                            "Does the existence of a negation operation apply to all members of the integer class?"
                        ]
                    }
                ],
                "removed axiom": "integer datatype disjointWith rational datatype",
                "Target CQ": [
                    "What logical separation is established between integer datatype and rational datatype in the ontology?",
                    "Can a datatype simultaneously be classified as both integer and rational?",
                    "Which datatypes are explicitly specified as incompatible with rational datatype?"
                ],
                "Valid CQ": [
                    "Does integer datatype fall under the broader classification of numeric ordered primitive datatype?",
                    "What specific datatypes are categorized as subclasses of numeric ordered primitive datatype, including integer datatype?",
                    "Which higher-level datatype groups encompass integer datatype?",
                    "Is it required that an integer entity possesses at least one 'has_operation' value that is a non-negative integer?",
                    "Can an integer instance exist without having any association to 'has_operation' with a non-negative integer value?",
                    "Does the scope of 'has_operation' for an integer specifically include only non-negative integer values?",
                    "Must every integer possess at least one 'has_quality' relationship with an entity classified as ordered?",
                    "Is the presence of the 'ordered' quality through the 'has_quality' property a necessary characteristic for all integers?",
                    "Do integers require a 'has_quality' association that entails the existence of the 'ordered' attribute?",
                    "Must every instance related to 'has_operation' include at least one connection to an integer value through the 'Equal' restriction?",
                    "Is it necessary for the property 'has_operation' of an individual to relate that individual to an integer satisfying the 'Equal' constraint?",
                    "Are all individuals with the 'has_operation' property required to demonstrate the existence of an 'Equal' integer value?",
                    "Must every instance with an integer datatype have at least one 'has_operation' property relating it to an integer in the set InOrder?",
                    "Is it required for entities described by this axiom to possess some operation involving an integer classified as InOrder?",
                    "Can an entity with an integer datatype exist in this ontology without being linked by 'has_operation' to at least one InOrder integer value?",
                    "Must every integer possess at least one quality value that is numeric?",
                    "Is it required for instances of integer to be associated with a numeric quality through the has_quality property?",
                    "Can an integer exist without having the has_quality property linking it to a numeric value?",
                    "Is it necessary for an integer to have the 'has_quality' property with at least one value of 'exact'?",
                    "Does every integer always possess the 'has_quality' property linked to 'exact', or can it be associated with other qualities as well?",
                    "Are there integers that do not have any 'has_quality' relationship with 'exact'?",
                    "Must every instance with an integer datatype property have at least one 'has_operation' relationship to an Add operation of type integer?",
                    "Is it required that any entity with an integer property value performs an Add operation involving integers?",
                    "Does the presence of an integer datatype property imply an association with the 'has_operation' property linking to an Add:integer?",
                    "Is it required that every integer possesses at least one 'has_quality' relation to some value within the scope of 'unbounded'?",
                    "Does the definition of integer entail the existence of a 'has_quality' property with an unbounded value?",
                    "Must an integer always be associated with at least one unbounded quality through the 'has_quality' property?",
                    "Is it necessary for an integer to have at least one 'has_operation' relationship with a Multiply operation involving another integer?",
                    "Does every instance of integer participate in a 'has_operation' property where the operation performed is multiplication with another integer?",
                    "Are there integers that do not engage in any 'has_operation' relation with a Multiply operation involving an integer?",
                    "Is it required that an integer has at least one operation involving negation?",
                    "Can every integer be associated with some operation categorized as negation?",
                    "Does the existence of a negation operation apply to all members of the integer class?"
                ],
                "type": "Type1"
            },
            "aggregate generator": {
                "axiom": {
                    "subClassOf": [],
                    "equivalentClass": [
                        "(array generator or bag generator or class generator or record generator or sequence generator or set generator or table generator)"
                    ]
                },
                "description": "aggregate generator is defined as a subclass of generated datatype generator and is equivalent to any generator that is either an array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator. This class serves as a synonym for \"aggregate datatype constructor,\" reflecting its role in constructing aggregate or composite datatypes from collections of elements or records.",
                "CQ": [
                    {
                        "axiom": "aggregate generator subClassOf generated datatype generator",
                        "CQ": [
                            "Does every aggregate generator fall under the category of generated datatype generator?",
                            "Which generator types are encompassed by the generated datatype generator class?",
                            "To which higher-level classes does aggregate generator pertain within the ontology?"
                        ]
                    },
                    {
                        "axiom": "aggregate generator equivalentClass (array generator or bag generator or class generator or record generator or sequence generator or set generator or table generator)",
                        "CQ": [
                            "Is an aggregate generator defined as a generator that is either an array generator, a bag generator, a class generator, a record generator, a sequence generator, a set generator, or a table generator?",
                            "Does every aggregate generator fall into at least one of the categories: array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator?",
                            "Can any generator that is an array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator be classified as an aggregate generator?"
                        ]
                    }
                ],
                "removed axiom": "aggregate generator subClassOf generated datatype generator",
                "Target CQ": [
                    "Does every aggregate generator fall under the category of generated datatype generator?",
                    "Which generator types are encompassed by the generated datatype generator class?",
                    "To which higher-level classes does aggregate generator pertain within the ontology?"
                ],
                "Valid CQ": [
                    "Is an aggregate generator defined as a generator that is either an array generator, a bag generator, a class generator, a record generator, a sequence generator, a set generator, or a table generator?",
                    "Does every aggregate generator fall into at least one of the categories: array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator?",
                    "Can any generator that is an array generator, bag generator, class generator, record generator, sequence generator, set generator, or table generator be classified as an aggregate generator?"
                ],
                "type": "Type1"
            },
            "cardinality": {
                "axiom": {
                    "subClassOf": [
                        "datatype property"
                    ],
                    "disjointWith": [
                        "order",
                        "equality"
                    ],
                    "equivalentClass": [
                        "(countable or finite or uncountable)"
                    ]
                },
                "description": "cardinality is a subclass of datatype property and is disjoint from the classes order, boundedness, and equality, meaning no entity can simultaneously belong to both cardinality and any of these classes. It is formally equivalent to the union of countable, finite, and uncountable, reflecting that cardinality expresses the size or \"number of elements\" in a set, which may be countable, finite, or uncountable. This structure ensures clear differentiation from related set properties such as order, boundedness, and equality.",
                "CQ": [
                    {
                        "axiom": "cardinality subClassOf datatype property",
                        "CQ": [
                            "Is cardinality categorized as a specific type of datatype property?",
                            "Which datatype properties have cardinality as a specialized form?",
                            "What general categories encompass cardinality in the context of datatype properties?"
                        ]
                    },
                    {
                        "axiom": "cardinality disjointWith order",
                        "CQ": [
                            "How does the ontology specify the incompatibility between cardinality and order?",
                            "Is it logically consistent in the ontology for an entity to simultaneously possess both cardinality and order properties?",
                            "Which classes or concepts are explicitly defined as disjoint with cardinality?"
                        ]
                    },
                    {
                        "axiom": "cardinality disjointWith boundedness",
                        "CQ": [
                            "How does the ontology distinguish between cardinality and boundedness as separate concepts?",
                            "Is any entity permitted to belong to both cardinality and boundedness categories simultaneously?",
                            "Which other classes, apart from boundedness, are defined as mutually exclusive with cardinality?"
                        ]
                    },
                    {
                        "axiom": "cardinality disjointWith equality",
                        "CQ": [
                            "What logical separation is specified between cardinality and equality in the ontology?",
                            "Is there any entity that can belong to both the concepts of cardinality and equality simultaneously?",
                            "Which ontology classes are formally defined as disjoint with equality?"
                        ]
                    },
                    {
                        "axiom": "cardinality equivalentClass (countable or finite or uncountable)",
                        "CQ": [
                            "Is cardinality equivalent to the union of countable, finite, and uncountable concepts?",
                            "Can every instance classified under cardinality be either countable, finite, or uncountable?",
                            "Does cardinality include only those entities that are finite, countable, or uncountable, with no others?"
                        ]
                    }
                ],
                "removed axiom": "cardinality disjointWith boundedness",
                "Target CQ": [
                    "How does the ontology distinguish between cardinality and boundedness as separate concepts?",
                    "Is any entity permitted to belong to both cardinality and boundedness categories simultaneously?",
                    "Which other classes, apart from boundedness, are defined as mutually exclusive with cardinality?"
                ],
                "Valid CQ": [
                    "Is cardinality categorized as a specific type of datatype property?",
                    "Which datatype properties have cardinality as a specialized form?",
                    "What general categories encompass cardinality in the context of datatype properties?",
                    "How does the ontology specify the incompatibility between cardinality and order?",
                    "Is it logically consistent in the ontology for an entity to simultaneously possess both cardinality and order properties?",
                    "Which classes or concepts are explicitly defined as disjoint with cardinality?",
                    "What logical separation is specified between cardinality and equality in the ontology?",
                    "Is there any entity that can belong to both the concepts of cardinality and equality simultaneously?",
                    "Which ontology classes are formally defined as disjoint with equality?",
                    "Is cardinality equivalent to the union of countable, finite, and uncountable concepts?",
                    "Can every instance classified under cardinality be either countable, finite, or uncountable?",
                    "Does cardinality include only those entities that are finite, countable, or uncountable, with no others?"
                ],
                "type": "Type1"
            },
            "vector datatype": {
                "axiom": {
                    "subClassOf": [
                        "array datatype"
                    ],
                    "propertyRestrictions": []
                },
                "description": "vector datatype is defined as a subclass of array datatype. Every vector datatype must have at least one member that is generated by or corresponds to a vector generator, as specified by the property restriction [has_member some vector generator]. This formalizes vector datatypes as array datatypes with elements produced or related to a specific generation mechanism.",
                "CQ": [
                    {
                        "axiom": "vector datatype subClassOf array datatype",
                        "CQ": [
                            "Is every vector datatype classified as a kind of array datatype?",
                            "What types of array datatype encompass vector datatype as a more specific type?",
                            "Which broader datatype categories include vector datatype as a member?"
                        ]
                    },
                    {
                        "axiom": "vector datatype propertyRestrictions [has_member some vector generator]",
                        "CQ": [
                            "Is every instance with a 'has_member' relation to a vector required to be associated with a vector generator?",
                            "Can an entity with the 'has_member' property pointing to a vector be something other than a vector generator?",
                            "Are all entities that have members of type vector necessarily linked to a vector generator through the 'has_member' property?"
                        ]
                    }
                ],
                "removed axiom": "vector datatype propertyRestrictions [has_member some vector generator]",
                "Target CQ": [
                    "Is every instance with a 'has_member' relation to a vector required to be associated with a vector generator?",
                    "Can an entity with the 'has_member' property pointing to a vector be something other than a vector generator?",
                    "Are all entities that have members of type vector necessarily linked to a vector generator through the 'has_member' property?"
                ],
                "Valid CQ": [
                    "Is every vector datatype classified as a kind of array datatype?",
                    "What types of array datatype encompass vector datatype as a more specific type?",
                    "Which broader datatype categories include vector datatype as a member?"
                ],
                "type": "Type1"
            },
            "boolean field component": {
                "axiom": {
                    "subClassOf": [
                        "primitive field component"
                    ],
                    "propertyRestrictions": []
                },
                "description": "boolean field component is defined as a subclass of primitive field component and is characterized by the restriction that it must have some relationship (role_of) to a boolean datatype. This means every boolean field component represents or is associated with a value that is strictly of boolean type (such as true or false), distinguishing it from other field components that may represent different primitive datatypes.",
                "CQ": [
                    {
                        "axiom": "boolean field component subClassOf primitive field component",
                        "CQ": [
                            "Is boolean field component categorized under primitive field component?",
                            "Which field components are encompassed by primitive field component, such as boolean field component?",
                            "Under which higher-level components does boolean field component fall?"
                        ]
                    },
                    {
                        "axiom": "boolean field component propertyRestrictions [role_of some boolean datatype]",
                        "CQ": [
                            "Is it required that the 'component' property of a boolean field always relates only to values of the boolean datatype?",
                            "Can a boolean field have a 'component' relationship to any entity that is not of boolean datatype?",
                            "Does every instance of a boolean field necessarily possess at least one 'component' that is a boolean datatype?"
                        ]
                    }
                ],
                "removed axiom": "boolean field component propertyRestrictions [role_of some boolean datatype]",
                "Target CQ": [
                    "Is it required that the 'component' property of a boolean field always relates only to values of the boolean datatype?",
                    "Can a boolean field have a 'component' relationship to any entity that is not of boolean datatype?",
                    "Does every instance of a boolean field necessarily possess at least one 'component' that is a boolean datatype?"
                ],
                "Valid CQ": [
                    "Is boolean field component categorized under primitive field component?",
                    "Which field components are encompassed by primitive field component, such as boolean field component?",
                    "Under which higher-level components does boolean field component fall?"
                ],
                "type": "Type1"
            },
            "procedure datatype": {
                "axiom": {
                    "subClassOf": [
                        "non-aggregate datatype"
                    ],
                    "propertyRestrictions": [
                        "[has_quality some non-numeric]",
                        "[has_member some procedure generator]",
                        "[has_quality some exact]",
                        "[has_member some procedure-parameter-list]",
                        "[has_operation some Equal:procedure]",
                        "[has_quality some non-ordered]",
                        "[has_operation some Invoke:procedure]"
                    ]
                },
                "description": "procedure datatype is defined as a subclass of non-aggregate datatype. Instances of this class represent atomic values that are operations (procedures) on values of designated parameter datatypes. A procedure datatype must possess non-numeric, exact, and non-ordered qualities, and it is composed of specific members: a procedure generator, a procedure-parameter list, and a return-parameter specification. It is also characterized by having at least the operations ‘Equal:procedure’ and ‘Invoke:procedure’. This formalization encapsulates all operations on a collection of datatypes, treating each procedure as an indivisible (atomic) value.",
                "CQ": [
                    {
                        "axiom": "procedure datatype subClassOf non-aggregate datatype",
                        "CQ": [
                            "Is every procedure datatype classified under non-aggregate datatypes?",
                            "Which datatypes are categorized as specializations of non-aggregate datatype, including procedure datatype?",
                            "What higher-level datatype categories encompass procedure datatype?"
                        ]
                    },
                    {
                        "axiom": "procedure datatype propertyRestrictions [has_quality some non-numeric]",
                        "CQ": [
                            "Is it required that every procedure has at least one quality that is non-numeric?",
                            "Could a procedure exist without having any non-numeric quality?",
                            "Must the value of the 'has_quality' property for procedures always include some non-numeric attribute?"
                        ]
                    },
                    {
                        "axiom": "procedure datatype propertyRestrictions [has_member some procedure generator]",
                        "CQ": [
                            "Is it necessary for a procedure to have at least one member that is a procedure generator?",
                            "Does every instance of procedure include some relationship via 'has_member' to a procedure generator?",
                            "Can a procedure exist without having a 'has_member' link to any procedure generator?"
                        ]
                    },
                    {
                        "axiom": "procedure datatype propertyRestrictions [has_quality some exact]",
                        "CQ": [
                            "Is it required that any procedure always possesses at least one 'has_quality' attribute with the value 'exact'?",
                            "Can a procedure be classified under this ontology if it does not have the 'has_quality' property set to 'exact'?",
                            "Is the assignment of the 'exact' value within the 'has_quality' property obligatory for every procedure instance?"
                        ]
                    },
                    {
                        "axiom": "procedure datatype propertyRestrictions [has_member some procedure-parameter-list]",
                        "CQ": [
                            "Is every procedure required to have at least one member from procedure-parameter-list via the has_member property?",
                            "Must a procedure always relate to a procedure-parameter-list through has_member?",
                            "Does the definition of procedure entail the existence of some associated procedure-parameter-list using has_member?"
                        ]
                    },
                    {
                        "axiom": "procedure datatype propertyRestrictions [has_member some return-parameter specification]",
                        "CQ": [
                            "Does every procedure necessarily have at least one return-parameter specified as a member?",
                            "Is it required for a procedure to have the property 'has_member' relating to a return-parameter specification?",
                            "Can there exist a procedure without an associated return-parameter specification via the 'has_member' property?"
                        ]
                    },
                    {
                        "axiom": "procedure datatype propertyRestrictions [has_operation some Equal:procedure]",
                        "CQ": [
                            "Is it required that every instance of procedure has at least one has_operation relationship to Equal:procedure?",
                            "Can a procedure exist without being associated with Equal:procedure via the has_operation property?",
                            "Does the presence of the has_operation property with Equal:procedure guarantee that an entity is classified as procedure?"
                        ]
                    },
                    {
                        "axiom": "procedure datatype propertyRestrictions [has_quality some non-ordered]",
                        "CQ": [
                            "Is every procedure required to have at least one has_quality relationship to a non-ordered value?",
                            "Can a procedure exist without exhibiting the has_quality property to a non-ordered entity?",
                            "Does the property restriction on procedures mean that non-ordered qualities are necessarily associated with them via has_quality?"
                        ]
                    },
                    {
                        "axiom": "procedure datatype propertyRestrictions [has_operation some Invoke:procedure]",
                        "CQ": [
                            "Is it required that every procedure has at least one has_operation relation to an Invoke:procedure?",
                            "Can a procedure exist without being related via has_operation to any Invoke:procedure?",
                            "Are procedures always associated through the has_operation property with at least one instance of Invoke:procedure?"
                        ]
                    }
                ],
                "removed axiom": "procedure datatype propertyRestrictions [has_member some return-parameter specification]",
                "Target CQ": [
                    "Does every procedure necessarily have at least one return-parameter specified as a member?",
                    "Is it required for a procedure to have the property 'has_member' relating to a return-parameter specification?",
                    "Can there exist a procedure without an associated return-parameter specification via the 'has_member' property?"
                ],
                "Valid CQ": [
                    "Is every procedure datatype classified under non-aggregate datatypes?",
                    "Which datatypes are categorized as specializations of non-aggregate datatype, including procedure datatype?",
                    "What higher-level datatype categories encompass procedure datatype?",
                    "Is it required that every procedure has at least one quality that is non-numeric?",
                    "Could a procedure exist without having any non-numeric quality?",
                    "Must the value of the 'has_quality' property for procedures always include some non-numeric attribute?",
                    "Is it necessary for a procedure to have at least one member that is a procedure generator?",
                    "Does every instance of procedure include some relationship via 'has_member' to a procedure generator?",
                    "Can a procedure exist without having a 'has_member' link to any procedure generator?",
                    "Is it required that any procedure always possesses at least one 'has_quality' attribute with the value 'exact'?",
                    "Can a procedure be classified under this ontology if it does not have the 'has_quality' property set to 'exact'?",
                    "Is the assignment of the 'exact' value within the 'has_quality' property obligatory for every procedure instance?",
                    "Is every procedure required to have at least one member from procedure-parameter-list via the has_member property?",
                    "Must a procedure always relate to a procedure-parameter-list through has_member?",
                    "Does the definition of procedure entail the existence of some associated procedure-parameter-list using has_member?",
                    "Is it required that every instance of procedure has at least one has_operation relationship to Equal:procedure?",
                    "Can a procedure exist without being associated with Equal:procedure via the has_operation property?",
                    "Does the presence of the has_operation property with Equal:procedure guarantee that an entity is classified as procedure?",
                    "Is every procedure required to have at least one has_quality relationship to a non-ordered value?",
                    "Can a procedure exist without exhibiting the has_quality property to a non-ordered entity?",
                    "Does the property restriction on procedures mean that non-ordered qualities are necessarily associated with them via has_quality?",
                    "Is it required that every procedure has at least one has_operation relation to an Invoke:procedure?",
                    "Can a procedure exist without being related via has_operation to any Invoke:procedure?",
                    "Are procedures always associated through the has_operation property with at least one instance of Invoke:procedure?"
                ],
                "type": "Type1"
            },
            "upper bound": {
                "axiom": {
                    "subClassOf": [
                        "bound"
                    ],
                    "propertyRestrictions": []
                },
                "description": "upper bound is defined as a subclass of bound, representing a specific type of bound characterized by having exactly one value of type xsd:integer associated through the has-value property. This formalization ensures that every instance of upper bound uniquely specifies a single integer value as its bound.",
                "CQ": [
                    {
                        "axiom": "upper bound subClassOf bound",
                        "CQ": [
                            "Does upper bound belong to the more general category of bound?",
                            "What specific concepts are subclasses under the class bound, such as upper bound?",
                            "Which broader categories encompass upper bound as a member?"
                        ]
                    },
                    {
                        "axiom": "upper bound propertyRestrictions [has-value exactly 1 xsd:integer]",
                        "CQ": [
                            "Is it required that an upper bound always has exactly one property restriction with a value of type integer?",
                            "Can an upper bound possess more than one property restriction assigned to integer values?",
                            "Are multiple xsd:integer values allowed for the property restriction in the context of an upper bound?"
                        ]
                    }
                ],
                "removed axiom": "upper bound propertyRestrictions [has-value exactly 1 xsd:integer]",
                "Target CQ": [
                    "Is it required that an upper bound always has exactly one property restriction with a value of type integer?",
                    "Can an upper bound possess more than one property restriction assigned to integer values?",
                    "Are multiple xsd:integer values allowed for the property restriction in the context of an upper bound?"
                ],
                "Valid CQ": [
                    "Does upper bound belong to the more general category of bound?",
                    "What specific concepts are subclasses under the class bound, such as upper bound?",
                    "Which broader categories encompass upper bound as a member?"
                ],
                "type": "Type1"
            },
            "index upperbound": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has-value exactly 1 xsd:integer]"
                    ]
                },
                "description": "index upperbound is defined as a subclass of bound, characterized by the property restriction that it must have exactly one value of type xsd:integer. This ensures that any instance of index upperbound represents a unique integer value serving as an upper bound within an indexing context.",
                "CQ": [
                    {
                        "axiom": "index upperbound subClassOf bound",
                        "CQ": [
                            "Is bound a superclass encompassing index upperbound?",
                            "Which subclasses does bound include, such as index upperbound?",
                            "To what broader categories does index upperbound belong?"
                        ]
                    },
                    {
                        "axiom": "index upperbound propertyRestrictions [has-value exactly 1 xsd:integer]",
                        "CQ": [
                            "Is an index upperbound characterized by having exactly one value of type xsd:integer for its property restrictions?",
                            "Can an index upperbound have more than one xsd:integer value as a property restriction?",
                            "Must the property restriction for index upperbound be limited to a single xsd:integer value?"
                        ]
                    }
                ],
                "removed axiom": "index upperbound subClassOf bound",
                "Target CQ": [
                    "Is bound a superclass encompassing index upperbound?",
                    "Which subclasses does bound include, such as index upperbound?",
                    "To what broader categories does index upperbound belong?"
                ],
                "Valid CQ": [
                    "Is an index upperbound characterized by having exactly one value of type xsd:integer for its property restrictions?",
                    "Can an index upperbound have more than one xsd:integer value as a property restriction?",
                    "Must the property restriction for index upperbound be limited to a single xsd:integer value?"
                ],
                "type": "Type1"
            },
            "boolean datatype": {
                "axiom": {
                    "subClassOf": [
                        "non-numeric unordered primitive datatype"
                    ],
                    "propertyRestrictions": [
                        "[has_quality some non-ordered]",
                        "[has_quality some non-numeric]",
                        "[has_quality some exact]",
                        "[has_operation some Not:boolean]",
                        "[has_operation some Or:boolean]",
                        "[has_operation some Equal:boolean]"
                    ]
                },
                "description": "boolean datatype is defined as a subclass of non-numeric unordered primitive datatype. It has qualities that are non-ordered, non-numeric, and exact, indicating that boolean values are discrete, precise, and lack inherent ordering or numeric magnitude. Instances of boolean datatype support specific logical operations, including Not, And, Or, and Equal, with all operations yielding boolean results. This formalization captures the core characteristics of the boolean datatype: a primitive type that represents values with two alternatives (typically true and false), distinct from numeric or ordered datatypes, and amenable to fundamental logic operations.",
                "CQ": [
                    {
                        "axiom": "boolean datatype subClassOf non-numeric unordered primitive datatype",
                        "CQ": [
                            "Is boolean datatype classified under the category of non-numeric unordered primitive datatypes?",
                            "Which datatypes are subclasses of non-numeric unordered primitive datatype, and does this list include boolean datatype?",
                            "To which higher-level categories does boolean datatype belong within the datatype hierarchy?"
                        ]
                    },
                    {
                        "axiom": "boolean datatype propertyRestrictions [has_quality some non-ordered]",
                        "CQ": [
                            "Is every instance with the property 'has_quality' necessarily associated with at least one 'non-ordered' value?",
                            "Does the presence of 'has_quality' for an entity imply it must exhibit some form of 'non-ordered' quality?",
                            "Can an entity qualify if it does not have the 'has_quality' property linked to a 'non-ordered' value?"
                        ]
                    },
                    {
                        "axiom": "boolean datatype propertyRestrictions [has_quality some non-numeric]",
                        "CQ": [
                            "Must everything with the 'has_quality' property possess at least one non-numeric value?",
                            "Is it required that any instance with a 'has_quality' relationship be associated with a non-numeric quality?",
                            "Can there be an entity related by 'has_quality' that does not have a non-numeric quality?"
                        ]
                    },
                    {
                        "axiom": "boolean datatype propertyRestrictions [has_quality some exact]",
                        "CQ": [
                            "Must every instance with a 'has_quality' property possess at least one 'exact' quality?",
                            "Is it required that entities described by this class have the 'has_quality' relation to some individual of type 'exact'?",
                            "Can any instance of this class lack the 'has_quality' property linking it to an 'exact' quality?"
                        ]
                    },
                    {
                        "axiom": "boolean datatype propertyRestrictions [has_operation some Not:boolean]",
                        "CQ": [
                            "Is it required for an entity with the 'has_operation' property to have at least one instance where the value is not boolean?",
                            "Can an entity possess the 'has_operation' property only if its value is other than boolean?",
                            "Are there restrictions that exclude boolean values for the 'has_operation' property on this entity?"
                        ]
                    },
                    {
                        "axiom": "boolean datatype propertyRestrictions [has_operation some And:boolean]",
                        "CQ": [
                            "Is it required that an entity with the has_operation property is associated with the boolean value 'And'?",
                            "Must every instance with a has_operation property necessarily involve the 'And' boolean operation?",
                            "Can an entity be considered valid if its has_operation property is linked to a boolean value other than 'And'?"
                        ]
                    },
                    {
                        "axiom": "boolean datatype propertyRestrictions [has_operation some Or:boolean]",
                        "CQ": [
                            "Is it necessary for an entity in this class to have the 'has_operation' property with some value of type boolean?",
                            "Can the 'has_operation' property associated with this class ever have a value that is not of boolean type?",
                            "Does membership in this class imply the existence of at least one 'has_operation' relationship with a boolean value?"
                        ]
                    },
                    {
                        "axiom": "boolean datatype propertyRestrictions [has_operation some Equal:boolean]",
                        "CQ": [
                            "Is it required that boolean datatype entities must participate in at least one 'has_operation' relation with an individual from the class Equal?",
                            "Are all boolean datatype instances constrained to exhibit a 'has_operation' link to something classified as Equal?",
                            "Must any instance defined by boolean always possess a 'has_operation' association with a member of Equal?"
                        ]
                    }
                ],
                "removed axiom": "boolean datatype propertyRestrictions [has_operation some And:boolean]",
                "Target CQ": [
                    "Is it required that an entity with the has_operation property is associated with the boolean value 'And'?",
                    "Must every instance with a has_operation property necessarily involve the 'And' boolean operation?",
                    "Can an entity be considered valid if its has_operation property is linked to a boolean value other than 'And'?"
                ],
                "Valid CQ": [
                    "Is boolean datatype classified under the category of non-numeric unordered primitive datatypes?",
                    "Which datatypes are subclasses of non-numeric unordered primitive datatype, and does this list include boolean datatype?",
                    "To which higher-level categories does boolean datatype belong within the datatype hierarchy?",
                    "Is every instance with the property 'has_quality' necessarily associated with at least one 'non-ordered' value?",
                    "Does the presence of 'has_quality' for an entity imply it must exhibit some form of 'non-ordered' quality?",
                    "Can an entity qualify if it does not have the 'has_quality' property linked to a 'non-ordered' value?",
                    "Must everything with the 'has_quality' property possess at least one non-numeric value?",
                    "Is it required that any instance with a 'has_quality' relationship be associated with a non-numeric quality?",
                    "Can there be an entity related by 'has_quality' that does not have a non-numeric quality?",
                    "Must every instance with a 'has_quality' property possess at least one 'exact' quality?",
                    "Is it required that entities described by this class have the 'has_quality' relation to some individual of type 'exact'?",
                    "Can any instance of this class lack the 'has_quality' property linking it to an 'exact' quality?",
                    "Is it required for an entity with the 'has_operation' property to have at least one instance where the value is not boolean?",
                    "Can an entity possess the 'has_operation' property only if its value is other than boolean?",
                    "Are there restrictions that exclude boolean values for the 'has_operation' property on this entity?",
                    "Is it necessary for an entity in this class to have the 'has_operation' property with some value of type boolean?",
                    "Can the 'has_operation' property associated with this class ever have a value that is not of boolean type?",
                    "Does membership in this class imply the existence of at least one 'has_operation' relationship with a boolean value?",
                    "Is it required that boolean datatype entities must participate in at least one 'has_operation' relation with an individual from the class Equal?",
                    "Are all boolean datatype instances constrained to exhibit a 'has_operation' link to something classified as Equal?",
                    "Must any instance defined by boolean always possess a 'has_operation' association with a member of Equal?"
                ],
                "type": "Type1"
            },
            "discrete base type": {
                "axiom": {
                    "subClassOf": [
                        "base type"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[role_of some discrete datatype]"
                    ]
                },
                "description": "discrete base type is defined as a subclass of base type, and is disjoint with real base type, ensuring that no individual can belong to both classes simultaneously. Members of this class participate in the role_of relationship with at least one discrete datatype, meaning that every discrete base type must be associated with some discrete datatype. This formalization distinguishes discrete base types from real base types and characterizes them by their association with discrete datatypes.",
                "CQ": [
                    {
                        "axiom": "discrete base type subClassOf base type",
                        "CQ": [
                            "Is discrete base type classified under the broader category of base type?",
                            "Which types are more specific instances of base type, such as discrete base type?",
                            "What broader type categories does discrete base type fall within?"
                        ]
                    },
                    {
                        "axiom": "discrete base type disjointWith real base type",
                        "CQ": [
                            "What is the logical separation between discrete base type and real base type in the ontology?",
                            "Can a data type be defined as both discrete and real simultaneously?",
                            "Which base types are explicitly declared as disjoint with real base type?"
                        ]
                    },
                    {
                        "axiom": "discrete base type propertyRestrictions [role_of some discrete datatype]",
                        "CQ": [
                            "Is every instance of discrete base type required to fulfill the role_of property with at least one discrete datatype?",
                            "Does discrete base type necessarily participate in the role_of relationship with some member of the discrete datatype class?",
                            "Are there any instances of discrete base type that do not have a role_of relation to any discrete datatype?"
                        ]
                    }
                ],
                "removed axiom": "discrete base type disjointWith real base type",
                "Target CQ": [
                    "What is the logical separation between discrete base type and real base type in the ontology?",
                    "Can a data type be defined as both discrete and real simultaneously?",
                    "Which base types are explicitly declared as disjoint with real base type?"
                ],
                "Valid CQ": [
                    "Is discrete base type classified under the broader category of base type?",
                    "Which types are more specific instances of base type, such as discrete base type?",
                    "What broader type categories does discrete base type fall within?",
                    "Is every instance of discrete base type required to fulfill the role_of property with at least one discrete datatype?",
                    "Does discrete base type necessarily participate in the role_of relationship with some member of the discrete datatype class?",
                    "Are there any instances of discrete base type that do not have a role_of relation to any discrete datatype?"
                ],
                "type": "Type1"
            },
            "record of boolean datatype": {
                "axiom": {
                    "subClassOf": [
                        "record (tuple) datatype"
                    ],
                    "disjointWith": [
                        "record of real datatype"
                    ],
                    "propertyRestrictions": [
                        "[has_member some boolean field-list]"
                    ]
                },
                "description": "record of boolean datatype is a subclass of record (tuple) datatype, disjoint from both record of real datatype and record of discrete datatype, ensuring that no individual can belong to any two of these classes simultaneously. Members of this class are characterized by having at least one member that is a boolean field-list, meaning each record must include at least one field of boolean type. This enforces that the records grouped under this class are distinguished by containing boolean data fields.",
                "CQ": [
                    {
                        "axiom": "record of boolean datatype subClassOf record (tuple) datatype",
                        "CQ": [
                            "Is record of boolean datatype recognized as a specific kind of record (tuple) datatype?",
                            "Which data types fall under the category of record (tuple) datatype, including those that handle booleans?",
                            "What broader data type hierarchies encompass the record of boolean datatype?"
                        ]
                    },
                    {
                        "axiom": "record of boolean datatype disjointWith record of real datatype",
                        "CQ": [
                            "What logical separation is established between records of boolean datatype and records of real datatype within the ontology?",
                            "Is it possible for a record to simultaneously belong to both boolean and real datatypes?",
                            "Which record types are declared as disjoint with those of real datatype?"
                        ]
                    },
                    {
                        "axiom": "record of boolean datatype disjointWith record of discrete datatype",
                        "CQ": [
                            "What ontological separation exists between records of boolean datatype and records of discrete datatype?",
                            "Is it allowable for a single record to possess both boolean and discrete datatypes?",
                            "Which other record types are formally incompatible with records of discrete datatype?"
                        ]
                    },
                    {
                        "axiom": "record of boolean datatype propertyRestrictions [has_member some boolean field-list]",
                        "CQ": [
                            "Is it required that a record includes at least one value for the field 'has_member' and that this value is of boolean type?",
                            "Must every record assign the 'has_member' property exclusively to fields of type boolean?",
                            "Can a record instance exist without providing a boolean value for the 'has_member' property?"
                        ]
                    }
                ],
                "removed axiom": "record of boolean datatype disjointWith record of discrete datatype",
                "Target CQ": [
                    "What ontological separation exists between records of boolean datatype and records of discrete datatype?",
                    "Is it allowable for a single record to possess both boolean and discrete datatypes?",
                    "Which other record types are formally incompatible with records of discrete datatype?"
                ],
                "Valid CQ": [
                    "Is record of boolean datatype recognized as a specific kind of record (tuple) datatype?",
                    "Which data types fall under the category of record (tuple) datatype, including those that handle booleans?",
                    "What broader data type hierarchies encompass the record of boolean datatype?",
                    "What logical separation is established between records of boolean datatype and records of real datatype within the ontology?",
                    "Is it possible for a record to simultaneously belong to both boolean and real datatypes?",
                    "Which record types are declared as disjoint with those of real datatype?",
                    "Is it required that a record includes at least one value for the field 'has_member' and that this value is of boolean type?",
                    "Must every record assign the 'has_member' property exclusively to fields of type boolean?",
                    "Can a record instance exist without providing a boolean value for the 'has_member' property?"
                ],
                "type": "Type1"
            },
            "record of discrete datatype": {
                "axiom": {
                    "subClassOf": [
                        "record (tuple) datatype"
                    ],
                    "propertyRestrictions": []
                },
                "description": "record of discrete datatype is a subclass of record (tuple) datatype, characterized by the requirement that it must have at least one member drawn from a discrete field-list. This ensures that instances of this class represent tuple datatypes whose components include one or more fields with discrete (distinct, countable) values.",
                "CQ": [
                    {
                        "axiom": "record of discrete datatype subClassOf record (tuple) datatype",
                        "CQ": [
                            "Is record of discrete datatype a member of the broader class of record (tuple) datatype?",
                            "What are the more specialized datatypes found within the category record (tuple) datatype, including record of discrete datatype?",
                            "Which higher-level datatype groups does record of discrete datatype fall under?"
                        ]
                    },
                    {
                        "axiom": "record of discrete datatype propertyRestrictions [has_member some discrete field-list]",
                        "CQ": [
                            "Must every record of discrete datatype necessarily have at least one has_member relationship to an entity within discrete field-list?",
                            "Is it obligatory for a record of discrete datatype to include a member from the discrete field-list through the has_member property?",
                            "Can a record of discrete datatype exist without the has_member property linking it to some element of the discrete field-list?"
                        ]
                    }
                ],
                "removed axiom": "record of discrete datatype propertyRestrictions [has_member some discrete field-list]",
                "Target CQ": [
                    "Must every record of discrete datatype necessarily have at least one has_member relationship to an entity within discrete field-list?",
                    "Is it obligatory for a record of discrete datatype to include a member from the discrete field-list through the has_member property?",
                    "Can a record of discrete datatype exist without the has_member property linking it to some element of the discrete field-list?"
                ],
                "Valid CQ": [
                    "Is record of discrete datatype a member of the broader class of record (tuple) datatype?",
                    "What are the more specialized datatypes found within the category record (tuple) datatype, including record of discrete datatype?",
                    "Which higher-level datatype groups does record of discrete datatype fall under?"
                ],
                "type": "Type1"
            },
            "set of discrete datatype": {
                "axiom": {
                    "subClassOf": [
                        "set datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_member some discrete base type]"
                    ]
                },
                "description": "set of discrete datatype is defined as a subclass of set datatype, representing collections where each member belongs to a discrete base type (such as integers or other countable values). This class is explicitly disjoint from set of real datatype, ensuring that no instance can simultaneously be a set of both discrete and real datatypes. The axiom requires that every member of a set of discrete datatype must be of a discrete base type, emphasizing its use for finite or countably infinite elements.",
                "CQ": [
                    {
                        "axiom": "set of discrete datatype subClassOf set datatype",
                        "CQ": [
                            "Is every set of discrete datatype also categorized as a set datatype?",
                            "Which types are direct specializations under set datatype, such as set of discrete datatype?",
                            "To which general datatype categories does set of discrete datatype belong?"
                        ]
                    },
                    {
                        "axiom": "set of discrete datatype disjointWith set of real datatype",
                        "CQ": [
                            "What logical separation does the ontology specify between sets of discrete and sets of real datatypes?",
                            "Is any datatype set classified simultaneously as both discrete and real within the ontology?",
                            "Which other sets of datatypes are explicitly defined as disjoint with sets of real datatypes?"
                        ]
                    },
                    {
                        "axiom": "set of discrete datatype propertyRestrictions [has_member some discrete base type]",
                        "CQ": [
                            "Must every instance in the set have at least one member of the specified discrete base type through the property 'has_member'?",
                            "Is it required that all elements related by 'has_member' belong to the discrete base type defined for the set?",
                            "Can any element in the set have a 'has_member' relationship to a value outside the defined discrete base type?"
                        ]
                    }
                ],
                "removed axiom": "set of discrete datatype disjointWith set of real datatype",
                "Target CQ": [
                    "What logical separation does the ontology specify between sets of discrete and sets of real datatypes?",
                    "Is any datatype set classified simultaneously as both discrete and real within the ontology?",
                    "Which other sets of datatypes are explicitly defined as disjoint with sets of real datatypes?"
                ],
                "Valid CQ": [
                    "Is every set of discrete datatype also categorized as a set datatype?",
                    "Which types are direct specializations under set datatype, such as set of discrete datatype?",
                    "To which general datatype categories does set of discrete datatype belong?",
                    "Must every instance in the set have at least one member of the specified discrete base type through the property 'has_member'?",
                    "Is it required that all elements related by 'has_member' belong to the discrete base type defined for the set?",
                    "Can any element in the set have a 'has_member' relationship to a value outside the defined discrete base type?"
                ],
                "type": "Type1"
            },
            "aggregate datatype": {
                "axiom": {
                    "subClassOf": [
                        "generated datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_member some aggregate generator]"
                    ]
                },
                "description": "aggregate datatype is defined as a subclass of generated datatype and is explicitly disjoint with non-aggregate datatype, ensuring that no individual can be both an aggregate and a non-aggregate datatype. It is characterized by having at least one member that is an aggregate generator (has_member some aggregate generator). Commonly referred to as a \"structured datatype,\" this class captures datatypes that are composed of multiple components or members rather than being atomic.",
                "CQ": [
                    {
                        "axiom": "aggregate datatype subClassOf generated datatype",
                        "CQ": [
                            "Is aggregate datatype classified as a more specific type under generated datatype?",
                            "Which datatypes are narrower than generated datatype, such as aggregate datatype?",
                            "To what broader datatype category does aggregate datatype belong?"
                        ]
                    },
                    {
                        "axiom": "aggregate datatype disjointWith non-aggregate datatype",
                        "CQ": [
                            "How does the ontology differentiate between aggregate datatypes and non-aggregate datatypes?",
                            "Is there any datatype that belongs to both aggregate and non-aggregate categories?",
                            "Which datatype categories are formally recognized as distinct from aggregate datatypes?"
                        ]
                    },
                    {
                        "axiom": "aggregate datatype propertyRestrictions [has_member some aggregate generator]",
                        "CQ": [
                            "Is it required for an aggregate to have at least one member that is an aggregate generator?",
                            "Does every aggregate necessarily include some entity related by 'has_member' to the class aggregate generator?",
                            "Can an aggregate exist without having a 'has_member' relationship to any aggregate generator?"
                        ]
                    }
                ],
                "removed axiom": "aggregate datatype disjointWith non-aggregate datatype",
                "Target CQ": [
                    "How does the ontology differentiate between aggregate datatypes and non-aggregate datatypes?",
                    "Is there any datatype that belongs to both aggregate and non-aggregate categories?",
                    "Which datatype categories are formally recognized as distinct from aggregate datatypes?"
                ],
                "Valid CQ": [
                    "Is aggregate datatype classified as a more specific type under generated datatype?",
                    "Which datatypes are narrower than generated datatype, such as aggregate datatype?",
                    "To what broader datatype category does aggregate datatype belong?",
                    "Is it required for an aggregate to have at least one member that is an aggregate generator?",
                    "Does every aggregate necessarily include some entity related by 'has_member' to the class aggregate generator?",
                    "Can an aggregate exist without having a 'has_member' relationship to any aggregate generator?"
                ],
                "type": "Type1"
            },
            "date and time datatype": {
                "axiom": {
                    "subClassOf": [
                        "non-numeric ordered primitive datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_operation some Extend:time&date]",
                        "[has_operation some Equal:time&date]",
                        "[has_operation some InOrder:time&date]",
                        "[has_member some date-time unit]",
                        "[has_operation some Difference:time&date]",
                        "[has_quality some unbounded]",
                        "[has_member some date-time radix]",
                        "[has_quality some exact]",
                        "[has_operation some Round:time&date]",
                        "[has_member some date-time factor]"
                    ]
                },
                "description": "date and time datatype is a subclass of non-numeric ordered primitive datatype, and is explicitly disjoint with ordinal datatype—meaning no instance can simultaneously belong to both classes. Members of this class possess qualities of being exact and potentially unbounded, and they necessarily have members such as date-time units, date-time radices, and date-time factors. The class supports specific operations, including extension, equality checking, ordering, difference calculation, and rounding of date and time values. This formalization ensures a precise and operation-rich definition of datatypes used for representing and manipulating combined date and time information, distinct from ordinal forms of data.",
                "CQ": [
                    {
                        "axiom": "date and time datatype subClassOf non-numeric ordered primitive datatype",
                        "CQ": [
                            "Is date and time datatype classified under non-numeric ordered primitive datatypes?",
                            "What primitive datatypes are more specific subclasses of non-numeric ordered ordered primitive datatype, such as date and time datatype?",
                            "Which broader non-numeric datatype categories include date and time datatype as a subclass?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype disjointWith ordinal datatype",
                        "CQ": [
                            "How does the ontology differentiate between date and time datatypes and ordinal datatypes?",
                            "Is any datatype instance allowed to be classified as both date and time and ordinal at once?",
                            "Which datatypes are specified as mutually exclusive with ordinal datatype?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_operation some Extend:time&date]",
                        "CQ": [
                            "Is it required that a date and time entity must have an operation associated with some instances of Extend:time&date?",
                            "Can every date and time entity possess at least one 'has_operation' relationship linked to Extend:time&date?",
                            "Are there any restrictions on a date and time entity having the 'has_operation' property only with values from Extend:time&date?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_operation some Equal:time&date]",
                        "CQ": [
                            "Must every instance with a date and time property have at least one operation equal to a time and date?",
                            "Does an individual with a date and time attribute always require the presence of an operation defined as Equal:time&date?",
                            "Is it necessary for any entity possessing the date and time datatype property to engage in some operation characterized by equality with time and date?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_operation some InOrder:time&date]",
                        "CQ": [
                            "Is it mandatory for any instance with a date and time to participate in at least one 'has_operation' relationship with an individual of type InOrder:time&date?",
                            "Can an entity described by date and time exist without having a 'has_operation' link to InOrder:time&date?",
                            "Does the ontology require that every instance with a 'date and time' attribute be related through 'has_operation' to at least one instance of InOrder:time&date?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_member some date-time unit]",
                        "CQ": [
                            "Is it required that every instance with the date and time datatype property includes at least one member representing a date-time unit?",
                            "Does the presence of the 'has_member' relationship with a date-time unit establish the existence of the date and time datatype property in an entity?",
                            "Must any entity described by the date and time datatype property have at least one associated date-time unit as a member?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_operation some Difference:time&date]",
                        "CQ": [
                            "Is it required that an entity with a date and time has at least one 'has_operation' relationship with an instance of Difference:time&date?",
                            "Can a date and time entity exist without any 'has_operation' linking it to the concept of Difference:time&date?",
                            "Must every date and time entity perform at least one operation classified under Difference:time&date?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_quality some unbounded]",
                        "CQ": [
                            "Is it required that every instance with a date and time datatype property has at least one 'has_quality' relationship to something unbounded?",
                            "Are all values of the 'has_quality' property for date and time datatype objects necessarily unbounded?",
                            "Does the existence of a 'has_quality' relation to an unbounded entity define or constrain the usage of date and time datatype properties?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_member some date-time radix]",
                        "CQ": [
                            "Is it required that has_member property of a date and time datatype always relates to at least one date-time radix?",
                            "Does every date and time datatype necessarily include a member that is a date-time radix?",
                            "Can a date and time datatype exist without being linked via has_member to any date-time radix?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_quality some exact]",
                        "CQ": [
                            "Is every instance of the date and time datatype required to have the 'has_quality' property with at least one value of type 'exact'?",
                            "Does the model allow a date and time value to exist without associating any 'exact' quality via the 'has_quality' property?",
                            "Are there instances where the 'has_quality' property for date and time datatype can refer to a quality other than 'exact'?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_operation some Round:time&date]",
                        "CQ": [
                            "Is it required that an entity with a time and date restriction has at least one 'has_operation' property related to a Round instance with specified time and date?",
                            "Can an entity with this property restriction have an operation that is not associated with a Round instance defined by time and date?",
                            "Does the presence of the 'has_operation' property for an entity imply the existence of a Round event with corresponding time and date values?"
                        ]
                    },
                    {
                        "axiom": "date and time datatype propertyRestrictions [has_member some date-time factor]",
                        "CQ": [
                            "Must every instance related via 'has_member' possess a date-time factor?",
                            "Does the presence of a date-time factor suffice for membership via 'has_member'?",
                            "Is it necessary for members linked by 'has_member' to have at least one date-time factor associated with them?"
                        ]
                    }
                ],
                "removed axiom": "date and time datatype disjointWith ordinal datatype",
                "Target CQ": [
                    "How does the ontology differentiate between date and time datatypes and ordinal datatypes?",
                    "Is any datatype instance allowed to be classified as both date and time and ordinal at once?",
                    "Which datatypes are specified as mutually exclusive with ordinal datatype?"
                ],
                "Valid CQ": [
                    "Is date and time datatype classified under non-numeric ordered primitive datatypes?",
                    "What primitive datatypes are more specific subclasses of non-numeric ordered ordered primitive datatype, such as date and time datatype?",
                    "Which broader non-numeric datatype categories include date and time datatype as a subclass?",
                    "Is it required that a date and time entity must have an operation associated with some instances of Extend:time&date?",
                    "Can every date and time entity possess at least one 'has_operation' relationship linked to Extend:time&date?",
                    "Are there any restrictions on a date and time entity having the 'has_operation' property only with values from Extend:time&date?",
                    "Must every instance with a date and time property have at least one operation equal to a time and date?",
                    "Does an individual with a date and time attribute always require the presence of an operation defined as Equal:time&date?",
                    "Is it necessary for any entity possessing the date and time datatype property to engage in some operation characterized by equality with time and date?",
                    "Is it mandatory for any instance with a date and time to participate in at least one 'has_operation' relationship with an individual of type InOrder:time&date?",
                    "Can an entity described by date and time exist without having a 'has_operation' link to InOrder:time&date?",
                    "Does the ontology require that every instance with a 'date and time' attribute be related through 'has_operation' to at least one instance of InOrder:time&date?",
                    "Is it required that every instance with the date and time datatype property includes at least one member representing a date-time unit?",
                    "Does the presence of the 'has_member' relationship with a date-time unit establish the existence of the date and time datatype property in an entity?",
                    "Must any entity described by the date and time datatype property have at least one associated date-time unit as a member?",
                    "Is it required that an entity with a date and time has at least one 'has_operation' relationship with an instance of Difference:time&date?",
                    "Can a date and time entity exist without any 'has_operation' linking it to the concept of Difference:time&date?",
                    "Must every date and time entity perform at least one operation classified under Difference:time&date?",
                    "Is it required that every instance with a date and time datatype property has at least one 'has_quality' relationship to something unbounded?",
                    "Are all values of the 'has_quality' property for date and time datatype objects necessarily unbounded?",
                    "Does the existence of a 'has_quality' relation to an unbounded entity define or constrain the usage of date and time datatype properties?",
                    "Is it required that has_member property of a date and time datatype always relates to at least one date-time radix?",
                    "Does every date and time datatype necessarily include a member that is a date-time radix?",
                    "Can a date and time datatype exist without being linked via has_member to any date-time radix?",
                    "Is every instance of the date and time datatype required to have the 'has_quality' property with at least one value of type 'exact'?",
                    "Does the model allow a date and time value to exist without associating any 'exact' quality via the 'has_quality' property?",
                    "Are there instances where the 'has_quality' property for date and time datatype can refer to a quality other than 'exact'?",
                    "Is it required that an entity with a time and date restriction has at least one 'has_operation' property related to a Round instance with specified time and date?",
                    "Can an entity with this property restriction have an operation that is not associated with a Round instance defined by time and date?",
                    "Does the presence of the 'has_operation' property for an entity imply the existence of a Round event with corresponding time and date values?",
                    "Must every instance related via 'has_member' possess a date-time factor?",
                    "Does the presence of a date-time factor suffice for membership via 'has_member'?",
                    "Is it necessary for members linked by 'has_member' to have at least one date-time factor associated with them?"
                ],
                "type": "Type1"
            },
            "size": {
                "axiom": {
                    "subClassOf": [
                        "value expression"
                    ],
                    "propertyRestrictions": []
                },
                "description": "size is defined as a subclass of value expression, representing a value-based concept within the ontology. Members of the size class are characterized by having exactly one associated value of type xsd:integer through the has-value property. This means each individual of size must specify a single integer value, reflecting the quantitative measurement that the class is intended to capture.",
                "CQ": [
                    {
                        "axiom": "size subClassOf value expression",
                        "CQ": [
                            "Is size categorized under value expression?",
                            "What broader category encompasses size in this ontology?",
                            "Which more specific concepts are grouped as subtypes of value expression, such as size?"
                        ]
                    },
                    {
                        "axiom": "size propertyRestrictions [has-value exactly 1 xsd:integer]",
                        "CQ": [
                            "Does an entity with the 'size' property have exactly one value of type integer?",
                            "Is it required that the 'size' attribute for each instance contains only a single integer value?",
                            "Can an instance be described as having more than one integer value for the 'size' property?"
                        ]
                    }
                ],
                "removed axiom": "size propertyRestrictions [has-value exactly 1 xsd:integer]",
                "Target CQ": [
                    "Does an entity with the 'size' property have exactly one value of type integer?",
                    "Is it required that the 'size' attribute for each instance contains only a single integer value?",
                    "Can an instance be described as having more than one integer value for the 'size' property?"
                ],
                "Valid CQ": [
                    "Is size categorized under value expression?",
                    "What broader category encompasses size in this ontology?",
                    "Which more specific concepts are grouped as subtypes of value expression, such as size?"
                ],
                "type": "Type1"
            },
            "complex datatype": {
                "axiom": {
                    "subClassOf": [
                        "numeric primitive datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_operation some Reciprocal:complex]",
                        "[has_operation some Negate:complex]",
                        "[has_quality some non-ordered]",
                        "[has_member some complex radix]",
                        "[has_quality some numeric]",
                        "[has_operation some SquareRoot:complex]",
                        "[has_operation some Multiply:complex]",
                        "[has_operation some Add:complex]",
                        "[has_quality some approximate]",
                        "[has_operation some Promote:complex]",
                        "[has_member some complex factor]",
                        "[has_operation some Equal:complex]"
                    ]
                },
                "description": "complex datatype is defined as a subclass of numeric primitive datatype and is disjoint with numeric ordered primitive datatype—meaning no individual can simultaneously belong to both classes. Members of this class are characterized as numeric, non-ordered, and approximate in nature. They support operations specific to complex numbers, such as reciprocal, negation, square root, multiplication, addition, promotion, and equality (all in the complex domain). Instances of complex datatype must include members such as complex radix and complex factor. This formalization captures the essential characteristics and operations associated with complex numbers in data representation, distinguishing them from ordered numeric primitive datatypes.",
                "CQ": [
                    {
                        "axiom": "complex datatype subClassOf numeric primitive datatype",
                        "CQ": [
                            "Can a complex datatype be classified under numeric primitive datatypes?",
                            "Which datatypes fall under the broader class of numeric primitive datatypes, specifically including complex datatype?",
                            "What are the parent classes associated with complex datatype?"
                        ]
                    },
                    {
                        "axiom": "complex datatype disjointWith numeric ordered primitive datatype",
                        "CQ": [
                            "What entities are prevented from being both complex datatype and numeric ordered primitive datatype within the ontology?",
                            "Is there any overlap permitted between instances of complex datatype and numeric ordered primitive datatype?",
                            "Which datatype categories are expressly defined as disjoint with numeric ordered primitive datatype?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_operation some Reciprocal:complex]",
                        "CQ": [
                            "Does every instance of complex datatype propertyRestrictions require at least one 'has_operation' relationship to a Reciprocal instance?",
                            "Is it possible for complex datatype propertyRestrictions to have the 'has_operation' property only if the value is of type Reciprocal?",
                            "Must complex datatype propertyRestrictions always involve an operation that is classified as Reciprocal?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_operation some Negate:complex]",
                        "CQ": [
                            "Must every entity with the property 'has_operation' necessarily involve a Negate operation?",
                            "Can an entity exist without having the 'has_operation' property to a Negate operation?",
                            "Are all instances with the 'has_operation' property required to perform at least one Negate operation?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_quality some non-ordered]",
                        "CQ": [
                            "Is it required that every instance with a 'has_quality' relation possesses at least one 'non-ordered' quality?",
                            "Must all entities associated via 'has_quality' necessarily exhibit the characteristic of being non-ordered?",
                            "Can an entity without any 'non-ordered' quality be linked by the 'has_quality' property?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_member some complex radix]",
                        "CQ": [
                            "Is it required that an entity with the complex property restriction has at least one member that is a complex radix?",
                            "Can an instance with the property 'has_member' be associated with objects that are not of type complex radix?",
                            "Does the existence of a complex member with the radix property guarantee satisfaction of the complex datatype property restriction?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_quality some numeric]",
                        "CQ": [
                            "Is it required that entities with complex datatype propertyRestrictions have at least one 'has_quality' property with a numeric value?",
                            "Can an instance of complex datatype propertyRestrictions lack the 'has_quality' property with a numeric datatype?",
                            "Are all qualities associated through 'has_quality' for complex datatype propertyRestrictions necessarily numeric?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_operation some SquareRoot:complex]",
                        "CQ": [
                            "Is it required that complex entities possess at least one operation corresponding to the square root function?",
                            "Can a complex entity exist without having the has_operation property with a SquareRoot function?",
                            "Are all instances defined by the necessity that some operation must be a SquareRoot on complexes?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_operation some Multiply:complex]",
                        "CQ": [
                            "Is every instance of complex datatype propertyRestrictions required to have at least one has_operation relationship with Multiply:complex?",
                            "Does complex datatype propertyRestrictions necessitate the existence of a Multiply:complex operation among its operations?",
                            "Must an entity classified as complex datatype propertyRestrictions possess a has_operation link to a Multiply:complex instance?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_operation some Add:complex]",
                        "CQ": [
                            "Is it required that an entity with complex datatype propertyRestrictions must have at least one has_operation relation to an instance of Add:complex?",
                            "Can complex datatype propertyRestrictions exist without the presence of the has_operation property linking to Add:complex?",
                            "Does the presence of the has_operation property with Add:complex suffice to classify something under complex datatype propertyRestrictions?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_quality some approximate]",
                        "CQ": [
                            "Is every complex entity required to have at least one quality that is approximate?",
                            "Does the existence of a complex entity entail the presence of some approximate quality?",
                            "Can a complex entity exist without being associated with an approximate quality?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_operation some Promote:complex]",
                        "CQ": [
                            "Is it necessary for an entity to have at least one 'has_operation' relationship with a Promote:complex for it to satisfy the axiom?",
                            "Can an entity exist without participating in any 'has_operation' involving a Promote:complex?",
                            "Does the axiom require that every instance related via 'has_operation' must be of type Promote:complex?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_member some complex factor]",
                        "CQ": [
                            "Is it necessary for complex to have at least one has_member relationship with an instance of complex factor?",
                            "Can a complex exist without being associated via has_member to a complex factor?",
                            "Does every instance of complex require the presence of a has_member link to some complex factor?"
                        ]
                    },
                    {
                        "axiom": "complex datatype propertyRestrictions [has_operation some Equal:complex]",
                        "CQ": [
                            "Does every instance satisfying the class necessarily have at least one 'has_operation' relation involving an operation of type Equal:complex?",
                            "Is it possible for any instance of the class to lack a 'has_operation' to an Equal:complex operation?",
                            "Are all members of this class required to participate in at least one 'has_operation' relation with an operand of Equal:complex type?"
                        ]
                    }
                ],
                "removed axiom": "complex datatype disjointWith numeric ordered primitive datatype",
                "Target CQ": [
                    "What entities are prevented from being both complex datatype and numeric ordered primitive datatype within the ontology?",
                    "Is there any overlap permitted between instances of complex datatype and numeric ordered primitive datatype?",
                    "Which datatype categories are expressly defined as disjoint with numeric ordered primitive datatype?"
                ],
                "Valid CQ": [
                    "Can a complex datatype be classified under numeric primitive datatypes?",
                    "Which datatypes fall under the broader class of numeric primitive datatypes, specifically including complex datatype?",
                    "What are the parent classes associated with complex datatype?",
                    "Does every instance of complex datatype propertyRestrictions require at least one 'has_operation' relationship to a Reciprocal instance?",
                    "Is it possible for complex datatype propertyRestrictions to have the 'has_operation' property only if the value is of type Reciprocal?",
                    "Must complex datatype propertyRestrictions always involve an operation that is classified as Reciprocal?",
                    "Must every entity with the property 'has_operation' necessarily involve a Negate operation?",
                    "Can an entity exist without having the 'has_operation' property to a Negate operation?",
                    "Are all instances with the 'has_operation' property required to perform at least one Negate operation?",
                    "Is it required that every instance with a 'has_quality' relation possesses at least one 'non-ordered' quality?",
                    "Must all entities associated via 'has_quality' necessarily exhibit the characteristic of being non-ordered?",
                    "Can an entity without any 'non-ordered' quality be linked by the 'has_quality' property?",
                    "Is it required that an entity with the complex property restriction has at least one member that is a complex radix?",
                    "Can an instance with the property 'has_member' be associated with objects that are not of type complex radix?",
                    "Does the existence of a complex member with the radix property guarantee satisfaction of the complex datatype property restriction?",
                    "Is it required that entities with complex datatype propertyRestrictions have at least one 'has_quality' property with a numeric value?",
                    "Can an instance of complex datatype propertyRestrictions lack the 'has_quality' property with a numeric datatype?",
                    "Are all qualities associated through 'has_quality' for complex datatype propertyRestrictions necessarily numeric?",
                    "Is it required that complex entities possess at least one operation corresponding to the square root function?",
                    "Can a complex entity exist without having the has_operation property with a SquareRoot function?",
                    "Are all instances defined by the necessity that some operation must be a SquareRoot on complexes?",
                    "Is every instance of complex datatype propertyRestrictions required to have at least one has_operation relationship with Multiply:complex?",
                    "Does complex datatype propertyRestrictions necessitate the existence of a Multiply:complex operation among its operations?",
                    "Must an entity classified as complex datatype propertyRestrictions possess a has_operation link to a Multiply:complex instance?",
                    "Is it required that an entity with complex datatype propertyRestrictions must have at least one has_operation relation to an instance of Add:complex?",
                    "Can complex datatype propertyRestrictions exist without the presence of the has_operation property linking to Add:complex?",
                    "Does the presence of the has_operation property with Add:complex suffice to classify something under complex datatype propertyRestrictions?",
                    "Is every complex entity required to have at least one quality that is approximate?",
                    "Does the existence of a complex entity entail the presence of some approximate quality?",
                    "Can a complex entity exist without being associated with an approximate quality?",
                    "Is it necessary for an entity to have at least one 'has_operation' relationship with a Promote:complex for it to satisfy the axiom?",
                    "Can an entity exist without participating in any 'has_operation' involving a Promote:complex?",
                    "Does the axiom require that every instance related via 'has_operation' must be of type Promote:complex?",
                    "Is it necessary for complex to have at least one has_member relationship with an instance of complex factor?",
                    "Can a complex exist without being associated via has_member to a complex factor?",
                    "Does every instance of complex require the presence of a has_member link to some complex factor?",
                    "Does every instance satisfying the class necessarily have at least one 'has_operation' relation involving an operation of type Equal:complex?",
                    "Is it possible for any instance of the class to lack a 'has_operation' to an Equal:complex operation?",
                    "Are all members of this class required to participate in at least one 'has_operation' relation with an operand of Equal:complex type?"
                ],
                "type": "Type1"
            },
            "sequence of real datatype": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has_member some real base type]"
                    ]
                },
                "description": "sequence of real datatype is a subclass of sequence datatype, characterized by the restriction that its members must be of the real base type. This means every element within a sequence of this type is a real number, ensuring that the sequence contains no members of other datatypes.",
                "CQ": [
                    {
                        "axiom": "sequence of real datatype subClassOf sequence datatype",
                        "CQ": [
                            "Is sequence of real datatype a specialization of sequence datatype?",
                            "Which datatypes fall under the general class of sequence datatype, including sequence of real datatype?",
                            "What broader datatype categories encompass sequence of real datatype?"
                        ]
                    },
                    {
                        "axiom": "sequence of real datatype propertyRestrictions [has_member some real base type]",
                        "CQ": [
                            "Is every instance of 'sequence of real' required to have at least one 'has_member' value of real base type?",
                            "Can a 'sequence of real' exist without being related through 'has_member' to any real base type element?",
                            "Does the property 'has_member' necessarily associate every 'sequence of real' with instances belonging to the real base type?"
                        ]
                    }
                ],
                "removed axiom": "sequence of real datatype subClassOf sequence datatype",
                "Target CQ": [
                    "Is sequence of real datatype a specialization of sequence datatype?",
                    "Which datatypes fall under the general class of sequence datatype, including sequence of real datatype?",
                    "What broader datatype categories encompass sequence of real datatype?"
                ],
                "Valid CQ": [
                    "Is every instance of 'sequence of real' required to have at least one 'has_member' value of real base type?",
                    "Can a 'sequence of real' exist without being related through 'has_member' to any real base type element?",
                    "Does the property 'has_member' necessarily associate every 'sequence of real' with instances belonging to the real base type?"
                ],
                "type": "Type1"
            },
            "bag datatype": {
                "axiom": {
                    "subClassOf": [
                        "homogenous  unordered aggregate datatype with variable size"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_quality some non-ordered]",
                        "[has_operation some Select:bag]",
                        "[has_operation some Insert:bag]",
                        "[has_member some base type]",
                        "[has_operation some Delete:bag]",
                        "[has_operation some IsEmpty:bag]",
                        "[has_operation some Equal:bag]",
                        "[has_member some bag generator]",
                        "[has_quality some non-numeric]",
                        "[has_operation some Serialize:bag]",
                        "[has_quality some exact]"
                    ]
                },
                "description": "bag datatype is defined as a subclass of homogenous unordered aggregate datatype with variable size, and is explicitly disjoint with set datatype, ensuring that no instance can be both a bag and a set. Members of this class are characterized by containing elements (members) from a specified base type as well as from possible bag generators. Bags possess qualities of being non-ordered (element sequence is not significant), non-numeric, and \"exact\" (potentially referring to preserving element multiplicities). Bags support the following operations: Select, Insert, Delete, IsEmpty, Equal, and Serialize. This formalization models bags as flexible, unordered collections that can contain duplicate elements, are distinguished from sets by their handling of element multiplicity, and provide standard collection manipulation operations.",
                "CQ": [
                    {
                        "axiom": "bag datatype subClassOf homogenous  unordered aggregate datatype with variable size",
                        "CQ": [
                            "Is bag datatype an example of homogenous unordered aggregate datatype with variable size?",
                            "What are the specific types classified under homogenous unordered aggregate datatype with variable size?",
                            "Which higher-level datatype categories include bag datatype?"
                        ]
                    },
                    {
                        "axiom": "bag datatype disjointWith set datatype",
                        "CQ": [
                            "How does the ontology formally distinguish between bag datatype and set datatype?",
                            "Is it allowed for a datatype to be classified as both a bag and a set within the ontology?",
                            "What other datatypes, besides set datatype, are declared as mutually exclusive with bag datatype?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_quality some non-ordered]",
                        "CQ": [
                            "Is every bag required to have the quality of being non-ordered?",
                            "Can a bag exist without possessing the non-ordered quality?",
                            "Does classification as a bag necessarily entail having at least one non-ordered quality?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_operation some Select:bag]",
                        "CQ": [
                            "Is it required that every bag instance must perform at least one 'Select:bag' operation?",
                            "Can any bag have an operation other than 'Select:bag', or is 'Select:bag' the only necessary operation for bags?",
                            "Does the existence of the 'has_operation' property for a bag necessarily imply the presence of a 'Select:bag' operation?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_operation some Insert:bag]",
                        "CQ": [
                            "Is it required for every bag to have at least one operation of type Insert?",
                            "Can a bag exist without being associated with an Insert operation via the has_operation property?",
                            "Are all instances of bag linked through has_operation to at least one Insert process?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_member some base type]",
                        "CQ": [
                            "Is it required that a bag contains at least one member of the base type?",
                            "Can a bag exist without having any members of the specified base type?",
                            "Does every instance of a bag have the has_member property linking to an individual of the base type?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_operation some Delete:bag]",
                        "CQ": [
                            "Is it required for a bag to support at least one 'has_operation' relation to Delete:bag?",
                            "Must every bag possess a 'has_operation' link with some instance of Delete:bag?",
                            "Does the existence of a bag imply involvement in a 'has_operation' connection to a Delete:bag instance?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_operation some IsEmpty:bag]",
                        "CQ": [
                            "Must every instance of 'bag' have at least one 'has_operation' relationship to 'IsEmpty:bag'?",
                            "Does the presence of 'has_operation' relating to 'IsEmpty:bag' define all bags?",
                            "Is it necessary for a 'bag' to perform the 'IsEmpty:bag' operation?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_operation some Equal:bag]",
                        "CQ": [
                            "Does every bag require at least one operation characterized as Equal?",
                            "Is it necessary for a bag to always have an operation involving Equal?",
                            "Can a bag exist without having any operation of the type Equal?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_member some bag generator]",
                        "CQ": [
                            "Does every bag necessarily have at least one member associated with a bag generator?",
                            "Is it required for a bag to possess a member that is related to a bag generator through the has_member property?",
                            "Can a bag exist without having any connection via has_member to a bag generator?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_quality some non-numeric]",
                        "CQ": [
                            "Is every bag required to have at least one value for the has_quality property that is non-numeric?",
                            "Must a bag possess a non-numeric quality according to its has_quality property?",
                            "Does the ontology assert that there exists a non-numeric instance for the has_quality property of a bag?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_operation some Serialize:bag]",
                        "CQ": [
                            "Is it required that a bag entity must support at least one operation of type Serialize specific to bag?",
                            "Does every bag possess an operational capability solely related to serialization as defined by Serialize:bag?",
                            "Can a bag exist within the ontology without having the has_operation property linked to Serialize:bag?"
                        ]
                    },
                    {
                        "axiom": "bag datatype propertyRestrictions [has_quality some exact]",
                        "CQ": [
                            "Is it required that every bag has at least one quality specified as exact?",
                            "Can a bag possess the quality 'exact' as defined by the property restriction?",
                            "Does the ontology constrain bags such that they must be associated with the quality 'exact' through the has_quality property?"
                        ]
                    }
                ],
                "removed axiom": "bag datatype disjointWith set datatype",
                "Target CQ": [
                    "How does the ontology formally distinguish between bag datatype and set datatype?",
                    "Is it allowed for a datatype to be classified as both a bag and a set within the ontology?",
                    "What other datatypes, besides set datatype, are declared as mutually exclusive with bag datatype?"
                ],
                "Valid CQ": [
                    "Is bag datatype an example of homogenous unordered aggregate datatype with variable size?",
                    "What are the specific types classified under homogenous unordered aggregate datatype with variable size?",
                    "Which higher-level datatype categories include bag datatype?",
                    "Is every bag required to have the quality of being non-ordered?",
                    "Can a bag exist without possessing the non-ordered quality?",
                    "Does classification as a bag necessarily entail having at least one non-ordered quality?",
                    "Is it required that every bag instance must perform at least one 'Select:bag' operation?",
                    "Can any bag have an operation other than 'Select:bag', or is 'Select:bag' the only necessary operation for bags?",
                    "Does the existence of the 'has_operation' property for a bag necessarily imply the presence of a 'Select:bag' operation?",
                    "Is it required for every bag to have at least one operation of type Insert?",
                    "Can a bag exist without being associated with an Insert operation via the has_operation property?",
                    "Are all instances of bag linked through has_operation to at least one Insert process?",
                    "Is it required that a bag contains at least one member of the base type?",
                    "Can a bag exist without having any members of the specified base type?",
                    "Does every instance of a bag have the has_member property linking to an individual of the base type?",
                    "Is it required for a bag to support at least one 'has_operation' relation to Delete:bag?",
                    "Must every bag possess a 'has_operation' link with some instance of Delete:bag?",
                    "Does the existence of a bag imply involvement in a 'has_operation' connection to a Delete:bag instance?",
                    "Must every instance of 'bag' have at least one 'has_operation' relationship to 'IsEmpty:bag'?",
                    "Does the presence of 'has_operation' relating to 'IsEmpty:bag' define all bags?",
                    "Is it necessary for a 'bag' to perform the 'IsEmpty:bag' operation?",
                    "Does every bag require at least one operation characterized as Equal?",
                    "Is it necessary for a bag to always have an operation involving Equal?",
                    "Can a bag exist without having any operation of the type Equal?",
                    "Does every bag necessarily have at least one member associated with a bag generator?",
                    "Is it required for a bag to possess a member that is related to a bag generator through the has_member property?",
                    "Can a bag exist without having any connection via has_member to a bag generator?",
                    "Is every bag required to have at least one value for the has_quality property that is non-numeric?",
                    "Must a bag possess a non-numeric quality according to its has_quality property?",
                    "Does the ontology assert that there exists a non-numeric instance for the has_quality property of a bag?",
                    "Is it required that a bag entity must support at least one operation of type Serialize specific to bag?",
                    "Does every bag possess an operational capability solely related to serialization as defined by Serialize:bag?",
                    "Can a bag exist within the ontology without having the has_operation property linked to Serialize:bag?",
                    "Is it required that every bag has at least one quality specified as exact?",
                    "Can a bag possess the quality 'exact' as defined by the property restriction?",
                    "Does the ontology constrain bags such that they must be associated with the quality 'exact' through the has_quality property?"
                ],
                "type": "Type1"
            },
            "node component": {
                "axiom": {
                    "subClassOf": [
                        "graph aggregate component"
                    ],
                    "disjointWith": []
                },
                "description": "node component is defined as a subclass of graph aggregate component and is explicitly disjoint with edge component, meaning an individual cannot simultaneously be a node component and an edge component. This class represents components within a graph structure that function as nodes, distinct from components serving as edges.",
                "CQ": [
                    {
                        "axiom": "node component subClassOf graph aggregate component",
                        "CQ": [
                            "Is node component an instance of the broader class of graph aggregate component?",
                            "Which components are classified as specializations of graph aggregate component, including node component?",
                            "What higher-level categories encompass node component in the ontology?"
                        ]
                    },
                    {
                        "axiom": "node component disjointWith edge component",
                        "CQ": [
                            "What is the formal distinction between node component and edge component within the ontology?",
                            "Is there any entity that can simultaneously be classified as both node component and edge component?",
                            "Which other classes are specified as disjoint with edge component?"
                        ]
                    }
                ],
                "removed axiom": "node component disjointWith edge component",
                "Target CQ": [
                    "What is the formal distinction between node component and edge component within the ontology?",
                    "Is there any entity that can simultaneously be classified as both node component and edge component?",
                    "Which other classes are specified as disjoint with edge component?"
                ],
                "Valid CQ": [
                    "Is node component an instance of the broader class of graph aggregate component?",
                    "Which components are classified as specializations of graph aggregate component, including node component?",
                    "What higher-level categories encompass node component in the ontology?"
                ],
                "type": "Type1"
            },
            "non-numeric primitive datatype": {
                "axiom": {
                    "subClassOf": [
                        "primitive datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_quality some non-numeric]"
                    ]
                },
                "description": "non-numeric primitive datatype is a subclass of primitive datatype and is explicitly disjoint with numeric primitive datatype, ensuring no individual can belong to both classes simultaneously. Members of this class must possess at least one quality that is non-numeric, as specified by the existential property restriction [has_quality some non-numeric]. This formalization captures primitive datatypes whose essential characteristics are not quantifiable numerically.",
                "CQ": [
                    {
                        "axiom": "non-numeric primitive datatype subClassOf primitive datatype",
                        "CQ": [
                            "Is non-numeric primitive datatype categorized under primitive datatype?",
                            "Which types are included as subclasses of primitive datatype, such as non-numeric primitive datatype?",
                            "What are the broader categories that encompass non-numeric primitive datatype?"
                        ]
                    },
                    {
                        "axiom": "non-numeric primitive datatype disjointWith numeric primitive datatype",
                        "CQ": [
                            "How are non-numeric primitive datatypes and numeric primitive datatypes differentiated within the ontology?",
                            "Is there any datatype in the ontology that qualifies as both numeric and non-numeric primitive datatype?",
                            "Which datatypes are asserted as disjoint with numeric primitive datatypes?"
                        ]
                    },
                    {
                        "axiom": "non-numeric primitive datatype propertyRestrictions [has_quality some non-numeric]",
                        "CQ": [
                            "Is it necessary for a resource to have at least one 'has_quality' property value of non-numeric type?",
                            "Does the use of the 'has_quality' property guarantee assignment with only non-numeric values?",
                            "Can an entity exist without any non-numeric value for its 'has_quality' property?"
                        ]
                    }
                ],
                "removed axiom": "non-numeric primitive datatype disjointWith numeric primitive datatype",
                "Target CQ": [
                    "How are non-numeric primitive datatypes and numeric primitive datatypes differentiated within the ontology?",
                    "Is there any datatype in the ontology that qualifies as both numeric and non-numeric primitive datatype?",
                    "Which datatypes are asserted as disjoint with numeric primitive datatypes?"
                ],
                "Valid CQ": [
                    "Is non-numeric primitive datatype categorized under primitive datatype?",
                    "Which types are included as subclasses of primitive datatype, such as non-numeric primitive datatype?",
                    "What are the broader categories that encompass non-numeric primitive datatype?",
                    "Is it necessary for a resource to have at least one 'has_quality' property value of non-numeric type?",
                    "Does the use of the 'has_quality' property guarantee assignment with only non-numeric values?",
                    "Can an entity exist without any non-numeric value for its 'has_quality' property?"
                ],
                "type": "Type1"
            },
            "heterogenous aggregate generator": {
                "axiom": {
                    "subClassOf": [],
                    "equivalentClass": [
                        "(class generator or record generator or table datatype)"
                    ],
                    "propertyRestrictions": [
                        "[has_quality some heterogenous]"
                    ]
                },
                "description": "heterogenous aggregate generator is a subclass of aggregate generator and is equivalent to any class that is either a class generator, record generator, or table datatype. Members of this class possess the quality of being heterogenous, indicating that they generate or represent aggregates containing elements of diverse types or structures. This formalization ensures that any heterogenous aggregate generator is characterized by its structural diversity and can functionally align with multiple generator types.",
                "CQ": [
                    {
                        "axiom": "heterogenous aggregate generator subClassOf aggregate generator",
                        "CQ": [
                            "Is a heterogenous aggregate generator classified as a kind of aggregate generator?",
                            "Which aggregate generator types encompass heterogenous aggregate generators as subclasses?",
                            "What broader generator categories include heterogenous aggregate generator within their hierarchy?"
                        ]
                    },
                    {
                        "axiom": "heterogenous aggregate generator equivalentClass (class generator or record generator or table datatype)",
                        "CQ": [
                            "Is every heterogenous aggregate generator necessarily classified as either a class generator, a record generator, or a table datatype?",
                            "Is the class heterogenous aggregate generator logically equivalent to the union of class generator, record generator, and table datatype?",
                            "Does heterogenous aggregate generator include any entities besides those identified as class generator, record generator, or table datatype?"
                        ]
                    },
                    {
                        "axiom": "heterogenous aggregate generator propertyRestrictions [has_quality some heterogenous]",
                        "CQ": [
                            "Must every heterogenous aggregate generator possess at least one quality classified as heterogenous?",
                            "Is it required that a heterogenous aggregate generator exhibits the 'has_quality' relationship with an entity identified as heterogenous?",
                            "Does a heterogenous aggregate generator necessarily have some quality falling within the heterogenous category?"
                        ]
                    }
                ],
                "removed axiom": "heterogenous aggregate generator subClassOf aggregate generator",
                "Target CQ": [
                    "Is a heterogenous aggregate generator classified as a kind of aggregate generator?",
                    "Which aggregate generator types encompass heterogenous aggregate generators as subclasses?",
                    "What broader generator categories include heterogenous aggregate generator within their hierarchy?"
                ],
                "Valid CQ": [
                    "Is every heterogenous aggregate generator necessarily classified as either a class generator, a record generator, or a table datatype?",
                    "Is the class heterogenous aggregate generator logically equivalent to the union of class generator, record generator, and table datatype?",
                    "Does heterogenous aggregate generator include any entities besides those identified as class generator, record generator, or table datatype?",
                    "Must every heterogenous aggregate generator possess at least one quality classified as heterogenous?",
                    "Is it required that a heterogenous aggregate generator exhibits the 'has_quality' relationship with an entity identified as heterogenous?",
                    "Does a heterogenous aggregate generator necessarily have some quality falling within the heterogenous category?"
                ],
                "type": "Type1"
            },
            "homogenous aggregate datatype": {
                "axiom": {
                    "subClassOf": [
                        "aggregate datatype"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[has_member some homogenous aggregate generator]"
                    ]
                },
                "description": "homogenous aggregate datatype is defined as a subclass of aggregate datatype, and is explicitly disjoint with heterogenous aggregate datatype, ensuring that no individual can belong to both classes simultaneously. Members of this class are characterized by the property that they must have at least one member that is a homogenous aggregate generator. This formalization captures collections whose elements are produced by uniform (homogeneous) mechanisms, distinguishing them from heterogeneous aggregates both in structure and membership requirements.",
                "CQ": [
                    {
                        "axiom": "homogenous aggregate datatype subClassOf aggregate datatype",
                        "CQ": [
                            "Is homogenous aggregate datatype categorized under aggregate datatype?",
                            "Which specific types are included as subclasses of aggregate datatype?",
                            "What broader categories encompass homogenous aggregate datatype?"
                        ]
                    },
                    {
                        "axiom": "homogenous aggregate datatype disjointWith heterogenous aggregate datatype",
                        "CQ": [
                            "How is the concept of homogenous aggregate datatype differentiated from heterogenous aggregate datatype within the ontology?",
                            "Could any datatype be classified simultaneously as both a homogenous aggregate and a heterogenous aggregate?",
                            "Which datatypes, in addition to heterogenous aggregate datatype, are specified as disjoint with homogenous aggregate datatype?"
                        ]
                    },
                    {
                        "axiom": "homogenous aggregate datatype propertyRestrictions [has_member some homogenous aggregate generator]",
                        "CQ": [
                            "Is every homogenous aggregate required to have at least one member that is a homogenous aggregate generator?",
                            "Does a homogenous aggregate necessarily possess the property 'has_member' with respect to a homogenous aggregate generator?",
                            "Can a homogenous aggregate exist without any association via 'has_member' to a homogenous aggregate generator?"
                        ]
                    }
                ],
                "removed axiom": "homogenous aggregate datatype disjointWith heterogenous aggregate datatype",
                "Target CQ": [
                    "How is the concept of homogenous aggregate datatype differentiated from heterogenous aggregate datatype within the ontology?",
                    "Could any datatype be classified simultaneously as both a homogenous aggregate and a heterogenous aggregate?",
                    "Which datatypes, in addition to heterogenous aggregate datatype, are specified as disjoint with homogenous aggregate datatype?"
                ],
                "Valid CQ": [
                    "Is homogenous aggregate datatype categorized under aggregate datatype?",
                    "Which specific types are included as subclasses of aggregate datatype?",
                    "What broader categories encompass homogenous aggregate datatype?",
                    "Is every homogenous aggregate required to have at least one member that is a homogenous aggregate generator?",
                    "Does a homogenous aggregate necessarily possess the property 'has_member' with respect to a homogenous aggregate generator?",
                    "Can a homogenous aggregate exist without any association via 'has_member' to a homogenous aggregate generator?"
                ],
                "type": "Type1"
            },
            "indirect acess property": {
                "axiom": {
                    "subClassOf": [
                        "access type"
                    ],
                    "equivalentClass": []
                },
                "description": "indirect access property is a subclass of access type, and is formally equivalent to any access performed either by value, in an implementation dependent manner, or by position. This means any instance of indirect access property is characterized by one or more of these access forms, distinguishing it from other access type subclasses.",
                "CQ": [
                    {
                        "axiom": "indirect acess property subClassOf access type",
                        "CQ": [
                            "Does indirect acess property fall under the broader classification of access type?",
                            "Which categories are more specific than access type, including indirect acess property?",
                            "What overarching types does indirect acess property belong to?"
                        ]
                    },
                    {
                        "axiom": "indirect acess property equivalentClass (access by value or implementation dependent access or position access)",
                        "CQ": [
                            "Is an indirect access property necessarily either an access by value, an implementation dependent access, or a position access?",
                            "Is the class of indirect access property equivalent to the union of access by value, implementation dependent access, and position access?",
                            "Are there any types of access that are not covered by access by value, implementation dependent access, or position access when defining indirect access property?"
                        ]
                    }
                ],
                "removed axiom": "indirect acess property equivalentClass (access by value or implementation dependent access or position access)",
                "Target CQ": [
                    "Is an indirect access property necessarily either an access by value, an implementation dependent access, or a position access?",
                    "Is the class of indirect access property equivalent to the union of access by value, implementation dependent access, and position access?",
                    "Are there any types of access that are not covered by access by value, implementation dependent access, or position access when defining indirect access property?"
                ],
                "Valid CQ": [
                    "Does indirect acess property fall under the broader classification of access type?",
                    "Which categories are more specific than access type, including indirect acess property?",
                    "What overarching types does indirect acess property belong to?"
                ],
                "type": "Type1"
            },
            "unbounded above": {
                "axiom": {
                    "subClassOf": [
                        "unbounded"
                    ],
                    "disjointWith": []
                },
                "description": "unbounded above is defined as a subclass of unbounded, representing entities that do not have an upper bound. It is explicitly disjoint with unbounded below, ensuring that no individual can simultaneously be both unbounded above and unbounded below. This class characterizes those entities that lack an upper limit but may or may not have a lower bound.",
                "CQ": [
                    {
                        "axiom": "unbounded above subClassOf unbounded",
                        "CQ": [
                            "Does unbounded above fall within the broader class of unbounded?",
                            "Which subclasses are encompassed by the category unbounded, including unbounded above?",
                            "What is the direct superclass of unbounded above?"
                        ]
                    },
                    {
                        "axiom": "unbounded above disjointWith unbounded below",
                        "CQ": [
                            "How does the ontology establish separation between unbounded above and unbounded below?",
                            "Is any entity classified as both unbounded above and unbounded below within the ontology?",
                            "Which classes are defined as mutually exclusive with unbounded above?"
                        ]
                    }
                ],
                "removed axiom": "unbounded above disjointWith unbounded below",
                "Target CQ": [
                    "How does the ontology establish separation between unbounded above and unbounded below?",
                    "Is any entity classified as both unbounded above and unbounded below within the ontology?",
                    "Which classes are defined as mutually exclusive with unbounded above?"
                ],
                "Valid CQ": [
                    "Does unbounded above fall within the broader class of unbounded?",
                    "Which subclasses are encompassed by the category unbounded, including unbounded above?",
                    "What is the direct superclass of unbounded above?"
                ],
                "type": "Type1"
            },
            "approximate": {
                "axiom": {
                    "subClassOf": [
                        "exactness"
                    ],
                    "disjointWith": []
                },
                "description": "approximate is defined as a subclass of exactness, meaning it represents a kind or degree of exactness. It is explicitly disjoint with exact, so no individual can simultaneously be both approximate and exact. This class formalizes the notion of approximation as distinct from strict exactness within the ontology.",
                "CQ": [
                    {
                        "axiom": "approximate subClassOf exactness",
                        "CQ": [
                            "How does approximate relate hierarchically to exactness?",
                            "Which categories are more specific than exactness, such as approximate?",
                            "In which broader classes is approximate included?"
                        ]
                    },
                    {
                        "axiom": "approximate disjointWith exact",
                        "CQ": [
                            "What logical separation is established between approximate and exact in the ontology?",
                            "Is it valid for an entity to be classified as both approximate and exact simultaneously?",
                            "Which classes are explicitly defined as incompatible with exact?"
                        ]
                    }
                ],
                "removed axiom": "approximate disjointWith exact",
                "Target CQ": [
                    "What logical separation is established between approximate and exact in the ontology?",
                    "Is it valid for an entity to be classified as both approximate and exact simultaneously?",
                    "Which classes are explicitly defined as incompatible with exact?"
                ],
                "Valid CQ": [
                    "How does approximate relate hierarchically to exactness?",
                    "Which categories are more specific than exactness, such as approximate?",
                    "In which broader classes is approximate included?"
                ],
                "type": "Type1"
            },
            "ordered": {
                "axiom": {
                    "subClassOf": [
                        "order"
                    ],
                    "disjointWith": []
                },
                "description": "ordered is defined as a subclass of order, indicating that all instances of ordered are also considered orders according to the ontology. It is explicitly disjoint with non-ordered, meaning that no individual can be simultaneously classified as both ordered and non-ordered. This formalization distinguishes entities that possess or exhibit ordering from those that do not.",
                "CQ": [
                    {
                        "axiom": "ordered subClassOf order",
                        "CQ": [
                            "Is ordered classified as a specific type of order?",
                            "Which subclasses are defined under the class order, including ordered?",
                            "What general classes does ordered inherit from?"
                        ]
                    },
                    {
                        "axiom": "ordered disjointWith non-ordered",
                        "CQ": [
                            "What formal separation exists between ordered and non-ordered entities within the ontology?",
                            "Is any instance permitted to belong simultaneously to both ordered and non-ordered types?",
                            "Which classes are declared as disjoint with ordered in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "ordered disjointWith non-ordered",
                "Target CQ": [
                    "What formal separation exists between ordered and non-ordered entities within the ontology?",
                    "Is any instance permitted to belong simultaneously to both ordered and non-ordered types?",
                    "Which classes are declared as disjoint with ordered in the ontology?"
                ],
                "Valid CQ": [
                    "Is ordered classified as a specific type of order?",
                    "Which subclasses are defined under the class order, including ordered?",
                    "What general classes does ordered inherit from?"
                ],
                "type": "Type1"
            },
            "Difference:set": {
                "axiom": {
                    "subClassOf": [
                        "difference operation"
                    ],
                    "disjointWith": []
                },
                "description": "Difference:set is defined as a subclass of the difference operation, representing the set-theoretic difference between collections or sets. It is explicitly disjoint with Difference:time&date, so no instance can be both a set difference and a time/date difference. This class captures operations or results concerning the removal of elements from one set that exist in another, and is restricted to set-based contexts.",
                "CQ": [
                    {
                        "axiom": "Difference:set subClassOf difference operation",
                        "CQ": [
                            "Does the Difference:set concept fall under the broader category of difference operation?",
                            "Which specific types are classified as subclasses of difference operation, and does Difference:set belong among them?",
                            "What general operations encompass Difference:set as a specialized form?"
                        ]
                    },
                    {
                        "axiom": "Difference:set disjointWith Difference:time&date",
                        "CQ": [
                            "What entities are considered mutually exclusive between Difference:set and Difference:time&date in the ontology?",
                            "Is there any instance that could simultaneously belong to both Difference:set and Difference:time&date?",
                            "Which classes does the ontology specify as being disjoint with Difference:set?"
                        ]
                    }
                ],
                "removed axiom": "Difference:set disjointWith Difference:time&date",
                "Target CQ": [
                    "What entities are considered mutually exclusive between Difference:set and Difference:time&date in the ontology?",
                    "Is there any instance that could simultaneously belong to both Difference:set and Difference:time&date?",
                    "Which classes does the ontology specify as being disjoint with Difference:set?"
                ],
                "Valid CQ": [
                    "Does the Difference:set concept fall under the broader category of difference operation?",
                    "Which specific types are classified as subclasses of difference operation, and does Difference:set belong among them?",
                    "What general operations encompass Difference:set as a specialized form?"
                ],
                "type": "Type1"
            },
            "Insert:bag": {
                "axiom": {
                    "subClassOf": [
                        "insert operation"
                    ],
                    "disjointWith": []
                },
                "description": "Insert:bag is defined as a subclass of insert operation, signifying that it represents a specific type of insertion action. It is declared disjoint with Insert:table, which means that an instance of Insert:bag cannot simultaneously belong to the Insert:table class. This distinction enforces mutual exclusivity between these two types of insertion operations.",
                "CQ": [
                    {
                        "axiom": "Insert:bag subClassOf insert operation",
                        "CQ": [
                            "Is Insert:bag classified as a subtype of insert operation?",
                            "Which operations are subsumed under insert operation, such as Insert:bag?",
                            "To what broader operational classes does Insert:bag belong?"
                        ]
                    },
                    {
                        "axiom": "Insert:bag disjointWith Insert:table",
                        "CQ": [
                            "What is the ontological distinction between Insert:bag and Insert:table?",
                            "Can an individual simultaneously be classified as both Insert:bag and Insert:table?",
                            "Which classes are explicitly declared as disjoint with Insert:bag?"
                        ]
                    }
                ],
                "removed axiom": "Insert:bag disjointWith Insert:table",
                "Target CQ": [
                    "What is the ontological distinction between Insert:bag and Insert:table?",
                    "Can an individual simultaneously be classified as both Insert:bag and Insert:table?",
                    "Which classes are explicitly declared as disjoint with Insert:bag?"
                ],
                "Valid CQ": [
                    "Is Insert:bag classified as a subtype of insert operation?",
                    "Which operations are subsumed under insert operation, such as Insert:bag?",
                    "To what broader operational classes does Insert:bag belong?"
                ],
                "type": "Type1"
            },
            "NonNegative:integer": {
                "axiom": {
                    "subClassOf": [
                        "nonNegative operation"
                    ],
                    "disjointWith": []
                },
                "description": "NonNegative:integer is defined as a subclass of nonNegative operation, representing integers that are greater than or equal to zero. It is formally disjoint with NonNegative:rational, ensuring that no individual can be both a NonNegative:integer and a NonNegative:rational. This class captures the concept of all non-negative integer values, distinguishing them from non-negative rational numbers.",
                "CQ": [
                    {
                        "axiom": "NonNegative:integer subClassOf nonNegative operation",
                        "CQ": [
                            "Is NonNegative:integer categorized under nonNegative operation?",
                            "Which subclasses are specified beneath nonNegative operation, such as NonNegative:integer?",
                            "To what higher-level groups does NonNegative:integer correspond within the ontology?"
                        ]
                    },
                    {
                        "axiom": "NonNegative:integer disjointWith NonNegative:rational",
                        "CQ": [
                            "What logical separation is asserted between NonNegative:integer and NonNegative:rational within the ontology?",
                            "Is there any instance that could simultaneously belong to both NonNegative:integer and NonNegative:rational classes?",
                            "Which classes are declared as disjoint with NonNegative:rational in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "NonNegative:integer disjointWith NonNegative:rational",
                "Target CQ": [
                    "What logical separation is asserted between NonNegative:integer and NonNegative:rational within the ontology?",
                    "Is there any instance that could simultaneously belong to both NonNegative:integer and NonNegative:rational classes?",
                    "Which classes are declared as disjoint with NonNegative:rational in the ontology?"
                ],
                "Valid CQ": [
                    "Is NonNegative:integer categorized under nonNegative operation?",
                    "Which subclasses are specified beneath nonNegative operation, such as NonNegative:integer?",
                    "To what higher-level groups does NonNegative:integer correspond within the ontology?"
                ],
                "type": "Type1"
            },
            "Serialize:bag": {
                "axiom": {
                    "subClassOf": [
                        "serialize operation"
                    ],
                    "disjointWith": []
                },
                "description": "Serialize:bag is defined as a subclass of serialize operation, representing a specific type of serialization process. It is explicitly disjoint with Serialize:table, ensuring that no instance can be classified as both Serialize:bag and Serialize:table. This distinction enforces separation between bag-based and table-based serialization methods.",
                "CQ": [
                    {
                        "axiom": "Serialize:bag subClassOf serialize operation",
                        "CQ": [
                            "Does Serialize:bag represent a specific type of serialize operation?",
                            "Which operations fall under the more general category of serialize operation, such as Serialize:bag?",
                            "What broader operational categories include Serialize:bag as a specialized form?"
                        ]
                    },
                    {
                        "axiom": "Serialize:bag disjointWith Serialize:table",
                        "CQ": [
                            "What distinguishes the classes Serialize:bag and Serialize:table within the ontology?",
                            "Is it allowed for an instance to be both a Serialize:bag and a Serialize:table?",
                            "Which classes are defined to be disjoint with Serialize:table?"
                        ]
                    }
                ],
                "removed axiom": "Serialize:bag disjointWith Serialize:table",
                "Target CQ": [
                    "What distinguishes the classes Serialize:bag and Serialize:table within the ontology?",
                    "Is it allowed for an instance to be both a Serialize:bag and a Serialize:table?",
                    "Which classes are defined to be disjoint with Serialize:table?"
                ],
                "Valid CQ": [
                    "Does Serialize:bag represent a specific type of serialize operation?",
                    "Which operations fall under the more general category of serialize operation, such as Serialize:bag?",
                    "What broader operational categories include Serialize:bag as a specialized form?"
                ],
                "type": "Type1"
            },
            "index access": {
                "axiom": {
                    "subClassOf": [
                        "direct access property"
                    ],
                    "disjointWith": []
                },
                "description": "index access is defined as a subclass of direct access property and is explicitly disjoint with key access, meaning an individual cannot be both an index access and a key access. This class represents mechanisms or operations that permit direct access to elements based on their positional index within a collection, distinctly separating it from access methods based on explicit keys.",
                "CQ": [
                    {
                        "axiom": "index access subClassOf direct access property",
                        "CQ": [
                            "Is direct access property a generalization of index access?",
                            "Which specific access properties are classified under direct access property, including index access?",
                            "To which parent property categories does index access belong?"
                        ]
                    },
                    {
                        "axiom": "index access disjointWith key access",
                        "CQ": [
                            "How does the ontology differentiate index access from key access?",
                            "Is there an entity that can be classified simultaneously as supporting both index access and key access?",
                            "Which access types are explicitly defined as incompatible with key access?"
                        ]
                    }
                ],
                "removed axiom": "index access disjointWith key access",
                "Target CQ": [
                    "How does the ontology differentiate index access from key access?",
                    "Is there an entity that can be classified simultaneously as supporting both index access and key access?",
                    "Which access types are explicitly defined as incompatible with key access?"
                ],
                "Valid CQ": [
                    "Is direct access property a generalization of index access?",
                    "Which specific access properties are classified under direct access property, including index access?",
                    "To which parent property categories does index access belong?"
                ],
                "type": "Type1"
            },
            "identifier not unique": {
                "axiom": {
                    "subClassOf": [
                        "aggregate-imposed identifier uniqueness"
                    ],
                    "disjointWith": []
                },
                "description": "identifier not unique is a subclass of aggregate-imposed identifier uniqueness and is disjoint with identifier unique, meaning no individual can simultaneously be both identifier not unique and identifier unique. This class represents identifiers within an aggregate context that are not required to be unique, distinguishing them from identifiers that have enforced uniqueness at the aggregate level.",
                "CQ": [
                    {
                        "axiom": "identifier not unique subClassOf aggregate-imposed identifier uniqueness",
                        "CQ": [
                            "Is aggregate-imposed identifier uniqueness a generalization of identifier not unique?",
                            "Which identifier uniqueness constraints include identifier not unique as a special case?",
                            "What broader identifier uniqueness categories encompass identifier not unique?"
                        ]
                    },
                    {
                        "axiom": "identifier not unique disjointWith identifier unique",
                        "CQ": [
                            "How does the ontology distinguish between 'identifier not unique' and 'identifier unique'?",
                            "Is any instance allowed to have both 'identifier not unique' and 'identifier unique' classifications?",
                            "Which classes are specified as mutually exclusive with 'identifier unique'?"
                        ]
                    }
                ],
                "removed axiom": "identifier not unique disjointWith identifier unique",
                "Target CQ": [
                    "How does the ontology distinguish between 'identifier not unique' and 'identifier unique'?",
                    "Is any instance allowed to have both 'identifier not unique' and 'identifier unique' classifications?",
                    "Which classes are specified as mutually exclusive with 'identifier unique'?"
                ],
                "Valid CQ": [
                    "Is aggregate-imposed identifier uniqueness a generalization of identifier not unique?",
                    "Which identifier uniqueness constraints include identifier not unique as a special case?",
                    "What broader identifier uniqueness categories encompass identifier not unique?"
                ],
                "type": "Type1"
            },
            "component mandatory": {
                "axiom": {
                    "subClassOf": [
                        "component mandatoriness"
                    ],
                    "disjointWith": []
                },
                "description": "component mandatory is defined as a subclass of component mandatoriness and is explicitly disjoint with component non-mandatory, ensuring that no individual can simultaneously be both a component mandatory and component non-mandatory. This class characterizes components that are required or obligatory within a given context, distinguishing them from non-mandatory components.",
                "CQ": [
                    {
                        "axiom": "component mandatory subClassOf component mandatoriness",
                        "CQ": [
                            "Is component mandatoriness a more general category than component mandatory?",
                            "Which concepts are classified as specializations of component mandatoriness, such as component mandatory?",
                            "What broader classes include component mandatory as a specific instance?"
                        ]
                    },
                    {
                        "axiom": "component mandatory disjointWith component non-mandatory",
                        "CQ": [
                            "What is the formal separation between component mandatory and component non-mandatory in the ontology?",
                            "Can an entity be classified as both a mandatory and a non-mandatory component simultaneously?",
                            "Which components are explicitly stated as disjoint with component non-mandatory?"
                        ]
                    }
                ],
                "removed axiom": "component mandatory disjointWith component non-mandatory",
                "Target CQ": [
                    "What is the formal separation between component mandatory and component non-mandatory in the ontology?",
                    "Can an entity be classified as both a mandatory and a non-mandatory component simultaneously?",
                    "Which components are explicitly stated as disjoint with component non-mandatory?"
                ],
                "Valid CQ": [
                    "Is component mandatoriness a more general category than component mandatory?",
                    "Which concepts are classified as specializations of component mandatoriness, such as component mandatory?",
                    "What broader classes include component mandatory as a specific instance?"
                ],
                "type": "Type1"
            },
            "recursive": {
                "axiom": {
                    "subClassOf": [
                        "recursiveness"
                    ],
                    "disjointWith": []
                },
                "description": "recursive is defined as a subclass of recursiveness, signifying that every instance of recursive inherits properties from recursiveness. It is explicitly disjoint with non-recursive, ensuring that no individual can simultaneously belong to both recursive and non-recursive classes. This formalization distinguishes all recursive instances from those that are non-recursive.",
                "CQ": [
                    {
                        "axiom": "recursive subClassOf recursiveness",
                        "CQ": [
                            "Does recursive belong to the broader category of recursiveness?",
                            "Which specific concepts are categorized under recursiveness, including recursive?",
                            "What are the more general categories that encompass the recursive concept?"
                        ]
                    },
                    {
                        "axiom": "recursive disjointWith non-recursive",
                        "CQ": [
                            "How does the ontology distinguish between recursive and non-recursive classes?",
                            "Is any entity classified as both recursive and non-recursive in the ontology?",
                            "Which classes are formally specified as disjoint with non-recursive?"
                        ]
                    }
                ],
                "removed axiom": "recursive disjointWith non-recursive",
                "Target CQ": [
                    "How does the ontology distinguish between recursive and non-recursive classes?",
                    "Is any entity classified as both recursive and non-recursive in the ontology?",
                    "Which classes are formally specified as disjoint with non-recursive?"
                ],
                "Valid CQ": [
                    "Does recursive belong to the broader category of recursiveness?",
                    "Which specific concepts are categorized under recursiveness, including recursive?",
                    "What are the more general categories that encompass the recursive concept?"
                ],
                "type": "Type1"
            },
            "descriptive field identifier": {
                "axiom": {
                    "subClassOf": [
                        "field identifier"
                    ],
                    "disjointWith": []
                },
                "description": "descriptive field identifier is a subclass of field identifier, and is explicitly disjoint with target field identifier, meaning that no individual can simultaneously be both a descriptive field identifier and a target field identifier. This class represents identifiers that have descriptive purposes, distinguishing them from identifiers that serve as targets. The disjointness axiom enforces a clear conceptual separation between descriptive and target field identifiers within the ontology.",
                "CQ": [
                    {
                        "axiom": "descriptive field identifier subClassOf field identifier",
                        "CQ": [
                            "Does descriptive field identifier fall under the category of field identifier?",
                            "Which field identifier subclasses include descriptive field identifier?",
                            "What are the hierarchical parents of descriptive field identifier in relation to field identifier?"
                        ]
                    },
                    {
                        "axiom": "descriptive field identifier disjointWith target field identifier",
                        "CQ": [
                            "Are there any instances that can belong to both descriptive field identifier and target field identifier?",
                            "Which classes are asserted to be mutually exclusive with target field identifier?",
                            "What formal constraint distinguishes descriptive field identifier from target field identifier in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "descriptive field identifier disjointWith target field identifier",
                "Target CQ": [
                    "Are there any instances that can belong to both descriptive field identifier and target field identifier?",
                    "Which classes are asserted to be mutually exclusive with target field identifier?",
                    "What formal constraint distinguishes descriptive field identifier from target field identifier in the ontology?"
                ],
                "Valid CQ": [
                    "Does descriptive field identifier fall under the category of field identifier?",
                    "Which field identifier subclasses include descriptive field identifier?",
                    "What are the hierarchical parents of descriptive field identifier in relation to field identifier?"
                ],
                "type": "Type1"
            },
            "descriptive record of primitives field component": {
                "axiom": {
                    "subClassOf": [
                        "labeled dataset descriptive field component"
                    ],
                    "propertyRestrictions": []
                },
                "description": "descriptive record of primitives field component is a subclass of labeled dataset descriptive field component. Every instance of this class must be associated, via the property role_of, with at least one record of primitives datatype. This formalization indicates that members play a specific role in describing labeled datasets by being directly linked to data representations consisting of primitive types.",
                "CQ": [
                    {
                        "axiom": "descriptive record of primitives field component subClassOf labeled dataset descriptive field component",
                        "CQ": [
                            "Is every descriptive record of primitives field component included within labeled dataset descriptive field component?",
                            "Which field components fall under the category of labeled dataset descriptive field component?",
                            "What broader classification encompasses descriptive record of primitives field component?"
                        ]
                    },
                    {
                        "axiom": "descriptive record of primitives field component propertyRestrictions [role_of some record of primitives datatype]",
                        "CQ": [
                            "Does every descriptive record of primitives field component necessarily have a role_of relation with some record of primitives datatype?",
                            "Are all instances of descriptive record of primitives field component required to participate in at least one role_of relation with a record of primitives datatype?",
                            "Is it possible for a descriptive record of primitives field component not to be related via role_of to any record of primitives datatype?"
                        ]
                    }
                ],
                "removed axiom": "descriptive record of primitives field component propertyRestrictions [role_of some record of primitives datatype]",
                "Target CQ": [
                    "Does every descriptive record of primitives field component necessarily have a role_of relation with some record of primitives datatype?",
                    "Are all instances of descriptive record of primitives field component required to participate in at least one role_of relation with a record of primitives datatype?",
                    "Is it possible for a descriptive record of primitives field component not to be related via role_of to any record of primitives datatype?"
                ],
                "Valid CQ": [
                    "Is every descriptive record of primitives field component included within labeled dataset descriptive field component?",
                    "Which field components fall under the category of labeled dataset descriptive field component?",
                    "What broader classification encompasses descriptive record of primitives field component?"
                ],
                "type": "Type1"
            },
            "descriptive record of discrete field component": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[role_of some record of discrete datatype]"
                    ]
                },
                "description": "descriptive record of discrete field component is a subclass of labeled dataset descriptive field component. It is characterized by the property that it plays some role in relation to a record of discrete datatype, indicating its involvement in describing or annotating fields within a labeled dataset that take on discrete values. This class ensures that its instances are specifically linked to descriptive information about discrete data fields.",
                "CQ": [
                    {
                        "axiom": "descriptive record of discrete field component subClassOf labeled dataset descriptive field component",
                        "CQ": [
                            "Is every descriptive record of discrete field component classified under labeled dataset descriptive field component?",
                            "Which entities fall under the labeled dataset descriptive field component category, such as descriptive record of discrete field component?",
                            "What broader categories include descriptive record of discrete field component as a member?"
                        ]
                    },
                    {
                        "axiom": "descriptive record of discrete field component propertyRestrictions [role_of some record of discrete datatype]",
                        "CQ": [
                            "Is it required that a descriptive record of a discrete field component has a property 'role_of' that relates only to a record of a discrete datatype?",
                            "Can a descriptive record of a discrete field component possess the 'role_of' property exclusively with instances of a record of discrete datatype?",
                            "Does every record representing a discrete field component utilize 'role_of' solely in reference to records classified as discrete datatypes?"
                        ]
                    }
                ],
                "removed axiom": "descriptive record of discrete field component subClassOf labeled dataset descriptive field component",
                "Target CQ": [
                    "Is every descriptive record of discrete field component classified under labeled dataset descriptive field component?",
                    "Which entities fall under the labeled dataset descriptive field component category, such as descriptive record of discrete field component?",
                    "What broader categories include descriptive record of discrete field component as a member?"
                ],
                "Valid CQ": [
                    "Is it required that a descriptive record of a discrete field component has a property 'role_of' that relates only to a record of a discrete datatype?",
                    "Can a descriptive record of a discrete field component possess the 'role_of' property exclusively with instances of a record of discrete datatype?",
                    "Does every record representing a discrete field component utilize 'role_of' solely in reference to records classified as discrete datatypes?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "has_identifier": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"has_identifier\" is defined as a sub-property of \"has_attribute\" and does not have explicitly stated characteristics, domain, or range restrictions. It represents an attribute relationship, likely used to associate an entity with a unique identifier, though no inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "has_identifier domain None",
                        "CQ": [
                            "What entities can serve as the domain of the 'has_identifier' property?",
                            "Is it correct that 'has_identifier' does not have a defined domain?",
                            "Can 'has_identifier' relate to subjects of any type, or is its use restricted to specific classes?"
                        ]
                    },
                    {
                        "axiom": "has_identifier range None",
                        "CQ": [
                            "What entities can be assigned as the range for the property 'has_identifier'?",
                            "Is it correct that the property 'has_identifier' does not specify any range?",
                            "Can the property 'has_identifier' be associated with values of any type as its range?"
                        ]
                    },
                    {
                        "axiom": "has_identifier subPropertyOf has_attribute",
                        "CQ": [
                            "Which properties are considered subproperties under has_attribute?",
                            "Is has_identifier categorized as a subproperty of has_attribute?",
                            "Does assigning a has_identifier property inherently assign a has_attribute property as well?"
                        ]
                    }
                ],
                "removed axiom": "has_identifier subPropertyOf has_attribute",
                "Target CQ": [
                    "Which properties are considered subproperties under has_attribute?",
                    "Is has_identifier categorized as a subproperty of has_attribute?",
                    "Does assigning a has_identifier property inherently assign a has_attribute property as well?"
                ],
                "Valid CQ": [
                    "What entities can serve as the domain of the 'has_identifier' property?",
                    "Is it correct that 'has_identifier' does not have a defined domain?",
                    "Can 'has_identifier' relate to subjects of any type, or is its use restricted to specific classes?",
                    "What entities can be assigned as the range for the property 'has_identifier'?",
                    "Is it correct that the property 'has_identifier' does not specify any range?",
                    "Can the property 'has_identifier' be associated with values of any type as its range?"
                ],
                "type": "Type1"
            },
            "is_member_of": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "attribute_of"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"is_member_of\" does not have specified domain or range restrictions and has no special characteristics defined. It is a sub-property of \"attribute_of\" and has \"has_member\" as its inverse property. This property is used to relate an entity to a group or collection to which it belongs.",
                "CQ": [
                    {
                        "axiom": "is_member_of domain None",
                        "CQ": [
                            "What entities can be the subject for the 'is_member_of' property?",
                            "Is it correct that 'is_member_of' has no specified domain?",
                            "Can 'is_member_of' be applied to anything, or should its domain be restricted?"
                        ]
                    },
                    {
                        "axiom": "is_member_of range None",
                        "CQ": [
                            "What can be the range of the property 'is_member_of'?",
                            "Is it correct that the 'is_member_of' property does not have a defined range?",
                            "Can 'is_member_of' relate to any type of object as its value?"
                        ]
                    },
                    {
                        "axiom": "is_member_of subPropertyOf attribute_of",
                        "CQ": [
                            "Is is_member_of included as a subproperty within attribute_of?",
                            "What superproperties does is_member_of possess in the ontology?",
                            "Which subproperties are defined under attribute_of?"
                        ]
                    },
                    {
                        "axiom": "is_member_of inverseOf has_member",
                        "CQ": [
                            "What is the logical connection between ‘is_member_of’ and ‘has_member’ in the ontology?",
                            "If entity A is a member of entity B, does that entail that B has member A according to the ontology?",
                            "Which property is declared as the inverse of ‘is_member_of’?"
                        ]
                    }
                ],
                "removed axiom": "is_member_of inverseOf has_member",
                "Target CQ": [
                    "What is the logical connection between ‘is_member_of’ and ‘has_member’ in the ontology?",
                    "If entity A is a member of entity B, does that entail that B has member A according to the ontology?",
                    "Which property is declared as the inverse of ‘is_member_of’?"
                ],
                "Valid CQ": [
                    "What entities can be the subject for the 'is_member_of' property?",
                    "Is it correct that 'is_member_of' has no specified domain?",
                    "Can 'is_member_of' be applied to anything, or should its domain be restricted?",
                    "What can be the range of the property 'is_member_of'?",
                    "Is it correct that the 'is_member_of' property does not have a defined range?",
                    "Can 'is_member_of' relate to any type of object as its value?",
                    "Is is_member_of included as a subproperty within attribute_of?",
                    "What superproperties does is_member_of possess in the ontology?",
                    "Which subproperties are defined under attribute_of?"
                ],
                "type": "Type1"
            },
            "has_operation": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"has_operation\" does not have explicitly defined characteristics, domain, or range restrictions. It is declared as a sub-property of \"has_attribute,\" indicating that it inherits the general meaning of associating an attribute with an entity, with a more specific focus on operations. No inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "has_operation domain None",
                        "CQ": [
                            "What entities can be the subject (domain) of the property 'has_operation'?",
                            "Is it correct that the property 'has_operation' does not have a specified domain?",
                            "Can 'has_operation' relate any type of entity as its subject?"
                        ]
                    },
                    {
                        "axiom": "has_operation range None",
                        "CQ": [
                            "What entities can be the range of the property 'has_operation'?",
                            "Is it correct that 'has_operation' does not specify any range?",
                            "Could any type of value be assigned as the range of 'has_operation'?"
                        ]
                    },
                    {
                        "axiom": "has_operation subPropertyOf has_attribute",
                        "CQ": [
                            "Is every instance of has_operation necessarily an instance of has_attribute?",
                            "Which properties are defined as subproperties under has_attribute?",
                            "What superproperties are associated with has_operation in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "has_operation subPropertyOf has_attribute",
                "Target CQ": [
                    "Is every instance of has_operation necessarily an instance of has_attribute?",
                    "Which properties are defined as subproperties under has_attribute?",
                    "What superproperties are associated with has_operation in the ontology?"
                ],
                "Valid CQ": [
                    "What entities can be the subject (domain) of the property 'has_operation'?",
                    "Is it correct that the property 'has_operation' does not have a specified domain?",
                    "Can 'has_operation' relate any type of entity as its subject?",
                    "What entities can be the range of the property 'has_operation'?",
                    "Is it correct that 'has_operation' does not specify any range?",
                    "Could any type of value be assigned as the range of 'has_operation'?"
                ],
                "type": "Type1"
            },
            "has_role": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"has_role\" has no explicitly defined domain, range, or characteristics. It is a direct subproperty of owl:topObjectProperty, indicating broad applicability between individuals. No inverse property is specified. This property can be used to associate entities with their assigned roles without additional restrictions.",
                "CQ": [
                    {
                        "axiom": "has_role domain None",
                        "CQ": [
                            "What types of entities can be the subject of the 'has_role' property?",
                            "Is it accurate that the property 'has_role' does not specify a domain?",
                            "Can 'has_role' link from any class, or should there be a defined domain?"
                        ]
                    },
                    {
                        "axiom": "has_role range None",
                        "CQ": [
                            "What types of entities can be the range of the property 'has_role'?",
                            "Is it correct that 'has_role' does not specify any range for its values?",
                            "Are there any restrictions on what can be assigned as the value of 'has_role'?"
                        ]
                    },
                    {
                        "axiom": "has_role subPropertyOf owl:topObjectProperty",
                        "CQ": [
                            "Is has_role a specialization of owl:topObjectProperty?",
                            "Which properties are classified as subproperties under owl:topObjectProperty?",
                            "Does the assertion of has_role between entities entail a more general relationship as defined by owl:topObjectProperty?"
                        ]
                    }
                ],
                "removed axiom": "has_role subPropertyOf owl:topObjectProperty",
                "Target CQ": [
                    "Is has_role a specialization of owl:topObjectProperty?",
                    "Which properties are classified as subproperties under owl:topObjectProperty?",
                    "Does the assertion of has_role between entities entail a more general relationship as defined by owl:topObjectProperty?"
                ],
                "Valid CQ": [
                    "What types of entities can be the subject of the 'has_role' property?",
                    "Is it accurate that the property 'has_role' does not specify a domain?",
                    "Can 'has_role' link from any class, or should there be a defined domain?",
                    "What types of entities can be the range of the property 'has_role'?",
                    "Is it correct that 'has_role' does not specify any range for its values?",
                    "Are there any restrictions on what can be assigned as the value of 'has_role'?"
                ],
                "type": "Type1"
            },
            "represents": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"represents\" has no explicitly defined domain, range, or characteristics, and does not specify an inverse property. It is a sub-property of owl:topObjectProperty, indicating it is a very general object property that can relate any two individuals in the ontology. No further semantic constraints are provided.",
                "CQ": [
                    {
                        "axiom": "represents domain None",
                        "CQ": [
                            "What types of entities can serve as the domain for the property 'represents'?",
                            "Is it appropriate for the property 'represents' to have no specified domain?",
                            "Could the property 'represents' be used with any subject, or should its domain be restricted?"
                        ]
                    },
                    {
                        "axiom": "represents range None",
                        "CQ": [
                            "What are the possible range classes for the property 'represents'?",
                            "Is it correct that the property 'represents' does not have a specified range?",
                            "Can 'represents' relate a subject to any type of object without restriction?"
                        ]
                    },
                    {
                        "axiom": "represents subPropertyOf owl:topObjectProperty",
                        "CQ": [
                            "Is represents a subproperty of any top-level object property in the ontology?",
                            "Which properties are classified as superproperties of represents?",
                            "Does every use of the represents property imply a relationship defined by the most general object property?"
                        ]
                    }
                ],
                "removed axiom": "represents subPropertyOf owl:topObjectProperty",
                "Target CQ": [
                    "Is represents a subproperty of any top-level object property in the ontology?",
                    "Which properties are classified as superproperties of represents?",
                    "Does every use of the represents property imply a relationship defined by the most general object property?"
                ],
                "Valid CQ": [
                    "What types of entities can serve as the domain for the property 'represents'?",
                    "Is it appropriate for the property 'represents' to have no specified domain?",
                    "Could the property 'represents' be used with any subject, or should its domain be restricted?",
                    "What are the possible range classes for the property 'represents'?",
                    "Is it correct that the property 'represents' does not have a specified range?",
                    "Can 'represents' relate a subject to any type of object without restriction?"
                ],
                "type": "Type1"
            },
            "role_of": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "owl:topObjectProperty"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"role_of\" does not have explicitly specified domain or range restrictions and lacks defining characteristics. It is a sub-property of \"owl:topObjectProperty\" and has \"has_role\" as its inverse property. This property is typically used to relate a role to an entity, indicating that the entity plays or fulfills a particular role.",
                "CQ": [
                    {
                        "axiom": "role_of domain None",
                        "CQ": [
                            "What types of entities can be the subject of the property 'role_of'?",
                            "Is there a specific class that should be considered as the domain of 'role_of'?",
                            "Is it valid that the property 'role_of' currently does not specify a domain?"
                        ]
                    },
                    {
                        "axiom": "role_of range None",
                        "CQ": [
                            "What types of entities can serve as the range for the property 'role_of'?",
                            "Is it correct that the property 'role_of' does not have a defined range?",
                            "Can 'role_of' be associated with any specific type as its range?"
                        ]
                    },
                    {
                        "axiom": "role_of subPropertyOf owl:topObjectProperty",
                        "CQ": [
                            "Does the role_of property inherit all characteristics and constraints from owl:topObjectProperty?",
                            "Is owl:topObjectProperty a generalization (superproperty) of role_of in the ontology's property structure?",
                            "Which subproperties are defined under owl:topObjectProperty, specifically including role_of?"
                        ]
                    },
                    {
                        "axiom": "role_of inverseOf has_role",
                        "CQ": [
                            "How are 'role_of' and 'has_role' semantically connected as inverse properties in the ontology?",
                            "If entity E is linked to F via 'role_of', does the ontology entail that F is connected to E via 'has_role'?",
                            "Which property is defined as the inverse of 'role_of' in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "role_of inverseOf has_role",
                "Target CQ": [
                    "How are 'role_of' and 'has_role' semantically connected as inverse properties in the ontology?",
                    "If entity E is linked to F via 'role_of', does the ontology entail that F is connected to E via 'has_role'?",
                    "Which property is defined as the inverse of 'role_of' in the ontology?"
                ],
                "Valid CQ": [
                    "What types of entities can be the subject of the property 'role_of'?",
                    "Is there a specific class that should be considered as the domain of 'role_of'?",
                    "Is it valid that the property 'role_of' currently does not specify a domain?",
                    "What types of entities can serve as the range for the property 'role_of'?",
                    "Is it correct that the property 'role_of' does not have a defined range?",
                    "Can 'role_of' be associated with any specific type as its range?",
                    "Does the role_of property inherit all characteristics and constraints from owl:topObjectProperty?",
                    "Is owl:topObjectProperty a generalization (superproperty) of role_of in the ontology's property structure?",
                    "Which subproperties are defined under owl:topObjectProperty, specifically including role_of?"
                ],
                "type": "Type1"
            },
            "is_operation_of": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "attribute_of"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"is_operation_of\" has no explicitly defined domain or range restrictions and does not possess any special logical characteristics. It is defined as a sub-property of \"attribute_of,\" indicating that it represents a specific kind of attributions between entities. Additionally, it has an inverse property \"has_operation,\" establishing a bidirectional relationship between related entities.",
                "CQ": [
                    {
                        "axiom": "is_operation_of domain None",
                        "CQ": [
                            "What can be the domain of 'is_operation_of'?",
                            "Is it correct that the property 'is_operation_of' has no domain?",
                            "Are there any entities that can be the subject of 'is_operation_of'?"
                        ]
                    },
                    {
                        "axiom": "is_operation_of range None",
                        "CQ": [
                            "What entities can be in the range of the property 'is_operation_of'?",
                            "Is it correct that the property 'is_operation_of' does not specify a range?",
                            "Are there any restrictions on what can appear in the range position for 'is_operation_of'?"
                        ]
                    },
                    {
                        "axiom": "is_operation_of subPropertyOf attribute_of",
                        "CQ": [
                            "Which properties are defined as subproperties of attribute_of?",
                            "Is attribute_of a direct superproperty of is_operation_of within the ontology?",
                            "Does assigning the is_operation_of property to a relationship ensure it is also an instance of attribute_of?"
                        ]
                    },
                    {
                        "axiom": "is_operation_of inverseOf has_operation",
                        "CQ": [
                            "How are the properties ‘is_operation_of’ and ‘has_operation’ interconnected in the ontology?",
                            "If an entity X is an operation of Y, does it follow that Y has operation X under the ontology’s semantics?",
                            "Which property is designated as the inverse of ‘is_operation_of’ in this ontology?"
                        ]
                    }
                ],
                "removed axiom": "is_operation_of inverseOf has_operation",
                "Target CQ": [
                    "How are the properties ‘is_operation_of’ and ‘has_operation’ interconnected in the ontology?",
                    "If an entity X is an operation of Y, does it follow that Y has operation X under the ontology’s semantics?",
                    "Which property is designated as the inverse of ‘is_operation_of’ in this ontology?"
                ],
                "Valid CQ": [
                    "What can be the domain of 'is_operation_of'?",
                    "Is it correct that the property 'is_operation_of' has no domain?",
                    "Are there any entities that can be the subject of 'is_operation_of'?",
                    "What entities can be in the range of the property 'is_operation_of'?",
                    "Is it correct that the property 'is_operation_of' does not specify a range?",
                    "Are there any restrictions on what can appear in the range position for 'is_operation_of'?",
                    "Which properties are defined as subproperties of attribute_of?",
                    "Is attribute_of a direct superproperty of is_operation_of within the ontology?",
                    "Does assigning the is_operation_of property to a relationship ensure it is also an instance of attribute_of?"
                ],
                "type": "Type1"
            }
        }
    },
    "lab": {
        "classes": {
            "CognitiveLoadAssessment": {
                "axiom": {
                    "subClassOf": [
                        "ExperimentalAssessment"
                    ],
                    "propertyRestrictions": [
                        "[hasDualTaskScore exactly 1]",
                        "[hasMonoTaskScore only rdfs:Literal]",
                        "[hasDualTaskScore only rdfs:Literal]"
                    ]
                },
                "description": "CognitiveLoadAssessment is defined as a subclass of ExperimentalAssessment, representing a specific type of assessment dedicated to measuring cognitive load in experimental contexts. Members of this class are characterized by having exactly one dual task score and exactly one mono task score, with both scores required to be data literals. This formalization ensures that each instance of CognitiveLoadAssessment includes precisely one measurable outcome for both mono-task and dual-task conditions, facilitating standardized evaluation and comparison of cognitive load across assessments.",
                "CQ": [
                    {
                        "axiom": "CognitiveLoadAssessment subClassOf ExperimentalAssessment",
                        "CQ": [
                            "Is CognitiveLoadAssessment categorized under the broader class of ExperimentalAssessment?",
                            "Which assessment types fall under ExperimentalAssessment, specifically including CognitiveLoadAssessment?",
                            "What are the immediate parent categories of CognitiveLoadAssessment in the ontology?"
                        ]
                    },
                    {
                        "axiom": "CognitiveLoadAssessment propertyRestrictions [hasDualTaskScore exactly 1]",
                        "CQ": [
                            "Must every CognitiveLoadAssessment instance have exactly one value for the hasDualTaskScore property?",
                            "Is it allowed for a CognitiveLoadAssessment to possess more or less than one hasDualTaskScore value?",
                            "Does the ontology require that a CognitiveLoadAssessment cannot be associated with multiple or zero hasDualTaskScore measurements?"
                        ]
                    },
                    {
                        "axiom": "CognitiveLoadAssessment propertyRestrictions [hasMonoTaskScore exactly 1]",
                        "CQ": [
                            "Is it required that a CognitiveLoadAssessment is associated with exactly one mono task score?",
                            "Can a CognitiveLoadAssessment have more than one value for the hasMonoTaskScore property?",
                            "Does every CognitiveLoadAssessment instance have one and only one hasMonoTaskScore assigned?"
                        ]
                    },
                    {
                        "axiom": "CognitiveLoadAssessment propertyRestrictions [hasMonoTaskScore only rdfs:Literal]",
                        "CQ": [
                            "Is every value of the hasMonoTaskScore property for a CognitiveLoadAssessment necessarily of type rdfs:Literal?",
                            "Can a CognitiveLoadAssessment have a hasMonoTaskScore that is not a literal datatype?",
                            "Are all hasMonoTaskScore properties associated with CognitiveLoadAssessment restricted exclusively to literal values?"
                        ]
                    },
                    {
                        "axiom": "CognitiveLoadAssessment propertyRestrictions [hasDualTaskScore only rdfs:Literal]",
                        "CQ": [
                            "Does every Dual Task Score in a Cognitive Load Assessment have to be an rdfs:Literal?",
                            "Is it permitted for a Cognitive Load Assessment to have a Dual Task Score of a type other than rdfs:Literal?",
                            "Are all values assigned via hasDualTaskScore in Cognitive Load Assessment instances necessarily restricted to rdfs:Literal?"
                        ]
                    }
                ],
                "removed axiom": "CognitiveLoadAssessment propertyRestrictions [hasMonoTaskScore exactly 1]",
                "Target CQ": [
                    "Is it required that a CognitiveLoadAssessment is associated with exactly one mono task score?",
                    "Can a CognitiveLoadAssessment have more than one value for the hasMonoTaskScore property?",
                    "Does every CognitiveLoadAssessment instance have one and only one hasMonoTaskScore assigned?"
                ],
                "Valid CQ": [
                    "Is CognitiveLoadAssessment categorized under the broader class of ExperimentalAssessment?",
                    "Which assessment types fall under ExperimentalAssessment, specifically including CognitiveLoadAssessment?",
                    "What are the immediate parent categories of CognitiveLoadAssessment in the ontology?",
                    "Must every CognitiveLoadAssessment instance have exactly one value for the hasDualTaskScore property?",
                    "Is it allowed for a CognitiveLoadAssessment to possess more or less than one hasDualTaskScore value?",
                    "Does the ontology require that a CognitiveLoadAssessment cannot be associated with multiple or zero hasDualTaskScore measurements?",
                    "Is every value of the hasMonoTaskScore property for a CognitiveLoadAssessment necessarily of type rdfs:Literal?",
                    "Can a CognitiveLoadAssessment have a hasMonoTaskScore that is not a literal datatype?",
                    "Are all hasMonoTaskScore properties associated with CognitiveLoadAssessment restricted exclusively to literal values?",
                    "Does every Dual Task Score in a Cognitive Load Assessment have to be an rdfs:Literal?",
                    "Is it permitted for a Cognitive Load Assessment to have a Dual Task Score of a type other than rdfs:Literal?",
                    "Are all values assigned via hasDualTaskScore in Cognitive Load Assessment instances necessarily restricted to rdfs:Literal?"
                ],
                "type": "Type1"
            },
            "ActivityStatusType": {
                "axiom": {
                    "subClassOf": [],
                    "equivalentClass": [
                        "{omitted, completed, incomplete}"
                    ]
                },
                "description": "ActivityStatusType is defined as a subclass of Type and is equivalent to the set containing the statuses: omitted, completed, and incomplete. This means that any instance of ActivityStatusType must be one of these three specific statuses, providing a controlled vocabulary for representing the status of an activity.",
                "CQ": [
                    {
                        "axiom": "ActivityStatusType subClassOf Type",
                        "CQ": [
                            "Is ActivityStatusType classified under the broader category of Type?",
                            "Which types encompass ActivityStatusType as a more specific subtype?",
                            "What specific categories fall within the scope of Type, including ActivityStatusType?"
                        ]
                    },
                    {
                        "axiom": "ActivityStatusType equivalentClass {omitted, completed, incomplete}",
                        "CQ": [
                            "Is ActivityStatusType logically defined as the set containing omitted, completed, and incomplete?",
                            "Does ActivityStatusType exclusively include the concepts omitted, completed, and incomplete, with no others?",
                            "Are all members of omitted, completed, and incomplete necessarily part of ActivityStatusType?"
                        ]
                    }
                ],
                "removed axiom": "ActivityStatusType subClassOf Type",
                "Target CQ": [
                    "Is ActivityStatusType classified under the broader category of Type?",
                    "Which types encompass ActivityStatusType as a more specific subtype?",
                    "What specific categories fall within the scope of Type, including ActivityStatusType?"
                ],
                "Valid CQ": [
                    "Is ActivityStatusType logically defined as the set containing omitted, completed, and incomplete?",
                    "Does ActivityStatusType exclusively include the concepts omitted, completed, and incomplete, with no others?",
                    "Are all members of omitted, completed, and incomplete necessarily part of ActivityStatusType?"
                ],
                "type": "Type1"
            },
            "DiagnosisType": {
                "axiom": {
                    "subClassOf": [
                        "Type"
                    ],
                    "equivalentClass": []
                },
                "description": "DiagnosisType is defined as a subclass of Type, and is equivalent to the set containing exactly three classes: predementia, dementia, and healthy. This means that any individual classified as a DiagnosisType must be either predementia, dementia, or healthy—no other categories are permitted. This formalization ensures a closed, mutually-exclusive categorization of diagnostic statuses within the ontology.",
                "CQ": [
                    {
                        "axiom": "DiagnosisType subClassOf Type",
                        "CQ": [
                            "Is DiagnosisType categorized under the broader class of Type?",
                            "Which subclasses are defined within Type, specifically including DiagnosisType?",
                            "What higher-level categories does DiagnosisType fall under within the ontology?"
                        ]
                    },
                    {
                        "axiom": "DiagnosisType equivalentClass {predementia, dementia, healthy}",
                        "CQ": [
                            "Is every DiagnosisType necessarily either predementia, dementia, or healthy?",
                            "Is DiagnosisType defined as the union of predementia, dementia, and healthy categories?",
                            "Can any instance exist in DiagnosisType that is not classified as predementia, dementia, or healthy?"
                        ]
                    }
                ],
                "removed axiom": "DiagnosisType equivalentClass {predementia, dementia, healthy}",
                "Target CQ": [
                    "Is every DiagnosisType necessarily either predementia, dementia, or healthy?",
                    "Is DiagnosisType defined as the union of predementia, dementia, and healthy categories?",
                    "Can any instance exist in DiagnosisType that is not classified as predementia, dementia, or healthy?"
                ],
                "Valid CQ": [
                    "Is DiagnosisType categorized under the broader class of Type?",
                    "Which subclasses are defined within Type, specifically including DiagnosisType?",
                    "What higher-level categories does DiagnosisType fall under within the ontology?"
                ],
                "type": "Type1"
            },
            "LateralityType": {
                "axiom": {
                    "subClassOf": [
                        "Type"
                    ],
                    "equivalentClass": []
                },
                "description": "LateralityType is a subclass of Type, characterized as an enumerated class consisting exclusively of the instances 'left_handed' and 'right_handed'. Any instance of LateralityType must be either 'left_handed' or 'right_handed', capturing the concept of handedness in individuals.",
                "CQ": [
                    {
                        "axiom": "LateralityType subClassOf Type",
                        "CQ": [
                            "Is LateralityType categorized under the broader class of Type?",
                            "Which entities are more specific types within Type, such as LateralityType?",
                            "What higher-level classes encompass LateralityType?"
                        ]
                    },
                    {
                        "axiom": "LateralityType equivalentClass {left_handed, right_handed}",
                        "CQ": [
                            "Is every instance of LateralityType restricted to being either left_handed or right_handed?",
                            "Is LateralityType equivalent to the set containing only left_handed and right_handed individuals?",
                            "Are there any LateralityType entities besides left_handed and right_handed?"
                        ]
                    }
                ],
                "removed axiom": "LateralityType equivalentClass {left_handed, right_handed}",
                "Target CQ": [
                    "Is every instance of LateralityType restricted to being either left_handed or right_handed?",
                    "Is LateralityType equivalent to the set containing only left_handed and right_handed individuals?",
                    "Are there any LateralityType entities besides left_handed and right_handed?"
                ],
                "Valid CQ": [
                    "Is LateralityType categorized under the broader class of Type?",
                    "Which entities are more specific types within Type, such as LateralityType?",
                    "What higher-level classes encompass LateralityType?"
                ],
                "type": "Type1"
            },
            "NeuropsychiatricAndMoodAssessment": {
                "axiom": {
                    "subClassOf": [
                        "ClinicalAssessment"
                    ],
                    "propertyRestrictions": [
                        "[npi only xsd:string]",
                        "[npi exactly 1 xsd:string]",
                        "[dsm_ivDepressionCriteria exactly 1 xsd:string]",
                        "[dsm_ivDepressionCriteria only xsd:string]",
                        "[apathyInventory only xsd:string]"
                    ]
                },
                "description": "NeuropsychiatricAndMoodAssessment is defined as a subclass of ClinicalAssessment. Members of this class are characterized by the mandatory presence of exactly one value for each of the following properties: npi (Neuropsychiatric Inventory), dsm_ivDepressionCriteria, and apathyInventory, each being of type xsd:string. Furthermore, these properties cannot have values outside the string datatype. This formalization ensures that any individual instance of NeuropsychiatricAndMoodAssessment contains exactly and only one string value for each of these assessment criteria, supporting precise and consistent neuropsychiatric and mood evaluation.",
                "CQ": [
                    {
                        "axiom": "NeuropsychiatricAndMoodAssessment subClassOf ClinicalAssessment",
                        "CQ": [
                            "Is NeuropsychiatricAndMoodAssessment classified as a type of ClinicalAssessment?",
                            "Which assessments are specified as subclasses under ClinicalAssessment, with NeuropsychiatricAndMoodAssessment included?",
                            "What broader classes encompass NeuropsychiatricAndMoodAssessment?"
                        ]
                    },
                    {
                        "axiom": "NeuropsychiatricAndMoodAssessment propertyRestrictions [npi only xsd:string]",
                        "CQ": [
                            "Are all values of the 'npi' property for NeuropsychiatricAndMoodAssessment instances required to be of type xsd:string?",
                            "Can a NeuropsychiatricAndMoodAssessment have an 'npi' property value that is not a string?",
                            "Is it necessary that every 'npi' property associated with NeuropsychiatricAndMoodAssessment belong exclusively to the xsd:string datatype?"
                        ]
                    },
                    {
                        "axiom": "NeuropsychiatricAndMoodAssessment propertyRestrictions [npi exactly 1 xsd:string]",
                        "CQ": [
                            "Is it required that every NeuropsychiatricAndMoodAssessment must have exactly one value for the property 'npi'?",
                            "Can a NeuropsychiatricAndMoodAssessment have more than one or no values associated with 'npi'?",
                            "Does the ontology restrict the 'npi' property of NeuropsychiatricAndMoodAssessment instances to a single string value?"
                        ]
                    },
                    {
                        "axiom": "NeuropsychiatricAndMoodAssessment propertyRestrictions [dsm_ivDepressionCriteria exactly 1 xsd:string]",
                        "CQ": [
                            "Is it required that a NeuropsychiatricAndMoodAssessment has exactly one value for dsm_ivDepressionCriteria?",
                            "Can a NeuropsychiatricAndMoodAssessment have more than one dsm_ivDepressionCriteria assigned?",
                            "Must every NeuropsychiatricAndMoodAssessment instance be associated with one and only one dsm_ivDepressionCriteria expressed as a string?"
                        ]
                    },
                    {
                        "axiom": "NeuropsychiatricAndMoodAssessment propertyRestrictions [apathyInventory exactly 1 xsd:string]",
                        "CQ": [
                            "Is it required that a NeuropsychiatricAndMoodAssessment has exactly one value for the apathyInventory property?",
                            "Can a NeuropsychiatricAndMoodAssessment include more than one apathyInventory, or none at all?",
                            "Does the axiom restrict NeuropsychiatricAndMoodAssessment to having a single apathyInventory entry represented as a string?"
                        ]
                    },
                    {
                        "axiom": "NeuropsychiatricAndMoodAssessment propertyRestrictions [dsm_ivDepressionCriteria only xsd:string]",
                        "CQ": [
                            "Are values associated with 'dsm_ivDepressionCriteria' in NeuropsychiatricAndMoodAssessment exclusively of type string?",
                            "Is it required that all 'dsm_ivDepressionCriteria' properties in NeuropsychiatricAndMoodAssessment instances use string data?",
                            "Can NeuropsychiatricAndMoodAssessment ever have 'dsm_ivDepressionCriteria' values that are not strings?"
                        ]
                    },
                    {
                        "axiom": "NeuropsychiatricAndMoodAssessment propertyRestrictions [apathyInventory only xsd:string]",
                        "CQ": [
                            "Is it required that the property 'apathyInventory' for NeuropsychiatricAndMoodAssessment can only have values of the xsd:string datatype?",
                            "Does the NeuropsychiatricAndMoodAssessment class restrict its 'apathyInventory' property exclusively to string values?",
                            "Are any values for 'apathyInventory' allowed in NeuropsychiatricAndMoodAssessment except those of the xsd:string type?"
                        ]
                    }
                ],
                "removed axiom": "NeuropsychiatricAndMoodAssessment propertyRestrictions [apathyInventory exactly 1 xsd:string]",
                "Target CQ": [
                    "Is it required that a NeuropsychiatricAndMoodAssessment has exactly one value for the apathyInventory property?",
                    "Can a NeuropsychiatricAndMoodAssessment include more than one apathyInventory, or none at all?",
                    "Does the axiom restrict NeuropsychiatricAndMoodAssessment to having a single apathyInventory entry represented as a string?"
                ],
                "Valid CQ": [
                    "Is NeuropsychiatricAndMoodAssessment classified as a type of ClinicalAssessment?",
                    "Which assessments are specified as subclasses under ClinicalAssessment, with NeuropsychiatricAndMoodAssessment included?",
                    "What broader classes encompass NeuropsychiatricAndMoodAssessment?",
                    "Are all values of the 'npi' property for NeuropsychiatricAndMoodAssessment instances required to be of type xsd:string?",
                    "Can a NeuropsychiatricAndMoodAssessment have an 'npi' property value that is not a string?",
                    "Is it necessary that every 'npi' property associated with NeuropsychiatricAndMoodAssessment belong exclusively to the xsd:string datatype?",
                    "Is it required that every NeuropsychiatricAndMoodAssessment must have exactly one value for the property 'npi'?",
                    "Can a NeuropsychiatricAndMoodAssessment have more than one or no values associated with 'npi'?",
                    "Does the ontology restrict the 'npi' property of NeuropsychiatricAndMoodAssessment instances to a single string value?",
                    "Is it required that a NeuropsychiatricAndMoodAssessment has exactly one value for dsm_ivDepressionCriteria?",
                    "Can a NeuropsychiatricAndMoodAssessment have more than one dsm_ivDepressionCriteria assigned?",
                    "Must every NeuropsychiatricAndMoodAssessment instance be associated with one and only one dsm_ivDepressionCriteria expressed as a string?",
                    "Are values associated with 'dsm_ivDepressionCriteria' in NeuropsychiatricAndMoodAssessment exclusively of type string?",
                    "Is it required that all 'dsm_ivDepressionCriteria' properties in NeuropsychiatricAndMoodAssessment instances use string data?",
                    "Can NeuropsychiatricAndMoodAssessment ever have 'dsm_ivDepressionCriteria' values that are not strings?",
                    "Is it required that the property 'apathyInventory' for NeuropsychiatricAndMoodAssessment can only have values of the xsd:string datatype?",
                    "Does the NeuropsychiatricAndMoodAssessment class restrict its 'apathyInventory' property exclusively to string values?",
                    "Are any values for 'apathyInventory' allowed in NeuropsychiatricAndMoodAssessment except those of the xsd:string type?"
                ],
                "type": "Type1"
            },
            "FunctionalAbilitiesData": {
                "axiom": {
                    "subClassOf": [
                        "MeasuredData"
                    ],
                    "propertyRestrictions": [
                        "[handTrajectory only HandTrajectoryType]"
                    ]
                },
                "description": "FunctionalAbilitiesData is a subclass of MeasuredData, characterized by having exactly one handTrajectory property, which must be of type HandTrajectoryType. All values for handTrajectory in instances of this class are restricted to HandTrajectoryType, ensuring that each FunctionalAbilitiesData instance is associated with a single, specific hand trajectory measurement.",
                "CQ": [
                    {
                        "axiom": "FunctionalAbilitiesData subClassOf MeasuredData",
                        "CQ": [
                            "Is FunctionalAbilitiesData classified as a type within the overarching category of MeasuredData?",
                            "Which specific data types are encompassed by MeasuredData, including FunctionalAbilitiesData?",
                            "What broader classes does FunctionalAbilitiesData fall under in the ontology hierarchy?"
                        ]
                    },
                    {
                        "axiom": "FunctionalAbilitiesData propertyRestrictions [handTrajectory exactly 1 HandTrajectoryType]",
                        "CQ": [
                            "Is each FunctionalAbilitiesData instance required to have exactly one value for the property 'handTrajectory' of type HandTrajectoryType?",
                            "Can a FunctionalAbilitiesData entity be associated with more than one HandTrajectoryType through the 'handTrajectory' property?",
                            "Does the ontology permit a FunctionalAbilitiesData instance to have no assigned value for 'handTrajectory'?"
                        ]
                    },
                    {
                        "axiom": "FunctionalAbilitiesData propertyRestrictions [handTrajectory only HandTrajectoryType]",
                        "CQ": [
                            "Are instances of FunctionalAbilitiesData limited to having handTrajectory property values belonging exclusively to HandTrajectoryType?",
                            "Is it required that all handTrajectory properties of FunctionalAbilitiesData refer solely to individuals of HandTrajectoryType?",
                            "Can FunctionalAbilitiesData possess a handTrajectory property linking to entities outside the HandTrajectoryType class?"
                        ]
                    }
                ],
                "removed axiom": "FunctionalAbilitiesData propertyRestrictions [handTrajectory exactly 1 HandTrajectoryType]",
                "Target CQ": [
                    "Is each FunctionalAbilitiesData instance required to have exactly one value for the property 'handTrajectory' of type HandTrajectoryType?",
                    "Can a FunctionalAbilitiesData entity be associated with more than one HandTrajectoryType through the 'handTrajectory' property?",
                    "Does the ontology permit a FunctionalAbilitiesData instance to have no assigned value for 'handTrajectory'?"
                ],
                "Valid CQ": [
                    "Is FunctionalAbilitiesData classified as a type within the overarching category of MeasuredData?",
                    "Which specific data types are encompassed by MeasuredData, including FunctionalAbilitiesData?",
                    "What broader classes does FunctionalAbilitiesData fall under in the ontology hierarchy?",
                    "Are instances of FunctionalAbilitiesData limited to having handTrajectory property values belonging exclusively to HandTrajectoryType?",
                    "Is it required that all handTrajectory properties of FunctionalAbilitiesData refer solely to individuals of HandTrajectoryType?",
                    "Can FunctionalAbilitiesData possess a handTrajectory property linking to entities outside the HandTrajectoryType class?"
                ],
                "type": "Type1"
            },
            "OrganisationEfficiencyData": {
                "axiom": {
                    "subClassOf": [
                        "MeasuredData"
                    ],
                    "propertyRestrictions": [
                        "[areasOfInterestExplored only rdfs:Literal]",
                        "[areasOfNoInterestExplored only rdfs:Literal]",
                        "[areasOfNoInterestExplored exactly 1]",
                        "[areasOfInterestExplored exactly 1]",
                        "[distanceWalked exactly 1]"
                    ]
                },
                "description": "OrganisationEfficiencyData is a subclass of MeasuredData representing measured values related to organizational efficiency. Every instance of this class must have exactly one value each for distanceWalked, areasOfInterestExplored, and areasOfNoInterestExplored, and all of these values must be literals. This class structurally enforces that the data captured is precisely quantified for these three efficiency-related attributes.",
                "CQ": [
                    {
                        "axiom": "OrganisationEfficiencyData subClassOf MeasuredData",
                        "CQ": [
                            "Does OrganisationEfficiencyData fall under the broader category of MeasuredData?",
                            "Which types of MeasuredData specifically include OrganisationEfficiencyData as a subclass?",
                            "What are the overarching categories that OrganisationEfficiencyData is classified beneath?"
                        ]
                    },
                    {
                        "axiom": "OrganisationEfficiencyData propertyRestrictions [distanceWalked only rdfs:Literal]",
                        "CQ": [
                            "Is OrganisationEfficiencyData restricted to having the property distanceWalked only with instances of rdfs:Literal?",
                            "Can OrganisationEfficiencyData possess a distanceWalked value that is not an rdfs:Literal?",
                            "Are all distanceWalked properties of OrganisationEfficiencyData necessarily of type rdfs:Literal?"
                        ]
                    },
                    {
                        "axiom": "OrganisationEfficiencyData propertyRestrictions [areasOfInterestExplored only rdfs:Literal]",
                        "CQ": [
                            "Is it required that OrganisationEfficiencyData only explores areas of interest represented as literals?",
                            "Can OrganisationEfficiencyData have areas of interest explored that are not typed as rdfs:Literal?",
                            "Does OrganisationEfficiencyData restrict all explored areas of interest exclusively to instances of rdfs:Literal?"
                        ]
                    },
                    {
                        "axiom": "OrganisationEfficiencyData propertyRestrictions [areasOfNoInterestExplored only rdfs:Literal]",
                        "CQ": [
                            "Is OrganisationEfficiencyData required to associate areasOfNoInterestExplored exclusively with rdfs:Literal values?",
                            "Can OrganisationEfficiencyData link its areasOfNoInterestExplored property to any type other than rdfs:Literal?",
                            "Does OrganisationEfficiencyData ever specify areasOfNoInterestExplored with entities that are not rdfs:Literal?"
                        ]
                    },
                    {
                        "axiom": "OrganisationEfficiencyData propertyRestrictions [areasOfNoInterestExplored exactly 1]",
                        "CQ": [
                            "Is it required that OrganisationEfficiencyData is associated with exactly one instance of areasOfNoInterestExplored?",
                            "Can OrganisationEfficiencyData relate to more than one or fewer than one areasOfNoInterestExplored?",
                            "Does the definition of OrganisationEfficiencyData prohibit having zero or multiple areasOfNoInterestExplored linked to it?"
                        ]
                    },
                    {
                        "axiom": "OrganisationEfficiencyData propertyRestrictions [areasOfInterestExplored exactly 1]",
                        "CQ": [
                            "Is it required that each OrganisationEfficiencyData instance be associated with exactly one value for the property areasOfInterestExplored?",
                            "Can an OrganisationEfficiencyData have more or fewer than one areasOfInterestExplored linked to it?",
                            "Does OrganisationEfficiencyData restrict the number of areasOfInterestExplored values to precisely one for every instance?"
                        ]
                    },
                    {
                        "axiom": "OrganisationEfficiencyData propertyRestrictions [distanceWalked exactly 1]",
                        "CQ": [
                            "Is it required that OrganisationEfficiencyData possesses exactly one instance of the distanceWalked property?",
                            "Can OrganisationEfficiencyData ever have more than or fewer than one value for the distanceWalked property?",
                            "Does OrganisationEfficiencyData restrict the cardinality of distanceWalked to precisely one per instance?"
                        ]
                    }
                ],
                "removed axiom": "OrganisationEfficiencyData propertyRestrictions [distanceWalked only rdfs:Literal]",
                "Target CQ": [
                    "Is OrganisationEfficiencyData restricted to having the property distanceWalked only with instances of rdfs:Literal?",
                    "Can OrganisationEfficiencyData possess a distanceWalked value that is not an rdfs:Literal?",
                    "Are all distanceWalked properties of OrganisationEfficiencyData necessarily of type rdfs:Literal?"
                ],
                "Valid CQ": [
                    "Does OrganisationEfficiencyData fall under the broader category of MeasuredData?",
                    "Which types of MeasuredData specifically include OrganisationEfficiencyData as a subclass?",
                    "What are the overarching categories that OrganisationEfficiencyData is classified beneath?",
                    "Is it required that OrganisationEfficiencyData only explores areas of interest represented as literals?",
                    "Can OrganisationEfficiencyData have areas of interest explored that are not typed as rdfs:Literal?",
                    "Does OrganisationEfficiencyData restrict all explored areas of interest exclusively to instances of rdfs:Literal?",
                    "Is OrganisationEfficiencyData required to associate areasOfNoInterestExplored exclusively with rdfs:Literal values?",
                    "Can OrganisationEfficiencyData link its areasOfNoInterestExplored property to any type other than rdfs:Literal?",
                    "Does OrganisationEfficiencyData ever specify areasOfNoInterestExplored with entities that are not rdfs:Literal?",
                    "Is it required that OrganisationEfficiencyData is associated with exactly one instance of areasOfNoInterestExplored?",
                    "Can OrganisationEfficiencyData relate to more than one or fewer than one areasOfNoInterestExplored?",
                    "Does the definition of OrganisationEfficiencyData prohibit having zero or multiple areasOfNoInterestExplored linked to it?",
                    "Is it required that each OrganisationEfficiencyData instance be associated with exactly one value for the property areasOfInterestExplored?",
                    "Can an OrganisationEfficiencyData have more or fewer than one areasOfInterestExplored linked to it?",
                    "Does OrganisationEfficiencyData restrict the number of areasOfInterestExplored values to precisely one for every instance?",
                    "Is it required that OrganisationEfficiencyData possesses exactly one instance of the distanceWalked property?",
                    "Can OrganisationEfficiencyData ever have more than or fewer than one value for the distanceWalked property?",
                    "Does OrganisationEfficiencyData restrict the cardinality of distanceWalked to precisely one per instance?"
                ],
                "type": "Type1"
            },
            "SemiDirectedTask": {
                "axiom": {
                    "subClassOf": [
                        "Task"
                    ],
                    "propertyRestrictions": [
                        "[measuredData some CognitiveAbilitiesData]",
                        "[measuredData only (CognitiveAbilitiesData or FunctionalAbilitiesData or StressData)]"
                    ]
                },
                "description": "SemiDirectedTask is a subclass of Task characterized by the measurement of at least some FunctionalAbilitiesData and some CognitiveAbilitiesData. Additionally, any measuredData associated with a SemiDirectedTask must be exclusively of types CognitiveAbilitiesData, FunctionalAbilitiesData, or StressData—no other data types are permitted. This formalization ensures that tasks within this class are specifically designed to evaluate both cognitive and functional abilities, potentially including stress indicators, thereby aligning with their defined assessment scope.",
                "CQ": [
                    {
                        "axiom": "SemiDirectedTask subClassOf Task",
                        "CQ": [
                            "Is Task the direct supercategory of SemiDirectedTask?",
                            "Which specific types are classified under Task, such as SemiDirectedTask?",
                            "What broader classes encompass SemiDirectedTask?"
                        ]
                    },
                    {
                        "axiom": "SemiDirectedTask propertyRestrictions [measuredData some FunctionalAbilitiesData]",
                        "CQ": [
                            "Does every SemiDirectedTask require the presence of at least one measuredData instance of type FunctionalAbilitiesData?",
                            "Is it obligatory for a SemiDirectedTask to be associated with FunctionalAbilitiesData via the measuredData property?",
                            "Can a SemiDirectedTask exist without having any measuredData that qualify as FunctionalAbilitiesData?"
                        ]
                    },
                    {
                        "axiom": "SemiDirectedTask propertyRestrictions [measuredData some CognitiveAbilitiesData]",
                        "CQ": [
                            "Is it required that a SemiDirectedTask includes at least one measuredData of type CognitiveAbilitiesData?",
                            "Does every SemiDirectedTask necessarily possess measuredData that pertains to CognitiveAbilitiesData?",
                            "Can a SemiDirectedTask exist without having any measuredData associated with CognitiveAbilitiesData?"
                        ]
                    },
                    {
                        "axiom": "SemiDirectedTask propertyRestrictions [measuredData only (CognitiveAbilitiesData or FunctionalAbilitiesData or StressData)]",
                        "CQ": [
                            "Is it required that a SemiDirectedTask only utilizes measuredData originating from CognitiveAbilitiesData, FunctionalAbilitiesData, or StressData?",
                            "Can a SemiDirectedTask have measuredData associated with any type of data other than CognitiveAbilitiesData, FunctionalAbilitiesData, or StressData?",
                            "Does the definition of SemiDirectedTask prohibit the use of measuredData types beyond CognitiveAbilitiesData, FunctionalAbilitiesData, and StressData?"
                        ]
                    }
                ],
                "removed axiom": "SemiDirectedTask propertyRestrictions [measuredData some FunctionalAbilitiesData]",
                "Target CQ": [
                    "Does every SemiDirectedTask require the presence of at least one measuredData instance of type FunctionalAbilitiesData?",
                    "Is it obligatory for a SemiDirectedTask to be associated with FunctionalAbilitiesData via the measuredData property?",
                    "Can a SemiDirectedTask exist without having any measuredData that qualify as FunctionalAbilitiesData?"
                ],
                "Valid CQ": [
                    "Is Task the direct supercategory of SemiDirectedTask?",
                    "Which specific types are classified under Task, such as SemiDirectedTask?",
                    "What broader classes encompass SemiDirectedTask?",
                    "Is it required that a SemiDirectedTask includes at least one measuredData of type CognitiveAbilitiesData?",
                    "Does every SemiDirectedTask necessarily possess measuredData that pertains to CognitiveAbilitiesData?",
                    "Can a SemiDirectedTask exist without having any measuredData associated with CognitiveAbilitiesData?",
                    "Is it required that a SemiDirectedTask only utilizes measuredData originating from CognitiveAbilitiesData, FunctionalAbilitiesData, or StressData?",
                    "Can a SemiDirectedTask have measuredData associated with any type of data other than CognitiveAbilitiesData, FunctionalAbilitiesData, or StressData?",
                    "Does the definition of SemiDirectedTask prohibit the use of measuredData types beyond CognitiveAbilitiesData, FunctionalAbilitiesData, and StressData?"
                ],
                "type": "Type1"
            },
            "PersonWithPredementia": {
                "axiom": {
                    "subClassOf": [
                        "Person"
                    ],
                    "equivalentClass": []
                },
                "description": "PersonWithPredementia is defined as a subclass of Person and is equivalent to those individuals who have at least one clinical record containing an assessment that diagnoses predementia. This formalization ensures that any member of the PersonWithPredementia class must be associated with a clinical record documenting a diagnosis assessment explicitly identifying predementia, thus providing a clear ontological basis for representing individuals in early stages of cognitive decline.",
                "CQ": [
                    {
                        "axiom": "PersonWithPredementia subClassOf Person",
                        "CQ": [
                            "Is Person a parent class of PersonWithPredementia?",
                            "Which categories encapsulate PersonWithPredementia in the classification hierarchy?",
                            "What specific types of Person include PersonWithPredementia?"
                        ]
                    },
                    {
                        "axiom": "PersonWithPredementia equivalentClass [hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment and [hasClinicalDiagnosis some {predementia}])])]",
                        "CQ": [
                            "Does every PersonWithPredementia necessarily have at least one record that contains a diagnosis assessment for predementia?",
                            "Is PersonWithPredementia logically equivalent to having a clinical record that includes an assessment component with a predementia diagnosis?",
                            "Can PersonWithPredementia be fully defined as someone with a clinical record documenting an assessment that diagnoses predementia?"
                        ]
                    }
                ],
                "removed axiom": "PersonWithPredementia equivalentClass [hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment and [hasClinicalDiagnosis some {predementia}])])]",
                "Target CQ": [
                    "Does every PersonWithPredementia necessarily have at least one record that contains a diagnosis assessment for predementia?",
                    "Is PersonWithPredementia logically equivalent to having a clinical record that includes an assessment component with a predementia diagnosis?",
                    "Can PersonWithPredementia be fully defined as someone with a clinical record documenting an assessment that diagnoses predementia?"
                ],
                "Valid CQ": [
                    "Is Person a parent class of PersonWithPredementia?",
                    "Which categories encapsulate PersonWithPredementia in the classification hierarchy?",
                    "What specific types of Person include PersonWithPredementia?"
                ],
                "type": "Type1"
            },
            "S2_SemiDirectedActivitiesStep": {
                "axiom": {
                    "subClassOf": [
                        "ProtocolStep"
                    ],
                    "propertyRestrictions": [
                        "[involvesTask exactly 1 TurnOnTVTask]",
                        "[involvesTask exactly 1 PrepareHotTeaTask]",
                        "[involvesTask exactly 1 CallPsychologistTask]",
                        "[involvesTask exactly 1 AnswerPhoneTask]",
                        "[involvesTask exactly 1 FindBusLineOnMapTask]",
                        "[involvesTask only (AnswerPhoneTask or CallPsychologistTask or EstablishAccountBalanceTask or FindBusLineOnMapTask or LeaveRoomTask or PayBillTask or PrepareDrugBoxTask or PrepareHotTeaTask or Task or TurnOnTVTask or WaterPlantTask)]",
                        "[involvesTask exactly 1 PayBillTask]",
                        "[involvesTask exactly 1 EstablishAccountBalanceTask]",
                        "[involvesTask exactly 1 LeaveRoomTask]",
                        "[involvesTask exactly 1 PrepareDrugBoxTask]"
                    ]
                },
                "description": "S2_SemiDirectedActivitiesStep is defined as a subclass of ProtocolStep. Any instance of this class must involve exactly one of each of the following tasks: TurnOnTVTask, WaterPlantTask, PrepareHotTeaTask, CallPsychologistTask, AnswerPhoneTask, FindBusLineOnMapTask, PayBillTask, EstablishAccountBalanceTask, LeaveRoomTask, and PrepareDrugBoxTask. Furthermore, the tasks involved are restricted to the following types: AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask. This formalization ensures that any S2_SemiDirectedActivitiesStep is a uniquely structured protocol step composed of this specific set of semi-directed activities.",
                "CQ": [
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep subClassOf ProtocolStep",
                        "CQ": [
                            "Does S2_SemiDirectedActivitiesStep fall under the general category of ProtocolStep?",
                            "What are the distinct subtypes of ProtocolStep, including S2_SemiDirectedActivitiesStep?",
                            "Which broader step classifications encompass S2_SemiDirectedActivitiesStep?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 TurnOnTVTask]",
                        "CQ": [
                            "Must every instance of S2_SemiDirectedActivitiesStep involve exactly one TurnOnTVTask?",
                            "Can an S2_SemiDirectedActivitiesStep include more than one or fewer than one TurnOnTVTask in its involvesTask property?",
                            "Is it possible for an S2_SemiDirectedActivitiesStep to be valid without involving precisely one TurnOnTVTask?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 WaterPlantTask]",
                        "CQ": [
                            "Is it required that an S2_SemiDirectedActivitiesStep involves exactly one WaterPlantTask?",
                            "Can an S2_SemiDirectedActivitiesStep include more or less than one WaterPlantTask through the involvesTask property?",
                            "Does the cardinality restriction on involvesTask for S2_SemiDirectedActivitiesStep exclude the possibility of multiple or zero WaterPlantTask instances?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 PrepareHotTeaTask]",
                        "CQ": [
                            "Is each instance of S2_SemiDirectedActivitiesStep required to involve exactly one PrepareHotTeaTask as its task?",
                            "Can an S2_SemiDirectedActivitiesStep have more than one or fewer than one PrepareHotTeaTask involved through the involvesTask property?",
                            "Does being an S2_SemiDirectedActivitiesStep exclude the involvement of any task other than a single PrepareHotTeaTask via the involvesTask relationship?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 CallPsychologistTask]",
                        "CQ": [
                            "Is it required that an S2_SemiDirectedActivitiesStep involves exactly one CallPsychologistTask?",
                            "Can an S2_SemiDirectedActivitiesStep ever involve more or fewer than one CallPsychologistTask?",
                            "Does the definition of S2_SemiDirectedActivitiesStep exclude the possibility of involving either multiple or no CallPsychologistTask?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 AnswerPhoneTask]",
                        "CQ": [
                            "Is every instance of S2_SemiDirectedActivitiesStep required to involve exactly one AnswerPhoneTask as a task?",
                            "Can S2_SemiDirectedActivitiesStep include more than one AnswerPhoneTask or omit it entirely?",
                            "Does the cardinality restriction on involvesTask for S2_SemiDirectedActivitiesStep exclude the possibility of multiple or zero AnswerPhoneTask associations?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 FindBusLineOnMapTask]",
                        "CQ": [
                            "Is every instance of S2_SemiDirectedActivitiesStep required to involve exactly one FindBusLineOnMapTask as its task?",
                            "Can an S2_SemiDirectedActivitiesStep ever involve more than one or fewer than one FindBusLineOnMapTask?",
                            "Are there any S2_SemiDirectedActivitiesStep entities that do not have precisely one associated FindBusLineOnMapTask?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask only (AnswerPhoneTask or CallPsychologistTask or EstablishAccountBalanceTask or FindBusLineOnMapTask or LeaveRoomTask or PayBillTask or PrepareDrugBoxTask or PrepareHotTeaTask or Task or TurnOnTVTask or WaterPlantTask)]",
                        "CQ": [
                            "Are S2_SemiDirectedActivitiesSteps allowed to involve only those tasks specified as AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask?",
                            "Can an S2_SemiDirectedActivitiesStep ever involve a task that is not included among the listed twelve task types?",
                            "Is every task associated with S2_SemiDirectedActivitiesStep necessarily one of AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 PayBillTask]",
                        "CQ": [
                            "Does every instance of S2_SemiDirectedActivitiesStep necessarily involve exactly one PayBillTask as the task?",
                            "Is it permissible for S2_SemiDirectedActivitiesStep to have more than one or no PayBillTask associated via involvesTask property?",
                            "Can S2_SemiDirectedActivitiesStep involve any task other than a single PayBillTask through the involvesTask relationship?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 EstablishAccountBalanceTask]",
                        "CQ": [
                            "Is every S2_SemiDirectedActivitiesStep instance required to involve exactly one EstablishAccountBalanceTask as its task?",
                            "Can an S2_SemiDirectedActivitiesStep be valid if it involves more than one or fewer than one EstablishAccountBalanceTask?",
                            "Does the involvement of an EstablishAccountBalanceTask in S2_SemiDirectedActivitiesStep exclude the possibility of involving any other number of such tasks?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 LeaveRoomTask]",
                        "CQ": [
                            "Must every S2_SemiDirectedActivitiesStep involve exactly one LeaveRoomTask via the involvesTask property?",
                            "Is it possible for an S2_SemiDirectedActivitiesStep to involve more than one or no LeaveRoomTask?",
                            "Does the property restriction require that S2_SemiDirectedActivitiesStep activities are characterized solely by a single associated LeaveRoomTask?"
                        ]
                    },
                    {
                        "axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 PrepareDrugBoxTask]",
                        "CQ": [
                            "Is S2_SemiDirectedActivitiesStep required to involve exactly one PrepareDrugBoxTask through the involvesTask property?",
                            "Can an S2_SemiDirectedActivitiesStep have more or fewer than one PrepareDrugBoxTask associated via involvesTask?",
                            "Does every S2_SemiDirectedActivitiesStep entail a unique instance of PrepareDrugBoxTask as defined by the involvesTask property?"
                        ]
                    }
                ],
                "removed axiom": "S2_SemiDirectedActivitiesStep propertyRestrictions [involvesTask exactly 1 WaterPlantTask]",
                "Target CQ": [
                    "Is it required that an S2_SemiDirectedActivitiesStep involves exactly one WaterPlantTask?",
                    "Can an S2_SemiDirectedActivitiesStep include more or less than one WaterPlantTask through the involvesTask property?",
                    "Does the cardinality restriction on involvesTask for S2_SemiDirectedActivitiesStep exclude the possibility of multiple or zero WaterPlantTask instances?"
                ],
                "Valid CQ": [
                    "Does S2_SemiDirectedActivitiesStep fall under the general category of ProtocolStep?",
                    "What are the distinct subtypes of ProtocolStep, including S2_SemiDirectedActivitiesStep?",
                    "Which broader step classifications encompass S2_SemiDirectedActivitiesStep?",
                    "Must every instance of S2_SemiDirectedActivitiesStep involve exactly one TurnOnTVTask?",
                    "Can an S2_SemiDirectedActivitiesStep include more than one or fewer than one TurnOnTVTask in its involvesTask property?",
                    "Is it possible for an S2_SemiDirectedActivitiesStep to be valid without involving precisely one TurnOnTVTask?",
                    "Is each instance of S2_SemiDirectedActivitiesStep required to involve exactly one PrepareHotTeaTask as its task?",
                    "Can an S2_SemiDirectedActivitiesStep have more than one or fewer than one PrepareHotTeaTask involved through the involvesTask property?",
                    "Does being an S2_SemiDirectedActivitiesStep exclude the involvement of any task other than a single PrepareHotTeaTask via the involvesTask relationship?",
                    "Is it required that an S2_SemiDirectedActivitiesStep involves exactly one CallPsychologistTask?",
                    "Can an S2_SemiDirectedActivitiesStep ever involve more or fewer than one CallPsychologistTask?",
                    "Does the definition of S2_SemiDirectedActivitiesStep exclude the possibility of involving either multiple or no CallPsychologistTask?",
                    "Is every instance of S2_SemiDirectedActivitiesStep required to involve exactly one AnswerPhoneTask as a task?",
                    "Can S2_SemiDirectedActivitiesStep include more than one AnswerPhoneTask or omit it entirely?",
                    "Does the cardinality restriction on involvesTask for S2_SemiDirectedActivitiesStep exclude the possibility of multiple or zero AnswerPhoneTask associations?",
                    "Is every instance of S2_SemiDirectedActivitiesStep required to involve exactly one FindBusLineOnMapTask as its task?",
                    "Can an S2_SemiDirectedActivitiesStep ever involve more than one or fewer than one FindBusLineOnMapTask?",
                    "Are there any S2_SemiDirectedActivitiesStep entities that do not have precisely one associated FindBusLineOnMapTask?",
                    "Are S2_SemiDirectedActivitiesSteps allowed to involve only those tasks specified as AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask?",
                    "Can an S2_SemiDirectedActivitiesStep ever involve a task that is not included among the listed twelve task types?",
                    "Is every task associated with S2_SemiDirectedActivitiesStep necessarily one of AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask?",
                    "Does every instance of S2_SemiDirectedActivitiesStep necessarily involve exactly one PayBillTask as the task?",
                    "Is it permissible for S2_SemiDirectedActivitiesStep to have more than one or no PayBillTask associated via involvesTask property?",
                    "Can S2_SemiDirectedActivitiesStep involve any task other than a single PayBillTask through the involvesTask relationship?",
                    "Is every S2_SemiDirectedActivitiesStep instance required to involve exactly one EstablishAccountBalanceTask as its task?",
                    "Can an S2_SemiDirectedActivitiesStep be valid if it involves more than one or fewer than one EstablishAccountBalanceTask?",
                    "Does the involvement of an EstablishAccountBalanceTask in S2_SemiDirectedActivitiesStep exclude the possibility of involving any other number of such tasks?",
                    "Must every S2_SemiDirectedActivitiesStep involve exactly one LeaveRoomTask via the involvesTask property?",
                    "Is it possible for an S2_SemiDirectedActivitiesStep to involve more than one or no LeaveRoomTask?",
                    "Does the property restriction require that S2_SemiDirectedActivitiesStep activities are characterized solely by a single associated LeaveRoomTask?",
                    "Is S2_SemiDirectedActivitiesStep required to involve exactly one PrepareDrugBoxTask through the involvesTask property?",
                    "Can an S2_SemiDirectedActivitiesStep have more or fewer than one PrepareDrugBoxTask associated via involvesTask?",
                    "Does every S2_SemiDirectedActivitiesStep entail a unique instance of PrepareDrugBoxTask as defined by the involvesTask property?"
                ],
                "type": "Type1"
            },
            "S1_P12_CountingBackwardsTask": {
                "axiom": {
                    "subClassOf": [
                        "DirectedTask"
                    ],
                    "propertyRestrictions": [
                        "[measuredData only (LatencyData or MoodVoiceData or StressData)]",
                        "[countingType only {_20_0, _305_285}]",
                        "[measuredData some MoodVoiceData]"
                    ]
                },
                "description": "S1_P12_CountingBackwardsTask is a subclass of DirectedTask characterized by specific measurement and property constraints. Every instance of this class must have measured data that includes some LatencyData and some MoodVoiceData. Additionally, measured data associated with this task may only be of the types LatencyData, MoodVoiceData, or StressData. The countingType property for individuals in this class is restricted to either _20_0 or _305_285. These axioms ensure that S1_P12_CountingBackwardsTask is a directed task that involves recording response latency, mood/voice indicators, and potentially stress, with a clearly defined range of permissible counting types.",
                "CQ": [
                    {
                        "axiom": "S1_P12_CountingBackwardsTask subClassOf DirectedTask",
                        "CQ": [
                            "Is S1_P12_CountingBackwardsTask classified as a subtype under DirectedTask?",
                            "What specific task types are encompassed by the DirectedTask category?",
                            "Which broader tasks include S1_P12_CountingBackwardsTask as a specialization?"
                        ]
                    },
                    {
                        "axiom": "S1_P12_CountingBackwardsTask propertyRestrictions [measuredData some LatencyData]",
                        "CQ": [
                            "Is it required that the S1_P12_CountingBackwardsTask has at least one measuredData property associated with LatencyData?",
                            "Must every instance of S1_P12_CountingBackwardsTask involve measuredData relating specifically to LatencyData?",
                            "Can S1_P12_CountingBackwardsTask exist without any measuredData property referring to LatencyData?"
                        ]
                    },
                    {
                        "axiom": "S1_P12_CountingBackwardsTask propertyRestrictions [measuredData only (LatencyData or MoodVoiceData or StressData)]",
                        "CQ": [
                            "Is S1_P12_CountingBackwardsTask measured exclusively by LatencyData, MoodVoiceData, or StressData, excluding all other data types?",
                            "Can S1_P12_CountingBackwardsTask have measuredData of any kind other than LatencyData, MoodVoiceData, or StressData?",
                            "Does every instance of measuredData associated with S1_P12_CountingBackwardsTask necessarily fall under LatencyData, MoodVoiceData, or StressData?"
                        ]
                    },
                    {
                        "axiom": "S1_P12_CountingBackwardsTask propertyRestrictions [countingType only {_20_0, _305_285}]",
                        "CQ": [
                            "Is S1_P12_CountingBackwardsTask restricted to only the counting types _20_0 and _305_285?",
                            "Can S1_P12_CountingBackwardsTask involve a counting type other than _20_0 or _305_285?",
                            "Must every instance of S1_P12_CountingBackwardsTask have its countingType property assigned exclusively from the set {_20_0, _305_285}?"
                        ]
                    },
                    {
                        "axiom": "S1_P12_CountingBackwardsTask propertyRestrictions [measuredData some MoodVoiceData]",
                        "CQ": [
                            "Does every instance of S1_P12_CountingBackwardsTask necessarily have at least one measuredData property linking to MoodVoiceData?",
                            "Is it required that S1_P12_CountingBackwardsTask includes measuredData that contains MoodVoiceData?",
                            "Can an S1_P12_CountingBackwardsTask exist without being associated with any MoodVoiceData via the measuredData property?"
                        ]
                    }
                ],
                "removed axiom": "S1_P12_CountingBackwardsTask propertyRestrictions [measuredData some LatencyData]",
                "Target CQ": [
                    "Is it required that the S1_P12_CountingBackwardsTask has at least one measuredData property associated with LatencyData?",
                    "Must every instance of S1_P12_CountingBackwardsTask involve measuredData relating specifically to LatencyData?",
                    "Can S1_P12_CountingBackwardsTask exist without any measuredData property referring to LatencyData?"
                ],
                "Valid CQ": [
                    "Is S1_P12_CountingBackwardsTask classified as a subtype under DirectedTask?",
                    "What specific task types are encompassed by the DirectedTask category?",
                    "Which broader tasks include S1_P12_CountingBackwardsTask as a specialization?",
                    "Is S1_P12_CountingBackwardsTask measured exclusively by LatencyData, MoodVoiceData, or StressData, excluding all other data types?",
                    "Can S1_P12_CountingBackwardsTask have measuredData of any kind other than LatencyData, MoodVoiceData, or StressData?",
                    "Does every instance of measuredData associated with S1_P12_CountingBackwardsTask necessarily fall under LatencyData, MoodVoiceData, or StressData?",
                    "Is S1_P12_CountingBackwardsTask restricted to only the counting types _20_0 and _305_285?",
                    "Can S1_P12_CountingBackwardsTask involve a counting type other than _20_0 or _305_285?",
                    "Must every instance of S1_P12_CountingBackwardsTask have its countingType property assigned exclusively from the set {_20_0, _305_285}?",
                    "Does every instance of S1_P12_CountingBackwardsTask necessarily have at least one measuredData property linking to MoodVoiceData?",
                    "Is it required that S1_P12_CountingBackwardsTask includes measuredData that contains MoodVoiceData?",
                    "Can an S1_P12_CountingBackwardsTask exist without being associated with any MoodVoiceData via the measuredData property?"
                ],
                "type": "Type1"
            },
            "S1_P22_ArticulationControlTask": {
                "axiom": {
                    "subClassOf": [
                        "DirectedTask"
                    ],
                    "propertyRestrictions": [
                        "[measuredData only (LatencyData or StressData)]"
                    ]
                },
                "description": "S1_P22_ArticulationControlTask is defined as a subclass of DirectedTask. Members of this class are required to have at least one measuredData property linked to LatencyData, and all measuredData properties must be restricted to either LatencyData or StressData. This ensures that any instance of S1_P22_ArticulationControlTask is characterized by the measurement of latency and/or stress data, with no other data types permitted for the measuredData property.",
                "CQ": [
                    {
                        "axiom": "S1_P22_ArticulationControlTask subClassOf DirectedTask",
                        "CQ": [
                            "Does S1_P22_ArticulationControlTask fall under the category of DirectedTask?",
                            "What specific types are encompassed within DirectedTask, including S1_P22_ArticulationControlTask?",
                            "Which broader task categories does S1_P22_ArticulationControlTask belong to?"
                        ]
                    },
                    {
                        "axiom": "S1_P22_ArticulationControlTask propertyRestrictions [measuredData some LatencyData]",
                        "CQ": [
                            "Is it required that an instance of S1_P22_ArticulationControlTask has at least one measuredData property relating to LatencyData?",
                            "Does every S1_P22_ArticulationControlTask involve measuredData that includes LatencyData?",
                            "Can a S1_P22_ArticulationControlTask exist without any measuredData associated with LatencyData?"
                        ]
                    },
                    {
                        "axiom": "S1_P22_ArticulationControlTask propertyRestrictions [measuredData only (LatencyData or StressData)]",
                        "CQ": [
                            "Is it the case that an S1_P22_ArticulationControlTask can only have measuredData of type LatencyData or StressData?",
                            "Can measuredData associated with S1_P22_ArticulationControlTask ever include anything other than LatencyData or StressData?",
                            "Are LatencyData and StressData the exclusive kinds of measuredData permitted for S1_P22_ArticulationControlTask?"
                        ]
                    }
                ],
                "removed axiom": "S1_P22_ArticulationControlTask propertyRestrictions [measuredData some LatencyData]",
                "Target CQ": [
                    "Is it required that an instance of S1_P22_ArticulationControlTask has at least one measuredData property relating to LatencyData?",
                    "Does every S1_P22_ArticulationControlTask involve measuredData that includes LatencyData?",
                    "Can a S1_P22_ArticulationControlTask exist without any measuredData associated with LatencyData?"
                ],
                "Valid CQ": [
                    "Does S1_P22_ArticulationControlTask fall under the category of DirectedTask?",
                    "What specific types are encompassed within DirectedTask, including S1_P22_ArticulationControlTask?",
                    "Which broader task categories does S1_P22_ArticulationControlTask belong to?",
                    "Is it the case that an S1_P22_ArticulationControlTask can only have measuredData of type LatencyData or StressData?",
                    "Can measuredData associated with S1_P22_ArticulationControlTask ever include anything other than LatencyData or StressData?",
                    "Are LatencyData and StressData the exclusive kinds of measuredData permitted for S1_P22_ArticulationControlTask?"
                ],
                "type": "Type1"
            },
            "DemographicCharacteristicsRecord": {
                "axiom": {
                    "propertyRestrictions": [
                        "[dateOfBirth only xsd:dateTime]",
                        "[gender only GenderType]",
                        "[laterality only LateralityType]",
                        "[size exactly 1]",
                        "[educationLevel only rdfs:Literal]",
                        "[educationLevel exactly 1]",
                        "[gender exactly 1 GenderType]",
                        "[dateOfBirth exactly 1 xsd:dateTime]"
                    ]
                },
                "description": "DemographicCharacteristicsRecord is a class characterized by strict property constraints to ensure comprehensive demographic data representation. Each instance must have exactly one dateOfBirth value of type xsd:dateTime, exactly one gender value of type GenderType, and exactly one educationLevel value of type rdfs:Literal. Additionally, each record must specify exactly one size (as a rdfs:Literal), and may optionally include laterality, restricted to values defined by LateralityType. These axioms ensure that every record is complete with respect to core demographic attributes while maintaining precise data types and cardinality for each property.",
                "CQ": [
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [dateOfBirth only xsd:dateTime]",
                        "CQ": [
                            "Are all dateOfBirth values associated with DemographicCharacteristicsRecord instances required to be of type xsd:dateTime?",
                            "Is it allowed for a DemographicCharacteristicsRecord to record a dateOfBirth using a datatype other than xsd:dateTime?",
                            "Must every dateOfBirth property in DemographicCharacteristicsRecord reference exclusively xsd:dateTime values?"
                        ]
                    },
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [gender only GenderType]",
                        "CQ": [
                            "Is it required that DemographicCharacteristicsRecord instances have the 'gender' property only classified by types from GenderType?",
                            "Can a DemographicCharacteristicsRecord contain any 'gender' values other than those defined in GenderType?",
                            "Does the ontology exclude any non-GenderType classifications for the 'gender' property in DemographicCharacteristicsRecord?"
                        ]
                    },
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [laterality only LateralityType]",
                        "CQ": [
                            "Is every instance of DemographicCharacteristicsRecord required to have the 'laterality' property assigned exclusively to values of type LateralityType?",
                            "Can a DemographicCharacteristicsRecord have any 'laterality' property value that is not classified as LateralityType?",
                            "Does the ontology limit the range of the 'laterality' property in DemographicCharacteristicsRecord strictly to LateralityType?"
                        ]
                    },
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [size exactly 1]",
                        "CQ": [
                            "Is it required that a DemographicCharacteristicsRecord has exactly one propertyRestrictions relation?",
                            "Can a DemographicCharacteristicsRecord have more or fewer than one propertyRestrictions associated with it?",
                            "Does the ontology prevent DemographicCharacteristicsRecord from being linked to multiple propertyRestrictions?"
                        ]
                    },
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [educationLevel only rdfs:Literal]",
                        "CQ": [
                            "Is every value of the educationLevel property in a DemographicCharacteristicsRecord necessarily a literal?",
                            "Can a DemographicCharacteristicsRecord have its educationLevel property assigned to anything other than an rdfs:Literal?",
                            "Are all educationLevel property values for DemographicCharacteristicsRecord instances exclusively of type rdfs:Literal?"
                        ]
                    },
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [educationLevel exactly 1]",
                        "CQ": [
                            "Must each DemographicCharacteristicsRecord specify exactly one education level?",
                            "Is it possible for a DemographicCharacteristicsRecord to have more than one associated education level?",
                            "Can a DemographicCharacteristicsRecord exist without any specified education level?"
                        ]
                    },
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [gender exactly 1 GenderType]",
                        "CQ": [
                            "Is every DemographicCharacteristicsRecord required to have exactly one value for the 'gender' property?",
                            "Can a DemographicCharacteristicsRecord contain more than one associated gender value?",
                            "Must the 'gender' property of a DemographicCharacteristicsRecord always be specified with a single GenderType?"
                        ]
                    },
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [size only rdfs:Literal]",
                        "CQ": [
                            "Are all values of the 'size' property in a DemographicCharacteristicsRecord restricted to rdfs:Literal types?",
                            "Is it allowed for a DemographicCharacteristicsRecord to have a 'size' property with a type other than rdfs:Literal?",
                            "Does every 'size' property for DemographicCharacteristicsRecord necessarily correspond to an rdfs:Literal?"
                        ]
                    },
                    {
                        "axiom": "DemographicCharacteristicsRecord propertyRestrictions [dateOfBirth exactly 1 xsd:dateTime]",
                        "CQ": [
                            "Must a DemographicCharacteristicsRecord always include exactly one dateOfBirth value?",
                            "Is it valid for a DemographicCharacteristicsRecord to have more than one dateOfBirth associated?",
                            "Can a DemographicCharacteristicsRecord exist without specifying the dateOfBirth property?"
                        ]
                    }
                ],
                "removed axiom": "DemographicCharacteristicsRecord propertyRestrictions [size only rdfs:Literal]",
                "Target CQ": [
                    "Are all values of the 'size' property in a DemographicCharacteristicsRecord restricted to rdfs:Literal types?",
                    "Is it allowed for a DemographicCharacteristicsRecord to have a 'size' property with a type other than rdfs:Literal?",
                    "Does every 'size' property for DemographicCharacteristicsRecord necessarily correspond to an rdfs:Literal?"
                ],
                "Valid CQ": [
                    "Are all dateOfBirth values associated with DemographicCharacteristicsRecord instances required to be of type xsd:dateTime?",
                    "Is it allowed for a DemographicCharacteristicsRecord to record a dateOfBirth using a datatype other than xsd:dateTime?",
                    "Must every dateOfBirth property in DemographicCharacteristicsRecord reference exclusively xsd:dateTime values?",
                    "Is it required that DemographicCharacteristicsRecord instances have the 'gender' property only classified by types from GenderType?",
                    "Can a DemographicCharacteristicsRecord contain any 'gender' values other than those defined in GenderType?",
                    "Does the ontology exclude any non-GenderType classifications for the 'gender' property in DemographicCharacteristicsRecord?",
                    "Is every instance of DemographicCharacteristicsRecord required to have the 'laterality' property assigned exclusively to values of type LateralityType?",
                    "Can a DemographicCharacteristicsRecord have any 'laterality' property value that is not classified as LateralityType?",
                    "Does the ontology limit the range of the 'laterality' property in DemographicCharacteristicsRecord strictly to LateralityType?",
                    "Is it required that a DemographicCharacteristicsRecord has exactly one propertyRestrictions relation?",
                    "Can a DemographicCharacteristicsRecord have more or fewer than one propertyRestrictions associated with it?",
                    "Does the ontology prevent DemographicCharacteristicsRecord from being linked to multiple propertyRestrictions?",
                    "Is every value of the educationLevel property in a DemographicCharacteristicsRecord necessarily a literal?",
                    "Can a DemographicCharacteristicsRecord have its educationLevel property assigned to anything other than an rdfs:Literal?",
                    "Are all educationLevel property values for DemographicCharacteristicsRecord instances exclusively of type rdfs:Literal?",
                    "Must each DemographicCharacteristicsRecord specify exactly one education level?",
                    "Is it possible for a DemographicCharacteristicsRecord to have more than one associated education level?",
                    "Can a DemographicCharacteristicsRecord exist without any specified education level?",
                    "Is every DemographicCharacteristicsRecord required to have exactly one value for the 'gender' property?",
                    "Can a DemographicCharacteristicsRecord contain more than one associated gender value?",
                    "Must the 'gender' property of a DemographicCharacteristicsRecord always be specified with a single GenderType?",
                    "Must a DemographicCharacteristicsRecord always include exactly one dateOfBirth value?",
                    "Is it valid for a DemographicCharacteristicsRecord to have more than one dateOfBirth associated?",
                    "Can a DemographicCharacteristicsRecord exist without specifying the dateOfBirth property?"
                ],
                "type": "Type1"
            },
            "Protocol": {
                "axiom": {
                    "propertyRestrictions": [
                        "[protocolStep some ProtocolStep]",
                        "[protocolStep only ProtocolStep]",
                        "[date exactly 1 xsd:dateTime]",
                        "[hasParticipant exactly 1 Person]",
                        "[hasParticipant only Person]"
                    ]
                },
                "description": "Protocol is a class that represents a structured set of actions or procedures, characterized by a well-defined workflow. Each instance of Protocol must have at least one protocol step and all protocol steps associated with a protocol must be instances of ProtocolStep. Additionally, every protocol is required to specify exactly one date, which must be an instance of xsd:dateTime, and exactly one participant, who must be an instance of Person. The axioms ensure strict adherence to these requirements, supporting precise modeling of procedural activities involving a single documented participant, a single date, and one or more procedural steps.",
                "CQ": [
                    {
                        "axiom": "Protocol propertyRestrictions [protocolStep some ProtocolStep]",
                        "CQ": [
                            "Does every Protocol necessarily include at least one protocolStep that is an instance of ProtocolStep?",
                            "Is it a requirement for a Protocol to possess the property protocolStep relating to some ProtocolStep?",
                            "Can a Protocol exist without involving any protocolStep of type ProtocolStep?"
                        ]
                    },
                    {
                        "axiom": "Protocol propertyRestrictions [protocolStep only ProtocolStep]",
                        "CQ": [
                            "Is it required that a protocol has only protocolStep properties relating to instances of ProtocolStep?",
                            "Can a protocol possess any protocolStep value not belonging to the class ProtocolStep?",
                            "Does the protocolStep property of a protocol necessarily reference exclusively elements categorized as ProtocolStep?"
                        ]
                    },
                    {
                        "axiom": "Protocol propertyRestrictions [date exactly 1 xsd:dateTime]",
                        "CQ": [
                            "Is it required that every Protocol instance is associated with exactly one value for the property 'date'?",
                            "Can a Protocol possess more than one date property at any time?",
                            "Would a Protocol instance lacking a value for the 'date' property violate the restriction?"
                        ]
                    },
                    {
                        "axiom": "Protocol propertyRestrictions [hasParticipant exactly 1 Person]",
                        "CQ": [
                            "Is every instance of Protocol required to have exactly one Person as a participant?",
                            "Can a Protocol ever involve more or fewer than one Person as its participant?",
                            "Does the participation in a Protocol necessarily exclude the possibility of having no Person or multiple Persons involved?"
                        ]
                    },
                    {
                        "axiom": "Protocol propertyRestrictions [hasParticipant only Person]",
                        "CQ": [
                            "Is every participant in a Protocol required to be a Person?",
                            "Does the Protocol class restrict its 'hasParticipant' property exclusively to individuals of type Person?",
                            "Can a Protocol involve any participant that is not classified as a Person?"
                        ]
                    },
                    {
                        "axiom": "Protocol propertyRestrictions [date only xsd:dateTime]",
                        "CQ": [
                            "Is the date property of a Protocol instance restricted exclusively to values of type xsd:dateTime?",
                            "Can a Protocol have the date property with any value that is not an xsd:dateTime?",
                            "Are all instances of Protocol required to use only xsd:dateTime typed values for their date property?"
                        ]
                    }
                ],
                "removed axiom": "Protocol propertyRestrictions [date only xsd:dateTime]",
                "Target CQ": [
                    "Is the date property of a Protocol instance restricted exclusively to values of type xsd:dateTime?",
                    "Can a Protocol have the date property with any value that is not an xsd:dateTime?",
                    "Are all instances of Protocol required to use only xsd:dateTime typed values for their date property?"
                ],
                "Valid CQ": [
                    "Does every Protocol necessarily include at least one protocolStep that is an instance of ProtocolStep?",
                    "Is it a requirement for a Protocol to possess the property protocolStep relating to some ProtocolStep?",
                    "Can a Protocol exist without involving any protocolStep of type ProtocolStep?",
                    "Is it required that a protocol has only protocolStep properties relating to instances of ProtocolStep?",
                    "Can a protocol possess any protocolStep value not belonging to the class ProtocolStep?",
                    "Does the protocolStep property of a protocol necessarily reference exclusively elements categorized as ProtocolStep?",
                    "Is it required that every Protocol instance is associated with exactly one value for the property 'date'?",
                    "Can a Protocol possess more than one date property at any time?",
                    "Would a Protocol instance lacking a value for the 'date' property violate the restriction?",
                    "Is every instance of Protocol required to have exactly one Person as a participant?",
                    "Can a Protocol ever involve more or fewer than one Person as its participant?",
                    "Does the participation in a Protocol necessarily exclude the possibility of having no Person or multiple Persons involved?",
                    "Is every participant in a Protocol required to be a Person?",
                    "Does the Protocol class restrict its 'hasParticipant' property exclusively to individuals of type Person?",
                    "Can a Protocol involve any participant that is not classified as a Person?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "participates": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "owl:topObjectProperty"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"participates\" has no explicit domain or range restrictions and is a sub-property of \"owl:topObjectProperty.\" It does not have any characteristics such as functionality or symmetry. The property is the inverse of \"hasParticipant,\" meaning if an entity participates in something, that thing has the entity as a participant.",
                "CQ": [
                    {
                        "axiom": "participates domain None",
                        "CQ": [
                            "What kinds of entities can participate as the subject of the 'participates' property?",
                            "Is it correct that the property 'participates' does not have a specified domain?",
                            "Can the domain of the property 'participates' be something other than unspecified?"
                        ]
                    },
                    {
                        "axiom": "participates range None",
                        "CQ": [
                            "What entities can appear as the range of the 'participates' property?",
                            "Is it correct that the property 'participates' does not have a defined range?",
                            "Can the 'participates' property be used with objects of any type as its range?"
                        ]
                    },
                    {
                        "axiom": "participates subPropertyOf owl:topObjectProperty",
                        "CQ": [
                            "Is every occurrence of participates also an occurrence of owl:topObjectProperty?",
                            "What are the superproperties of participates?",
                            "Which properties are considered subproperties of owl:topObjectProperty within the ontology?"
                        ]
                    },
                    {
                        "axiom": "participates inverseOf hasParticipant",
                        "CQ": [
                            "How are the properties 'participates' and 'hasParticipant' related within the ontology?",
                            "If individual X participates in event Y, does it follow that Y has participant X?",
                            "Which property in the ontology is specified as the inverse of 'participates'?"
                        ]
                    }
                ],
                "removed axiom": "participates inverseOf hasParticipant",
                "Target CQ": [
                    "How are the properties 'participates' and 'hasParticipant' related within the ontology?",
                    "If individual X participates in event Y, does it follow that Y has participant X?",
                    "Which property in the ontology is specified as the inverse of 'participates'?"
                ],
                "Valid CQ": [
                    "What kinds of entities can participate as the subject of the 'participates' property?",
                    "Is it correct that the property 'participates' does not have a specified domain?",
                    "Can the domain of the property 'participates' be something other than unspecified?",
                    "What entities can appear as the range of the 'participates' property?",
                    "Is it correct that the property 'participates' does not have a defined range?",
                    "Can the 'participates' property be used with objects of any type as its range?",
                    "Is every occurrence of participates also an occurrence of owl:topObjectProperty?",
                    "What are the superproperties of participates?",
                    "Which properties are considered subproperties of owl:topObjectProperty within the ontology?"
                ],
                "type": "Type1"
            },
            "apathyInventory": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"apathyInventory\" does not have specified domain or range restrictions and has no declared characteristics. It is defined as a subproperty of \"owl:topDataProperty,\" indicating it is a data property applicable to any individual. No inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "apathyInventory domain None",
                        "CQ": [
                            "What entities can serve as the domain for the property 'apathyInventory'?",
                            "Is it correct that the property 'apathyInventory' does not have a defined domain?",
                            "Can 'apathyInventory' be applied to any subject, or should its use be restricted to a specific class?"
                        ]
                    },
                    {
                        "axiom": "apathyInventory range None",
                        "CQ": [
                            "What types of entities can serve as the range for the property 'apathyInventory'?",
                            "Is 'apathyInventory' permitted to have no specified range?",
                            "Can 'apathyInventory' be associated with values or objects of any type?"
                        ]
                    },
                    {
                        "axiom": "apathyInventory subPropertyOf owl:topDataProperty",
                        "CQ": [
                            "Is apathyInventory classified as a data property within the ontology?",
                            "What superproperties does apathyInventory have according to the property hierarchy?",
                            "Which data properties are subsumed by owl:topDataProperty within the ontology?"
                        ]
                    }
                ],
                "removed axiom": "apathyInventory subPropertyOf owl:topDataProperty",
                "Target CQ": [
                    "Is apathyInventory classified as a data property within the ontology?",
                    "What superproperties does apathyInventory have according to the property hierarchy?",
                    "Which data properties are subsumed by owl:topDataProperty within the ontology?"
                ],
                "Valid CQ": [
                    "What entities can serve as the domain for the property 'apathyInventory'?",
                    "Is it correct that the property 'apathyInventory' does not have a defined domain?",
                    "Can 'apathyInventory' be applied to any subject, or should its use be restricted to a specific class?",
                    "What types of entities can serve as the range for the property 'apathyInventory'?",
                    "Is 'apathyInventory' permitted to have no specified range?",
                    "Can 'apathyInventory' be associated with values or objects of any type?"
                ],
                "type": "Type1"
            },
            "hasMonoTaskScore": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"hasMonoTaskScore\" does not have explicitly defined characteristics, domain, or range restrictions. It is defined as a sub-property of \"hasScore,\" indicating it is used to represent a specific type of score related to mono-task contexts. No inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "hasMonoTaskScore domain None",
                        "CQ": [
                            "What can be the domain of the property 'hasMonoTaskScore'?",
                            "Is it correct that 'hasMonoTaskScore' has no domain specified?",
                            "Can 'hasMonoTaskScore' be applied to any type of subject, or are there implicit domain restrictions?"
                        ]
                    },
                    {
                        "axiom": "hasMonoTaskScore range None",
                        "CQ": [
                            "What can be the range of the property 'hasMonoTaskScore'?",
                            "Is it correct that 'hasMonoTaskScore' does not have a range defined?",
                            "Can entities of any type serve as the value for the property 'hasMonoTaskScore'?"
                        ]
                    },
                    {
                        "axiom": "hasMonoTaskScore subPropertyOf hasScore",
                        "CQ": [
                            "Is hasScore the superproperty of hasMonoTaskScore?",
                            "Which properties are classified as subproperties under hasScore?",
                            "Does usage of hasMonoTaskScore always entail usage of hasScore?"
                        ]
                    }
                ],
                "removed axiom": "hasMonoTaskScore subPropertyOf hasScore",
                "Target CQ": [
                    "Is hasScore the superproperty of hasMonoTaskScore?",
                    "Which properties are classified as subproperties under hasScore?",
                    "Does usage of hasMonoTaskScore always entail usage of hasScore?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'hasMonoTaskScore'?",
                    "Is it correct that 'hasMonoTaskScore' has no domain specified?",
                    "Can 'hasMonoTaskScore' be applied to any type of subject, or are there implicit domain restrictions?",
                    "What can be the range of the property 'hasMonoTaskScore'?",
                    "Is it correct that 'hasMonoTaskScore' does not have a range defined?",
                    "Can entities of any type serve as the value for the property 'hasMonoTaskScore'?"
                ],
                "type": "Type1"
            },
            "areasOfInterestExplored": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"areasOfInterestExplored\" has no explicitly defined characteristics, domain restrictions, or super-properties. Its range is rdfs:Literal, indicating that the values associated with this property are expected to be plain text or data values. No inverse property is specified. This property is used to record or describe the areas of interest that have been explored by an entity.",
                "CQ": [
                    {
                        "axiom": "areasOfInterestExplored domain None",
                        "CQ": [
                            "What entities can serve as the domain of the property 'areasOfInterestExplored'?",
                            "Is it correct that 'areasOfInterestExplored' has no specified domain?",
                            "Are there any entities that cannot be subjects of the 'areasOfInterestExplored' property?"
                        ]
                    },
                    {
                        "axiom": "areasOfInterestExplored range rdfs:Literal",
                        "CQ": [
                            "Can the property 'areasOfInterestExplored' take any object other than a literal value?",
                            "Is every object associated with 'areasOfInterestExplored' necessarily an rdfs:Literal?",
                            "What types of values are permitted as the range for 'areasOfInterestExplored'?"
                        ]
                    }
                ],
                "removed axiom": "areasOfInterestExplored range rdfs:Literal",
                "Target CQ": [
                    "Can the property 'areasOfInterestExplored' take any object other than a literal value?",
                    "Is every object associated with 'areasOfInterestExplored' necessarily an rdfs:Literal?",
                    "What types of values are permitted as the range for 'areasOfInterestExplored'?"
                ],
                "Valid CQ": [
                    "What entities can serve as the domain of the property 'areasOfInterestExplored'?",
                    "Is it correct that 'areasOfInterestExplored' has no specified domain?",
                    "Are there any entities that cannot be subjects of the 'areasOfInterestExplored' property?"
                ],
                "type": "Type1"
            },
            "hasClinicalDiagnosis": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"hasClinicalDiagnosis\" does not specify any characteristics, domain, or range. It is a subproperty of \"hasDiagnosis,\" indicating that it represents a specialized type of diagnostic relationship, specifically pertaining to clinical diagnoses. No inverse property is defined.",
                "CQ": [
                    {
                        "axiom": "hasClinicalDiagnosis domain None",
                        "CQ": [
                            "Is it correct that the property 'hasClinicalDiagnosis' does not have a specified domain?",
                            "What types of entities can serve as the subject for the property 'hasClinicalDiagnosis'?",
                            "Are there restrictions on what can be the domain of 'hasClinicalDiagnosis'?"
                        ]
                    },
                    {
                        "axiom": "hasClinicalDiagnosis range None",
                        "CQ": [
                            "What can be the range of the property 'hasClinicalDiagnosis'?",
                            "Is it correct that 'hasClinicalDiagnosis' does not have a defined range?",
                            "Can 'hasClinicalDiagnosis' relate to objects of any type, given it has no specified range?"
                        ]
                    },
                    {
                        "axiom": "hasClinicalDiagnosis subPropertyOf hasDiagnosis",
                        "CQ": [
                            "Is hasClinicalDiagnosis a specific type of the hasDiagnosis property?",
                            "Which properties are considered subproperties of hasDiagnosis?",
                            "What superproperties are directly associated with hasClinicalDiagnosis?"
                        ]
                    }
                ],
                "removed axiom": "hasClinicalDiagnosis subPropertyOf hasDiagnosis",
                "Target CQ": [
                    "Is hasClinicalDiagnosis a specific type of the hasDiagnosis property?",
                    "Which properties are considered subproperties of hasDiagnosis?",
                    "What superproperties are directly associated with hasClinicalDiagnosis?"
                ],
                "Valid CQ": [
                    "Is it correct that the property 'hasClinicalDiagnosis' does not have a specified domain?",
                    "What types of entities can serve as the subject for the property 'hasClinicalDiagnosis'?",
                    "Are there restrictions on what can be the domain of 'hasClinicalDiagnosis'?",
                    "What can be the range of the property 'hasClinicalDiagnosis'?",
                    "Is it correct that 'hasClinicalDiagnosis' does not have a defined range?",
                    "Can 'hasClinicalDiagnosis' relate to objects of any type, given it has no specified range?"
                ],
                "type": "Type1"
            }
        }
    },
    "swo": {
        "classes": {
            "Phylogenetics": {
                "axiom": {
                    "subClassOf": [
                        "Phylogeny"
                    ]
                },
                "description": "Phylogenetics is defined as a subclass of both Sequence analysis and Phylogeny, indicating that it involves analytical methods for understanding evolutionary relationships. It is formally described as the study of evolutionary relationships among organisms using analyses of genetic information, typically involving gene or protein sequence data. This class focuses on methodologies and approaches to infer phylogenetic relationships through sequence-based evidence.",
                "CQ": [
                    {
                        "axiom": "Phylogenetics subClassOf Sequence analysis",
                        "CQ": [
                            "Is Phylogenetics categorized as a specific type of Sequence analysis?",
                            "Which disciplines are classified under Sequence analysis, and does this include Phylogenetics?",
                            "What are the broader conceptual categories that encompass Phylogenetics within sequence studies?"
                        ]
                    },
                    {
                        "axiom": "Phylogenetics subClassOf Phylogeny",
                        "CQ": [
                            "Is Phylogeny the broader category that encompasses Phylogenetics?",
                            "Which specific subcategories are classified under Phylogeny, such as Phylogenetics?",
                            "What higher-level categories include Phylogenetics within their conceptual scope?"
                        ]
                    }
                ],
                "removed axiom": "Phylogenetics subClassOf Sequence analysis",
                "Target CQ": [
                    "Is Phylogenetics categorized as a specific type of Sequence analysis?",
                    "Which disciplines are classified under Sequence analysis, and does this include Phylogenetics?",
                    "What are the broader conceptual categories that encompass Phylogenetics within sequence studies?"
                ],
                "Valid CQ": [
                    "Is Phylogeny the broader category that encompasses Phylogenetics?",
                    "Which specific subcategories are classified under Phylogeny, such as Phylogenetics?",
                    "What higher-level categories include Phylogenetics within their conceptual scope?"
                ],
                "type": "Type1"
            },
            "TAIR accession (protein)": {
                "axiom": {
                    "subClassOf": [
                        "Sequence accession (protein)"
                    ],
                    "propertyRestrictions": [
                        "[is identifier of some Sequence record]"
                    ]
                },
                "description": "TAIR accession (protein) is defined as a subclass of both TAIR accession and Sequence accession (protein), representing identifiers specifically assigned to protein sequences within the TAIR database. Each TAIR accession (protein) serves as an identifier for at least one sequence record. This class formalizes the concept of associating unique protein sequence identifiers from TAIR, ensuring they are only used as identifiers of protein sequence records.",
                "CQ": [
                    {
                        "axiom": "TAIR accession (protein) subClassOf TAIR accession",
                        "CQ": [
                            "Is TAIR accession (protein) categorized under the general class of TAIR accession?",
                            "What are the subclasses defined within TAIR accession, including TAIR accession (protein)?",
                            "Which broader classes encompass TAIR accession (protein)?"
                        ]
                    },
                    {
                        "axiom": "TAIR accession (protein) subClassOf Sequence accession (protein)",
                        "CQ": [
                            "Is TAIR accession (protein) a more specific form of Sequence accession (protein)?",
                            "Which types of Sequence accession (protein) include TAIR accession (protein) as a subtype?",
                            "To what broader classifications does TAIR accession (protein) pertain within the context of protein accession identifiers?"
                        ]
                    },
                    {
                        "axiom": "TAIR accession (protein) propertyRestrictions [is identifier of some Sequence record]",
                        "CQ": [
                            "Is every TAIR accession (protein) necessarily associated with at least one Sequence record through the 'is identifier of' property?",
                            "Can a TAIR accession (protein) exist without serving as the identifier for any Sequence record?",
                            "Does the ontology require that only Sequence records are linked to TAIR accessions (protein) via the 'is identifier of' property?"
                        ]
                    }
                ],
                "removed axiom": "TAIR accession (protein) subClassOf TAIR accession",
                "Target CQ": [
                    "Is TAIR accession (protein) categorized under the general class of TAIR accession?",
                    "What are the subclasses defined within TAIR accession, including TAIR accession (protein)?",
                    "Which broader classes encompass TAIR accession (protein)?"
                ],
                "Valid CQ": [
                    "Is TAIR accession (protein) a more specific form of Sequence accession (protein)?",
                    "Which types of Sequence accession (protein) include TAIR accession (protein) as a subtype?",
                    "To what broader classifications does TAIR accession (protein) pertain within the context of protein accession identifiers?",
                    "Is every TAIR accession (protein) necessarily associated with at least one Sequence record through the 'is identifier of' property?",
                    "Can a TAIR accession (protein) exist without serving as the identifier for any Sequence record?",
                    "Does the ontology require that only Sequence records are linked to TAIR accessions (protein) via the 'is identifier of' property?"
                ],
                "type": "Type1"
            },
            "Ensembl gene ID": {
                "axiom": {
                    "subClassOf": [
                        "Gene ID"
                    ]
                },
                "description": "Ensembl gene ID is a subclass of both Gene ID and Ensembl ID, representing a unique identifier specifically assigned to a gene or related feature within the Ensembl database. This class is used to distinctly reference genetic loci in the Ensembl genome annotation system, ensuring unambiguous identification of genetic entities and facilitating cross-referencing between biological databases.",
                "CQ": [
                    {
                        "axiom": "Ensembl gene ID subClassOf Gene ID",
                        "CQ": [
                            "Is every Ensembl gene ID classified as a type of Gene ID?",
                            "Which gene identifiers are more specific than Gene ID, such as Ensembl gene ID?",
                            "What broader identifier categories does Ensembl gene ID fall under?"
                        ]
                    },
                    {
                        "axiom": "Ensembl gene ID subClassOf Ensembl ID",
                        "CQ": [
                            "Is Ensembl gene ID classified under Ensembl ID?",
                            "Which instances are defined as specific types of Ensembl ID, such as Ensembl gene ID?",
                            "What broader identifiers encompass the Ensembl gene ID category?"
                        ]
                    }
                ],
                "removed axiom": "Ensembl gene ID subClassOf Ensembl ID",
                "Target CQ": [
                    "Is Ensembl gene ID classified under Ensembl ID?",
                    "Which instances are defined as specific types of Ensembl ID, such as Ensembl gene ID?",
                    "What broader identifiers encompass the Ensembl gene ID category?"
                ],
                "Valid CQ": [
                    "Is every Ensembl gene ID classified as a type of Gene ID?",
                    "Which gene identifiers are more specific than Gene ID, such as Ensembl gene ID?",
                    "What broader identifier categories does Ensembl gene ID fall under?"
                ],
                "type": "Type1"
            },
            "HilbertVis": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has specified data input some (data and [has format specification some GFF])]",
                        "[is executed in some data visualization]",
                        "[has specified data output some (Graph plot and [has format specification some image format])]",
                        "[has specified data input some (data and [has format specification some BED])]",
                        "[is encoded in some R language]",
                        "[is executed in some data normalization]"
                    ]
                },
                "description": "HilbertVis is a subclass of software that is implemented in the R language. It is designed to process input data in either GFF or BED formats and requires explicit format specification. The software is executed within the contexts of data visualization and data normalization tasks. Its output consists of graph plots, which are specified to be in an image format. The axiomatic structure ensures that HilbertVis operates strictly on well-structured biological data formats and produces visual representations suitable for further analysis or presentation.",
                "CQ": [
                    {
                        "axiom": "HilbertVis subClassOf software",
                        "CQ": [
                            "Is HilbertVis categorized under the broader class of software?",
                            "Which software subclasses include HilbertVis as a more specific instance?",
                            "What general classifications encompass HilbertVis within the software hierarchy?"
                        ]
                    },
                    {
                        "axiom": "HilbertVis propertyRestrictions [has specified data input some (data and [has format specification some GFF])]",
                        "CQ": [
                            "Is it required that a HilbertVis includes at least one data input that has a format specification of GFF?",
                            "Does HilbertVis necessarily involve a data input that both represents data and includes the GFF format specification?",
                            "Must every specified data input for HilbertVis have its format specification set to GFF?"
                        ]
                    },
                    {
                        "axiom": "HilbertVis propertyRestrictions [is executed in some data visualization]",
                        "CQ": [
                            "Is every HilbertVis instance required to be executed in at least one data visualization?",
                            "Can a HilbertVis exist without being associated with any data visualization?",
                            "Does the definition of HilbertVis ensure execution within the context of a data visualization?"
                        ]
                    },
                    {
                        "axiom": "HilbertVis propertyRestrictions [has specified data output some (Graph plot and [has format specification some image format])]",
                        "CQ": [
                            "Must every HilbertVis have at least one specified data output that is both a graph plot and has a format specification in an image format?",
                            "Is the presence of a specified data output that is a graph plot with an associated image format specification required for an entity to be classified as HilbertVis?",
                            "Can a HilbertVis exist without providing a graph plot as a specified data output in an image format?"
                        ]
                    },
                    {
                        "axiom": "HilbertVis propertyRestrictions [has specified data input some (data and [has format specification some BED])]",
                        "CQ": [
                            "Must every HilbertVis have at least one data input characterized both as data and having a format specification in BED?",
                            "Can HilbertVis possess a specified data input without that input conforming to the BED format specification?",
                            "Is it necessary that any instance of HilbertVis includes a data input with an explicit BED format specification?"
                        ]
                    },
                    {
                        "axiom": "HilbertVis propertyRestrictions [is encoded in some R language]",
                        "CQ": [
                            "Is every instance of HilbertVis required to be encoded in at least one R language?",
                            "Can a HilbertVis exist without being encoded in any R language?",
                            "Does the encoding property for HilbertVis necessarily involve an R language?"
                        ]
                    },
                    {
                        "axiom": "HilbertVis propertyRestrictions [is executed in some data normalization]",
                        "CQ": [
                            "Is it required that a HilbertVis instance is executed in at least one data normalization process?",
                            "Does every HilbertVis necessarily associate with being executed in some form of data normalization?",
                            "Can there exist a HilbertVis that is not executed in any data normalization?"
                        ]
                    }
                ],
                "removed axiom": "HilbertVis subClassOf software",
                "Target CQ": [
                    "Is HilbertVis categorized under the broader class of software?",
                    "Which software subclasses include HilbertVis as a more specific instance?",
                    "What general classifications encompass HilbertVis within the software hierarchy?"
                ],
                "Valid CQ": [
                    "Is it required that a HilbertVis includes at least one data input that has a format specification of GFF?",
                    "Does HilbertVis necessarily involve a data input that both represents data and includes the GFF format specification?",
                    "Must every specified data input for HilbertVis have its format specification set to GFF?",
                    "Is every HilbertVis instance required to be executed in at least one data visualization?",
                    "Can a HilbertVis exist without being associated with any data visualization?",
                    "Does the definition of HilbertVis ensure execution within the context of a data visualization?",
                    "Must every HilbertVis have at least one specified data output that is both a graph plot and has a format specification in an image format?",
                    "Is the presence of a specified data output that is a graph plot with an associated image format specification required for an entity to be classified as HilbertVis?",
                    "Can a HilbertVis exist without providing a graph plot as a specified data output in an image format?",
                    "Must every HilbertVis have at least one data input characterized both as data and having a format specification in BED?",
                    "Can HilbertVis possess a specified data input without that input conforming to the BED format specification?",
                    "Is it necessary that any instance of HilbertVis includes a data input with an explicit BED format specification?",
                    "Is every instance of HilbertVis required to be encoded in at least one R language?",
                    "Can a HilbertVis exist without being encoded in any R language?",
                    "Does the encoding property for HilbertVis necessarily involve an R language?",
                    "Is it required that a HilbertVis instance is executed in at least one data normalization process?",
                    "Does every HilbertVis necessarily associate with being executed in some form of data normalization?",
                    "Can there exist a HilbertVis that is not executed in any data normalization?"
                ],
                "type": "Type1"
            },
            "Single particle analysis": {
                "axiom": {
                    "subClassOf": [
                        "Image analysis"
                    ],
                    "propertyRestrictions": [
                        "[has topic some Structural biology]"
                    ]
                },
                "description": "Single particle analysis is a subclass of both Structure analysis and Image analysis, and is characterized by the requirement that it is related to the topic of Structural biology. It refers to an image processing technique that combines and analyzes multiple images of a particulate sample, such as proteins or viruses, to produce higher quality, interpretable images—typically used to enhance information obtained from low resolution methods like transmission electron microscopy (TEM).",
                "CQ": [
                    {
                        "axiom": "Single particle analysis subClassOf Structure analysis",
                        "CQ": [
                            "Is Single particle analysis included within the broader set of Structure analysis methods?",
                            "Which analytical approaches are more specific than Structure analysis, such as Single particle analysis?",
                            "What higher-level analysis categories encompass Single particle analysis?"
                        ]
                    },
                    {
                        "axiom": "Single particle analysis subClassOf Image analysis",
                        "CQ": [
                            "Is Single particle analysis categorized as a specific form of Image analysis?",
                            "Which types of Image analysis include Single particle analysis as a narrower concept?",
                            "What broader analytical domains encompass Single particle analysis?"
                        ]
                    },
                    {
                        "axiom": "Single particle analysis propertyRestrictions [has topic some Structural biology]",
                        "CQ": [
                            "Is it required that single particle analysis has at least one topic related to structural biology?",
                            "Can single particle analysis be associated with a topic that is not structural biology?",
                            "Must every instance of single particle analysis involve structural biology as a topic?"
                        ]
                    }
                ],
                "removed axiom": "Single particle analysis subClassOf Structure analysis",
                "Target CQ": [
                    "Is Single particle analysis included within the broader set of Structure analysis methods?",
                    "Which analytical approaches are more specific than Structure analysis, such as Single particle analysis?",
                    "What higher-level analysis categories encompass Single particle analysis?"
                ],
                "Valid CQ": [
                    "Is Single particle analysis categorized as a specific form of Image analysis?",
                    "Which types of Image analysis include Single particle analysis as a narrower concept?",
                    "What broader analytical domains encompass Single particle analysis?",
                    "Is it required that single particle analysis has at least one topic related to structural biology?",
                    "Can single particle analysis be associated with a topic that is not structural biology?",
                    "Must every instance of single particle analysis involve structural biology as a topic?"
                ],
                "type": "Type1"
            },
            "Gene annotation format": {
                "axiom": {
                    "subClassOf": [
                        "Format (typed)"
                    ],
                    "propertyRestrictions": []
                },
                "description": "Gene annotation format is a subclass of Format (typed) that is specifically used as the format of some Gene report. According to its definition, it represents the format of a report concerning a particular locus, gene, gene system, or groups of genes. This ensures that any Gene annotation format is necessarily associated with documenting information about genetic entities in a structured manner.",
                "CQ": [
                    {
                        "axiom": "Gene annotation format subClassOf Format (typed)",
                        "CQ": [
                            "Does Gene annotation format represent a more specific type under the general category of Format?",
                            "Which formats have Gene annotation format as a specialized form within their structure?",
                            "To which broader format categories can Gene annotation format be classified?"
                        ]
                    },
                    {
                        "axiom": "Gene annotation format propertyRestrictions [is format of some Gene report]",
                        "CQ": [
                            "Is every gene annotation format necessarily associated with at least one gene report through the 'is format of' property?",
                            "Does a gene annotation format serve as the format specifically for some gene report?",
                            "For a given gene annotation format, can we identify at least one gene report that it formats by means of the 'is format of' relationship?"
                        ]
                    }
                ],
                "removed axiom": "Gene annotation format propertyRestrictions [is format of some Gene report]",
                "Target CQ": [
                    "Is every gene annotation format necessarily associated with at least one gene report through the 'is format of' property?",
                    "Does a gene annotation format serve as the format specifically for some gene report?",
                    "For a given gene annotation format, can we identify at least one gene report that it formats by means of the 'is format of' relationship?"
                ],
                "Valid CQ": [
                    "Does Gene annotation format represent a more specific type under the general category of Format?",
                    "Which formats have Gene annotation format as a specialized form within their structure?",
                    "To which broader format categories can Gene annotation format be classified?"
                ],
                "type": "Type1"
            },
            "50-50 MANOVA": {
                "axiom": {
                    "subClassOf": [
                        "software"
                    ],
                    "propertyRestrictions": [
                        "[is encoded in some R language]",
                        "[implements some 50-50 MANOVA algorithm]",
                        "[is encoded in some MATLAB language]"
                    ]
                },
                "description": "50-50 MANOVA is defined as a subclass of software. Members of this class are characterized by being outputs of some software publishing process involving Matforsk as a participant. They implement some 50-50 MANOVA algorithm, and are encoded in either R or MATLAB languages. This formalization captures 50-50 MANOVA as specialized analytical software produced in collaborative contexts with Matforsk, leveraging both R and MATLAB for implementation.",
                "CQ": [
                    {
                        "axiom": "50-50 MANOVA subClassOf software",
                        "CQ": [
                            "Is 50-50 MANOVA categorized under the broader class of software?",
                            "Which subclasses fall within the software category, and does 50-50 MANOVA appear among them?",
                            "What higher-level categories encompass 50-50 MANOVA?"
                        ]
                    },
                    {
                        "axiom": "50-50 MANOVA propertyRestrictions [output of some (software publishing process and [has participant hasValue Matforsk])]",
                        "CQ": [
                            "Does the output of a 50-50 MANOVA always involve a software publishing process that includes Matforsk as a participant?",
                            "Is it possible for the output of a 50-50 MANOVA to result from a software publishing process that does not have Matforsk as a participant?",
                            "Must every output of a 50-50 MANOVA arise from both a software publishing process and guarantee Matforsk's participation?"
                        ]
                    },
                    {
                        "axiom": "50-50 MANOVA propertyRestrictions [is encoded in some R language]",
                        "CQ": [
                            "Is it required that 50-50 MANOVA is always encoded in some R language?",
                            "Can 50-50 MANOVA exist without being encoded in an R language?",
                            "Does every instance of 50-50 MANOVA entail encoding in at least one R language?"
                        ]
                    },
                    {
                        "axiom": "50-50 MANOVA propertyRestrictions [implements some 50-50 MANOVA algorithm]",
                        "CQ": [
                            "Does every 50-50 MANOVA propertyRestriction necessarily implement at least one 50-50 MANOVA algorithm?",
                            "Is it required for a 50-50 MANOVA propertyRestriction to have the ‘implements’ relationship with a 50-50 MANOVA algorithm?",
                            "Can a 50-50 MANOVA propertyRestriction exist without implementing any 50-50 MANOVA algorithm?"
                        ]
                    },
                    {
                        "axiom": "50-50 MANOVA propertyRestrictions [is encoded in some MATLAB language]",
                        "CQ": [
                            "Is it necessary for a 50-50 MANOVA property restriction to be encoded in at least one MATLAB language?",
                            "Does the ontology require that every 50-50 MANOVA property restriction utilize the 'is encoded in' property with some MATLAB language?",
                            "Can a 50-50 MANOVA property restriction exist without being encoded in any MATLAB language?"
                        ]
                    }
                ],
                "removed axiom": "50-50 MANOVA propertyRestrictions [output of some (software publishing process and [has participant hasValue Matforsk])]",
                "Target CQ": [
                    "Does the output of a 50-50 MANOVA always involve a software publishing process that includes Matforsk as a participant?",
                    "Is it possible for the output of a 50-50 MANOVA to result from a software publishing process that does not have Matforsk as a participant?",
                    "Must every output of a 50-50 MANOVA arise from both a software publishing process and guarantee Matforsk's participation?"
                ],
                "Valid CQ": [
                    "Is 50-50 MANOVA categorized under the broader class of software?",
                    "Which subclasses fall within the software category, and does 50-50 MANOVA appear among them?",
                    "What higher-level categories encompass 50-50 MANOVA?",
                    "Is it required that 50-50 MANOVA is always encoded in some R language?",
                    "Can 50-50 MANOVA exist without being encoded in an R language?",
                    "Does every instance of 50-50 MANOVA entail encoding in at least one R language?",
                    "Does every 50-50 MANOVA propertyRestriction necessarily implement at least one 50-50 MANOVA algorithm?",
                    "Is it required for a 50-50 MANOVA propertyRestriction to have the ‘implements’ relationship with a 50-50 MANOVA algorithm?",
                    "Can a 50-50 MANOVA propertyRestriction exist without implementing any 50-50 MANOVA algorithm?",
                    "Is it necessary for a 50-50 MANOVA property restriction to be encoded in at least one MATLAB language?",
                    "Does the ontology require that every 50-50 MANOVA property restriction utilize the 'is encoded in' property with some MATLAB language?",
                    "Can a 50-50 MANOVA property restriction exist without being encoded in any MATLAB language?"
                ],
                "type": "Type1"
            },
            "Immunoproteins, genes and antigens": {
                "axiom": {
                    "subClassOf": [
                        "Protein families"
                    ]
                },
                "description": "Immunoproteins, genes and antigens is a class defined as a subclass of both Protein families and Immunology. This class covers entities such as T cell receptors (TR), major histocompatibility complex (MHC), immunoglobulin superfamily (IgSF)/antibodies, and the major histocompatibility complex superfamily (MhcSF). It includes immunity-related genes, proteins, their ligands, and antigens involved in immune system function.",
                "CQ": [
                    {
                        "axiom": "Immunoproteins, genes and antigens subClassOf Protein families",
                        "CQ": [
                            "Are Immunoproteins, genes and antigens categorized as a type of Protein families?",
                            "Which subclasses fall under Protein families, and does this include Immunoproteins, genes and antigens?",
                            "Into which upper-level categories are Immunoproteins, genes and antigens classified?"
                        ]
                    },
                    {
                        "axiom": "Immunoproteins, genes and antigens subClassOf Immunology",
                        "CQ": [
                            "Are Immunoproteins, genes and antigens classified as a subgroup under Immunology?",
                            "Which classes fall under the broader category of Immunology, including Immunoproteins, genes and antigens?",
                            "What are the higher-level categories to which Immunoproteins, genes and antigens are assigned?"
                        ]
                    }
                ],
                "removed axiom": "Immunoproteins, genes and antigens subClassOf Immunology",
                "Target CQ": [
                    "Are Immunoproteins, genes and antigens classified as a subgroup under Immunology?",
                    "Which classes fall under the broader category of Immunology, including Immunoproteins, genes and antigens?",
                    "What are the higher-level categories to which Immunoproteins, genes and antigens are assigned?"
                ],
                "Valid CQ": [
                    "Are Immunoproteins, genes and antigens categorized as a type of Protein families?",
                    "Which subclasses fall under Protein families, and does this include Immunoproteins, genes and antigens?",
                    "Into which upper-level categories are Immunoproteins, genes and antigens classified?"
                ],
                "type": "Type1"
            },
            "Gene expression profile clustering": {
                "axiom": {
                    "subClassOf": [
                        "Clustering"
                    ],
                    "propertyRestrictions": [
                        "[has output some Processed microarray data]"
                    ]
                },
                "description": "Gene expression profile clustering is a subclass of both Clustering and Gene expression profile comparison. It involves performing cluster analysis specifically on gene expression (microarray) data, grouping similar gene expression profiles together. By axiom, any instance of Gene expression profile clustering must have as output some Processed microarray data. This class is used to formally represent analyses that discover patterns or groups within complex gene expression datasets.",
                "CQ": [
                    {
                        "axiom": "Gene expression profile clustering subClassOf Clustering",
                        "CQ": [
                            "Does gene expression profile clustering fall under the category of clustering?",
                            "What are the more specific forms of clustering that include gene expression profile clustering?",
                            "Which broader classification does gene expression profile clustering belong to?"
                        ]
                    },
                    {
                        "axiom": "Gene expression profile clustering subClassOf Gene expression profile comparison",
                        "CQ": [
                            "Does Gene expression profile clustering fall under the broader class of Gene expression profile comparison?",
                            "Which specific techniques are categorized as subclasses of Gene expression profile comparison, including Gene expression profile clustering?",
                            "What are the immediate parent concepts of Gene expression profile clustering in this ontology?"
                        ]
                    },
                    {
                        "axiom": "Gene expression profile clustering propertyRestrictions [has output some Processed microarray data]",
                        "CQ": [
                            "Does every gene expression profile clustering necessarily produce at least one output of processed microarray data?",
                            "Is it required that gene expression profile clustering leads to the availability of processed microarray data as an output?",
                            "Can there be a gene expression profile clustering without resulting in any processed microarray data as output?"
                        ]
                    }
                ],
                "removed axiom": "Gene expression profile clustering subClassOf Gene expression profile comparison",
                "Target CQ": [
                    "Does Gene expression profile clustering fall under the broader class of Gene expression profile comparison?",
                    "Which specific techniques are categorized as subclasses of Gene expression profile comparison, including Gene expression profile clustering?",
                    "What are the immediate parent concepts of Gene expression profile clustering in this ontology?"
                ],
                "Valid CQ": [
                    "Does gene expression profile clustering fall under the category of clustering?",
                    "What are the more specific forms of clustering that include gene expression profile clustering?",
                    "Which broader classification does gene expression profile clustering belong to?",
                    "Does every gene expression profile clustering necessarily produce at least one output of processed microarray data?",
                    "Is it required that gene expression profile clustering leads to the availability of processed microarray data as an output?",
                    "Can there be a gene expression profile clustering without resulting in any processed microarray data as output?"
                ],
                "type": "Type1"
            },
            "dat": {
                "axiom": {
                    "subClassOf": [
                        "Textual format"
                    ],
                    "propertyRestrictions": [
                        "[is format of some Microarray spots image]"
                    ]
                },
                "description": "dat is a format defined as a subclass of both Textual format and Gene expression report format, specifically used for representing Affymetrix data files containing raw image data. Members of this class serve as formats for at least one Microarray spots image, indicating their direct association with raw image outputs from microarray experiments. This formalization ensures that any instance of dat is recognized as a textual and gene expression report format, uniquely related to microarray spot images.",
                "CQ": [
                    {
                        "axiom": "dat subClassOf Textual format",
                        "CQ": [
                            "Is dat categorized under the broader class of Textual format?",
                            "Which instances are considered direct subclasses of Textual format, including dat?",
                            "To which upper-level classes is dat hierarchically related?"
                        ]
                    },
                    {
                        "axiom": "dat subClassOf Gene expression report format",
                        "CQ": [
                            "Does the dat format fall under the category of Gene expression report formats?",
                            "What are the specific formats classified as Gene expression report formats, including dat?",
                            "Which broader reporting format categories encompass dat?"
                        ]
                    },
                    {
                        "axiom": "dat propertyRestrictions [is format of some Microarray spots image]",
                        "CQ": [
                            "Is it required that propertyRestrictions has the format property with some Microarray spots image?",
                            "Does every instance of propertyRestrictions involve a format that includes at least one Microarray spots image?",
                            "Can propertyRestrictions exist without being the format of any Microarray spots image?"
                        ]
                    }
                ],
                "removed axiom": "dat subClassOf Gene expression report format",
                "Target CQ": [
                    "Does the dat format fall under the category of Gene expression report formats?",
                    "What are the specific formats classified as Gene expression report formats, including dat?",
                    "Which broader reporting format categories encompass dat?"
                ],
                "Valid CQ": [
                    "Is dat categorized under the broader class of Textual format?",
                    "Which instances are considered direct subclasses of Textual format, including dat?",
                    "To which upper-level classes is dat hierarchically related?",
                    "Is it required that propertyRestrictions has the format property with some Microarray spots image?",
                    "Does every instance of propertyRestrictions involve a format that includes at least one Microarray spots image?",
                    "Can propertyRestrictions exist without being the format of any Microarray spots image?"
                ],
                "type": "Type1"
            },
            "dasdna": {
                "axiom": {
                    "subClassOf": [
                        "XML"
                    ]
                },
                "description": "dasdna is a subclass of both XML and Sequence record format (XML), indicating that it is an XML-based sequence record format. Specifically, it refers to the DAS sequence (XML) format, which is restricted to nucleotide-only data. The use of this format is deprecated.",
                "CQ": [
                    {
                        "axiom": "dasdna subClassOf XML",
                        "CQ": [
                            "Is dasdna categorized under the broader class of XML?",
                            "Which subclasses fall under the XML category, such as dasdna?",
                            "What are the parent classes associated with dasdna?"
                        ]
                    },
                    {
                        "axiom": "dasdna subClassOf Sequence record format (XML)",
                        "CQ": [
                            "Is dasdna categorized as a specific type within Sequence record format (XML)?",
                            "What formats are considered narrower concepts under Sequence record format (XML), such as dasdna?",
                            "Which broader format classifications does dasdna fall under?"
                        ]
                    }
                ],
                "removed axiom": "dasdna subClassOf Sequence record format (XML)",
                "Target CQ": [
                    "Is dasdna categorized as a specific type within Sequence record format (XML)?",
                    "What formats are considered narrower concepts under Sequence record format (XML), such as dasdna?",
                    "Which broader format classifications does dasdna fall under?"
                ],
                "Valid CQ": [
                    "Is dasdna categorized under the broader class of XML?",
                    "Which subclasses fall under the XML category, such as dasdna?",
                    "What are the parent classes associated with dasdna?"
                ],
                "type": "Type1"
            },
            "pure dna": {
                "axiom": {
                    "subClassOf": [
                        "dna"
                    ]
                },
                "description": "pure dna is defined as a subclass of both dna and pure nucleotide. It represents an alphabet for a DNA sequence that may include ambiguous or unknown nucleotide positions, but does not allow any non-sequence characters. This ensures that pure dna sequences are composed strictly of nucleotides (with possible ambiguities), excluding all extraneous symbols.",
                "CQ": [
                    {
                        "axiom": "pure dna subClassOf dna",
                        "CQ": [
                            "Does pure dna fall under the general classification of dna?",
                            "Which forms of dna include pure dna as a specific type?",
                            "What broader categories encompass pure dna in the ontology?"
                        ]
                    },
                    {
                        "axiom": "pure dna subClassOf pure nucleotide",
                        "CQ": [
                            "Does pure dna qualify as an instance within the pure nucleotide category?",
                            "Which specific entities are classified under pure nucleotide, including pure dna?",
                            "To which broader classes is pure dna hierarchically associated?"
                        ]
                    }
                ],
                "removed axiom": "pure dna subClassOf pure nucleotide",
                "Target CQ": [
                    "Does pure dna qualify as an instance within the pure nucleotide category?",
                    "Which specific entities are classified under pure nucleotide, including pure dna?",
                    "To which broader classes is pure dna hierarchically associated?"
                ],
                "Valid CQ": [
                    "Does pure dna fall under the general classification of dna?",
                    "Which forms of dna include pure dna as a specific type?",
                    "What broader categories encompass pure dna in the ontology?"
                ],
                "type": "Type1"
            },
            "CAF": {
                "axiom": {
                    "subClassOf": [
                        "Textual format"
                    ]
                },
                "description": "CAF (Common Assembly Format) is a subclass of both Textual format and Sequence assembly format (text). It is a sequence assembly format that encodes information in text form, specifically designed to represent contigs, base-call qualities, and other metadata related to assembled genetic sequences. This formalization situates CAF within the hierarchy of textual data formats for sequence assembly, highlighting its structure and intended use for storing detailed assembly metadata.",
                "CQ": [
                    {
                        "axiom": "CAF subClassOf Textual format",
                        "CQ": [
                            "Does CAF fall under the category of Textual format?",
                            "What kinds of Textual format include CAF as a more specific type?",
                            "What broader categories encompass CAF in the ontology hierarchy?"
                        ]
                    },
                    {
                        "axiom": "CAF subClassOf Sequence assembly format (text)",
                        "CQ": [
                            "Does CAF fall under the general classification of Sequence assembly format?",
                            "What specific format types, such as CAF, are classified as subclasses of Sequence assembly format?",
                            "Which broader format categories include CAF as a more specific type?"
                        ]
                    }
                ],
                "removed axiom": "CAF subClassOf Sequence assembly format (text)",
                "Target CQ": [
                    "Does CAF fall under the general classification of Sequence assembly format?",
                    "What specific format types, such as CAF, are classified as subclasses of Sequence assembly format?",
                    "Which broader format categories include CAF as a more specific type?"
                ],
                "Valid CQ": [
                    "Does CAF fall under the category of Textual format?",
                    "What kinds of Textual format include CAF as a more specific type?",
                    "What broader categories encompass CAF in the ontology hierarchy?"
                ],
                "type": "Type1"
            },
            "Obsolete": {
                "axiom": {
                    "subClassOf": [
                        "Development status"
                    ],
                    "disjointWith": []
                },
                "description": "Obsolete is defined as a subclass of Development status, indicating it represents a specific developmental state. It is explicitly disjoint with Maintained, meaning an entity cannot simultaneously be classified as both Obsolete and Maintained. This ensures a clear distinction between entities that are no longer in active use or development (Obsolete) and those that continue to be supported or updated (Maintained).",
                "CQ": [
                    {
                        "axiom": "Obsolete subClassOf Development status",
                        "CQ": [
                            "Is Obsolete classified under the broader category of Development status?",
                            "What specific statuses are classified as subclasses of Development status, including Obsolete?",
                            "To which higher-level classes does Obsolete conceptually belong?"
                        ]
                    },
                    {
                        "axiom": "Obsolete disjointWith Maintained",
                        "CQ": [
                            "What logical separation is asserted between Obsolete and Maintained entities in the ontology?",
                            "Is it permitted for a resource to be classified as both Obsolete and Maintained?",
                            "Which classes are declared as disjoint with Maintained in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "Obsolete disjointWith Maintained",
                "Target CQ": [
                    "What logical separation is asserted between Obsolete and Maintained entities in the ontology?",
                    "Is it permitted for a resource to be classified as both Obsolete and Maintained?",
                    "Which classes are declared as disjoint with Maintained in the ontology?"
                ],
                "Valid CQ": [
                    "Is Obsolete classified under the broader category of Development status?",
                    "What specific statuses are classified as subclasses of Development status, including Obsolete?",
                    "To which higher-level classes does Obsolete conceptually belong?"
                ],
                "type": "Type1"
            },
            "quantsmooth": {
                "axiom": {
                    "subClassOf": [
                        "software"
                    ],
                    "propertyRestrictions": [
                        "[is encoded in some R language]",
                        "[is executed in some data visualization]",
                        "[has specified data output some Graph plot]"
                    ]
                },
                "description": "quantsmooth is defined as a subclass of software, characterized by several key attributes: it is implemented in the R language and operates within the context of data visualization. Members of this class must accept input in the form of either ILLUMINA data or Gene expression datasets, and the output generated is specifically a Graph plot. This ensures that any instance of quantsmooth is a piece of software for data visualization, encoded in R, designed to process biological datasets and produce graphical representations.",
                "CQ": [
                    {
                        "axiom": "quantsmooth subClassOf software",
                        "CQ": [
                            "Is quantsmooth included among the subclasses of software?",
                            "Which general categories encompass quantsmooth as a specialized type?",
                            "What software categories is quantsmooth classified under?"
                        ]
                    },
                    {
                        "axiom": "quantsmooth propertyRestrictions [is encoded in some R language]",
                        "CQ": [
                            "Is it required that Quantsmooth is encoded in at least one R language?",
                            "Can Quantsmooth have an encoding only in R language?",
                            "Does the encoding of Quantsmooth necessarily involve the R language in some capacity?"
                        ]
                    },
                    {
                        "axiom": "quantsmooth propertyRestrictions [is executed in some data visualization]",
                        "CQ": [
                            "Is it required that every instance of quantsmooth is executed in at least one data visualization?",
                            "Can a quantsmooth instance exist without being executed in any data visualization?",
                            "Does the definition of quantsmooth ensure that it must participate in some form of data visualization execution?"
                        ]
                    },
                    {
                        "axiom": "quantsmooth propertyRestrictions [has specified data input some (ILLUMINA data or Gene expression dataset)]",
                        "CQ": [
                            "Does quantsmooth require at least one specified data input that is either an ILLUMINA data or a Gene expression dataset?",
                            "Is it necessary for every instance of quantsmooth to work with a data input that is of type ILLUMINA data or Gene expression dataset?",
                            "Can quantsmooth have any specified data input that is not categorized as either ILLUMINA data or Gene expression dataset?"
                        ]
                    },
                    {
                        "axiom": "quantsmooth propertyRestrictions [has specified data output some Graph plot]",
                        "CQ": [
                            "Is it required that Quantsmooth must produce at least one specified data output that is a Graph plot?",
                            "Can Quantsmooth generate a specified data output other than a Graph plot?",
                            "Does Quantsmooth always provide a specified data output in the form of a Graph plot?"
                        ]
                    }
                ],
                "removed axiom": "quantsmooth propertyRestrictions [has specified data input some (ILLUMINA data or Gene expression dataset)]",
                "Target CQ": [
                    "Does quantsmooth require at least one specified data input that is either an ILLUMINA data or a Gene expression dataset?",
                    "Is it necessary for every instance of quantsmooth to work with a data input that is of type ILLUMINA data or Gene expression dataset?",
                    "Can quantsmooth have any specified data input that is not categorized as either ILLUMINA data or Gene expression dataset?"
                ],
                "Valid CQ": [
                    "Is quantsmooth included among the subclasses of software?",
                    "Which general categories encompass quantsmooth as a specialized type?",
                    "What software categories is quantsmooth classified under?",
                    "Is it required that Quantsmooth is encoded in at least one R language?",
                    "Can Quantsmooth have an encoding only in R language?",
                    "Does the encoding of Quantsmooth necessarily involve the R language in some capacity?",
                    "Is it required that every instance of quantsmooth is executed in at least one data visualization?",
                    "Can a quantsmooth instance exist without being executed in any data visualization?",
                    "Does the definition of quantsmooth ensure that it must participate in some form of data visualization execution?",
                    "Is it required that Quantsmooth must produce at least one specified data output that is a Graph plot?",
                    "Can Quantsmooth generate a specified data output other than a Graph plot?",
                    "Does Quantsmooth always provide a specified data output in the form of a Graph plot?"
                ],
                "type": "Type1"
            },
            "Smultron": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[is executed in some text editing]",
                        "[has version hasValue 3.5.1]",
                        "[has specified data input some (Ontology and [has format specification some Textual format])]",
                        "[has declared status some Latest release]",
                        "[has website homepage hasValue http://www.peterborgapps.com/smultron/]"
                    ]
                },
                "description": "Smultron is a subclass of software, specifically defined as an application that is executed in at least one text editing context. Each instance has the specific version 3.5.1 and is characterized as handling data inputs that are ontologies provided in some textual format. Smultron is declared to have the latest release status, and its official homepage is http://www.peterborgapps.com/smultron/.",
                "CQ": [
                    {
                        "axiom": "Smultron subClassOf software",
                        "CQ": [
                            "Is Smultron classified as a type of software?",
                            "Which entities are specified as subclasses under software, including Smultron?",
                            "What broader categories include Smultron within their classification?"
                        ]
                    },
                    {
                        "axiom": "Smultron propertyRestrictions [is executed in some text editing]",
                        "CQ": [
                            "Is it necessary for Smultron to be executed in at least one text editing environment?",
                            "Does the execution context of Smultron always involve a text editing activity?",
                            "Can Smultron exist without being performed in text editing scenarios?"
                        ]
                    },
                    {
                        "axiom": "Smultron propertyRestrictions [has version hasValue 3.5.1]",
                        "CQ": [
                            "Is every instance of Smultron required to have the property 'has version' with the value 3.5.1?",
                            "Can any Smultron exist without its 'has version' property set to 3.5.1?",
                            "Does the definition of Smultron exclude all versions except 3.5.1 for its 'has version' property?"
                        ]
                    },
                    {
                        "axiom": "Smultron propertyRestrictions [has specified data input some (Ontology and [has format specification some Textual format])]",
                        "CQ": [
                            "Must every Smultron have at least one specified data input that is both an Ontology and uses a Textual format as its format specification?",
                            "Is it possible for a Smultron to have a specified data input that does not satisfy being an Ontology with a Textual format as its format specification?",
                            "Are all specified data inputs of Smultron required to have the format specification of Textual format if they are Ontologies?"
                        ]
                    },
                    {
                        "axiom": "Smultron propertyRestrictions [has declared status some Latest release]",
                        "CQ": [
                            "Must every instance of Smultron have at least one declared status corresponding to a Latest release?",
                            "Can there exist a Smultron that does not have its declared status set to Latest release?",
                            "Is it required for Smultron to be linked via has declared status to some entity categorized as Latest release?"
                        ]
                    },
                    {
                        "axiom": "Smultron propertyRestrictions [has website homepage hasValue http://www.peterborgapps.com/smultron/]",
                        "CQ": [
                            "Is Smultron required to have the website homepage value set to http://www.peterborgapps.com/smultron/?",
                            "Does every instance of Smultron have the website homepage http://www.peterborgapps.com/smultron/?",
                            "Can a Smultron entity have a website homepage other than http://www.peterborgapps.com/smultron/?"
                        ]
                    }
                ],
                "removed axiom": "Smultron subClassOf software",
                "Target CQ": [
                    "Is Smultron classified as a type of software?",
                    "Which entities are specified as subclasses under software, including Smultron?",
                    "What broader categories include Smultron within their classification?"
                ],
                "Valid CQ": [
                    "Is it necessary for Smultron to be executed in at least one text editing environment?",
                    "Does the execution context of Smultron always involve a text editing activity?",
                    "Can Smultron exist without being performed in text editing scenarios?",
                    "Is every instance of Smultron required to have the property 'has version' with the value 3.5.1?",
                    "Can any Smultron exist without its 'has version' property set to 3.5.1?",
                    "Does the definition of Smultron exclude all versions except 3.5.1 for its 'has version' property?",
                    "Must every Smultron have at least one specified data input that is both an Ontology and uses a Textual format as its format specification?",
                    "Is it possible for a Smultron to have a specified data input that does not satisfy being an Ontology with a Textual format as its format specification?",
                    "Are all specified data inputs of Smultron required to have the format specification of Textual format if they are Ontologies?",
                    "Must every instance of Smultron have at least one declared status corresponding to a Latest release?",
                    "Can there exist a Smultron that does not have its declared status set to Latest release?",
                    "Is it required for Smultron to be linked via has declared status to some entity categorized as Latest release?",
                    "Is Smultron required to have the website homepage value set to http://www.peterborgapps.com/smultron/?",
                    "Does every instance of Smultron have the website homepage http://www.peterborgapps.com/smultron/?",
                    "Can a Smultron entity have a website homepage other than http://www.peterborgapps.com/smultron/?"
                ],
                "type": "Type1"
            },
            "CDF binary format": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[is published by hasValue Affymetrix]"
                    ]
                },
                "description": "CDF binary format is defined as a subclass of Binary format and is specifically published by Affymetrix. This class represents the binary variant of the CDF format; due to historical uncertainty about the format's original specification (ASCII or binary), this class has been clearly designated for the binary version, while a separate class (CDF ASCII format) exists for the ASCII variant.",
                "CQ": [
                    {
                        "axiom": "CDF binary format subClassOf Binary format",
                        "CQ": [
                            "Is CDF binary format categorized as a subclass of Binary format?",
                            "Which types are encompassed by the Binary format class, and does this include CDF binary format?",
                            "What are the broader format categories that include CDF binary format?"
                        ]
                    },
                    {
                        "axiom": "CDF binary format propertyRestrictions [is published by hasValue Affymetrix]",
                        "CQ": [
                            "Is every CDF binary format necessarily associated with being published specifically by Affymetrix?",
                            "Can a CDF binary format be considered valid if it is not published by Affymetrix?",
                            "Is the value of the publishing entity for any CDF binary format always restricted to Affymetrix?"
                        ]
                    }
                ],
                "removed axiom": "CDF binary format subClassOf Binary format",
                "Target CQ": [
                    "Is CDF binary format categorized as a subclass of Binary format?",
                    "Which types are encompassed by the Binary format class, and does this include CDF binary format?",
                    "What are the broader format categories that include CDF binary format?"
                ],
                "Valid CQ": [
                    "Is every CDF binary format necessarily associated with being published specifically by Affymetrix?",
                    "Can a CDF binary format be considered valid if it is not published by Affymetrix?",
                    "Is the value of the publishing entity for any CDF binary format always restricted to Affymetrix?"
                ],
                "type": "Type1"
            },
            "Ontology format": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[is format of some Ontology]"
                    ]
                },
                "description": "Ontology format is defined as a subclass of Format (typed) and is characterized by the property that it is the format of at least one Ontology. Members of this class represent formats specifically used for ontologies, ensuring a clear association between an ontology and its format type.",
                "CQ": [
                    {
                        "axiom": "Ontology format subClassOf Format (typed)",
                        "CQ": [
                            "Is Ontology format categorized under Format?",
                            "Which types are classified as specializations of Format, such as Ontology format?",
                            "What broader classes does Ontology format fall within?"
                        ]
                    },
                    {
                        "axiom": "Ontology format propertyRestrictions [is format of some Ontology]",
                        "CQ": [
                            "Does every property restriction necessarily serve as the format of at least one ontology?",
                            "Is it required that a property restriction be associated with some ontology through the 'is format of' relationship?",
                            "For each property restriction, does there exist an ontology of which it is the format?"
                        ]
                    }
                ],
                "removed axiom": "Ontology format subClassOf Format (typed)",
                "Target CQ": [
                    "Is Ontology format categorized under Format?",
                    "Which types are classified as specializations of Format, such as Ontology format?",
                    "What broader classes does Ontology format fall within?"
                ],
                "Valid CQ": [
                    "Does every property restriction necessarily serve as the format of at least one ontology?",
                    "Is it required that a property restriction be associated with some ontology through the 'is format of' relationship?",
                    "For each property restriction, does there exist an ontology of which it is the format?"
                ],
                "type": "Type1"
            },
            "Endnote": {
                "axiom": {
                    "subClassOf": [
                        "software"
                    ],
                    "propertyRestrictions": [
                        "[has interface some graphical user interface]",
                        "[has license some Proprietary commercial software license]",
                        "[has declared status some Live]",
                        "[has website homepage hasValue http://www.endnote.com/]",
                        "[output of some (software publishing process and [has participant hasValue Thompson Reuters])]"
                    ]
                },
                "description": "Endnote is a subclass of software defined as citation management software with a graphical user interface, operating under a proprietary commercial software license. It maintains a live status and has its official homepage at http://www.endnote.com/. The software is used within the domain of citation management and is an output of a software publishing process that involves Thomson Reuters as a participant. These axioms formally characterize Endnote as an actively maintained, proprietary, GUI-based citation management tool linked to Thomson Reuters and distributed via its dedicated website.",
                "CQ": [
                    {
                        "axiom": "Endnote subClassOf software",
                        "CQ": [
                            "Does Endnote fall under the broader classification of software?",
                            "What specific types are listed as subclasses of software, including Endnote?",
                            "Which higher-level categories include Endnote within their hierarchy?"
                        ]
                    },
                    {
                        "axiom": "Endnote propertyRestrictions [has interface some graphical user interface]",
                        "CQ": [
                            "Does every Endnote property restriction require the inclusion of at least one graphical user interface via the 'has interface' property?",
                            "Is it necessary for Endnote to have an interface that is a graphical user interface according to its property restrictions?",
                            "Can an Endnote property restriction exist without specifying the 'has interface' relation to a graphical user interface?"
                        ]
                    },
                    {
                        "axiom": "Endnote propertyRestrictions [has license some Proprietary commercial software license]",
                        "CQ": [
                            "Is it required that Endnote has at least one license which is a Proprietary commercial software license?",
                            "Does Endnote necessarily possess a license that falls under the category of Proprietary commercial software license?",
                            "Can Endnote exist without having any association to a Proprietary commercial software license through its license property?"
                        ]
                    },
                    {
                        "axiom": "Endnote propertyRestrictions [has declared status some Live]",
                        "CQ": [
                            "Must every Endnote have at least one declared status that is Live?",
                            "Is it required that Endnote instances possess a declared status property with some instance classified as Live?",
                            "Can an Endnote exist without any declared status of type Live?"
                        ]
                    },
                    {
                        "axiom": "Endnote propertyRestrictions [has website homepage hasValue http://www.endnote.com/]",
                        "CQ": [
                            "Is every instance classified as Endnote required to have the website homepage property with the value http://www.endnote.com/?",
                            "Is it true that only http://www.endnote.com/ can be the website homepage for Endnote entities?",
                            "Does being an Endnote entity necessarily entail possessing the website homepage http://www.endnote.com/?"
                        ]
                    },
                    {
                        "axiom": "Endnote propertyRestrictions [is executed in some citation management]",
                        "CQ": [
                            "Does every Endnote instance require execution within at least one citation management context?",
                            "Is it necessary for Endnote to be associated with the execution property in relation to citation management systems?",
                            "Can an Endnote be executed independently of any citation management environment?"
                        ]
                    },
                    {
                        "axiom": "Endnote propertyRestrictions [output of some (software publishing process and [has participant hasValue Thompson Reuters])]",
                        "CQ": [
                            "Does an Endnote propertyRestriction require output from a software publishing process that includes Thompson Reuters as a participant?",
                            "Is it necessary for Endnote propertyRestrictions to have outputs related specifically to software publishing processes involving Thompson Reuters?",
                            "Are all outputs associated with Endnote propertyRestrictions restricted to software publishing processes where Thompson Reuters participates?"
                        ]
                    }
                ],
                "removed axiom": "Endnote propertyRestrictions [is executed in some citation management]",
                "Target CQ": [
                    "Does every Endnote instance require execution within at least one citation management context?",
                    "Is it necessary for Endnote to be associated with the execution property in relation to citation management systems?",
                    "Can an Endnote be executed independently of any citation management environment?"
                ],
                "Valid CQ": [
                    "Does Endnote fall under the broader classification of software?",
                    "What specific types are listed as subclasses of software, including Endnote?",
                    "Which higher-level categories include Endnote within their hierarchy?",
                    "Does every Endnote property restriction require the inclusion of at least one graphical user interface via the 'has interface' property?",
                    "Is it necessary for Endnote to have an interface that is a graphical user interface according to its property restrictions?",
                    "Can an Endnote property restriction exist without specifying the 'has interface' relation to a graphical user interface?",
                    "Is it required that Endnote has at least one license which is a Proprietary commercial software license?",
                    "Does Endnote necessarily possess a license that falls under the category of Proprietary commercial software license?",
                    "Can Endnote exist without having any association to a Proprietary commercial software license through its license property?",
                    "Must every Endnote have at least one declared status that is Live?",
                    "Is it required that Endnote instances possess a declared status property with some instance classified as Live?",
                    "Can an Endnote exist without any declared status of type Live?",
                    "Is every instance classified as Endnote required to have the website homepage property with the value http://www.endnote.com/?",
                    "Is it true that only http://www.endnote.com/ can be the website homepage for Endnote entities?",
                    "Does being an Endnote entity necessarily entail possessing the website homepage http://www.endnote.com/?",
                    "Does an Endnote propertyRestriction require output from a software publishing process that includes Thompson Reuters as a participant?",
                    "Is it necessary for Endnote propertyRestrictions to have outputs related specifically to software publishing processes involving Thompson Reuters?",
                    "Are all outputs associated with Endnote propertyRestrictions restricted to software publishing processes where Thompson Reuters participates?"
                ],
                "type": "Type1"
            },
            "PubChem bioassay ID": {
                "axiom": {
                    "subClassOf": [
                        "Identifier (typed)"
                    ]
                },
                "description": "PubChem bioassay ID is a subclass of both Identifier (typed) and PubChem ID, indicating it is a specific type of identifier used within the PubChem resource. It is defined as the identifier assigned to an assay entry in the PubChem database, enabling unambiguous reference to bioassays curated by PubChem.",
                "CQ": [
                    {
                        "axiom": "PubChem bioassay ID subClassOf Identifier (typed)",
                        "CQ": [
                            "Does PubChem bioassay ID represent a specialized form of Identifier (typed)?",
                            "Which identifiers encompass PubChem bioassay ID as a more specific type?",
                            "Under which higher-level identifier categories does PubChem bioassay ID fall?"
                        ]
                    },
                    {
                        "axiom": "PubChem bioassay ID subClassOf PubChem ID",
                        "CQ": [
                            "Is every PubChem bioassay ID categorized under PubChem ID?",
                            "Which identifiers fall under the broader class of PubChem ID, including PubChem bioassay ID?",
                            "What are the parent categories of PubChem bioassay ID?"
                        ]
                    }
                ],
                "removed axiom": "PubChem bioassay ID subClassOf PubChem ID",
                "Target CQ": [
                    "Is every PubChem bioassay ID categorized under PubChem ID?",
                    "Which identifiers fall under the broader class of PubChem ID, including PubChem bioassay ID?",
                    "What are the parent categories of PubChem bioassay ID?"
                ],
                "Valid CQ": [
                    "Does PubChem bioassay ID represent a specialized form of Identifier (typed)?",
                    "Which identifiers encompass PubChem bioassay ID as a more specific type?",
                    "Under which higher-level identifier categories does PubChem bioassay ID fall?"
                ],
                "type": "Type1"
            },
            "Surface rendering": {
                "axiom": {
                    "subClassOf": [
                        "Protein surface calculation"
                    ]
                },
                "description": "Surface rendering is defined as a subclass of both Structure visualisation and Protein surface calculation. It involves calculating the positions of dots, each specified by three coordinates (x, y, z) and typically a color, which are homogeneously distributed over the surface of a molecule. This process aids in the visual representation and analysis of molecular surfaces.",
                "CQ": [
                    {
                        "axiom": "Surface rendering subClassOf Structure visualisation",
                        "CQ": [
                            "Is Surface rendering categorized under the broader class of Structure visualisation?",
                            "What are the specific subclasses encompassed by Structure visualisation such as Surface rendering?",
                            "Under which higher-level visualisation categories can Surface rendering be classified?"
                        ]
                    },
                    {
                        "axiom": "Surface rendering subClassOf Protein surface calculation",
                        "CQ": [
                            "Is Surface rendering categorized as a specialized form of Protein surface calculation?",
                            "Which processes are identified as subtypes of Protein surface calculation, such as Surface rendering?",
                            "Under which higher-level process is Surface rendering classified?"
                        ]
                    }
                ],
                "removed axiom": "Surface rendering subClassOf Structure visualisation",
                "Target CQ": [
                    "Is Surface rendering categorized under the broader class of Structure visualisation?",
                    "What are the specific subclasses encompassed by Structure visualisation such as Surface rendering?",
                    "Under which higher-level visualisation categories can Surface rendering be classified?"
                ],
                "Valid CQ": [
                    "Is Surface rendering categorized as a specialized form of Protein surface calculation?",
                    "Which processes are identified as subtypes of Protein surface calculation, such as Surface rendering?",
                    "Under which higher-level process is Surface rendering classified?"
                ],
                "type": "Type1"
            },
            "Text mining": {
                "axiom": {
                    "subClassOf": [
                        "Analysis"
                    ],
                    "propertyRestrictions": [
                        "[has input some Report]",
                        "[has output some Text mining report]"
                    ]
                },
                "description": "Text mining is a subclass of Analysis, defined as the process of analyzing text—typically biomedical and informatics literature—to extract information. Formally, any instance of text mining operates on some input that is a Report, pertains to a topic within Data mining, and produces as output a Text mining report. This class captures methodologies and systems that utilize reports as input and focus on extracting structured data or insights from textual content related to data mining.",
                "CQ": [
                    {
                        "axiom": "Text mining subClassOf Analysis",
                        "CQ": [
                            "Is Text mining classified as a specialized form of Analysis?",
                            "What are the specific subcategories under Analysis, such as Text mining?",
                            "To which higher-level categories does Text mining belong?"
                        ]
                    },
                    {
                        "axiom": "Text mining propertyRestrictions [has input some Report]",
                        "CQ": [
                            "Can every instance of Text mining be associated with at least one Report as input?",
                            "Is it required that a Text mining process uses a Report as an input?",
                            "Does the definition of Text mining ensure that it operates only when a Report is provided as input?"
                        ]
                    },
                    {
                        "axiom": "Text mining propertyRestrictions [has topic some Data mining]",
                        "CQ": [
                            "Is every instance of Text mining necessarily associated with at least one topic that is Data mining?",
                            "Does Text mining require the presence of the has topic relation to Data mining in its definition?",
                            "Can Text mining exist without having Data mining as a topic?"
                        ]
                    },
                    {
                        "axiom": "Text mining propertyRestrictions [has output some Text mining report]",
                        "CQ": [
                            "Is it required that every Text mining process produces at least one output classified as a Text mining report?",
                            "Does the property 'has output' for Text mining always involve the existence of a Text mining report?",
                            "Can a Text mining activity exist without associating any output with a Text mining report?"
                        ]
                    }
                ],
                "removed axiom": "Text mining propertyRestrictions [has topic some Data mining]",
                "Target CQ": [
                    "Is every instance of Text mining necessarily associated with at least one topic that is Data mining?",
                    "Does Text mining require the presence of the has topic relation to Data mining in its definition?",
                    "Can Text mining exist without having Data mining as a topic?"
                ],
                "Valid CQ": [
                    "Is Text mining classified as a specialized form of Analysis?",
                    "What are the specific subcategories under Analysis, such as Text mining?",
                    "To which higher-level categories does Text mining belong?",
                    "Can every instance of Text mining be associated with at least one Report as input?",
                    "Is it required that a Text mining process uses a Report as an input?",
                    "Does the definition of Text mining ensure that it operates only when a Report is provided as input?",
                    "Is it required that every Text mining process produces at least one output classified as a Text mining report?",
                    "Does the property 'has output' for Text mining always involve the existence of a Text mining report?",
                    "Can a Text mining activity exist without associating any output with a Text mining report?"
                ],
                "type": "Type1"
            },
            "FreeBSD": {
                "axiom": {
                    "subClassOf": [
                        "software license"
                    ],
                    "propertyRestrictions": [
                        "[is compatible license of some GNU GPL v2]",
                        "[has clause some Source code available]",
                        "[has clause some derivative software allowed]",
                        "[is compatible license of some GNU GPL v3]"
                    ]
                },
                "description": "FreeBSD is defined as a subclass of software license and is compatible with both GNU GPL v2 and GNU GPL v3 licenses. This license includes several clauses: the requirement that source code must be available, that distribution must include notices, and that derivative software is permitted. These characteristics ensure that FreeBSD enables broad software reuse and distribution while maintaining attribution and allowing for the creation of derivative works.",
                "CQ": [
                    {
                        "axiom": "FreeBSD subClassOf software license",
                        "CQ": [
                            "What are the subclasses of software license, and does FreeBSD fall under them?",
                            "Is FreeBSD categorized as a software license within the ontology structure?",
                            "Which broader types include FreeBSD as a specialized instance, specifically in the context of software licenses?"
                        ]
                    },
                    {
                        "axiom": "FreeBSD propertyRestrictions [is compatible license of some GNU GPL v2]",
                        "CQ": [
                            "Is every instance of FreeBSD associated with at least one license that is compatible with GNU GPL v2?",
                            "Does FreeBSD necessarily have a property indicating compatibility with the GNU GPL v2 license?",
                            "Can FreeBSD exist without being the compatible license of any instance of GNU GPL v2?"
                        ]
                    },
                    {
                        "axiom": "FreeBSD propertyRestrictions [has clause some Source code available]",
                        "CQ": [
                            "Is it required that FreeBSD possesses at least one clause specifying that source code is available?",
                            "Does FreeBSD have property 'has clause' with a value constrained to indicate the availability of source code?",
                            "Can FreeBSD be described without including a clause that refers to the availability of source code?"
                        ]
                    },
                    {
                        "axiom": "FreeBSD propertyRestrictions [has clause some Distribution with notices]",
                        "CQ": [
                            "Is it required that every FreeBSD instance has at least one clause associated with a distribution that includes notices?",
                            "Can FreeBSD possess a clause if it is not linked to any distribution with notices?",
                            "Does FreeBSD necessarily have a relationship via ‘has clause’ to some distribution entity that contains notices?"
                        ]
                    },
                    {
                        "axiom": "FreeBSD propertyRestrictions [has clause some derivative software allowed]",
                        "CQ": [
                            "Is FreeBSD required to have at least one clause permitting derivative software?",
                            "Must FreeBSD's property restrictions include allowance for derivative software under some circumstances?",
                            "Does the presence of a clause allowing derivative software suffice for FreeBSD to meet its property restriction requirements?"
                        ]
                    },
                    {
                        "axiom": "FreeBSD propertyRestrictions [is compatible license of some GNU GPL v3]",
                        "CQ": [
                            "Is it required for FreeBSD to be compatible with at least one license that is GNU GPL v3?",
                            "Does FreeBSD necessarily have a compatible license relationship with GNU GPL v3?",
                            "Can FreeBSD exist without being compatible with any instance of GNU GPL v3?"
                        ]
                    }
                ],
                "removed axiom": "FreeBSD propertyRestrictions [has clause some Distribution with notices]",
                "Target CQ": [
                    "Is it required that every FreeBSD instance has at least one clause associated with a distribution that includes notices?",
                    "Can FreeBSD possess a clause if it is not linked to any distribution with notices?",
                    "Does FreeBSD necessarily have a relationship via ‘has clause’ to some distribution entity that contains notices?"
                ],
                "Valid CQ": [
                    "What are the subclasses of software license, and does FreeBSD fall under them?",
                    "Is FreeBSD categorized as a software license within the ontology structure?",
                    "Which broader types include FreeBSD as a specialized instance, specifically in the context of software licenses?",
                    "Is every instance of FreeBSD associated with at least one license that is compatible with GNU GPL v2?",
                    "Does FreeBSD necessarily have a property indicating compatibility with the GNU GPL v2 license?",
                    "Can FreeBSD exist without being the compatible license of any instance of GNU GPL v2?",
                    "Is it required that FreeBSD possesses at least one clause specifying that source code is available?",
                    "Does FreeBSD have property 'has clause' with a value constrained to indicate the availability of source code?",
                    "Can FreeBSD be described without including a clause that refers to the availability of source code?",
                    "Is FreeBSD required to have at least one clause permitting derivative software?",
                    "Must FreeBSD's property restrictions include allowance for derivative software under some circumstances?",
                    "Does the presence of a clause allowing derivative software suffice for FreeBSD to meet its property restriction requirements?",
                    "Is it required for FreeBSD to be compatible with at least one license that is GNU GPL v3?",
                    "Does FreeBSD necessarily have a compatible license relationship with GNU GPL v3?",
                    "Can FreeBSD exist without being compatible with any instance of GNU GPL v3?"
                ],
                "type": "Type1"
            },
            "Splice transcript prediction": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has topic some Gene structure]"
                    ]
                },
                "description": "Splice transcript prediction is a subclass of Splicing model analysis, focused on the prediction of splicing alternatives or transcript isoforms through the analysis of sequence data. Members of this class are associated with topics related to gene structure, indicating that predictions pertain to the organization and variation of genes at the transcript level.",
                "CQ": [
                    {
                        "axiom": "Splice transcript prediction subClassOf Splicing model analysis",
                        "CQ": [
                            "Is Splicing model analysis a direct superclass of Splice transcript prediction?",
                            "Which analysis types are classified under Splicing model analysis, such as Splice transcript prediction?",
                            "Under which broader analysis categories does Splice transcript prediction fall?"
                        ]
                    },
                    {
                        "axiom": "Splice transcript prediction propertyRestrictions [has topic some Gene structure]",
                        "CQ": [
                            "Is it required that every splice transcript prediction is associated with at least one gene structure through the 'has topic' property?",
                            "Can a splice transcript prediction exist without having the 'has topic' relation to a gene structure?",
                            "Does the 'has topic' property for splice transcript prediction necessarily include a gene structure as its value?"
                        ]
                    }
                ],
                "removed axiom": "Splice transcript prediction subClassOf Splicing model analysis",
                "Target CQ": [
                    "Is Splicing model analysis a direct superclass of Splice transcript prediction?",
                    "Which analysis types are classified under Splicing model analysis, such as Splice transcript prediction?",
                    "Under which broader analysis categories does Splice transcript prediction fall?"
                ],
                "Valid CQ": [
                    "Is it required that every splice transcript prediction is associated with at least one gene structure through the 'has topic' property?",
                    "Can a splice transcript prediction exist without having the 'has topic' relation to a gene structure?",
                    "Does the 'has topic' property for splice transcript prediction necessarily include a gene structure as its value?"
                ],
                "type": "Type1"
            },
            "mspcrunch": {
                "axiom": {
                    "subClassOf": [
                        "Textual format"
                    ]
                },
                "description": "mspcrunch is defined as a subclass of both Textual format and Database hits (sequence) format. It represents the format used for results produced by sequence database searches utilizing a variant of MSPCrunch. This class captures result formats that are textual and specifically designed to document database hit information from MSPCrunch-based search tools.",
                "CQ": [
                    {
                        "axiom": "mspcrunch subClassOf Textual format",
                        "CQ": [
                            "Is mspcrunch categorized as a subtype of Textual format?",
                            "Which specific types fall under the broader class of Textual format, including mspcrunch?",
                            "What higher-level format classes does mspcrunch inherit from?"
                        ]
                    },
                    {
                        "axiom": "mspcrunch subClassOf Database hits (sequence) format",
                        "CQ": [
                            "Is mspcrunch a specific instance within the broader category of Database hits (sequence) format?",
                            "Which formats are defined as more specialized than Database hits (sequence) format, such as mspcrunch?",
                            "What overarching categories does mspcrunch fall under within sequence data formats?"
                        ]
                    }
                ],
                "removed axiom": "mspcrunch subClassOf Database hits (sequence) format",
                "Target CQ": [
                    "Is mspcrunch a specific instance within the broader category of Database hits (sequence) format?",
                    "Which formats are defined as more specialized than Database hits (sequence) format, such as mspcrunch?",
                    "What overarching categories does mspcrunch fall under within sequence data formats?"
                ],
                "Valid CQ": [
                    "Is mspcrunch categorized as a subtype of Textual format?",
                    "Which specific types fall under the broader class of Textual format, including mspcrunch?",
                    "What higher-level format classes does mspcrunch inherit from?"
                ],
                "type": "Type1"
            },
            "Query and retrieval": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has output some data]",
                        "[has topic some Data search, query and retrieval]"
                    ]
                },
                "description": "Query and retrieval is a subclass of information processing that focuses on searching or querying data resources to retrieve entries or annotations. Members of this class produce some form of data as output and are concerned specifically with topics related to data search, query, and retrieval. This formalization ensures that any process classified under query and retrieval involves both the act of querying/searching and the acquisition of data or annotations from relevant data resources.",
                "CQ": [
                    {
                        "axiom": "Query and retrieval subClassOf information processing",
                        "CQ": [
                            "Does Query and retrieval fall under the broader classification of information processing?",
                            "Which specific categories are encompassed within information processing, including Query and retrieval?",
                            "What higher-level concepts include Query and retrieval as a member?"
                        ]
                    },
                    {
                        "axiom": "Query and retrieval propertyRestrictions [has output some data]",
                        "CQ": [
                            "Must every instance of Query and Retrieval have at least one output that is classified as Data?",
                            "Is it required for Query and Retrieval to produce Data as an output?",
                            "Can Query and Retrieval exist without having the property ‘has output’ linked to some instance of Data?"
                        ]
                    },
                    {
                        "axiom": "Query and retrieval propertyRestrictions [has topic some Data search, query and retrieval]",
                        "CQ": [
                            "Is it required that every Query and retrieval instance is associated via 'has topic' with at least one Data search, query and retrieval topic?",
                            "Does a Query and retrieval necessarily have the 'has topic' property pointing to something categorized as Data search, query and retrieval?",
                            "Is there any instance of Query and retrieval that does not involve a 'has topic' relationship to Data search, query and retrieval?"
                        ]
                    }
                ],
                "removed axiom": "Query and retrieval subClassOf information processing",
                "Target CQ": [
                    "Does Query and retrieval fall under the broader classification of information processing?",
                    "Which specific categories are encompassed within information processing, including Query and retrieval?",
                    "What higher-level concepts include Query and retrieval as a member?"
                ],
                "Valid CQ": [
                    "Must every instance of Query and Retrieval have at least one output that is classified as Data?",
                    "Is it required for Query and Retrieval to produce Data as an output?",
                    "Can Query and Retrieval exist without having the property ‘has output’ linked to some instance of Data?",
                    "Is it required that every Query and retrieval instance is associated via 'has topic' with at least one Data search, query and retrieval topic?",
                    "Does a Query and retrieval necessarily have the 'has topic' property pointing to something categorized as Data search, query and retrieval?",
                    "Is there any instance of Query and retrieval that does not involve a 'has topic' relationship to Data search, query and retrieval?"
                ],
                "type": "Type1"
            },
            "RBioinf": {
                "axiom": {
                    "subClassOf": [
                        "software"
                    ],
                    "propertyRestrictions": [
                        "[has specified data output some (Image and [has format specification some image format])]",
                        "[is encoded in some R language]",
                        "[implements some Linear modelling]"
                    ]
                },
                "description": "RBioinf is defined as a subclass of software characterized by its use of the R programming language and its implementation of linear modelling functionality. It accepts data inputs that are specifically R data frames and outputs images, with both inputs and outputs subject to precise format specifications. This class formalizes that any RBioinf software must process data in the form of R data frames, produce image outputs conforming to specified image formats, and must be implemented in the R language with capabilities for linear modelling.",
                "CQ": [
                    {
                        "axiom": "RBioinf subClassOf software",
                        "CQ": [
                            "Is RBioinf classified as a type of software?",
                            "Which software subclasses include RBioinf?",
                            "To which broader categories does RBioinf belong?"
                        ]
                    },
                    {
                        "axiom": "RBioinf propertyRestrictions [has specified data output some (Image and [has format specification some image format])]",
                        "CQ": [
                            "Does every RBioinf instance necessarily produce at least one data output that is both an Image and has some format specification corresponding to an image format?",
                            "Is it required that the data output of RBioinf includes an Image with a specified image format?",
                            "Can there be an RBioinf with no data outputs that meet both the Image type and the image format specification criteria?"
                        ]
                    },
                    {
                        "axiom": "RBioinf propertyRestrictions [has specified data input some (data and [has format specification some R data frame])]",
                        "CQ": [
                            "Does RBioinf require that its specified data input includes data with at least one format specification of an R data frame?",
                            "Is it necessary for RBioinf to have the has specified data input property relating to data that has a format specification of an R data frame?",
                            "Can RBioinf’s specified data input be data without any format specification as an R data frame?"
                        ]
                    },
                    {
                        "axiom": "RBioinf propertyRestrictions [is encoded in some R language]",
                        "CQ": [
                            "Is every instance of RBioinf required to be encoded in at least one R language?",
                            "Can RBioinf exist without being associated through the 'is encoded in' property with any R language?",
                            "Does the 'is encoded in' property for RBioinf necessarily involve an R language?"
                        ]
                    },
                    {
                        "axiom": "RBioinf propertyRestrictions [implements some Linear modelling]",
                        "CQ": [
                            "Is it necessary for RBioinf to implement any Linear modelling methods?",
                            "Does RBioinf guarantee the presence of an implementation related to Linear modelling?",
                            "Can an RBioinf system exist without implementing Linear modelling?"
                        ]
                    }
                ],
                "removed axiom": "RBioinf propertyRestrictions [has specified data input some (data and [has format specification some R data frame])]",
                "Target CQ": [
                    "Does RBioinf require that its specified data input includes data with at least one format specification of an R data frame?",
                    "Is it necessary for RBioinf to have the has specified data input property relating to data that has a format specification of an R data frame?",
                    "Can RBioinf’s specified data input be data without any format specification as an R data frame?"
                ],
                "Valid CQ": [
                    "Is RBioinf classified as a type of software?",
                    "Which software subclasses include RBioinf?",
                    "To which broader categories does RBioinf belong?",
                    "Does every RBioinf instance necessarily produce at least one data output that is both an Image and has some format specification corresponding to an image format?",
                    "Is it required that the data output of RBioinf includes an Image with a specified image format?",
                    "Can there be an RBioinf with no data outputs that meet both the Image type and the image format specification criteria?",
                    "Is every instance of RBioinf required to be encoded in at least one R language?",
                    "Can RBioinf exist without being associated through the 'is encoded in' property with any R language?",
                    "Does the 'is encoded in' property for RBioinf necessarily involve an R language?",
                    "Is it necessary for RBioinf to implement any Linear modelling methods?",
                    "Does RBioinf guarantee the presence of an implementation related to Linear modelling?",
                    "Can an RBioinf system exist without implementing Linear modelling?"
                ],
                "type": "Type1"
            },
            "NMR spectrum": {
                "axiom": {
                    "subClassOf": [
                        "Spectrum"
                    ],
                    "propertyRestrictions": []
                },
                "description": "NMR spectrum is a subclass of Spectrum and represents spectral information for a molecule derived from a nuclear magnetic resonance (NMR) experiment. By axiom, every NMR spectrum is linked with at least one topic in Structural biology, situating it within research relevant to molecular structure determination. This class formalization ensures all instances pertain to spectra associated with structural biology analyses using NMR techniques.",
                "CQ": [
                    {
                        "axiom": "NMR spectrum subClassOf Spectrum",
                        "CQ": [
                            "Does NMR spectrum fall under the category of Spectrum?",
                            "What types of Spectrum include NMR spectrum as a specialized form?",
                            "Which more general classes encompass the NMR spectrum?"
                        ]
                    },
                    {
                        "axiom": "NMR spectrum propertyRestrictions [has topic some Structural biology]",
                        "CQ": [
                            "Is it necessary for an NMR spectrum propertyRestriction to have the topic Structural biology?",
                            "Can an NMR spectrum propertyRestriction exist without being related to Structural biology?",
                            "Are there NMR spectrum propertyRestrictions that are necessarily associated with the topic Structural biology?"
                        ]
                    }
                ],
                "removed axiom": "NMR spectrum propertyRestrictions [has topic some Structural biology]",
                "Target CQ": [
                    "Is it necessary for an NMR spectrum propertyRestriction to have the topic Structural biology?",
                    "Can an NMR spectrum propertyRestriction exist without being related to Structural biology?",
                    "Are there NMR spectrum propertyRestrictions that are necessarily associated with the topic Structural biology?"
                ],
                "Valid CQ": [
                    "Does NMR spectrum fall under the category of Spectrum?",
                    "What types of Spectrum include NMR spectrum as a specialized form?",
                    "Which more general classes encompass the NMR spectrum?"
                ],
                "type": "Type1"
            },
            "Cell type name": {
                "axiom": {
                    "subClassOf": [
                        "Cell type identifier"
                    ]
                },
                "description": "Cell type name is a subclass of both Name and Cell type identifier. It represents the name assigned to a type or group of cells, serving as an identifier within biological and ontological contexts. This class formally captures the concept of cell type naming for purposes such as annotation, identification, and classification.",
                "CQ": [
                    {
                        "axiom": "Cell type name subClassOf Name",
                        "CQ": [
                            "Does Cell type name fall under the classification of Name?",
                            "Which entities are encompassed as more specific types of Name, including Cell type name?",
                            "What broader categories is Cell type name associated with in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Cell type name subClassOf Cell type identifier",
                        "CQ": [
                            "Is Cell type name categorized under Cell type identifier?",
                            "Which specific cell type names are encompassed by Cell type identifier?",
                            "What broader classes does Cell type name fall within according to the ontology?"
                        ]
                    }
                ],
                "removed axiom": "Cell type name subClassOf Name",
                "Target CQ": [
                    "Does Cell type name fall under the classification of Name?",
                    "Which entities are encompassed as more specific types of Name, including Cell type name?",
                    "What broader categories is Cell type name associated with in the ontology?"
                ],
                "Valid CQ": [
                    "Is Cell type name categorized under Cell type identifier?",
                    "Which specific cell type names are encompassed by Cell type identifier?",
                    "What broader classes does Cell type name fall within according to the ontology?"
                ],
                "type": "Type1"
            },
            "TreeBASE format": {
                "axiom": {
                    "subClassOf": [
                        "Textual format"
                    ]
                },
                "description": "TreeBASE format is defined as a subclass of both Textual format and Phylogenetic tree format (text), indicating it is a specific type of text-based format used for representing phylogenetic trees. The class is described as the format used for entries in the TreeBASE database of phylogenetic data, highlighting its application within the domain of phylogenetic data management and exchange.",
                "CQ": [
                    {
                        "axiom": "TreeBASE format subClassOf Textual format",
                        "CQ": [
                            "Does TreeBASE format fall under the category of Textual format?",
                            "Which specialized formats are encompassed by Textual format, including TreeBASE format?",
                            "What broader classifications include TreeBASE format as a member?"
                        ]
                    },
                    {
                        "axiom": "TreeBASE format subClassOf Phylogenetic tree format (text)",
                        "CQ": [
                            "Is TreeBASE format classified as a type of Phylogenetic tree format?",
                            "Which data formats fall under the category of Phylogenetic tree format, including TreeBASE format?",
                            "What are the more general data format categories that encompass TreeBASE format?"
                        ]
                    }
                ],
                "removed axiom": "TreeBASE format subClassOf Phylogenetic tree format (text)",
                "Target CQ": [
                    "Is TreeBASE format classified as a type of Phylogenetic tree format?",
                    "Which data formats fall under the category of Phylogenetic tree format, including TreeBASE format?",
                    "What are the more general data format categories that encompass TreeBASE format?"
                ],
                "Valid CQ": [
                    "Does TreeBASE format fall under the category of Textual format?",
                    "Which specialized formats are encompassed by Textual format, including TreeBASE format?",
                    "What broader classifications include TreeBASE format as a member?"
                ],
                "type": "Type1"
            },
            "OmniOutliner": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[output of some (software development process and [has participant hasValue Omni])]",
                        "[is executed in some document outlining]",
                        "[output of some (software publishing process and [has participant hasValue Omni])]",
                        "[has website homepage hasValue http://www.omnigroup.com/products/omnioutliner/]",
                        "[has license some Proprietary commercial software license]",
                        "[has specified data output some (data and [has format specification some OmniOutline format])]"
                    ]
                },
                "description": "OmniOutliner is defined as a subclass of software, specifically characterized as the output of either a software development or publishing process involving the participant Omni. It is designed to be executed for document outlining tasks. The software is associated with a proprietary commercial license and its official homepage is http://www.omnigroup.com/products/omnioutliner/. OmniOutliner specifies data output in the OmniOutline format, adhering to a defined format specification for its data.",
                "CQ": [
                    {
                        "axiom": "OmniOutliner subClassOf software",
                        "CQ": [
                            "Is OmniOutliner categorized under the broader class of software?",
                            "Which subclasses does software include, such as OmniOutliner?",
                            "To which higher-level categories does OmniOutliner conceptually belong?"
                        ]
                    },
                    {
                        "axiom": "OmniOutliner propertyRestrictions [output of some (software development process and [has participant hasValue Omni])]",
                        "CQ": [
                            "Does every property restriction for OmniOutliner require its output to result from at least one software development process involving Omni?",
                            "Is it necessary for any output defined by an OmniOutliner property restriction to be produced via a software development process that has a participant Omni?",
                            "Can an OmniOutliner property restriction specify outputs unrelated to software development processes where Omni is a participant?"
                        ]
                    },
                    {
                        "axiom": "OmniOutliner propertyRestrictions [is executed in some document outlining]",
                        "CQ": [
                            "Is it required for every OmniOutliner propertyRestrictions to be executed in at least one document outlining?",
                            "Can an instance of OmniOutliner propertyRestrictions exist without being linked to any document outlining through execution?",
                            "Does the ontology specify that execution of OmniOutliner propertyRestrictions must occur within the context of a document outlining?"
                        ]
                    },
                    {
                        "axiom": "OmniOutliner propertyRestrictions [output of some (software publishing process and [has participant hasValue Omni])]",
                        "CQ": [
                            "Does the OmniOutliner propertyRestrictions class always output the result of at least one software publishing process that has Omni as a participant?",
                            "Is it required that OmniOutliner propertyRestrictions outputs something that is both a software publishing process and includes Omni as a participant?",
                            "Are there any outputs from OmniOutliner propertyRestrictions that are not related to a software publishing process involving Omni?"
                        ]
                    },
                    {
                        "axiom": "OmniOutliner propertyRestrictions [has website homepage hasValue http://www.omnigroup.com/products/omnioutliner/]",
                        "CQ": [
                            "Is every instance identified by the OmniOutliner property required to have the website homepage http://www.omnigroup.com/products/omnioutliner/?",
                            "Is it necessary for OmniOutliner to always be associated with the specific website homepage http://www.omnigroup.com/products/omnioutliner/?",
                            "Can any instance of OmniOutliner have a website homepage different from http://www.omnigroup.com/products/omnioutliner/?"
                        ]
                    },
                    {
                        "axiom": "OmniOutliner propertyRestrictions [has license some Proprietary commercial software license]",
                        "CQ": [
                            "Is it necessary for OmniOutliner to have at least one license that is a Proprietary commercial software license?",
                            "Does OmniOutliner always possess a license that belongs to the category of Proprietary commercial software licenses?",
                            "Can OmniOutliner exist without having any association with a Proprietary commercial software license?"
                        ]
                    },
                    {
                        "axiom": "OmniOutliner propertyRestrictions [has specified data output some (data and [has format specification some OmniOutline format])]",
                        "CQ": [
                            "Is it required for every OmniOutliner property restriction to specify data output in at least one data entity that has a format specification of OmniOutline format?",
                            "Does the existence of an OmniOutliner property restriction imply that there must be some data output conforming to the OmniOutline format?",
                            "Can an OmniOutliner property restriction exist without referencing any data output specified with the OmniOutline format?"
                        ]
                    }
                ],
                "removed axiom": "OmniOutliner subClassOf software",
                "Target CQ": [
                    "Is OmniOutliner categorized under the broader class of software?",
                    "Which subclasses does software include, such as OmniOutliner?",
                    "To which higher-level categories does OmniOutliner conceptually belong?"
                ],
                "Valid CQ": [
                    "Does every property restriction for OmniOutliner require its output to result from at least one software development process involving Omni?",
                    "Is it necessary for any output defined by an OmniOutliner property restriction to be produced via a software development process that has a participant Omni?",
                    "Can an OmniOutliner property restriction specify outputs unrelated to software development processes where Omni is a participant?",
                    "Is it required for every OmniOutliner propertyRestrictions to be executed in at least one document outlining?",
                    "Can an instance of OmniOutliner propertyRestrictions exist without being linked to any document outlining through execution?",
                    "Does the ontology specify that execution of OmniOutliner propertyRestrictions must occur within the context of a document outlining?",
                    "Does the OmniOutliner propertyRestrictions class always output the result of at least one software publishing process that has Omni as a participant?",
                    "Is it required that OmniOutliner propertyRestrictions outputs something that is both a software publishing process and includes Omni as a participant?",
                    "Are there any outputs from OmniOutliner propertyRestrictions that are not related to a software publishing process involving Omni?",
                    "Is every instance identified by the OmniOutliner property required to have the website homepage http://www.omnigroup.com/products/omnioutliner/?",
                    "Is it necessary for OmniOutliner to always be associated with the specific website homepage http://www.omnigroup.com/products/omnioutliner/?",
                    "Can any instance of OmniOutliner have a website homepage different from http://www.omnigroup.com/products/omnioutliner/?",
                    "Is it necessary for OmniOutliner to have at least one license that is a Proprietary commercial software license?",
                    "Does OmniOutliner always possess a license that belongs to the category of Proprietary commercial software licenses?",
                    "Can OmniOutliner exist without having any association with a Proprietary commercial software license?",
                    "Is it required for every OmniOutliner property restriction to specify data output in at least one data entity that has a format specification of OmniOutline format?",
                    "Does the existence of an OmniOutliner property restriction imply that there must be some data output conforming to the OmniOutline format?",
                    "Can an OmniOutliner property restriction exist without referencing any data output specified with the OmniOutline format?"
                ],
                "type": "Type1"
            },
            "Gene ID (SGD)": {
                "axiom": {
                    "subClassOf": [
                        "Gene ID"
                    ]
                },
                "description": "Gene ID (SGD) is defined as a subclass of both Gene ID and SGD ID. It represents identifiers that uniquely reference gene entries within the Saccharomyces Genome Database (SGD). Members of this class serve as unique identifiers for genes as recorded in the SGD database, ensuring precise mapping and retrieval of genetic information associated with Saccharomyces cerevisiae.",
                "CQ": [
                    {
                        "axiom": "Gene ID (SGD) subClassOf Gene ID",
                        "CQ": [
                            "Is Gene ID (SGD) classified under the broader category of Gene ID?",
                            "What specific types are encompassed by the Gene ID class, including Gene ID (SGD)?",
                            "Which general identifier categories does Gene ID (SGD) fall under?"
                        ]
                    },
                    {
                        "axiom": "Gene ID (SGD) subClassOf SGD ID",
                        "CQ": [
                            "Is every Gene ID (SGD) instance inherently classified as an SGD ID?",
                            "Which identifiers are defined as specific types under the broader SGD ID class?",
                            "What are the more general categories that encompass Gene ID (SGD)?"
                        ]
                    }
                ],
                "removed axiom": "Gene ID (SGD) subClassOf SGD ID",
                "Target CQ": [
                    "Is every Gene ID (SGD) instance inherently classified as an SGD ID?",
                    "Which identifiers are defined as specific types under the broader SGD ID class?",
                    "What are the more general categories that encompass Gene ID (SGD)?"
                ],
                "Valid CQ": [
                    "Is Gene ID (SGD) classified under the broader category of Gene ID?",
                    "What specific types are encompassed by the Gene ID class, including Gene ID (SGD)?",
                    "Which general identifier categories does Gene ID (SGD) fall under?"
                ],
                "type": "Type1"
            },
            "Taverna workflow format": {
                "axiom": {
                    "subClassOf": [
                        "Workflow format"
                    ]
                },
                "description": "Taverna workflow format is formally defined as a subclass of both XML and Workflow format. This means it is a type of workflow format that is specifically encoded in XML. The class describes formats used to represent Taverna workflows, aligning with the definition: \"Format of Taverna workflows.\"",
                "CQ": [
                    {
                        "axiom": "Taverna workflow format subClassOf XML",
                        "CQ": [
                            "Is Taverna workflow format an instance of the broader category XML?",
                            "Which workflow formats are more specific than XML, for example, Taverna workflow format?",
                            "To which overarching data format categories does Taverna workflow format belong?"
                        ]
                    },
                    {
                        "axiom": "Taverna workflow format subClassOf Workflow format",
                        "CQ": [
                            "Is Taverna workflow format classified under the broader category of Workflow format?",
                            "What specific workflow formats, such as Taverna workflow format, are included within Workflow format?",
                            "Which higher-level categories does Taverna workflow format fall under?"
                        ]
                    }
                ],
                "removed axiom": "Taverna workflow format subClassOf XML",
                "Target CQ": [
                    "Is Taverna workflow format an instance of the broader category XML?",
                    "Which workflow formats are more specific than XML, for example, Taverna workflow format?",
                    "To which overarching data format categories does Taverna workflow format belong?"
                ],
                "Valid CQ": [
                    "Is Taverna workflow format classified under the broader category of Workflow format?",
                    "What specific workflow formats, such as Taverna workflow format, are included within Workflow format?",
                    "Which higher-level categories does Taverna workflow format fall under?"
                ],
                "type": "Type1"
            },
            "limmaGUI": {
                "axiom": {
                    "subClassOf": [
                        "software"
                    ],
                    "propertyRestrictions": [
                        "[has specified data output some (Text data set and [has format specification only TIFF])]",
                        "[implements some Linear modelling]",
                        "[has specified data input some Text data set]",
                        "[is encoded in some R language]"
                    ]
                },
                "description": "limmaGUI is a subclass of software specifically designed for input and output of text data sets, where output formats are limited to those having only the TIFF specification. It implements linear modelling techniques, is encoded in the R language, and has been published by Bioconductor.",
                "CQ": [
                    {
                        "axiom": "limmaGUI subClassOf software",
                        "CQ": [
                            "Does limmaGUI fall under the classification of software?",
                            "What types are included as subclasses beneath software, specifically limmaGUI?",
                            "Which broader classes encompass limmaGUI as a member in the ontology?"
                        ]
                    },
                    {
                        "axiom": "limmaGUI propertyRestrictions [has specified data output some (Text data set and [has format specification only TIFF])]",
                        "CQ": [
                            "Is it required that limmaGUI produces at least one data output that is both a text data set and provided only in TIFF format?",
                            "Can limmaGUI have specified data output in any format other than TIFF for text data sets?",
                            "Does every specified data output of limmaGUI that is a text data set conform exclusively to the TIFF format specification?"
                        ]
                    },
                    {
                        "axiom": "limmaGUI propertyRestrictions [implements some Linear modelling]",
                        "CQ": [
                            "Is it required that limmaGUI implements at least one instance of Linear modelling?",
                            "Does every limmaGUI necessarily implement Linear modelling in some form?",
                            "Can limmaGUI exist without implementing any Linear modelling?"
                        ]
                    },
                    {
                        "axiom": "limmaGUI propertyRestrictions [is published by hasValue Bioconductor]",
                        "CQ": [
                            "Is every instance of limmaGUI necessarily published by Bioconductor?",
                            "Can a limmaGUI have any publisher other than Bioconductor?",
                            "Is it required for limmaGUI to have the value Bioconductor for the property 'is published by'?"
                        ]
                    },
                    {
                        "axiom": "limmaGUI propertyRestrictions [has specified data input some Text data set]",
                        "CQ": [
                            "Is it required that limmaGUI must have at least one specified data input that is a Text data set?",
                            "Does limmaGUI necessarily involve the has specified data input property with a Text data set as its value?",
                            "Can limmaGUI exist without associating any specified data input of type Text data set?"
                        ]
                    },
                    {
                        "axiom": "limmaGUI propertyRestrictions [is encoded in some R language]",
                        "CQ": [
                            "Is every instance of limmaGUI necessarily encoded in at least one R language implementation?",
                            "Can limmaGUI be encoded in any programming language other than R language?",
                            "Must limmaGUI have an encoding relationship specifically with the R language?"
                        ]
                    }
                ],
                "removed axiom": "limmaGUI propertyRestrictions [is published by hasValue Bioconductor]",
                "Target CQ": [
                    "Is every instance of limmaGUI necessarily published by Bioconductor?",
                    "Can a limmaGUI have any publisher other than Bioconductor?",
                    "Is it required for limmaGUI to have the value Bioconductor for the property 'is published by'?"
                ],
                "Valid CQ": [
                    "Does limmaGUI fall under the classification of software?",
                    "What types are included as subclasses beneath software, specifically limmaGUI?",
                    "Which broader classes encompass limmaGUI as a member in the ontology?",
                    "Is it required that limmaGUI produces at least one data output that is both a text data set and provided only in TIFF format?",
                    "Can limmaGUI have specified data output in any format other than TIFF for text data sets?",
                    "Does every specified data output of limmaGUI that is a text data set conform exclusively to the TIFF format specification?",
                    "Is it required that limmaGUI implements at least one instance of Linear modelling?",
                    "Does every limmaGUI necessarily implement Linear modelling in some form?",
                    "Can limmaGUI exist without implementing any Linear modelling?",
                    "Is it required that limmaGUI must have at least one specified data input that is a Text data set?",
                    "Does limmaGUI necessarily involve the has specified data input property with a Text data set as its value?",
                    "Can limmaGUI exist without associating any specified data input of type Text data set?",
                    "Is every instance of limmaGUI necessarily encoded in at least one R language implementation?",
                    "Can limmaGUI be encoded in any programming language other than R language?",
                    "Must limmaGUI have an encoding relationship specifically with the R language?"
                ],
                "type": "Type1"
            },
            "Protein domain classification format": {
                "axiom": {
                    "subClassOf": [
                        "Format (typed)"
                    ],
                    "propertyRestrictions": []
                },
                "description": "Protein domain classification format is a subclass of Format (typed) and represents a data format specifically used for reporting on the classification of sequences and/or structures of protein structural domains. By axiom, any instance of this class must serve as the format for at least one Protein family report. This ensures that such formats are formally recognized as integral to the documentation and communication of protein domain classification data.",
                "CQ": [
                    {
                        "axiom": "Protein domain classification format subClassOf Format (typed)",
                        "CQ": [
                            "Is Protein domain classification format categorized as a more specific type of Format?",
                            "Which types fall under the broader classification of Format, including Protein domain classification format?",
                            "What higher-level categories does Protein domain classification format belong to?"
                        ]
                    },
                    {
                        "axiom": "Protein domain classification format propertyRestrictions [is format of some Protein family report]",
                        "CQ": [
                            "Must every protein domain classification format be associated with at least one protein family report through the 'is format of' property?",
                            "Can a protein domain classification format exist without being the format for any protein family report?",
                            "Is it required that a protein domain classification format serves as the format for some report that describes a protein family?"
                        ]
                    }
                ],
                "removed axiom": "Protein domain classification format propertyRestrictions [is format of some Protein family report]",
                "Target CQ": [
                    "Must every protein domain classification format be associated with at least one protein family report through the 'is format of' property?",
                    "Can a protein domain classification format exist without being the format for any protein family report?",
                    "Is it required that a protein domain classification format serves as the format for some report that describes a protein family?"
                ],
                "Valid CQ": [
                    "Is Protein domain classification format categorized as a more specific type of Format?",
                    "Which types fall under the broader classification of Format, including Protein domain classification format?",
                    "What higher-level categories does Protein domain classification format belong to?"
                ],
                "type": "Type1"
            },
            "Virulence prediction": {
                "axiom": {
                    "subClassOf": [
                        "Sequence analysis"
                    ],
                    "propertyRestrictions": [
                        "[has topic some Microbiology]"
                    ]
                },
                "description": "Virulence prediction is a subclass of both Sequence analysis and Prediction and recognition, and is defined as processes or activities that involve predicting the degree of pathogenicity (virulence) of a microorganism based on the analysis of molecular sequences. Additionally, this class is restricted to analyses that have a topic related to Microbiology, ensuring its relevance to the study of microorganisms and their potential for causing disease.",
                "CQ": [
                    {
                        "axiom": "Virulence prediction subClassOf Sequence analysis",
                        "CQ": [
                            "Is Virulence prediction recognized as a specific form of Sequence analysis?",
                            "Which analyses fall under the broader category of Sequence analysis, including Virulence prediction?",
                            "What parent categories encompass Virulence prediction within the ontology structure?"
                        ]
                    },
                    {
                        "axiom": "Virulence prediction subClassOf Prediction and recognition",
                        "CQ": [
                            "Is Virulence prediction classified under the more general category of Prediction and recognition?",
                            "What specialized forms of Prediction and recognition exist, including Virulence prediction?",
                            "Which higher-level concepts encompass Virulence prediction?"
                        ]
                    },
                    {
                        "axiom": "Virulence prediction propertyRestrictions [has topic some Microbiology]",
                        "CQ": [
                            "Is it required that virulence prediction has the topic Microbiology?",
                            "Can virulence prediction be associated with topics other than Microbiology?",
                            "Does every virulence prediction necessarily involve at least one topic within Microbiology?"
                        ]
                    }
                ],
                "removed axiom": "Virulence prediction subClassOf Prediction and recognition",
                "Target CQ": [
                    "Is Virulence prediction classified under the more general category of Prediction and recognition?",
                    "What specialized forms of Prediction and recognition exist, including Virulence prediction?",
                    "Which higher-level concepts encompass Virulence prediction?"
                ],
                "Valid CQ": [
                    "Is Virulence prediction recognized as a specific form of Sequence analysis?",
                    "Which analyses fall under the broader category of Sequence analysis, including Virulence prediction?",
                    "What parent categories encompass Virulence prediction within the ontology structure?",
                    "Is it required that virulence prediction has the topic Microbiology?",
                    "Can virulence prediction be associated with topics other than Microbiology?",
                    "Does every virulence prediction necessarily involve at least one topic within Microbiology?"
                ],
                "type": "Type1"
            },
            "aaindex": {
                "axiom": {
                    "subClassOf": [
                        "Textual format"
                    ]
                },
                "description": "aaindex is defined as a subclass of both Textual format and Amino acid index format. It specifically refers to the amino acid index format utilized by the AAindex database, which is used to represent data about amino acid properties in a textual structure. This class ensures that any format identified as aaindex must inherit characteristics of textual formats for amino acid indices.",
                "CQ": [
                    {
                        "axiom": "aaindex subClassOf Textual format",
                        "CQ": [
                            "Does aaindex fall under the category of Textual format?",
                            "Which specific formats are classified as subtypes of Textual format, particularly including aaindex?",
                            "What higher-level classification does aaindex relate to within the ontology?"
                        ]
                    },
                    {
                        "axiom": "aaindex subClassOf Amino acid index format",
                        "CQ": [
                            "Is aaindex classified as a more specific form of Amino acid index format?",
                            "Which formats fall under the category of Amino acid index format, such as aaindex?",
                            "What broader classes does aaindex belong to within the context of amino acid index representation?"
                        ]
                    }
                ],
                "removed axiom": "aaindex subClassOf Amino acid index format",
                "Target CQ": [
                    "Is aaindex classified as a more specific form of Amino acid index format?",
                    "Which formats fall under the category of Amino acid index format, such as aaindex?",
                    "What broader classes does aaindex belong to within the context of amino acid index representation?"
                ],
                "Valid CQ": [
                    "Does aaindex fall under the category of Textual format?",
                    "Which specific formats are classified as subtypes of Textual format, particularly including aaindex?",
                    "What higher-level classification does aaindex relate to within the ontology?"
                ],
                "type": "Type1"
            },
            "CDF ASCII format": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[is published by hasValue Affymetrix]"
                    ]
                },
                "description": "CDF ASCII format is defined as a subclass of ASCII format, with the additional restriction that it must be published by Affymetrix. This means every instance of CDF ASCII format is a type of ASCII format and is specifically associated with Affymetrix as its publisher.",
                "CQ": [
                    {
                        "axiom": "CDF ASCII format subClassOf ASCII format",
                        "CQ": [
                            "Is CDF ASCII format categorized as a type of ASCII format?",
                            "Which specific formats are included under the broader class of ASCII format?",
                            "What are the more general format categories that encompass CDF ASCII format?"
                        ]
                    },
                    {
                        "axiom": "CDF ASCII format propertyRestrictions [is published by hasValue Affymetrix]",
                        "CQ": [
                            "Is every instance of the CDF ASCII format published exclusively by Affymetrix?",
                            "Must the publisher of any CDF ASCII format always be Affymetrix?",
                            "Can a valid CDF ASCII format have a publisher different from Affymetrix?"
                        ]
                    }
                ],
                "removed axiom": "CDF ASCII format subClassOf ASCII format",
                "Target CQ": [
                    "Is CDF ASCII format categorized as a type of ASCII format?",
                    "Which specific formats are included under the broader class of ASCII format?",
                    "What are the more general format categories that encompass CDF ASCII format?"
                ],
                "Valid CQ": [
                    "Is every instance of the CDF ASCII format published exclusively by Affymetrix?",
                    "Must the publisher of any CDF ASCII format always be Affymetrix?",
                    "Can a valid CDF ASCII format have a publisher different from Affymetrix?"
                ],
                "type": "Type1"
            },
            "RDF format": {
                "axiom": {
                    "subClassOf": [
                        "Ontology format"
                    ]
                },
                "description": "RDF format is defined as a subclass of both XML and Ontology format, indicating that it inherits characteristics from these classes. It is a serialization format that conforms to the Resource Description Framework (RDF) model, which is commonly used for representing information about resources in the Semantic Web. This classification highlights RDF format's position at the intersection of ontology-based knowledge representation and XML-based data structuring.",
                "CQ": [
                    {
                        "axiom": "RDF format subClassOf XML",
                        "CQ": [
                            "Does RDF have a more general type, such as XML?",
                            "Which classes fall under the broader category represented by XML, specifically including RDF?",
                            "Of which broader representations is RDF a specific example?"
                        ]
                    },
                    {
                        "axiom": "RDF format subClassOf Ontology format",
                        "CQ": [
                            "Is RDF format considered a more specific type within the broader category of Ontology format?",
                            "Which formats are classified as subclasses of Ontology format, including RDF format?",
                            "To what higher-level format categories does RDF format belong?"
                        ]
                    }
                ],
                "removed axiom": "RDF format subClassOf XML",
                "Target CQ": [
                    "Does RDF have a more general type, such as XML?",
                    "Which classes fall under the broader category represented by XML, specifically including RDF?",
                    "Of which broader representations is RDF a specific example?"
                ],
                "Valid CQ": [
                    "Is RDF format considered a more specific type within the broader category of Ontology format?",
                    "Which formats are classified as subclasses of Ontology format, including RDF format?",
                    "To what higher-level format categories does RDF format belong?"
                ],
                "type": "Type1"
            },
            "Transcription factor accession": {
                "axiom": {
                    "subClassOf": [
                        "Protein accession",
                        "Transcription factor identifier"
                    ]
                },
                "description": "Transcription factor accession is defined as a subclass of Accession, Protein accession, and Transcription factor identifier. It represents the accession of an entry from a database specifically pertaining to transcription factors or their binding sites, uniquely identifying these entities within such resources. This formalization ensures that any transcription factor accession is recognized both as a general accession and as a specialized identifier for proteins with transcription factor activity.",
                "CQ": [
                    {
                        "axiom": "Transcription factor accession subClassOf Accession",
                        "CQ": [
                            "What categories is Transcription factor accession classified under within the accession taxonomy?",
                            "Which accessions are specifically categorized as Transcription factor accession?",
                            "Does Accession encompass Transcription factor accession as one of its subtypes?"
                        ]
                    },
                    {
                        "axiom": "Transcription factor accession subClassOf Protein accession",
                        "CQ": [
                            "Is a Protein accession a more general category that encompasses Transcription factor accession?",
                            "Which specific accessions fall under the category of Protein accession, including Transcription factor accession?",
                            "To which broader accession types does a Transcription factor accession belong?"
                        ]
                    },
                    {
                        "axiom": "Transcription factor accession subClassOf Transcription factor identifier",
                        "CQ": [
                            "Does Transcription factor accession fall under the category of Transcription factor identifier?",
                            "Which entities are categorized as subtypes of Transcription factor identifier such as Transcription factor accession?",
                            "What broader identifier classes include Transcription factor accession as a specific instance?"
                        ]
                    }
                ],
                "removed axiom": "Transcription factor accession subClassOf Accession",
                "Target CQ": [
                    "What categories is Transcription factor accession classified under within the accession taxonomy?",
                    "Which accessions are specifically categorized as Transcription factor accession?",
                    "Does Accession encompass Transcription factor accession as one of its subtypes?"
                ],
                "Valid CQ": [
                    "Is a Protein accession a more general category that encompasses Transcription factor accession?",
                    "Which specific accessions fall under the category of Protein accession, including Transcription factor accession?",
                    "To which broader accession types does a Transcription factor accession belong?",
                    "Does Transcription factor accession fall under the category of Transcription factor identifier?",
                    "Which entities are categorized as subtypes of Transcription factor identifier such as Transcription factor accession?",
                    "What broader identifier classes include Transcription factor accession as a specific instance?"
                ],
                "type": "Type1"
            },
            "Repeat sequence organisation analysis": {
                "axiom": {
                    "subClassOf": [
                        "Repeat sequence analysis"
                    ]
                },
                "description": "Repeat sequence organisation analysis is defined as a subclass of both Sequence composition calculation and Repeat sequence analysis, indicating that it inherits characteristics from both analytical approaches. It involves the analysis of the organization of repeat sequences within biological data, specifically focusing on aspects such as periodicity. This class is intended for methods and processes that evaluate how repeat sequences are arranged and structured within a given sequence, emphasizing their compositional and organizational properties.",
                "CQ": [
                    {
                        "axiom": "Repeat sequence organisation analysis subClassOf Sequence composition calculation",
                        "CQ": [
                            "Does Repeat sequence organisation analysis fall under the broader class of Sequence composition calculation?",
                            "Which specific analyses are classified under Sequence composition calculation, such as Repeat sequence organisation analysis?",
                            "What more general analysis categories encompass Repeat sequence organisation analysis?"
                        ]
                    },
                    {
                        "axiom": "Repeat sequence organisation analysis subClassOf Repeat sequence analysis",
                        "CQ": [
                            "Does Repeat sequence organisation analysis fall under the broader category of Repeat sequence analysis?",
                            "Which analyses are specific types included within Repeat sequence analysis, such as Repeat sequence organisation analysis?",
                            "What higher-level analysis categories encompass Repeat sequence organisation analysis?"
                        ]
                    }
                ],
                "removed axiom": "Repeat sequence organisation analysis subClassOf Sequence composition calculation",
                "Target CQ": [
                    "Does Repeat sequence organisation analysis fall under the broader class of Sequence composition calculation?",
                    "Which specific analyses are classified under Sequence composition calculation, such as Repeat sequence organisation analysis?",
                    "What more general analysis categories encompass Repeat sequence organisation analysis?"
                ],
                "Valid CQ": [
                    "Does Repeat sequence organisation analysis fall under the broader category of Repeat sequence analysis?",
                    "Which analyses are specific types included within Repeat sequence analysis, such as Repeat sequence organisation analysis?",
                    "What higher-level analysis categories encompass Repeat sequence organisation analysis?"
                ],
                "type": "Type1"
            },
            "Stock number": {
                "axiom": {
                    "subClassOf": [
                        "Accession"
                    ]
                },
                "description": "Stock number is defined as a subclass of both Identifier (typed) and Accession, representing a specific type of typed identifier used for cataloguing. It is characterized as an identifier assigned to stock from a catalogue of biological resources, enabling precise identification and tracking of biological material in resource collections.",
                "CQ": [
                    {
                        "axiom": "Stock number subClassOf Identifier (typed)",
                        "CQ": [
                            "Does Stock number fall under the category of Identifier?",
                            "Which specific Identifier types include Stock number as a subclass?",
                            "What broader categories is Stock number classified under according to the ontology?"
                        ]
                    },
                    {
                        "axiom": "Stock number subClassOf Accession",
                        "CQ": [
                            "Does the category Accession include Stock number as a specific type?",
                            "Which concepts fall under the broader class of Accession, specifically including Stock number?",
                            "What broader classifications does Stock number derive from within the ontology?"
                        ]
                    }
                ],
                "removed axiom": "Stock number subClassOf Identifier (typed)",
                "Target CQ": [
                    "Does Stock number fall under the category of Identifier?",
                    "Which specific Identifier types include Stock number as a subclass?",
                    "What broader categories is Stock number classified under according to the ontology?"
                ],
                "Valid CQ": [
                    "Does the category Accession include Stock number as a specific type?",
                    "Which concepts fall under the broader class of Accession, specifically including Stock number?",
                    "What broader classifications does Stock number derive from within the ontology?"
                ],
                "type": "Type1"
            },
            "Sequence similarity search": {
                "axiom": {
                    "subClassOf": [
                        "Database search"
                    ]
                },
                "description": "Sequence similarity search is defined as a subclass of both Sequence comparison and Database search. It refers to the process of searching a sequence database to retrieve sequences that are similar to a given query sequence. This class links the computational method of comparing biological or other sequences with the practical task of searching databases, emphasizing the retrieval of similar sequences based on a defined similarity criterion.",
                "CQ": [
                    {
                        "axiom": "Sequence similarity search subClassOf Sequence comparison",
                        "CQ": [
                            "Is Sequence similarity search categorized under the broader class of Sequence comparison?",
                            "Which specific types of Sequence comparison include Sequence similarity search as a subclass?",
                            "What higher-level concepts encompass Sequence similarity search within the ontology?"
                        ]
                    },
                    {
                        "axiom": "Sequence similarity search subClassOf Database search",
                        "CQ": [
                            "Is Sequence similarity search classified under Database search within the ontology?",
                            "What specific search types are categorized as subclasses of Database search, including Sequence similarity search?",
                            "Which overarching classes encompass Sequence similarity search?"
                        ]
                    }
                ],
                "removed axiom": "Sequence similarity search subClassOf Sequence comparison",
                "Target CQ": [
                    "Is Sequence similarity search categorized under the broader class of Sequence comparison?",
                    "Which specific types of Sequence comparison include Sequence similarity search as a subclass?",
                    "What higher-level concepts encompass Sequence similarity search within the ontology?"
                ],
                "Valid CQ": [
                    "Is Sequence similarity search classified under Database search within the ontology?",
                    "What specific search types are categorized as subclasses of Database search, including Sequence similarity search?",
                    "Which overarching classes encompass Sequence similarity search?"
                ],
                "type": "Type1"
            },
            "Gene name": {
                "axiom": {
                    "subClassOf": [
                        "Name"
                    ]
                },
                "description": "Gene name is defined as a subclass of both Name and Gene identifier. It refers to the name of a gene, typically assigned by a person or according to a specific naming scheme. Gene names are generally more intuitive and readable than gene symbols, may include whitespace, and are often used to identify similar genes across different species or to help derive gene symbols.",
                "CQ": [
                    {
                        "axiom": "Gene name subClassOf Name",
                        "CQ": [
                            "Does Gene name represent a specialized form of Name?",
                            "Which categories does Gene name inherit properties from within the ontology?",
                            "What kinds of Name include Gene name as a more specific type?"
                        ]
                    },
                    {
                        "axiom": "Gene name subClassOf Gene identifier",
                        "CQ": [
                            "Is Gene identifier a broader classification encompassing Gene name?",
                            "Which entities are categorized as more specific types under Gene identifier, such as Gene name?",
                            "To which higher-level categories does Gene name conceptually relate within the ontology?"
                        ]
                    }
                ],
                "removed axiom": "Gene name subClassOf Gene identifier",
                "Target CQ": [
                    "Is Gene identifier a broader classification encompassing Gene name?",
                    "Which entities are categorized as more specific types under Gene identifier, such as Gene name?",
                    "To which higher-level categories does Gene name conceptually relate within the ontology?"
                ],
                "Valid CQ": [
                    "Does Gene name represent a specialized form of Name?",
                    "Which categories does Gene name inherit properties from within the ontology?",
                    "What kinds of Name include Gene name as a more specific type?"
                ],
                "type": "Type1"
            },
            "Scanning software G2565AA version A6.3.1": {
                "axiom": {
                    "subClassOf": [
                        "scanning software"
                    ],
                    "propertyRestrictions": []
                },
                "description": "Scanning software G2565AA version A6.3.1 is defined as a subclass of scanning software, and is characterized by being developed specifically by Agilent Technologies. Any individual instance of this class must be a scanning software product with this version identifier and origin. This formalization prevents classification of scanning software from other developers or different versions under this class.",
                "CQ": [
                    {
                        "axiom": "Scanning software G2565AA version A6.3.1 subClassOf scanning software",
                        "CQ": [
                            "Is scanning software G2565AA version A6.3.1 classified under scanning software?",
                            "What specific types are encompassed by the scanning software category, including G2565AA version A6.3.1?",
                            "Which broader categories does scanning software G2565AA version A6.3.1 fall under?"
                        ]
                    },
                    {
                        "axiom": "Scanning software G2565AA version A6.3.1 propertyRestrictions [is developed by hasValue Agilent Technologies]",
                        "CQ": [
                            "Is Scanning software G2565AA version A6.3.1 necessarily developed by Agilent Technologies?",
                            "Can Scanning software G2565AA version A6.3.1 have a developer other than Agilent Technologies?",
                            "Does the property restriction require that Agilent Technologies is assigned as the developer for Scanning software G2565AA version A6.3.1?"
                        ]
                    }
                ],
                "removed axiom": "Scanning software G2565AA version A6.3.1 propertyRestrictions [is developed by hasValue Agilent Technologies]",
                "Target CQ": [
                    "Is Scanning software G2565AA version A6.3.1 necessarily developed by Agilent Technologies?",
                    "Can Scanning software G2565AA version A6.3.1 have a developer other than Agilent Technologies?",
                    "Does the property restriction require that Agilent Technologies is assigned as the developer for Scanning software G2565AA version A6.3.1?"
                ],
                "Valid CQ": [
                    "Is scanning software G2565AA version A6.3.1 classified under scanning software?",
                    "What specific types are encompassed by the scanning software category, including G2565AA version A6.3.1?",
                    "Which broader categories does scanning software G2565AA version A6.3.1 fall under?"
                ],
                "type": "Type1"
            },
            "xls": {
                "axiom": {
                    "subClassOf": [
                        "Document format"
                    ]
                },
                "description": "xls is defined as a subclass of both XML and Document format, indicating that it is a type of document format that utilizes XML technology. It specifically refers to the Microsoft Excel spreadsheet format, which is used for storing, organizing, and exchanging tabular data in Excel.",
                "CQ": [
                    {
                        "axiom": "xls subClassOf XML",
                        "CQ": [
                            "Is xls classified as a type of XML?",
                            "Which file types are more specific variations of XML, such as xls?",
                            "What broader categories include xls in their classification hierarchy?"
                        ]
                    },
                    {
                        "axiom": "xls subClassOf Document format",
                        "CQ": [
                            "Is xls classified under the broader group of Document format?",
                            "Which formats fall under the category of Document format, specifically including xls?",
                            "What broader format categories encompass xls as a type?"
                        ]
                    }
                ],
                "removed axiom": "xls subClassOf XML",
                "Target CQ": [
                    "Is xls classified as a type of XML?",
                    "Which file types are more specific variations of XML, such as xls?",
                    "What broader categories include xls in their classification hierarchy?"
                ],
                "Valid CQ": [
                    "Is xls classified under the broader group of Document format?",
                    "Which formats fall under the category of Document format, specifically including xls?",
                    "What broader format categories encompass xls as a type?"
                ],
                "type": "Type1"
            },
            "Phylip character frequencies format": {
                "axiom": {
                    "subClassOf": [
                        "Phylogenetic continuous quantitative character format"
                    ]
                },
                "description": "Phylip character frequencies format is a subclass of both Textual format and Phylogenetic continuous quantitative character format. It is defined as a PHYLIP file format specifically intended to represent character frequency data within phylogenetic analyses. Members of this class are textual file formats designed to encode continuous quantitative character frequencies, supporting data exchange and processing in phylogenetic studies.",
                "CQ": [
                    {
                        "axiom": "Phylip character frequencies format subClassOf Textual format",
                        "CQ": [
                            "Is Phylip character frequencies format classified under the broader group of Textual format?",
                            "Which formats are specified as subcategories of Textual format, including Phylip character frequencies format?",
                            "What higher-level categories encompass Phylip character frequencies format?"
                        ]
                    },
                    {
                        "axiom": "Phylip character frequencies format subClassOf Phylogenetic continuous quantitative character format",
                        "CQ": [
                            "Is Phylogenetic continuous quantitative character format a broader category that includes Phylip character frequencies format?",
                            "Which specific formats fall under the category of Phylogenetic continuous quantitative character format, such as Phylip character frequencies format?",
                            "What higher-level format classifications encompass Phylip character frequencies format?"
                        ]
                    }
                ],
                "removed axiom": "Phylip character frequencies format subClassOf Textual format",
                "Target CQ": [
                    "Is Phylip character frequencies format classified under the broader group of Textual format?",
                    "Which formats are specified as subcategories of Textual format, including Phylip character frequencies format?",
                    "What higher-level categories encompass Phylip character frequencies format?"
                ],
                "Valid CQ": [
                    "Is Phylogenetic continuous quantitative character format a broader category that includes Phylip character frequencies format?",
                    "Which specific formats fall under the category of Phylogenetic continuous quantitative character format, such as Phylip character frequencies format?",
                    "What higher-level format classifications encompass Phylip character frequencies format?"
                ],
                "type": "Type1"
            },
            "NCBI taxonomy ID": {
                "axiom": {
                    "subClassOf": [
                        "Organism accession"
                    ]
                },
                "description": "NCBI taxonomy ID is defined as a subclass of both Ontology concept ID and Organism accession. This class represents a stable, unique identifier assigned to each taxonomic group (such as species, family, order, or any other rank) in the NCBI taxonomy database. It provides a persistent and distinct reference for organisms within the taxonomy framework.",
                "CQ": [
                    {
                        "axiom": "NCBI taxonomy ID subClassOf Ontology concept ID",
                        "CQ": [
                            "Is the NCBI taxonomy ID classified as a type of Ontology concept ID?",
                            "Which identifiers are subclasses of Ontology concept ID, including NCBI taxonomy ID?",
                            "What broader categories encompass the NCBI taxonomy ID as a subclass?"
                        ]
                    },
                    {
                        "axiom": "NCBI taxonomy ID subClassOf Organism accession",
                        "CQ": [
                            "Is every NCBI taxonomy ID classified under Organism accession?",
                            "Which specific types are encompassed by Organism accession, including NCBI taxonomy ID?",
                            "Under which broader categories is NCBI taxonomy ID organized?"
                        ]
                    }
                ],
                "removed axiom": "NCBI taxonomy ID subClassOf Ontology concept ID",
                "Target CQ": [
                    "Is the NCBI taxonomy ID classified as a type of Ontology concept ID?",
                    "Which identifiers are subclasses of Ontology concept ID, including NCBI taxonomy ID?",
                    "What broader categories encompass the NCBI taxonomy ID as a subclass?"
                ],
                "Valid CQ": [
                    "Is every NCBI taxonomy ID classified under Organism accession?",
                    "Which specific types are encompassed by Organism accession, including NCBI taxonomy ID?",
                    "Under which broader categories is NCBI taxonomy ID organized?"
                ],
                "type": "Type1"
            },
            "cghMCR": {
                "axiom": {
                    "subClassOf": [
                        "software"
                    ],
                    "propertyRestrictions": [
                        "[is executed in some data normalization]",
                        "[has specified data output some (Graph plot and [has format specification only R data frame])]",
                        "[is encoded in some R language]",
                        "[implements some MCR algorithm]",
                        "[has specified data input some [has format specification only R data frame]]"
                    ]
                },
                "description": "cghMCR is defined as a subclass of software, specifically characterized by implementation of some MCR (Minimum Common Regions) algorithm. Instances of this class are published exclusively by Bioconductor and are implemented in the R programming language. cghMCR operates within data normalization processes, requiring as input data with the format specification of an R data frame, and outputs either graphical plots or data conforming to the R data frame format. This ensures that cghMCR software tools conform to standardized input/output requirements and are integrated with Bioconductor’s platform for bioinformatics analysis.",
                "CQ": [
                    {
                        "axiom": "cghMCR subClassOf software",
                        "CQ": [
                            "Is cghMCR categorized under the broader class of software?",
                            "Which entities are specified as subclasses of software, such as cghMCR?",
                            "To what parent classes is cghMCR directly associated in the ontology?"
                        ]
                    },
                    {
                        "axiom": "cghMCR propertyRestrictions [is published by hasValue Bioconductor]",
                        "CQ": [
                            "Is cghMCR always published by Bioconductor?",
                            "Can cghMCR be published by any publisher other than Bioconductor?",
                            "Is it required that cghMCR is associated with the publisher Bioconductor?"
                        ]
                    },
                    {
                        "axiom": "cghMCR propertyRestrictions [is executed in some data normalization]",
                        "CQ": [
                            "Does every cghMCR instance require execution within a data normalization process?",
                            "Is it necessary for cghMCR to be associated with at least one occurrence of data normalization execution?",
                            "Can a cghMCR exist without being linked to any data normalization activity?"
                        ]
                    },
                    {
                        "axiom": "cghMCR propertyRestrictions [has specified data output some (Graph plot and [has format specification only R data frame])]",
                        "CQ": [
                            "Does every data output specified by cghMCR necessarily include both a graph plot and a format limited exclusively to R data frames?",
                            "Can cghMCR provide a data output that is a graph plot in a format other than an R data frame?",
                            "Is it required that the specified data output of cghMCR comprises a graph plot formatted only as an R data frame, without allowance for other output types or formats?"
                        ]
                    },
                    {
                        "axiom": "cghMCR propertyRestrictions [is encoded in some R language]",
                        "CQ": [
                            "Is it required that every cghMCR is encoded in at least one R language?",
                            "Can a cghMCR exist without being encoded in an R language?",
                            "Does the existence of a cghMCR imply the presence of an associated R language encoding?"
                        ]
                    },
                    {
                        "axiom": "cghMCR propertyRestrictions [implements some MCR algorithm]",
                        "CQ": [
                            "Is it required that cghMCR implements at least one MCR algorithm?",
                            "Can there exist a cghMCR instance that does not implement any MCR algorithm?",
                            "Does every cghMCR necessarily establish an implementation relation with some MCR algorithm?"
                        ]
                    },
                    {
                        "axiom": "cghMCR propertyRestrictions [has specified data input some [has format specification only R data frame]]",
                        "CQ": [
                            "Is it required that a cghMCR property restriction must only have data input in the format of an R data frame?",
                            "Can a cghMCR property restriction involve specified data input in any format other than R data frame?",
                            "Must every specified data input for cghMCR property restrictions comply exclusively with the 'has format specification' of R data frame?"
                        ]
                    }
                ],
                "removed axiom": "cghMCR propertyRestrictions [is published by hasValue Bioconductor]",
                "Target CQ": [
                    "Is cghMCR always published by Bioconductor?",
                    "Can cghMCR be published by any publisher other than Bioconductor?",
                    "Is it required that cghMCR is associated with the publisher Bioconductor?"
                ],
                "Valid CQ": [
                    "Is cghMCR categorized under the broader class of software?",
                    "Which entities are specified as subclasses of software, such as cghMCR?",
                    "To what parent classes is cghMCR directly associated in the ontology?",
                    "Does every cghMCR instance require execution within a data normalization process?",
                    "Is it necessary for cghMCR to be associated with at least one occurrence of data normalization execution?",
                    "Can a cghMCR exist without being linked to any data normalization activity?",
                    "Does every data output specified by cghMCR necessarily include both a graph plot and a format limited exclusively to R data frames?",
                    "Can cghMCR provide a data output that is a graph plot in a format other than an R data frame?",
                    "Is it required that the specified data output of cghMCR comprises a graph plot formatted only as an R data frame, without allowance for other output types or formats?",
                    "Is it required that every cghMCR is encoded in at least one R language?",
                    "Can a cghMCR exist without being encoded in an R language?",
                    "Does the existence of a cghMCR imply the presence of an associated R language encoding?",
                    "Is it required that cghMCR implements at least one MCR algorithm?",
                    "Can there exist a cghMCR instance that does not implement any MCR algorithm?",
                    "Does every cghMCR necessarily establish an implementation relation with some MCR algorithm?",
                    "Is it required that a cghMCR property restriction must only have data input in the format of an R data frame?",
                    "Can a cghMCR property restriction involve specified data input in any format other than R data frame?",
                    "Must every specified data input for cghMCR property restrictions comply exclusively with the 'has format specification' of R data frame?"
                ],
                "type": "Type1"
            },
            "Feature Extraction Software": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[is executed in some feature extraction]"
                    ]
                },
                "description": "Feature Extraction Software is defined as a subclass of Affymetrix GeneChip Operating Software. Members of this class are characterized by their involvement in the execution of at least one feature extraction process. This ensures that any instance of Feature Extraction Software is specialized for or utilized in performing feature extraction tasks within the context of Affymetrix GeneChip operations.",
                "CQ": [
                    {
                        "axiom": "Feature Extraction Software subClassOf Affymetrix GeneChip Operating Software",
                        "CQ": [
                            "Is Feature Extraction Software classified under Affymetrix GeneChip Operating Software?",
                            "What specific types of software are encompassed by Affymetrix GeneChip Operating Software, including Feature Extraction Software?",
                            "Which broader software categories does Feature Extraction Software fall within?"
                        ]
                    },
                    {
                        "axiom": "Feature Extraction Software propertyRestrictions [is executed in some feature extraction]",
                        "CQ": [
                            "Must every Feature Extraction Software be associated with at least one instance of execution within a feature extraction process?",
                            "Is it a requirement that Feature Extraction Software instances operate within some kind of feature extraction context?",
                            "Can Feature Extraction Software exist without being executed in any feature extraction activity?"
                        ]
                    }
                ],
                "removed axiom": "Feature Extraction Software subClassOf Affymetrix GeneChip Operating Software",
                "Target CQ": [
                    "Is Feature Extraction Software classified under Affymetrix GeneChip Operating Software?",
                    "What specific types of software are encompassed by Affymetrix GeneChip Operating Software, including Feature Extraction Software?",
                    "Which broader software categories does Feature Extraction Software fall within?"
                ],
                "Valid CQ": [
                    "Must every Feature Extraction Software be associated with at least one instance of execution within a feature extraction process?",
                    "Is it a requirement that Feature Extraction Software instances operate within some kind of feature extraction context?",
                    "Can Feature Extraction Software exist without being executed in any feature extraction activity?"
                ],
                "type": "Type1"
            },
            "Agilent Technologies Software": {
                "axiom": {
                    "subClassOf": [],
                    "equivalentClass": [
                        "[output of some (software publishing process and [has participant hasValue Agilent Technologies])]"
                    ]
                },
                "description": "Agilent Technologies Software is defined as a subclass of software, formally equivalent to any software that is the output of at least one software publishing process involving Agilent Technologies as a participant. This means that every individual in this class is a software product published with the involvement of Agilent Technologies.",
                "CQ": [
                    {
                        "axiom": "Agilent Technologies Software subClassOf software",
                        "CQ": [
                            "Does Agilent Technologies Software fall under the broader classification of software?",
                            "Which specific categories are encompassed within the software class, such as Agilent Technologies Software?",
                            "What higher-level groups include Agilent Technologies Software as a member?"
                        ]
                    },
                    {
                        "axiom": "Agilent Technologies Software equivalentClass [output of some (software publishing process and [has participant hasValue Agilent Technologies])]",
                        "CQ": [
                            "Is every Agilent Technologies Software necessarily an output of a software publishing process involving Agilent Technologies as a participant?",
                            "Is Agilent Technologies Software equivalent to any software that results from a publishing process where Agilent Technologies is involved?",
                            "Does the definition of Agilent Technologies Software require being the output of a software publishing process with Agilent Technologies as a participant?"
                        ]
                    }
                ],
                "removed axiom": "Agilent Technologies Software subClassOf software",
                "Target CQ": [
                    "Does Agilent Technologies Software fall under the broader classification of software?",
                    "Which specific categories are encompassed within the software class, such as Agilent Technologies Software?",
                    "What higher-level groups include Agilent Technologies Software as a member?"
                ],
                "Valid CQ": [
                    "Is every Agilent Technologies Software necessarily an output of a software publishing process involving Agilent Technologies as a participant?",
                    "Is Agilent Technologies Software equivalent to any software that results from a publishing process where Agilent Technologies is involved?",
                    "Does the definition of Agilent Technologies Software require being the output of a software publishing process with Agilent Technologies as a participant?"
                ],
                "type": "Type1"
            },
            "Phylogenetic tree generation (from molecular sequences)": {
                "axiom": {
                    "subClassOf": [
                        "Sequence analysis"
                    ]
                },
                "description": "Phylogenetic tree generation (from molecular sequences) is defined as a subclass of both Sequence analysis and Phylogenetic tree generation (data centric). This class encompasses methods that construct phylogenetic trees by comparing multiple molecular sequences, estimating evolutionary distances, and inferring relationships. The process is used to elucidate gene families or make functional predictions based on sequence data, focusing specifically on the use of molecular sequence information to infer evolutionary histories.",
                "CQ": [
                    {
                        "axiom": "Phylogenetic tree generation (from molecular sequences) subClassOf Sequence analysis",
                        "CQ": [
                            "Is phylogenetic tree generation (from molecular sequences) included within the scope of sequence analysis?",
                            "What are the distinct types of sequence analysis activities, including phylogenetic tree generation (from molecular sequences)?",
                            "Which higher-level analytical processes encompass phylogenetic tree generation (from molecular sequences) as a more specific method?"
                        ]
                    },
                    {
                        "axiom": "Phylogenetic tree generation (from molecular sequences) subClassOf Phylogenetic tree generation (data centric)",
                        "CQ": [
                            "Is Phylogenetic tree generation (data centric) a parent category of Phylogenetic tree generation (from molecular sequences)?",
                            "Which types of Phylogenetic tree generation (data centric) methods include the molecular sequence-based approach?",
                            "To what broader methodological categories does Phylogenetic tree generation (from molecular sequences) belong?"
                        ]
                    }
                ],
                "removed axiom": "Phylogenetic tree generation (from molecular sequences) subClassOf Phylogenetic tree generation (data centric)",
                "Target CQ": [
                    "Is Phylogenetic tree generation (data centric) a parent category of Phylogenetic tree generation (from molecular sequences)?",
                    "Which types of Phylogenetic tree generation (data centric) methods include the molecular sequence-based approach?",
                    "To what broader methodological categories does Phylogenetic tree generation (from molecular sequences) belong?"
                ],
                "Valid CQ": [
                    "Is phylogenetic tree generation (from molecular sequences) included within the scope of sequence analysis?",
                    "What are the distinct types of sequence analysis activities, including phylogenetic tree generation (from molecular sequences)?",
                    "Which higher-level analytical processes encompass phylogenetic tree generation (from molecular sequences) as a more specific method?"
                ],
                "type": "Type1"
            },
            "File format name": {
                "axiom": {
                    "subClassOf": [
                        "Name"
                    ]
                },
                "description": "File format name is defined as a subclass of both Name and Format identifier, representing a name that serves as an identifier for a file format. Members of this class denote the names of various file formats, such as HTML, PNG, PDF, EMBL, or GenBank. This class captures terms used specifically to identify different file formats within digital systems.",
                "CQ": [
                    {
                        "axiom": "File format name subClassOf Name",
                        "CQ": [
                            "Does File format name qualify as a specialized type of Name?",
                            "Which specific names fall under the category of Name, such as File format name?",
                            "What are the broader conceptual categories that encompass File format name?"
                        ]
                    },
                    {
                        "axiom": "File format name subClassOf Format identifier",
                        "CQ": [
                            "Does File format name fall under the broader class of Format identifier?",
                            "Which entities are classified as more specific instances of Format identifier, such as File format name?",
                            "What higher-level categories does File format name belong to within this ontology?"
                        ]
                    }
                ],
                "removed axiom": "File format name subClassOf Format identifier",
                "Target CQ": [
                    "Does File format name fall under the broader class of Format identifier?",
                    "Which entities are classified as more specific instances of Format identifier, such as File format name?",
                    "What higher-level categories does File format name belong to within this ontology?"
                ],
                "Valid CQ": [
                    "Does File format name qualify as a specialized type of Name?",
                    "Which specific names fall under the category of Name, such as File format name?",
                    "What are the broader conceptual categories that encompass File format name?"
                ],
                "type": "Type1"
            },
            "ChipSkipper": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[output of some (software publishing process and [has participant hasValue EMBL])]"
                    ]
                },
                "description": "ChipSkipper is defined as a subclass of software. Members of this class are characterized by being outputs of at least one software publishing process in which EMBL is a participant. This formalization ensures that any instance of ChipSkipper is not only software but is specifically associated with publishing activities involving the EMBL organization.",
                "CQ": [
                    {
                        "axiom": "ChipSkipper subClassOf software",
                        "CQ": [
                            "Is ChipSkipper categorized as a kind of software?",
                            "Which types of software include ChipSkipper as a subclass?",
                            "What broader categories encompass ChipSkipper within the ontology?"
                        ]
                    },
                    {
                        "axiom": "ChipSkipper propertyRestrictions [output of some (software publishing process and [has participant hasValue EMBL])]",
                        "CQ": [
                            "Is every output of a ChipSkipper software publishing process required to have EMBL as a participant?",
                            "Does the software publishing process output by ChipSkipper always involve EMBL as one of its participants?",
                            "Can a ChipSkipper software publishing process produce any output without the involvement of EMBL as a participant?"
                        ]
                    }
                ],
                "removed axiom": "ChipSkipper subClassOf software",
                "Target CQ": [
                    "Is ChipSkipper categorized as a kind of software?",
                    "Which types of software include ChipSkipper as a subclass?",
                    "What broader categories encompass ChipSkipper within the ontology?"
                ],
                "Valid CQ": [
                    "Is every output of a ChipSkipper software publishing process required to have EMBL as a participant?",
                    "Does the software publishing process output by ChipSkipper always involve EMBL as one of its participants?",
                    "Can a ChipSkipper software publishing process produce any output without the involvement of EMBL as a participant?"
                ],
                "type": "Type1"
            },
            "Protein binding site prediction (from structure)": {
                "axiom": {
                    "subClassOf": [
                        "Protein structural motif recognition"
                    ]
                },
                "description": "Protein binding site prediction (from structure) is defined as a subclass of both Protein structural motif recognition and Protein binding site prediction. This class encompasses methods or processes that identify or predict catalytic residues, active sites, or other ligand-binding sites within the three-dimensional structures of proteins. It focuses on structural analysis to locate functional regions involved in molecular interactions.",
                "CQ": [
                    {
                        "axiom": "Protein binding site prediction (from structure) subClassOf Protein structural motif recognition",
                        "CQ": [
                            "Is Protein structural motif recognition the direct superclass of Protein binding site prediction (from structure)?",
                            "Which specific recognition methods are classified under Protein structural motif recognition?",
                            "To which broader recognition categories does Protein binding site prediction (from structure) belong?"
                        ]
                    },
                    {
                        "axiom": "Protein binding site prediction (from structure) subClassOf Protein binding site prediction",
                        "CQ": [
                            "Does Protein binding site prediction (from structure) fall under the broader group of Protein binding site prediction?",
                            "Which methods are more specific than Protein binding site prediction, such as Protein binding site prediction (from structure)?",
                            "What broader categories does Protein binding site prediction (from structure) belong to?"
                        ]
                    }
                ],
                "removed axiom": "Protein binding site prediction (from structure) subClassOf Protein binding site prediction",
                "Target CQ": [
                    "Does Protein binding site prediction (from structure) fall under the broader group of Protein binding site prediction?",
                    "Which methods are more specific than Protein binding site prediction, such as Protein binding site prediction (from structure)?",
                    "What broader categories does Protein binding site prediction (from structure) belong to?"
                ],
                "Valid CQ": [
                    "Is Protein structural motif recognition the direct superclass of Protein binding site prediction (from structure)?",
                    "Which specific recognition methods are classified under Protein structural motif recognition?",
                    "To which broader recognition categories does Protein binding site prediction (from structure) belong?"
                ],
                "type": "Type1"
            },
            "Sequence alignment validation": {
                "axiom": {
                    "subClassOf": [
                        "Validation"
                    ]
                },
                "description": "Sequence alignment validation is defined as a subclass of both Sequence alignment analysis and Validation. This class encompasses processes that evaluate the accuracy of molecular sequence alignments. Evaluations may be based solely on sequence data or may incorporate structural information. The formalization ensures that Sequence alignment validation is recognized as both a form of analysis specific to sequence alignments and as a validation procedure within broader biological contexts.",
                "CQ": [
                    {
                        "axiom": "Sequence alignment validation subClassOf Sequence alignment analysis",
                        "CQ": [
                            "Is Sequence alignment analysis a parent category that includes Sequence alignment validation as a specific type?",
                            "Which specialized tasks fall under Sequence alignment analysis, such as Sequence alignment validation?",
                            "To which broader analysis domains does Sequence alignment validation conceptually belong?"
                        ]
                    },
                    {
                        "axiom": "Sequence alignment validation subClassOf Validation",
                        "CQ": [
                            "Is Sequence alignment validation categorized as a type of Validation?",
                            "Which Validation subclasses include Sequence alignment validation?",
                            "What broader groups does Sequence alignment validation fall under within the Validation hierarchy?"
                        ]
                    }
                ],
                "removed axiom": "Sequence alignment validation subClassOf Sequence alignment analysis",
                "Target CQ": [
                    "Is Sequence alignment analysis a parent category that includes Sequence alignment validation as a specific type?",
                    "Which specialized tasks fall under Sequence alignment analysis, such as Sequence alignment validation?",
                    "To which broader analysis domains does Sequence alignment validation conceptually belong?"
                ],
                "Valid CQ": [
                    "Is Sequence alignment validation categorized as a type of Validation?",
                    "Which Validation subclasses include Sequence alignment validation?",
                    "What broader groups does Sequence alignment validation fall under within the Validation hierarchy?"
                ],
                "type": "Type1"
            },
            "TAIR accession": {
                "axiom": {
                    "subClassOf": [
                        "Accession"
                    ]
                },
                "description": "TAIR accession is a subclass of both Accession and Identifier (hybrid). It represents an identifier specifically assigned to entries within the TAIR database, ensuring that each entry in the TAIR database can be uniquely and formally referenced using this identifier.",
                "CQ": [
                    {
                        "axiom": "TAIR accession subClassOf Accession",
                        "CQ": [
                            "Is TAIR accession categorized as a kind of Accession?",
                            "Which specific types of Accession include TAIR accession?",
                            "To what higher-level classes does TAIR accession belong?"
                        ]
                    },
                    {
                        "axiom": "TAIR accession subClassOf Identifier (hybrid)",
                        "CQ": [
                            "What identifiers are classified under the category of TAIR accession?",
                            "Is Identifier a direct parent class of TAIR accession?",
                            "Which broader classes encompass TAIR accession as their subclass?"
                        ]
                    }
                ],
                "removed axiom": "TAIR accession subClassOf Identifier (hybrid)",
                "Target CQ": [
                    "What identifiers are classified under the category of TAIR accession?",
                    "Is Identifier a direct parent class of TAIR accession?",
                    "Which broader classes encompass TAIR accession as their subclass?"
                ],
                "Valid CQ": [
                    "Is TAIR accession categorized as a kind of Accession?",
                    "Which specific types of Accession include TAIR accession?",
                    "To what higher-level classes does TAIR accession belong?"
                ],
                "type": "Type1"
            },
            "spML": {
                "axiom": {
                    "subClassOf": [
                        "XML"
                    ]
                },
                "description": "spML is a standardized format, defined as a subclass of both XML and experiment annotation format, specifically designed for the description of proteomics sample processing methods excluding the use of gels, prior to mass spectrometric protein identification. The standardization is overseen by HUPO PSI PS, and beyond proteomics, spML may also be applicable in the context of metabolomics.",
                "CQ": [
                    {
                        "axiom": "spML subClassOf XML",
                        "CQ": [
                            "Is spML classified as a more specific type of XML?",
                            "Which markup languages are categorized under XML, such as spML?",
                            "To what higher-level language categories does spML belong?"
                        ]
                    },
                    {
                        "axiom": "spML subClassOf Experiment annotation format",
                        "CQ": [
                            "Is spML categorized as a type of Experiment annotation format?",
                            "What are the more specific kinds of Experiment annotation format, including spML?",
                            "Which broader annotation format categories contain spML?"
                        ]
                    }
                ],
                "removed axiom": "spML subClassOf Experiment annotation format",
                "Target CQ": [
                    "Is spML categorized as a type of Experiment annotation format?",
                    "What are the more specific kinds of Experiment annotation format, including spML?",
                    "Which broader annotation format categories contain spML?"
                ],
                "Valid CQ": [
                    "Is spML classified as a more specific type of XML?",
                    "Which markup languages are categorized under XML, such as spML?",
                    "To what higher-level language categories does spML belong?"
                ],
                "type": "Type1"
            },
            "Sequence file editing": {
                "axiom": {
                    "subClassOf": [
                        "Sequence editing"
                    ]
                },
                "description": "Sequence file editing is a subclass of both Sequence analysis and Sequence editing. It encompasses basic, non-analytical operations performed on sequence files or reports (potentially including sequence features). Such operations include concatenating files, removing or reordering sequences, and creating subsets or new sequence files. Sequence file editing does not include analytical transformations but is focused on managing and organizing sequence data within files.",
                "CQ": [
                    {
                        "axiom": "Sequence file editing subClassOf Sequence analysis",
                        "CQ": [
                            "Does Sequence file editing fall under the broader category of Sequence analysis?",
                            "What kinds of Sequence analysis include Sequence file editing as a more specific type?",
                            "To which higher-level analyses is Sequence file editing related as a subtype?"
                        ]
                    },
                    {
                        "axiom": "Sequence file editing subClassOf Sequence editing",
                        "CQ": [
                            "Is Sequence file editing categorized under the broader class of Sequence editing?",
                            "Which editing processes are subtypes of Sequence editing, including Sequence file editing?",
                            "To which higher-level categories does Sequence file editing pertain?"
                        ]
                    }
                ],
                "removed axiom": "Sequence file editing subClassOf Sequence analysis",
                "Target CQ": [
                    "Does Sequence file editing fall under the broader category of Sequence analysis?",
                    "What kinds of Sequence analysis include Sequence file editing as a more specific type?",
                    "To which higher-level analyses is Sequence file editing related as a subtype?"
                ],
                "Valid CQ": [
                    "Is Sequence file editing categorized under the broader class of Sequence editing?",
                    "Which editing processes are subtypes of Sequence editing, including Sequence file editing?",
                    "To which higher-level categories does Sequence file editing pertain?"
                ],
                "type": "Type1"
            },
            "TraML": {
                "axiom": {
                    "subClassOf": [
                        "XML"
                    ]
                },
                "description": "TraML (Transition Markup Language) is a standardized format established by HUPO PSI MSS for representing mass spectrometry transitions. In the ontology, TraML is defined as a subclass of both XML and Mass spectrometry data format, situating it as a specialized XML-based data format specifically for encoding transition information within the mass spectrometry domain.",
                "CQ": [
                    {
                        "axiom": "TraML subClassOf XML",
                        "CQ": [
                            "Does TraML fall under the broader grouping of XML formats?",
                            "Which specific formats are categorized beneath XML, including TraML?",
                            "What higher-level classes does TraML inherit from within the ontology?"
                        ]
                    },
                    {
                        "axiom": "TraML subClassOf Mass spectrometry data format",
                        "CQ": [
                            "Is TraML classified under the broader category of Mass spectrometry data format?",
                            "Which data formats are narrower in scope than Mass spectrometry data format, such as TraML?",
                            "What higher-level categories include TraML as a member format?"
                        ]
                    }
                ],
                "removed axiom": "TraML subClassOf Mass spectrometry data format",
                "Target CQ": [
                    "Is TraML classified under the broader category of Mass spectrometry data format?",
                    "Which data formats are narrower in scope than Mass spectrometry data format, such as TraML?",
                    "What higher-level categories include TraML as a member format?"
                ],
                "Valid CQ": [
                    "Does TraML fall under the broader grouping of XML formats?",
                    "Which specific formats are categorized beneath XML, including TraML?",
                    "What higher-level classes does TraML inherit from within the ontology?"
                ],
                "type": "Type1"
            },
            "Protein property calculation (from sequence)": {
                "axiom": {
                    "subClassOf": [
                        "Protein sequence analysis"
                    ]
                },
                "description": "Protein property calculation (from sequence) is defined as a subclass of both Protein property calculation and Protein sequence analysis. This class encompasses methods that calculate or predict physical or chemical properties—specifically non-positional properties—of a protein by processing its molecular sequence. The class focuses on deriving such properties based solely on sequence analysis, enabling the assessment of overall protein characteristics without reference to specific positional residues.",
                "CQ": [
                    {
                        "axiom": "Protein property calculation (from sequence) subClassOf Protein property calculation",
                        "CQ": [
                            "Is Protein property calculation (from sequence) categorized under the broader class of Protein property calculation?",
                            "Which specific methods are encompassed by Protein property calculation, including those derived from sequence information?",
                            "What general calculation classes does Protein property calculation (from sequence) fall under?"
                        ]
                    },
                    {
                        "axiom": "Protein property calculation (from sequence) subClassOf Protein sequence analysis",
                        "CQ": [
                            "Is Protein property calculation (from sequence) classified as a form of Protein sequence analysis?",
                            "Which analyses fall under Protein sequence analysis, including Protein property calculation (from sequence)?",
                            "To what higher-level analytical category does Protein property calculation (from sequence) belong?"
                        ]
                    }
                ],
                "removed axiom": "Protein property calculation (from sequence) subClassOf Protein property calculation",
                "Target CQ": [
                    "Is Protein property calculation (from sequence) categorized under the broader class of Protein property calculation?",
                    "Which specific methods are encompassed by Protein property calculation, including those derived from sequence information?",
                    "What general calculation classes does Protein property calculation (from sequence) fall under?"
                ],
                "Valid CQ": [
                    "Is Protein property calculation (from sequence) classified as a form of Protein sequence analysis?",
                    "Which analyses fall under Protein sequence analysis, including Protein property calculation (from sequence)?",
                    "To what higher-level analytical category does Protein property calculation (from sequence) belong?"
                ],
                "type": "Type1"
            },
            "Codon usage bias calculation": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[has output some Codon usage bias]"
                    ]
                },
                "description": "Codon usage bias calculation is defined as a subclass of codon usage analysis. It is characterized by the production of at least one codon usage bias result as output. Members of this class specifically perform the calculation of codon usage bias, formally ensuring that any process or method classified here must output some form of codon usage bias metric as part of its analysis.",
                "CQ": [
                    {
                        "axiom": "Codon usage bias calculation subClassOf Codon usage analysis",
                        "CQ": [
                            "Is codon usage bias calculation classified as a type of codon usage analysis?",
                            "Which analysis methods are specialized forms of codon usage analysis, such as codon usage bias calculation?",
                            "To what broader analytical categories does codon usage bias calculation pertain?"
                        ]
                    },
                    {
                        "axiom": "Codon usage bias calculation propertyRestrictions [has output some Codon usage bias]",
                        "CQ": [
                            "Does every calculation of codon usage bias necessarily produce at least one output of the type Codon usage bias?",
                            "Is it required that a codon usage bias calculation yields an output within the Codon usage bias category?",
                            "Can a codon usage bias calculation exist without generating any Codon usage bias as output?"
                        ]
                    }
                ],
                "removed axiom": "Codon usage bias calculation subClassOf Codon usage analysis",
                "Target CQ": [
                    "Is codon usage bias calculation classified as a type of codon usage analysis?",
                    "Which analysis methods are specialized forms of codon usage analysis, such as codon usage bias calculation?",
                    "To what broader analytical categories does codon usage bias calculation pertain?"
                ],
                "Valid CQ": [
                    "Does every calculation of codon usage bias necessarily produce at least one output of the type Codon usage bias?",
                    "Is it required that a codon usage bias calculation yields an output within the Codon usage bias category?",
                    "Can a codon usage bias calculation exist without generating any Codon usage bias as output?"
                ],
                "type": "Type1"
            },
            "nexusnon": {
                "axiom": {
                    "subClassOf": [
                        "Textual format",
                        "Sequence record format (text)"
                    ]
                },
                "description": "nexusnon is a textual sequence record format, formally defined as a subclass of \"Textual format\", \"Alignment format (text)\", and \"Sequence record format (text)\". It specifically refers to the Nexus/PAUP non-interleaved sequence format, which organizes sequence data in a non-interleaved manner for phylogenetic analyses and alignments.",
                "CQ": [
                    {
                        "axiom": "nexusnon subClassOf Textual format",
                        "CQ": [
                            "Is nexusnon classified as a more specific instance within the broader class of Textual format?",
                            "Which subclasses fall under Textual format, including nexusnon?",
                            "To which higher-level classes does nexusnon belong in the hierarchy?"
                        ]
                    },
                    {
                        "axiom": "nexusnon subClassOf Alignment format (text)",
                        "CQ": [
                            "Is nexusnon categorized under the broader class of Alignment format?",
                            "Which Alignment format subclasses are defined, including nexusnon?",
                            "To which superordinate classes does nexusnon belong within the Alignment format hierarchy?"
                        ]
                    },
                    {
                        "axiom": "nexusnon subClassOf Sequence record format (text)",
                        "CQ": [
                            "Is nexusnon categorized as a type of Sequence record format (text)?",
                            "What specific formats fall under the Sequence record format (text) category, including nexusnon?",
                            "Which broader format categories encompass nexusnon?"
                        ]
                    }
                ],
                "removed axiom": "nexusnon subClassOf Alignment format (text)",
                "Target CQ": [
                    "Is nexusnon categorized under the broader class of Alignment format?",
                    "Which Alignment format subclasses are defined, including nexusnon?",
                    "To which superordinate classes does nexusnon belong within the Alignment format hierarchy?"
                ],
                "Valid CQ": [
                    "Is nexusnon classified as a more specific instance within the broader class of Textual format?",
                    "Which subclasses fall under Textual format, including nexusnon?",
                    "To which higher-level classes does nexusnon belong in the hierarchy?",
                    "Is nexusnon categorized as a type of Sequence record format (text)?",
                    "What specific formats fall under the Sequence record format (text) category, including nexusnon?",
                    "Which broader format categories encompass nexusnon?"
                ],
                "type": "Type1"
            },
            "Sequence image": {
                "axiom": {
                    "subClassOf": [
                        "Image"
                    ]
                },
                "description": "Sequence image is defined as a subclass of both Sequence report and Image, indicating that it possesses characteristics of both categories. It represents an image depicting a molecular sequence, which may also display specific sequence features or properties. This formalization ensures that any individual classified as a Sequence image is simultaneously considered both a type of Sequence report and an Image, and specifically serves to visually convey molecular sequence information and its associated annotations.",
                "CQ": [
                    {
                        "axiom": "Sequence image subClassOf Sequence report",
                        "CQ": [
                            "Is Sequence report a generalization of Sequence image?",
                            "Which specific types fall under the category of Sequence report, including Sequence image?",
                            "What broader concepts encompass Sequence image in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Sequence image subClassOf Image",
                        "CQ": [
                            "Does Sequence image fall under the broader classification of Image?",
                            "Which specific types are encompassed by the category Image, such as Sequence image?",
                            "What higher-level categories does Sequence image pertain to within the ontology?"
                        ]
                    }
                ],
                "removed axiom": "Sequence image subClassOf Sequence report",
                "Target CQ": [
                    "Is Sequence report a generalization of Sequence image?",
                    "Which specific types fall under the category of Sequence report, including Sequence image?",
                    "What broader concepts encompass Sequence image in the ontology?"
                ],
                "Valid CQ": [
                    "Does Sequence image fall under the broader classification of Image?",
                    "Which specific types are encompassed by the category Image, such as Sequence image?",
                    "What higher-level categories does Sequence image pertain to within the ontology?"
                ],
                "type": "Type1"
            },
            "Reaction ID (KEGG)": {
                "axiom": {
                    "subClassOf": [
                        "KEGG object identifier"
                    ]
                },
                "description": "Reaction ID (KEGG) is defined as a subclass of both KEGG object identifier and Reaction ID. It denotes a unique identifier assigned to a biological reaction within the KEGG reactions database. This class is used to represent and reference specific biological reactions catalogued by KEGG through a standardized identifier.",
                "CQ": [
                    {
                        "axiom": "Reaction ID (KEGG) subClassOf KEGG object identifier",
                        "CQ": [
                            "Is Reaction ID (KEGG) classified as a type of KEGG object identifier?",
                            "Which entities are more specific than KEGG object identifier, such as Reaction ID (KEGG)?",
                            "What broader identifier classes include Reaction ID (KEGG)?"
                        ]
                    },
                    {
                        "axiom": "Reaction ID (KEGG) subClassOf Reaction ID",
                        "CQ": [
                            "Are all Reaction ID (KEGG) instances classified under Reaction ID?",
                            "Which identifiers constitute subclasses of Reaction ID, specifically including Reaction ID (KEGG)?",
                            "Which upper-level categories include Reaction ID (KEGG) as a subclass?"
                        ]
                    }
                ],
                "removed axiom": "Reaction ID (KEGG) subClassOf Reaction ID",
                "Target CQ": [
                    "Are all Reaction ID (KEGG) instances classified under Reaction ID?",
                    "Which identifiers constitute subclasses of Reaction ID, specifically including Reaction ID (KEGG)?",
                    "Which upper-level categories include Reaction ID (KEGG) as a subclass?"
                ],
                "Valid CQ": [
                    "Is Reaction ID (KEGG) classified as a type of KEGG object identifier?",
                    "Which entities are more specific than KEGG object identifier, such as Reaction ID (KEGG)?",
                    "What broader identifier classes include Reaction ID (KEGG)?"
                ],
                "type": "Type1"
            },
            "Staden format": {
                "axiom": {
                    "subClassOf": [
                        "Textual format"
                    ]
                },
                "description": "Staden format is a type of sequence record format represented in text, and is a subclass of both Textual format and Sequence record format (text). It is specifically used by the Staden suite, providing a structured means to record biological sequence data in a textual form.",
                "CQ": [
                    {
                        "axiom": "Staden format subClassOf Textual format",
                        "CQ": [
                            "Does Staden format fall under the broader classification of Textual format?",
                            "Which specific formats are classified as subtypes of Textual format, such as Staden format?",
                            "What general categories encompass Staden format within the hierarchy?"
                        ]
                    },
                    {
                        "axiom": "Staden format subClassOf Sequence record format (text)",
                        "CQ": [
                            "Is every Staden format classified under Sequence record format?",
                            "Which sequence record formats encompass Staden format as a more specific type?",
                            "Under which broader record format categories is Staden format organized?"
                        ]
                    }
                ],
                "removed axiom": "Staden format subClassOf Sequence record format (text)",
                "Target CQ": [
                    "Is every Staden format classified under Sequence record format?",
                    "Which sequence record formats encompass Staden format as a more specific type?",
                    "Under which broader record format categories is Staden format organized?"
                ],
                "Valid CQ": [
                    "Does Staden format fall under the broader classification of Textual format?",
                    "Which specific formats are classified as subtypes of Textual format, such as Staden format?",
                    "What general categories encompass Staden format within the hierarchy?"
                ],
                "type": "Type1"
            },
            "TreeCon format": {
                "axiom": {
                    "subClassOf": [
                        "Textual format"
                    ]
                },
                "description": "TreeCon format is a type of phylogenetic tree format represented in text form. It is defined as a subclass of both Textual format and Phylogenetic tree format (text). The TreeCon format is specifically used for representing phylogenetic trees in a textual notation.",
                "CQ": [
                    {
                        "axiom": "TreeCon format subClassOf Textual format",
                        "CQ": [
                            "Is TreeCon format considered a specialized kind of Textual format?",
                            "What are the different subtypes classified under Textual format, including TreeCon format?",
                            "Which broader formats encompass TreeCon format as a member?"
                        ]
                    },
                    {
                        "axiom": "TreeCon format subClassOf Phylogenetic tree format (text)",
                        "CQ": [
                            "Is TreeCon format categorized under the broader class of Phylogenetic tree format?",
                            "What specific formats fall under Phylogenetic tree format, such as TreeCon format?",
                            "Which higher-level format classes does TreeCon format belong to?"
                        ]
                    }
                ],
                "removed axiom": "TreeCon format subClassOf Phylogenetic tree format (text)",
                "Target CQ": [
                    "Is TreeCon format categorized under the broader class of Phylogenetic tree format?",
                    "What specific formats fall under Phylogenetic tree format, such as TreeCon format?",
                    "Which higher-level format classes does TreeCon format belong to?"
                ],
                "Valid CQ": [
                    "Is TreeCon format considered a specialized kind of Textual format?",
                    "What are the different subtypes classified under Textual format, including TreeCon format?",
                    "Which broader formats encompass TreeCon format as a member?"
                ],
                "type": "Type1"
            },
            "search engine": {
                "axiom": {
                    "subClassOf": [
                        "software"
                    ],
                    "equivalentClass": []
                },
                "description": "search engine is defined as a subclass of software, and is formally equivalent to software that is executed in the context of web content search. This means that any instance of search engine must be a kind of software that operates specifically to facilitate the searching of web-based content.",
                "CQ": [
                    {
                        "axiom": "search engine subClassOf software",
                        "CQ": [
                            "Is search engine classified as a specialized type of software?",
                            "What broader software categories encompass search engine?",
                            "Which subtypes of software include search engine as an instance?"
                        ]
                    },
                    {
                        "axiom": "search engine equivalentClass (software and [is executed in some web content search])",
                        "CQ": [
                            "Is every search engine necessarily a type of software that is executed in at least one web content search?",
                            "Can a search engine be precisely defined as the intersection of software and those entities executed within a web content search?",
                            "Is the class of search engines equivalent to software with the additional condition of being executed in some web content search?"
                        ]
                    }
                ],
                "removed axiom": "search engine equivalentClass (software and [is executed in some web content search])",
                "Target CQ": [
                    "Is every search engine necessarily a type of software that is executed in at least one web content search?",
                    "Can a search engine be precisely defined as the intersection of software and those entities executed within a web content search?",
                    "Is the class of search engines equivalent to software with the additional condition of being executed in some web content search?"
                ],
                "Valid CQ": [
                    "Is search engine classified as a specialized type of software?",
                    "What broader software categories encompass search engine?",
                    "Which subtypes of software include search engine as an instance?"
                ],
                "type": "Type1"
            },
            "Peptide ID": {
                "axiom": {
                    "subClassOf": [
                        "Peptide identifier"
                    ]
                },
                "description": "Peptide ID is defined as a subclass of both Peptide identifier and Molecule accession. It represents the accession assigned to a peptide, as deposited in a database. This classification indicates that Peptide ID serves as a unique molecular identifier specifically for peptides within database systems, inheriting the properties and constraints of both broader parent classes.",
                "CQ": [
                    {
                        "axiom": "Peptide ID subClassOf Peptide identifier",
                        "CQ": [
                            "Is Peptide identifier a broader classification that includes Peptide ID as a more specific type?",
                            "Which identifiers are considered subclasses of Peptide identifier, such as Peptide ID?",
                            "What are the parent classes of the Peptide ID concept in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Peptide ID subClassOf Molecule accession",
                        "CQ": [
                            "Is Peptide ID classified as a type of Molecule accession?",
                            "Which identifiers are narrower in scope than Molecule accession, such as Peptide ID?",
                            "What broader categories include Peptide ID as a member?"
                        ]
                    }
                ],
                "removed axiom": "Peptide ID subClassOf Molecule accession",
                "Target CQ": [
                    "Is Peptide ID classified as a type of Molecule accession?",
                    "Which identifiers are narrower in scope than Molecule accession, such as Peptide ID?",
                    "What broader categories include Peptide ID as a member?"
                ],
                "Valid CQ": [
                    "Is Peptide identifier a broader classification that includes Peptide ID as a more specific type?",
                    "Which identifiers are considered subclasses of Peptide identifier, such as Peptide ID?",
                    "What are the parent classes of the Peptide ID concept in the ontology?"
                ],
                "type": "Type1"
            },
            "Sequence generation (protein)": {
                "axiom": {
                    "subClassOf": [
                        "Sequence generation"
                    ]
                },
                "description": "Sequence generation (protein) is defined as a subclass of both Protein analysis and Sequence generation. Members of this class are characterized by the process of generating a protein sequence by some means, reflecting activities or methods that result in the creation or determination of a protein’s amino acid sequence within the broader context of protein analysis and sequence generation tasks.",
                "CQ": [
                    {
                        "axiom": "Sequence generation (protein) subClassOf Protein analysis",
                        "CQ": [
                            "Is sequence generation (protein) a more specific type within the domain of protein analysis?",
                            "What forms of protein analysis include sequence generation (protein) as a specialized method?",
                            "Under which higher-level analytical techniques does sequence generation (protein) fall?"
                        ]
                    },
                    {
                        "axiom": "Sequence generation (protein) subClassOf Sequence generation",
                        "CQ": [
                            "Is Sequence generation (protein) classified under the broader category of Sequence generation?",
                            "What more specific types fall under Sequence generation, including Sequence generation (protein)?",
                            "To which higher-level categories does Sequence generation (protein) belong?"
                        ]
                    }
                ],
                "removed axiom": "Sequence generation (protein) subClassOf Protein analysis",
                "Target CQ": [
                    "Is sequence generation (protein) a more specific type within the domain of protein analysis?",
                    "What forms of protein analysis include sequence generation (protein) as a specialized method?",
                    "Under which higher-level analytical techniques does sequence generation (protein) fall?"
                ],
                "Valid CQ": [
                    "Is Sequence generation (protein) classified under the broader category of Sequence generation?",
                    "What more specific types fall under Sequence generation, including Sequence generation (protein)?",
                    "To which higher-level categories does Sequence generation (protein) belong?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "has specified data input": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "data"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"has specified data input\" links instances of software (domain) to data (range). It has no explicitly defined characteristics, super-properties, or inverse properties. This property specifies the particular data input required or accepted by a software entity. See also http://softwareontology.wordpress.com/2011/04/15/ins-and-outs-of-software/ for further reference.",
                "CQ": [
                    {
                        "axiom": "has specified data input domain software",
                        "CQ": [
                            "Can entities other than software be subjects of the property 'has specified data input'?",
                            "Is it mandatory that every subject using 'has specified data input' belongs to the class software?",
                            "Which types of entities are permitted as the domain of the property 'has specified data input'?"
                        ]
                    },
                    {
                        "axiom": "has specified data input range data",
                        "CQ": [
                            "Does the property 'has specified data input' have a range other than 'data'?",
                            "Is there any instance of 'data' that cannot be a value for the property 'has specified data input'?",
                            "What types of entities are permitted as the data input for 'has specified data input'?"
                        ]
                    }
                ],
                "removed axiom": "has specified data input domain software",
                "Target CQ": [
                    "Can entities other than software be subjects of the property 'has specified data input'?",
                    "Is it mandatory that every subject using 'has specified data input' belongs to the class software?",
                    "Which types of entities are permitted as the domain of the property 'has specified data input'?"
                ],
                "Valid CQ": [
                    "Does the property 'has specified data input' have a range other than 'data'?",
                    "Is there any instance of 'data' that cannot be a value for the property 'has specified data input'?",
                    "What types of entities are permitted as the data input for 'has specified data input'?"
                ],
                "type": "Type1"
            },
            "followed by": {
                "axiom": {
                    "characteristics": [
                        "Transitive"
                    ],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "owl:topObjectProperty"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"followed by\" is defined as a transitive object property and a sub-property of owl:topObjectProperty. Its domain and range are unrestricted. The inverse property is \"preceded by.\" According to the current description, this property is based on relations used in RO and BFO ontologies and is assumed to represent the transitive form, though not yet incorporated into BFO2.",
                "CQ": [
                    {
                        "axiom": "followed by characteristics Transitive",
                        "CQ": [
                            "Is followedBy a transitive property, such that if entity A is followed by entity B and entity B is followed by entity C, then entity A is also followed by entity C?",
                            "Does the transitive nature of followedBy imply that direct and indirect relationships through followedBy are inferred between individuals?",
                            "Can the ontology infer that entity X is followed by entity Z given that X is followed by Y and Y is followed by Z via the followedBy property?"
                        ]
                    },
                    {
                        "axiom": "followed by domain None",
                        "CQ": [
                            "What types of subjects can the property 'hasBase' be applied to?",
                            "Is it accurate that the property 'hasBase' does not have a defined domain?",
                            "Which entities are permitted as domains for the property 'hasBase'?"
                        ]
                    },
                    {
                        "axiom": "followed by range None",
                        "CQ": [
                            "Is it correct that the property 'hasBase' does not have a range specified?",
                            "What entities can occur as the range of the property 'hasBase'?",
                            "Can 'hasBase' relate a Pizza to an entity that is not defined as its range?"
                        ]
                    },
                    {
                        "axiom": "followed by subPropertyOf owl:topObjectProperty",
                        "CQ": [
                            "Is followed by classified as a subproperty under owl:topObjectProperty in the ontology?",
                            "What superproperties does followed by inherit from according to the property hierarchy?",
                            "Which properties within the ontology are defined as subproperties of owl:topObjectProperty?"
                        ]
                    },
                    {
                        "axiom": "followed by inverseOf preceded by",
                        "CQ": [
                            "What is the inverse property of 'followed by' in the ontology?",
                            "If entity A is followed by entity B, does it necessarily mean that B is preceded by A?",
                            "How do the properties 'followed by' and 'preceded by' correspond to each other within the ontology?"
                        ]
                    }
                ],
                "removed axiom": "followed by inverseOf preceded by",
                "Target CQ": [
                    "What is the inverse property of 'followed by' in the ontology?",
                    "If entity A is followed by entity B, does it necessarily mean that B is preceded by A?",
                    "How do the properties 'followed by' and 'preceded by' correspond to each other within the ontology?"
                ],
                "Valid CQ": [
                    "Is followedBy a transitive property, such that if entity A is followed by entity B and entity B is followed by entity C, then entity A is also followed by entity C?",
                    "Does the transitive nature of followedBy imply that direct and indirect relationships through followedBy are inferred between individuals?",
                    "Can the ontology infer that entity X is followed by entity Z given that X is followed by Y and Y is followed by Z via the followedBy property?",
                    "What types of subjects can the property 'hasBase' be applied to?",
                    "Is it accurate that the property 'hasBase' does not have a defined domain?",
                    "Which entities are permitted as domains for the property 'hasBase'?",
                    "Is it correct that the property 'hasBase' does not have a range specified?",
                    "What entities can occur as the range of the property 'hasBase'?",
                    "Can 'hasBase' relate a Pizza to an entity that is not defined as its range?",
                    "Is followed by classified as a subproperty under owl:topObjectProperty in the ontology?",
                    "What superproperties does followed by inherit from according to the property hierarchy?",
                    "Which properties within the ontology are defined as subproperties of owl:topObjectProperty?"
                ],
                "type": "Type1"
            },
            "has license": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "software license"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"has license\" has no special characteristics or domain restriction. Its range is specified as \"software license,\" indicating it links subjects to software license entities. It is a sub-property of \"is about,\" meaning every \"has license\" assertion implies an \"is about\" relation. No inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "has license domain None",
                        "CQ": [
                            "What can be the domain of the property 'has license'?",
                            "Is it correct that the property 'has license' does not have a defined domain?",
                            "Are there any entities that can be associated as subjects with the property 'has license'?"
                        ]
                    },
                    {
                        "axiom": "has license range software license",
                        "CQ": [
                            "Does the property 'has license' ever have a range different from 'software license'?",
                            "Is every entity linked by the 'has license' property required to be a 'software license'?",
                            "What types of resources can appear as the range for the 'has license' property?"
                        ]
                    },
                    {
                        "axiom": "has license subPropertyOf is about",
                        "CQ": [
                            "Which properties are defined as subproperties of is about?",
                            "Does the use of has license always entail the use of is about?",
                            "Is has license restricted to contexts where is about is applicable?"
                        ]
                    }
                ],
                "removed axiom": "has license subPropertyOf is about",
                "Target CQ": [
                    "Which properties are defined as subproperties of is about?",
                    "Does the use of has license always entail the use of is about?",
                    "Is has license restricted to contexts where is about is applicable?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'has license'?",
                    "Is it correct that the property 'has license' does not have a defined domain?",
                    "Are there any entities that can be associated as subjects with the property 'has license'?",
                    "Does the property 'has license' ever have a range different from 'software license'?",
                    "Is every entity linked by the 'has license' property required to be a 'software license'?",
                    "What types of resources can appear as the range for the 'has license' property?"
                ],
                "type": "Type1"
            },
            "output of": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"output of\" does not have explicitly defined characteristics, domain, or range restrictions. It is a sub-property of \"participates in,\" indicating that it represents a more specific relationship within the broader context of participation. No inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "output of domain None",
                        "CQ": [
                            "What types of entities can serve as the domain of the property 'hasBase'?",
                            "Is it accurate that the property 'hasBase' has no specified domain?",
                            "Are there any constraints on what can appear as the subject when using the 'hasBase' property?"
                        ]
                    },
                    {
                        "axiom": "output of range None",
                        "CQ": [
                            "Is it correct that the property 'hasBase' does not have a specified range?",
                            "What types of entities can serve as the range for the property 'hasBase'?",
                            "Can 'hasBase' relate a Pizza to something that is not a PizzaBase, given the unspecified range?"
                        ]
                    },
                    {
                        "axiom": "output of subPropertyOf participates in",
                        "CQ": [
                            "Is every output of a property that is a subproperty of output also considered to participate in some activity or process?",
                            "Which properties are included as subproperties under output and thereby inherit the participates in relationship?",
                            "What are the superproperties of output based on its subPropertyOf relationship with participates in?"
                        ]
                    }
                ],
                "removed axiom": "output of subPropertyOf participates in",
                "Target CQ": [
                    "Is every output of a property that is a subproperty of output also considered to participate in some activity or process?",
                    "Which properties are included as subproperties under output and thereby inherit the participates in relationship?",
                    "What are the superproperties of output based on its subPropertyOf relationship with participates in?"
                ],
                "Valid CQ": [
                    "What types of entities can serve as the domain of the property 'hasBase'?",
                    "Is it accurate that the property 'hasBase' has no specified domain?",
                    "Are there any constraints on what can appear as the subject when using the 'hasBase' property?",
                    "Is it correct that the property 'hasBase' does not have a specified range?",
                    "What types of entities can serve as the range for the property 'hasBase'?",
                    "Can 'hasBase' relate a Pizza to something that is not a PizzaBase, given the unspecified range?"
                ],
                "type": "Type1"
            }
        }
    },
    "exchangemodel": {
        "classes": {
            "Measurement": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[describes only event:Measurement]",
                        "[providedBy only (event:Person or Sensor)]"
                    ]
                },
                "description": "Measurement is defined as a subclass of Observation. Every Measurement instance formally describes only entities classified as event:Measurement, ensuring it cannot describe other types of events. Additionally, each Measurement must be provided by either an event:Person or a Sensor, restricting its provenance to these two sources. This specification captures the nature of measurements as observational entities exclusively linked to specific events and originating strictly from people or sensor devices.",
                "CQ": [
                    {
                        "axiom": "Measurement subClassOf Observation",
                        "CQ": [
                            "Is Measurement classified as a narrower concept under Observation?",
                            "Which specialized forms of Observation does Measurement represent?",
                            "What broader categories encompass Measurement within the context of Observation?"
                        ]
                    },
                    {
                        "axiom": "Measurement propertyRestrictions [describes only event:Measurement]",
                        "CQ": [
                            "Is every instance described by the Measurement property necessarily an event:Measurement?",
                            "Can Measurement describe anything other than event:Measurement entities?",
                            "Does the Measurement property exclusively reference individuals classified as event:Measurement?"
                        ]
                    },
                    {
                        "axiom": "Measurement propertyRestrictions [providedBy only (event:Person or Sensor)]",
                        "CQ": [
                            "Are measurements permitted to be provided exclusively by persons or sensors?",
                            "Is it required that only a person or a sensor can be the provider of a measurement?",
                            "Does the measurement class preclude any provider that is not classified as either a person or a sensor?"
                        ]
                    }
                ],
                "removed axiom": "Measurement subClassOf Observation",
                "Target CQ": [
                    "Is Measurement classified as a narrower concept under Observation?",
                    "Which specialized forms of Observation does Measurement represent?",
                    "What broader categories encompass Measurement within the context of Observation?"
                ],
                "Valid CQ": [
                    "Is every instance described by the Measurement property necessarily an event:Measurement?",
                    "Can Measurement describe anything other than event:Measurement entities?",
                    "Does the Measurement property exclusively reference individuals classified as event:Measurement?",
                    "Are measurements permitted to be provided exclusively by persons or sensors?",
                    "Is it required that only a person or a sensor can be the provider of a measurement?",
                    "Does the measurement class preclude any provider that is not classified as either a person or a sensor?"
                ],
                "type": "Type1"
            },
            "Report": {
                "axiom": {
                    "propertyRestrictions": [
                        "[hasPlausibilityMetric exactly 1 xsd:double]",
                        "[hasPlausibilityMetric only xsd:double]",
                        "[describes only (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]",
                        "[providedBy exactly 1 event:Person]",
                        "[providedBy only event:Person]",
                        "[hasReportingTime only time:Instant]",
                        "[describes exactly 1 (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]"
                    ]
                },
                "description": "Report is a class defined by a set of strict property restrictions: each instance must be provided by exactly one event:Person and must refer to exactly one instance of either home:Questionnaire, lab:ClinicalRecord, or lab:DemographicCharacteristicsRecord. Additionally, every Report must have exactly one hasPlausibilityMetric value of type xsd:double and exactly one hasReportingTime value of type time:Instant, with no other values permitted for these properties. The class definition ensures that each Report is uniquely associated with one provider, one time of reporting, a plausibility metric, and one described source record, reflecting a precise and singular reporting activity.",
                "CQ": [
                    {
                        "axiom": "Report propertyRestrictions [hasPlausibilityMetric exactly 1 xsd:double]",
                        "CQ": [
                            "Is it required that a Report must have exactly one value for the property 'hasPlausibilityMetric' of type xsd:double?",
                            "Can a Report have more than one or zero 'hasPlausibilityMetric' values assigned?",
                            "Does every Report necessarily include one and only one 'hasPlausibilityMetric' property with a datatype of xsd:double?"
                        ]
                    },
                    {
                        "axiom": "Report propertyRestrictions [hasPlausibilityMetric only xsd:double]",
                        "CQ": [
                            "Is every reported plausibility metric required to be exclusively of data type xsd:double?",
                            "Can a report have a plausibility metric with any datatype other than xsd:double?",
                            "Are all values permitted for the property 'hasPlausibilityMetric' in a report necessarily restricted to xsd:double?"
                        ]
                    },
                    {
                        "axiom": "Report propertyRestrictions [describes only (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]",
                        "CQ": [
                            "Are reports allowed to describe any resource other than Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                            "Is a report's describes property strictly limited to Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                            "Does every report exclusively describe either a Questionnaire, Clinical Record, or Demographic Characteristics Record?"
                        ]
                    },
                    {
                        "axiom": "Report propertyRestrictions [providedBy exactly 1 event:Person]",
                        "CQ": [
                            "Is a report required to be provided by exactly one individual who is classified as an event:Person?",
                            "Can a report ever have more or fewer than one event:Person as its provider?",
                            "Does the specification of report provision restrict providers exclusively to a single event:Person?"
                        ]
                    },
                    {
                        "axiom": "Report propertyRestrictions [hasReportingTime exactly 1 time:Instant]",
                        "CQ": [
                            "Is it mandatory that each Report has exactly one hasReportingTime property pointing to a time:Instant?",
                            "Can a Report possess more than one hasReportingTime value, or is it strictly limited to one time:Instant?",
                            "Does the ontology exclude the possibility of a Report having zero or multiple hasReportingTime assignments?"
                        ]
                    },
                    {
                        "axiom": "Report propertyRestrictions [providedBy only event:Person]",
                        "CQ": [
                            "Are all providers of a Report necessarily individuals classified as event:Person?",
                            "Can a Report have a provider that is not an event:Person?",
                            "Is it required that no Report is provided by any entity except those of type event:Person?"
                        ]
                    },
                    {
                        "axiom": "Report propertyRestrictions [hasReportingTime only time:Instant]",
                        "CQ": [
                            "Is every reporting time associated with a Report necessarily an instance of time:Instant?",
                            "Can a Report have a reporting time that is not of type time:Instant?",
                            "Are all possible values for the hasReportingTime property of a Report restricted exclusively to time:Instant?"
                        ]
                    },
                    {
                        "axiom": "Report propertyRestrictions [describes exactly 1 (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]",
                        "CQ": [
                            "Is a Report required to describe exactly one entity that is either a Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                            "Can a Report describe more than one or none of the following: Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                            "Does the axiom restrict each Report to be associated with a single instance from the set: Questionnaire, Clinical Record, or Demographic Characteristics Record?"
                        ]
                    }
                ],
                "removed axiom": "Report propertyRestrictions [hasReportingTime exactly 1 time:Instant]",
                "Target CQ": [
                    "Is it mandatory that each Report has exactly one hasReportingTime property pointing to a time:Instant?",
                    "Can a Report possess more than one hasReportingTime value, or is it strictly limited to one time:Instant?",
                    "Does the ontology exclude the possibility of a Report having zero or multiple hasReportingTime assignments?"
                ],
                "Valid CQ": [
                    "Is it required that a Report must have exactly one value for the property 'hasPlausibilityMetric' of type xsd:double?",
                    "Can a Report have more than one or zero 'hasPlausibilityMetric' values assigned?",
                    "Does every Report necessarily include one and only one 'hasPlausibilityMetric' property with a datatype of xsd:double?",
                    "Is every reported plausibility metric required to be exclusively of data type xsd:double?",
                    "Can a report have a plausibility metric with any datatype other than xsd:double?",
                    "Are all values permitted for the property 'hasPlausibilityMetric' in a report necessarily restricted to xsd:double?",
                    "Are reports allowed to describe any resource other than Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                    "Is a report's describes property strictly limited to Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                    "Does every report exclusively describe either a Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                    "Is a report required to be provided by exactly one individual who is classified as an event:Person?",
                    "Can a report ever have more or fewer than one event:Person as its provider?",
                    "Does the specification of report provision restrict providers exclusively to a single event:Person?",
                    "Are all providers of a Report necessarily individuals classified as event:Person?",
                    "Can a Report have a provider that is not an event:Person?",
                    "Is it required that no Report is provided by any entity except those of type event:Person?",
                    "Is every reporting time associated with a Report necessarily an instance of time:Instant?",
                    "Can a Report have a reporting time that is not of type time:Instant?",
                    "Are all possible values for the hasReportingTime property of a Report restricted exclusively to time:Instant?",
                    "Is a Report required to describe exactly one entity that is either a Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                    "Can a Report describe more than one or none of the following: Questionnaire, Clinical Record, or Demographic Characteristics Record?",
                    "Does the axiom restrict each Report to be associated with a single instance from the set: Questionnaire, Clinical Record, or Demographic Characteristics Record?"
                ],
                "type": "Type1"
            }
        },
        "properties": {}
    },
    "pizza": {
        "classes": {
            "American": {
                "axiom": {
                    "subClassOf": [
                        "NamedPizza"
                    ],
                    "disjointWith": [
                        "Mushroom",
                        "LaReine",
                        "Napoletana",
                        "Veneziana",
                        "AmericanHot",
                        "UnclosedPizza",
                        "Capricciosa",
                        "FruttiDiMare",
                        "Siciliana",
                        "Cajun",
                        "Margherita",
                        "SloppyGiuseppe",
                        "Caprina",
                        "Soho",
                        "Parmense",
                        "PolloAdAstra",
                        "Fiorentina",
                        "Rosa",
                        "QuattroFormaggi",
                        "Giardiniera",
                        "FourSeasons"
                    ],
                    "propertyRestrictions": [
                        "[hasTopping some TomatoTopping]",
                        "[hasTopping some PeperoniSausageTopping]",
                        "[hasCountryOfOrigin hasValue America]",
                        "[hasTopping some MozzarellaTopping]",
                        "[hasTopping only (MozzarellaTopping or PeperoniSausageTopping or TomatoTopping)]"
                    ]
                },
                "description": "American is defined as a subclass of NamedPizza and is explicitly disjoint from several other specific pizza types, such as Mushroom, LaReine, Napoletana, and others, ensuring that an individual cannot simultaneously belong to more than one of these classes. Members of the American class must have the following toppings: tomato topping, pepperoni sausage topping, and mozzarella topping. Furthermore, they can have only mozzarella, pepperoni sausage, or tomato as toppings—no other toppings are permitted. Additionally, the country of origin for this pizza is specified as America. This formalization distinguishes the American pizza by its unique combination of toppings and origin, while preventing any overlap with the other named pizzas.",
                "CQ": [
                    {
                        "axiom": "American subClassOf NamedPizza",
                        "CQ": [
                            "Is American categorized as a specific type of NamedPizza?",
                            "Which pizzas are classified under the broader group NamedPizza?",
                            "What overarching categories does American fall under in the pizza hierarchy?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Mushroom",
                        "CQ": [
                            "What type of separation is defined between American and Mushroom in the ontology?",
                            "Is it allowed for an entity to be classified as both American and Mushroom?",
                            "Which additional classes are specified as disjoint with Mushroom?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith LaReine",
                        "CQ": [
                            "What formal separation is defined between American and LaReine in the ontology?",
                            "Is it possible for a pizza to belong to both the American and LaReine classes simultaneously?",
                            "Which classes are specified as disjoint with LaReine?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Napoletana",
                        "CQ": [
                            "What logical separation is specified between American and Napoletana in the ontology?",
                            "Can an entity be classified as both American and Napoletana simultaneously?",
                            "Which classes are defined as disjoint with Napoletana?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Veneziana",
                        "CQ": [
                            "What is the ontology-specified relationship between American and Veneziana?",
                            "Is there any instance that can belong to both American and Veneziana pizza classes?",
                            "Which classes are defined as disjoint with American in the current ontology?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith AmericanHot",
                        "CQ": [
                            "Are the classes American and AmericanHot mutually exclusive within the ontology?",
                            "Can an individual belong to both the American and AmericanHot pizza categories?",
                            "Which other classes are explicitly stated to be disjoint with AmericanHot?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith UnclosedPizza",
                        "CQ": [
                            "What formal separation exists between American and UnclosedPizza within the ontology?",
                            "Is there any pizza that can be classified as both American and UnclosedPizza?",
                            "Which classes are specified as disjoint with UnclosedPizza?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith PrinceCarlo",
                        "CQ": [
                            "Is there any logical relationship specified between American and PrinceCarlo in the ontology?",
                            "Could an individual be classified as both American and PrinceCarlo at once?",
                            "Which classes are marked as mutually exclusive with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Capricciosa",
                        "CQ": [
                            "How does the ontology delineate the categories American and Capricciosa in relation to each other?",
                            "Is it permissible for a pizza to be classified as both American and Capricciosa?",
                            "Which classes are formally marked as disjoint with Capricciosa in the ontology?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith FruttiDiMare",
                        "CQ": [
                            "How does the ontology specify exclusivity between American and FruttiDiMare pizza types?",
                            "Is it allowable for a pizza to belong simultaneously to both American and FruttiDiMare categories?",
                            "Which pizza varieties are asserted as disjoint with FruttiDiMare?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Siciliana",
                        "CQ": [
                            "How does the ontology represent the separation between American and Siciliana pizza types?",
                            "Is any pizza instance permitted to belong to both the American and Siciliana categories simultaneously?",
                            "Which classes are formally specified as mutually exclusive with Siciliana within the ontology?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Cajun",
                        "CQ": [
                            "How are American and Cajun classes differentiated in the ontology?",
                            "Is it allowed for an entity to be classified as both American and Cajun?",
                            "Which classes are identified as mutually exclusive with Cajun?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Margherita",
                        "CQ": [
                            "What is the logical relationship defined between American and Margherita pizzas in the ontology?",
                            "Can a single pizza instance belong to both the American and Margherita categories?",
                            "Which pizza types are formally specified as mutually exclusive with Margherita?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith SloppyGiuseppe",
                        "CQ": [
                            "How are American and SloppyGiuseppe classified in relation to each other within the ontology?",
                            "Is it allowed for a pizza to belong to both the American and SloppyGiuseppe categories?",
                            "Which other types of pizza are specified as disjoint from SloppyGiuseppe?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Caprina",
                        "CQ": [
                            "What formal distinction is made between American and Caprina in the ontology?",
                            "Is an entity permitted to be classified as both American and Caprina?",
                            "Which classes are specified as disjoint with Caprina?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Soho",
                        "CQ": [
                            "What is the formal distinction between the classes American and Soho in the ontology?",
                            "Is any entity permitted to be classified as both American and Soho simultaneously?",
                            "Which classes are specified as disjoint with Soho?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Parmense",
                        "CQ": [
                            "What ontological relationship exists between American and Parmense?",
                            "Can an individual be classified as both American and Parmense?",
                            "Which classes are defined as mutually exclusive with Parmense?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith PolloAdAstra",
                        "CQ": [
                            "Are there any instances that can belong to both the American and PolloAdAstra pizza classes?",
                            "Which pizza categories are declared mutually exclusive with American in the ontology?",
                            "What ontological separation exists between American and PolloAdAstra pizza classes?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Fiorentina",
                        "CQ": [
                            "What logical separation is present between American and Fiorentina within the ontology?",
                            "Is it conceivable for a pizza to be classified as both American and Fiorentina simultaneously?",
                            "Which classes are specified as disjoint with Fiorentina?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Rosa",
                        "CQ": [
                            "What ontological separation is defined between American and Rosa?",
                            "Is there any entity that can simultaneously be classified as both American and Rosa?",
                            "Which classes are specified as disjoint with Rosa within the ontology?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith QuattroFormaggi",
                        "CQ": [
                            "How does the ontology differentiate between American and QuattroFormaggi pizzas?",
                            "Is there any scenario where a pizza could belong to both American and QuattroFormaggi categories?",
                            "Which pizza types are specified as mutually exclusive with QuattroFormaggi?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith Giardiniera",
                        "CQ": [
                            "How does the ontology differentiate between the classes American and Giardiniera?",
                            "Is there any instance that can simultaneously belong to both American and Giardiniera categories?",
                            "Which classes are identified as mutually exclusive with American?"
                        ]
                    },
                    {
                        "axiom": "American disjointWith FourSeasons",
                        "CQ": [
                            "What ontological separation is specified between American and FourSeasons?",
                            "Is it allowable for an individual instance to be both American and FourSeasons simultaneously?",
                            "Which classes are stated as disjoint with FourSeasons in the ontology?"
                        ]
                    },
                    {
                        "axiom": "American propertyRestrictions [hasTopping some TomatoTopping]",
                        "CQ": [
                            "Is it necessary for an American pizza to have at least one topping that is a TomatoTopping?",
                            "Can an American pizza exist without any TomatoTopping included as a topping?",
                            "Does every instance classified as American have at least one relationship via hasTopping to TomatoTopping?"
                        ]
                    },
                    {
                        "axiom": "American propertyRestrictions [hasTopping some PeperoniSausageTopping]",
                        "CQ": [
                            "Does an American pizza necessarily include at least one Peperoni Sausage topping?",
                            "Is the presence of Peperoni Sausage topping required for something to be classified as American pizza?",
                            "Can an American pizza exist without having any Peperoni Sausage toppings?"
                        ]
                    },
                    {
                        "axiom": "American propertyRestrictions [hasCountryOfOrigin hasValue America]",
                        "CQ": [
                            "Does every American item necessarily have 'America' as its country of origin?",
                            "Are there any American entities that originate from a country other than America?",
                            "Is 'America' the sole country of origin permitted for things classified as American?"
                        ]
                    },
                    {
                        "axiom": "American propertyRestrictions [hasTopping some MozzarellaTopping]",
                        "CQ": [
                            "Is it required for an American pizza to have at least one Mozzarella topping?",
                            "Can an American pizza exist without any Mozzarella topping present?",
                            "Does every American pizza necessarily include Mozzarella as one of its toppings?"
                        ]
                    },
                    {
                        "axiom": "American propertyRestrictions [hasTopping only (MozzarellaTopping or PeperoniSausageTopping or TomatoTopping)]",
                        "CQ": [
                            "Are all toppings on an American pizza limited exclusively to Mozzarella, Peperoni Sausage, or Tomato?",
                            "Can an American pizza include any topping apart from Mozzarella, Peperoni Sausage, and Tomato?",
                            "Is it a requirement that every topping found on an American pizza be either Mozzarella, Peperoni Sausage, or Tomato?"
                        ]
                    }
                ],
                "removed axiom": "American disjointWith PrinceCarlo",
                "Target CQ": [
                    "Is there any logical relationship specified between American and PrinceCarlo in the ontology?",
                    "Could an individual be classified as both American and PrinceCarlo at once?",
                    "Which classes are marked as mutually exclusive with PrinceCarlo?"
                ],
                "Valid CQ": [
                    "Is American categorized as a specific type of NamedPizza?",
                    "Which pizzas are classified under the broader group NamedPizza?",
                    "What overarching categories does American fall under in the pizza hierarchy?",
                    "What type of separation is defined between American and Mushroom in the ontology?",
                    "Is it allowed for an entity to be classified as both American and Mushroom?",
                    "Which additional classes are specified as disjoint with Mushroom?",
                    "What formal separation is defined between American and LaReine in the ontology?",
                    "Is it possible for a pizza to belong to both the American and LaReine classes simultaneously?",
                    "Which classes are specified as disjoint with LaReine?",
                    "What logical separation is specified between American and Napoletana in the ontology?",
                    "Can an entity be classified as both American and Napoletana simultaneously?",
                    "Which classes are defined as disjoint with Napoletana?",
                    "What is the ontology-specified relationship between American and Veneziana?",
                    "Is there any instance that can belong to both American and Veneziana pizza classes?",
                    "Which classes are defined as disjoint with American in the current ontology?",
                    "Are the classes American and AmericanHot mutually exclusive within the ontology?",
                    "Can an individual belong to both the American and AmericanHot pizza categories?",
                    "Which other classes are explicitly stated to be disjoint with AmericanHot?",
                    "What formal separation exists between American and UnclosedPizza within the ontology?",
                    "Is there any pizza that can be classified as both American and UnclosedPizza?",
                    "Which classes are specified as disjoint with UnclosedPizza?",
                    "How does the ontology delineate the categories American and Capricciosa in relation to each other?",
                    "Is it permissible for a pizza to be classified as both American and Capricciosa?",
                    "Which classes are formally marked as disjoint with Capricciosa in the ontology?",
                    "How does the ontology specify exclusivity between American and FruttiDiMare pizza types?",
                    "Is it allowable for a pizza to belong simultaneously to both American and FruttiDiMare categories?",
                    "Which pizza varieties are asserted as disjoint with FruttiDiMare?",
                    "How does the ontology represent the separation between American and Siciliana pizza types?",
                    "Is any pizza instance permitted to belong to both the American and Siciliana categories simultaneously?",
                    "Which classes are formally specified as mutually exclusive with Siciliana within the ontology?",
                    "How are American and Cajun classes differentiated in the ontology?",
                    "Is it allowed for an entity to be classified as both American and Cajun?",
                    "Which classes are identified as mutually exclusive with Cajun?",
                    "What is the logical relationship defined between American and Margherita pizzas in the ontology?",
                    "Can a single pizza instance belong to both the American and Margherita categories?",
                    "Which pizza types are formally specified as mutually exclusive with Margherita?",
                    "How are American and SloppyGiuseppe classified in relation to each other within the ontology?",
                    "Is it allowed for a pizza to belong to both the American and SloppyGiuseppe categories?",
                    "Which other types of pizza are specified as disjoint from SloppyGiuseppe?",
                    "What formal distinction is made between American and Caprina in the ontology?",
                    "Is an entity permitted to be classified as both American and Caprina?",
                    "Which classes are specified as disjoint with Caprina?",
                    "What is the formal distinction between the classes American and Soho in the ontology?",
                    "Is any entity permitted to be classified as both American and Soho simultaneously?",
                    "Which classes are specified as disjoint with Soho?",
                    "What ontological relationship exists between American and Parmense?",
                    "Can an individual be classified as both American and Parmense?",
                    "Which classes are defined as mutually exclusive with Parmense?",
                    "Are there any instances that can belong to both the American and PolloAdAstra pizza classes?",
                    "Which pizza categories are declared mutually exclusive with American in the ontology?",
                    "What ontological separation exists between American and PolloAdAstra pizza classes?",
                    "What logical separation is present between American and Fiorentina within the ontology?",
                    "Is it conceivable for a pizza to be classified as both American and Fiorentina simultaneously?",
                    "Which classes are specified as disjoint with Fiorentina?",
                    "What ontological separation is defined between American and Rosa?",
                    "Is there any entity that can simultaneously be classified as both American and Rosa?",
                    "Which classes are specified as disjoint with Rosa within the ontology?",
                    "How does the ontology differentiate between American and QuattroFormaggi pizzas?",
                    "Is there any scenario where a pizza could belong to both American and QuattroFormaggi categories?",
                    "Which pizza types are specified as mutually exclusive with QuattroFormaggi?",
                    "How does the ontology differentiate between the classes American and Giardiniera?",
                    "Is there any instance that can simultaneously belong to both American and Giardiniera categories?",
                    "Which classes are identified as mutually exclusive with American?",
                    "What ontological separation is specified between American and FourSeasons?",
                    "Is it allowable for an individual instance to be both American and FourSeasons simultaneously?",
                    "Which classes are stated as disjoint with FourSeasons in the ontology?",
                    "Is it necessary for an American pizza to have at least one topping that is a TomatoTopping?",
                    "Can an American pizza exist without any TomatoTopping included as a topping?",
                    "Does every instance classified as American have at least one relationship via hasTopping to TomatoTopping?",
                    "Does an American pizza necessarily include at least one Peperoni Sausage topping?",
                    "Is the presence of Peperoni Sausage topping required for something to be classified as American pizza?",
                    "Can an American pizza exist without having any Peperoni Sausage toppings?",
                    "Does every American item necessarily have 'America' as its country of origin?",
                    "Are there any American entities that originate from a country other than America?",
                    "Is 'America' the sole country of origin permitted for things classified as American?",
                    "Is it required for an American pizza to have at least one Mozzarella topping?",
                    "Can an American pizza exist without any Mozzarella topping present?",
                    "Does every American pizza necessarily include Mozzarella as one of its toppings?",
                    "Are all toppings on an American pizza limited exclusively to Mozzarella, Peperoni Sausage, or Tomato?",
                    "Can an American pizza include any topping apart from Mozzarella, Peperoni Sausage, and Tomato?",
                    "Is it a requirement that every topping found on an American pizza be either Mozzarella, Peperoni Sausage, or Tomato?"
                ],
                "type": "Type1"
            },
            "Capricciosa": {
                "axiom": {
                    "subClassOf": [
                        "NamedPizza"
                    ],
                    "disjointWith": [
                        "Mushroom",
                        "LaReine",
                        "Napoletana",
                        "Veneziana",
                        "AmericanHot",
                        "UnclosedPizza",
                        "PrinceCarlo",
                        "FruttiDiMare",
                        "Siciliana",
                        "Cajun",
                        "Margherita",
                        "SloppyGiuseppe",
                        "Caprina",
                        "Soho",
                        "Parmense",
                        "PolloAdAstra",
                        "Fiorentina",
                        "Rosa",
                        "QuattroFormaggi",
                        "Giardiniera",
                        "FourSeasons"
                    ],
                    "propertyRestrictions": [
                        "[hasTopping some TomatoTopping]",
                        "[hasTopping some HamTopping]",
                        "[hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or PeperonataTopping or HamTopping or CaperTopping or OliveTopping)]",
                        "[hasTopping some OliveTopping]",
                        "[hasTopping some MozzarellaTopping]",
                        "[hasTopping some AnchoviesTopping]",
                        "[hasTopping some PeperonataTopping]",
                        "[hasTopping some CaperTopping]"
                    ]
                },
                "description": "Capricciosa is defined as a subclass of NamedPizza, and is explicitly disjoint from a range of other specified pizza types, ensuring no individual can simultaneously belong to Capricciosa and any of those classes. Members of Capricciosa must have at least one topping each of tomato, ham, olive, mozzarella, anchovies, peperonata, and caper. Additionally, their toppings are strictly limited to only anchovies, mozzarella, tomato, peperonata, ham, caper, or olive—no other toppings are permitted. This formalization ensures a precise and consistent definition for Capricciosa pizza within the ontology.",
                "CQ": [
                    {
                        "axiom": "Capricciosa subClassOf NamedPizza",
                        "CQ": [
                            "Is Capricciosa classified under the broader category of NamedPizza?",
                            "What specific pizza types are encompassed by NamedPizza, including Capricciosa?",
                            "Which higher-level pizza classifications does Capricciosa fall under?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Mushroom",
                        "CQ": [
                            "How is the incompatibility between Capricciosa and Mushroom represented in the ontology?",
                            "Is there any class instance that can simultaneously belong to both Capricciosa and Mushroom?",
                            "Which classes are formally specified as mutually exclusive with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith LaReine",
                        "CQ": [
                            "What ontological separation exists between Capricciosa and LaReine?",
                            "Is there any scenario where a pizza can be considered both Capricciosa and LaReine?",
                            "Which pizza classes are declared to have no overlap with LaReine?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Napoletana",
                        "CQ": [
                            "What ontological separation is defined between Capricciosa and Napoletana?",
                            "Is any individual classified as both Capricciosa and Napoletana within the ontology?",
                            "Which classes are specified as disjoint with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Veneziana",
                        "CQ": [
                            "What logical separation is established between Capricciosa and Veneziana within the ontology?",
                            "Is it allowable for an individual pizza to be both Capricciosa and Veneziana?",
                            "Which other classes are defined as incompatible with Veneziana?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith AmericanHot",
                        "CQ": [
                            "How does the ontology differentiate between Capricciosa and AmericanHot pizza types?",
                            "Is there any instance that can be classified as both Capricciosa and AmericanHot?",
                            "Which pizza classes are identified as mutually exclusive with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith UnclosedPizza",
                        "CQ": [
                            "What kind of separation is specified between Capricciosa and UnclosedPizza in the ontology?",
                            "Is it permissible for a pizza to be classified as both Capricciosa and UnclosedPizza?",
                            "Which classes are formally declared disjoint with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith PrinceCarlo",
                        "CQ": [
                            "What is the formal distinction between Capricciosa and PrinceCarlo as defined in the ontology?",
                            "Can an individual pizza instance be classified as both Capricciosa and PrinceCarlo simultaneously?",
                            "Which pizza categories, apart from Capricciosa, are declared as disjoint with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith FruttiDiMare",
                        "CQ": [
                            "What ontological separation is defined between Capricciosa and FruttiDiMare?",
                            "Is there any circumstance where a pizza can be classified as both Capricciosa and FruttiDiMare?",
                            "Which classes are specified as mutually exclusive with Capricciosa in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Siciliana",
                        "CQ": [
                            "What ontological constraint separates Capricciosa from Siciliana?",
                            "Does the ontology allow an instance to be both Capricciosa and Siciliana simultaneously?",
                            "Which classes are declared as disjoint with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Cajun",
                        "CQ": [
                            "What is the ontological contrast between Capricciosa and Cajun?",
                            "Is any entity classified as both Capricciosa and Cajun simultaneously?",
                            "Which pizza types are explicitly marked as incompatible with Cajun?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Margherita",
                        "CQ": [
                            "How are Capricciosa and Margherita represented in terms of mutual exclusivity within the ontology?",
                            "Is it allowed for a single pizza to be an instance of both Capricciosa and Margherita?",
                            "Which other pizza types are formally specified as disjoint with Margherita?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith American",
                        "CQ": [
                            "How does the ontology formally distinguish between Capricciosa and American pizzas?",
                            "Is it allowable for a pizza to be classified as both Capricciosa and American simultaneously?",
                            "Which named pizza classes are specified as being disjoint with Capricciosa in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith SloppyGiuseppe",
                        "CQ": [
                            "How does the ontology formally distinguish between Capricciosa and SloppyGiuseppe?",
                            "Is there any instance that can belong to both Capricciosa and SloppyGiuseppe categories?",
                            "Which other pizza types are specified as disjoint with Capricciosa in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Caprina",
                        "CQ": [
                            "What formal separation is specified between Capricciosa and Caprina in the ontology?",
                            "Is any pizza instance classified as both Capricciosa and Caprina permitted by the ontology?",
                            "Which other pizza types are declared as mutually exclusive with Caprina?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Soho",
                        "CQ": [
                            "How are Capricciosa and Soho pizzas differentiated within the ontology?",
                            "Can an individual pizza instance be classified as both Capricciosa and Soho?",
                            "Which pizza types are formally specified as mutually exclusive with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Parmense",
                        "CQ": [
                            "How is the exclusivity between Capricciosa and Parmense represented in the ontology?",
                            "Is there any pizza that can be classified as both Capricciosa and Parmense?",
                            "Which pizza varieties are explicitly marked as incompatible with Parmense?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith PolloAdAstra",
                        "CQ": [
                            "What ontological separation is declared between Capricciosa and PolloAdAstra?",
                            "Can an individual pizza instance belong simultaneously to both the Capricciosa and PolloAdAstra classes?",
                            "Which classes, other than PolloAdAstra, are asserted as disjoint with Capricciosa in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Fiorentina",
                        "CQ": [
                            "How does the ontology delineate the distinction between Capricciosa and Fiorentina?",
                            "Is there any instance that can belong to both Capricciosa and Fiorentina classes according to the ontology?",
                            "Which classes are specified as mutually exclusive with Fiorentina in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Rosa",
                        "CQ": [
                            "How does the ontology specify the connection or separation between Capricciosa and Rosa?",
                            "Is there any scenario in which an individual can be classified as both Capricciosa and Rosa?",
                            "What classes are formally stated as disjoint with Capricciosa according to the ontology?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith QuattroFormaggi",
                        "CQ": [
                            "What formal separation is asserted between Capricciosa and QuattroFormaggi in the ontology?",
                            "Is it permissible for a pizza to belong to both Capricciosa and QuattroFormaggi categories?",
                            "Which classes are specified as being mutually exclusive with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith Giardiniera",
                        "CQ": [
                            "What formal separation is specified between Capricciosa and Giardiniera within the ontology?",
                            "Is there any individual that can simultaneously belong to both Capricciosa and Giardiniera classes?",
                            "Which classes are defined as mutually exclusive with Giardiniera?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa disjointWith FourSeasons",
                        "CQ": [
                            "How does the ontology define the separation between Capricciosa and FourSeasons?",
                            "Is there an instance that could be classified as both Capricciosa and FourSeasons?",
                            "Which pizza categories are specified as mutually exclusive with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa propertyRestrictions [hasTopping some TomatoTopping]",
                        "CQ": [
                            "Is it required for a Capricciosa pizza to have at least one TomatoTopping among its toppings?",
                            "Can a pizza be considered Capricciosa if it does not include any TomatoTopping?",
                            "Does every Capricciosa pizza necessarily feature TomatoTopping as one of its toppings?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa propertyRestrictions [hasTopping some HamTopping]",
                        "CQ": [
                            "Is it required for a Capricciosa pizza to have at least one HamTopping as a topping?",
                            "Can a pizza be classified as Capricciosa if it does not include HamTopping among its toppings?",
                            "Does every Capricciosa pizza necessarily possess the hasTopping property with some instance of HamTopping?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa propertyRestrictions [hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or PeperonataTopping or HamTopping or CaperTopping or OliveTopping)]",
                        "CQ": [
                            "Are the toppings on a Capricciosa pizza limited exclusively to Anchovies, Mozzarella, Tomato, Peperonata, Ham, Caper, and Olive toppings?",
                            "Would a pizza with any topping outside the specified seven be excluded from being classified as Capricciosa?",
                            "Does the definition of Capricciosa ensure that it can have any combination of the seven listed toppings, but never any other topping type?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa propertyRestrictions [hasTopping some OliveTopping]",
                        "CQ": [
                            "Is it required for every Capricciosa pizza to have at least one OliveTopping as a topping?",
                            "Must Capricciosa pizzas include the hasTopping property linking them to an OliveTopping?",
                            "Can a Capricciosa pizza be defined without the presence of OliveTopping through the hasTopping relation?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa propertyRestrictions [hasTopping some MozzarellaTopping]",
                        "CQ": [
                            "Must a Capricciosa pizza always have at least one MozzarellaTopping as a topping?",
                            "Is it required that every pizza classified as Capricciosa contains some MozzarellaTopping?",
                            "Can a pizza be Capricciosa if it lacks any MozzarellaTopping?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa propertyRestrictions [hasTopping some AnchoviesTopping]",
                        "CQ": [
                            "Is it required for a Capricciosa pizza to have at least one topping of anchovies?",
                            "Must every Capricciosa have the property 'hasTopping' linked to AnchoviesTopping?",
                            "Can a pizza be considered Capricciosa without containing any AnchoviesTopping?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa propertyRestrictions [hasTopping some PeperonataTopping]",
                        "CQ": [
                            "Is it required for a Capricciosa pizza to have at least one topping that is Peperonata?",
                            "Must every instance of Capricciosa include hasTopping relation to PeperonataTopping?",
                            "Can a Capricciosa exist without any PeperonataTopping among its toppings?"
                        ]
                    },
                    {
                        "axiom": "Capricciosa propertyRestrictions [hasTopping some CaperTopping]",
                        "CQ": [
                            "Is it required for a Capricciosa to include at least one CaperTopping as a topping?",
                            "Does the presence of CaperTopping determine whether a pizza qualifies as Capricciosa?",
                            "Can a Capricciosa exist without having any CaperTopping among its toppings?"
                        ]
                    }
                ],
                "removed axiom": "Capricciosa disjointWith American",
                "Target CQ": [
                    "How does the ontology formally distinguish between Capricciosa and American pizzas?",
                    "Is it allowable for a pizza to be classified as both Capricciosa and American simultaneously?",
                    "Which named pizza classes are specified as being disjoint with Capricciosa in the ontology?"
                ],
                "Valid CQ": [
                    "Is Capricciosa classified under the broader category of NamedPizza?",
                    "What specific pizza types are encompassed by NamedPizza, including Capricciosa?",
                    "Which higher-level pizza classifications does Capricciosa fall under?",
                    "How is the incompatibility between Capricciosa and Mushroom represented in the ontology?",
                    "Is there any class instance that can simultaneously belong to both Capricciosa and Mushroom?",
                    "Which classes are formally specified as mutually exclusive with Capricciosa?",
                    "What ontological separation exists between Capricciosa and LaReine?",
                    "Is there any scenario where a pizza can be considered both Capricciosa and LaReine?",
                    "Which pizza classes are declared to have no overlap with LaReine?",
                    "What ontological separation is defined between Capricciosa and Napoletana?",
                    "Is any individual classified as both Capricciosa and Napoletana within the ontology?",
                    "Which classes are specified as disjoint with Capricciosa?",
                    "What logical separation is established between Capricciosa and Veneziana within the ontology?",
                    "Is it allowable for an individual pizza to be both Capricciosa and Veneziana?",
                    "Which other classes are defined as incompatible with Veneziana?",
                    "How does the ontology differentiate between Capricciosa and AmericanHot pizza types?",
                    "Is there any instance that can be classified as both Capricciosa and AmericanHot?",
                    "Which pizza classes are identified as mutually exclusive with Capricciosa?",
                    "What kind of separation is specified between Capricciosa and UnclosedPizza in the ontology?",
                    "Is it permissible for a pizza to be classified as both Capricciosa and UnclosedPizza?",
                    "Which classes are formally declared disjoint with Capricciosa?",
                    "What is the formal distinction between Capricciosa and PrinceCarlo as defined in the ontology?",
                    "Can an individual pizza instance be classified as both Capricciosa and PrinceCarlo simultaneously?",
                    "Which pizza categories, apart from Capricciosa, are declared as disjoint with PrinceCarlo?",
                    "What ontological separation is defined between Capricciosa and FruttiDiMare?",
                    "Is there any circumstance where a pizza can be classified as both Capricciosa and FruttiDiMare?",
                    "Which classes are specified as mutually exclusive with Capricciosa in the ontology?",
                    "What ontological constraint separates Capricciosa from Siciliana?",
                    "Does the ontology allow an instance to be both Capricciosa and Siciliana simultaneously?",
                    "Which classes are declared as disjoint with Capricciosa?",
                    "What is the ontological contrast between Capricciosa and Cajun?",
                    "Is any entity classified as both Capricciosa and Cajun simultaneously?",
                    "Which pizza types are explicitly marked as incompatible with Cajun?",
                    "How are Capricciosa and Margherita represented in terms of mutual exclusivity within the ontology?",
                    "Is it allowed for a single pizza to be an instance of both Capricciosa and Margherita?",
                    "Which other pizza types are formally specified as disjoint with Margherita?",
                    "How does the ontology formally distinguish between Capricciosa and SloppyGiuseppe?",
                    "Is there any instance that can belong to both Capricciosa and SloppyGiuseppe categories?",
                    "Which other pizza types are specified as disjoint with Capricciosa in the ontology?",
                    "What formal separation is specified between Capricciosa and Caprina in the ontology?",
                    "Is any pizza instance classified as both Capricciosa and Caprina permitted by the ontology?",
                    "Which other pizza types are declared as mutually exclusive with Caprina?",
                    "How are Capricciosa and Soho pizzas differentiated within the ontology?",
                    "Can an individual pizza instance be classified as both Capricciosa and Soho?",
                    "Which pizza types are formally specified as mutually exclusive with Capricciosa?",
                    "How is the exclusivity between Capricciosa and Parmense represented in the ontology?",
                    "Is there any pizza that can be classified as both Capricciosa and Parmense?",
                    "Which pizza varieties are explicitly marked as incompatible with Parmense?",
                    "What ontological separation is declared between Capricciosa and PolloAdAstra?",
                    "Can an individual pizza instance belong simultaneously to both the Capricciosa and PolloAdAstra classes?",
                    "Which classes, other than PolloAdAstra, are asserted as disjoint with Capricciosa in the ontology?",
                    "How does the ontology delineate the distinction between Capricciosa and Fiorentina?",
                    "Is there any instance that can belong to both Capricciosa and Fiorentina classes according to the ontology?",
                    "Which classes are specified as mutually exclusive with Fiorentina in the ontology?",
                    "How does the ontology specify the connection or separation between Capricciosa and Rosa?",
                    "Is there any scenario in which an individual can be classified as both Capricciosa and Rosa?",
                    "What classes are formally stated as disjoint with Capricciosa according to the ontology?",
                    "What formal separation is asserted between Capricciosa and QuattroFormaggi in the ontology?",
                    "Is it permissible for a pizza to belong to both Capricciosa and QuattroFormaggi categories?",
                    "Which classes are specified as being mutually exclusive with Capricciosa?",
                    "What formal separation is specified between Capricciosa and Giardiniera within the ontology?",
                    "Is there any individual that can simultaneously belong to both Capricciosa and Giardiniera classes?",
                    "Which classes are defined as mutually exclusive with Giardiniera?",
                    "How does the ontology define the separation between Capricciosa and FourSeasons?",
                    "Is there an instance that could be classified as both Capricciosa and FourSeasons?",
                    "Which pizza categories are specified as mutually exclusive with Capricciosa?",
                    "Is it required for a Capricciosa pizza to have at least one TomatoTopping among its toppings?",
                    "Can a pizza be considered Capricciosa if it does not include any TomatoTopping?",
                    "Does every Capricciosa pizza necessarily feature TomatoTopping as one of its toppings?",
                    "Is it required for a Capricciosa pizza to have at least one HamTopping as a topping?",
                    "Can a pizza be classified as Capricciosa if it does not include HamTopping among its toppings?",
                    "Does every Capricciosa pizza necessarily possess the hasTopping property with some instance of HamTopping?",
                    "Are the toppings on a Capricciosa pizza limited exclusively to Anchovies, Mozzarella, Tomato, Peperonata, Ham, Caper, and Olive toppings?",
                    "Would a pizza with any topping outside the specified seven be excluded from being classified as Capricciosa?",
                    "Does the definition of Capricciosa ensure that it can have any combination of the seven listed toppings, but never any other topping type?",
                    "Is it required for every Capricciosa pizza to have at least one OliveTopping as a topping?",
                    "Must Capricciosa pizzas include the hasTopping property linking them to an OliveTopping?",
                    "Can a Capricciosa pizza be defined without the presence of OliveTopping through the hasTopping relation?",
                    "Must a Capricciosa pizza always have at least one MozzarellaTopping as a topping?",
                    "Is it required that every pizza classified as Capricciosa contains some MozzarellaTopping?",
                    "Can a pizza be Capricciosa if it lacks any MozzarellaTopping?",
                    "Is it required for a Capricciosa pizza to have at least one topping of anchovies?",
                    "Must every Capricciosa have the property 'hasTopping' linked to AnchoviesTopping?",
                    "Can a pizza be considered Capricciosa without containing any AnchoviesTopping?",
                    "Is it required for a Capricciosa pizza to have at least one topping that is Peperonata?",
                    "Must every instance of Capricciosa include hasTopping relation to PeperonataTopping?",
                    "Can a Capricciosa exist without any PeperonataTopping among its toppings?",
                    "Is it required for a Capricciosa to include at least one CaperTopping as a topping?",
                    "Does the presence of CaperTopping determine whether a pizza qualifies as Capricciosa?",
                    "Can a Capricciosa exist without having any CaperTopping among its toppings?"
                ],
                "type": "Type1"
            },
            "FourSeasons": {
                "axiom": {
                    "subClassOf": [
                        "NamedPizza"
                    ],
                    "disjointWith": [
                        "Mushroom",
                        "LaReine",
                        "Napoletana",
                        "Veneziana",
                        "UnclosedPizza",
                        "PrinceCarlo",
                        "Capricciosa",
                        "FruttiDiMare",
                        "Siciliana",
                        "Cajun",
                        "Margherita",
                        "American",
                        "SloppyGiuseppe",
                        "Caprina",
                        "Soho",
                        "Parmense",
                        "PolloAdAstra",
                        "Fiorentina",
                        "Rosa",
                        "QuattroFormaggi",
                        "Giardiniera"
                    ],
                    "propertyRestrictions": [
                        "[hasTopping some MushroomTopping]",
                        "[hasTopping some TomatoTopping]",
                        "[hasTopping some PeperoniSausageTopping]",
                        "[hasTopping some OliveTopping]",
                        "[hasTopping some MozzarellaTopping]",
                        "[hasTopping only (AnchoviesTopping or MozzarellaTopping or PeperoniSausageTopping or TomatoTopping or CaperTopping or OliveTopping or MushroomTopping)]",
                        "[hasTopping some AnchoviesTopping]",
                        "[hasTopping some CaperTopping]"
                    ]
                },
                "description": "FourSeasons is a subclass of NamedPizza and is explicitly disjoint from several other specific pizza classes, ensuring that no pizza can be simultaneously classified as FourSeasons and any of the listed disjoint pizzas (such as Mushroom, Margherita, QuattroFormaggi, etc.). Members of the FourSeasons class are characterized by having at least one of each of the following toppings: mushroom, tomato, peperoni sausage, olive, mozzarella, anchovies, and capers. Additionally, the set of possible toppings for FourSeasons pizzas is restricted to only anchovies, mozzarella, peperoni sausage, tomato, capers, olives, and mushrooms—no other toppings are permitted. This formalization captures the standard combinatory topping profile of the FourSeasons pizza variant.",
                "CQ": [
                    {
                        "axiom": "FourSeasons subClassOf NamedPizza",
                        "CQ": [
                            "Is FourSeasons classified under the broader group of NamedPizza?",
                            "What are all the specific pizzas that fall under NamedPizza, and does this include FourSeasons?",
                            "Which higher-level categories encompass FourSeasons within the pizza taxonomy?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Mushroom",
                        "CQ": [
                            "How does the ontology specify the exclusivity between FourSeasons and Mushroom?",
                            "Is any entity permitted to belong to both FourSeasons and Mushroom classes simultaneously?",
                            "Which classes within the ontology are stated to be mutually exclusive with Mushroom?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith LaReine",
                        "CQ": [
                            "What logical separation exists between FourSeasons and LaReine pizza types?",
                            "Is it permissible for a single pizza to be classified as both FourSeasons and LaReine?",
                            "Which pizza classes are explicitly disjoint from FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Napoletana",
                        "CQ": [
                            "How is the ontological separation defined between FourSeasons and Napoletana pizzas?",
                            "Is there any pizza instance that could belong to both FourSeasons and Napoletana categories?",
                            "Which pizza types are formally incompatible with the Napoletana class?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Veneziana",
                        "CQ": [
                            "How does the ontology represent the distinction between FourSeasons and Veneziana pizzas?",
                            "Is any pizza instance allowed to belong to both FourSeasons and Veneziana categories?",
                            "Which other pizza types are formally declared as disjoint with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith AmericanHot",
                        "CQ": [
                            "How does the ontology represent the separation between FourSeasons and AmericanHot pizzas?",
                            "Is any pizza instance allowed to belong to both the FourSeasons and AmericanHot categories?",
                            "What pizza types are declared as mutually exclusive with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith UnclosedPizza",
                        "CQ": [
                            "How does the ontology differentiate between FourSeasons and UnclosedPizza?",
                            "Is there any instance that can be classified as both FourSeasons and UnclosedPizza?",
                            "Which classes are specified as disjoint with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith PrinceCarlo",
                        "CQ": [
                            "What is the logical separation between FourSeasons and PrinceCarlo pizza classes?",
                            "Is any pizza instance permitted to be classified as both FourSeasons and PrinceCarlo?",
                            "Which pizza types are specified as being disjoint with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Capricciosa",
                        "CQ": [
                            "What formal separation is asserted between FourSeasons and Capricciosa in the ontology?",
                            "Is it permitted for an instance to be classified as both FourSeasons and Capricciosa?",
                            "Which pizza classes are formally designated as mutually exclusive with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith FruttiDiMare",
                        "CQ": [
                            "What formal separation exists between FourSeasons and FruttiDiMare in the ontology?",
                            "Is any pizza explicitly characterized as belonging to both FourSeasons and FruttiDiMare categories?",
                            "Which pizza types are specified to be mutually exclusive with FruttiDiMare?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Siciliana",
                        "CQ": [
                            "How does the ontology specify the connection between FourSeasons and Siciliana pizzas?",
                            "Is there any scenario in which a pizza instance can belong to both FourSeasons and Siciliana classes simultaneously?",
                            "Which pizza types are represented as mutually exclusive with Siciliana in the ontology?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Cajun",
                        "CQ": [
                            "How does the ontology specify the separation between FourSeasons and Cajun pizzas?",
                            "Is there any scenario in which a pizza can simultaneously be classified as FourSeasons and Cajun?",
                            "Which classes are stated as mutually exclusive with Cajun pizza?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Margherita",
                        "CQ": [
                            "What ontological separation is defined between FourSeasons and Margherita pizzas?",
                            "Is there any instance that can belong to both FourSeasons and Margherita categories?",
                            "Which pizza types are stated as disjoint with Margherita in this ontology?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith American",
                        "CQ": [
                            "What type of mutual exclusivity is defined between FourSeasons and American in the ontology?",
                            "Is it permitted for a pizza to be classified as both FourSeasons and American?",
                            "Which additional pizza types are formally specified as disjoint with American?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith SloppyGiuseppe",
                        "CQ": [
                            "How are FourSeasons and SloppyGiuseppe pizzas characterized with respect to each other in the ontology?",
                            "Is there any pizza that can be both FourSeasons and SloppyGiuseppe simultaneously?",
                            "Which pizza classes, aside from SloppyGiuseppe, are marked as disjoint with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Caprina",
                        "CQ": [
                            "What logical separation is defined between FourSeasons and Caprina pizzas in the ontology?",
                            "Can a pizza instance be classified as both FourSeasons and Caprina?",
                            "Which classes are formally stated as disjoint with FourSeasons pizza?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Soho",
                        "CQ": [
                            "How does the ontology distinguish between FourSeasons and Soho pizza types?",
                            "Is it allowed for a pizza to be classified simultaneously as FourSeasons and Soho?",
                            "Which categories are specified as being incompatible with Soho in the ontology?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Parmense",
                        "CQ": [
                            "What formal distinction is established between FourSeasons and Parmense in the ontology?",
                            "Is any individual pizza allowed to be both FourSeasons and Parmense at once?",
                            "Which other pizza classes are specified as disjoint with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith PolloAdAstra",
                        "CQ": [
                            "What logical separation is defined between FourSeasons and PolloAdAstra in the ontology?",
                            "Is any pizza instance permitted to belong to both FourSeasons and PolloAdAstra categories?",
                            "Which classes are explicitly asserted as disjoint with PolloAdAstra?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Fiorentina",
                        "CQ": [
                            "How does the ontology specify the connection or separation between FourSeasons and Fiorentina?",
                            "Is any pizza instance allowed to be both FourSeasons and Fiorentina?",
                            "Which classes are formally declared as disjoint with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Rosa",
                        "CQ": [
                            "How does the ontology represent the incompatibility between FourSeasons and Rosa?",
                            "Is any individual allowed to belong to both the FourSeasons and Rosa classes?",
                            "Which classes are specified as mutually exclusive with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith QuattroFormaggi",
                        "CQ": [
                            "How is the distinction between FourSeasons and QuattroFormaggi classes represented in the ontology?",
                            "Is there any overlap between pizzas classified as FourSeasons and those classified as QuattroFormaggi?",
                            "Which pizza types are defined as mutually exclusive with QuattroFormaggi?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons disjointWith Giardiniera",
                        "CQ": [
                            "How is the conceptual separation between FourSeasons and Giardiniera represented in the ontology?",
                            "Can a single pizza instance belong to both FourSeasons and Giardiniera classes?",
                            "Which pizza varieties are formally specified as disjoint with Giardiniera?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons propertyRestrictions [hasTopping some MushroomTopping]",
                        "CQ": [
                            "Is it required for a FourSeasons pizza to have at least one topping that is a MushroomTopping?",
                            "Can a pizza be classified as FourSeasons if it does not include any MushroomTopping among its toppings?",
                            "Does every FourSeasons pizza necessarily contain some MushroomTopping as part of its toppings?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons propertyRestrictions [hasTopping some TomatoTopping]",
                        "CQ": [
                            "Is it required for a FourSeasons pizza to have at least one topping of type TomatoTopping?",
                            "Can a FourSeasons pizza exist without containing any TomatoTopping as one of its toppings?",
                            "Does every instance of FourSeasons necessarily possess the hasTopping property with a value of TomatoTopping?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons propertyRestrictions [hasTopping some PeperoniSausageTopping]",
                        "CQ": [
                            "Is it required for a FourSeasons pizza to have at least one topping that is PeperoniSausage?",
                            "Does every FourSeasons pizza necessarily include some PeperoniSausageTopping as a topping?",
                            "Can a pizza qualify as FourSeasons if it does not contain any PeperoniSausageTopping?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons propertyRestrictions [hasTopping some OliveTopping]",
                        "CQ": [
                            "Is it mandatory for a FourSeasons pizza to have at least one Olive topping?",
                            "Can a FourSeasons pizza be considered valid if it does not include any Olive topping?",
                            "Does every instance of FourSeasons require the presence of the hasTopping property linking to an OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons propertyRestrictions [hasTopping some MozzarellaTopping]",
                        "CQ": [
                            "Is it mandatory for FourSeasons to have at least one MozzarellaTopping as a topping?",
                            "Can a FourSeasons exist without having the 'hasTopping' property filled by a MozzarellaTopping?",
                            "Does every instance of FourSeasons require the presence of the 'hasTopping' property with a value of MozzarellaTopping?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons propertyRestrictions [hasTopping only (AnchoviesTopping or MozzarellaTopping or PeperoniSausageTopping or TomatoTopping or CaperTopping or OliveTopping or MushroomTopping)]",
                        "CQ": [
                            "Is every topping on a FourSeasons pizza required to be either Anchovies, Mozzarella, Peperoni Sausage, Tomato, Caper, Olive, or Mushroom?",
                            "Can a FourSeasons pizza include any toppings outside the set of Anchovies, Mozzarella, Peperoni Sausage, Tomato, Caper, Olive, and Mushroom?",
                            "Is the list of toppings permitted on a FourSeasons pizza limited exclusively to Anchovies, Mozzarella, Peperoni Sausage, Tomato, Caper, Olive, and Mushroom?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons propertyRestrictions [hasTopping some AnchoviesTopping]",
                        "CQ": [
                            "Is it required for a FourSeasons pizza to include AnchoviesTopping as one of its toppings?",
                            "Can a pizza be classified as FourSeasons if it does not have any AnchoviesTopping?",
                            "Does every instance of FourSeasons necessarily have at least one topping that is AnchoviesTopping?"
                        ]
                    },
                    {
                        "axiom": "FourSeasons propertyRestrictions [hasTopping some CaperTopping]",
                        "CQ": [
                            "Is every FourSeasons pizza required to have at least one topping of type CaperTopping?",
                            "Can a pizza be classified as FourSeasons if it does not include any CaperTopping as a topping?",
                            "Must the existence of CaperTopping as a topping be guaranteed for all instances of FourSeasons pizza?"
                        ]
                    }
                ],
                "removed axiom": "FourSeasons disjointWith AmericanHot",
                "Target CQ": [
                    "How does the ontology represent the separation between FourSeasons and AmericanHot pizzas?",
                    "Is any pizza instance allowed to belong to both the FourSeasons and AmericanHot categories?",
                    "What pizza types are declared as mutually exclusive with FourSeasons?"
                ],
                "Valid CQ": [
                    "Is FourSeasons classified under the broader group of NamedPizza?",
                    "What are all the specific pizzas that fall under NamedPizza, and does this include FourSeasons?",
                    "Which higher-level categories encompass FourSeasons within the pizza taxonomy?",
                    "How does the ontology specify the exclusivity between FourSeasons and Mushroom?",
                    "Is any entity permitted to belong to both FourSeasons and Mushroom classes simultaneously?",
                    "Which classes within the ontology are stated to be mutually exclusive with Mushroom?",
                    "What logical separation exists between FourSeasons and LaReine pizza types?",
                    "Is it permissible for a single pizza to be classified as both FourSeasons and LaReine?",
                    "Which pizza classes are explicitly disjoint from FourSeasons?",
                    "How is the ontological separation defined between FourSeasons and Napoletana pizzas?",
                    "Is there any pizza instance that could belong to both FourSeasons and Napoletana categories?",
                    "Which pizza types are formally incompatible with the Napoletana class?",
                    "How does the ontology represent the distinction between FourSeasons and Veneziana pizzas?",
                    "Is any pizza instance allowed to belong to both FourSeasons and Veneziana categories?",
                    "Which other pizza types are formally declared as disjoint with FourSeasons?",
                    "How does the ontology differentiate between FourSeasons and UnclosedPizza?",
                    "Is there any instance that can be classified as both FourSeasons and UnclosedPizza?",
                    "Which classes are specified as disjoint with FourSeasons?",
                    "What is the logical separation between FourSeasons and PrinceCarlo pizza classes?",
                    "Is any pizza instance permitted to be classified as both FourSeasons and PrinceCarlo?",
                    "Which pizza types are specified as being disjoint with FourSeasons?",
                    "What formal separation is asserted between FourSeasons and Capricciosa in the ontology?",
                    "Is it permitted for an instance to be classified as both FourSeasons and Capricciosa?",
                    "Which pizza classes are formally designated as mutually exclusive with Capricciosa?",
                    "What formal separation exists between FourSeasons and FruttiDiMare in the ontology?",
                    "Is any pizza explicitly characterized as belonging to both FourSeasons and FruttiDiMare categories?",
                    "Which pizza types are specified to be mutually exclusive with FruttiDiMare?",
                    "How does the ontology specify the connection between FourSeasons and Siciliana pizzas?",
                    "Is there any scenario in which a pizza instance can belong to both FourSeasons and Siciliana classes simultaneously?",
                    "Which pizza types are represented as mutually exclusive with Siciliana in the ontology?",
                    "How does the ontology specify the separation between FourSeasons and Cajun pizzas?",
                    "Is there any scenario in which a pizza can simultaneously be classified as FourSeasons and Cajun?",
                    "Which classes are stated as mutually exclusive with Cajun pizza?",
                    "What ontological separation is defined between FourSeasons and Margherita pizzas?",
                    "Is there any instance that can belong to both FourSeasons and Margherita categories?",
                    "Which pizza types are stated as disjoint with Margherita in this ontology?",
                    "What type of mutual exclusivity is defined between FourSeasons and American in the ontology?",
                    "Is it permitted for a pizza to be classified as both FourSeasons and American?",
                    "Which additional pizza types are formally specified as disjoint with American?",
                    "How are FourSeasons and SloppyGiuseppe pizzas characterized with respect to each other in the ontology?",
                    "Is there any pizza that can be both FourSeasons and SloppyGiuseppe simultaneously?",
                    "Which pizza classes, aside from SloppyGiuseppe, are marked as disjoint with FourSeasons?",
                    "What logical separation is defined between FourSeasons and Caprina pizzas in the ontology?",
                    "Can a pizza instance be classified as both FourSeasons and Caprina?",
                    "Which classes are formally stated as disjoint with FourSeasons pizza?",
                    "How does the ontology distinguish between FourSeasons and Soho pizza types?",
                    "Is it allowed for a pizza to be classified simultaneously as FourSeasons and Soho?",
                    "Which categories are specified as being incompatible with Soho in the ontology?",
                    "What formal distinction is established between FourSeasons and Parmense in the ontology?",
                    "Is any individual pizza allowed to be both FourSeasons and Parmense at once?",
                    "Which other pizza classes are specified as disjoint with FourSeasons?",
                    "What logical separation is defined between FourSeasons and PolloAdAstra in the ontology?",
                    "Is any pizza instance permitted to belong to both FourSeasons and PolloAdAstra categories?",
                    "Which classes are explicitly asserted as disjoint with PolloAdAstra?",
                    "How does the ontology specify the connection or separation between FourSeasons and Fiorentina?",
                    "Is any pizza instance allowed to be both FourSeasons and Fiorentina?",
                    "Which classes are formally declared as disjoint with FourSeasons?",
                    "How does the ontology represent the incompatibility between FourSeasons and Rosa?",
                    "Is any individual allowed to belong to both the FourSeasons and Rosa classes?",
                    "Which classes are specified as mutually exclusive with FourSeasons?",
                    "How is the distinction between FourSeasons and QuattroFormaggi classes represented in the ontology?",
                    "Is there any overlap between pizzas classified as FourSeasons and those classified as QuattroFormaggi?",
                    "Which pizza types are defined as mutually exclusive with QuattroFormaggi?",
                    "How is the conceptual separation between FourSeasons and Giardiniera represented in the ontology?",
                    "Can a single pizza instance belong to both FourSeasons and Giardiniera classes?",
                    "Which pizza varieties are formally specified as disjoint with Giardiniera?",
                    "Is it required for a FourSeasons pizza to have at least one topping that is a MushroomTopping?",
                    "Can a pizza be classified as FourSeasons if it does not include any MushroomTopping among its toppings?",
                    "Does every FourSeasons pizza necessarily contain some MushroomTopping as part of its toppings?",
                    "Is it required for a FourSeasons pizza to have at least one topping of type TomatoTopping?",
                    "Can a FourSeasons pizza exist without containing any TomatoTopping as one of its toppings?",
                    "Does every instance of FourSeasons necessarily possess the hasTopping property with a value of TomatoTopping?",
                    "Is it required for a FourSeasons pizza to have at least one topping that is PeperoniSausage?",
                    "Does every FourSeasons pizza necessarily include some PeperoniSausageTopping as a topping?",
                    "Can a pizza qualify as FourSeasons if it does not contain any PeperoniSausageTopping?",
                    "Is it mandatory for a FourSeasons pizza to have at least one Olive topping?",
                    "Can a FourSeasons pizza be considered valid if it does not include any Olive topping?",
                    "Does every instance of FourSeasons require the presence of the hasTopping property linking to an OliveTopping?",
                    "Is it mandatory for FourSeasons to have at least one MozzarellaTopping as a topping?",
                    "Can a FourSeasons exist without having the 'hasTopping' property filled by a MozzarellaTopping?",
                    "Does every instance of FourSeasons require the presence of the 'hasTopping' property with a value of MozzarellaTopping?",
                    "Is every topping on a FourSeasons pizza required to be either Anchovies, Mozzarella, Peperoni Sausage, Tomato, Caper, Olive, or Mushroom?",
                    "Can a FourSeasons pizza include any toppings outside the set of Anchovies, Mozzarella, Peperoni Sausage, Tomato, Caper, Olive, and Mushroom?",
                    "Is the list of toppings permitted on a FourSeasons pizza limited exclusively to Anchovies, Mozzarella, Peperoni Sausage, Tomato, Caper, Olive, and Mushroom?",
                    "Is it required for a FourSeasons pizza to include AnchoviesTopping as one of its toppings?",
                    "Can a pizza be classified as FourSeasons if it does not have any AnchoviesTopping?",
                    "Does every instance of FourSeasons necessarily have at least one topping that is AnchoviesTopping?",
                    "Is every FourSeasons pizza required to have at least one topping of type CaperTopping?",
                    "Can a pizza be classified as FourSeasons if it does not include any CaperTopping as a topping?",
                    "Must the existence of CaperTopping as a topping be guaranteed for all instances of FourSeasons pizza?"
                ],
                "type": "Type1"
            },
            "LaReine": {
                "axiom": {
                    "subClassOf": [
                        "NamedPizza"
                    ],
                    "disjointWith": [
                        "Mushroom",
                        "Napoletana",
                        "Veneziana",
                        "AmericanHot",
                        "UnclosedPizza",
                        "PrinceCarlo",
                        "Capricciosa",
                        "FruttiDiMare",
                        "Siciliana",
                        "Cajun",
                        "Margherita",
                        "American",
                        "SloppyGiuseppe",
                        "Soho",
                        "Parmense",
                        "PolloAdAstra",
                        "Fiorentina",
                        "Rosa",
                        "QuattroFormaggi",
                        "Giardiniera",
                        "FourSeasons"
                    ],
                    "propertyRestrictions": [
                        "[hasTopping some MushroomTopping]",
                        "[hasTopping some TomatoTopping]",
                        "[hasTopping some HamTopping]",
                        "[hasTopping some OliveTopping]",
                        "[hasTopping some MozzarellaTopping]",
                        "[hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or OliveTopping or MushroomTopping)]"
                    ]
                },
                "description": "LaReine is defined as a subclass of NamedPizza and is declared disjoint with a number of other specific pizza classes, including Mushroom, Napoletana, Veneziana, and others—ensuring no individual pizza can be classified as both a LaReine and any of these listed classes. \n\nLaReine pizzas are characterized by several property restrictions: every LaReine pizza must have at least one topping of each of the following types—MushroomTopping, TomatoTopping, HamTopping, OliveTopping, and MozzarellaTopping. Additionally, the only permitted toppings for LaReine pizzas are MozzarellaTopping, TomatoTopping, HamTopping, OliveTopping, or MushroomTopping; no other toppings are allowed. This ensures that the LaReine pizza is strictly defined by this specific set of ingredients.",
                "CQ": [
                    {
                        "axiom": "LaReine subClassOf NamedPizza",
                        "CQ": [
                            "Is LaReine classified as a variant under NamedPizza?",
                            "Which pizza varieties are categorized as subtypes of NamedPizza, including LaReine?",
                            "What broader types does LaReine fall under within the ontology hierarchy?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Mushroom",
                        "CQ": [
                            "How is the disjointness between LaReine and Mushroom represented within the ontology?",
                            "Can an individual instance simultaneously belong to both LaReine and Mushroom classes?",
                            "Which classes are explicitly specified as disjoint with Mushroom in the ontology?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Napoletana",
                        "CQ": [
                            "How does the ontology specify the connection or separation between LaReine and Napoletana?",
                            "Is there any entity that can simultaneously be classified as LaReine and Napoletana?",
                            "What classes are identified as mutually exclusive with Napoletana?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Veneziana",
                        "CQ": [
                            "How are LaReine and Veneziana defined in terms of class disjointness within the ontology?",
                            "Is it allowed for a pizza to be classified simultaneously as LaReine and Veneziana?",
                            "Which classes are asserted to be mutually exclusive with LaReine in the ontology?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith AmericanHot",
                        "CQ": [
                            "How does the ontology differentiate between LaReine and AmericanHot pizzas?",
                            "Is there any pizza that can belong to both LaReine and AmericanHot classes simultaneously?",
                            "What other pizza types are formally specified as mutually exclusive with LaReine?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith UnclosedPizza",
                        "CQ": [
                            "What is the logical separation defined between LaReine and UnclosedPizza?",
                            "Is there any instance that can belong to both LaReine and UnclosedPizza classes?",
                            "Which classes in the ontology are specified as disjoint with UnclosedPizza?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith PrinceCarlo",
                        "CQ": [
                            "How is the mutual exclusivity between LaReine and PrinceCarlo represented in the ontology?",
                            "Is there any instance that can simultaneously belong to both LaReine and PrinceCarlo classes?",
                            "Which classes are formally specified as disjoint with LaReine?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Capricciosa",
                        "CQ": [
                            "What ontological separation is established between LaReine and Capricciosa?",
                            "Can a pizza instance belong to both LaReine and Capricciosa classes?",
                            "Which pizza classes are formally defined as disjoint with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith FruttiDiMare",
                        "CQ": [
                            "What kind of formal differentiation is specified between LaReine and FruttiDiMare?",
                            "Can any individual pizza be classified as both LaReine and FruttiDiMare within the ontology?",
                            "Which pizza types are explicitly set as incompatible with FruttiDiMare?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Siciliana",
                        "CQ": [
                            "What is the formal distinction between LaReine and Siciliana within the ontology?",
                            "Is it allowed for a pizza to be classified as both LaReine and Siciliana simultaneously?",
                            "Which classes are specified as disjoint with Siciliana?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Cajun",
                        "CQ": [
                            "What kind of exclusivity exists between LaReine and Cajun in the ontology?",
                            "Is it allowed for a pizza to be classified as both LaReine and Cajun?",
                            "Which other pizza types are specified as disjoint with Cajun?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Margherita",
                        "CQ": [
                            "What formal exclusion exists between LaReine and Margherita pizza classes in the ontology?",
                            "Is any pizza instance allowed to belong to both LaReine and Margherita categories simultaneously?",
                            "Which pizza types are formally declared disjoint with Margherita?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith American",
                        "CQ": [
                            "What logical separation is defined between LaReine and American within the ontology?",
                            "Is there any instance that can belong to both LaReine and American categories simultaneously?",
                            "Which other classes are explicitly incompatible with American in the ontology?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith SloppyGiuseppe",
                        "CQ": [
                            "What distinguishes LaReine from SloppyGiuseppe in the ontology?",
                            "Is there any instance that can be classified as both LaReine and SloppyGiuseppe?",
                            "Which classes are stated to be mutually exclusive with SloppyGiuseppe?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Caprina",
                        "CQ": [
                            "What logical separation is defined between LaReine and Caprina in the ontology?",
                            "Is there any entity that can belong to both LaReine and Caprina classes simultaneously?",
                            "Which classes are specified as mutually exclusive with Caprina?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Soho",
                        "CQ": [
                            "Are LaReine and Soho modeled as mutually exclusive pizza types in the ontology?",
                            "Is it ever allowed for a single pizza to be classified as both LaReine and Soho?",
                            "Which pizza varieties are specified as disjoint with Soho in the ontology?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Parmense",
                        "CQ": [
                            "How are LaReine and Parmense pizzas differentiated with respect to class membership in the ontology?",
                            "Is it allowed for a pizza to be classified as both LaReine and Parmense?",
                            "What other pizza types are explicitly modeled as being disjoint with Parmense?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith PolloAdAstra",
                        "CQ": [
                            "What is the ontological relationship specified between LaReine and PolloAdAstra?",
                            "Is any pizza instance allowed to be categorized as both LaReine and PolloAdAstra?",
                            "Which pizza classes are explicitly stated as disjoint with PolloAdAstra?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Fiorentina",
                        "CQ": [
                            "What ontological separation is specified between LaReine and Fiorentina?",
                            "Can any individual instance simultaneously belong to both LaReine and Fiorentina classes?",
                            "Which classes are explicitly modeled as mutually exclusive with Fiorentina?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Rosa",
                        "CQ": [
                            "What is the nature of the disjointness between LaReine and Rosa in the ontology?",
                            "Can an individual simultaneously belong to both LaReine and Rosa classes?",
                            "Which classes are specified as disjoint with LaReine?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith QuattroFormaggi",
                        "CQ": [
                            "What ontological separation exists between LaReine and QuattroFormaggi pizzas?",
                            "Is there any pizza that can simultaneously belong to LaReine and QuattroFormaggi categories?",
                            "Which classes are specified as incompatible with QuattroFormaggi in the ontology?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith Giardiniera",
                        "CQ": [
                            "How are the classes LaReine and Giardiniera distinguished in the ontology?",
                            "Is there any entity that can be classified simultaneously as LaReine and Giardiniera?",
                            "Which classes are specified as mutually exclusive with Giardiniera?"
                        ]
                    },
                    {
                        "axiom": "LaReine disjointWith FourSeasons",
                        "CQ": [
                            "What is the ontological distinction between LaReine and FourSeasons pizza types?",
                            "Can a pizza be classified as both LaReine and FourSeasons simultaneously?",
                            "Which classes are specified as disjoint with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "LaReine propertyRestrictions [hasTopping some MushroomTopping]",
                        "CQ": [
                            "Must every LaReine pizza have at least one MushroomTopping?",
                            "Can a pizza be classified as LaReine if it lacks MushroomTopping entirely?",
                            "Is it required that LaReine pizza includes MushroomTopping as a topping?"
                        ]
                    },
                    {
                        "axiom": "LaReine propertyRestrictions [hasTopping some TomatoTopping]",
                        "CQ": [
                            "Is it mandatory for every LaReine pizza to include at least one TomatoTopping?",
                            "Can a LaReine pizza exist without having TomatoTopping as one of its toppings?",
                            "Does the presence of TomatoTopping distinguish a LaReine pizza from pizzas without this topping?"
                        ]
                    },
                    {
                        "axiom": "LaReine propertyRestrictions [hasTopping some HamTopping]",
                        "CQ": [
                            "Is it required for a LaReine pizza to always contain at least one HamTopping as a topping?",
                            "Can a pizza be classified as LaReine if it does not have any HamTopping among its toppings?",
                            "Does the definition of LaReine pizza entail the presence of at least one HamTopping as one of its toppings?"
                        ]
                    },
                    {
                        "axiom": "LaReine propertyRestrictions [hasTopping some OliveTopping]",
                        "CQ": [
                            "Is every LaReine pizza required to have at least one OliveTopping as a topping?",
                            "Can a pizza be classified as LaReine if it does not have any OliveTopping?",
                            "Does the presence of OliveTopping on a pizza suffice for it to meet the topping condition for LaReine?"
                        ]
                    },
                    {
                        "axiom": "LaReine propertyRestrictions [hasTopping some MozzarellaTopping]",
                        "CQ": [
                            "Is it required that a LaReine pizza includes at least one Mozzarella topping?",
                            "Can a LaReine be classified as such if it lacks any Mozzarella topping?",
                            "Must every instance of LaReine have the hasTopping property related to some MozzarellaTopping?"
                        ]
                    },
                    {
                        "axiom": "LaReine propertyRestrictions [hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or OliveTopping or MushroomTopping)]",
                        "CQ": [
                            "Is a LaReine pizza required to have only Mozzarella, Tomato, Ham, Olive, or Mushroom as toppings?",
                            "Does the LaReine pizza class explicitly prohibit any toppings apart from Mozzarella, Tomato, Ham, Olive, or Mushroom?",
                            "If a pizza labeled as LaReine contains a topping other than Mozzarella, Tomato, Ham, Olive, or Mushroom, does it violate the LaReine classification?"
                        ]
                    }
                ],
                "removed axiom": "LaReine disjointWith Caprina",
                "Target CQ": [
                    "What logical separation is defined between LaReine and Caprina in the ontology?",
                    "Is there any entity that can belong to both LaReine and Caprina classes simultaneously?",
                    "Which classes are specified as mutually exclusive with Caprina?"
                ],
                "Valid CQ": [
                    "Is LaReine classified as a variant under NamedPizza?",
                    "Which pizza varieties are categorized as subtypes of NamedPizza, including LaReine?",
                    "What broader types does LaReine fall under within the ontology hierarchy?",
                    "How is the disjointness between LaReine and Mushroom represented within the ontology?",
                    "Can an individual instance simultaneously belong to both LaReine and Mushroom classes?",
                    "Which classes are explicitly specified as disjoint with Mushroom in the ontology?",
                    "How does the ontology specify the connection or separation between LaReine and Napoletana?",
                    "Is there any entity that can simultaneously be classified as LaReine and Napoletana?",
                    "What classes are identified as mutually exclusive with Napoletana?",
                    "How are LaReine and Veneziana defined in terms of class disjointness within the ontology?",
                    "Is it allowed for a pizza to be classified simultaneously as LaReine and Veneziana?",
                    "Which classes are asserted to be mutually exclusive with LaReine in the ontology?",
                    "How does the ontology differentiate between LaReine and AmericanHot pizzas?",
                    "Is there any pizza that can belong to both LaReine and AmericanHot classes simultaneously?",
                    "What other pizza types are formally specified as mutually exclusive with LaReine?",
                    "What is the logical separation defined between LaReine and UnclosedPizza?",
                    "Is there any instance that can belong to both LaReine and UnclosedPizza classes?",
                    "Which classes in the ontology are specified as disjoint with UnclosedPizza?",
                    "How is the mutual exclusivity between LaReine and PrinceCarlo represented in the ontology?",
                    "Is there any instance that can simultaneously belong to both LaReine and PrinceCarlo classes?",
                    "Which classes are formally specified as disjoint with LaReine?",
                    "What ontological separation is established between LaReine and Capricciosa?",
                    "Can a pizza instance belong to both LaReine and Capricciosa classes?",
                    "Which pizza classes are formally defined as disjoint with Capricciosa?",
                    "What kind of formal differentiation is specified between LaReine and FruttiDiMare?",
                    "Can any individual pizza be classified as both LaReine and FruttiDiMare within the ontology?",
                    "Which pizza types are explicitly set as incompatible with FruttiDiMare?",
                    "What is the formal distinction between LaReine and Siciliana within the ontology?",
                    "Is it allowed for a pizza to be classified as both LaReine and Siciliana simultaneously?",
                    "Which classes are specified as disjoint with Siciliana?",
                    "What kind of exclusivity exists between LaReine and Cajun in the ontology?",
                    "Is it allowed for a pizza to be classified as both LaReine and Cajun?",
                    "Which other pizza types are specified as disjoint with Cajun?",
                    "What formal exclusion exists between LaReine and Margherita pizza classes in the ontology?",
                    "Is any pizza instance allowed to belong to both LaReine and Margherita categories simultaneously?",
                    "Which pizza types are formally declared disjoint with Margherita?",
                    "What logical separation is defined between LaReine and American within the ontology?",
                    "Is there any instance that can belong to both LaReine and American categories simultaneously?",
                    "Which other classes are explicitly incompatible with American in the ontology?",
                    "What distinguishes LaReine from SloppyGiuseppe in the ontology?",
                    "Is there any instance that can be classified as both LaReine and SloppyGiuseppe?",
                    "Which classes are stated to be mutually exclusive with SloppyGiuseppe?",
                    "Are LaReine and Soho modeled as mutually exclusive pizza types in the ontology?",
                    "Is it ever allowed for a single pizza to be classified as both LaReine and Soho?",
                    "Which pizza varieties are specified as disjoint with Soho in the ontology?",
                    "How are LaReine and Parmense pizzas differentiated with respect to class membership in the ontology?",
                    "Is it allowed for a pizza to be classified as both LaReine and Parmense?",
                    "What other pizza types are explicitly modeled as being disjoint with Parmense?",
                    "What is the ontological relationship specified between LaReine and PolloAdAstra?",
                    "Is any pizza instance allowed to be categorized as both LaReine and PolloAdAstra?",
                    "Which pizza classes are explicitly stated as disjoint with PolloAdAstra?",
                    "What ontological separation is specified between LaReine and Fiorentina?",
                    "Can any individual instance simultaneously belong to both LaReine and Fiorentina classes?",
                    "Which classes are explicitly modeled as mutually exclusive with Fiorentina?",
                    "What is the nature of the disjointness between LaReine and Rosa in the ontology?",
                    "Can an individual simultaneously belong to both LaReine and Rosa classes?",
                    "Which classes are specified as disjoint with LaReine?",
                    "What ontological separation exists between LaReine and QuattroFormaggi pizzas?",
                    "Is there any pizza that can simultaneously belong to LaReine and QuattroFormaggi categories?",
                    "Which classes are specified as incompatible with QuattroFormaggi in the ontology?",
                    "How are the classes LaReine and Giardiniera distinguished in the ontology?",
                    "Is there any entity that can be classified simultaneously as LaReine and Giardiniera?",
                    "Which classes are specified as mutually exclusive with Giardiniera?",
                    "What is the ontological distinction between LaReine and FourSeasons pizza types?",
                    "Can a pizza be classified as both LaReine and FourSeasons simultaneously?",
                    "Which classes are specified as disjoint with FourSeasons?",
                    "Must every LaReine pizza have at least one MushroomTopping?",
                    "Can a pizza be classified as LaReine if it lacks MushroomTopping entirely?",
                    "Is it required that LaReine pizza includes MushroomTopping as a topping?",
                    "Is it mandatory for every LaReine pizza to include at least one TomatoTopping?",
                    "Can a LaReine pizza exist without having TomatoTopping as one of its toppings?",
                    "Does the presence of TomatoTopping distinguish a LaReine pizza from pizzas without this topping?",
                    "Is it required for a LaReine pizza to always contain at least one HamTopping as a topping?",
                    "Can a pizza be classified as LaReine if it does not have any HamTopping among its toppings?",
                    "Does the definition of LaReine pizza entail the presence of at least one HamTopping as one of its toppings?",
                    "Is every LaReine pizza required to have at least one OliveTopping as a topping?",
                    "Can a pizza be classified as LaReine if it does not have any OliveTopping?",
                    "Does the presence of OliveTopping on a pizza suffice for it to meet the topping condition for LaReine?",
                    "Is it required that a LaReine pizza includes at least one Mozzarella topping?",
                    "Can a LaReine be classified as such if it lacks any Mozzarella topping?",
                    "Must every instance of LaReine have the hasTopping property related to some MozzarellaTopping?",
                    "Is a LaReine pizza required to have only Mozzarella, Tomato, Ham, Olive, or Mushroom as toppings?",
                    "Does the LaReine pizza class explicitly prohibit any toppings apart from Mozzarella, Tomato, Ham, Olive, or Mushroom?",
                    "If a pizza labeled as LaReine contains a topping other than Mozzarella, Tomato, Ham, Olive, or Mushroom, does it violate the LaReine classification?"
                ],
                "type": "Type1"
            },
            "Napoletana": {
                "axiom": {
                    "subClassOf": [
                        "NamedPizza"
                    ],
                    "disjointWith": [
                        "Mushroom",
                        "LaReine",
                        "Veneziana",
                        "AmericanHot",
                        "UnclosedPizza",
                        "PrinceCarlo",
                        "Capricciosa",
                        "FruttiDiMare",
                        "Siciliana",
                        "Cajun",
                        "Margherita",
                        "SloppyGiuseppe",
                        "Caprina",
                        "Soho",
                        "Parmense",
                        "PolloAdAstra",
                        "Fiorentina",
                        "Rosa",
                        "QuattroFormaggi",
                        "Giardiniera",
                        "FourSeasons"
                    ],
                    "propertyRestrictions": [
                        "[hasTopping some TomatoTopping]",
                        "[hasTopping some OliveTopping]",
                        "[hasTopping some MozzarellaTopping]",
                        "[hasTopping some AnchoviesTopping]",
                        "[hasCountryOfOrigin hasValue Italy]",
                        "[hasTopping some CaperTopping]",
                        "[hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or CaperTopping or OliveTopping)]"
                    ]
                },
                "description": "Napoletana is defined as a subclass of NamedPizza and is explicitly disjoint with a wide range of other specific pizza types, ensuring that no individual pizza can simultaneously belong to Napoletana and any of those classes. Members of the Napoletana class must have toppings including tomato, olive, mozzarella, anchovies, and capers, with the restriction that only these toppings (and no others) are permitted. Additionally, the country of origin for Napoletana is restricted to Italy. This class therefore represents a distinct and well-defined type of pizza with a uniquely specified combination of Italian origin and allowable toppings.",
                "CQ": [
                    {
                        "axiom": "Napoletana subClassOf NamedPizza",
                        "CQ": [
                            "Is Napoletana classified as a specific kind of NamedPizza?",
                            "What are all the varieties that fall under the category of NamedPizza?",
                            "To which higher-level classes does Napoletana belong?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Mushroom",
                        "CQ": [
                            "How is the exclusivity between Napoletana and Mushroom classes modeled in the ontology?",
                            "Is any individual allowed to be classified simultaneously as Napoletana and Mushroom?",
                            "Which classes are specified as disjoint with Napoletana?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith LaReine",
                        "CQ": [
                            "How are Napoletana and LaReine characterized in terms of their exclusivity within the ontology?",
                            "Is any pizza instance allowed to belong to both Napoletana and LaReine categories simultaneously?",
                            "Which other pizza types, if any, are expressly defined as disjoint with LaReine?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Veneziana",
                        "CQ": [
                            "Are there explicit constraints preventing an instance from being both Napoletana and Veneziana?",
                            "Which classes are defined as mutually exclusive with Napoletana in the ontology?",
                            "Is the class Veneziana logically incompatible with Napoletana according to the ontology structure?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith AmericanHot",
                        "CQ": [
                            "What logical separation is defined between Napoletana and AmericanHot in the ontology?",
                            "Can an individual pizza belong to both the Napoletana and AmericanHot categories?",
                            "Which classes are explicitly incompatible with AmericanHot?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith UnclosedPizza",
                        "CQ": [
                            "What formal separation exists between Napoletana and UnclosedPizza in the ontology?",
                            "Is an individual pizza allowed to be both a Napoletana and an UnclosedPizza?",
                            "Which classes are specified as mutually exclusive with Napoletana?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith PrinceCarlo",
                        "CQ": [
                            "What is the ontological difference between Napoletana and PrinceCarlo?",
                            "Is there any instance that can belong to both Napoletana and PrinceCarlo categories?",
                            "Which classes are specified as mutually exclusive with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Capricciosa",
                        "CQ": [
                            "What is the formal distinction defined between Napoletana and Capricciosa within the ontology?",
                            "Is there any scenario where an instance could be classified as both Napoletana and Capricciosa simultaneously?",
                            "Which classes are explicitly modeled as disjoint with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith FruttiDiMare",
                        "CQ": [
                            "How does the ontology define the exclusivity between Napoletana and FruttiDiMare pizzas?",
                            "Is there an instance that can be classified under both Napoletana and FruttiDiMare pizza types?",
                            "Which pizza categories are specified as disjoint with FruttiDiMare in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Siciliana",
                        "CQ": [
                            "How does the ontology distinguish between Napoletana and Siciliana pizza types?",
                            "Is any pizza instance able to belong to both Napoletana and Siciliana categories?",
                            "Which pizza classes are formally specified as disjoint with Siciliana in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Cajun",
                        "CQ": [
                            "How does the ontology formally distinguish between Napoletana and Cajun?",
                            "Is any instance permitted to be classified as both Napoletana and Cajun?",
                            "Which classes are defined as disjoint from Cajun within the ontology?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Margherita",
                        "CQ": [
                            "How are Napoletana and Margherita classified in terms of mutual exclusivity within the ontology?",
                            "Is it allowable for a pizza instance to belong to both Napoletana and Margherita categories?",
                            "Which pizza types are explicitly marked as incompatible with Margherita?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith American",
                        "CQ": [
                            "How are Napoletana and American classified in relation to each other within the ontology?",
                            "Is there any instance that can simultaneously belong to both Napoletana and American categories?",
                            "Which classes are defined as disjoint with American in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith SloppyGiuseppe",
                        "CQ": [
                            "How does the ontology represent the incompatibility between Napoletana and SloppyGiuseppe?",
                            "Is any individual allowed to be classified under both Napoletana and SloppyGiuseppe simultaneously?",
                            "Which classes in the ontology are specified as disjoint with SloppyGiuseppe?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Caprina",
                        "CQ": [
                            "What type of logical separation exists between Napoletana and Caprina in the ontology?",
                            "Is there any instance that can simultaneously belong to both the Napoletana and Caprina classes?",
                            "Which classes are specified as being mutually exclusive with Napoletana?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Soho",
                        "CQ": [
                            "What is the ontological separation between Napoletana and Soho within the pizza classification?",
                            "Is there any instance that can be simultaneously classified as Napoletana and Soho?",
                            "Which classes are formally incompatible with the Soho pizza category?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Parmense",
                        "CQ": [
                            "How does the ontology distinguish between Napoletana and Parmense pizza types?",
                            "Is there any pizza that can be classified as both Napoletana and Parmense?",
                            "Which pizza classes are defined as disjoint with Parmense?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith PolloAdAstra",
                        "CQ": [
                            "What ontological separation is defined between Napoletana and PolloAdAstra?",
                            "Is there any pizza instance that can be both Napoletana and PolloAdAstra?",
                            "Which classes are set as mutually exclusive with Napoletana in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Fiorentina",
                        "CQ": [
                            "What type of logical separation is specified between Napoletana and Fiorentina in the ontology?",
                            "Is an individual ever allowed to be classified as both Napoletana and Fiorentina?",
                            "Are there other pizza classes that are formally stated to be disjoint with Fiorentina besides Napoletana?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Rosa",
                        "CQ": [
                            "How are the pizza types Napoletana and Rosa logically separated within the ontology?",
                            "Is there any instance that can belong to both Napoletana and Rosa simultaneously?",
                            "What other pizza classes are explicitly stated to be disjoint with Rosa?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith QuattroFormaggi",
                        "CQ": [
                            "What is the formal distinction defined between Napoletana and QuattroFormaggi pizzas in the ontology?",
                            "Can an individual pizza instance belong to both the Napoletana and QuattroFormaggi categories?",
                            "Which other pizza types are specified as disjoint with QuattroFormaggi?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith Giardiniera",
                        "CQ": [
                            "How does the ontology represent the mutual exclusivity of Napoletana and Giardiniera?",
                            "Is it allowed for one pizza to belong to both Napoletana and Giardiniera categories?",
                            "Which classes are explicitly noted as being disjoint with Giardiniera?"
                        ]
                    },
                    {
                        "axiom": "Napoletana disjointWith FourSeasons",
                        "CQ": [
                            "What is the ontological relationship defined between Napoletana and FourSeasons?",
                            "Could any individual instance be classified as both Napoletana and FourSeasons pizzas?",
                            "Which pizza varieties are formally specified as incompatible with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "Napoletana propertyRestrictions [hasTopping some TomatoTopping]",
                        "CQ": [
                            "Is every instance of Napoletana required to include at least one topping of type TomatoTopping?",
                            "Can a Napoletana exist without having the property 'hasTopping' filled with TomatoTopping?",
                            "Does the definition of Napoletana necessitate the presence of TomatoTopping as a topping?"
                        ]
                    },
                    {
                        "axiom": "Napoletana propertyRestrictions [hasTopping some OliveTopping]",
                        "CQ": [
                            "Is it required for a Napoletana to have at least one topping that is an OliveTopping?",
                            "Can a Napoletana exist without having the hasTopping relationship to an OliveTopping?",
                            "Does Napoletana necessarily include OliveTopping among its toppings?"
                        ]
                    },
                    {
                        "axiom": "Napoletana propertyRestrictions [hasTopping some MozzarellaTopping]",
                        "CQ": [
                            "Is it required that a Napoletana pizza includes at least one MozzarellaTopping as a topping?",
                            "Can a pizza be classified as Napoletana if it lacks any MozzarellaTopping?",
                            "Does every Napoletana pizza necessarily have the property 'hasTopping' associated with MozzarellaTopping?"
                        ]
                    },
                    {
                        "axiom": "Napoletana propertyRestrictions [hasTopping some AnchoviesTopping]",
                        "CQ": [
                            "Is it required that a Napoletana pizza includes at least one AnchoviesTopping as a topping?",
                            "Can a pizza be classified as Napoletana if it does not have any AnchoviesTopping?",
                            "Does every instance of Napoletana necessarily have the property hasTopping with AnchoviesTopping?"
                        ]
                    },
                    {
                        "axiom": "Napoletana propertyRestrictions [hasCountryOfOrigin hasValue Italy]",
                        "CQ": [
                            "Is it required that a Napoletana has Italy as its country of origin?",
                            "Can a Napoletana originate from a country other than Italy?",
                            "Does the definition of Napoletana specify Italy as its sole country of origin?"
                        ]
                    },
                    {
                        "axiom": "Napoletana propertyRestrictions [hasTopping some CaperTopping]",
                        "CQ": [
                            "Is it necessary for a Napoletana pizza to have at least one topping that is a CaperTopping?",
                            "Does every instance of Napoletana include the property hasTopping with some value from CaperTopping?",
                            "Can a pizza be classified as Napoletana if it lacks any CaperTopping?"
                        ]
                    },
                    {
                        "axiom": "Napoletana propertyRestrictions [hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or CaperTopping or OliveTopping)]",
                        "CQ": [
                            "Is it required that a Napoletana pizza only includes Anchovies, Mozzarella, Tomato, Caper, or Olive as toppings?",
                            "Can a pizza with any topping outside of Anchovies, Mozzarella, Tomato, Caper, or Olive be classified as Napoletana?",
                            "Are there toppings not listed that could ever appear on a Napoletana pizza according to its definition?"
                        ]
                    }
                ],
                "removed axiom": "Napoletana disjointWith American",
                "Target CQ": [
                    "How are Napoletana and American classified in relation to each other within the ontology?",
                    "Is there any instance that can simultaneously belong to both Napoletana and American categories?",
                    "Which classes are defined as disjoint with American in the ontology?"
                ],
                "Valid CQ": [
                    "Is Napoletana classified as a specific kind of NamedPizza?",
                    "What are all the varieties that fall under the category of NamedPizza?",
                    "To which higher-level classes does Napoletana belong?",
                    "How is the exclusivity between Napoletana and Mushroom classes modeled in the ontology?",
                    "Is any individual allowed to be classified simultaneously as Napoletana and Mushroom?",
                    "Which classes are specified as disjoint with Napoletana?",
                    "How are Napoletana and LaReine characterized in terms of their exclusivity within the ontology?",
                    "Is any pizza instance allowed to belong to both Napoletana and LaReine categories simultaneously?",
                    "Which other pizza types, if any, are expressly defined as disjoint with LaReine?",
                    "Are there explicit constraints preventing an instance from being both Napoletana and Veneziana?",
                    "Which classes are defined as mutually exclusive with Napoletana in the ontology?",
                    "Is the class Veneziana logically incompatible with Napoletana according to the ontology structure?",
                    "What logical separation is defined between Napoletana and AmericanHot in the ontology?",
                    "Can an individual pizza belong to both the Napoletana and AmericanHot categories?",
                    "Which classes are explicitly incompatible with AmericanHot?",
                    "What formal separation exists between Napoletana and UnclosedPizza in the ontology?",
                    "Is an individual pizza allowed to be both a Napoletana and an UnclosedPizza?",
                    "Which classes are specified as mutually exclusive with Napoletana?",
                    "What is the ontological difference between Napoletana and PrinceCarlo?",
                    "Is there any instance that can belong to both Napoletana and PrinceCarlo categories?",
                    "Which classes are specified as mutually exclusive with PrinceCarlo?",
                    "What is the formal distinction defined between Napoletana and Capricciosa within the ontology?",
                    "Is there any scenario where an instance could be classified as both Napoletana and Capricciosa simultaneously?",
                    "Which classes are explicitly modeled as disjoint with Capricciosa?",
                    "How does the ontology define the exclusivity between Napoletana and FruttiDiMare pizzas?",
                    "Is there an instance that can be classified under both Napoletana and FruttiDiMare pizza types?",
                    "Which pizza categories are specified as disjoint with FruttiDiMare in the ontology?",
                    "How does the ontology distinguish between Napoletana and Siciliana pizza types?",
                    "Is any pizza instance able to belong to both Napoletana and Siciliana categories?",
                    "Which pizza classes are formally specified as disjoint with Siciliana in the ontology?",
                    "How does the ontology formally distinguish between Napoletana and Cajun?",
                    "Is any instance permitted to be classified as both Napoletana and Cajun?",
                    "Which classes are defined as disjoint from Cajun within the ontology?",
                    "How are Napoletana and Margherita classified in terms of mutual exclusivity within the ontology?",
                    "Is it allowable for a pizza instance to belong to both Napoletana and Margherita categories?",
                    "Which pizza types are explicitly marked as incompatible with Margherita?",
                    "How does the ontology represent the incompatibility between Napoletana and SloppyGiuseppe?",
                    "Is any individual allowed to be classified under both Napoletana and SloppyGiuseppe simultaneously?",
                    "Which classes in the ontology are specified as disjoint with SloppyGiuseppe?",
                    "What type of logical separation exists between Napoletana and Caprina in the ontology?",
                    "Is there any instance that can simultaneously belong to both the Napoletana and Caprina classes?",
                    "Which classes are specified as being mutually exclusive with Napoletana?",
                    "What is the ontological separation between Napoletana and Soho within the pizza classification?",
                    "Is there any instance that can be simultaneously classified as Napoletana and Soho?",
                    "Which classes are formally incompatible with the Soho pizza category?",
                    "How does the ontology distinguish between Napoletana and Parmense pizza types?",
                    "Is there any pizza that can be classified as both Napoletana and Parmense?",
                    "Which pizza classes are defined as disjoint with Parmense?",
                    "What ontological separation is defined between Napoletana and PolloAdAstra?",
                    "Is there any pizza instance that can be both Napoletana and PolloAdAstra?",
                    "Which classes are set as mutually exclusive with Napoletana in the ontology?",
                    "What type of logical separation is specified between Napoletana and Fiorentina in the ontology?",
                    "Is an individual ever allowed to be classified as both Napoletana and Fiorentina?",
                    "Are there other pizza classes that are formally stated to be disjoint with Fiorentina besides Napoletana?",
                    "How are the pizza types Napoletana and Rosa logically separated within the ontology?",
                    "Is there any instance that can belong to both Napoletana and Rosa simultaneously?",
                    "What other pizza classes are explicitly stated to be disjoint with Rosa?",
                    "What is the formal distinction defined between Napoletana and QuattroFormaggi pizzas in the ontology?",
                    "Can an individual pizza instance belong to both the Napoletana and QuattroFormaggi categories?",
                    "Which other pizza types are specified as disjoint with QuattroFormaggi?",
                    "How does the ontology represent the mutual exclusivity of Napoletana and Giardiniera?",
                    "Is it allowed for one pizza to belong to both Napoletana and Giardiniera categories?",
                    "Which classes are explicitly noted as being disjoint with Giardiniera?",
                    "What is the ontological relationship defined between Napoletana and FourSeasons?",
                    "Could any individual instance be classified as both Napoletana and FourSeasons pizzas?",
                    "Which pizza varieties are formally specified as incompatible with FourSeasons?",
                    "Is every instance of Napoletana required to include at least one topping of type TomatoTopping?",
                    "Can a Napoletana exist without having the property 'hasTopping' filled with TomatoTopping?",
                    "Does the definition of Napoletana necessitate the presence of TomatoTopping as a topping?",
                    "Is it required for a Napoletana to have at least one topping that is an OliveTopping?",
                    "Can a Napoletana exist without having the hasTopping relationship to an OliveTopping?",
                    "Does Napoletana necessarily include OliveTopping among its toppings?",
                    "Is it required that a Napoletana pizza includes at least one MozzarellaTopping as a topping?",
                    "Can a pizza be classified as Napoletana if it lacks any MozzarellaTopping?",
                    "Does every Napoletana pizza necessarily have the property 'hasTopping' associated with MozzarellaTopping?",
                    "Is it required that a Napoletana pizza includes at least one AnchoviesTopping as a topping?",
                    "Can a pizza be classified as Napoletana if it does not have any AnchoviesTopping?",
                    "Does every instance of Napoletana necessarily have the property hasTopping with AnchoviesTopping?",
                    "Is it required that a Napoletana has Italy as its country of origin?",
                    "Can a Napoletana originate from a country other than Italy?",
                    "Does the definition of Napoletana specify Italy as its sole country of origin?",
                    "Is it necessary for a Napoletana pizza to have at least one topping that is a CaperTopping?",
                    "Does every instance of Napoletana include the property hasTopping with some value from CaperTopping?",
                    "Can a pizza be classified as Napoletana if it lacks any CaperTopping?",
                    "Is it required that a Napoletana pizza only includes Anchovies, Mozzarella, Tomato, Caper, or Olive as toppings?",
                    "Can a pizza with any topping outside of Anchovies, Mozzarella, Tomato, Caper, or Olive be classified as Napoletana?",
                    "Are there toppings not listed that could ever appear on a Napoletana pizza according to its definition?"
                ],
                "type": "Type1"
            },
            "PrinceCarlo": {
                "axiom": {
                    "subClassOf": [
                        "NamedPizza"
                    ],
                    "disjointWith": [
                        "Mushroom",
                        "LaReine",
                        "Veneziana",
                        "AmericanHot",
                        "UnclosedPizza",
                        "Capricciosa",
                        "FruttiDiMare",
                        "Siciliana",
                        "Cajun",
                        "Margherita",
                        "American",
                        "SloppyGiuseppe",
                        "Caprina",
                        "Soho",
                        "Parmense",
                        "PolloAdAstra",
                        "Fiorentina",
                        "Rosa",
                        "QuattroFormaggi",
                        "Giardiniera",
                        "FourSeasons"
                    ],
                    "propertyRestrictions": [
                        "[hasTopping some TomatoTopping]",
                        "[hasTopping only (LeekTopping or RosemaryTopping or MozzarellaTopping or TomatoTopping or ParmesanTopping)]",
                        "[hasTopping some MozzarellaTopping]",
                        "[hasTopping some ParmesanTopping]",
                        "[hasTopping some LeekTopping]",
                        "[hasTopping some RosemaryTopping]"
                    ]
                },
                "description": "PrinceCarlo is defined as a subclass of NamedPizza, making it a specific kind of pizza with a distinct identity. It is explicitly disjoint with a comprehensive set of other named pizzas, such that no individual pizza can be simultaneously classified as PrinceCarlo and any of those other pizzas (e.g., Mushroom, LaReine, Napoletana, etc.).\n\nFrom the property restrictions, any PrinceCarlo pizza must have at least the following toppings: TomatoTopping, MozzarellaTopping, ParmesanTopping, LeekTopping, and RosemaryTopping. Furthermore, the only toppings permitted on a PrinceCarlo pizza are LeekTopping, RosemaryTopping, MozzarellaTopping, TomatoTopping, and ParmesanTopping. This formalization ensures that PrinceCarlo pizzas are uniquely characterized by this specific and exclusive combination of toppings, and cannot include any others.",
                "CQ": [
                    {
                        "axiom": "PrinceCarlo subClassOf NamedPizza",
                        "CQ": [
                            "Is PrinceCarlo classified as a type of NamedPizza?",
                            "What named pizzas have subcategories such as PrinceCarlo?",
                            "Which broader pizza categories encompass PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Mushroom",
                        "CQ": [
                            "What ontological separation is defined between PrinceCarlo and Mushroom?",
                            "Is there any instance that can belong to both PrinceCarlo and Mushroom classes simultaneously?",
                            "Which classes are specified as mutually exclusive with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith LaReine",
                        "CQ": [
                            "What ontological separation is enforced between PrinceCarlo and LaReine classes?",
                            "Is any instance permitted to simultaneously belong to both PrinceCarlo and LaReine categories?",
                            "Which classes, aside from LaReine, are defined as disjoint with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Napoletana",
                        "CQ": [
                            "How does the ontology define the separation between PrinceCarlo and Napoletana?",
                            "Is it allowed for an individual to be classified as both PrinceCarlo and Napoletana?",
                            "Which classes are explicitly declared as mutually exclusive with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Veneziana",
                        "CQ": [
                            "What is the ontological separation between PrinceCarlo and Veneziana?",
                            "Is there any individual that can belong to both PrinceCarlo and Veneziana classes?",
                            "Which classes are specified as disjoint with PrinceCarlo within the ontology?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith AmericanHot",
                        "CQ": [
                            "How does the ontology define the connection or exclusion between PrinceCarlo and AmericanHot?",
                            "Is any entity permitted to be classified as both PrinceCarlo and AmericanHot simultaneously?",
                            "Which entities or classes are specified as disjoint with AmericanHot within the ontology?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith UnclosedPizza",
                        "CQ": [
                            "What is the ontological separation asserted between PrinceCarlo and UnclosedPizza?",
                            "Is an individual pizza instance allowed to belong to both PrinceCarlo and UnclosedPizza simultaneously?",
                            "Which classes are formally specified as disjoint with UnclosedPizza within the ontology?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Capricciosa",
                        "CQ": [
                            "What formal incompatibility is specified between PrinceCarlo and Capricciosa in the ontology?",
                            "Is any single pizza instance permitted to belong to both PrinceCarlo and Capricciosa categories?",
                            "Which classes are explicitly marked as disjoint with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith FruttiDiMare",
                        "CQ": [
                            "What is the ontological separation between PrinceCarlo and FruttiDiMare pizza types?",
                            "Is there any instance that can be classified as both PrinceCarlo and FruttiDiMare?",
                            "Which classes are stated to be mutually exclusive with FruttiDiMare?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Siciliana",
                        "CQ": [
                            "What is the logical separation defined between PrinceCarlo and Siciliana in the ontology?",
                            "Is there any circumstance where an entity can be an instance of both PrinceCarlo and Siciliana?",
                            "Which classes are specified as mutually exclusive with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Cajun",
                        "CQ": [
                            "How are PrinceCarlo and Cajun conceptually differentiated within the ontology?",
                            "Is there any instance that can belong to both PrinceCarlo and Cajun categories simultaneously?",
                            "Which classes are specified as mutually exclusive with Cajun?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Margherita",
                        "CQ": [
                            "What is the ontological separation between PrinceCarlo and Margherita classes?",
                            "Is there any entity that can simultaneously be an instance of both PrinceCarlo and Margherita?",
                            "Which classes, apart from Margherita, are specified as disjoint with PrinceCarlo within the ontology?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith American",
                        "CQ": [
                            "How are PrinceCarlo and American classes differentiated in the ontology?",
                            "Is there any individual that can belong to both PrinceCarlo and American categories?",
                            "Which classes are formally specified as disjoint with the American class?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith SloppyGiuseppe",
                        "CQ": [
                            "What logical implication follows from PrinceCarlo and SloppyGiuseppe being disjoint?",
                            "Is there any instance that can simultaneously belong to both PrinceCarlo and SloppyGiuseppe classes?",
                            "Which classes are explicitly disjoint with SloppyGiuseppe?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Caprina",
                        "CQ": [
                            "How are PrinceCarlo and Caprina formally separated within the ontology?",
                            "Is membership in both PrinceCarlo and Caprina classes allowed for a single individual?",
                            "Which classes are stated as disjoint with Caprina?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Soho",
                        "CQ": [
                            "How are PrinceCarlo and Soho differentiated within the ontology?",
                            "Is there any instance that could simultaneously belong to both PrinceCarlo and Soho classes?",
                            "Which classes are specified as mutually exclusive with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Parmense",
                        "CQ": [
                            "What is the formal disjointness asserted between PrinceCarlo and Parmense in the ontology?",
                            "Is there any instance that can belong to both PrinceCarlo and Parmense classes simultaneously?",
                            "Which classes are explicitly specified as being disjoint with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith PolloAdAstra",
                        "CQ": [
                            "What logical separation is established between PrinceCarlo and PolloAdAstra within the ontology?",
                            "Is any entity permitted to be an instance of both PrinceCarlo and PolloAdAstra simultaneously?",
                            "Which classes are asserted as disjoint with PrinceCarlo in the ontology?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Fiorentina",
                        "CQ": [
                            "What logical separation is specified between PrinceCarlo and Fiorentina in the ontology?",
                            "Can an instance belong to both PrinceCarlo and Fiorentina categories simultaneously?",
                            "Which classes are explicitly defined as incompatible with Fiorentina?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Rosa",
                        "CQ": [
                            "What logical separation is defined between PrinceCarlo and Rosa in the ontology?",
                            "Is there any individual or entity that can simultaneously belong to both PrinceCarlo and Rosa?",
                            "Which classes or entities are specified as disjoint with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith QuattroFormaggi",
                        "CQ": [
                            "What is the ontological distinction between PrinceCarlo and QuattroFormaggi?",
                            "Can a pizza instance belong to both PrinceCarlo and QuattroFormaggi classes?",
                            "Which classes are formally specified as disjoint with PrinceCarlo in the ontology?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith Giardiniera",
                        "CQ": [
                            "Are PrinceCarlo and Giardiniera considered mutually exclusive pizza types within the ontology?",
                            "Is there any possibility for a pizza to be classified simultaneously as PrinceCarlo and Giardiniera?",
                            "Which pizza classes are specified as disjoint with Giardiniera?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo disjointWith FourSeasons",
                        "CQ": [
                            "How does the ontology distinguish between PrinceCarlo and FourSeasons as pizza types?",
                            "Is there any pizza that can be classified as both PrinceCarlo and FourSeasons?",
                            "Which pizza classes are explicitly set as disjoint with PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo propertyRestrictions [hasTopping some TomatoTopping]",
                        "CQ": [
                            "Is it required that every PrinceCarlo pizza includes at least one TomatoTopping as a topping?",
                            "Does a PrinceCarlo pizza always have the property 'hasTopping' with some instance of TomatoTopping?",
                            "Can a pizza classified as PrinceCarlo exist without having TomatoTopping as one of its toppings?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo propertyRestrictions [hasTopping only (LeekTopping or RosemaryTopping or MozzarellaTopping or TomatoTopping or ParmesanTopping)]",
                        "CQ": [
                            "Are all toppings on a PrinceCarlo pizza limited to Leek, Rosemary, Mozzarella, Tomato, or Parmesan?",
                            "Can a PrinceCarlo pizza include any topping type apart from Leek, Rosemary, Mozzarella, Tomato, or Parmesan?",
                            "Is it required that every topping present on a PrinceCarlo pizza belongs exclusively to the specified set of five toppings?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo propertyRestrictions [hasTopping some MozzarellaTopping]",
                        "CQ": [
                            "Is it required that every PrinceCarlo has at least one topping of type MozzarellaTopping?",
                            "Can a PrinceCarlo exist without being associated with the hasTopping property pointing to MozzarellaTopping?",
                            "Does the class PrinceCarlo necessarily have the property hasTopping with some instance of MozzarellaTopping?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo propertyRestrictions [hasTopping some ParmesanTopping]",
                        "CQ": [
                            "Is it required that every PrinceCarlo pizza has at least one topping of type ParmesanTopping?",
                            "Can a PrinceCarlo pizza exist without having any ParmesanTopping as one of its toppings?",
                            "Does the presence of ParmesanTopping fulfill the minimum topping requirement for a pizza classified as PrinceCarlo?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo propertyRestrictions [hasTopping some LeekTopping]",
                        "CQ": [
                            "Is it required for every PrinceCarlo to have at least one topping that is LeekTopping?",
                            "Must PrinceCarlo always be associated with a topping of the type LeekTopping?",
                            "Can a PrinceCarlo exist without having any LeekTopping as one of its toppings?"
                        ]
                    },
                    {
                        "axiom": "PrinceCarlo propertyRestrictions [hasTopping some RosemaryTopping]",
                        "CQ": [
                            "Is it required that a PrinceCarlo pizza has at least one topping that is RosemaryTopping?",
                            "Can PrinceCarlo exist if it does not have any RosemaryTopping as a topping?",
                            "Does the presence of RosemaryTopping as a topping necessarily apply to all instances of PrinceCarlo?"
                        ]
                    }
                ],
                "removed axiom": "PrinceCarlo disjointWith Napoletana",
                "Target CQ": [
                    "How does the ontology define the separation between PrinceCarlo and Napoletana?",
                    "Is it allowed for an individual to be classified as both PrinceCarlo and Napoletana?",
                    "Which classes are explicitly declared as mutually exclusive with PrinceCarlo?"
                ],
                "Valid CQ": [
                    "Is PrinceCarlo classified as a type of NamedPizza?",
                    "What named pizzas have subcategories such as PrinceCarlo?",
                    "Which broader pizza categories encompass PrinceCarlo?",
                    "What ontological separation is defined between PrinceCarlo and Mushroom?",
                    "Is there any instance that can belong to both PrinceCarlo and Mushroom classes simultaneously?",
                    "Which classes are specified as mutually exclusive with PrinceCarlo?",
                    "What ontological separation is enforced between PrinceCarlo and LaReine classes?",
                    "Is any instance permitted to simultaneously belong to both PrinceCarlo and LaReine categories?",
                    "Which classes, aside from LaReine, are defined as disjoint with PrinceCarlo?",
                    "What is the ontological separation between PrinceCarlo and Veneziana?",
                    "Is there any individual that can belong to both PrinceCarlo and Veneziana classes?",
                    "Which classes are specified as disjoint with PrinceCarlo within the ontology?",
                    "How does the ontology define the connection or exclusion between PrinceCarlo and AmericanHot?",
                    "Is any entity permitted to be classified as both PrinceCarlo and AmericanHot simultaneously?",
                    "Which entities or classes are specified as disjoint with AmericanHot within the ontology?",
                    "What is the ontological separation asserted between PrinceCarlo and UnclosedPizza?",
                    "Is an individual pizza instance allowed to belong to both PrinceCarlo and UnclosedPizza simultaneously?",
                    "Which classes are formally specified as disjoint with UnclosedPizza within the ontology?",
                    "What formal incompatibility is specified between PrinceCarlo and Capricciosa in the ontology?",
                    "Is any single pizza instance permitted to belong to both PrinceCarlo and Capricciosa categories?",
                    "Which classes are explicitly marked as disjoint with Capricciosa?",
                    "What is the ontological separation between PrinceCarlo and FruttiDiMare pizza types?",
                    "Is there any instance that can be classified as both PrinceCarlo and FruttiDiMare?",
                    "Which classes are stated to be mutually exclusive with FruttiDiMare?",
                    "What is the logical separation defined between PrinceCarlo and Siciliana in the ontology?",
                    "Is there any circumstance where an entity can be an instance of both PrinceCarlo and Siciliana?",
                    "Which classes are specified as mutually exclusive with PrinceCarlo?",
                    "How are PrinceCarlo and Cajun conceptually differentiated within the ontology?",
                    "Is there any instance that can belong to both PrinceCarlo and Cajun categories simultaneously?",
                    "Which classes are specified as mutually exclusive with Cajun?",
                    "What is the ontological separation between PrinceCarlo and Margherita classes?",
                    "Is there any entity that can simultaneously be an instance of both PrinceCarlo and Margherita?",
                    "Which classes, apart from Margherita, are specified as disjoint with PrinceCarlo within the ontology?",
                    "How are PrinceCarlo and American classes differentiated in the ontology?",
                    "Is there any individual that can belong to both PrinceCarlo and American categories?",
                    "Which classes are formally specified as disjoint with the American class?",
                    "What logical implication follows from PrinceCarlo and SloppyGiuseppe being disjoint?",
                    "Is there any instance that can simultaneously belong to both PrinceCarlo and SloppyGiuseppe classes?",
                    "Which classes are explicitly disjoint with SloppyGiuseppe?",
                    "How are PrinceCarlo and Caprina formally separated within the ontology?",
                    "Is membership in both PrinceCarlo and Caprina classes allowed for a single individual?",
                    "Which classes are stated as disjoint with Caprina?",
                    "How are PrinceCarlo and Soho differentiated within the ontology?",
                    "Is there any instance that could simultaneously belong to both PrinceCarlo and Soho classes?",
                    "Which classes are specified as mutually exclusive with PrinceCarlo?",
                    "What is the formal disjointness asserted between PrinceCarlo and Parmense in the ontology?",
                    "Is there any instance that can belong to both PrinceCarlo and Parmense classes simultaneously?",
                    "Which classes are explicitly specified as being disjoint with PrinceCarlo?",
                    "What logical separation is established between PrinceCarlo and PolloAdAstra within the ontology?",
                    "Is any entity permitted to be an instance of both PrinceCarlo and PolloAdAstra simultaneously?",
                    "Which classes are asserted as disjoint with PrinceCarlo in the ontology?",
                    "What logical separation is specified between PrinceCarlo and Fiorentina in the ontology?",
                    "Can an instance belong to both PrinceCarlo and Fiorentina categories simultaneously?",
                    "Which classes are explicitly defined as incompatible with Fiorentina?",
                    "What logical separation is defined between PrinceCarlo and Rosa in the ontology?",
                    "Is there any individual or entity that can simultaneously belong to both PrinceCarlo and Rosa?",
                    "Which classes or entities are specified as disjoint with PrinceCarlo?",
                    "What is the ontological distinction between PrinceCarlo and QuattroFormaggi?",
                    "Can a pizza instance belong to both PrinceCarlo and QuattroFormaggi classes?",
                    "Which classes are formally specified as disjoint with PrinceCarlo in the ontology?",
                    "Are PrinceCarlo and Giardiniera considered mutually exclusive pizza types within the ontology?",
                    "Is there any possibility for a pizza to be classified simultaneously as PrinceCarlo and Giardiniera?",
                    "Which pizza classes are specified as disjoint with Giardiniera?",
                    "How does the ontology distinguish between PrinceCarlo and FourSeasons as pizza types?",
                    "Is there any pizza that can be classified as both PrinceCarlo and FourSeasons?",
                    "Which pizza classes are explicitly set as disjoint with PrinceCarlo?",
                    "Is it required that every PrinceCarlo pizza includes at least one TomatoTopping as a topping?",
                    "Does a PrinceCarlo pizza always have the property 'hasTopping' with some instance of TomatoTopping?",
                    "Can a pizza classified as PrinceCarlo exist without having TomatoTopping as one of its toppings?",
                    "Are all toppings on a PrinceCarlo pizza limited to Leek, Rosemary, Mozzarella, Tomato, or Parmesan?",
                    "Can a PrinceCarlo pizza include any topping type apart from Leek, Rosemary, Mozzarella, Tomato, or Parmesan?",
                    "Is it required that every topping present on a PrinceCarlo pizza belongs exclusively to the specified set of five toppings?",
                    "Is it required that every PrinceCarlo has at least one topping of type MozzarellaTopping?",
                    "Can a PrinceCarlo exist without being associated with the hasTopping property pointing to MozzarellaTopping?",
                    "Does the class PrinceCarlo necessarily have the property hasTopping with some instance of MozzarellaTopping?",
                    "Is it required that every PrinceCarlo pizza has at least one topping of type ParmesanTopping?",
                    "Can a PrinceCarlo pizza exist without having any ParmesanTopping as one of its toppings?",
                    "Does the presence of ParmesanTopping fulfill the minimum topping requirement for a pizza classified as PrinceCarlo?",
                    "Is it required for every PrinceCarlo to have at least one topping that is LeekTopping?",
                    "Must PrinceCarlo always be associated with a topping of the type LeekTopping?",
                    "Can a PrinceCarlo exist without having any LeekTopping as one of its toppings?",
                    "Is it required that a PrinceCarlo pizza has at least one topping that is RosemaryTopping?",
                    "Can PrinceCarlo exist if it does not have any RosemaryTopping as a topping?",
                    "Does the presence of RosemaryTopping as a topping necessarily apply to all instances of PrinceCarlo?"
                ],
                "type": "Type1"
            },
            "Siciliana": {
                "axiom": {
                    "subClassOf": [
                        "NamedPizza"
                    ],
                    "disjointWith": [
                        "Mushroom",
                        "Napoletana",
                        "Veneziana",
                        "AmericanHot",
                        "UnclosedPizza",
                        "PrinceCarlo",
                        "Capricciosa",
                        "FruttiDiMare",
                        "Cajun",
                        "Margherita",
                        "American",
                        "SloppyGiuseppe",
                        "Caprina",
                        "Soho",
                        "Parmense",
                        "PolloAdAstra",
                        "Fiorentina",
                        "Rosa",
                        "QuattroFormaggi",
                        "Giardiniera",
                        "FourSeasons"
                    ],
                    "propertyRestrictions": [
                        "[hasTopping some TomatoTopping]",
                        "[hasTopping some GarlicTopping]",
                        "[hasTopping some HamTopping]",
                        "[hasTopping some ArtichokeTopping]",
                        "[hasTopping some OliveTopping]",
                        "[hasTopping some MozzarellaTopping]",
                        "[hasTopping some AnchoviesTopping]",
                        "[hasTopping only (AnchoviesTopping or MozzarellaTopping or GarlicTopping or ArtichokeTopping or TomatoTopping or HamTopping or OliveTopping)]"
                    ]
                },
                "description": "Siciliana is a subclass of NamedPizza, explicitly disjoint from numerous other specific pizza types, ensuring that no individual pizza can be simultaneously classified as Siciliana and any of the listed varieties (e.g., Mushroom, Margherita, FourSeasons, etc.). Siciliana pizzas are characterized by their toppings: they must include some tomato topping, garlic topping, ham topping, artichoke topping, olive topping, mozzarella topping, and anchovies topping. Furthermore, these pizzas are restricted to only have toppings from the following: anchovies, mozzarella, garlic, artichoke, tomato, ham, and olive—no additional toppings are permitted. This formalization precisely defines the Siciliana pizza in terms of both its composition and differentiation from other pizzas.",
                "CQ": [
                    {
                        "axiom": "Siciliana subClassOf NamedPizza",
                        "CQ": [
                            "Does Siciliana fall under the broader classification of NamedPizza?",
                            "Which pizza types are designated as subclasses of NamedPizza, and does this include Siciliana?",
                            "What overarching groupings encompass Siciliana within the ontology?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Mushroom",
                        "CQ": [
                            "What is the formal ontological separation between Siciliana and Mushroom classes?",
                            "Can an instance belong to both Siciliana and Mushroom categories simultaneously?",
                            "Which classes are stated to be mutually exclusive with Siciliana in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith LaReine",
                        "CQ": [
                            "How does the ontology formally distinguish between Siciliana and LaReine pizza types?",
                            "Is there any circumstance where an individual can be classified as both Siciliana and LaReine?",
                            "Which pizza varieties are specified as mutually exclusive with LaReine?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Napoletana",
                        "CQ": [
                            "What is the ontological difference between Siciliana and Napoletana pizzas?",
                            "Is any pizza instance allowed to be classified as both Siciliana and Napoletana?",
                            "Which pizza types are formally declared as incompatible with Siciliana?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Veneziana",
                        "CQ": [
                            "What ontological separation is established between Siciliana and Veneziana?",
                            "Is there any individual that can belong to both Siciliana and Veneziana simultaneously?",
                            "Which classes are declared disjoint with Veneziana in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith AmericanHot",
                        "CQ": [
                            "What logical separation is specified between Siciliana and AmericanHot in the ontology?",
                            "Is there any instance that can be classified as both Siciliana and AmericanHot?",
                            "Which pizza types are formally set as disjoint with Siciliana?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith UnclosedPizza",
                        "CQ": [
                            "What logical constraint separates Siciliana from UnclosedPizza within the ontology?",
                            "Is it allowed for a pizza to be classified as both Siciliana and UnclosedPizza?",
                            "Which classes are explicitly stated as disjoint with UnclosedPizza?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith PrinceCarlo",
                        "CQ": [
                            "What ontological separation exists between Siciliana and PrinceCarlo?",
                            "Is there any instance that can be classified as both Siciliana and PrinceCarlo?",
                            "Which classes are specified as disjoint with PrinceCarlo in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Capricciosa",
                        "CQ": [
                            "What ontological relation excludes overlap between Siciliana and Capricciosa?",
                            "Is there any pizza that can simultaneously be classified as Siciliana and Capricciosa?",
                            "Which pizza types are defined as mutually exclusive with Capricciosa in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith FruttiDiMare",
                        "CQ": [
                            "What ontological separation is asserted between Siciliana and FruttiDiMare pizzas?",
                            "Is it permitted for a pizza to be classified as both Siciliana and FruttiDiMare?",
                            "Which classes are specified as disjoint with FruttiDiMare?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Cajun",
                        "CQ": [
                            "What logical separation is defined between Siciliana and Cajun within the ontology?",
                            "Is any instance allowed to belong to both Siciliana and Cajun classes simultaneously?",
                            "Which classes are declared as being disjoint with Siciliana?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Margherita",
                        "CQ": [
                            "How does the ontology define the separation between Siciliana and Margherita pizza types?",
                            "Can a single pizza instance be classified as both Siciliana and Margherita?",
                            "Which classes are explicitly stated as disjoint with Margherita in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith American",
                        "CQ": [
                            "What formal constraint exists between the classes Siciliana and American in the ontology?",
                            "Is there any individual that can belong to both Siciliana and American simultaneously?",
                            "Which classes are specified as being disjoint with Siciliana?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith SloppyGiuseppe",
                        "CQ": [
                            "What distinguishes Siciliana from SloppyGiuseppe according to their class disjointness?",
                            "Can any pizza belong to both Siciliana and SloppyGiuseppe categories simultaneously?",
                            "Which classes are specified as disjoint with Siciliana in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Caprina",
                        "CQ": [
                            "How does the ontology define the distinction between Siciliana and Caprina?",
                            "Is any individual pizza instance allowed to be classified as both Siciliana and Caprina?",
                            "What other pizza types, if any, are formally disjoint with Caprina?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Soho",
                        "CQ": [
                            "What formal differentiation is specified between Siciliana and Soho in the ontology?",
                            "Is it permitted for a pizza to be classified as both Siciliana and Soho simultaneously?",
                            "Which pizza types are explicitly specified as being mutually exclusive with Siciliana?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Parmense",
                        "CQ": [
                            "How is Siciliana characterized in relation to Parmense within the ontology?",
                            "Is there any entity that can be classified as both Siciliana and Parmense?",
                            "Which classes are explicitly defined as mutually exclusive with Parmense?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith PolloAdAstra",
                        "CQ": [
                            "What ontological separation exists between Siciliana and PolloAdAstra?",
                            "Is any pizza instance allowed to be classified as both Siciliana and PolloAdAstra?",
                            "Which other pizza categories are specified as disjoint with Siciliana?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Fiorentina",
                        "CQ": [
                            "What ontological separation is defined between Siciliana and Fiorentina?",
                            "Is a pizza permitted to be classified as both Siciliana and Fiorentina simultaneously?",
                            "Which classes are specified as disjoint with Siciliana in the ontology?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Rosa",
                        "CQ": [
                            "What is the ontological separation between Siciliana and Rosa?",
                            "Is it permitted for an individual to be classified as both Siciliana and Rosa?",
                            "Which classes are defined as mutually exclusive with Rosa?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith QuattroFormaggi",
                        "CQ": [
                            "What logical separation is established between Siciliana and QuattroFormaggi according to the ontology?",
                            "Is it allowed for a pizza to be simultaneously classified as Siciliana and QuattroFormaggi?",
                            "Which other pizza classes are defined as being mutually exclusive with QuattroFormaggi?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith Giardiniera",
                        "CQ": [
                            "How are Siciliana and Giardiniera differentiated within the ontology?",
                            "Is there any instance that can simultaneously belong to both Siciliana and Giardiniera classes?",
                            "Which classes are specified as mutually exclusive with Giardiniera?"
                        ]
                    },
                    {
                        "axiom": "Siciliana disjointWith FourSeasons",
                        "CQ": [
                            "What logical separation is defined between Siciliana and FourSeasons within the ontology?",
                            "Is it allowable for a pizza to be classified simultaneously as Siciliana and FourSeasons?",
                            "Which pizza types are asserted to be incompatible with Siciliana?"
                        ]
                    },
                    {
                        "axiom": "Siciliana propertyRestrictions [hasTopping some TomatoTopping]",
                        "CQ": [
                            "Is it necessary for a Siciliana to have at least one topping that is a TomatoTopping?",
                            "Does every instance of Siciliana include some TomatoTopping as a topping?",
                            "Can Siciliana be classified without specifying the presence of TomatoTopping among its toppings?"
                        ]
                    },
                    {
                        "axiom": "Siciliana propertyRestrictions [hasTopping some GarlicTopping]",
                        "CQ": [
                            "Is it required for a Siciliana pizza to have at least one topping of garlic?",
                            "Can a pizza be classified as Siciliana if it lacks any garlic topping?",
                            "Does every instance of Siciliana include garlic among its toppings?"
                        ]
                    },
                    {
                        "axiom": "Siciliana propertyRestrictions [hasTopping some HamTopping]",
                        "CQ": [
                            "Is it required for Siciliana to have at least one topping that is HamTopping?",
                            "Can a Siciliana exist without including HamTopping as one of its toppings?",
                            "Does every Siciliana necessarily possess the hasTopping relation to a HamTopping?"
                        ]
                    },
                    {
                        "axiom": "Siciliana propertyRestrictions [hasTopping some ArtichokeTopping]",
                        "CQ": [
                            "Is it required for a Siciliana pizza to include at least one ArtichokeTopping as a topping?",
                            "Does every Siciliana pizza have the hasTopping property relating it to some ArtichokeTopping?",
                            "Can a pizza be classified as Siciliana if it does not have any ArtichokeTopping?"
                        ]
                    },
                    {
                        "axiom": "Siciliana propertyRestrictions [hasTopping some OliveTopping]",
                        "CQ": [
                            "Is it required for a Siciliana to include at least one OliveTopping as a topping?",
                            "Can a Siciliana exist without having OliveTopping among its toppings?",
                            "Does the presence of OliveTopping as a topping suffice for a dish to be classified as Siciliana?"
                        ]
                    },
                    {
                        "axiom": "Siciliana propertyRestrictions [hasTopping some MozzarellaTopping]",
                        "CQ": [
                            "Is it required for Siciliana to have at least one MozzarellaTopping as its topping?",
                            "Can a Siciliana exist without having the hasTopping relation to any MozzarellaTopping?",
                            "Does every Siciliana necessarily possess the hasTopping property linked to some instance of MozzarellaTopping?"
                        ]
                    },
                    {
                        "axiom": "Siciliana propertyRestrictions [hasTopping some AnchoviesTopping]",
                        "CQ": [
                            "Is it required for a Siciliana pizza to include at least one anchovies topping?",
                            "Can a Siciliana pizza exist without having the hasTopping property set to AnchoviesTopping?",
                            "Does every instance of Siciliana necessarily have the hasTopping relationship with AnchoviesTopping?"
                        ]
                    },
                    {
                        "axiom": "Siciliana propertyRestrictions [hasTopping only (AnchoviesTopping or MozzarellaTopping or GarlicTopping or ArtichokeTopping or TomatoTopping or HamTopping or OliveTopping)]",
                        "CQ": [
                            "Are Siciliana pizzas restricted to having only Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, or Olive as toppings?",
                            "Could a pizza still be classified as Siciliana if it includes a topping not listed among Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, or Olive?",
                            "Does the definition of Siciliana exclude all toppings other than Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, and Olive from being present on the pizza?"
                        ]
                    }
                ],
                "removed axiom": "Siciliana disjointWith LaReine",
                "Target CQ": [
                    "How does the ontology formally distinguish between Siciliana and LaReine pizza types?",
                    "Is there any circumstance where an individual can be classified as both Siciliana and LaReine?",
                    "Which pizza varieties are specified as mutually exclusive with LaReine?"
                ],
                "Valid CQ": [
                    "Does Siciliana fall under the broader classification of NamedPizza?",
                    "Which pizza types are designated as subclasses of NamedPizza, and does this include Siciliana?",
                    "What overarching groupings encompass Siciliana within the ontology?",
                    "What is the formal ontological separation between Siciliana and Mushroom classes?",
                    "Can an instance belong to both Siciliana and Mushroom categories simultaneously?",
                    "Which classes are stated to be mutually exclusive with Siciliana in the ontology?",
                    "What is the ontological difference between Siciliana and Napoletana pizzas?",
                    "Is any pizza instance allowed to be classified as both Siciliana and Napoletana?",
                    "Which pizza types are formally declared as incompatible with Siciliana?",
                    "What ontological separation is established between Siciliana and Veneziana?",
                    "Is there any individual that can belong to both Siciliana and Veneziana simultaneously?",
                    "Which classes are declared disjoint with Veneziana in the ontology?",
                    "What logical separation is specified between Siciliana and AmericanHot in the ontology?",
                    "Is there any instance that can be classified as both Siciliana and AmericanHot?",
                    "Which pizza types are formally set as disjoint with Siciliana?",
                    "What logical constraint separates Siciliana from UnclosedPizza within the ontology?",
                    "Is it allowed for a pizza to be classified as both Siciliana and UnclosedPizza?",
                    "Which classes are explicitly stated as disjoint with UnclosedPizza?",
                    "What ontological separation exists between Siciliana and PrinceCarlo?",
                    "Is there any instance that can be classified as both Siciliana and PrinceCarlo?",
                    "Which classes are specified as disjoint with PrinceCarlo in the ontology?",
                    "What ontological relation excludes overlap between Siciliana and Capricciosa?",
                    "Is there any pizza that can simultaneously be classified as Siciliana and Capricciosa?",
                    "Which pizza types are defined as mutually exclusive with Capricciosa in the ontology?",
                    "What ontological separation is asserted between Siciliana and FruttiDiMare pizzas?",
                    "Is it permitted for a pizza to be classified as both Siciliana and FruttiDiMare?",
                    "Which classes are specified as disjoint with FruttiDiMare?",
                    "What logical separation is defined between Siciliana and Cajun within the ontology?",
                    "Is any instance allowed to belong to both Siciliana and Cajun classes simultaneously?",
                    "Which classes are declared as being disjoint with Siciliana?",
                    "How does the ontology define the separation between Siciliana and Margherita pizza types?",
                    "Can a single pizza instance be classified as both Siciliana and Margherita?",
                    "Which classes are explicitly stated as disjoint with Margherita in the ontology?",
                    "What formal constraint exists between the classes Siciliana and American in the ontology?",
                    "Is there any individual that can belong to both Siciliana and American simultaneously?",
                    "Which classes are specified as being disjoint with Siciliana?",
                    "What distinguishes Siciliana from SloppyGiuseppe according to their class disjointness?",
                    "Can any pizza belong to both Siciliana and SloppyGiuseppe categories simultaneously?",
                    "Which classes are specified as disjoint with Siciliana in the ontology?",
                    "How does the ontology define the distinction between Siciliana and Caprina?",
                    "Is any individual pizza instance allowed to be classified as both Siciliana and Caprina?",
                    "What other pizza types, if any, are formally disjoint with Caprina?",
                    "What formal differentiation is specified between Siciliana and Soho in the ontology?",
                    "Is it permitted for a pizza to be classified as both Siciliana and Soho simultaneously?",
                    "Which pizza types are explicitly specified as being mutually exclusive with Siciliana?",
                    "How is Siciliana characterized in relation to Parmense within the ontology?",
                    "Is there any entity that can be classified as both Siciliana and Parmense?",
                    "Which classes are explicitly defined as mutually exclusive with Parmense?",
                    "What ontological separation exists between Siciliana and PolloAdAstra?",
                    "Is any pizza instance allowed to be classified as both Siciliana and PolloAdAstra?",
                    "Which other pizza categories are specified as disjoint with Siciliana?",
                    "What ontological separation is defined between Siciliana and Fiorentina?",
                    "Is a pizza permitted to be classified as both Siciliana and Fiorentina simultaneously?",
                    "Which classes are specified as disjoint with Siciliana in the ontology?",
                    "What is the ontological separation between Siciliana and Rosa?",
                    "Is it permitted for an individual to be classified as both Siciliana and Rosa?",
                    "Which classes are defined as mutually exclusive with Rosa?",
                    "What logical separation is established between Siciliana and QuattroFormaggi according to the ontology?",
                    "Is it allowed for a pizza to be simultaneously classified as Siciliana and QuattroFormaggi?",
                    "Which other pizza classes are defined as being mutually exclusive with QuattroFormaggi?",
                    "How are Siciliana and Giardiniera differentiated within the ontology?",
                    "Is there any instance that can simultaneously belong to both Siciliana and Giardiniera classes?",
                    "Which classes are specified as mutually exclusive with Giardiniera?",
                    "What logical separation is defined between Siciliana and FourSeasons within the ontology?",
                    "Is it allowable for a pizza to be classified simultaneously as Siciliana and FourSeasons?",
                    "Which pizza types are asserted to be incompatible with Siciliana?",
                    "Is it necessary for a Siciliana to have at least one topping that is a TomatoTopping?",
                    "Does every instance of Siciliana include some TomatoTopping as a topping?",
                    "Can Siciliana be classified without specifying the presence of TomatoTopping among its toppings?",
                    "Is it required for a Siciliana pizza to have at least one topping of garlic?",
                    "Can a pizza be classified as Siciliana if it lacks any garlic topping?",
                    "Does every instance of Siciliana include garlic among its toppings?",
                    "Is it required for Siciliana to have at least one topping that is HamTopping?",
                    "Can a Siciliana exist without including HamTopping as one of its toppings?",
                    "Does every Siciliana necessarily possess the hasTopping relation to a HamTopping?",
                    "Is it required for a Siciliana pizza to include at least one ArtichokeTopping as a topping?",
                    "Does every Siciliana pizza have the hasTopping property relating it to some ArtichokeTopping?",
                    "Can a pizza be classified as Siciliana if it does not have any ArtichokeTopping?",
                    "Is it required for a Siciliana to include at least one OliveTopping as a topping?",
                    "Can a Siciliana exist without having OliveTopping among its toppings?",
                    "Does the presence of OliveTopping as a topping suffice for a dish to be classified as Siciliana?",
                    "Is it required for Siciliana to have at least one MozzarellaTopping as its topping?",
                    "Can a Siciliana exist without having the hasTopping relation to any MozzarellaTopping?",
                    "Does every Siciliana necessarily possess the hasTopping property linked to some instance of MozzarellaTopping?",
                    "Is it required for a Siciliana pizza to include at least one anchovies topping?",
                    "Can a Siciliana pizza exist without having the hasTopping property set to AnchoviesTopping?",
                    "Does every instance of Siciliana necessarily have the hasTopping relationship with AnchoviesTopping?",
                    "Are Siciliana pizzas restricted to having only Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, or Olive as toppings?",
                    "Could a pizza still be classified as Siciliana if it includes a topping not listed among Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, or Olive?",
                    "Does the definition of Siciliana exclude all toppings other than Anchovies, Mozzarella, Garlic, Artichoke, Tomato, Ham, and Olive from being present on the pizza?"
                ],
                "type": "Type1"
            },
            "UnclosedPizza": {
                "axiom": {
                    "subClassOf": [
                        "NamedPizza"
                    ],
                    "disjointWith": [
                        "Mushroom",
                        "LaReine",
                        "Napoletana",
                        "Veneziana",
                        "AmericanHot",
                        "PrinceCarlo",
                        "Capricciosa",
                        "FruttiDiMare",
                        "Siciliana",
                        "Cajun",
                        "Margherita",
                        "American",
                        "SloppyGiuseppe",
                        "Caprina",
                        "Soho",
                        "PolloAdAstra",
                        "Fiorentina",
                        "Rosa",
                        "QuattroFormaggi",
                        "Giardiniera",
                        "FourSeasons"
                    ],
                    "propertyRestrictions": [
                        "[hasTopping some MozzarellaTopping]"
                    ]
                },
                "description": "UnclosedPizza is defined as a subclass of NamedPizza, disjoint with a specific set of pizzas including Mushroom, AmericanHot, Margherita, and others, ensuring mutual exclusivity with these named varieties. Every UnclosedPizza is characterized by having at least one MozzarellaTopping, but there is no restriction on additional toppings. As described, membership in UnclosedPizza does not imply classification as either a VegetarianPizza or a NonVegetarianPizza, as its topping composition may be incomplete or unspecified. This formalization supports the open nature of its topping definitions within the ontology.",
                "CQ": [
                    {
                        "axiom": "UnclosedPizza subClassOf NamedPizza",
                        "CQ": [
                            "Is UnclosedPizza categorized as a kind of NamedPizza?",
                            "Which specific types of NamedPizza include UnclosedPizza?",
                            "What general classifications encompass UnclosedPizza within the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Mushroom",
                        "CQ": [
                            "What is the ontological separation between UnclosedPizza and Mushroom?",
                            "Is there an instance that can belong to both UnclosedPizza and Mushroom categories?",
                            "Which classes are declared as mutually exclusive with Mushroom in the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith LaReine",
                        "CQ": [
                            "Are UnclosedPizza and LaReine considered mutually exclusive pizza types within the ontology?",
                            "Could an individual pizza instance be simultaneously classified as UnclosedPizza and LaReine?",
                            "Which classes are specified as disjoint with LaReine in the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Napoletana",
                        "CQ": [
                            "How does the ontology differentiate between UnclosedPizza and Napoletana?",
                            "Is there any instance that can be classified as both UnclosedPizza and Napoletana?",
                            "What other classes are stated as mutually exclusive with Napoletana?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Veneziana",
                        "CQ": [
                            "How does the ontology differentiate between UnclosedPizza and Veneziana?",
                            "Is there any entity that can be classified simultaneously as UnclosedPizza and Veneziana?",
                            "Which pizza types are formally specified as disjoint with Veneziana within the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith AmericanHot",
                        "CQ": [
                            "Does the ontology explicitly represent UnclosedPizza and AmericanHot as non-overlapping classes?",
                            "Is there any pizza that can be simultaneously classified as UnclosedPizza and AmericanHot?",
                            "Which categories are formally incompatible with AmericanHot according to the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith PrinceCarlo",
                        "CQ": [
                            "What logical separation is established between UnclosedPizza and PrinceCarlo within the ontology?",
                            "Is an entity permitted to be classified as both UnclosedPizza and PrinceCarlo simultaneously?",
                            "Which classes are defined as mutually exclusive with UnclosedPizza?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Capricciosa",
                        "CQ": [
                            "What logical separation exists between UnclosedPizza and Capricciosa according to the ontology?",
                            "Is it permitted for a pizza to belong to both UnclosedPizza and Capricciosa categories?",
                            "Which classes are formally specified as disjoint with Capricciosa?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith FruttiDiMare",
                        "CQ": [
                            "How does the ontology define the exclusivity between UnclosedPizza and FruttiDiMare?",
                            "Is there any instance that qualifies as both UnclosedPizza and FruttiDiMare within the ontology?",
                            "Which classes are declared disjoint with FruttiDiMare according to the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Siciliana",
                        "CQ": [
                            "How does the ontology represent the separation between UnclosedPizza and Siciliana?",
                            "Is any pizza instance permitted to be classified as both UnclosedPizza and Siciliana?",
                            "Which classes are specified as disjoint with Siciliana within the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Cajun",
                        "CQ": [
                            "How does the ontology specify the distinction between UnclosedPizza and Cajun?",
                            "Is it feasible for a pizza to belong to both UnclosedPizza and Cajun categories simultaneously?",
                            "Which classes are defined as mutually exclusive with Cajun in the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Margherita",
                        "CQ": [
                            "How does the ontology distinguish between UnclosedPizza and Margherita?",
                            "Is there any instance that can belong to both UnclosedPizza and Margherita classes?",
                            "Which classes are declared as mutually exclusive with Margherita in the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith American",
                        "CQ": [
                            "How does the ontology specify the connection between UnclosedPizza and American?",
                            "Are there any instances that can be classified as both UnclosedPizza and American?",
                            "Which classes are explicitly marked as disjoint with American in the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith SloppyGiuseppe",
                        "CQ": [
                            "What logical separation is established between UnclosedPizza and SloppyGiuseppe within the ontology?",
                            "Could a pizza instance be simultaneously classified as UnclosedPizza and SloppyGiuseppe?",
                            "Which defined categories are asserted as disjoint with SloppyGiuseppe?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Caprina",
                        "CQ": [
                            "How does the ontology represent the separation between UnclosedPizza and Caprina?",
                            "Is any individual allowed to belong to both UnclosedPizza and Caprina categories?",
                            "Which classes are specified as being disjoint with Caprina?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Soho",
                        "CQ": [
                            "What ontological separation is specified between UnclosedPizza and Soho?",
                            "Does the ontology permit any instance to be classified as both UnclosedPizza and Soho?",
                            "Which classes are explicitly incompatible with Soho in the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Parmense",
                        "CQ": [
                            "How are UnclosedPizza and Parmense differentiated within the ontology?",
                            "Is any pizza instance allowed to belong to both UnclosedPizza and Parmense categories?",
                            "Which classes are specified as mutually exclusive with Parmense?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith PolloAdAstra",
                        "CQ": [
                            "What ontological separation is specified between UnclosedPizza and PolloAdAstra?",
                            "Is there any instance that can belong to both UnclosedPizza and PolloAdAstra categories?",
                            "Which classes are defined as disjoint with PolloAdAstra in the ontology?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Fiorentina",
                        "CQ": [
                            "How does the ontology differentiate between UnclosedPizza and Fiorentina?",
                            "Is it allowed for a pizza to be both UnclosedPizza and Fiorentina simultaneously according to the ontology?",
                            "Which classes are specified as disjoint with Fiorentina?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Rosa",
                        "CQ": [
                            "How is the class relationship between UnclosedPizza and Rosa defined in the ontology?",
                            "Is there any instance that can be classified as both UnclosedPizza and Rosa?",
                            "Which classes are stated as mutually exclusive with UnclosedPizza?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith QuattroFormaggi",
                        "CQ": [
                            "What is the formal distinction stated between UnclosedPizza and QuattroFormaggi in the ontology?",
                            "Is there any individual that can belong to both UnclosedPizza and QuattroFormaggi classes?",
                            "Which pizza categories are specified as mutually exclusive with QuattroFormaggi?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith Giardiniera",
                        "CQ": [
                            "What ontological constraint separates UnclosedPizza from Giardiniera?",
                            "Is there any scenario in which a pizza can be classified as both UnclosedPizza and Giardiniera?",
                            "Which classes does the ontology specify as explicitly incompatible with Giardiniera?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza disjointWith FourSeasons",
                        "CQ": [
                            "What ontological separation is specified between UnclosedPizza and FourSeasons?",
                            "Is there any scenario in which a pizza could belong to both UnclosedPizza and FourSeasons classes?",
                            "Which classes are formally stated to be disjoint with FourSeasons?"
                        ]
                    },
                    {
                        "axiom": "UnclosedPizza propertyRestrictions [hasTopping some MozzarellaTopping]",
                        "CQ": [
                            "Is it required for an UnclosedPizza to have at least one MozzarellaTopping as a topping?",
                            "Can an UnclosedPizza exist without having MozzarellaTopping among its toppings?",
                            "Does the presence of any MozzarellaTopping qualify a pizza as an UnclosedPizza?"
                        ]
                    }
                ],
                "removed axiom": "UnclosedPizza disjointWith Parmense",
                "Target CQ": [
                    "How are UnclosedPizza and Parmense differentiated within the ontology?",
                    "Is any pizza instance allowed to belong to both UnclosedPizza and Parmense categories?",
                    "Which classes are specified as mutually exclusive with Parmense?"
                ],
                "Valid CQ": [
                    "Is UnclosedPizza categorized as a kind of NamedPizza?",
                    "Which specific types of NamedPizza include UnclosedPizza?",
                    "What general classifications encompass UnclosedPizza within the ontology?",
                    "What is the ontological separation between UnclosedPizza and Mushroom?",
                    "Is there an instance that can belong to both UnclosedPizza and Mushroom categories?",
                    "Which classes are declared as mutually exclusive with Mushroom in the ontology?",
                    "Are UnclosedPizza and LaReine considered mutually exclusive pizza types within the ontology?",
                    "Could an individual pizza instance be simultaneously classified as UnclosedPizza and LaReine?",
                    "Which classes are specified as disjoint with LaReine in the ontology?",
                    "How does the ontology differentiate between UnclosedPizza and Napoletana?",
                    "Is there any instance that can be classified as both UnclosedPizza and Napoletana?",
                    "What other classes are stated as mutually exclusive with Napoletana?",
                    "How does the ontology differentiate between UnclosedPizza and Veneziana?",
                    "Is there any entity that can be classified simultaneously as UnclosedPizza and Veneziana?",
                    "Which pizza types are formally specified as disjoint with Veneziana within the ontology?",
                    "Does the ontology explicitly represent UnclosedPizza and AmericanHot as non-overlapping classes?",
                    "Is there any pizza that can be simultaneously classified as UnclosedPizza and AmericanHot?",
                    "Which categories are formally incompatible with AmericanHot according to the ontology?",
                    "What logical separation is established between UnclosedPizza and PrinceCarlo within the ontology?",
                    "Is an entity permitted to be classified as both UnclosedPizza and PrinceCarlo simultaneously?",
                    "Which classes are defined as mutually exclusive with UnclosedPizza?",
                    "What logical separation exists between UnclosedPizza and Capricciosa according to the ontology?",
                    "Is it permitted for a pizza to belong to both UnclosedPizza and Capricciosa categories?",
                    "Which classes are formally specified as disjoint with Capricciosa?",
                    "How does the ontology define the exclusivity between UnclosedPizza and FruttiDiMare?",
                    "Is there any instance that qualifies as both UnclosedPizza and FruttiDiMare within the ontology?",
                    "Which classes are declared disjoint with FruttiDiMare according to the ontology?",
                    "How does the ontology represent the separation between UnclosedPizza and Siciliana?",
                    "Is any pizza instance permitted to be classified as both UnclosedPizza and Siciliana?",
                    "Which classes are specified as disjoint with Siciliana within the ontology?",
                    "How does the ontology specify the distinction between UnclosedPizza and Cajun?",
                    "Is it feasible for a pizza to belong to both UnclosedPizza and Cajun categories simultaneously?",
                    "Which classes are defined as mutually exclusive with Cajun in the ontology?",
                    "How does the ontology distinguish between UnclosedPizza and Margherita?",
                    "Is there any instance that can belong to both UnclosedPizza and Margherita classes?",
                    "Which classes are declared as mutually exclusive with Margherita in the ontology?",
                    "How does the ontology specify the connection between UnclosedPizza and American?",
                    "Are there any instances that can be classified as both UnclosedPizza and American?",
                    "Which classes are explicitly marked as disjoint with American in the ontology?",
                    "What logical separation is established between UnclosedPizza and SloppyGiuseppe within the ontology?",
                    "Could a pizza instance be simultaneously classified as UnclosedPizza and SloppyGiuseppe?",
                    "Which defined categories are asserted as disjoint with SloppyGiuseppe?",
                    "How does the ontology represent the separation between UnclosedPizza and Caprina?",
                    "Is any individual allowed to belong to both UnclosedPizza and Caprina categories?",
                    "Which classes are specified as being disjoint with Caprina?",
                    "What ontological separation is specified between UnclosedPizza and Soho?",
                    "Does the ontology permit any instance to be classified as both UnclosedPizza and Soho?",
                    "Which classes are explicitly incompatible with Soho in the ontology?",
                    "What ontological separation is specified between UnclosedPizza and PolloAdAstra?",
                    "Is there any instance that can belong to both UnclosedPizza and PolloAdAstra categories?",
                    "Which classes are defined as disjoint with PolloAdAstra in the ontology?",
                    "How does the ontology differentiate between UnclosedPizza and Fiorentina?",
                    "Is it allowed for a pizza to be both UnclosedPizza and Fiorentina simultaneously according to the ontology?",
                    "Which classes are specified as disjoint with Fiorentina?",
                    "How is the class relationship between UnclosedPizza and Rosa defined in the ontology?",
                    "Is there any instance that can be classified as both UnclosedPizza and Rosa?",
                    "Which classes are stated as mutually exclusive with UnclosedPizza?",
                    "What is the formal distinction stated between UnclosedPizza and QuattroFormaggi in the ontology?",
                    "Is there any individual that can belong to both UnclosedPizza and QuattroFormaggi classes?",
                    "Which pizza categories are specified as mutually exclusive with QuattroFormaggi?",
                    "What ontological constraint separates UnclosedPizza from Giardiniera?",
                    "Is there any scenario in which a pizza can be classified as both UnclosedPizza and Giardiniera?",
                    "Which classes does the ontology specify as explicitly incompatible with Giardiniera?",
                    "What ontological separation is specified between UnclosedPizza and FourSeasons?",
                    "Is there any scenario in which a pizza could belong to both UnclosedPizza and FourSeasons classes?",
                    "Which classes are formally stated to be disjoint with FourSeasons?",
                    "Is it required for an UnclosedPizza to have at least one MozzarellaTopping as a topping?",
                    "Can an UnclosedPizza exist without having MozzarellaTopping among its toppings?",
                    "Does the presence of any MozzarellaTopping qualify a pizza as an UnclosedPizza?"
                ],
                "type": "Type1"
            },
            "AnchoviesTopping": {
                "axiom": {
                    "subClassOf": [
                        "FishTopping"
                    ],
                    "disjointWith": [
                        "PrawnsTopping"
                    ]
                },
                "description": "AnchoviesTopping is modeled as a subclass of FishTopping, signifying that it is a specific type of fish-based topping. It is explicitly disjoint with both MixedSeafoodTopping and PrawnsTopping, meaning an individual instance cannot simultaneously be categorized as AnchoviesTopping and either of those other toppings. This ensures a clear and mutually exclusive classification among these seafood-themed pizza toppings.",
                "CQ": [
                    {
                        "axiom": "AnchoviesTopping subClassOf FishTopping",
                        "CQ": [
                            "Is AnchoviesTopping classified under the category of FishTopping?",
                            "Which toppings are subclasses of FishTopping, such as AnchoviesTopping?",
                            "What categories act as superclasses for AnchoviesTopping?"
                        ]
                    },
                    {
                        "axiom": "AnchoviesTopping disjointWith MixedSeafoodTopping",
                        "CQ": [
                            "How does the ontology specify the distinction between AnchoviesTopping and MixedSeafoodTopping?",
                            "Is it permitted for a topping to be classified as both Anchovies and MixedSeafood within the ontology?",
                            "What other topping types are declared as mutually exclusive with AnchoviesTopping?"
                        ]
                    },
                    {
                        "axiom": "AnchoviesTopping disjointWith PrawnsTopping",
                        "CQ": [
                            "How does the ontology specify the incompatibility between AnchoviesTopping and PrawnsTopping?",
                            "Is any pizza topping allowed to be classified as both AnchoviesTopping and PrawnsTopping simultaneously?",
                            "Which toppings are asserted to be disjoint with AnchoviesTopping in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "AnchoviesTopping disjointWith MixedSeafoodTopping",
                "Target CQ": [
                    "How does the ontology specify the distinction between AnchoviesTopping and MixedSeafoodTopping?",
                    "Is it permitted for a topping to be classified as both Anchovies and MixedSeafood within the ontology?",
                    "What other topping types are declared as mutually exclusive with AnchoviesTopping?"
                ],
                "Valid CQ": [
                    "Is AnchoviesTopping classified under the category of FishTopping?",
                    "Which toppings are subclasses of FishTopping, such as AnchoviesTopping?",
                    "What categories act as superclasses for AnchoviesTopping?",
                    "How does the ontology specify the incompatibility between AnchoviesTopping and PrawnsTopping?",
                    "Is any pizza topping allowed to be classified as both AnchoviesTopping and PrawnsTopping simultaneously?",
                    "Which toppings are asserted to be disjoint with AnchoviesTopping in the ontology?"
                ],
                "type": "Type1"
            },
            "PrawnsTopping": {
                "axiom": {
                    "subClassOf": [
                        "FishTopping"
                    ],
                    "disjointWith": [
                        "MixedSeafoodTopping"
                    ]
                },
                "description": "PrawnsTopping is defined as a subclass of FishTopping, indicating it is a specific kind of fish-based topping. It is explicitly disjoint with both MixedSeafoodTopping and AnchoviesTopping, which means no individual topping can simultaneously be classified as PrawnsTopping and either of the other two classes. This formalization ensures that members of PrawnsTopping are uniquely identifiable as prawn-based toppings, distinct from other seafood or anchovy-based toppings.",
                "CQ": [
                    {
                        "axiom": "PrawnsTopping subClassOf FishTopping",
                        "CQ": [
                            "Is PrawnsTopping classified as a kind of FishTopping?",
                            "Which toppings are specialized forms under FishTopping, such as PrawnsTopping?",
                            "To what higher-level groups does PrawnsTopping pertain within the toppings domain?"
                        ]
                    },
                    {
                        "axiom": "PrawnsTopping disjointWith MixedSeafoodTopping",
                        "CQ": [
                            "How does the ontology differentiate between PrawnsTopping and MixedSeafoodTopping?",
                            "Is there any instance that can qualify as both PrawnsTopping and MixedSeafoodTopping?",
                            "Which topping categories are specified as disjoint with PrawnsTopping?"
                        ]
                    },
                    {
                        "axiom": "PrawnsTopping disjointWith AnchoviesTopping",
                        "CQ": [
                            "What is the ontological separation between PrawnsTopping and AnchoviesTopping?",
                            "Is there any instance that can simultaneously be classified as both PrawnsTopping and AnchoviesTopping?",
                            "Which toppings are stated to be mutually exclusive with AnchoviesTopping?"
                        ]
                    }
                ],
                "removed axiom": "PrawnsTopping disjointWith AnchoviesTopping",
                "Target CQ": [
                    "What is the ontological separation between PrawnsTopping and AnchoviesTopping?",
                    "Is there any instance that can simultaneously be classified as both PrawnsTopping and AnchoviesTopping?",
                    "Which toppings are stated to be mutually exclusive with AnchoviesTopping?"
                ],
                "Valid CQ": [
                    "Is PrawnsTopping classified as a kind of FishTopping?",
                    "Which toppings are specialized forms under FishTopping, such as PrawnsTopping?",
                    "To what higher-level groups does PrawnsTopping pertain within the toppings domain?",
                    "How does the ontology differentiate between PrawnsTopping and MixedSeafoodTopping?",
                    "Is there any instance that can qualify as both PrawnsTopping and MixedSeafoodTopping?",
                    "Which topping categories are specified as disjoint with PrawnsTopping?"
                ],
                "type": "Type1"
            },
            "CheeseyVegetableTopping": {
                "axiom": {
                    "subClassOf": [
                        "CheeseTopping"
                    ]
                },
                "description": "CheeseyVegetableTopping is defined as a subclass of both VegetableTopping and CheeseTopping. However, since these two parent classes are disjoint, CheeseyVegetableTopping is necessarily inconsistent—no individual can simultaneously belong to both parent classes. As a result, this class cannot have any members. This scenario is often used in ontology modeling tutorials (such as called ProbeInconsistentTopping in the ProtegeOWL Tutorial) to demonstrate the effects of disjointness and inconsistency in class hierarchies.",
                "CQ": [
                    {
                        "axiom": "CheeseyVegetableTopping subClassOf VegetableTopping",
                        "CQ": [
                            "Is CheeseyVegetableTopping classified as a kind of VegetableTopping?",
                            "Which toppings fall under the category of VegetableTopping, such as CheeseyVegetableTopping?",
                            "What more general topping types encompass CheeseyVegetableTopping?"
                        ]
                    },
                    {
                        "axiom": "CheeseyVegetableTopping subClassOf CheeseTopping",
                        "CQ": [
                            "Is CheeseyVegetableTopping categorized as a type of CheeseTopping?",
                            "What specific types fall under the class CheeseTopping, with regard to CheeseyVegetableTopping?",
                            "Which broader classes encompass CheeseyVegetableTopping within their classification?"
                        ]
                    }
                ],
                "removed axiom": "CheeseyVegetableTopping subClassOf VegetableTopping",
                "Target CQ": [
                    "Is CheeseyVegetableTopping classified as a kind of VegetableTopping?",
                    "Which toppings fall under the category of VegetableTopping, such as CheeseyVegetableTopping?",
                    "What more general topping types encompass CheeseyVegetableTopping?"
                ],
                "Valid CQ": [
                    "Is CheeseyVegetableTopping categorized as a type of CheeseTopping?",
                    "What specific types fall under the class CheeseTopping, with regard to CheeseyVegetableTopping?",
                    "Which broader classes encompass CheeseyVegetableTopping within their classification?"
                ],
                "type": "Type1"
            },
            "OliveTopping": {
                "axiom": {
                    "subClassOf": [
                        "VegetableTopping"
                    ],
                    "disjointWith": [
                        "RocketTopping",
                        "LeekTopping",
                        "OnionTopping",
                        "SpinachTopping",
                        "GarlicTopping",
                        "ArtichokeTopping",
                        "PepperTopping",
                        "AsparagusTopping",
                        "MushroomTopping",
                        "PetitPoisTopping",
                        "TomatoTopping"
                    ],
                    "propertyRestrictions": [
                        "[hasSpiciness some Mild]"
                    ]
                },
                "description": "OliveTopping is defined as a subclass of VegetableTopping and is disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—meaning an individual cannot belong to both OliveTopping and any of these classes. Members of the OliveTopping class are further characterized by the property that they have at least some level of spiciness classified as mild.",
                "CQ": [
                    {
                        "axiom": "OliveTopping subClassOf VegetableTopping",
                        "CQ": [
                            "Does OliveTopping fall under the category of VegetableTopping?",
                            "What are all subclasses classified as VegetableTopping, including OliveTopping?",
                            "Which broader classes does OliveTopping inherit from?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith RocketTopping",
                        "CQ": [
                            "What formal distinction separates OliveTopping from RocketTopping within the ontology?",
                            "Is there a scenario where a topping could simultaneously be classified as OliveTopping and RocketTopping?",
                            "Which topping categories, aside from RocketTopping, are specified as mutually exclusive with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith LeekTopping",
                        "CQ": [
                            "How does the ontology define the connection between OliveTopping and LeekTopping?",
                            "Is there any instance that can simultaneously belong to both OliveTopping and LeekTopping classes?",
                            "Which topping classes are stated as mutually exclusive with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith OnionTopping",
                        "CQ": [
                            "How does the ontology distinguish between OliveTopping and OnionTopping?",
                            "Is it permitted for a topping to be both OliveTopping and OnionTopping simultaneously?",
                            "Which topping categories are asserted as mutually exclusive with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith SpinachTopping",
                        "CQ": [
                            "Are OliveTopping and SpinachTopping considered mutually exclusive in the ontology?",
                            "Is there any topping that can simultaneously be categorized as both OliveTopping and SpinachTopping?",
                            "Which topping classes are explicitly stated as disjoint with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith GarlicTopping",
                        "CQ": [
                            "What is the nature of the disjointness asserted between OliveTopping and GarlicTopping?",
                            "Is it allowed for a pizza topping to be classified as both OliveTopping and GarlicTopping?",
                            "Which topping classes are formally specified as disjoint with GarlicTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith ArtichokeTopping",
                        "CQ": [
                            "What logical separation is declared between OliveTopping and ArtichokeTopping in the ontology?",
                            "Is it allowed for a topping entity to be classified as both OliveTopping and ArtichokeTopping simultaneously?",
                            "Which topping categories are formally specified as disjoint with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith PepperTopping",
                        "CQ": [
                            "How does the ontology define the distinction between OliveTopping and PepperTopping?",
                            "Is any pizza topping instance permitted to belong to both OliveTopping and PepperTopping categories?",
                            "Which topping classes are identified in the ontology as being incompatible with PepperTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith AsparagusTopping",
                        "CQ": [
                            "What is the logical separation between OliveTopping and AsparagusTopping in the ontology?",
                            "Can a pizza contain both OliveTopping and AsparagusTopping as toppings at once?",
                            "Which other topping classes are defined as mutually exclusive with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith CaperTopping",
                        "CQ": [
                            "What is the ontological separation between OliveTopping and CaperTopping?",
                            "Is there any instance that can be assigned to both OliveTopping and CaperTopping?",
                            "Which topping classes are specified as mutually exclusive with CaperTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith MushroomTopping",
                        "CQ": [
                            "What is the nature of the disjointness between OliveTopping and MushroomTopping?",
                            "Can a pizza topping belong to both OliveTopping and MushroomTopping categories simultaneously?",
                            "Which toppings are declared as mutually exclusive with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith PetitPoisTopping",
                        "CQ": [
                            "What logical separation is defined between OliveTopping and PetitPoisTopping in the ontology?",
                            "Is there any topping that can be an instance of both OliveTopping and PetitPoisTopping?",
                            "Which toppings, aside from PetitPoisTopping, are specified to be disjoint with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping disjointWith TomatoTopping",
                        "CQ": [
                            "How does the ontology define the separation between OliveTopping and TomatoTopping?",
                            "Is any pizza topping allowed to be classified as both OliveTopping and TomatoTopping?",
                            "Which topping classes are specified as being disjoint with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "OliveTopping propertyRestrictions [hasSpiciness some Mild]",
                        "CQ": [
                            "Is every OliveTopping required to have a spiciness property with at least one value of Mild?",
                            "Can an OliveTopping exist without any mild spiciness associated with it?",
                            "Are all OliveTopping instances guaranteed to possess some degree of mild spiciness?"
                        ]
                    }
                ],
                "removed axiom": "OliveTopping disjointWith CaperTopping",
                "Target CQ": [
                    "What is the ontological separation between OliveTopping and CaperTopping?",
                    "Is there any instance that can be assigned to both OliveTopping and CaperTopping?",
                    "Which topping classes are specified as mutually exclusive with CaperTopping?"
                ],
                "Valid CQ": [
                    "Does OliveTopping fall under the category of VegetableTopping?",
                    "What are all subclasses classified as VegetableTopping, including OliveTopping?",
                    "Which broader classes does OliveTopping inherit from?",
                    "What formal distinction separates OliveTopping from RocketTopping within the ontology?",
                    "Is there a scenario where a topping could simultaneously be classified as OliveTopping and RocketTopping?",
                    "Which topping categories, aside from RocketTopping, are specified as mutually exclusive with OliveTopping?",
                    "How does the ontology define the connection between OliveTopping and LeekTopping?",
                    "Is there any instance that can simultaneously belong to both OliveTopping and LeekTopping classes?",
                    "Which topping classes are stated as mutually exclusive with OliveTopping?",
                    "How does the ontology distinguish between OliveTopping and OnionTopping?",
                    "Is it permitted for a topping to be both OliveTopping and OnionTopping simultaneously?",
                    "Which topping categories are asserted as mutually exclusive with OliveTopping?",
                    "Are OliveTopping and SpinachTopping considered mutually exclusive in the ontology?",
                    "Is there any topping that can simultaneously be categorized as both OliveTopping and SpinachTopping?",
                    "Which topping classes are explicitly stated as disjoint with OliveTopping?",
                    "What is the nature of the disjointness asserted between OliveTopping and GarlicTopping?",
                    "Is it allowed for a pizza topping to be classified as both OliveTopping and GarlicTopping?",
                    "Which topping classes are formally specified as disjoint with GarlicTopping?",
                    "What logical separation is declared between OliveTopping and ArtichokeTopping in the ontology?",
                    "Is it allowed for a topping entity to be classified as both OliveTopping and ArtichokeTopping simultaneously?",
                    "Which topping categories are formally specified as disjoint with OliveTopping?",
                    "How does the ontology define the distinction between OliveTopping and PepperTopping?",
                    "Is any pizza topping instance permitted to belong to both OliveTopping and PepperTopping categories?",
                    "Which topping classes are identified in the ontology as being incompatible with PepperTopping?",
                    "What is the logical separation between OliveTopping and AsparagusTopping in the ontology?",
                    "Can a pizza contain both OliveTopping and AsparagusTopping as toppings at once?",
                    "Which other topping classes are defined as mutually exclusive with OliveTopping?",
                    "What is the nature of the disjointness between OliveTopping and MushroomTopping?",
                    "Can a pizza topping belong to both OliveTopping and MushroomTopping categories simultaneously?",
                    "Which toppings are declared as mutually exclusive with OliveTopping?",
                    "What logical separation is defined between OliveTopping and PetitPoisTopping in the ontology?",
                    "Is there any topping that can be an instance of both OliveTopping and PetitPoisTopping?",
                    "Which toppings, aside from PetitPoisTopping, are specified to be disjoint with OliveTopping?",
                    "How does the ontology define the separation between OliveTopping and TomatoTopping?",
                    "Is any pizza topping allowed to be classified as both OliveTopping and TomatoTopping?",
                    "Which topping classes are specified as being disjoint with OliveTopping?",
                    "Is every OliveTopping required to have a spiciness property with at least one value of Mild?",
                    "Can an OliveTopping exist without any mild spiciness associated with it?",
                    "Are all OliveTopping instances guaranteed to possess some degree of mild spiciness?"
                ],
                "type": "Type1"
            },
            "PepperTopping": {
                "axiom": {
                    "subClassOf": [
                        "VegetableTopping"
                    ],
                    "disjointWith": [
                        "RocketTopping",
                        "LeekTopping",
                        "OnionTopping",
                        "SpinachTopping",
                        "GarlicTopping",
                        "ArtichokeTopping",
                        "AsparagusTopping",
                        "CaperTopping",
                        "MushroomTopping",
                        "PetitPoisTopping",
                        "TomatoTopping"
                    ]
                },
                "description": "PepperTopping is defined as a subclass of VegetableTopping, indicating it is a specific type of vegetable-based topping. It is explicitly disjoint with RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—meaning no individual can simultaneously be a PepperTopping and any of these other vegetable topping classes. This establishes PepperTopping as a distinct and non-overlapping category within vegetable toppings.",
                "CQ": [
                    {
                        "axiom": "PepperTopping subClassOf VegetableTopping",
                        "CQ": [
                            "Is PepperTopping classified under the broader category of VegetableTopping?",
                            "Which toppings are categorized as specific types within VegetableTopping, such as PepperTopping?",
                            "What general classes does PepperTopping fall under in the context of toppings?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith RocketTopping",
                        "CQ": [
                            "How are PepperTopping and RocketTopping represented with respect to each other in the ontology?",
                            "Is an ingredient allowed to be classified as both PepperTopping and RocketTopping?",
                            "What other topping categories, if any, are modeled as mutually exclusive with RocketTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith LeekTopping",
                        "CQ": [
                            "How does the ontology differentiate between PepperTopping and LeekTopping?",
                            "Is any topping instance allowed to be classified as both PepperTopping and LeekTopping?",
                            "Which toppings are specified as mutually exclusive with LeekTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith OnionTopping",
                        "CQ": [
                            "What logical separation is defined between PepperTopping and OnionTopping in the ontology?",
                            "Is there any topping that can simultaneously be classified as both PepperTopping and OnionTopping?",
                            "Which topping classes are specified as being mutually exclusive with PepperTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith SpinachTopping",
                        "CQ": [
                            "How does the ontology distinguish between PepperTopping and SpinachTopping?",
                            "Is there an instance that belongs to both PepperTopping and SpinachTopping categories?",
                            "Which toppings are declared disjoint with SpinachTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith GarlicTopping",
                        "CQ": [
                            "What logical separation exists between PepperTopping and GarlicTopping in the ontology?",
                            "Is there any instance that can be classified as both PepperTopping and GarlicTopping?",
                            "Which topping classes are specified as disjoint with GarlicTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith ArtichokeTopping",
                        "CQ": [
                            "What ontological separation is defined between PepperTopping and ArtichokeTopping?",
                            "Is there any instance that can qualify as both a PepperTopping and an ArtichokeTopping?",
                            "Which toppings are formally incompatible with PepperTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith AsparagusTopping",
                        "CQ": [
                            "What logical exclusivity exists between PepperTopping and AsparagusTopping within the ontology?",
                            "Is it allowed for a single pizza to have both PepperTopping and AsparagusTopping simultaneously?",
                            "Which topping classes are formally specified as mutually exclusive with PepperTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith OliveTopping",
                        "CQ": [
                            "What ontological criterion separates PepperTopping from OliveTopping?",
                            "Is there any topping entity classified under both PepperTopping and OliveTopping?",
                            "Which topping categories are defined as mutually exclusive with OliveTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith CaperTopping",
                        "CQ": [
                            "What is the ontological distinction between PepperTopping and CaperTopping?",
                            "Is any food item allowed to possess both the PepperTopping and CaperTopping classifications simultaneously?",
                            "Which topping categories are formally specified as mutually exclusive with CaperTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith MushroomTopping",
                        "CQ": [
                            "How does the ontology represent the incompatibility between PepperTopping and MushroomTopping?",
                            "Is any topping instance allowed to be classified as both PepperTopping and MushroomTopping?",
                            "Which topping types are defined as disjoint with PepperTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith PetitPoisTopping",
                        "CQ": [
                            "What logical constraint separates PepperTopping from PetitPoisTopping in the ontology?",
                            "Is any topping instance allowed to belong to both PepperTopping and PetitPoisTopping simultaneously?",
                            "Which topping classes are defined as disjoint with PepperTopping?"
                        ]
                    },
                    {
                        "axiom": "PepperTopping disjointWith TomatoTopping",
                        "CQ": [
                            "How does the ontology define the exclusivity between PepperTopping and TomatoTopping?",
                            "Is any topping instance allowed to be classified as both PepperTopping and TomatoTopping?",
                            "Which topping categories are formally specified as incompatible with PepperTopping?"
                        ]
                    }
                ],
                "removed axiom": "PepperTopping disjointWith OliveTopping",
                "Target CQ": [
                    "What ontological criterion separates PepperTopping from OliveTopping?",
                    "Is there any topping entity classified under both PepperTopping and OliveTopping?",
                    "Which topping categories are defined as mutually exclusive with OliveTopping?"
                ],
                "Valid CQ": [
                    "Is PepperTopping classified under the broader category of VegetableTopping?",
                    "Which toppings are categorized as specific types within VegetableTopping, such as PepperTopping?",
                    "What general classes does PepperTopping fall under in the context of toppings?",
                    "How are PepperTopping and RocketTopping represented with respect to each other in the ontology?",
                    "Is an ingredient allowed to be classified as both PepperTopping and RocketTopping?",
                    "What other topping categories, if any, are modeled as mutually exclusive with RocketTopping?",
                    "How does the ontology differentiate between PepperTopping and LeekTopping?",
                    "Is any topping instance allowed to be classified as both PepperTopping and LeekTopping?",
                    "Which toppings are specified as mutually exclusive with LeekTopping?",
                    "What logical separation is defined between PepperTopping and OnionTopping in the ontology?",
                    "Is there any topping that can simultaneously be classified as both PepperTopping and OnionTopping?",
                    "Which topping classes are specified as being mutually exclusive with PepperTopping?",
                    "How does the ontology distinguish between PepperTopping and SpinachTopping?",
                    "Is there an instance that belongs to both PepperTopping and SpinachTopping categories?",
                    "Which toppings are declared disjoint with SpinachTopping?",
                    "What logical separation exists between PepperTopping and GarlicTopping in the ontology?",
                    "Is there any instance that can be classified as both PepperTopping and GarlicTopping?",
                    "Which topping classes are specified as disjoint with GarlicTopping?",
                    "What ontological separation is defined between PepperTopping and ArtichokeTopping?",
                    "Is there any instance that can qualify as both a PepperTopping and an ArtichokeTopping?",
                    "Which toppings are formally incompatible with PepperTopping in the ontology?",
                    "What logical exclusivity exists between PepperTopping and AsparagusTopping within the ontology?",
                    "Is it allowed for a single pizza to have both PepperTopping and AsparagusTopping simultaneously?",
                    "Which topping classes are formally specified as mutually exclusive with PepperTopping?",
                    "What is the ontological distinction between PepperTopping and CaperTopping?",
                    "Is any food item allowed to possess both the PepperTopping and CaperTopping classifications simultaneously?",
                    "Which topping categories are formally specified as mutually exclusive with CaperTopping?",
                    "How does the ontology represent the incompatibility between PepperTopping and MushroomTopping?",
                    "Is any topping instance allowed to be classified as both PepperTopping and MushroomTopping?",
                    "Which topping types are defined as disjoint with PepperTopping?",
                    "What logical constraint separates PepperTopping from PetitPoisTopping in the ontology?",
                    "Is any topping instance allowed to belong to both PepperTopping and PetitPoisTopping simultaneously?",
                    "Which topping classes are defined as disjoint with PepperTopping?",
                    "How does the ontology define the exclusivity between PepperTopping and TomatoTopping?",
                    "Is any topping instance allowed to be classified as both PepperTopping and TomatoTopping?",
                    "Which topping categories are formally specified as incompatible with PepperTopping?"
                ],
                "type": "Type1"
            },
            "TomatoTopping": {
                "axiom": {
                    "subClassOf": [
                        "VegetableTopping"
                    ],
                    "disjointWith": [
                        "RocketTopping",
                        "LeekTopping",
                        "OnionTopping",
                        "SpinachTopping",
                        "GarlicTopping",
                        "ArtichokeTopping",
                        "PepperTopping",
                        "OliveTopping",
                        "CaperTopping",
                        "MushroomTopping",
                        "PetitPoisTopping"
                    ],
                    "propertyRestrictions": [
                        "[hasSpiciness some Mild]"
                    ]
                },
                "description": "TomatoTopping is a subclass of VegetableTopping, representing toppings derived from tomatoes. It is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, and PetitPoisTopping, ensuring that no individual can simultaneously be both a TomatoTopping and any of these other toppings. Additionally, TomatoTopping is defined to always have some level of mild spiciness, as specified by the restriction [hasSpiciness some Mild].",
                "CQ": [
                    {
                        "axiom": "TomatoTopping subClassOf VegetableTopping",
                        "CQ": [
                            "Does TomatoTopping fall under the classification of VegetableTopping?",
                            "Which specific toppings are categorized as VegetableTopping, including TomatoTopping?",
                            "What broader topping categories encompass TomatoTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith RocketTopping",
                        "CQ": [
                            "How does the ontology represent the incompatibility between TomatoTopping and RocketTopping?",
                            "Is there any instance that can be simultaneously classified as both TomatoTopping and RocketTopping?",
                            "Which topping categories are asserted as mutually exclusive with RocketTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith LeekTopping",
                        "CQ": [
                            "What is the ontological separation between TomatoTopping and LeekTopping?",
                            "Is it allowed for a topping instance to be classified as both TomatoTopping and LeekTopping?",
                            "Which topping categories are formally incompatible with LeekTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith OnionTopping",
                        "CQ": [
                            "How does the ontology distinguish between TomatoTopping and OnionTopping?",
                            "Is there any instance that can simultaneously belong to both TomatoTopping and OnionTopping categories?",
                            "Which topping classes are documented as incompatible with OnionTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith SpinachTopping",
                        "CQ": [
                            "What is the asserted separation between TomatoTopping and SpinachTopping within the ontology?",
                            "Is there any scenario where a single topping instance can be classified as both TomatoTopping and SpinachTopping?",
                            "Which topping classes have been defined as mutually exclusive with TomatoTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith GarlicTopping",
                        "CQ": [
                            "How does the ontology distinguish between TomatoTopping and GarlicTopping?",
                            "Is any topping allowed to be classified as both TomatoTopping and GarlicTopping?",
                            "Which topping classes are specified as incompatible with TomatoTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith ArtichokeTopping",
                        "CQ": [
                            "How does the ontology represent the incompatibility between TomatoTopping and ArtichokeTopping?",
                            "Is there any instance that can be classified as both TomatoTopping and ArtichokeTopping?",
                            "Which topping categories are specified as mutually exclusive with TomatoTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith PepperTopping",
                        "CQ": [
                            "How are TomatoTopping and PepperTopping conceptually separated within the ontology?",
                            "Is it allowed for a single topping instance to be both TomatoTopping and PepperTopping?",
                            "Which topping classes are specified as being disjoint with PepperTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith AsparagusTopping",
                        "CQ": [
                            "How are TomatoTopping and AsparagusTopping differentiated within the ontology?",
                            "Is it permissible for a pizza to include both TomatoTopping and AsparagusTopping simultaneously?",
                            "Which topping classes are specified as disjoint with AsparagusTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith OliveTopping",
                        "CQ": [
                            "What is the ontological separation between TomatoTopping and OliveTopping?",
                            "Can a single pizza topping simultaneously be categorized as TomatoTopping and OliveTopping?",
                            "Which toppings are explicitly specified as disjoint with OliveTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith CaperTopping",
                        "CQ": [
                            "How is the incompatibility between TomatoTopping and CaperTopping represented in the ontology?",
                            "Is there an entity that can simultaneously be classified as both TomatoTopping and CaperTopping?",
                            "Which classes are asserted as disjoint with CaperTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith MushroomTopping",
                        "CQ": [
                            "Are TomatoTopping and MushroomTopping mutually exclusive according to the ontology?",
                            "Is there any instance that can be classified simultaneously as TomatoTopping and MushroomTopping?",
                            "Which topping categories are explicitly stated to be disjoint with MushroomTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping disjointWith PetitPoisTopping",
                        "CQ": [
                            "What is the ontological separation between TomatoTopping and PetitPoisTopping?",
                            "Can a single pizza have both TomatoTopping and PetitPoisTopping assigned as toppings?",
                            "Which topping classes are explicitly incompatible with PetitPoisTopping?"
                        ]
                    },
                    {
                        "axiom": "TomatoTopping propertyRestrictions [hasSpiciness some Mild]",
                        "CQ": [
                            "Is it required that every TomatoTopping possesses at least one spiciness classified as Mild?",
                            "Can a TomatoTopping exist without having any mild spiciness attribute?",
                            "Does the definition of TomatoTopping permit it to have only non-mild spiciness levels?"
                        ]
                    }
                ],
                "removed axiom": "TomatoTopping disjointWith AsparagusTopping",
                "Target CQ": [
                    "How are TomatoTopping and AsparagusTopping differentiated within the ontology?",
                    "Is it permissible for a pizza to include both TomatoTopping and AsparagusTopping simultaneously?",
                    "Which topping classes are specified as disjoint with AsparagusTopping?"
                ],
                "Valid CQ": [
                    "Does TomatoTopping fall under the classification of VegetableTopping?",
                    "Which specific toppings are categorized as VegetableTopping, including TomatoTopping?",
                    "What broader topping categories encompass TomatoTopping?",
                    "How does the ontology represent the incompatibility between TomatoTopping and RocketTopping?",
                    "Is there any instance that can be simultaneously classified as both TomatoTopping and RocketTopping?",
                    "Which topping categories are asserted as mutually exclusive with RocketTopping?",
                    "What is the ontological separation between TomatoTopping and LeekTopping?",
                    "Is it allowed for a topping instance to be classified as both TomatoTopping and LeekTopping?",
                    "Which topping categories are formally incompatible with LeekTopping in the ontology?",
                    "How does the ontology distinguish between TomatoTopping and OnionTopping?",
                    "Is there any instance that can simultaneously belong to both TomatoTopping and OnionTopping categories?",
                    "Which topping classes are documented as incompatible with OnionTopping?",
                    "What is the asserted separation between TomatoTopping and SpinachTopping within the ontology?",
                    "Is there any scenario where a single topping instance can be classified as both TomatoTopping and SpinachTopping?",
                    "Which topping classes have been defined as mutually exclusive with TomatoTopping?",
                    "How does the ontology distinguish between TomatoTopping and GarlicTopping?",
                    "Is any topping allowed to be classified as both TomatoTopping and GarlicTopping?",
                    "Which topping classes are specified as incompatible with TomatoTopping?",
                    "How does the ontology represent the incompatibility between TomatoTopping and ArtichokeTopping?",
                    "Is there any instance that can be classified as both TomatoTopping and ArtichokeTopping?",
                    "Which topping categories are specified as mutually exclusive with TomatoTopping?",
                    "How are TomatoTopping and PepperTopping conceptually separated within the ontology?",
                    "Is it allowed for a single topping instance to be both TomatoTopping and PepperTopping?",
                    "Which topping classes are specified as being disjoint with PepperTopping?",
                    "What is the ontological separation between TomatoTopping and OliveTopping?",
                    "Can a single pizza topping simultaneously be categorized as TomatoTopping and OliveTopping?",
                    "Which toppings are explicitly specified as disjoint with OliveTopping in the ontology?",
                    "How is the incompatibility between TomatoTopping and CaperTopping represented in the ontology?",
                    "Is there an entity that can simultaneously be classified as both TomatoTopping and CaperTopping?",
                    "Which classes are asserted as disjoint with CaperTopping in the ontology?",
                    "Are TomatoTopping and MushroomTopping mutually exclusive according to the ontology?",
                    "Is there any instance that can be classified simultaneously as TomatoTopping and MushroomTopping?",
                    "Which topping categories are explicitly stated to be disjoint with MushroomTopping?",
                    "What is the ontological separation between TomatoTopping and PetitPoisTopping?",
                    "Can a single pizza have both TomatoTopping and PetitPoisTopping assigned as toppings?",
                    "Which topping classes are explicitly incompatible with PetitPoisTopping?",
                    "Is it required that every TomatoTopping possesses at least one spiciness classified as Mild?",
                    "Can a TomatoTopping exist without having any mild spiciness attribute?",
                    "Does the definition of TomatoTopping permit it to have only non-mild spiciness levels?"
                ],
                "type": "Type1"
            },
            "CheeseTopping": {
                "axiom": {
                    "subClassOf": [
                        "PizzaTopping"
                    ],
                    "disjointWith": [
                        "SauceTopping",
                        "VegetableTopping",
                        "FishTopping",
                        "HerbSpiceTopping",
                        "NutTopping",
                        "FruitTopping"
                    ]
                },
                "description": "CheeseTopping is defined as a subclass of PizzaTopping, representing toppings made from cheese products that are used on pizzas. It is explicitly disjoint from other topping types such as MeatTopping, SauceTopping, VegetableTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no individual topping instance can simultaneously belong to both CheeseTopping and any of these other topping categories. This classification enforces a clear distinction between cheese-based toppings and all other types of pizza toppings.",
                "CQ": [
                    {
                        "axiom": "CheeseTopping subClassOf PizzaTopping",
                        "CQ": [
                            "Does CheeseTopping belong to the category of PizzaTopping?",
                            "Which varieties of PizzaTopping encompass CheeseTopping as a subcategory?",
                            "What higher-level topping classifications include CheeseTopping?"
                        ]
                    },
                    {
                        "axiom": "CheeseTopping disjointWith MeatTopping",
                        "CQ": [
                            "How does the ontology represent the exclusivity between CheeseTopping and MeatTopping?",
                            "Is it allowed for a topping to be classified as both CheeseTopping and MeatTopping?",
                            "Which classes are defined as disjoint with MeatTopping in the knowledge model?"
                        ]
                    },
                    {
                        "axiom": "CheeseTopping disjointWith SauceTopping",
                        "CQ": [
                            "How does the ontology represent the incompatibility between CheeseTopping and SauceTopping?",
                            "Is there any topping that can simultaneously be classified as both CheeseTopping and SauceTopping?",
                            "Which topping categories are specified as being mutually exclusive with CheeseTopping?"
                        ]
                    },
                    {
                        "axiom": "CheeseTopping disjointWith VegetableTopping",
                        "CQ": [
                            "What logical separation is defined between CheeseTopping and VegetableTopping within the ontology?",
                            "Is it permissible for a topping to be classified as both CheeseTopping and VegetableTopping?",
                            "Which toppings are specified as disjoint with CheeseTopping?"
                        ]
                    },
                    {
                        "axiom": "CheeseTopping disjointWith FishTopping",
                        "CQ": [
                            "How are CheeseTopping and FishTopping defined in terms of their mutual exclusivity?",
                            "Is there any topping that can simultaneously be classified as both CheeseTopping and FishTopping?",
                            "Which classes of toppings are stated to be incompatible with CheeseTopping?"
                        ]
                    },
                    {
                        "axiom": "CheeseTopping disjointWith HerbSpiceTopping",
                        "CQ": [
                            "What logical separation is defined between CheeseTopping and HerbSpiceTopping within the ontology?",
                            "Can a topping instance belong to both CheeseTopping and HerbSpiceTopping categories?",
                            "Which topping classes are asserted as disjoint with HerbSpiceTopping?"
                        ]
                    },
                    {
                        "axiom": "CheeseTopping disjointWith NutTopping",
                        "CQ": [
                            "Are CheeseTopping and NutTopping classified as mutually exclusive categories in the ontology?",
                            "Is it possible for a topping to be considered both a CheeseTopping and a NutTopping simultaneously?",
                            "Which topping classes are defined as being incompatible with NutTopping?"
                        ]
                    },
                    {
                        "axiom": "CheeseTopping disjointWith FruitTopping",
                        "CQ": [
                            "How does the ontology express the incompatibility between CheeseTopping and FruitTopping?",
                            "Is there any topping instance that can simultaneously belong to both CheeseTopping and FruitTopping categories?",
                            "Which topping categories are stated as mutually exclusive with CheeseTopping?"
                        ]
                    }
                ],
                "removed axiom": "CheeseTopping disjointWith MeatTopping",
                "Target CQ": [
                    "How does the ontology represent the exclusivity between CheeseTopping and MeatTopping?",
                    "Is it allowed for a topping to be classified as both CheeseTopping and MeatTopping?",
                    "Which classes are defined as disjoint with MeatTopping in the knowledge model?"
                ],
                "Valid CQ": [
                    "Does CheeseTopping belong to the category of PizzaTopping?",
                    "Which varieties of PizzaTopping encompass CheeseTopping as a subcategory?",
                    "What higher-level topping classifications include CheeseTopping?",
                    "How does the ontology represent the incompatibility between CheeseTopping and SauceTopping?",
                    "Is there any topping that can simultaneously be classified as both CheeseTopping and SauceTopping?",
                    "Which topping categories are specified as being mutually exclusive with CheeseTopping?",
                    "What logical separation is defined between CheeseTopping and VegetableTopping within the ontology?",
                    "Is it permissible for a topping to be classified as both CheeseTopping and VegetableTopping?",
                    "Which toppings are specified as disjoint with CheeseTopping?",
                    "How are CheeseTopping and FishTopping defined in terms of their mutual exclusivity?",
                    "Is there any topping that can simultaneously be classified as both CheeseTopping and FishTopping?",
                    "Which classes of toppings are stated to be incompatible with CheeseTopping?",
                    "What logical separation is defined between CheeseTopping and HerbSpiceTopping within the ontology?",
                    "Can a topping instance belong to both CheeseTopping and HerbSpiceTopping categories?",
                    "Which topping classes are asserted as disjoint with HerbSpiceTopping?",
                    "Are CheeseTopping and NutTopping classified as mutually exclusive categories in the ontology?",
                    "Is it possible for a topping to be considered both a CheeseTopping and a NutTopping simultaneously?",
                    "Which topping classes are defined as being incompatible with NutTopping?",
                    "How does the ontology express the incompatibility between CheeseTopping and FruitTopping?",
                    "Is there any topping instance that can simultaneously belong to both CheeseTopping and FruitTopping categories?",
                    "Which topping categories are stated as mutually exclusive with CheeseTopping?"
                ],
                "type": "Type1"
            },
            "FruitTopping": {
                "axiom": {
                    "subClassOf": [
                        "PizzaTopping"
                    ],
                    "disjointWith": [
                        "MeatTopping",
                        "VegetableTopping",
                        "CheeseTopping",
                        "FishTopping",
                        "HerbSpiceTopping",
                        "NutTopping"
                    ]
                },
                "description": "FruitTopping is defined as a subclass of PizzaTopping, meaning it represents a specific type of topping used on pizzas. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, and NutTopping, ensuring that no topping can simultaneously belong to FruitTopping and any of these other topping categories. This formalization guarantees that FruitTopping exclusively includes toppings derived from fruit and distinguishes them from all other major topping types.",
                "CQ": [
                    {
                        "axiom": "FruitTopping subClassOf PizzaTopping",
                        "CQ": [
                            "Is FruitTopping recognized as a specialized form of PizzaTopping?",
                            "Which variants of PizzaTopping include FruitTopping as a subset?",
                            "What broader topping classifications does FruitTopping fall under?"
                        ]
                    },
                    {
                        "axiom": "FruitTopping disjointWith MeatTopping",
                        "CQ": [
                            "What ontological separation is established between FruitTopping and MeatTopping?",
                            "Is there any instance that can simultaneously belong to both FruitTopping and MeatTopping categories?",
                            "Which topping types are formally specified as disjoint with MeatTopping?"
                        ]
                    },
                    {
                        "axiom": "FruitTopping disjointWith SauceTopping",
                        "CQ": [
                            "What is the formal separation defined between FruitTopping and SauceTopping in the ontology?",
                            "Can a single topping instance belong to both FruitTopping and SauceTopping categories?",
                            "Which classes of toppings are specified as disjoint with SauceTopping?"
                        ]
                    },
                    {
                        "axiom": "FruitTopping disjointWith VegetableTopping",
                        "CQ": [
                            "How are FruitTopping and VegetableTopping represented in terms of mutual exclusivity within the ontology?",
                            "Is there any scenario in which a topping can be classified simultaneously as both a FruitTopping and a VegetableTopping?",
                            "Which classes are defined as disjoint with VegetableTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "FruitTopping disjointWith CheeseTopping",
                        "CQ": [
                            "How does the ontology define the separation between FruitTopping and CheeseTopping?",
                            "Is it allowed for a pizza topping to be classified as both FruitTopping and CheeseTopping?",
                            "Which topping categories are asserted as incompatible with FruitTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "FruitTopping disjointWith FishTopping",
                        "CQ": [
                            "What logical separation is defined between FruitTopping and FishTopping in the ontology?",
                            "Is any topping allowed to be classified as both a FruitTopping and a FishTopping?",
                            "Which classes are explicitly disjoint with FishTopping?"
                        ]
                    },
                    {
                        "axiom": "FruitTopping disjointWith HerbSpiceTopping",
                        "CQ": [
                            "What logical constraints separate FruitTopping from HerbSpiceTopping within the ontology?",
                            "Is it allowed for a topping to be classified as both a FruitTopping and a HerbSpiceTopping?",
                            "Which topping types are specified as mutually exclusive with HerbSpiceTopping?"
                        ]
                    },
                    {
                        "axiom": "FruitTopping disjointWith NutTopping",
                        "CQ": [
                            "What formal separation is defined between FruitTopping and NutTopping within the ontology?",
                            "Is there any topping that can be classified as both a FruitTopping and a NutTopping?",
                            "Which topping classes are explicitly marked as disjoint with NutTopping?"
                        ]
                    }
                ],
                "removed axiom": "FruitTopping disjointWith SauceTopping",
                "Target CQ": [
                    "What is the formal separation defined between FruitTopping and SauceTopping in the ontology?",
                    "Can a single topping instance belong to both FruitTopping and SauceTopping categories?",
                    "Which classes of toppings are specified as disjoint with SauceTopping?"
                ],
                "Valid CQ": [
                    "Is FruitTopping recognized as a specialized form of PizzaTopping?",
                    "Which variants of PizzaTopping include FruitTopping as a subset?",
                    "What broader topping classifications does FruitTopping fall under?",
                    "What ontological separation is established between FruitTopping and MeatTopping?",
                    "Is there any instance that can simultaneously belong to both FruitTopping and MeatTopping categories?",
                    "Which topping types are formally specified as disjoint with MeatTopping?",
                    "How are FruitTopping and VegetableTopping represented in terms of mutual exclusivity within the ontology?",
                    "Is there any scenario in which a topping can be classified simultaneously as both a FruitTopping and a VegetableTopping?",
                    "Which classes are defined as disjoint with VegetableTopping in the ontology?",
                    "How does the ontology define the separation between FruitTopping and CheeseTopping?",
                    "Is it allowed for a pizza topping to be classified as both FruitTopping and CheeseTopping?",
                    "Which topping categories are asserted as incompatible with FruitTopping in the ontology?",
                    "What logical separation is defined between FruitTopping and FishTopping in the ontology?",
                    "Is any topping allowed to be classified as both a FruitTopping and a FishTopping?",
                    "Which classes are explicitly disjoint with FishTopping?",
                    "What logical constraints separate FruitTopping from HerbSpiceTopping within the ontology?",
                    "Is it allowed for a topping to be classified as both a FruitTopping and a HerbSpiceTopping?",
                    "Which topping types are specified as mutually exclusive with HerbSpiceTopping?",
                    "What formal separation is defined between FruitTopping and NutTopping within the ontology?",
                    "Is there any topping that can be classified as both a FruitTopping and a NutTopping?",
                    "Which topping classes are explicitly marked as disjoint with NutTopping?"
                ],
                "type": "Type1"
            },
            "MeatTopping": {
                "axiom": {
                    "subClassOf": [
                        "PizzaTopping"
                    ],
                    "disjointWith": [
                        "SauceTopping",
                        "VegetableTopping",
                        "CheeseTopping",
                        "FishTopping",
                        "NutTopping",
                        "FruitTopping"
                    ]
                },
                "description": "MeatTopping is defined as a subclass of PizzaTopping, representing toppings derived specifically from meat products. It is disjoint with SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no single topping instance can simultaneously belong to both MeatTopping and any of these other topping categories. This formalization enforces a clear categorical separation between meat-based and other types of pizza toppings.",
                "CQ": [
                    {
                        "axiom": "MeatTopping subClassOf PizzaTopping",
                        "CQ": [
                            "Is every MeatTopping classified as a type of PizzaTopping?",
                            "Which subclasses does PizzaTopping have, such as MeatTopping?",
                            "What broader categories encompass MeatTopping?"
                        ]
                    },
                    {
                        "axiom": "MeatTopping disjointWith SauceTopping",
                        "CQ": [
                            "What logical separation is defined between MeatTopping and SauceTopping in the ontology?",
                            "Is it permitted for a topping to be classified as both MeatTopping and SauceTopping?",
                            "Which classes of toppings are specified as mutually exclusive with SauceTopping?"
                        ]
                    },
                    {
                        "axiom": "MeatTopping disjointWith VegetableTopping",
                        "CQ": [
                            "What is the explicit ontological separation between MeatTopping and VegetableTopping?",
                            "Is any topping instance allowed to be classified as both MeatTopping and VegetableTopping?",
                            "Which topping categories are specified as disjoint with MeatTopping?"
                        ]
                    },
                    {
                        "axiom": "MeatTopping disjointWith CheeseTopping",
                        "CQ": [
                            "How is the ontological separation between MeatTopping and CheeseTopping represented?",
                            "Can a single topping instance be classified as both MeatTopping and CheeseTopping?",
                            "Which classes are specified as mutually exclusive with MeatTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "MeatTopping disjointWith FishTopping",
                        "CQ": [
                            "Are any toppings classified as both MeatTopping and FishTopping according to the ontology?",
                            "Which topping categories are specified as disjoint with MeatTopping?",
                            "What ontological rule enforces separation between FishTopping and MeatTopping?"
                        ]
                    },
                    {
                        "axiom": "MeatTopping disjointWith HerbSpiceTopping",
                        "CQ": [
                            "What ontological separation is established between MeatTopping and HerbSpiceTopping?",
                            "Is any topping allowed to be classified simultaneously as a MeatTopping and an HerbSpiceTopping?",
                            "Which topping categories are defined as mutually exclusive with HerbSpiceTopping?"
                        ]
                    },
                    {
                        "axiom": "MeatTopping disjointWith NutTopping",
                        "CQ": [
                            "How is the exclusion between MeatTopping and NutTopping represented in the ontology?",
                            "Is it allowed for a pizza topping to be classified as both MeatTopping and NutTopping simultaneously?",
                            "Which topping classes are formally incompatible with MeatTopping according to the ontology?"
                        ]
                    },
                    {
                        "axiom": "MeatTopping disjointWith FruitTopping",
                        "CQ": [
                            "How is the separation between MeatTopping and FruitTopping represented in the ontology?",
                            "Can a single topping be classified as both a MeatTopping and a FruitTopping?",
                            "Which topping categories are defined as mutually exclusive with MeatTopping?"
                        ]
                    }
                ],
                "removed axiom": "MeatTopping disjointWith HerbSpiceTopping",
                "Target CQ": [
                    "What ontological separation is established between MeatTopping and HerbSpiceTopping?",
                    "Is any topping allowed to be classified simultaneously as a MeatTopping and an HerbSpiceTopping?",
                    "Which topping categories are defined as mutually exclusive with HerbSpiceTopping?"
                ],
                "Valid CQ": [
                    "Is every MeatTopping classified as a type of PizzaTopping?",
                    "Which subclasses does PizzaTopping have, such as MeatTopping?",
                    "What broader categories encompass MeatTopping?",
                    "What logical separation is defined between MeatTopping and SauceTopping in the ontology?",
                    "Is it permitted for a topping to be classified as both MeatTopping and SauceTopping?",
                    "Which classes of toppings are specified as mutually exclusive with SauceTopping?",
                    "What is the explicit ontological separation between MeatTopping and VegetableTopping?",
                    "Is any topping instance allowed to be classified as both MeatTopping and VegetableTopping?",
                    "Which topping categories are specified as disjoint with MeatTopping?",
                    "How is the ontological separation between MeatTopping and CheeseTopping represented?",
                    "Can a single topping instance be classified as both MeatTopping and CheeseTopping?",
                    "Which classes are specified as mutually exclusive with MeatTopping in the ontology?",
                    "Are any toppings classified as both MeatTopping and FishTopping according to the ontology?",
                    "Which topping categories are specified as disjoint with MeatTopping?",
                    "What ontological rule enforces separation between FishTopping and MeatTopping?",
                    "How is the exclusion between MeatTopping and NutTopping represented in the ontology?",
                    "Is it allowed for a pizza topping to be classified as both MeatTopping and NutTopping simultaneously?",
                    "Which topping classes are formally incompatible with MeatTopping according to the ontology?",
                    "How is the separation between MeatTopping and FruitTopping represented in the ontology?",
                    "Can a single topping be classified as both a MeatTopping and a FruitTopping?",
                    "Which topping categories are defined as mutually exclusive with MeatTopping?"
                ],
                "type": "Type1"
            },
            "VegetableTopping": {
                "axiom": {
                    "subClassOf": [
                        "PizzaTopping"
                    ],
                    "disjointWith": [
                        "MeatTopping",
                        "CheeseTopping",
                        "FishTopping",
                        "HerbSpiceTopping",
                        "NutTopping",
                        "FruitTopping"
                    ]
                },
                "description": "VegetableTopping is defined as a subclass of PizzaTopping, representing pizza toppings that are derived from vegetables. It is explicitly disjoint with MeatTopping, SauceTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no topping can simultaneously belong to VegetableTopping and any of these other topping categories. This formalization guarantees that VegetableTopping exclusively encompasses toppings of vegetable origin, and clearly separates it from other distinct topping types used on pizzas.",
                "CQ": [
                    {
                        "axiom": "VegetableTopping subClassOf PizzaTopping",
                        "CQ": [
                            "Does VegetableTopping fall under the broader classification of PizzaTopping?",
                            "Which topping types are classified as PizzaTopping, including VegetableTopping?",
                            "What are the more general categories that encompass VegetableTopping?"
                        ]
                    },
                    {
                        "axiom": "VegetableTopping disjointWith MeatTopping",
                        "CQ": [
                            "What principle separates VegetableTopping from MeatTopping in the ontology?",
                            "Is an ingredient allowed to be categorized as both VegetableTopping and MeatTopping?",
                            "Which topping classes, aside from VegetableTopping, are explicitly disjoint with MeatTopping?"
                        ]
                    },
                    {
                        "axiom": "VegetableTopping disjointWith SauceTopping",
                        "CQ": [
                            "How are VegetableTopping and SauceTopping differentiated within the ontology?",
                            "Is there any entity that can simultaneously be classified as both a VegetableTopping and a SauceTopping?",
                            "Which classes are defined as disjoint with SauceTopping?"
                        ]
                    },
                    {
                        "axiom": "VegetableTopping disjointWith CheeseTopping",
                        "CQ": [
                            "How does the ontology distinguish between VegetableTopping and CheeseTopping classes?",
                            "Is it allowed for a topping to be classified as both a VegetableTopping and a CheeseTopping?",
                            "Which topping categories are specified as disjoint from CheeseTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "VegetableTopping disjointWith FishTopping",
                        "CQ": [
                            "How are VegetableTopping and FishTopping differentiated within the ontology?",
                            "Is it permissible for a topping to be classified as both VegetableTopping and FishTopping?",
                            "Which topping categories are explicitly declared as disjoint with FishTopping?"
                        ]
                    },
                    {
                        "axiom": "VegetableTopping disjointWith HerbSpiceTopping",
                        "CQ": [
                            "What is the explicit separation between VegetableTopping and HerbSpiceTopping within the ontology?",
                            "Is there any topping that can simultaneously be classified as both a VegetableTopping and a HerbSpiceTopping?",
                            "Which topping categories are formally specified as disjoint with HerbSpiceTopping?"
                        ]
                    },
                    {
                        "axiom": "VegetableTopping disjointWith NutTopping",
                        "CQ": [
                            "How does the ontology distinguish between VegetableTopping and NutTopping?",
                            "Is there any instance that can simultaneously belong to both VegetableTopping and NutTopping categories?",
                            "What topping classes are defined as disjoint with NutTopping?"
                        ]
                    },
                    {
                        "axiom": "VegetableTopping disjointWith FruitTopping",
                        "CQ": [
                            "What is the logical relationship between VegetableTopping and FruitTopping within the ontology?",
                            "Is it permitted for a topping instance to belong to both VegetableTopping and FruitTopping categories?",
                            "Which topping classes are formally specified as being disjoint with FruitTopping?"
                        ]
                    }
                ],
                "removed axiom": "VegetableTopping disjointWith SauceTopping",
                "Target CQ": [
                    "How are VegetableTopping and SauceTopping differentiated within the ontology?",
                    "Is there any entity that can simultaneously be classified as both a VegetableTopping and a SauceTopping?",
                    "Which classes are defined as disjoint with SauceTopping?"
                ],
                "Valid CQ": [
                    "Does VegetableTopping fall under the broader classification of PizzaTopping?",
                    "Which topping types are classified as PizzaTopping, including VegetableTopping?",
                    "What are the more general categories that encompass VegetableTopping?",
                    "What principle separates VegetableTopping from MeatTopping in the ontology?",
                    "Is an ingredient allowed to be categorized as both VegetableTopping and MeatTopping?",
                    "Which topping classes, aside from VegetableTopping, are explicitly disjoint with MeatTopping?",
                    "How does the ontology distinguish between VegetableTopping and CheeseTopping classes?",
                    "Is it allowed for a topping to be classified as both a VegetableTopping and a CheeseTopping?",
                    "Which topping categories are specified as disjoint from CheeseTopping in the ontology?",
                    "How are VegetableTopping and FishTopping differentiated within the ontology?",
                    "Is it permissible for a topping to be classified as both VegetableTopping and FishTopping?",
                    "Which topping categories are explicitly declared as disjoint with FishTopping?",
                    "What is the explicit separation between VegetableTopping and HerbSpiceTopping within the ontology?",
                    "Is there any topping that can simultaneously be classified as both a VegetableTopping and a HerbSpiceTopping?",
                    "Which topping categories are formally specified as disjoint with HerbSpiceTopping?",
                    "How does the ontology distinguish between VegetableTopping and NutTopping?",
                    "Is there any instance that can simultaneously belong to both VegetableTopping and NutTopping categories?",
                    "What topping classes are defined as disjoint with NutTopping?",
                    "What is the logical relationship between VegetableTopping and FruitTopping within the ontology?",
                    "Is it permitted for a topping instance to belong to both VegetableTopping and FruitTopping categories?",
                    "Which topping classes are formally specified as being disjoint with FruitTopping?"
                ],
                "type": "Type1"
            },
            "ParmesanTopping": {
                "axiom": {
                    "subClassOf": [
                        "CheeseTopping"
                    ],
                    "disjointWith": [
                        "MozzarellaTopping",
                        "GorgonzolaTopping",
                        "FourCheesesTopping"
                    ],
                    "propertyRestrictions": [
                        "[hasSpiciness some Mild]"
                    ]
                },
                "description": "ParmesanTopping is defined as a subclass of CheeseTopping, representing cheese-based toppings specifically comprised of parmesan. It is explicitly disjoint from GoatsCheeseTopping, MozzarellaTopping, GorgonzolaTopping, and FourCheesesTopping, ensuring no individual can simultaneously belong to these classes. Members of this class are characterized by having some level of mild spiciness, as specified by the property restriction [hasSpiciness some Mild].",
                "CQ": [
                    {
                        "axiom": "ParmesanTopping subClassOf CheeseTopping",
                        "CQ": [
                            "Does ParmesanTopping fall under the classification of CheeseTopping?",
                            "Which toppings are classified as specializations of CheeseTopping, such as ParmesanTopping?",
                            "What are the broader topping categories that encompass ParmesanTopping?"
                        ]
                    },
                    {
                        "axiom": "ParmesanTopping disjointWith GoatsCheeseTopping",
                        "CQ": [
                            "What is the formal association defined between ParmesanTopping and GoatsCheeseTopping in the ontology?",
                            "Is it allowable for a pizza to have both ParmesanTopping and GoatsCheeseTopping simultaneously?",
                            "Which topping categories are specified as mutually exclusive with GoatsCheeseTopping?"
                        ]
                    },
                    {
                        "axiom": "ParmesanTopping disjointWith MozzarellaTopping",
                        "CQ": [
                            "How does the ontology distinguish between ParmesanTopping and MozzarellaTopping?",
                            "Is it allowable for a topping to be classified as both Parmesan and Mozzarella simultaneously?",
                            "Which topping categories are formally stated as mutually exclusive with MozzarellaTopping?"
                        ]
                    },
                    {
                        "axiom": "ParmesanTopping disjointWith GorgonzolaTopping",
                        "CQ": [
                            "What is the ontological distinction between ParmesanTopping and GorgonzolaTopping?",
                            "Is there any topping that can be classified as both ParmesanTopping and GorgonzolaTopping?",
                            "Which topping classes are defined as disjoint with GorgonzolaTopping?"
                        ]
                    },
                    {
                        "axiom": "ParmesanTopping disjointWith FourCheesesTopping",
                        "CQ": [
                            "What distinction is modeled between ParmesanTopping and FourCheesesTopping within the ontology?",
                            "Could an instance belong simultaneously to both ParmesanTopping and FourCheesesTopping classes?",
                            "Which other topping classes are asserted as incompatible with FourCheesesTopping?"
                        ]
                    },
                    {
                        "axiom": "ParmesanTopping propertyRestrictions [hasSpiciness some Mild]",
                        "CQ": [
                            "Is every ParmesanTopping required to have at least one level of spiciness classified as Mild?",
                            "Can a ParmesanTopping exist without being associated with any Mild spiciness?",
                            "Does ParmesanTopping necessarily include the hasSpiciness relation pointing to something Mild?"
                        ]
                    }
                ],
                "removed axiom": "ParmesanTopping disjointWith GoatsCheeseTopping",
                "Target CQ": [
                    "What is the formal association defined between ParmesanTopping and GoatsCheeseTopping in the ontology?",
                    "Is it allowable for a pizza to have both ParmesanTopping and GoatsCheeseTopping simultaneously?",
                    "Which topping categories are specified as mutually exclusive with GoatsCheeseTopping?"
                ],
                "Valid CQ": [
                    "Does ParmesanTopping fall under the classification of CheeseTopping?",
                    "Which toppings are classified as specializations of CheeseTopping, such as ParmesanTopping?",
                    "What are the broader topping categories that encompass ParmesanTopping?",
                    "How does the ontology distinguish between ParmesanTopping and MozzarellaTopping?",
                    "Is it allowable for a topping to be classified as both Parmesan and Mozzarella simultaneously?",
                    "Which topping categories are formally stated as mutually exclusive with MozzarellaTopping?",
                    "What is the ontological distinction between ParmesanTopping and GorgonzolaTopping?",
                    "Is there any topping that can be classified as both ParmesanTopping and GorgonzolaTopping?",
                    "Which topping classes are defined as disjoint with GorgonzolaTopping?",
                    "What distinction is modeled between ParmesanTopping and FourCheesesTopping within the ontology?",
                    "Could an instance belong simultaneously to both ParmesanTopping and FourCheesesTopping classes?",
                    "Which other topping classes are asserted as incompatible with FourCheesesTopping?",
                    "Is every ParmesanTopping required to have at least one level of spiciness classified as Mild?",
                    "Can a ParmesanTopping exist without being associated with any Mild spiciness?",
                    "Does ParmesanTopping necessarily include the hasSpiciness relation pointing to something Mild?"
                ],
                "type": "Type1"
            },
            "HamTopping": {
                "axiom": {
                    "subClassOf": [
                        "MeatTopping"
                    ],
                    "disjointWith": [
                        "HotSpicedBeefTopping",
                        "ChickenTopping"
                    ]
                },
                "description": "HamTopping is defined as a subclass of MeatTopping, indicating that it is a type of meat-based pizza topping. It is explicitly disjoint with PeperoniSausageTopping, HotSpicedBeefTopping, and ChickenTopping, meaning an individual topping cannot simultaneously be classified as ham and any of these other meat toppings. This formalization ensures that HamTopping remains distinct from other specific meat toppings within the ontology.",
                "CQ": [
                    {
                        "axiom": "HamTopping subClassOf MeatTopping",
                        "CQ": [
                            "Is HamTopping classified as a type of MeatTopping?",
                            "What categories encompass HamTopping as a subclass?",
                            "Which toppings are direct subclasses of MeatTopping, including HamTopping?"
                        ]
                    },
                    {
                        "axiom": "HamTopping disjointWith PeperoniSausageTopping",
                        "CQ": [
                            "What differentiates HamTopping from PeperoniSausageTopping in the ontology?",
                            "Is there any instance that belongs to both HamTopping and PeperoniSausageTopping simultaneously?",
                            "Which toppings are asserted as incompatible with HamTopping?"
                        ]
                    },
                    {
                        "axiom": "HamTopping disjointWith HotSpicedBeefTopping",
                        "CQ": [
                            "What formal separation is specified between HamTopping and HotSpicedBeefTopping in the ontology?",
                            "Is there any instance that can be classified simultaneously as HamTopping and HotSpicedBeefTopping?",
                            "Which other topping categories are asserted as disjoint with HamTopping?"
                        ]
                    },
                    {
                        "axiom": "HamTopping disjointWith ChickenTopping",
                        "CQ": [
                            "What logical constraint separates HamTopping from ChickenTopping within the ontology?",
                            "Is there any instance that can simultaneously belong to both HamTopping and ChickenTopping categories?",
                            "Which toppings are specified as disjoint with ChickenTopping?"
                        ]
                    }
                ],
                "removed axiom": "HamTopping disjointWith PeperoniSausageTopping",
                "Target CQ": [
                    "What differentiates HamTopping from PeperoniSausageTopping in the ontology?",
                    "Is there any instance that belongs to both HamTopping and PeperoniSausageTopping simultaneously?",
                    "Which toppings are asserted as incompatible with HamTopping?"
                ],
                "Valid CQ": [
                    "Is HamTopping classified as a type of MeatTopping?",
                    "What categories encompass HamTopping as a subclass?",
                    "Which toppings are direct subclasses of MeatTopping, including HamTopping?",
                    "What formal separation is specified between HamTopping and HotSpicedBeefTopping in the ontology?",
                    "Is there any instance that can be classified simultaneously as HamTopping and HotSpicedBeefTopping?",
                    "Which other topping categories are asserted as disjoint with HamTopping?",
                    "What logical constraint separates HamTopping from ChickenTopping within the ontology?",
                    "Is there any instance that can simultaneously belong to both HamTopping and ChickenTopping categories?",
                    "Which toppings are specified as disjoint with ChickenTopping?"
                ],
                "type": "Type1"
            },
            "DeepPanBase": {
                "axiom": {
                    "subClassOf": [
                        "PizzaBase"
                    ],
                    "disjointWith": []
                },
                "description": "DeepPanBase is defined as a subclass of PizzaBase, establishing it as a specific type of pizza base. It is explicitly disjoint with ThinAndCrispyBase, which means that no pizza base can simultaneously be classified as both a DeepPanBase and a ThinAndCrispyBase. This formalization ensures clear differentiation between thick, deep pan styles and thin, crispy bases within the ontology.",
                "CQ": [
                    {
                        "axiom": "DeepPanBase subClassOf PizzaBase",
                        "CQ": [
                            "Is DeepPanBase classified under the broader category of PizzaBase?",
                            "Which base types are classified as more specific forms of PizzaBase, including DeepPanBase?",
                            "What higher-level groupings does DeepPanBase fall under?"
                        ]
                    },
                    {
                        "axiom": "DeepPanBase disjointWith ThinAndCrispyBase",
                        "CQ": [
                            "How does the ontology distinguish between DeepPanBase and ThinAndCrispyBase?",
                            "Is it permissible for a pizza base to be classified as both DeepPanBase and ThinAndCrispyBase?",
                            "Which base types are specified as mutually exclusive with DeepPanBase in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "DeepPanBase disjointWith ThinAndCrispyBase",
                "Target CQ": [
                    "How does the ontology distinguish between DeepPanBase and ThinAndCrispyBase?",
                    "Is it permissible for a pizza base to be classified as both DeepPanBase and ThinAndCrispyBase?",
                    "Which base types are specified as mutually exclusive with DeepPanBase in the ontology?"
                ],
                "Valid CQ": [
                    "Is DeepPanBase classified under the broader category of PizzaBase?",
                    "Which base types are classified as more specific forms of PizzaBase, including DeepPanBase?",
                    "What higher-level groupings does DeepPanBase fall under?"
                ],
                "type": "Type1"
            },
            "GreenPepperTopping": {
                "axiom": {
                    "subClassOf": [
                        "PepperTopping"
                    ],
                    "disjointWith": [
                        "SweetPepperTopping",
                        "JalapenoPepperTopping"
                    ]
                },
                "description": "GreenPepperTopping is defined as a subclass of PepperTopping, indicating it inherits all characteristics of pepper-based pizza toppings. It is explicitly disjoint with SweetPepperTopping, JalapenoPepperTopping, and PeperonataTopping—ensuring that no instance can simultaneously belong to more than one of these classes. This formalization distinguishes green pepper toppings from other specific pepper varieties within the ontology.",
                "CQ": [
                    {
                        "axiom": "GreenPepperTopping subClassOf PepperTopping",
                        "CQ": [
                            "Is GreenPepperTopping classified as a kind of PepperTopping?",
                            "Which toppings are specialized forms of PepperTopping, such as GreenPepperTopping?",
                            "Under what broader classifications can GreenPepperTopping be grouped?"
                        ]
                    },
                    {
                        "axiom": "GreenPepperTopping disjointWith SweetPepperTopping",
                        "CQ": [
                            "What is the ontological separation specified between GreenPepperTopping and SweetPepperTopping?",
                            "Is there any instance that can be simultaneously classified as both GreenPepperTopping and SweetPepperTopping?",
                            "Which classes are defined as mutually exclusive with GreenPepperTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "GreenPepperTopping disjointWith JalapenoPepperTopping",
                        "CQ": [
                            "How does the ontology distinguish between GreenPepperTopping and JalapenoPepperTopping?",
                            "Is it allowed for a pizza topping to be classified as both GreenPepperTopping and JalapenoPepperTopping simultaneously?",
                            "Which toppings are formally specified as disjoint with JalapenoPepperTopping in the ontology?"
                        ]
                    },
                    {
                        "axiom": "GreenPepperTopping disjointWith PeperonataTopping",
                        "CQ": [
                            "How does the ontology specify the relationship between GreenPepperTopping and PeperonataTopping?",
                            "Is an instance allowed to be classified as both GreenPepperTopping and PeperonataTopping?",
                            "Which classes are formally stated as disjoint from PeperonataTopping?"
                        ]
                    }
                ],
                "removed axiom": "GreenPepperTopping disjointWith PeperonataTopping",
                "Target CQ": [
                    "How does the ontology specify the relationship between GreenPepperTopping and PeperonataTopping?",
                    "Is an instance allowed to be classified as both GreenPepperTopping and PeperonataTopping?",
                    "Which classes are formally stated as disjoint from PeperonataTopping?"
                ],
                "Valid CQ": [
                    "Is GreenPepperTopping classified as a kind of PepperTopping?",
                    "Which toppings are specialized forms of PepperTopping, such as GreenPepperTopping?",
                    "Under what broader classifications can GreenPepperTopping be grouped?",
                    "What is the ontological separation specified between GreenPepperTopping and SweetPepperTopping?",
                    "Is there any instance that can be simultaneously classified as both GreenPepperTopping and SweetPepperTopping?",
                    "Which classes are defined as mutually exclusive with GreenPepperTopping in the ontology?",
                    "How does the ontology distinguish between GreenPepperTopping and JalapenoPepperTopping?",
                    "Is it allowed for a pizza topping to be classified as both GreenPepperTopping and JalapenoPepperTopping simultaneously?",
                    "Which toppings are formally specified as disjoint with JalapenoPepperTopping in the ontology?"
                ],
                "type": "Type1"
            },
            "Hot": {
                "axiom": {
                    "subClassOf": [
                        "Spiciness"
                    ],
                    "disjointWith": [
                        "Medium"
                    ]
                },
                "description": "Hot is defined as a subclass of Spiciness, indicating it represents an elevated or intense level of spicy sensation. It is explicitly disjoint with the classes Mild and Medium, ensuring that no instance can be both Hot and either Mild or Medium at the same time. This formalization clarifies that Hot describes a distinct, non-overlapping intensity within the spectrum of spiciness.",
                "CQ": [
                    {
                        "axiom": "Hot subClassOf Spiciness",
                        "CQ": [
                            "Is Hot categorized under the broader class of Spiciness?",
                            "What types are more specific than Spiciness, such as Hot?",
                            "Which higher-level categories does Hot fall under?"
                        ]
                    },
                    {
                        "axiom": "Hot disjointWith Mild",
                        "CQ": [
                            "What type of logical separation is defined between Hot and Mild?",
                            "Is it allowed for an entity to be classified as both Hot and Mild simultaneously?",
                            "Which classes, apart from Mild, are explicitly stated as disjoint with Hot?"
                        ]
                    },
                    {
                        "axiom": "Hot disjointWith Medium",
                        "CQ": [
                            "What does the ontology indicate about the mutual exclusivity of Hot and Medium?",
                            "Is any entity classified as both Hot and Medium in the knowledge base?",
                            "Which classes are formally stated to be disjoint with Medium?"
                        ]
                    }
                ],
                "removed axiom": "Hot disjointWith Mild",
                "Target CQ": [
                    "What type of logical separation is defined between Hot and Mild?",
                    "Is it allowed for an entity to be classified as both Hot and Mild simultaneously?",
                    "Which classes, apart from Mild, are explicitly stated as disjoint with Hot?"
                ],
                "Valid CQ": [
                    "Is Hot categorized under the broader class of Spiciness?",
                    "What types are more specific than Spiciness, such as Hot?",
                    "Which higher-level categories does Hot fall under?",
                    "What does the ontology indicate about the mutual exclusivity of Hot and Medium?",
                    "Is any entity classified as both Hot and Medium in the knowledge base?",
                    "Which classes are formally stated to be disjoint with Medium?"
                ],
                "type": "Type1"
            },
            "Mild": {
                "axiom": {
                    "subClassOf": [
                        "Spiciness"
                    ],
                    "disjointWith": [
                        "Hot"
                    ]
                },
                "description": "Mild is a subclass of Spiciness, representing a specific level of spiciness distinct from other grades. It is explicitly disjoint with both Hot and Medium, ensuring that an instance classified as Mild cannot simultaneously be classified as Hot or Medium. This enforces a clear and exclusive categorization among the spiciness levels.",
                "CQ": [
                    {
                        "axiom": "Mild subClassOf Spiciness",
                        "CQ": [
                            "Does Mild fall under the classification of Spiciness?",
                            "Which categories within Spiciness encompass Mild as a more specific type?",
                            "What broader classifications include Mild according to the spiciness hierarchy?"
                        ]
                    },
                    {
                        "axiom": "Mild disjointWith Hot",
                        "CQ": [
                            "What is the formal separation defined between Mild and Hot in the ontology?",
                            "Can an entity be classified as both Mild and Hot?",
                            "Which classes are specified as disjoint with Hot?"
                        ]
                    },
                    {
                        "axiom": "Mild disjointWith Medium",
                        "CQ": [
                            "What logical separation is specified between Mild and Medium within the ontology?",
                            "Is it possible for an item to be classified as both Mild and Medium simultaneously?",
                            "Which classes are formally declared as disjoint with Medium?"
                        ]
                    }
                ],
                "removed axiom": "Mild disjointWith Medium",
                "Target CQ": [
                    "What logical separation is specified between Mild and Medium within the ontology?",
                    "Is it possible for an item to be classified as both Mild and Medium simultaneously?",
                    "Which classes are formally declared as disjoint with Medium?"
                ],
                "Valid CQ": [
                    "Does Mild fall under the classification of Spiciness?",
                    "Which categories within Spiciness encompass Mild as a more specific type?",
                    "What broader classifications include Mild according to the spiciness hierarchy?",
                    "What is the formal separation defined between Mild and Hot in the ontology?",
                    "Can an entity be classified as both Mild and Hot?",
                    "Which classes are specified as disjoint with Hot?"
                ],
                "type": "Type1"
            },
            "PizzaBase": {
                "axiom": {
                    "subClassOf": [
                        "Food"
                    ],
                    "disjointWith": [
                        "IceCream",
                        "PizzaTopping"
                    ]
                },
                "description": "PizzaBase is defined as a subclass of Food, indicating that every PizzaBase is a type of food. It is explicitly disjoint with IceCream, Pizza, and PizzaTopping, ensuring that an individual cannot simultaneously be a PizzaBase and any of these other classes. This formalization distinguishes PizzaBase as a unique foundational component in food ontology, separate from finished pizzas, their toppings, or dessert items like ice cream.",
                "CQ": [
                    {
                        "axiom": "PizzaBase subClassOf Food",
                        "CQ": [
                            "Is PizzaBase categorized under the broader class of Food?",
                            "What kinds of food include PizzaBase as a specific type?",
                            "Which higher-level categories encompass PizzaBase?"
                        ]
                    },
                    {
                        "axiom": "PizzaBase disjointWith IceCream",
                        "CQ": [
                            "How does the ontology characterize the connection or separation between PizzaBase and IceCream?",
                            "Is it permissible for an individual to be classified simultaneously as PizzaBase and IceCream?",
                            "Which classes are stated to be disjoint with PizzaBase within the ontology?"
                        ]
                    },
                    {
                        "axiom": "PizzaBase disjointWith Pizza",
                        "CQ": [
                            "How does the ontology specify the differentiation between PizzaBase and Pizza?",
                            "Is there any instance that can simultaneously be classified as both PizzaBase and Pizza?",
                            "Which classes are declared disjoint with PizzaBase according to the ontology?"
                        ]
                    },
                    {
                        "axiom": "PizzaBase disjointWith PizzaTopping",
                        "CQ": [
                            "What distinguishes PizzaBase from PizzaTopping in the ontology?",
                            "Is any entity permitted to be an instance of both PizzaBase and PizzaTopping?",
                            "Which classes are specified as disjoint with PizzaBase?"
                        ]
                    }
                ],
                "removed axiom": "PizzaBase disjointWith Pizza",
                "Target CQ": [
                    "How does the ontology specify the differentiation between PizzaBase and Pizza?",
                    "Is there any instance that can simultaneously be classified as both PizzaBase and Pizza?",
                    "Which classes are declared disjoint with PizzaBase according to the ontology?"
                ],
                "Valid CQ": [
                    "Is PizzaBase categorized under the broader class of Food?",
                    "What kinds of food include PizzaBase as a specific type?",
                    "Which higher-level categories encompass PizzaBase?",
                    "How does the ontology characterize the connection or separation between PizzaBase and IceCream?",
                    "Is it permissible for an individual to be classified simultaneously as PizzaBase and IceCream?",
                    "Which classes are stated to be disjoint with PizzaBase within the ontology?",
                    "What distinguishes PizzaBase from PizzaTopping in the ontology?",
                    "Is any entity permitted to be an instance of both PizzaBase and PizzaTopping?",
                    "Which classes are specified as disjoint with PizzaBase?"
                ],
                "type": "Type1"
            },
            "SundriedTomatoTopping": {
                "axiom": {
                    "subClassOf": [
                        "TomatoTopping"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[hasSpiciness some Mild]"
                    ]
                },
                "description": "SundriedTomatoTopping is a subclass of TomatoTopping, meaning it inherits all characteristics typical of tomato-based toppings. It is defined as disjoint with SlicedTomatoTopping, ensuring that an individual cannot be both a SundriedTomatoTopping and a SlicedTomatoTopping. Additionally, every instance of SundriedTomatoTopping must have at least some mild level of spiciness, as specified by the property restriction (hasSpiciness some Mild).",
                "CQ": [
                    {
                        "axiom": "SundriedTomatoTopping subClassOf TomatoTopping",
                        "CQ": [
                            "Is SundriedTomatoTopping classified as a specific type of TomatoTopping?",
                            "Which topping subclasses fall under TomatoTopping, such as SundriedTomatoTopping?",
                            "What general topping categories include SundriedTomatoTopping as a member?"
                        ]
                    },
                    {
                        "axiom": "SundriedTomatoTopping disjointWith SlicedTomatoTopping",
                        "CQ": [
                            "How does the ontology represent the incompatibility between SundriedTomatoTopping and SlicedTomatoTopping?",
                            "Is it allowed for a pizza to include both SundriedTomatoTopping and SlicedTomatoTopping according to the ontology?",
                            "Which topping classes are specified as disjoint with SlicedTomatoTopping?"
                        ]
                    },
                    {
                        "axiom": "SundriedTomatoTopping propertyRestrictions [hasSpiciness some Mild]",
                        "CQ": [
                            "Is it required that every SundriedTomatoTopping possesses the hasSpiciness property with at least one Mild instance?",
                            "Can SundriedTomatoTopping have spiciness levels other than Mild, or must it always include Mild spiciness?",
                            "Does the ontology entail that SundriedTomatoTopping must be associated with some form of Mild spiciness via the hasSpiciness relation?"
                        ]
                    }
                ],
                "removed axiom": "SundriedTomatoTopping disjointWith SlicedTomatoTopping",
                "Target CQ": [
                    "How does the ontology represent the incompatibility between SundriedTomatoTopping and SlicedTomatoTopping?",
                    "Is it allowed for a pizza to include both SundriedTomatoTopping and SlicedTomatoTopping according to the ontology?",
                    "Which topping classes are specified as disjoint with SlicedTomatoTopping?"
                ],
                "Valid CQ": [
                    "Is SundriedTomatoTopping classified as a specific type of TomatoTopping?",
                    "Which topping subclasses fall under TomatoTopping, such as SundriedTomatoTopping?",
                    "What general topping categories include SundriedTomatoTopping as a member?",
                    "Is it required that every SundriedTomatoTopping possesses the hasSpiciness property with at least one Mild instance?",
                    "Can SundriedTomatoTopping have spiciness levels other than Mild, or must it always include Mild spiciness?",
                    "Does the ontology entail that SundriedTomatoTopping must be associated with some form of Mild spiciness via the hasSpiciness relation?"
                ],
                "type": "Type1"
            },
            "TobascoPepperSauce": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[hasSpiciness some Hot]"
                    ]
                },
                "description": "TobascoPepperSauce is defined as a subclass of SauceTopping, indicating it is a specific type of sauce used as a topping. All members of this class are required to have the property hasSpiciness with at least some value classified as Hot, meaning every TobascoPepperSauce must exhibit a hot level of spiciness.",
                "CQ": [
                    {
                        "axiom": "TobascoPepperSauce subClassOf SauceTopping",
                        "CQ": [
                            "Is TobascoPepperSauce classified as a subcategory of SauceTopping?",
                            "Which toppings are more specific instances under SauceTopping, such as TobascoPepperSauce?",
                            "To which broader topping classes does TobascoPepperSauce belong?"
                        ]
                    },
                    {
                        "axiom": "TobascoPepperSauce propertyRestrictions [hasSpiciness some Hot]",
                        "CQ": [
                            "Is it necessary for TobascoPepperSauce to have spiciness characterized as Hot?",
                            "Does every instance of TobascoPepperSauce possess some degree of spiciness that is classified as Hot?",
                            "Can there be a TobascoPepperSauce without any Hot spiciness attribute?"
                        ]
                    }
                ],
                "removed axiom": "TobascoPepperSauce subClassOf SauceTopping",
                "Target CQ": [
                    "Is TobascoPepperSauce classified as a subcategory of SauceTopping?",
                    "Which toppings are more specific instances under SauceTopping, such as TobascoPepperSauce?",
                    "To which broader topping classes does TobascoPepperSauce belong?"
                ],
                "Valid CQ": [
                    "Is it necessary for TobascoPepperSauce to have spiciness characterized as Hot?",
                    "Does every instance of TobascoPepperSauce possess some degree of spiciness that is classified as Hot?",
                    "Can there be a TobascoPepperSauce without any Hot spiciness attribute?"
                ],
                "type": "Type1"
            },
            "RealItalianPizza": {
                "axiom": {
                    "equivalentClass": [],
                    "propertyRestrictions": [
                        "[hasBase only ThinAndCrispyBase]"
                    ]
                },
                "description": "RealItalianPizza is formally defined as any Pizza whose country of origin is Italy, ensuring strict geographical provenance. Additionally, all RealItalianPizzas are restricted to having only ThinAndCrispyBase as their base. This definition ensures that the class exclusively contains pizzas originating from Italy with thin and crispy bases, faithfully reflecting the intended concept that authentic Italian pizzas are characterized both by their origin and their base type.",
                "CQ": [
                    {
                        "axiom": "RealItalianPizza equivalentClass (Pizza and [hasCountryOfOrigin hasValue Italy])",
                        "CQ": [
                            "Is RealItalianPizza equivalent to the intersection of Pizza and those whose country of origin is Italy?",
                            "Does every RealItalianPizza necessarily have Italy as its country of origin?",
                            "Can RealItalianPizza be fully defined as a Pizza that is specifically from Italy?"
                        ]
                    },
                    {
                        "axiom": "RealItalianPizza propertyRestrictions [hasBase only ThinAndCrispyBase]",
                        "CQ": [
                            "Is RealItalianPizza required to have only ThinAndCrispyBase as its base?",
                            "Can a RealItalianPizza have any base type other than ThinAndCrispyBase?",
                            "Does the definition of RealItalianPizza exclude all bases except for ThinAndCrispyBase?"
                        ]
                    }
                ],
                "removed axiom": "RealItalianPizza equivalentClass (Pizza and [hasCountryOfOrigin hasValue Italy])",
                "Target CQ": [
                    "Is RealItalianPizza equivalent to the intersection of Pizza and those whose country of origin is Italy?",
                    "Does every RealItalianPizza necessarily have Italy as its country of origin?",
                    "Can RealItalianPizza be fully defined as a Pizza that is specifically from Italy?"
                ],
                "Valid CQ": [
                    "Is RealItalianPizza required to have only ThinAndCrispyBase as its base?",
                    "Can a RealItalianPizza have any base type other than ThinAndCrispyBase?",
                    "Does the definition of RealItalianPizza exclude all bases except for ThinAndCrispyBase?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "isToppingOf": {
                "axiom": {
                    "characteristics": [
                        "Functional"
                    ],
                    "domain": [
                        "PizzaTopping"
                    ],
                    "range": [
                        "Pizza"
                    ],
                    "subPropertyOf": [
                        "isIngredientOf"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"isToppingOf\" is a functional object property, meaning each instance of \"PizzaTopping\" can be a topping of at most one \"Pizza\". Its domain is restricted to \"PizzaTopping\" and its range to \"Pizza\". \"isToppingOf\" is a sub-property of \"isIngredientOf\" and has \"hasTopping\" as its inverse. According to the description, each topping instance should only be associated with a single pizza.",
                "CQ": [
                    {
                        "axiom": "isToppingOf characteristics Functional",
                        "CQ": [
                            "Is isToppingOf a functional property, meaning that each Topping can be isToppingOf at most one Pizza?",
                            "Can an individual Topping be related to multiple Pizzas via the isToppingOf property simultaneously?",
                            "Does the ontology restrict isToppingOf so that a Topping cannot be a topping of more than one Pizza?"
                        ]
                    },
                    {
                        "axiom": "isToppingOf domain PizzaTopping",
                        "CQ": [
                            "Can any entity other than a PizzaTopping serve as the subject for the property 'isToppingOf'?",
                            "Are all subjects of the property 'isToppingOf' instances of PizzaTopping?",
                            "What entities can be the domain of the property 'isToppingOf'?"
                        ]
                    },
                    {
                        "axiom": "isToppingOf range Pizza",
                        "CQ": [
                            "Is every object of the property 'isToppingOf' necessarily a Pizza?",
                            "Can 'isToppingOf' have a range that includes entities other than Pizza?",
                            "What types of entities can 'isToppingOf' link to as its range?"
                        ]
                    },
                    {
                        "axiom": "isToppingOf subPropertyOf isIngredientOf",
                        "CQ": [
                            "Is every use of isToppingOf also an instance of isIngredientOf?",
                            "What are all the superproperties of isToppingOf?",
                            "Which subproperties are encompassed by isIngredientOf?"
                        ]
                    },
                    {
                        "axiom": "isToppingOf inverseOf hasTopping",
                        "CQ": [
                            "How are the properties ‘isToppingOf’ and ‘hasTopping’ related in terms of inverses within the ontology?",
                            "If an individual A isToppingOf B, does this entail that B hasTopping A in the ontology?",
                            "What property is defined as the inverse of ‘isToppingOf’?"
                        ]
                    }
                ],
                "removed axiom": "isToppingOf inverseOf hasTopping",
                "Target CQ": [
                    "How are the properties ‘isToppingOf’ and ‘hasTopping’ related in terms of inverses within the ontology?",
                    "If an individual A isToppingOf B, does this entail that B hasTopping A in the ontology?",
                    "What property is defined as the inverse of ‘isToppingOf’?"
                ],
                "Valid CQ": [
                    "Is isToppingOf a functional property, meaning that each Topping can be isToppingOf at most one Pizza?",
                    "Can an individual Topping be related to multiple Pizzas via the isToppingOf property simultaneously?",
                    "Does the ontology restrict isToppingOf so that a Topping cannot be a topping of more than one Pizza?",
                    "Can any entity other than a PizzaTopping serve as the subject for the property 'isToppingOf'?",
                    "Are all subjects of the property 'isToppingOf' instances of PizzaTopping?",
                    "What entities can be the domain of the property 'isToppingOf'?",
                    "Is every object of the property 'isToppingOf' necessarily a Pizza?",
                    "Can 'isToppingOf' have a range that includes entities other than Pizza?",
                    "What types of entities can 'isToppingOf' link to as its range?",
                    "Is every use of isToppingOf also an instance of isIngredientOf?",
                    "What are all the superproperties of isToppingOf?",
                    "Which subproperties are encompassed by isIngredientOf?"
                ],
                "type": "Type1"
            },
            "hasBase": {
                "axiom": {
                    "characteristics": [
                        "Functional",
                        "InverseFunctional"
                    ],
                    "domain": [
                        "Pizza"
                    ],
                    "range": [
                        "PizzaBase"
                    ],
                    "subPropertyOf": [
                        "hasIngredient"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"hasBase\" is both functional and inverse functional, ensuring that each Pizza has exactly one PizzaBase and each PizzaBase is associated with exactly one Pizza. Its domain is Pizza, and its range is PizzaBase, indicating it links pizzas to their bases. \"hasBase\" is a sub-property of \"hasIngredient,\" specifying it as a specialized form of ingredient relationship. It has an inverse property \"isBaseOf,\" which links PizzaBase to Pizza.",
                "CQ": [
                    {
                        "axiom": "hasBase characteristics Functional",
                        "CQ": [
                            "Is hasBase a functional property so that any given individual can be related to at most one value via hasBase?",
                            "Does the functional nature of hasBase ensure that no individual has more than one associated hasBase value?",
                            "For the hasBase property, is it entailed that each subject may link to a single object only through this relation?"
                        ]
                    },
                    {
                        "axiom": "hasBase characteristics InverseFunctional",
                        "CQ": [
                            "Can each PizzaBase be linked to a maximum of one Pizza via the hasBase property?",
                            "Is the hasBase property inverse functional, ensuring that two different Pizzas cannot share the same PizzaBase?",
                            "Does the hasBase property prevent multiple Pizzas from being associated with the same PizzaBase?"
                        ]
                    },
                    {
                        "axiom": "hasBase domain Pizza",
                        "CQ": [
                            "Can entities other than Pizza serve as the subject of the 'hasBase' property?",
                            "Is it possible for 'hasBase' to be used with a subject that is not classified as a Pizza?",
                            "What classes are permitted as the domain for the 'hasBase' property?"
                        ]
                    },
                    {
                        "axiom": "hasBase range PizzaBase",
                        "CQ": [
                            "Are all objects that serve as the value for 'hasBase' required to be instances of PizzaBase?",
                            "Can the 'hasBase' property have a range that is not PizzaBase?",
                            "Which entity types are permitted to appear as the range of the 'hasBase' property?"
                        ]
                    },
                    {
                        "axiom": "hasBase subPropertyOf hasIngredient",
                        "CQ": [
                            "Is every usage of the hasBase property interpreted as an instance of hasIngredient?",
                            "Which properties are specified as subproperties under hasIngredient within the ontology?",
                            "Is hasIngredient defined as a superproperty to hasBase?"
                        ]
                    },
                    {
                        "axiom": "hasBase inverseOf isBaseOf",
                        "CQ": [
                            "How are the object properties ‘hasBase’ and ‘isBaseOf’ connected in terms of inverse relations within the ontology?",
                            "If entity A hasBase entity B, does the ontology entail that entity B isBaseOf entity A?",
                            "Which object property is defined as the inverse of ‘isBaseOf’ in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "hasBase inverseOf isBaseOf",
                "Target CQ": [
                    "How are the object properties ‘hasBase’ and ‘isBaseOf’ connected in terms of inverse relations within the ontology?",
                    "If entity A hasBase entity B, does the ontology entail that entity B isBaseOf entity A?",
                    "Which object property is defined as the inverse of ‘isBaseOf’ in the ontology?"
                ],
                "Valid CQ": [
                    "Is hasBase a functional property so that any given individual can be related to at most one value via hasBase?",
                    "Does the functional nature of hasBase ensure that no individual has more than one associated hasBase value?",
                    "For the hasBase property, is it entailed that each subject may link to a single object only through this relation?",
                    "Can each PizzaBase be linked to a maximum of one Pizza via the hasBase property?",
                    "Is the hasBase property inverse functional, ensuring that two different Pizzas cannot share the same PizzaBase?",
                    "Does the hasBase property prevent multiple Pizzas from being associated with the same PizzaBase?",
                    "Can entities other than Pizza serve as the subject of the 'hasBase' property?",
                    "Is it possible for 'hasBase' to be used with a subject that is not classified as a Pizza?",
                    "What classes are permitted as the domain for the 'hasBase' property?",
                    "Are all objects that serve as the value for 'hasBase' required to be instances of PizzaBase?",
                    "Can the 'hasBase' property have a range that is not PizzaBase?",
                    "Which entity types are permitted to appear as the range of the 'hasBase' property?",
                    "Is every usage of the hasBase property interpreted as an instance of hasIngredient?",
                    "Which properties are specified as subproperties under hasIngredient within the ontology?",
                    "Is hasIngredient defined as a superproperty to hasBase?"
                ],
                "type": "Type1"
            },
            "isBaseOf": {
                "axiom": {
                    "characteristics": [
                        "Functional",
                        "InverseFunctional"
                    ],
                    "domain": [
                        "PizzaBase"
                    ],
                    "range": [
                        "Pizza"
                    ],
                    "subPropertyOf": [
                        "isIngredientOf"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"isBaseOf\" is both functional and inverse functional, meaning each PizzaBase is the base of at most one Pizza, and each Pizza has at most one PizzaBase. Its domain is restricted to PizzaBase, and its range is Pizza. \"isBaseOf\" is a sub-property of \"isIngredientOf\" and has \"hasBase\" as its inverse property. This property is used to relate a PizzaBase to the Pizza for which it serves as the base.",
                "CQ": [
                    {
                        "axiom": "isBaseOf characteristics Functional",
                        "CQ": [
                            "Is isBaseOf defined as a functional property such that any given subject is associated with at most one object through isBaseOf?",
                            "Can an entity have more than one isBaseOf relationship, or does functionality constrain it to a single association per subject?",
                            "Does the functional characteristic of isBaseOf prohibit subjects from being linked to multiple objects via this property?"
                        ]
                    },
                    {
                        "axiom": "isBaseOf characteristics InverseFunctional",
                        "CQ": [
                            "Is isBaseOf an inverse functional property, meaning that each PizzaBase can be associated with at most one Pizza?",
                            "Can different Pizzas share the same PizzaBase via the isBaseOf property, or does inverse functionality prohibit this?",
                            "Does the isBaseOf property restrict any PizzaBase from being isBaseOf more than one Pizza?"
                        ]
                    },
                    {
                        "axiom": "isBaseOf domain PizzaBase",
                        "CQ": [
                            "Can entities other than PizzaBase appear as the subject of the property 'isBaseOf'?",
                            "Is it possible for a PizzaBase not to be involved in an 'isBaseOf' relationship?",
                            "What types of entities can serve as the domain of the property 'isBaseOf'?"
                        ]
                    },
                    {
                        "axiom": "isBaseOf range Pizza",
                        "CQ": [
                            "Can the property 'isBaseOf' relate to entities that are not Pizzas as its object?",
                            "What possible types can serve as the range for the property 'isBaseOf'?",
                            "Does the property 'isBaseOf' restrict its object exclusively to individuals of type Pizza?"
                        ]
                    },
                    {
                        "axiom": "isBaseOf subPropertyOf isIngredientOf",
                        "CQ": [
                            "Is isIngredientOf considered a superproperty of isBaseOf?",
                            "Which properties are listed as subproperties under isIngredientOf?",
                            "Does every relation expressed by isBaseOf necessarily entail a relation via isIngredientOf?"
                        ]
                    },
                    {
                        "axiom": "isBaseOf inverseOf hasBase",
                        "CQ": [
                            "Which property is formally specified as the inverse of ‘isBaseOf’ in the ontology?",
                            "If entity A isBaseOf entity B, does the ontology entail that B hasBase A?",
                            "How does the ontology define the logical connection between ‘isBaseOf’ and ‘hasBase’?"
                        ]
                    }
                ],
                "removed axiom": "isBaseOf inverseOf hasBase",
                "Target CQ": [
                    "Which property is formally specified as the inverse of ‘isBaseOf’ in the ontology?",
                    "If entity A isBaseOf entity B, does the ontology entail that B hasBase A?",
                    "How does the ontology define the logical connection between ‘isBaseOf’ and ‘hasBase’?"
                ],
                "Valid CQ": [
                    "Is isBaseOf defined as a functional property such that any given subject is associated with at most one object through isBaseOf?",
                    "Can an entity have more than one isBaseOf relationship, or does functionality constrain it to a single association per subject?",
                    "Does the functional characteristic of isBaseOf prohibit subjects from being linked to multiple objects via this property?",
                    "Is isBaseOf an inverse functional property, meaning that each PizzaBase can be associated with at most one Pizza?",
                    "Can different Pizzas share the same PizzaBase via the isBaseOf property, or does inverse functionality prohibit this?",
                    "Does the isBaseOf property restrict any PizzaBase from being isBaseOf more than one Pizza?",
                    "Can entities other than PizzaBase appear as the subject of the property 'isBaseOf'?",
                    "Is it possible for a PizzaBase not to be involved in an 'isBaseOf' relationship?",
                    "What types of entities can serve as the domain of the property 'isBaseOf'?",
                    "Can the property 'isBaseOf' relate to entities that are not Pizzas as its object?",
                    "What possible types can serve as the range for the property 'isBaseOf'?",
                    "Does the property 'isBaseOf' restrict its object exclusively to individuals of type Pizza?",
                    "Is isIngredientOf considered a superproperty of isBaseOf?",
                    "Which properties are listed as subproperties under isIngredientOf?",
                    "Does every relation expressed by isBaseOf necessarily entail a relation via isIngredientOf?"
                ],
                "type": "Type1"
            }
        }
    },
    "time": {
        "classes": {
            "time:January": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[time:month hasValue --01]",
                        "[time:unitType hasValue time:unitMonth]"
                    ]
                },
                "description": "time:January is defined as a subclass of time:DateTimeDescription, representing the temporal concept of January within a calendar system. Members of this class are restricted such that the time:month property must have the value \"01\" (indicating January), and the time:unitType property must have the value time:unitMonth, ensuring that it refers specifically to a month unit. This formalization guarantees that any instance of time:January corresponds uniquely to the month of January.",
                "CQ": [
                    {
                        "axiom": "time:January subClassOf time:DateTimeDescription",
                        "CQ": [
                            "Is time:January included as a specific instance within the broader class of time:DateTimeDescription?",
                            "Which subclasses fall under time:DateTimeDescription, and does this include time:January?",
                            "To which higher-level time classification does time:January belong?"
                        ]
                    },
                    {
                        "axiom": "time:January propertyRestrictions [time:month hasValue --01]",
                        "CQ": [
                            "Is the value of the month property for January always restricted to \"01\"?",
                            "Can January have any value for the month property other than \"01\"?",
                            "Does January necessarily have the month property with the value \"01\"?"
                        ]
                    },
                    {
                        "axiom": "time:January propertyRestrictions [time:unitType hasValue time:unitMonth]",
                        "CQ": [
                            "Is January necessarily associated with the unit type Month?",
                            "Can January have any unit type other than Month according to its property restrictions?",
                            "Does the specification of January restrict its unit type property exclusively to Month?"
                        ]
                    }
                ],
                "removed axiom": "time:January subClassOf time:DateTimeDescription",
                "Target CQ": [
                    "Is time:January included as a specific instance within the broader class of time:DateTimeDescription?",
                    "Which subclasses fall under time:DateTimeDescription, and does this include time:January?",
                    "To which higher-level time classification does time:January belong?"
                ],
                "Valid CQ": [
                    "Is the value of the month property for January always restricted to \"01\"?",
                    "Can January have any value for the month property other than \"01\"?",
                    "Does January necessarily have the month property with the value \"01\"?",
                    "Is January necessarily associated with the unit type Month?",
                    "Can January have any unit type other than Month according to its property restrictions?",
                    "Does the specification of January restrict its unit type property exclusively to Month?"
                ],
                "type": "Type1"
            },
            "time:DateTimeDescription": {
                "axiom": {
                    "propertyRestrictions": [
                        "[time:week max 1]",
                        "[time:dayOfWeek max 1]",
                        "[time:second max 1]",
                        "[time:minute max 1]",
                        "[time:day max 1]",
                        "[time:month max 1]",
                        "[time:timeZone max 1]",
                        "[time:hour max 1]",
                        "[time:unitType exactly 1]",
                        "[time:year max 1]"
                    ]
                },
                "description": "time:DateTimeDescription represents a structured temporal entity that encapsulates the components of a date and time. Each property—such as week, dayOfWeek, second, minute, day, month, timeZone, hour, year, and dayOfYear—can have at most one value. The property time:unitType is mandatory and must have exactly one value for each instance. This ensures that every instance of time:DateTimeDescription uniquely specifies its temporal components with precisely constrained values.",
                "CQ": [
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:week max 1]",
                        "CQ": [
                            "Is it possible for a DateTimeDescription to be associated with more than one week value?",
                            "Does a DateTimeDescription necessarily have at most one 'week' property specified?",
                            "Can a DateTimeDescription instance have zero or one, but not multiple, occurrences of the 'week' property?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:dayOfWeek max 1]",
                        "CQ": [
                            "Is a DateTimeDescription permitted to have at most one dayOfWeek property value?",
                            "Can a DateTimeDescription be associated with multiple dayOfWeek values through the dayOfWeek property?",
                            "Does the definition of DateTimeDescription restrict the number of dayOfWeek assignments to one or fewer for each instance?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:second max 1]",
                        "CQ": [
                            "Is there a restriction that a time:DateTimeDescription can have at most one value for the property time:second?",
                            "Does a time:DateTimeDescription ever include more than one time:second property?",
                            "Is it possible for a time:DateTimeDescription to refer to multiple seconds values simultaneously?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:minute max 1]",
                        "CQ": [
                            "Is there a restriction on time:DateTimeDescription such that it can have at most one value for the property time:minute?",
                            "Can a time:DateTimeDescription instance ever be associated with more than one minute value through the time:minute property?",
                            "Does the ontology require that each time:DateTimeDescription assigns no more than a single minute via time:minute?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:day max 1]",
                        "CQ": [
                            "Is it required that each time:DateTimeDescription instance has at most one value for the property time:day?",
                            "Can a time:DateTimeDescription have multiple values assigned to the time:day property, or is it limited to one?",
                            "Does the ontology constrain time:DateTimeDescription to have a single value for time:day in any given instance?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:month max 1]",
                        "CQ": [
                            "Is a DateTimeDescription permitted to have more than one value for the month property?",
                            "Must every DateTimeDescription be associated with at most one month?",
                            "Does the ontology restrict DateTimeDescription instances from having multiple month property values?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:timeZone max 1]",
                        "CQ": [
                            "Is it required that each DateTimeDescription is associated with at most one timeZone?",
                            "Can a DateTimeDescription have more than one timeZone specified through the timeZone property?",
                            "Does the ontology restrict the timeZone property of DateTimeDescription instances to a single value?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:hour max 1]",
                        "CQ": [
                            "Does a DateTimeDescription have at most one value for the property 'hour'?",
                            "Can a DateTimeDescription be associated with multiple 'hour' values simultaneously?",
                            "Is it possible for the 'hour' property in DateTimeDescription to refer to more than one value?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:unitType exactly 1]",
                        "CQ": [
                            "Is every DateTimeDescription required to have exactly one unitType associated?",
                            "Can a DateTimeDescription have more than one unitType property?",
                            "Is it valid for a DateTimeDescription to lack a unitType assignment?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:year max 1]",
                        "CQ": [
                            "Is the number of 'year' properties that a DateTimeDescription can have limited to at most one value?",
                            "Can a DateTimeDescription be associated with more than one 'year' property?",
                            "Does the ontology restrict DateTimeDescription individuals to a single 'year', with no duplicates allowed?"
                        ]
                    },
                    {
                        "axiom": "time:DateTimeDescription propertyRestrictions [time:dayOfYear max 1]",
                        "CQ": [
                            "Is an instance of time:DateTimeDescription allowed to have at most one value for the property time:dayOfYear?",
                            "Can time:DateTimeDescription be associated with multiple time:dayOfYear values, or is it limited to a single value?",
                            "Does the ontology restrict time:DateTimeDescription so that it cannot have more than one time:dayOfYear assigned?"
                        ]
                    }
                ],
                "removed axiom": "time:DateTimeDescription propertyRestrictions [time:dayOfYear max 1]",
                "Target CQ": [
                    "Is an instance of time:DateTimeDescription allowed to have at most one value for the property time:dayOfYear?",
                    "Can time:DateTimeDescription be associated with multiple time:dayOfYear values, or is it limited to a single value?",
                    "Does the ontology restrict time:DateTimeDescription so that it cannot have more than one time:dayOfYear assigned?"
                ],
                "Valid CQ": [
                    "Is it possible for a DateTimeDescription to be associated with more than one week value?",
                    "Does a DateTimeDescription necessarily have at most one 'week' property specified?",
                    "Can a DateTimeDescription instance have zero or one, but not multiple, occurrences of the 'week' property?",
                    "Is a DateTimeDescription permitted to have at most one dayOfWeek property value?",
                    "Can a DateTimeDescription be associated with multiple dayOfWeek values through the dayOfWeek property?",
                    "Does the definition of DateTimeDescription restrict the number of dayOfWeek assignments to one or fewer for each instance?",
                    "Is there a restriction that a time:DateTimeDescription can have at most one value for the property time:second?",
                    "Does a time:DateTimeDescription ever include more than one time:second property?",
                    "Is it possible for a time:DateTimeDescription to refer to multiple seconds values simultaneously?",
                    "Is there a restriction on time:DateTimeDescription such that it can have at most one value for the property time:minute?",
                    "Can a time:DateTimeDescription instance ever be associated with more than one minute value through the time:minute property?",
                    "Does the ontology require that each time:DateTimeDescription assigns no more than a single minute via time:minute?",
                    "Is it required that each time:DateTimeDescription instance has at most one value for the property time:day?",
                    "Can a time:DateTimeDescription have multiple values assigned to the time:day property, or is it limited to one?",
                    "Does the ontology constrain time:DateTimeDescription to have a single value for time:day in any given instance?",
                    "Is a DateTimeDescription permitted to have more than one value for the month property?",
                    "Must every DateTimeDescription be associated with at most one month?",
                    "Does the ontology restrict DateTimeDescription instances from having multiple month property values?",
                    "Is it required that each DateTimeDescription is associated with at most one timeZone?",
                    "Can a DateTimeDescription have more than one timeZone specified through the timeZone property?",
                    "Does the ontology restrict the timeZone property of DateTimeDescription instances to a single value?",
                    "Does a DateTimeDescription have at most one value for the property 'hour'?",
                    "Can a DateTimeDescription be associated with multiple 'hour' values simultaneously?",
                    "Is it possible for the 'hour' property in DateTimeDescription to refer to more than one value?",
                    "Is every DateTimeDescription required to have exactly one unitType associated?",
                    "Can a DateTimeDescription have more than one unitType property?",
                    "Is it valid for a DateTimeDescription to lack a unitType assignment?",
                    "Is the number of 'year' properties that a DateTimeDescription can have limited to at most one value?",
                    "Can a DateTimeDescription be associated with more than one 'year' property?",
                    "Does the ontology restrict DateTimeDescription individuals to a single 'year', with no duplicates allowed?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "time:weeks": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "time:DurationDescription"
                    ],
                    "range": [],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:weeks\" has no defined characteristics or super-properties. Its domain is restricted to instances of \"time:DurationDescription\", and its range is specified as a decimal value (xsd:decimal). This property is used to indicate the number of weeks associated with a given duration description. No inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "time:weeks domain time:DurationDescription",
                        "CQ": [
                            "Can the property 'time:weeks' be associated with entities other than 'time:DurationDescription' as its subject?",
                            "Is there any 'time:DurationDescription' that does not use the property 'time:weeks'?",
                            "What types of entities may serve as the domain for the property 'time:weeks'?"
                        ]
                    },
                    {
                        "axiom": "time:weeks range xsd:decimal",
                        "CQ": [
                            "Can the property 'time:weeks' take as its value anything other than an xsd:decimal?",
                            "Is every object associated with the property 'time:weeks' necessarily an xsd:decimal?",
                            "What types of values are permitted as the range for the property 'time:weeks'?"
                        ]
                    }
                ],
                "removed axiom": "time:weeks range xsd:decimal",
                "Target CQ": [
                    "Can the property 'time:weeks' take as its value anything other than an xsd:decimal?",
                    "Is every object associated with the property 'time:weeks' necessarily an xsd:decimal?",
                    "What types of values are permitted as the range for the property 'time:weeks'?"
                ],
                "Valid CQ": [
                    "Can the property 'time:weeks' be associated with entities other than 'time:DurationDescription' as its subject?",
                    "Is there any 'time:DurationDescription' that does not use the property 'time:weeks'?",
                    "What types of entities may serve as the domain for the property 'time:weeks'?"
                ],
                "type": "Type1"
            },
            "time:seconds": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "xsd:decimal"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:seconds\" has no declared characteristics or super-properties. Its domain is \"time:DurationDescription\", indicating it applies to duration descriptions, and its range is \"xsd:decimal\", specifying that its values are decimal numbers representing seconds. No inverse property is defined.",
                "CQ": [
                    {
                        "axiom": "time:seconds domain time:DurationDescription",
                        "CQ": [
                            "Can the property 'time:seconds' have a subject other than a time:DurationDescription?",
                            "Is there any time:DurationDescription that cannot be associated with 'time:seconds'?",
                            "What types of entities can be the domain for the property 'time:seconds'?"
                        ]
                    },
                    {
                        "axiom": "time:seconds range xsd:decimal",
                        "CQ": [
                            "Does the property 'seconds' ever have a range different from xsd:decimal?",
                            "Is every value assigned to the property 'seconds' necessarily of type xsd:decimal?",
                            "What types of values can be associated as the range for the property 'seconds'?"
                        ]
                    }
                ],
                "removed axiom": "time:seconds domain time:DurationDescription",
                "Target CQ": [
                    "Can the property 'time:seconds' have a subject other than a time:DurationDescription?",
                    "Is there any time:DurationDescription that cannot be associated with 'time:seconds'?",
                    "What types of entities can be the domain for the property 'time:seconds'?"
                ],
                "Valid CQ": [
                    "Does the property 'seconds' ever have a range different from xsd:decimal?",
                    "Is every value assigned to the property 'seconds' necessarily of type xsd:decimal?",
                    "What types of values can be associated as the range for the property 'seconds'?"
                ],
                "type": "Type1"
            },
            "time:intervalOverlappedBy": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:intervalOverlappedBy\" has no explicitly defined domain, range, characteristics, or super-properties. It is specified as the inverse of \"time:intervalOverlaps\", indicating that if one interval is overlapped by another, the second interval overlaps the first. No further restrictions or features are defined for this property.",
                "CQ": [
                    {
                        "axiom": "time:intervalOverlappedBy domain None",
                        "CQ": [
                            "What kinds of entities can be the subject of the property 'intervalOverlappedBy'?",
                            "Is it correct that 'intervalOverlappedBy' has no specified domain?",
                            "Could the domain of 'intervalOverlappedBy' include any class other than those currently specified?"
                        ]
                    },
                    {
                        "axiom": "time:intervalOverlappedBy range None",
                        "CQ": [
                            "Does the property 'intervalOverlappedBy' have a defined range, or is it correct that it has none?",
                            "What entities can appear as the object of the 'intervalOverlappedBy' property?",
                            "Is it allowed for 'intervalOverlappedBy' to be used without specifying a range?"
                        ]
                    },
                    {
                        "axiom": "time:intervalOverlappedBy inverseOf time:intervalOverlaps",
                        "CQ": [
                            "What is the inverse property of ‘intervalOverlappedBy’ in the ontology?",
                            "If interval A is overlapped by interval B, does it follow that interval B overlaps interval A according to the defined properties?",
                            "How are the properties ‘intervalOverlappedBy’ and ‘intervalOverlaps’ connected in terms of inverse relationships?"
                        ]
                    }
                ],
                "removed axiom": "time:intervalOverlappedBy inverseOf time:intervalOverlaps",
                "Target CQ": [
                    "What is the inverse property of ‘intervalOverlappedBy’ in the ontology?",
                    "If interval A is overlapped by interval B, does it follow that interval B overlaps interval A according to the defined properties?",
                    "How are the properties ‘intervalOverlappedBy’ and ‘intervalOverlaps’ connected in terms of inverse relationships?"
                ],
                "Valid CQ": [
                    "What kinds of entities can be the subject of the property 'intervalOverlappedBy'?",
                    "Is it correct that 'intervalOverlappedBy' has no specified domain?",
                    "Could the domain of 'intervalOverlappedBy' include any class other than those currently specified?",
                    "Does the property 'intervalOverlappedBy' have a defined range, or is it correct that it has none?",
                    "What entities can appear as the object of the 'intervalOverlappedBy' property?",
                    "Is it allowed for 'intervalOverlappedBy' to be used without specifying a range?"
                ],
                "type": "Type1"
            },
            "time:intervalAfter": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:intervalAfter\" has no explicitly defined characteristics, domain, or range restrictions. It does not have any super-properties. Its inverse property is \"time:intervalBefore,\" indicating that if one interval is after another, the second is before the first. This property is used to relate temporal intervals where one occurs after the other.",
                "CQ": [
                    {
                        "axiom": "time:intervalAfter domain None",
                        "CQ": [
                            "What kinds of entities can be the subject of the property 'time:intervalAfter'?",
                            "Is it correct that the property 'time:intervalAfter' does not have a defined domain?",
                            "Can 'time:intervalAfter' have domains other than the currently unspecified one?"
                        ]
                    },
                    {
                        "axiom": "time:intervalAfter range None",
                        "CQ": [
                            "Is it correct that the property 'time:intervalAfter' does not have a specified range?",
                            "What types of entities, if any, are allowed to be the object of 'time:intervalAfter'?",
                            "Could the range of 'time:intervalAfter' be anything other than what is currently specified?"
                        ]
                    },
                    {
                        "axiom": "time:intervalAfter inverseOf time:intervalBefore",
                        "CQ": [
                            "What is the ontological relationship established between 'intervalAfter' and 'intervalBefore'?",
                            "If interval A occurs after interval B, must interval B occur before interval A?",
                            "Which property is defined as the inverse of 'intervalAfter' in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "time:intervalAfter inverseOf time:intervalBefore",
                "Target CQ": [
                    "What is the ontological relationship established between 'intervalAfter' and 'intervalBefore'?",
                    "If interval A occurs after interval B, must interval B occur before interval A?",
                    "Which property is defined as the inverse of 'intervalAfter' in the ontology?"
                ],
                "Valid CQ": [
                    "What kinds of entities can be the subject of the property 'time:intervalAfter'?",
                    "Is it correct that the property 'time:intervalAfter' does not have a defined domain?",
                    "Can 'time:intervalAfter' have domains other than the currently unspecified one?",
                    "Is it correct that the property 'time:intervalAfter' does not have a specified range?",
                    "What types of entities, if any, are allowed to be the object of 'time:intervalAfter'?",
                    "Could the range of 'time:intervalAfter' be anything other than what is currently specified?"
                ],
                "type": "Type1"
            },
            "time:timeZone": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "time:DateTimeDescription"
                    ],
                    "range": [],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:timeZone\" links an instance of time:DateTimeDescription to an instance of tzont:TimeZone. It has no explicitly defined characteristics, super-properties, or inverse properties. This property is used to specify the time zone associated with a particular date-time description.",
                "CQ": [
                    {
                        "axiom": "time:timeZone domain time:DateTimeDescription",
                        "CQ": [
                            "Can the property 'time:timeZone' be used with subjects other than 'time:DateTimeDescription'?",
                            "Are all entities associated via the 'time:timeZone' property instances of 'time:DateTimeDescription'?",
                            "Which classes or types are specified as the domain for the property 'time:timeZone'?"
                        ]
                    },
                    {
                        "axiom": "time:timeZone range tzont:TimeZone",
                        "CQ": [
                            "Is every value assigned using the property 'time:timeZone' required to be a tzont:TimeZone?",
                            "Can the property 'time:timeZone' reference any class other than tzont:TimeZone as its range?",
                            "What entities are permitted to serve as the range for the property 'time:timeZone'?"
                        ]
                    }
                ],
                "removed axiom": "time:timeZone range tzont:TimeZone",
                "Target CQ": [
                    "Is every value assigned using the property 'time:timeZone' required to be a tzont:TimeZone?",
                    "Can the property 'time:timeZone' reference any class other than tzont:TimeZone as its range?",
                    "What entities are permitted to serve as the range for the property 'time:timeZone'?"
                ],
                "Valid CQ": [
                    "Can the property 'time:timeZone' be used with subjects other than 'time:DateTimeDescription'?",
                    "Are all entities associated via the 'time:timeZone' property instances of 'time:DateTimeDescription'?",
                    "Which classes or types are specified as the domain for the property 'time:timeZone'?"
                ],
                "type": "Type1"
            },
            "time:hasEnd": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "time:Instant"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:hasEnd\" links a temporal entity (\"time:TemporalEntity\") to a time instant (\"time:Instant\") indicating its endpoint. It has no defined property characteristics, super-properties, or inverse properties. This property is used to specify when a temporal entity concludes.",
                "CQ": [
                    {
                        "axiom": "time:hasEnd domain time:TemporalEntity",
                        "CQ": [
                            "Can the property 'time:hasEnd' be used with a subject that is not a time:TemporalEntity?",
                            "Are all entities appearing as the subject of 'time:hasEnd' necessarily instances of time:TemporalEntity?",
                            "What types of entities are permitted as the domain of the 'time:hasEnd' property?"
                        ]
                    },
                    {
                        "axiom": "time:hasEnd range time:Instant",
                        "CQ": [
                            "Is it necessary for every value associated with the property 'time:hasEnd' to be a time:Instant?",
                            "Can entities other than time:Instant appear as the range of the property 'time:hasEnd'?",
                            "What types of entities are permitted as the range for 'time:hasEnd'?"
                        ]
                    }
                ],
                "removed axiom": "time:hasEnd domain time:TemporalEntity",
                "Target CQ": [
                    "Can the property 'time:hasEnd' be used with a subject that is not a time:TemporalEntity?",
                    "Are all entities appearing as the subject of 'time:hasEnd' necessarily instances of time:TemporalEntity?",
                    "What types of entities are permitted as the domain of the 'time:hasEnd' property?"
                ],
                "Valid CQ": [
                    "Is it necessary for every value associated with the property 'time:hasEnd' to be a time:Instant?",
                    "Can entities other than time:Instant appear as the range of the property 'time:hasEnd'?",
                    "What types of entities are permitted as the range for 'time:hasEnd'?"
                ],
                "type": "Type1"
            },
            "time:intervalDuring": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "time:ProperInterval"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:intervalDuring\" relates two instances of time:ProperInterval, indicating that one interval occurs during the other. It has no explicitly defined characteristics, super-properties, or specified inverse property. Both its domain and range are restricted to time:ProperInterval, signifying its use in expressing temporal containment between intervals.",
                "CQ": [
                    {
                        "axiom": "time:intervalDuring domain time:ProperInterval",
                        "CQ": [
                            "Can the property 'intervalDuring' be used with subjects other than ProperInterval?",
                            "What types of entities are permissible as the subject for the property 'intervalDuring'?",
                            "Are there any entities classified as ProperInterval that cannot be the subject of 'intervalDuring'?"
                        ]
                    },
                    {
                        "axiom": "time:intervalDuring range time:ProperInterval",
                        "CQ": [
                            "Is it possible for the property 'time:intervalDuring' to have a range other than 'time:ProperInterval'?",
                            "Are all objects associated with 'time:intervalDuring' instances of 'time:ProperInterval'?",
                            "What types of entities can serve as the range for the property 'time:intervalDuring'?"
                        ]
                    }
                ],
                "removed axiom": "time:intervalDuring domain time:ProperInterval",
                "Target CQ": [
                    "Can the property 'intervalDuring' be used with subjects other than ProperInterval?",
                    "What types of entities are permissible as the subject for the property 'intervalDuring'?",
                    "Are there any entities classified as ProperInterval that cannot be the subject of 'intervalDuring'?"
                ],
                "Valid CQ": [
                    "Is it possible for the property 'time:intervalDuring' to have a range other than 'time:ProperInterval'?",
                    "Are all objects associated with 'time:intervalDuring' instances of 'time:ProperInterval'?",
                    "What types of entities can serve as the range for the property 'time:intervalDuring'?"
                ],
                "type": "Type1"
            },
            "time:intervalMetBy": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:intervalMetBy\" has no explicitly defined characteristics, domain, or range restrictions, and does not have any super-properties. It is specified as the inverse of \"time:intervalMeets,\" indicating a temporal relation where one interval is met by another. No additional description is provided.",
                "CQ": [
                    {
                        "axiom": "time:intervalMetBy domain None",
                        "CQ": [
                            "What entities can be the domain of the property 'time:intervalMetBy'?",
                            "Is it correct that 'time:intervalMetBy' has no specified domain?",
                            "Can 'time:intervalMetBy' relate to any subject regardless of type?"
                        ]
                    },
                    {
                        "axiom": "time:intervalMetBy range None",
                        "CQ": [
                            "Is there a range defined for the property 'time:intervalMetBy'?",
                            "What types of values can appear as the object of the property 'time:intervalMetBy'?",
                            "Is it correct that the property 'time:intervalMetBy' has no specified range?"
                        ]
                    },
                    {
                        "axiom": "time:intervalMetBy inverseOf time:intervalMeets",
                        "CQ": [
                            "What is the ontological connection between the properties ‘intervalMetBy’ and ‘intervalMeets’?",
                            "If an interval A is met by interval B, does this entail that B meets A according to the ontology?",
                            "Which property is defined as the inverse of ‘intervalMetBy’ in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "time:intervalMetBy inverseOf time:intervalMeets",
                "Target CQ": [
                    "What is the ontological connection between the properties ‘intervalMetBy’ and ‘intervalMeets’?",
                    "If an interval A is met by interval B, does this entail that B meets A according to the ontology?",
                    "Which property is defined as the inverse of ‘intervalMetBy’ in the ontology?"
                ],
                "Valid CQ": [
                    "What entities can be the domain of the property 'time:intervalMetBy'?",
                    "Is it correct that 'time:intervalMetBy' has no specified domain?",
                    "Can 'time:intervalMetBy' relate to any subject regardless of type?",
                    "Is there a range defined for the property 'time:intervalMetBy'?",
                    "What types of values can appear as the object of the property 'time:intervalMetBy'?",
                    "Is it correct that the property 'time:intervalMetBy' has no specified range?"
                ],
                "type": "Type1"
            },
            "time:inDateTime": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "time:DateTimeDescription"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:inDateTime\" links an instance of time:Instant to a corresponding time:DateTimeDescription. It has no declared characteristics such as being functional or transitive, and it does not inherit from any super-property or have an inverse property. The domain is restricted to time:Instant, and the range is time:DateTimeDescription, indicating its purpose is to specify the detailed date and time information for a given temporal instant.",
                "CQ": [
                    {
                        "axiom": "time:inDateTime domain time:Instant",
                        "CQ": [
                            "Can the property 'time:inDateTime' apply to any subject other than time:Instant?",
                            "Is it possible that a time:Instant does not have an associated value for the property 'time:inDateTime'?",
                            "What are the possible domains for the property 'time:inDateTime'?"
                        ]
                    },
                    {
                        "axiom": "time:inDateTime range time:DateTimeDescription",
                        "CQ": [
                            "Does the property 'time:inDateTime' accept any range other than 'time:DateTimeDescription'?",
                            "Is every value associated with 'time:inDateTime' required to be a 'time:DateTimeDescription'?",
                            "What entities can serve as the range for the property 'time:inDateTime'?"
                        ]
                    }
                ],
                "removed axiom": "time:inDateTime domain time:Instant",
                "Target CQ": [
                    "Can the property 'time:inDateTime' apply to any subject other than time:Instant?",
                    "Is it possible that a time:Instant does not have an associated value for the property 'time:inDateTime'?",
                    "What are the possible domains for the property 'time:inDateTime'?"
                ],
                "Valid CQ": [
                    "Does the property 'time:inDateTime' accept any range other than 'time:DateTimeDescription'?",
                    "Is every value associated with 'time:inDateTime' required to be a 'time:DateTimeDescription'?",
                    "What entities can serve as the range for the property 'time:inDateTime'?"
                ],
                "type": "Type1"
            },
            "time:hours": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "xsd:decimal"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:hours\" has a domain of \"time:DurationDescription\" and a range of \"xsd:decimal\", indicating it relates a duration description to a decimal value representing hours. It has no explicitly defined characteristics, super-properties, or inverse properties.",
                "CQ": [
                    {
                        "axiom": "time:hours domain time:DurationDescription",
                        "CQ": [
                            "Can the property 'time:hours' have a subject other than a time:DurationDescription?",
                            "What types of entities are permitted as the subject of 'time:hours'?",
                            "Is it correct that only instances of time:DurationDescription can use the 'time:hours' property?"
                        ]
                    },
                    {
                        "axiom": "time:hours range xsd:decimal",
                        "CQ": [
                            "Can the property 'time:hours' have a range other than xsd:decimal?",
                            "Are all values assigned via 'time:hours' required to be decimals?",
                            "Which datatypes are permissible as the range for the property 'time:hours'?"
                        ]
                    }
                ],
                "removed axiom": "time:hours domain time:DurationDescription",
                "Target CQ": [
                    "Can the property 'time:hours' have a subject other than a time:DurationDescription?",
                    "What types of entities are permitted as the subject of 'time:hours'?",
                    "Is it correct that only instances of time:DurationDescription can use the 'time:hours' property?"
                ],
                "Valid CQ": [
                    "Can the property 'time:hours' have a range other than xsd:decimal?",
                    "Are all values assigned via 'time:hours' required to be decimals?",
                    "Which datatypes are permissible as the range for the property 'time:hours'?"
                ],
                "type": "Type1"
            },
            "time:hasDateTimeDescription": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "time:DateTimeDescription"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:hasDateTimeDescription\" has no special characteristics and is not defined as a sub-property or inverse of any other property. Its domain is restricted to instances of time:DateTimeInterval, and its range is time:DateTimeDescription. This property relates a DateTimeInterval to a DateTimeDescription, indicating the specific date and time details associated with the interval.",
                "CQ": [
                    {
                        "axiom": "time:hasDateTimeDescription domain time:DateTimeInterval",
                        "CQ": [
                            "Can the property 'hasDateTimeDescription' be associated with any subject other than a DateTimeInterval?",
                            "Is it possible for an object linked via 'hasDateTimeDescription' not to conform to a DateTimeDescription?",
                            "What entities are permitted to serve as the domain for the 'hasDateTimeDescription' property?"
                        ]
                    },
                    {
                        "axiom": "time:hasDateTimeDescription range time:DateTimeDescription",
                        "CQ": [
                            "Is every value associated with the property 'time:hasDateTimeDescription' required to be a time:DateTimeDescription?",
                            "Are there any range types for 'time:hasDateTimeDescription' other than time:DateTimeDescription?",
                            "What types of entities can serve as the range for the property 'time:hasDateTimeDescription'?"
                        ]
                    }
                ],
                "removed axiom": "time:hasDateTimeDescription domain time:DateTimeInterval",
                "Target CQ": [
                    "Can the property 'hasDateTimeDescription' be associated with any subject other than a DateTimeInterval?",
                    "Is it possible for an object linked via 'hasDateTimeDescription' not to conform to a DateTimeDescription?",
                    "What entities are permitted to serve as the domain for the 'hasDateTimeDescription' property?"
                ],
                "Valid CQ": [
                    "Is every value associated with the property 'time:hasDateTimeDescription' required to be a time:DateTimeDescription?",
                    "Are there any range types for 'time:hasDateTimeDescription' other than time:DateTimeDescription?",
                    "What types of entities can serve as the range for the property 'time:hasDateTimeDescription'?"
                ],
                "type": "Type1"
            },
            "time:second": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "time:DateTimeDescription"
                    ],
                    "range": [],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:second\" has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to instances of time:DateTimeDescription, and its range is xsd:decimal. This property is used to associate a DateTimeDescription with a decimal value representing seconds.",
                "CQ": [
                    {
                        "axiom": "time:second domain time:DateTimeDescription",
                        "CQ": [
                            "Can the property 'time:second' be used with any class other than 'time:DateTimeDescription' as its subject?",
                            "Which classes are permitted as subjects for the 'time:second' property?",
                            "Are all subjects of the 'time:second' property necessarily instances of 'time:DateTimeDescription'?"
                        ]
                    },
                    {
                        "axiom": "time:second range xsd:decimal",
                        "CQ": [
                            "Can the property 'time:second' refer to any value type other than xsd:decimal?",
                            "Is it necessary that all values of 'time:second' are of type xsd:decimal?",
                            "What types of entities are permitted as the range of the property 'time:second'?"
                        ]
                    }
                ],
                "removed axiom": "time:second range xsd:decimal",
                "Target CQ": [
                    "Can the property 'time:second' refer to any value type other than xsd:decimal?",
                    "Is it necessary that all values of 'time:second' are of type xsd:decimal?",
                    "What types of entities are permitted as the range of the property 'time:second'?"
                ],
                "Valid CQ": [
                    "Can the property 'time:second' be used with any class other than 'time:DateTimeDescription' as its subject?",
                    "Which classes are permitted as subjects for the 'time:second' property?",
                    "Are all subjects of the 'time:second' property necessarily instances of 'time:DateTimeDescription'?"
                ],
                "type": "Type1"
            },
            "time:minute": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "time:DateTimeDescription"
                    ],
                    "range": [],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:minute\" relates an individual of the class \"time:DateTimeDescription\" to a non-negative integer value representing the minute component of a date-time description. It has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to \"time:DateTimeDescription\", and its range is restricted to \"xsd:nonNegativeInteger\".",
                "CQ": [
                    {
                        "axiom": "time:minute domain time:DateTimeDescription",
                        "CQ": [
                            "Can the property 'time:minute' be associated with any subject other than a time:DateTimeDescription?",
                            "Is it possible for something that is not a time:DateTimeDescription to have a 'time:minute' property?",
                            "What types of entities can serve as the domain for the property 'time:minute'?"
                        ]
                    },
                    {
                        "axiom": "time:minute range xsd:nonNegativeInteger",
                        "CQ": [
                            "Is there any value other than a nonNegativeInteger that can be used as the range of 'time:minute'?",
                            "Are all objects associated with the property 'time:minute' necessarily nonNegativeIntegers?",
                            "What types of values are permitted as the range for the property 'time:minute'?"
                        ]
                    }
                ],
                "removed axiom": "time:minute range xsd:nonNegativeInteger",
                "Target CQ": [
                    "Is there any value other than a nonNegativeInteger that can be used as the range of 'time:minute'?",
                    "Are all objects associated with the property 'time:minute' necessarily nonNegativeIntegers?",
                    "What types of values are permitted as the range for the property 'time:minute'?"
                ],
                "Valid CQ": [
                    "Can the property 'time:minute' be associated with any subject other than a time:DateTimeDescription?",
                    "Is it possible for something that is not a time:DateTimeDescription to have a 'time:minute' property?",
                    "What types of entities can serve as the domain for the property 'time:minute'?"
                ],
                "type": "Type1"
            },
            "time:hasDurationDescription": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "time:TemporalEntity"
                    ],
                    "range": [],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:hasDurationDescription\" links an instance of time:TemporalEntity to a corresponding time:DurationDescription. It has no defined characteristics, super-properties, or inverse properties. Its domain is restricted to time:TemporalEntity, and its range is limited to time:DurationDescription. This property is used to specify the duration description associated with a temporal entity.",
                "CQ": [
                    {
                        "axiom": "time:hasDurationDescription domain time:TemporalEntity",
                        "CQ": [
                            "Is the property 'time:hasDurationDescription' ever used with a subject that is not a time:TemporalEntity?",
                            "What entities may serve as the domain for 'time:hasDurationDescription'?",
                            "Can an individual with the type time:TemporalEntity always be described using the 'time:hasDurationDescription' property?"
                        ]
                    },
                    {
                        "axiom": "time:hasDurationDescription range time:DurationDescription",
                        "CQ": [
                            "Can the property 'time:hasDurationDescription' take as its value an entity other than 'time:DurationDescription'?",
                            "Is every object of the 'time:hasDurationDescription' property necessarily a 'time:DurationDescription'?",
                            "What entities are permitted as the range of 'time:hasDurationDescription'?"
                        ]
                    }
                ],
                "removed axiom": "time:hasDurationDescription range time:DurationDescription",
                "Target CQ": [
                    "Can the property 'time:hasDurationDescription' take as its value an entity other than 'time:DurationDescription'?",
                    "Is every object of the 'time:hasDurationDescription' property necessarily a 'time:DurationDescription'?",
                    "What entities are permitted as the range of 'time:hasDurationDescription'?"
                ],
                "Valid CQ": [
                    "Is the property 'time:hasDurationDescription' ever used with a subject that is not a time:TemporalEntity?",
                    "What entities may serve as the domain for 'time:hasDurationDescription'?",
                    "Can an individual with the type time:TemporalEntity always be described using the 'time:hasDurationDescription' property?"
                ],
                "type": "Type1"
            },
            "time:intervalStarts": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "time:ProperInterval"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:intervalStarts\" has no explicitly defined characteristics or super-properties. Its domain and range are both limited to \"time:ProperInterval\", indicating it relates two proper time intervals. This property is used to assert that one proper interval starts another proper interval. No inverse property is specified.",
                "CQ": [
                    {
                        "axiom": "time:intervalStarts domain time:ProperInterval",
                        "CQ": [
                            "Can the property 'intervalStarts' be used with subjects other than ProperInterval?",
                            "Is there any ProperInterval that cannot be associated with the property 'intervalStarts'?",
                            "What types of entities may serve as the domain for the 'intervalStarts' property?"
                        ]
                    },
                    {
                        "axiom": "time:intervalStarts range time:ProperInterval",
                        "CQ": [
                            "Can the property 'intervalStarts' have a value that is not a ProperInterval as its range?",
                            "Is every entity that serves as the range of 'intervalStarts' necessarily a ProperInterval?",
                            "What types of values are permitted as the range of the 'intervalStarts' property?"
                        ]
                    }
                ],
                "removed axiom": "time:intervalStarts domain time:ProperInterval",
                "Target CQ": [
                    "Can the property 'intervalStarts' be used with subjects other than ProperInterval?",
                    "Is there any ProperInterval that cannot be associated with the property 'intervalStarts'?",
                    "What types of entities may serve as the domain for the 'intervalStarts' property?"
                ],
                "Valid CQ": [
                    "Can the property 'intervalStarts' have a value that is not a ProperInterval as its range?",
                    "Is every entity that serves as the range of 'intervalStarts' necessarily a ProperInterval?",
                    "What types of values are permitted as the range of the 'intervalStarts' property?"
                ],
                "type": "Type1"
            },
            "time:after": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:after\" has no explicitly defined characteristics, domain, or range restrictions, and does not have any super-properties. It is specified as the inverse of the property \"time:before,\" indicating that if one entity is related to another via \"time:after,\" the second entity is related to the first via \"time:before.\" No additional description is provided.",
                "CQ": [
                    {
                        "axiom": "time:after domain None",
                        "CQ": [
                            "What can be the domain of the property 'time:after'?",
                            "Is it valid that the property 'time:after' does not have a specified domain?",
                            "Are there any constraints on the types of subjects for the property 'time:after'?"
                        ]
                    },
                    {
                        "axiom": "time:after range None",
                        "CQ": [
                            "Is it correct that the property 'time:after' does not specify any range?",
                            "What types of values can be the range for the property 'time:after'?",
                            "Can entities of any kind be used as the object for the 'time:after' property?"
                        ]
                    },
                    {
                        "axiom": "time:after inverseOf time:before",
                        "CQ": [
                            "What is the inverse property of 'time:after' in the ontology?",
                            "If entity A is related to entity B through 'time:after', does the ontology entail that B is related to A through 'time:before'?",
                            "How do the properties 'time:after' and 'time:before' correspond as logical inverses in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "time:after inverseOf time:before",
                "Target CQ": [
                    "What is the inverse property of 'time:after' in the ontology?",
                    "If entity A is related to entity B through 'time:after', does the ontology entail that B is related to A through 'time:before'?",
                    "How do the properties 'time:after' and 'time:before' correspond as logical inverses in the ontology?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'time:after'?",
                    "Is it valid that the property 'time:after' does not have a specified domain?",
                    "Are there any constraints on the types of subjects for the property 'time:after'?",
                    "Is it correct that the property 'time:after' does not specify any range?",
                    "What types of values can be the range for the property 'time:after'?",
                    "Can entities of any kind be used as the object for the 'time:after' property?"
                ],
                "type": "Type1"
            },
            "time:inXSDDateTime": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "xsd:dateTime"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:inXSDDateTime\" relates instances of \"time:Instant\" to values of type \"xsd:dateTime\". It has no additional characteristics, super-properties, or inverse properties specified. This property is used to associate a temporal instant with its corresponding XML Schema dateTime representation.",
                "CQ": [
                    {
                        "axiom": "time:inXSDDateTime domain time:Instant",
                        "CQ": [
                            "Can 'time:inXSDDateTime' have a subject that is not a 'time:Instant'?",
                            "Are all instances related through 'time:inXSDDateTime' necessarily 'time:Instant'?",
                            "What are the possible domains for the property 'time:inXSDDateTime'?"
                        ]
                    },
                    {
                        "axiom": "time:inXSDDateTime range xsd:dateTime",
                        "CQ": [
                            "Is there any value for 'time:inXSDDateTime' that is not an xsd:dateTime?",
                            "What types of entities can be used as the range of 'time:inXSDDateTime'?",
                            "Must all resources referenced by 'time:inXSDDateTime' be instances of xsd:dateTime?"
                        ]
                    }
                ],
                "removed axiom": "time:inXSDDateTime domain time:Instant",
                "Target CQ": [
                    "Can 'time:inXSDDateTime' have a subject that is not a 'time:Instant'?",
                    "Are all instances related through 'time:inXSDDateTime' necessarily 'time:Instant'?",
                    "What are the possible domains for the property 'time:inXSDDateTime'?"
                ],
                "Valid CQ": [
                    "Is there any value for 'time:inXSDDateTime' that is not an xsd:dateTime?",
                    "What types of entities can be used as the range of 'time:inXSDDateTime'?",
                    "Must all resources referenced by 'time:inXSDDateTime' be instances of xsd:dateTime?"
                ],
                "type": "Type1"
            },
            "time:intervalStartedBy": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:intervalStartedBy\" has no explicitly defined characteristics, domain, or range restrictions, and is not a sub-property of any other property. It is specified as the inverse of \"time:intervalStarts,\" indicating that if an interval is started by another, then the latter starts the former. No additional constraints or relationships are provided.",
                "CQ": [
                    {
                        "axiom": "time:intervalStartedBy domain None",
                        "CQ": [
                            "What kinds of entities can be the subject of the property 'time:intervalStartedBy'?",
                            "Is it correct that the property 'time:intervalStartedBy' has no domain specified?",
                            "Can 'time:intervalStartedBy' be used with any class as its domain?"
                        ]
                    },
                    {
                        "axiom": "time:intervalStartedBy range None",
                        "CQ": [
                            "Is it correct that 'intervalStartedBy' does not specify a range?",
                            "Which types of entities can be the range of the property 'intervalStartedBy'?",
                            "Can 'intervalStartedBy' relate to any type of value as its object?"
                        ]
                    },
                    {
                        "axiom": "time:intervalStartedBy inverseOf time:intervalStarts",
                        "CQ": [
                            "What is the inverse relationship specified between the properties ‘intervalStartedBy’ and ‘intervalStarts’ in the ontology?",
                            "Does the assertion that interval A intervalStartedBy interval B entail that interval B intervalStarts interval A?",
                            "Which property functions as the inverse of ‘intervalStartedBy’ according to the ontology?"
                        ]
                    }
                ],
                "removed axiom": "time:intervalStartedBy inverseOf time:intervalStarts",
                "Target CQ": [
                    "What is the inverse relationship specified between the properties ‘intervalStartedBy’ and ‘intervalStarts’ in the ontology?",
                    "Does the assertion that interval A intervalStartedBy interval B entail that interval B intervalStarts interval A?",
                    "Which property functions as the inverse of ‘intervalStartedBy’ according to the ontology?"
                ],
                "Valid CQ": [
                    "What kinds of entities can be the subject of the property 'time:intervalStartedBy'?",
                    "Is it correct that the property 'time:intervalStartedBy' has no domain specified?",
                    "Can 'time:intervalStartedBy' be used with any class as its domain?",
                    "Is it correct that 'intervalStartedBy' does not specify a range?",
                    "Which types of entities can be the range of the property 'intervalStartedBy'?",
                    "Can 'intervalStartedBy' relate to any type of value as its object?"
                ],
                "type": "Type1"
            },
            "time:months": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "xsd:decimal"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:months\" links an instance of time:DurationDescription to a decimal value representing the number of months. It has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to time:DurationDescription, and its range is xsd:decimal.",
                "CQ": [
                    {
                        "axiom": "time:months domain time:DurationDescription",
                        "CQ": [
                            "Is the property 'months' applicable to entities other than DurationDescription?",
                            "Are all subjects of the property 'months' instances of DurationDescription?",
                            "What entities can be the domain of the 'months' property?"
                        ]
                    },
                    {
                        "axiom": "time:months range xsd:decimal",
                        "CQ": [
                            "Does the property 'time:months' have any range other than xsd:decimal?",
                            "Are all values used with the property 'time:months' required to be of type xsd:decimal?",
                            "What data types are permitted as values for the property 'time:months'?"
                        ]
                    }
                ],
                "removed axiom": "time:months domain time:DurationDescription",
                "Target CQ": [
                    "Is the property 'months' applicable to entities other than DurationDescription?",
                    "Are all subjects of the property 'months' instances of DurationDescription?",
                    "What entities can be the domain of the 'months' property?"
                ],
                "Valid CQ": [
                    "Does the property 'time:months' have any range other than xsd:decimal?",
                    "Are all values used with the property 'time:months' required to be of type xsd:decimal?",
                    "What data types are permitted as values for the property 'time:months'?"
                ],
                "type": "Type1"
            },
            "time:intervalEquals": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "time:ProperInterval"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:intervalEquals\" links two individuals of type \"time:ProperInterval\" and asserts that they are equal in terms of their start and end points. It has no additional characteristics, super-properties, or inverse properties defined. Both its domain and range are restricted to \"time:ProperInterval\".",
                "CQ": [
                    {
                        "axiom": "time:intervalEquals domain time:ProperInterval",
                        "CQ": [
                            "Can the property 'intervalEquals' be used with subjects that are not instances of 'ProperInterval'?",
                            "Are all values associated with the property 'intervalEquals' required to be of a specific type or class?",
                            "What types of entities can serve as the domain for the property 'intervalEquals'?"
                        ]
                    },
                    {
                        "axiom": "time:intervalEquals range time:ProperInterval",
                        "CQ": [
                            "Can the property 'intervalEquals' have a value that is not of type 'ProperInterval'?",
                            "Is every instance associated with 'intervalEquals' necessarily a 'ProperInterval'?",
                            "Which types of entities can be the range of the property 'intervalEquals'?"
                        ]
                    }
                ],
                "removed axiom": "time:intervalEquals domain time:ProperInterval",
                "Target CQ": [
                    "Can the property 'intervalEquals' be used with subjects that are not instances of 'ProperInterval'?",
                    "Are all values associated with the property 'intervalEquals' required to be of a specific type or class?",
                    "What types of entities can serve as the domain for the property 'intervalEquals'?"
                ],
                "Valid CQ": [
                    "Can the property 'intervalEquals' have a value that is not of type 'ProperInterval'?",
                    "Is every instance associated with 'intervalEquals' necessarily a 'ProperInterval'?",
                    "Which types of entities can be the range of the property 'intervalEquals'?"
                ],
                "type": "Type1"
            },
            "time:years": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "xsd:decimal"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"time:years\" relates instances of \"time:DurationDescription\" to a decimal value representing a duration in years. It does not have explicitly defined characteristics, super-properties, or inverse properties. Its range is restricted to decimal values (xsd:decimal).",
                "CQ": [
                    {
                        "axiom": "time:years domain time:DurationDescription",
                        "CQ": [
                            "Can 'time:years' be used with entities that are not instances of 'time:DurationDescription'?",
                            "Is 'time:DurationDescription' the only possible domain for the property 'time:years'?",
                            "What types of objects are allowed as the subject when using the property 'time:years'?"
                        ]
                    },
                    {
                        "axiom": "time:years range xsd:decimal",
                        "CQ": [
                            "Does the property 'time:years' ever refer to a value that is not of type xsd:decimal?",
                            "Are there datatypes other than xsd:decimal that can appear as the range of 'time:years'?",
                            "Is it necessary for every 'time:years' value to be an xsd:decimal?"
                        ]
                    }
                ],
                "removed axiom": "time:years domain time:DurationDescription",
                "Target CQ": [
                    "Can 'time:years' be used with entities that are not instances of 'time:DurationDescription'?",
                    "Is 'time:DurationDescription' the only possible domain for the property 'time:years'?",
                    "What types of objects are allowed as the subject when using the property 'time:years'?"
                ],
                "Valid CQ": [
                    "Does the property 'time:years' ever refer to a value that is not of type xsd:decimal?",
                    "Are there datatypes other than xsd:decimal that can appear as the range of 'time:years'?",
                    "Is it necessary for every 'time:years' value to be an xsd:decimal?"
                ],
                "type": "Type1"
            }
        }
    },
    "stuff": {
        "classes": {
            "Container": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[inverseOf containedIn only (AmountOfStuff or PhysicalObject)]"
                    ]
                },
                "description": "Container is defined as a subclass of PhysicalEndurant. It is characterized by the restriction that it may only be the inverse of containedIn with respect to AmountOfStuff or PhysicalObject; that is, only an AmountOfStuff or a PhysicalObject can be contained in a Container. The class is intended for use when an amount of matter is not self-contained, emphasizing the role of the Container in physically enclosing or holding such entities.",
                "CQ": [
                    {
                        "axiom": "Container subClassOf PhysicalEndurant",
                        "CQ": [
                            "Is Container categorized under the broader type of PhysicalEndurant?",
                            "Which entities are specified as subtypes of PhysicalEndurant, including Container?",
                            "To what higher-level classes does Container belong within the ontology?"
                        ]
                    },
                    {
                        "axiom": "Container propertyRestrictions [inverseOf containedIn only (AmountOfStuff or PhysicalObject)]",
                        "CQ": [
                            "Is every entity that contains a Container required to be either an AmountOfStuff or a PhysicalObject?",
                            "Can a Container be contained in something other than an AmountOfStuff or a PhysicalObject?",
                            "Does the property 'containedIn' for a Container necessarily exclude all classes except AmountOfStuff and PhysicalObject?"
                        ]
                    }
                ],
                "removed axiom": "Container subClassOf PhysicalEndurant",
                "Target CQ": [
                    "Is Container categorized under the broader type of PhysicalEndurant?",
                    "Which entities are specified as subtypes of PhysicalEndurant, including Container?",
                    "To what higher-level classes does Container belong within the ontology?"
                ],
                "Valid CQ": [
                    "Is every entity that contains a Container required to be either an AmountOfStuff or a PhysicalObject?",
                    "Can a Container be contained in something other than an AmountOfStuff or a PhysicalObject?",
                    "Does the property 'containedIn' for a Container necessarily exclude all classes except AmountOfStuff and PhysicalObject?"
                ],
                "type": "Type1"
            },
            "Stuff": {
                "axiom": {
                    "subClassOf": [
                        "PhysicalEndurant"
                    ],
                    "propertyRestrictions": [
                        "[hasState max 3 StuffState]"
                    ]
                },
                "description": "Stuff is defined as a subclass of PhysicalEndurant and is synonymous with \"Amount of Matter.\" Members of this class are restricted to having only states that are instances of StuffState, with a maximum of three such states per individual. This formalization captures the notion of matter existing in a limited number of distinct possible states.",
                "CQ": [
                    {
                        "axiom": "Stuff subClassOf PhysicalEndurant",
                        "CQ": [
                            "Is Stuff classified under the category of PhysicalEndurant?",
                            "What are the subclasses encompassed by PhysicalEndurant, including Stuff?",
                            "To which higher-level classes does Stuff belong?"
                        ]
                    },
                    {
                        "axiom": "Stuff propertyRestrictions [hasState only StuffState]",
                        "CQ": [
                            "Is every state associated with Stuff necessarily classified as a StuffState?",
                            "Can Stuff exist in any state other than those categorized as StuffState?",
                            "Does Stuff restrict all of its hasState relations to only refer to entities of type StuffState?"
                        ]
                    },
                    {
                        "axiom": "Stuff propertyRestrictions [hasState max 3 StuffState]",
                        "CQ": [
                            "Is Stuff permitted to have no more than three hasState relationships with StuffState individuals?",
                            "Does the ontology restrict any Stuff instance such that it cannot be associated with more than three StuffState values via hasState?",
                            "Are there circumstances under which Stuff might exceed three hasState links to StuffState, or is this strictly limited?"
                        ]
                    }
                ],
                "removed axiom": "Stuff propertyRestrictions [hasState only StuffState]",
                "Target CQ": [
                    "Is every state associated with Stuff necessarily classified as a StuffState?",
                    "Can Stuff exist in any state other than those categorized as StuffState?",
                    "Does Stuff restrict all of its hasState relations to only refer to entities of type StuffState?"
                ],
                "Valid CQ": [
                    "Is Stuff classified under the category of PhysicalEndurant?",
                    "What are the subclasses encompassed by PhysicalEndurant, including Stuff?",
                    "To which higher-level classes does Stuff belong?",
                    "Is Stuff permitted to have no more than three hasState relationships with StuffState individuals?",
                    "Does the ontology restrict any Stuff instance such that it cannot be associated with more than three StuffState values via hasState?",
                    "Are there circumstances under which Stuff might exceed three hasState links to StuffState, or is this strictly limited?"
                ],
                "type": "Type1"
            },
            "Bulk": {
                "axiom": {
                    "subClassOf": [
                        "Stuff",
                        "(([hasGranuleType some (Molecule or MultiMoleculeParticle)] or [hasPartStuff some Stuff]) and ([hasGranuleType only (Molecule or MultiMoleculeParticle)] or [hasPartStuff only Stuff]))"
                    ]
                },
                "description": "Bulk is a subclass of Stuff, further constrained to entities whose granule type is either Molecule or MultiMoleculeParticle, or which consist only of or contain as parts other Stuff. Bulk is equivalent to either MixedStuff or StructuredPureStuff, and cannot be UnstructuredPureStuff. In practical contexts, particularly in the food industry, Bulk refers to goods such as soy beans, coffee, nuts, pet food, tea, whole grains, and sugar—items typically handled and measured in aggregate amounts rather than as individual units. The class accommodates various granularities (e.g., bags of nuts or packets of cookies are counted in units of the contained item type) and encompasses different material compositions, such as StructuredPureStuff (like sugar), HomogenousMixedStuff (such as stabilized peanut butter), and HeterogenousMixedStuff (e.g., pet food), highlighting the concept’s versatility in bulk goods handling and classification.",
                "CQ": [
                    {
                        "axiom": "Bulk subClassOf Stuff",
                        "CQ": [
                            "Is Bulk classified as a kind of Stuff?",
                            "What are the more specific entities encompassed by Stuff, including Bulk?",
                            "Which broader categories include Bulk among their subclasses?"
                        ]
                    },
                    {
                        "axiom": "Bulk subClassOf (([hasGranuleType some (Molecule or MultiMoleculeParticle)] or [hasPartStuff some Stuff]) and ([hasGranuleType only (Molecule or MultiMoleculeParticle)] or [hasPartStuff only Stuff]))",
                        "CQ": [
                            "What properties distinguish Bulk in terms of hasGranuleType and hasPartStuff from its parent classes?",
                            "Which entities are classified as Bulk based on their granule types or part stuff composition?",
                            "How is the superclass of Bulk defined with respect to Molecule, MultiMoleculeParticle, and Stuff?"
                        ]
                    },
                    {
                        "axiom": "Bulk subClassOf (MixedStuff or StructuredPureStuff)",
                        "CQ": [
                            "Is Bulk classified under either MixedStuff or StructuredPureStuff categories?",
                            "Which concepts are more specific than the union of MixedStuff and StructuredPureStuff, such as Bulk?",
                            "Into which overarching groups does Bulk fit within the ontology: MixedStuff, StructuredPureStuff, or both?"
                        ]
                    }
                ],
                "removed axiom": "Bulk subClassOf (MixedStuff or StructuredPureStuff)",
                "Target CQ": [
                    "Is Bulk classified under either MixedStuff or StructuredPureStuff categories?",
                    "Which concepts are more specific than the union of MixedStuff and StructuredPureStuff, such as Bulk?",
                    "Into which overarching groups does Bulk fit within the ontology: MixedStuff, StructuredPureStuff, or both?"
                ],
                "Valid CQ": [
                    "Is Bulk classified as a kind of Stuff?",
                    "What are the more specific entities encompassed by Stuff, including Bulk?",
                    "Which broader categories include Bulk among their subclasses?",
                    "What properties distinguish Bulk in terms of hasGranuleType and hasPartStuff from its parent classes?",
                    "Which entities are classified as Bulk based on their granule types or part stuff composition?",
                    "How is the superclass of Bulk defined with respect to Molecule, MultiMoleculeParticle, and Stuff?"
                ],
                "type": "Type1"
            },
            "PureStuff": {
                "axiom": {
                    "subClassOf": [
                        "Stuff"
                    ],
                    "equivalentClass": []
                },
                "description": "PureStuff is defined as a subclass of Stuff and is equivalent to entities that have exactly one granule type (either an Atom, Molecule, or MultiMoleculeParticle), exactly one part stuff (which must be either PureBulk, StructuredPureStuff, or UnstructuredPureStuff), and exactly one stuff distribution (which must be an EvenDistribution). In the literature, PureStuff has also been referred to as 'Unstructured stuff' and 'discrete stuff', and is characterized by being composed of a single kind of molecule or atomic constituent—for example, water composed only of H₂O molecules or pure manganese made up solely of manganese atoms. This is an idealized category, as real-world materials are only pure relative to detection limits.",
                "CQ": [
                    {
                        "axiom": "PureStuff subClassOf Stuff",
                        "CQ": [
                            "Is Stuff a more general category that includes PureStuff?",
                            "Which entities are categorized as more specific instances under Stuff, such as PureStuff?",
                            "To what broader groupings does PureStuff logically belong?"
                        ]
                    },
                    {
                        "axiom": "PureStuff equivalentClass (Stuff and [hasGranuleType exactly 1 (Atom or Molecule or MultiMoleculeParticle)] and [hasPartStuff exactly 1 (PureBulk or StructuredPureStuff or UnstructuredPureStuff)] and [hasStuffDistribution exactly 1 EvenDistribution])",
                        "CQ": [
                            "Is PureStuff equivalent to the intersection of Stuff, entities with exactly one granule type being Atom, Molecule, or MultiMoleculeParticle, exactly one part being PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and exactly one even distribution of matter?",
                            "Does every PureStuff instance necessarily have one and only one granule type from Atom, Molecule, or MultiMoleculeParticle, one and only one component from PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and exactly one even stuff distribution?",
                            "Can PureStuff be completely characterized as Stuff with a single granule type chosen from Atom, Molecule, or MultiMoleculeParticle, a single part chosen from PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and one even distribution?"
                        ]
                    }
                ],
                "removed axiom": "PureStuff equivalentClass (Stuff and [hasGranuleType exactly 1 (Atom or Molecule or MultiMoleculeParticle)] and [hasPartStuff exactly 1 (PureBulk or StructuredPureStuff or UnstructuredPureStuff)] and [hasStuffDistribution exactly 1 EvenDistribution])",
                "Target CQ": [
                    "Is PureStuff equivalent to the intersection of Stuff, entities with exactly one granule type being Atom, Molecule, or MultiMoleculeParticle, exactly one part being PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and exactly one even distribution of matter?",
                    "Does every PureStuff instance necessarily have one and only one granule type from Atom, Molecule, or MultiMoleculeParticle, one and only one component from PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and exactly one even stuff distribution?",
                    "Can PureStuff be completely characterized as Stuff with a single granule type chosen from Atom, Molecule, or MultiMoleculeParticle, a single part chosen from PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and one even distribution?"
                ],
                "Valid CQ": [
                    "Is Stuff a more general category that includes PureStuff?",
                    "Which entities are categorized as more specific instances under Stuff, such as PureStuff?",
                    "To what broader groupings does PureStuff logically belong?"
                ],
                "type": "Type1"
            },
            "Solution": {
                "axiom": {
                    "subClassOf": [
                        "HomogeneousMixture"
                    ],
                    "equivalentClass": []
                },
                "description": "Solution is formally defined as a subclass of HomogeneousMixture, characterized by a uniform composition throughout. Equivalent class axioms specify that a Solution consists of at least two “stuffs”: one acting as a Solute and one as a Solvent, each of which is inhered by some HomogeneousMixture and has a granule type restricted to Atom, Ion, or Molecule. Furthermore, a Solution must have a number of phases exactly equal to one. The class captures chemical systems where the mixing occurs at the molecular level, resulting in homogeneity; this applies to solutions in all physical states (solid, liquid, or gas). The definition intentionally omits \"dilute solution\" due to the lack of a clear-cut quantitative threshold.",
                "CQ": [
                    {
                        "axiom": "Solution subClassOf HomogeneousMixture",
                        "CQ": [
                            "Does Solution fall under the general group of HomogeneousMixture?",
                            "Which specific classes are categorized as HomogeneousMixture, such as Solution?",
                            "To what broader mixture types does Solution belong within the ontology?"
                        ]
                    },
                    {
                        "axiom": "Solution equivalentClass (HomogeneousMixture and [hasPartStuff some (Stuff and [inverseOf srInheresIn some Solute] and [hasGranuleType only (Atom or Ion or Molecule)])] and [hasPartStuff some (Stuff and [inverseOf srInheresIn some Solvent] and [hasGranuleType only (Atom or Ion or Molecule)])] and [hasNrOfPhase some DatatypeRestriction(xsd:int minInclusive 2)])",
                        "CQ": [
                            "Is a Solution necessarily defined as a homogeneous mixture that includes at least one part composed of a Solute and another part composed of a Solvent, both being stuff with granule types restricted to atom, ion, or molecule and having at least two phases?",
                            "Does the definition of Solution require its parts to consist solely of stuff inhering in solute or solvent, each having only granule types atom, ion, or molecule?",
                            "Can Solution be characterized as the intersection of HomogeneousMixture and entities possessing both solute-stuff and solvent-stuff components—each constrained by granule type and a minimum number of phases?"
                        ]
                    }
                ],
                "removed axiom": "Solution equivalentClass (HomogeneousMixture and [hasPartStuff some (Stuff and [inverseOf srInheresIn some Solute] and [hasGranuleType only (Atom or Ion or Molecule)])] and [hasPartStuff some (Stuff and [inverseOf srInheresIn some Solvent] and [hasGranuleType only (Atom or Ion or Molecule)])] and [hasNrOfPhase some DatatypeRestriction(xsd:int minInclusive 2)])",
                "Target CQ": [
                    "Is a Solution necessarily defined as a homogeneous mixture that includes at least one part composed of a Solute and another part composed of a Solvent, both being stuff with granule types restricted to atom, ion, or molecule and having at least two phases?",
                    "Does the definition of Solution require its parts to consist solely of stuff inhering in solute or solvent, each having only granule types atom, ion, or molecule?",
                    "Can Solution be characterized as the intersection of HomogeneousMixture and entities possessing both solute-stuff and solvent-stuff components—each constrained by granule type and a minimum number of phases?"
                ],
                "Valid CQ": [
                    "Does Solution fall under the general group of HomogeneousMixture?",
                    "Which specific classes are categorized as HomogeneousMixture, such as Solution?",
                    "To what broader mixture types does Solution belong within the ontology?"
                ],
                "type": "Type1"
            },
            "Solute": {
                "axiom": {
                    "subClassOf": [
                        "StuffRole"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[inverseOf solutionFormingRelation some Solvent]"
                    ]
                },
                "description": "Solute is defined as a subclass of StuffRole and is explicitly disjoint from Solvent, ensuring that no entity can simultaneously be both a Solute and a Solvent. Formally, every Solute is related through the inverse of solutionFormingRelation to some Solvent, indicating its essential role in solution formation. Conceptually, a Solute is a substance that is dissolved in another substance (the Solvent).",
                "CQ": [
                    {
                        "axiom": "Solute subClassOf StuffRole",
                        "CQ": [
                            "Is Solute categorized as a type of StuffRole?",
                            "Which entities are classified as subtypes under StuffRole, such as Solute?",
                            "What broader role-based classes encompass Solute as an instance?"
                        ]
                    },
                    {
                        "axiom": "Solute disjointWith Solvent",
                        "CQ": [
                            "What is the formal distinction between Solute and Solvent in the ontology?",
                            "Is there any entity that can belong to both the Solute and Solvent classes?",
                            "Which entities or classes are explicitly specified as disjoint with Solute?"
                        ]
                    },
                    {
                        "axiom": "Solute propertyRestrictions [inverseOf solutionFormingRelation some Solvent]",
                        "CQ": [
                            "Is every Solute necessarily involved in at least one solutionFormingRelation with a Solvent?",
                            "Must a Solute participate in the inverse of solutionFormingRelation with some entity that is a Solvent?",
                            "Does being a Solute require the existence of a related Solvent via the solutionFormingRelation property?"
                        ]
                    }
                ],
                "removed axiom": "Solute disjointWith Solvent",
                "Target CQ": [
                    "What is the formal distinction between Solute and Solvent in the ontology?",
                    "Is there any entity that can belong to both the Solute and Solvent classes?",
                    "Which entities or classes are explicitly specified as disjoint with Solute?"
                ],
                "Valid CQ": [
                    "Is Solute categorized as a type of StuffRole?",
                    "Which entities are classified as subtypes under StuffRole, such as Solute?",
                    "What broader role-based classes encompass Solute as an instance?",
                    "Is every Solute necessarily involved in at least one solutionFormingRelation with a Solvent?",
                    "Must a Solute participate in the inverse of solutionFormingRelation with some entity that is a Solvent?",
                    "Does being a Solute require the existence of a related Solvent via the solutionFormingRelation property?"
                ],
                "type": "Type1"
            },
            "Emulsion": {
                "axiom": {
                    "subClassOf": [],
                    "equivalentClass": [
                        "(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])"
                    ]
                },
                "description": "Emulsion is defined as a subclass of DispersionColloid and is equivalent to a DispersionColloid with exactly one liquid in the continuous medium and exactly one liquid in the dispersed phase. The class axiom enforces that an emulsion must have two distinct parts: a liquid continuous medium and a liquid dispersed phase. Examples include milk, mayonnaise, and hand cream, where both the continuous and dispersed phases are liquids. This classification captures the key characteristic of emulsions as colloidal mixtures of two immiscible liquids.",
                "CQ": [
                    {
                        "axiom": "Emulsion subClassOf DispersionColloid",
                        "CQ": [
                            "Is Emulsion classified under the broader category of DispersionColloid?",
                            "Which more specific types are contained within DispersionColloid, including Emulsion?",
                            "What higher-level categories does Emulsion belong to within the context of colloids?"
                        ]
                    },
                    {
                        "axiom": "Emulsion equivalentClass (DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])",
                        "CQ": [
                            "Does an Emulsion necessarily consist of exactly one part that is a liquid state Stuff inhering in the ContinuousMedium and exactly one part that is a liquid state Stuff inhering in the DispersedPhase?",
                            "Is Emulsion logically equivalent to the intersection of DispersionColloid and those having exactly one liquid Stuff in the ContinuousMedium and exactly one liquid Stuff in the DispersedPhase?",
                            "Can Emulsion be fully defined as a DispersionColloid with two and only two parts: each a liquid Stuff, where one part inheres in the ContinuousMedium and the other in the DispersedPhase?"
                        ]
                    }
                ],
                "removed axiom": "Emulsion subClassOf DispersionColloid",
                "Target CQ": [
                    "Is Emulsion classified under the broader category of DispersionColloid?",
                    "Which more specific types are contained within DispersionColloid, including Emulsion?",
                    "What higher-level categories does Emulsion belong to within the context of colloids?"
                ],
                "Valid CQ": [
                    "Does an Emulsion necessarily consist of exactly one part that is a liquid state Stuff inhering in the ContinuousMedium and exactly one part that is a liquid state Stuff inhering in the DispersedPhase?",
                    "Is Emulsion logically equivalent to the intersection of DispersionColloid and those having exactly one liquid Stuff in the ContinuousMedium and exactly one liquid Stuff in the DispersedPhase?",
                    "Can Emulsion be fully defined as a DispersionColloid with two and only two parts: each a liquid Stuff, where one part inheres in the ContinuousMedium and the other in the DispersedPhase?"
                ],
                "type": "Type1"
            },
            "Gel": {
                "axiom": {
                    "subClassOf": [
                        "DispersionColloid"
                    ],
                    "equivalentClass": []
                },
                "description": "Gel is a subclass of DispersionColloid and is defined as a colloidal system consisting of exactly one solid continuous medium and exactly one liquid dispersed phase. This means that in a gel, the solid component forms a continuous network throughout the material, while the liquid is dispersed within it. Examples include agar, gelatin, and jelly. The class axioms ensure that any instance of Gel must have a solid state as the continuous medium and a liquid as the dispersed phase, formalizing its structural composition as described in the referenced sources.",
                "CQ": [
                    {
                        "axiom": "Gel subClassOf DispersionColloid",
                        "CQ": [
                            "Does Gel fall under the broader classification of DispersionColloid?",
                            "Which substances are classified as more specific instances of DispersionColloid, such as Gel?",
                            "What more general colloid categories does Gel conceptually fit into?"
                        ]
                    },
                    {
                        "axiom": "Gel equivalentClass (DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])])",
                        "CQ": [
                            "Must every Gel contain exactly one part that is a Stuff in the liquid state inhering in a DispersedPhase, and exactly one part that is a Stuff in the solid state inhering in a ContinuousMedium?",
                            "Is Gel equivalent to the intersection of DispersionColloid and those entities composed of precisely one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium?",
                            "Does the definition of Gel permit any hasPartStuff relationships other than one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium?"
                        ]
                    }
                ],
                "removed axiom": "Gel equivalentClass (DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])])",
                "Target CQ": [
                    "Must every Gel contain exactly one part that is a Stuff in the liquid state inhering in a DispersedPhase, and exactly one part that is a Stuff in the solid state inhering in a ContinuousMedium?",
                    "Is Gel equivalent to the intersection of DispersionColloid and those entities composed of precisely one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium?",
                    "Does the definition of Gel permit any hasPartStuff relationships other than one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium?"
                ],
                "Valid CQ": [
                    "Does Gel fall under the broader classification of DispersionColloid?",
                    "Which substances are classified as more specific instances of DispersionColloid, such as Gel?",
                    "What more general colloid categories does Gel conceptually fit into?"
                ],
                "type": "Type1"
            },
            "Sol": {
                "axiom": {
                    "subClassOf": [
                        "DispersionColloid"
                    ],
                    "equivalentClass": []
                },
                "description": "Sol is defined as a subclass of DispersionColloid, precisely characterized as a colloidal system consisting of exactly one liquid continuous medium and exactly one solid dispersed phase. The class axiom specifies that the system contains:  \n- one part (Stuff) in a liquid state inhering in the continuous medium, and  \n- one part (Stuff) in a solid state inhering in the dispersed phase.  \nThis structure excludes the possibility of additional types of states or phases within the sol. Typical examples include pigmented ink and blood, where solid particles are dispersed uniformly within a liquid medium.",
                "CQ": [
                    {
                        "axiom": "Sol subClassOf DispersionColloid",
                        "CQ": [
                            "Does Sol fall under the category of DispersionColloid?",
                            "Which specific types are encompassed by DispersionColloid, such as Sol?",
                            "What parent classes are associated with Sol in this context?"
                        ]
                    },
                    {
                        "axiom": "Sol equivalentClass (DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])",
                        "CQ": [
                            "Does every Sol necessarily include exactly one part that is Stuff with a liquid state inhering in a ContinuousMedium, and exactly one part that is Stuff with a solid state inhering in a DispersedPhase?",
                            "Is Sol equivalent to the intersection of DispersionColloid and those entities that have exactly one liquid-stated part in a continuous medium and exactly one solid-stated part in a dispersed phase?",
                            "Are all members of Sol precisely those DispersionColloid instances that possess one and only one liquid state part associated with a ContinuousMedium and one and only one solid state part associated with a DispersedPhase?"
                        ]
                    }
                ],
                "removed axiom": "Sol equivalentClass (DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])",
                "Target CQ": [
                    "Does every Sol necessarily include exactly one part that is Stuff with a liquid state inhering in a ContinuousMedium, and exactly one part that is Stuff with a solid state inhering in a DispersedPhase?",
                    "Is Sol equivalent to the intersection of DispersionColloid and those entities that have exactly one liquid-stated part in a continuous medium and exactly one solid-stated part in a dispersed phase?",
                    "Are all members of Sol precisely those DispersionColloid instances that possess one and only one liquid state part associated with a ContinuousMedium and one and only one solid state part associated with a DispersedPhase?"
                ],
                "Valid CQ": [
                    "Does Sol fall under the category of DispersionColloid?",
                    "Which specific types are encompassed by DispersionColloid, such as Sol?",
                    "What parent classes are associated with Sol in this context?"
                ],
                "type": "Type1"
            },
            "SolidFoam": {
                "axiom": {
                    "subClassOf": [
                        "DispersionColloid"
                    ],
                    "equivalentClass": []
                },
                "description": "SolidFoam is a subclass of DispersionColloid, characterized by having a solid as the continuous medium and a gas as the dispersed phase. Formally, each instance of SolidFoam consists of exactly one part that is a solid (constituting the continuous medium), and exactly one part that is a gas (constituting the dispersed phase). Examples include aerogel and styrofoam. This structure ensures that SolidFoam represents colloidal systems where gas is dispersed throughout a solid matrix.",
                "CQ": [
                    {
                        "axiom": "SolidFoam subClassOf DispersionColloid",
                        "CQ": [
                            "Is SolidFoam categorized as a more specific instance under DispersionColloid?",
                            "Which subclasses are encompassed by DispersionColloid, specifically including SolidFoam?",
                            "To which upper-level categories does SolidFoam conceptually correspond within colloidal classifications?"
                        ]
                    },
                    {
                        "axiom": "SolidFoam equivalentClass (DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])])",
                        "CQ": [
                            "Does every SolidFoam necessarily have exactly one part consisting of gas-state stuff inhering in a dispersed phase and exactly one part consisting of solid-state stuff inhering in a continuous medium?",
                            "Is SolidFoam equivalent to the intersection of DispersionColloid and those entities with one gaseous dispersed phase part and one solid continuous medium part?",
                            "Can SolidFoam be fully defined as a DispersionColloid with precisely one gas-state dispersed phase part and one solid-state continuous medium part?"
                        ]
                    }
                ],
                "removed axiom": "SolidFoam equivalentClass (DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])])",
                "Target CQ": [
                    "Does every SolidFoam necessarily have exactly one part consisting of gas-state stuff inhering in a dispersed phase and exactly one part consisting of solid-state stuff inhering in a continuous medium?",
                    "Is SolidFoam equivalent to the intersection of DispersionColloid and those entities with one gaseous dispersed phase part and one solid continuous medium part?",
                    "Can SolidFoam be fully defined as a DispersionColloid with precisely one gas-state dispersed phase part and one solid-state continuous medium part?"
                ],
                "Valid CQ": [
                    "Is SolidFoam categorized as a more specific instance under DispersionColloid?",
                    "Which subclasses are encompassed by DispersionColloid, specifically including SolidFoam?",
                    "To which upper-level categories does SolidFoam conceptually correspond within colloidal classifications?"
                ],
                "type": "Type1"
            },
            "HeterogeneousMixture": {
                "axiom": {
                    "subClassOf": [
                        "MixedStuff"
                    ],
                    "disjointWith": [],
                    "propertyRestrictions": [
                        "[hasGranuleType min 2 (Molecule or MultiMoleculeParticle)]",
                        "[hasPartStuff min 2 (MixedStuff or PureStuff)]",
                        "[hasStuffDistribution exactly 1 UnevenDistribution]"
                    ]
                },
                "description": "HeterogeneousMixture is a subclass of MixedStuff, formally disjoint from HomogeneousMixture, meaning no mixture can be both heterogeneous and homogeneous simultaneously. Members of this class are defined by having at least two different granule types (each being a Molecule or MultiMoleculeParticle) and consisting of a minimum of two distinct parts, each being either MixedStuff or PureStuff. Additionally, every HeterogeneousMixture exhibits exactly one instance of UnevenDistribution, ensuring that its components are not distributed uniformly. As described, a HeterogeneousMixture is a combination of different substances, often with visibly different particle sizes, which do not react chemically and can be separated by physical means (such as filtration). Unlike a homogeneous mixture, any portion of a heterogeneous mixture may differ in composition from the whole, unless special care is taken in selecting the portion.",
                "CQ": [
                    {
                        "axiom": "HeterogeneousMixture subClassOf MixedStuff",
                        "CQ": [
                            "Does HeterogeneousMixture fall under the broader classification of MixedStuff?",
                            "What are all the subclasses categorized within MixedStuff, including HeterogeneousMixture?",
                            "Which higher-level types does HeterogeneousMixture belong to in the ontology?"
                        ]
                    },
                    {
                        "axiom": "HeterogeneousMixture disjointWith HomogeneousMixture",
                        "CQ": [
                            "How are HeterogeneousMixture and HomogeneousMixture differentiated within the ontology?",
                            "Is any mixture classified as both HeterogeneousMixture and HomogeneousMixture simultaneously?",
                            "Which mixture types are specified as disjoint with HomogeneousMixture?"
                        ]
                    },
                    {
                        "axiom": "HeterogeneousMixture propertyRestrictions [hasGranuleType min 2 (Molecule or MultiMoleculeParticle)]",
                        "CQ": [
                            "Does a HeterogeneousMixture always contain at least two types of granule that are classified as either Molecule or MultiMoleculeParticle?",
                            "Is it possible for a HeterogeneousMixture to have fewer than two Molecule or MultiMoleculeParticle granule types?",
                            "Are HeterogeneousMixtures defined by the presence of a minimum of two granule types, limited to the categories of Molecule and MultiMoleculeParticle?"
                        ]
                    },
                    {
                        "axiom": "HeterogeneousMixture propertyRestrictions [hasPartStuff min 2 (MixedStuff or PureStuff)]",
                        "CQ": [
                            "Is it required for a HeterogeneousMixture to contain at least two components classified as either MixedStuff or PureStuff?",
                            "Can a HeterogeneousMixture exist if it has fewer than two parts that are either MixedStuff or PureStuff?",
                            "Does every instance of HeterogeneousMixture necessarily consist of multiple parts, each falling under MixedStuff or PureStuff?"
                        ]
                    },
                    {
                        "axiom": "HeterogeneousMixture propertyRestrictions [hasStuffDistribution exactly 1 UnevenDistribution]",
                        "CQ": [
                            "Must every HeterogeneousMixture have exactly one distribution of its constituents classified as UnevenDistribution?",
                            "Is it possible for a HeterogeneousMixture to have more than one or less than one hasStuffDistribution relationship to UnevenDistribution?",
                            "Does the definition of HeterogeneousMixture ensure it cannot have hasStuffDistribution to any type other than a single UnevenDistribution?"
                        ]
                    }
                ],
                "removed axiom": "HeterogeneousMixture disjointWith HomogeneousMixture",
                "Target CQ": [
                    "How are HeterogeneousMixture and HomogeneousMixture differentiated within the ontology?",
                    "Is any mixture classified as both HeterogeneousMixture and HomogeneousMixture simultaneously?",
                    "Which mixture types are specified as disjoint with HomogeneousMixture?"
                ],
                "Valid CQ": [
                    "Does HeterogeneousMixture fall under the broader classification of MixedStuff?",
                    "What are all the subclasses categorized within MixedStuff, including HeterogeneousMixture?",
                    "Which higher-level types does HeterogeneousMixture belong to in the ontology?",
                    "Does a HeterogeneousMixture always contain at least two types of granule that are classified as either Molecule or MultiMoleculeParticle?",
                    "Is it possible for a HeterogeneousMixture to have fewer than two Molecule or MultiMoleculeParticle granule types?",
                    "Are HeterogeneousMixtures defined by the presence of a minimum of two granule types, limited to the categories of Molecule and MultiMoleculeParticle?",
                    "Is it required for a HeterogeneousMixture to contain at least two components classified as either MixedStuff or PureStuff?",
                    "Can a HeterogeneousMixture exist if it has fewer than two parts that are either MixedStuff or PureStuff?",
                    "Does every instance of HeterogeneousMixture necessarily consist of multiple parts, each falling under MixedStuff or PureStuff?",
                    "Must every HeterogeneousMixture have exactly one distribution of its constituents classified as UnevenDistribution?",
                    "Is it possible for a HeterogeneousMixture to have more than one or less than one hasStuffDistribution relationship to UnevenDistribution?",
                    "Does the definition of HeterogeneousMixture ensure it cannot have hasStuffDistribution to any type other than a single UnevenDistribution?"
                ],
                "type": "Type1"
            },
            "Piece": {
                "axiom": {
                    "subClassOf": [],
                    "propertyRestrictions": [
                        "[isSelfContainedScatteredPortionOf some AmountOfStuff]"
                    ]
                },
                "description": "Piece is defined as a subclass of Portion, characterized by the axiom that it is a self-contained, scattered portion of some AmountOfStuff. According to its description, \"Piece\" represents discrete, self-contained amounts—such as slices or lumps—that are distinct from the whole but still derive from it. This class formalization ensures that any instance of Piece must be both a Portion and a self-contained segment of an AmountOfStuff, supporting modeling of individual fragments or divisions of a larger substance.",
                "CQ": [
                    {
                        "axiom": "Piece subClassOf Portion",
                        "CQ": [
                            "Is every Piece an example of a Portion?",
                            "Which types fall under the broader class of Portion, such as Piece?",
                            "What are the more general categories that include Piece?"
                        ]
                    },
                    {
                        "axiom": "Piece propertyRestrictions [isSelfContainedScatteredPortionOf some AmountOfStuff]",
                        "CQ": [
                            "Is every Piece necessarily a self-contained scattered portion of some AmountOfStuff?",
                            "Can a Piece exist without being a self-contained scattered portion of an AmountOfStuff?",
                            "Are there any instances where a Piece is not associated through isSelfContainedScatteredPortionOf with an AmountOfStuff?"
                        ]
                    }
                ],
                "removed axiom": "Piece subClassOf Portion",
                "Target CQ": [
                    "Is every Piece an example of a Portion?",
                    "Which types fall under the broader class of Portion, such as Piece?",
                    "What are the more general categories that include Piece?"
                ],
                "Valid CQ": [
                    "Is every Piece necessarily a self-contained scattered portion of some AmountOfStuff?",
                    "Can a Piece exist without being a self-contained scattered portion of an AmountOfStuff?",
                    "Are there any instances where a Piece is not associated through isSelfContainedScatteredPortionOf with an AmountOfStuff?"
                ],
                "type": "Type1"
            },
            "PureBulk": {
                "axiom": {
                    "subClassOf": [
                        "PureStuff"
                    ],
                    "equivalentClass": []
                },
                "description": "PureBulk is a subclass of PureStuff, defined as equivalent to those entities that consist of PureStuff whose granule type is exclusively and exactly one type of MultiMoleculeParticle. This means all granules within a PureBulk are restricted to a single specified kind of multi-molecular particle, differentiating it from StructuredPureStuff and UnstructuredPureStuff where basis types may vary. Typical examples include a silo of soy beans, a packet of tea biscuits, or a bag of cashew nuts, where each bulk contains only one type of multi-molecular particulate basis.",
                "CQ": [
                    {
                        "axiom": "PureBulk subClassOf PureStuff",
                        "CQ": [
                            "Is PureBulk classified as a type of PureStuff?",
                            "Which entities are subclasses of PureStuff, such as PureBulk?",
                            "What are the broader classes that encompass PureBulk?"
                        ]
                    },
                    {
                        "axiom": "PureBulk equivalentClass (PureStuff and [hasGranuleType only MultiMoleculeParticle] and [hasGranuleType exactly 1 MultiMoleculeParticle])",
                        "CQ": [
                            "Is PureBulk equivalent to the class of PureStuff that has exactly one granule type, and that granule type is only MultiMoleculeParticle?",
                            "Does every instance of PureBulk necessarily have only one granule type, which must be a MultiMoleculeParticle, and must also be PureStuff?",
                            "Are all PureBulk entities strictly those PureStuff individuals with hasGranuleType limited to exactly one occurrence of MultiMoleculeParticle?"
                        ]
                    }
                ],
                "removed axiom": "PureBulk equivalentClass (PureStuff and [hasGranuleType only MultiMoleculeParticle] and [hasGranuleType exactly 1 MultiMoleculeParticle])",
                "Target CQ": [
                    "Is PureBulk equivalent to the class of PureStuff that has exactly one granule type, and that granule type is only MultiMoleculeParticle?",
                    "Does every instance of PureBulk necessarily have only one granule type, which must be a MultiMoleculeParticle, and must also be PureStuff?",
                    "Are all PureBulk entities strictly those PureStuff individuals with hasGranuleType limited to exactly one occurrence of MultiMoleculeParticle?"
                ],
                "Valid CQ": [
                    "Is PureBulk classified as a type of PureStuff?",
                    "Which entities are subclasses of PureStuff, such as PureBulk?",
                    "What are the broader classes that encompass PureBulk?"
                ],
                "type": "Type1"
            },
            "SolidHeterogeneousMixture": {
                "axiom": {
                    "subClassOf": [],
                    "equivalentClass": [
                        "(HeterogeneousMixture and [hasPartStuff min 2 (Stuff and [hasState some Solid])])"
                    ]
                },
                "description": "SolidHeterogeneousMixture is defined as a subclass of HeterogeneousMixture and is equivalent to a HeterogeneousMixture that contains at least two distinct parts, each of which is a substance (Stuff) present in the solid state. It represents mixtures where the component materials remain physically separate and are not homogenized; for example, wood, which consists of compartmentalized solid components such as cellulose, hemicellulose, lignin, and various extractives (plant hormones, waxes, terpenes, etc.). This class characterizes solid-phase systems where heterogeneity is maintained at the physical or structural level.",
                "CQ": [
                    {
                        "axiom": "SolidHeterogeneousMixture subClassOf HeterogeneousMixture",
                        "CQ": [
                            "Is SolidHeterogeneousMixture categorized under the broader class of HeterogeneousMixture?",
                            "Which mixture types are subclasses of HeterogeneousMixture, such as SolidHeterogeneousMixture?",
                            "What are the more general classes that encompass SolidHeterogeneousMixture?"
                        ]
                    },
                    {
                        "axiom": "SolidHeterogeneousMixture equivalentClass (HeterogeneousMixture and [hasPartStuff min 2 (Stuff and [hasState some Solid])])",
                        "CQ": [
                            "Is every SolidHeterogeneousMixture necessarily a HeterogeneousMixture that contains at least two parts composed of Stuff in the solid state?",
                            "Is the class SolidHeterogeneousMixture logically equivalent to the intersection of HeterogeneousMixture and mixtures having a minimum of two solid-state Stuff components?",
                            "Can SolidHeterogeneousMixture be defined as a HeterogeneousMixture with at least two constituent parts which are solid kinds of Stuff?"
                        ]
                    }
                ],
                "removed axiom": "SolidHeterogeneousMixture subClassOf HeterogeneousMixture",
                "Target CQ": [
                    "Is SolidHeterogeneousMixture categorized under the broader class of HeterogeneousMixture?",
                    "Which mixture types are subclasses of HeterogeneousMixture, such as SolidHeterogeneousMixture?",
                    "What are the more general classes that encompass SolidHeterogeneousMixture?"
                ],
                "Valid CQ": [
                    "Is every SolidHeterogeneousMixture necessarily a HeterogeneousMixture that contains at least two parts composed of Stuff in the solid state?",
                    "Is the class SolidHeterogeneousMixture logically equivalent to the intersection of HeterogeneousMixture and mixtures having a minimum of two solid-state Stuff components?",
                    "Can SolidHeterogeneousMixture be defined as a HeterogeneousMixture with at least two constituent parts which are solid kinds of Stuff?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "hasState": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "State"
                    ],
                    "subPropertyOf": [
                        "owl:topObjectProperty"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"hasState\" is an object property with no specifically defined characteristics and no inverse property. Its domain is restricted to \"PhysicalEndurant\" entities, and its range is limited to instances of \"State\". It is a sub-property of \"owl:topObjectProperty\", indicating general applicability among object properties. This property is used to relate physical endurants to their corresponding states.",
                "CQ": [
                    {
                        "axiom": "hasState domain PhysicalEndurant",
                        "CQ": [
                            "Can the property 'hasState' be associated with entities that are not PhysicalEndurants?",
                            "Are all entities with which 'hasState' is used necessarily of type PhysicalEndurant?",
                            "Which types of individuals can serve as the subject for the 'hasState' property?"
                        ]
                    },
                    {
                        "axiom": "hasState range State",
                        "CQ": [
                            "Can the property 'hasState' have a range other than State?",
                            "Is every object associated via 'hasState' necessarily a State?",
                            "What types of entities can appear as the value of the property 'hasState'?"
                        ]
                    },
                    {
                        "axiom": "hasState subPropertyOf owl:topObjectProperty",
                        "CQ": [
                            "Is hasState considered a subtype of owl:topObjectProperty?",
                            "What superproperties are associated with hasState in the property hierarchy?",
                            "Does hasState directly fall under the domain of owl:topObjectProperty?"
                        ]
                    }
                ],
                "removed axiom": "hasState domain PhysicalEndurant",
                "Target CQ": [
                    "Can the property 'hasState' be associated with entities that are not PhysicalEndurants?",
                    "Are all entities with which 'hasState' is used necessarily of type PhysicalEndurant?",
                    "Which types of individuals can serve as the subject for the 'hasState' property?"
                ],
                "Valid CQ": [
                    "Can the property 'hasState' have a range other than State?",
                    "Is every object associated via 'hasState' necessarily a State?",
                    "What types of entities can appear as the value of the property 'hasState'?",
                    "Is hasState considered a subtype of owl:topObjectProperty?",
                    "What superproperties are associated with hasState in the property hierarchy?",
                    "Does hasState directly fall under the domain of owl:topObjectProperty?"
                ],
                "type": "Type1"
            },
            "hasSelfContainedScatteredPortion": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "scatterPortion"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"hasSelfContainedScatteredPortion\" relates to entities such as lumps, puddles, slices, or other discrete pieces. It has no explicitly defined domain or range restrictions and no defined characteristics. It is a sub-property of \"scatterPortion\" and has \"isSelfContainedScatteredPortionOf\" as its inverse property.",
                "CQ": [
                    {
                        "axiom": "hasSelfContainedScatteredPortion domain None",
                        "CQ": [
                            "What entities can act as the domain for the property 'hasSelfContainedScatteredPortion'?",
                            "Is it correct that 'hasSelfContainedScatteredPortion' does not have a specified domain?",
                            "Can 'hasSelfContainedScatteredPortion' relate subjects of any type, or are there restrictions?"
                        ]
                    },
                    {
                        "axiom": "hasSelfContainedScatteredPortion range None",
                        "CQ": [
                            "What can be the range of the property 'hasSelfContainedScatteredPortion'?",
                            "Is it correct that 'hasSelfContainedScatteredPortion' does not have a defined range?",
                            "Can 'hasSelfContainedScatteredPortion' relate to any type of object due to its unspecified range?"
                        ]
                    },
                    {
                        "axiom": "hasSelfContainedScatteredPortion subPropertyOf scatterPortion",
                        "CQ": [
                            "Is hasSelfContainedScatteredPortion considered a subproperty of scatterPortion?",
                            "Which properties are identified as subproperties of scatterPortion?",
                            "What are the direct superproperties of hasSelfContainedScatteredPortion within the ontology?"
                        ]
                    },
                    {
                        "axiom": "hasSelfContainedScatteredPortion inverseOf isSelfContainedScatteredPortionOf",
                        "CQ": [
                            "What is the connection between 'hasSelfContainedScatteredPortion' and 'isSelfContainedScatteredPortionOf' as defined in the ontology?",
                            "If entity A has a self-contained scattered portion B, does it follow that B is a self-contained scattered portion of A, according to the ontology?",
                            "Which property acts as the inverse of 'hasSelfContainedScatteredPortion'?"
                        ]
                    }
                ],
                "removed axiom": "hasSelfContainedScatteredPortion inverseOf isSelfContainedScatteredPortionOf",
                "Target CQ": [
                    "What is the connection between 'hasSelfContainedScatteredPortion' and 'isSelfContainedScatteredPortionOf' as defined in the ontology?",
                    "If entity A has a self-contained scattered portion B, does it follow that B is a self-contained scattered portion of A, according to the ontology?",
                    "Which property acts as the inverse of 'hasSelfContainedScatteredPortion'?"
                ],
                "Valid CQ": [
                    "What entities can act as the domain for the property 'hasSelfContainedScatteredPortion'?",
                    "Is it correct that 'hasSelfContainedScatteredPortion' does not have a specified domain?",
                    "Can 'hasSelfContainedScatteredPortion' relate subjects of any type, or are there restrictions?",
                    "What can be the range of the property 'hasSelfContainedScatteredPortion'?",
                    "Is it correct that 'hasSelfContainedScatteredPortion' does not have a defined range?",
                    "Can 'hasSelfContainedScatteredPortion' relate to any type of object due to its unspecified range?",
                    "Is hasSelfContainedScatteredPortion considered a subproperty of scatterPortion?",
                    "Which properties are identified as subproperties of scatterPortion?",
                    "What are the direct superproperties of hasSelfContainedScatteredPortion within the ontology?"
                ],
                "type": "Type1"
            },
            "hasPartStuff": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "hasProperPart"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"hasPartStuff\" lacks explicit domain and range constraints, and does not possess any special property characteristics. It is specified as a subproperty of \"hasProperPart\" and is the inverse of \"stuffPartOf\". Notably, its use implies that the related entities are distinct kinds of \"stuffs\", as the current description highlights a requirement for distinction between the entities involved.",
                "CQ": [
                    {
                        "axiom": "hasPartStuff domain None",
                        "CQ": [
                            "Is it correct that the property 'hasPartStuff' does not have a specified domain?",
                            "What types of entities can act as subjects for the property 'hasPartStuff'?",
                            "Can 'hasPartStuff' be used with any class as its subject, given the lack of a defined domain?"
                        ]
                    },
                    {
                        "axiom": "hasPartStuff range None",
                        "CQ": [
                            "What can be the range of the property 'hasPartStuff'?",
                            "Is it correct that 'hasPartStuff' does not have a defined range?",
                            "Can entities of any type serve as the object of the 'hasPartStuff' property?"
                        ]
                    },
                    {
                        "axiom": "hasPartStuff subPropertyOf hasProperPart",
                        "CQ": [
                            "Is every usage of the hasPartStuff property also valid as an instance of hasProperPart?",
                            "Does the ontology consider hasProperPart to be a superproperty of hasPartStuff?",
                            "Which subproperties are classified under hasProperPart within the ontology?"
                        ]
                    },
                    {
                        "axiom": "hasPartStuff inverseOf stuffPartOf",
                        "CQ": [
                            "What is the inverse relationship established between ‘hasPartStuff’ and ‘stuffPartOf’ in the ontology?",
                            "If entity A has a part-stuff B via ‘hasPartStuff’, does that indicate that B is related to A through ‘stuffPartOf’?",
                            "Which object property is declared as the inverse of ‘hasPartStuff’ in this ontology?"
                        ]
                    }
                ],
                "removed axiom": "hasPartStuff inverseOf stuffPartOf",
                "Target CQ": [
                    "What is the inverse relationship established between ‘hasPartStuff’ and ‘stuffPartOf’ in the ontology?",
                    "If entity A has a part-stuff B via ‘hasPartStuff’, does that indicate that B is related to A through ‘stuffPartOf’?",
                    "Which object property is declared as the inverse of ‘hasPartStuff’ in this ontology?"
                ],
                "Valid CQ": [
                    "Is it correct that the property 'hasPartStuff' does not have a specified domain?",
                    "What types of entities can act as subjects for the property 'hasPartStuff'?",
                    "Can 'hasPartStuff' be used with any class as its subject, given the lack of a defined domain?",
                    "What can be the range of the property 'hasPartStuff'?",
                    "Is it correct that 'hasPartStuff' does not have a defined range?",
                    "Can entities of any type serve as the object of the 'hasPartStuff' property?",
                    "Is every usage of the hasPartStuff property also valid as an instance of hasProperPart?",
                    "Does the ontology consider hasProperPart to be a superproperty of hasPartStuff?",
                    "Which subproperties are classified under hasProperPart within the ontology?"
                ],
                "type": "Type1"
            },
            "hasContainedScatteredPortion": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "scatterPortion"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"hasContainedScatteredPortion\" is used to relate a container to scattered portions necessarily contained within it (e.g., water in a glass). It has no explicit domain or range restrictions and does not declare any specific property characteristics. It is a sub-property of \"scatterPortion\" and has \"isContainedScatteredPortionOf\" as its inverse property.",
                "CQ": [
                    {
                        "axiom": "hasContainedScatteredPortion domain None",
                        "CQ": [
                            "What can be the domain of the property 'hasContainedScatteredPortion'?",
                            "Is it correct that 'hasContainedScatteredPortion' does not have a specified domain?",
                            "Can entities other than those explicitly defined be subjects of 'hasContainedScatteredPortion'?"
                        ]
                    },
                    {
                        "axiom": "hasContainedScatteredPortion range None",
                        "CQ": [
                            "What can be the range of the property 'hasContainedScatteredPortion'?",
                            "Is it correct that 'hasContainedScatteredPortion' does not have a specified range?",
                            "Can any type of entity appear as the object of the property 'hasContainedScatteredPortion'?"
                        ]
                    },
                    {
                        "axiom": "hasContainedScatteredPortion subPropertyOf scatterPortion",
                        "CQ": [
                            "Is hasContainedScatteredPortion defined as a subproperty of scatterPortion?",
                            "Which properties are subproperties of scatterPortion within the ontology?",
                            "Does using hasContainedScatteredPortion ensure the relationship also satisfies the scatterPortion property?"
                        ]
                    },
                    {
                        "axiom": "hasContainedScatteredPortion inverseOf isContainedScatteredPortionOf",
                        "CQ": [
                            "In what way are the properties 'hasContainedScatteredPortion' and 'isContainedScatteredPortionOf' related in the ontology?",
                            "If an entity A hasContainedScatteredPortion B, does it follow that B isContainedScatteredPortionOf A?",
                            "Which property is modeled as the inverse of 'hasContainedScatteredPortion' in this ontology?"
                        ]
                    }
                ],
                "removed axiom": "hasContainedScatteredPortion inverseOf isContainedScatteredPortionOf",
                "Target CQ": [
                    "In what way are the properties 'hasContainedScatteredPortion' and 'isContainedScatteredPortionOf' related in the ontology?",
                    "If an entity A hasContainedScatteredPortion B, does it follow that B isContainedScatteredPortionOf A?",
                    "Which property is modeled as the inverse of 'hasContainedScatteredPortion' in this ontology?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'hasContainedScatteredPortion'?",
                    "Is it correct that 'hasContainedScatteredPortion' does not have a specified domain?",
                    "Can entities other than those explicitly defined be subjects of 'hasContainedScatteredPortion'?",
                    "What can be the range of the property 'hasContainedScatteredPortion'?",
                    "Is it correct that 'hasContainedScatteredPortion' does not have a specified range?",
                    "Can any type of entity appear as the object of the property 'hasContainedScatteredPortion'?",
                    "Is hasContainedScatteredPortion defined as a subproperty of scatterPortion?",
                    "Which properties are subproperties of scatterPortion within the ontology?",
                    "Does using hasContainedScatteredPortion ensure the relationship also satisfies the scatterPortion property?"
                ],
                "type": "Type1"
            },
            "partOf": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"partOf\" is defined as a transitive property, indicating that if entity A is part of B, and B is part of C, then A is part of C. No specific domain or range restrictions are imposed. It has no super-properties or explicitly defined inverse property.",
                "CQ": [
                    {
                        "axiom": "partOf characteristics Transitive",
                        "CQ": [
                            "Is partOf a transitive property, such that if an entity is part of a second entity, and the second is part of a third, the first entity is part of the third?",
                            "Can the partOf property infer that if object A is part of object B, and object B is part of object C, then object A is part of object C?",
                            "Does the ontology require partOf to satisfy the transitive characteristic over related entities?"
                        ]
                    },
                    {
                        "axiom": "partOf domain None",
                        "CQ": [
                            "What kinds of entities can appear as the subject of the property 'partOf'?",
                            "Is it correct that the property 'partOf' does not have a specified domain?",
                            "Can 'partOf' be used with any class as its subject or are there restrictions?"
                        ]
                    },
                    {
                        "axiom": "partOf range None",
                        "CQ": [
                            "What can be the range of the property 'partOf'?",
                            "Is it correct that 'partOf' has no specified range?",
                            "Can 'partOf' relate to objects of any type as its target?"
                        ]
                    }
                ],
                "removed axiom": "partOf characteristics Transitive",
                "Target CQ": [
                    "Is partOf a transitive property, such that if an entity is part of a second entity, and the second is part of a third, the first entity is part of the third?",
                    "Can the partOf property infer that if object A is part of object B, and object B is part of object C, then object A is part of object C?",
                    "Does the ontology require partOf to satisfy the transitive characteristic over related entities?"
                ],
                "Valid CQ": [
                    "What kinds of entities can appear as the subject of the property 'partOf'?",
                    "Is it correct that the property 'partOf' does not have a specified domain?",
                    "Can 'partOf' be used with any class as its subject or are there restrictions?",
                    "What can be the range of the property 'partOf'?",
                    "Is it correct that 'partOf' has no specified range?",
                    "Can 'partOf' relate to objects of any type as its target?"
                ],
                "type": "Type1"
            },
            "contiguousPortion": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "hasProperPart"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"contiguousPortion\" is defined as a sub-property of \"hasProperPart\" with no explicitly specified domain or range restrictions. It has no declared characteristics. The property has an inverse, \"isContiguousPortionOf,\" indicating a bidirectional relationship. This property is intended to relate an entity to one of its proper parts that is contiguous.",
                "CQ": [
                    {
                        "axiom": "contiguousPortion domain None",
                        "CQ": [
                            "What types of entities could serve as the domain for the property 'contiguousPortion'?",
                            "Is it correct that the property 'contiguousPortion' is defined without any domain?",
                            "Can 'contiguousPortion' relate to any subject, or should its domain be restricted?"
                        ]
                    },
                    {
                        "axiom": "contiguousPortion range None",
                        "CQ": [
                            "Can 'contiguousPortion' be used with any type of value as its object?",
                            "Is it correct that the property 'contiguousPortion' does not specify a range?",
                            "What types of entities are permissible as the range for 'contiguousPortion'?"
                        ]
                    },
                    {
                        "axiom": "contiguousPortion subPropertyOf hasProperPart",
                        "CQ": [
                            "Is contiguousPortion always used as a specific type of hasProperPart property?",
                            "Which properties are classified as subproperties under hasProperPart, including contiguousPortion?",
                            "Does every use of contiguousPortion indicate the existence of a proper part as defined by hasProperPart?"
                        ]
                    },
                    {
                        "axiom": "contiguousPortion inverseOf isContiguousPortionOf",
                        "CQ": [
                            "How are the object properties ‘contiguousPortion’ and ‘isContiguousPortionOf’ interconnected in the ontology?",
                            "If entity A is linked to entity B via ‘contiguousPortion’, does that entail that B is related to A through ‘isContiguousPortionOf’?",
                            "What object property is defined as the inverse of ‘contiguousPortion’?"
                        ]
                    }
                ],
                "removed axiom": "contiguousPortion inverseOf isContiguousPortionOf",
                "Target CQ": [
                    "How are the object properties ‘contiguousPortion’ and ‘isContiguousPortionOf’ interconnected in the ontology?",
                    "If entity A is linked to entity B via ‘contiguousPortion’, does that entail that B is related to A through ‘isContiguousPortionOf’?",
                    "What object property is defined as the inverse of ‘contiguousPortion’?"
                ],
                "Valid CQ": [
                    "What types of entities could serve as the domain for the property 'contiguousPortion'?",
                    "Is it correct that the property 'contiguousPortion' is defined without any domain?",
                    "Can 'contiguousPortion' relate to any subject, or should its domain be restricted?",
                    "Can 'contiguousPortion' be used with any type of value as its object?",
                    "Is it correct that the property 'contiguousPortion' does not specify a range?",
                    "What types of entities are permissible as the range for 'contiguousPortion'?",
                    "Is contiguousPortion always used as a specific type of hasProperPart property?",
                    "Which properties are classified as subproperties under hasProperPart, including contiguousPortion?",
                    "Does every use of contiguousPortion indicate the existence of a proper part as defined by hasProperPart?"
                ],
                "type": "Type1"
            },
            "properPartOf": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"properPartOf\" represents the usual proper parthood relation in mereology, indicating that one entity is a proper part of another. It has no explicitly defined characteristics, domain, or range. It is specified as a subproperty of \"partOf\" and does not have an inverse property.",
                "CQ": [
                    {
                        "axiom": "properPartOf domain None",
                        "CQ": [
                            "What can be the domain of the property 'properPartOf'?",
                            "Is it correct that the property 'properPartOf' does not have a specified domain?",
                            "Can any type of entity appear as the subject when using 'properPartOf'?"
                        ]
                    },
                    {
                        "axiom": "properPartOf range None",
                        "CQ": [
                            "What can be the range of the property 'properPartOf'?",
                            "Is it correct that 'properPartOf' has no specified range?",
                            "Can any type of entity be the range value for 'properPartOf'?"
                        ]
                    },
                    {
                        "axiom": "properPartOf subPropertyOf partOf",
                        "CQ": [
                            "Is properPartOf classified as a subproperty of partOf within the ontology?",
                            "Which properties are identified as subproperties under partOf?",
                            "Does the use of properPartOf property entail the use of partOf property for the same subject and object?"
                        ]
                    }
                ],
                "removed axiom": "properPartOf subPropertyOf partOf",
                "Target CQ": [
                    "Is properPartOf classified as a subproperty of partOf within the ontology?",
                    "Which properties are identified as subproperties under partOf?",
                    "Does the use of properPartOf property entail the use of partOf property for the same subject and object?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'properPartOf'?",
                    "Is it correct that the property 'properPartOf' does not have a specified domain?",
                    "Can any type of entity appear as the subject when using 'properPartOf'?",
                    "What can be the range of the property 'properPartOf'?",
                    "Is it correct that 'properPartOf' has no specified range?",
                    "Can any type of entity be the range value for 'properPartOf'?"
                ],
                "type": "Type1"
            },
            "hasGranuleType": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "PhysicalObject"
                    ],
                    "subPropertyOf": [
                        "owl:topObjectProperty"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"hasGranuleType\" relates entities of type Stuff (domain) to PhysicalObject (range), and is a sub-property of owl:topObjectProperty. It has no specified characteristics or inverse property. This property is used to indicate the type of physical object serving as the basic unit, or \"granule,\" in the analysis of a given Stuff. The granule type reflects the level of granularity chosen for understanding the composition of the Stuff (e.g., molecules in water), and acknowledges that different analytical contexts may establish different granule types (such as atomic, molecular, or multi-molecular levels). Terms like \"has grain\" or \"has granular part\" are also used for this relation.",
                "CQ": [
                    {
                        "axiom": "hasGranuleType domain Stuff",
                        "CQ": [
                            "Is the subject of 'hasGranuleType' always required to be a Stuff?",
                            "Are there any entities besides Stuff that can be associated with the 'hasGranuleType' property as its domain?",
                            "What classes can serve as the domain for the property 'hasGranuleType'?"
                        ]
                    },
                    {
                        "axiom": "hasGranuleType range PhysicalObject",
                        "CQ": [
                            "Can the property 'hasGranuleType' have any range other than PhysicalObject?",
                            "Is every entity that appears as the object of 'hasGranuleType' necessarily a PhysicalObject?",
                            "What entities can be used as the range for the property 'hasGranuleType'?"
                        ]
                    },
                    {
                        "axiom": "hasGranuleType subPropertyOf owl:topObjectProperty",
                        "CQ": [
                            "Is hasGranuleType considered a subproperty of owl:topObjectProperty?",
                            "Which superproperties does hasGranuleType inherit in the ontology?",
                            "Can every usage of hasGranuleType be interpreted as an instance of owl:topObjectProperty?"
                        ]
                    }
                ],
                "removed axiom": "hasGranuleType domain Stuff",
                "Target CQ": [
                    "Is the subject of 'hasGranuleType' always required to be a Stuff?",
                    "Are there any entities besides Stuff that can be associated with the 'hasGranuleType' property as its domain?",
                    "What classes can serve as the domain for the property 'hasGranuleType'?"
                ],
                "Valid CQ": [
                    "Can the property 'hasGranuleType' have any range other than PhysicalObject?",
                    "Is every entity that appears as the object of 'hasGranuleType' necessarily a PhysicalObject?",
                    "What entities can be used as the range for the property 'hasGranuleType'?",
                    "Is hasGranuleType considered a subproperty of owl:topObjectProperty?",
                    "Which superproperties does hasGranuleType inherit in the ontology?",
                    "Can every usage of hasGranuleType be interpreted as an instance of owl:topObjectProperty?"
                ],
                "type": "Type1"
            },
            "hasPortion": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "hasProperPart"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"hasPortion\" is a sub-property of \"hasProperPart\" and has \"portionOf\" as its inverse. While there are no explicit domain or range restrictions or defined characteristics, \"hasPortion\" is intended to relate an entity to a part that consists of the same substance or kind as the whole. Practically, it represents portions or divisions of a material entity at a given instant; for example, different amounts of wine divided from a whole. The property is useful in representing naive chemistry, although continuous changes at the molecular level may challenge the strict philosophical notion of 'portion.'",
                "CQ": [
                    {
                        "axiom": "hasPortion domain None",
                        "CQ": [
                            "What types of entities can appear as the subject when using the 'hasPortion' property?",
                            "Is it correct that the property 'hasPortion' does not have a specified domain?",
                            "Can 'hasPortion' relate to any class as its subject, or should its usage be restricted?"
                        ]
                    },
                    {
                        "axiom": "hasPortion range None",
                        "CQ": [
                            "What types of values can be the range of 'hasPortion'?",
                            "Is it accurate that the property 'hasPortion' does not have a specified range?",
                            "Could 'hasPortion' have a range restriction, or is it applicable to any type of entity?"
                        ]
                    },
                    {
                        "axiom": "hasPortion subPropertyOf hasProperPart",
                        "CQ": [
                            "Is hasPortion categorized as a subproperty under hasProperPart?",
                            "What are the superproperties associated with hasPortion in the ontology?",
                            "Which properties are defined as subproperties within the scope of hasProperPart?"
                        ]
                    },
                    {
                        "axiom": "hasPortion inverseOf portionOf",
                        "CQ": [
                            "What is the logical connection between ‘hasPortion’ and ‘portionOf’ in the ontology?",
                            "If entity X hasPortion Y, does this infer that Y portionOf X?",
                            "Which property is defined as the inverse of ‘hasPortion’?"
                        ]
                    }
                ],
                "removed axiom": "hasPortion inverseOf portionOf",
                "Target CQ": [
                    "What is the logical connection between ‘hasPortion’ and ‘portionOf’ in the ontology?",
                    "If entity X hasPortion Y, does this infer that Y portionOf X?",
                    "Which property is defined as the inverse of ‘hasPortion’?"
                ],
                "Valid CQ": [
                    "What types of entities can appear as the subject when using the 'hasPortion' property?",
                    "Is it correct that the property 'hasPortion' does not have a specified domain?",
                    "Can 'hasPortion' relate to any class as its subject, or should its usage be restricted?",
                    "What types of values can be the range of 'hasPortion'?",
                    "Is it accurate that the property 'hasPortion' does not have a specified range?",
                    "Could 'hasPortion' have a range restriction, or is it applicable to any type of entity?",
                    "Is hasPortion categorized as a subproperty under hasProperPart?",
                    "What are the superproperties associated with hasPortion in the ontology?",
                    "Which properties are defined as subproperties within the scope of hasProperPart?"
                ],
                "type": "Type1"
            },
            "containedIn": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"containedIn\" has no explicitly defined characteristics, domain, or range restrictions. It is specified as a sub-property of \"partOf,\" indicating that it expresses a specialized containment relationship within the broader context of part-whole relations. No inverse property is defined.",
                "CQ": [
                    {
                        "axiom": "containedIn domain None",
                        "CQ": [
                            "Is it accurate that the property 'containedIn' does not have an explicitly defined domain?",
                            "What types of entities can be subjects of the 'containedIn' property?",
                            "Can entities of any class use the property 'containedIn' as their subject?"
                        ]
                    },
                    {
                        "axiom": "containedIn range None",
                        "CQ": [
                            "Is it appropriate that the property 'containedIn' has no specified range?",
                            "What entities can serve as the range for the property 'containedIn'?",
                            "Can 'containedIn' relate a subject to any type of object without restriction on the object's class?"
                        ]
                    },
                    {
                        "axiom": "containedIn subPropertyOf partOf",
                        "CQ": [
                            "Is containedIn defined as a more specific property under partOf?",
                            "Which properties are recognized as subproperties of partOf?",
                            "What are the superproperties assigned to containedIn in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "containedIn subPropertyOf partOf",
                "Target CQ": [
                    "Is containedIn defined as a more specific property under partOf?",
                    "Which properties are recognized as subproperties of partOf?",
                    "What are the superproperties assigned to containedIn in the ontology?"
                ],
                "Valid CQ": [
                    "Is it accurate that the property 'containedIn' does not have an explicitly defined domain?",
                    "What types of entities can be subjects of the 'containedIn' property?",
                    "Can entities of any class use the property 'containedIn' as their subject?",
                    "Is it appropriate that the property 'containedIn' has no specified range?",
                    "What entities can serve as the range for the property 'containedIn'?",
                    "Can 'containedIn' relate a subject to any type of object without restriction on the object's class?"
                ],
                "type": "Type1"
            },
            "hasProperPart": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [
                        "hasPart"
                    ],
                    "inverseOf": []
                },
                "description": "The property \"hasProperPart\" has no explicitly defined characteristics, domain, or range restrictions. It is a sub-property of \"hasPart,\" indicating a hierarchical relationship. The inverse property is \"properPartOf,\" which relates an entity to its proper whole. This property is used to specify that one entity is a proper (non-identical) part of another.",
                "CQ": [
                    {
                        "axiom": "hasProperPart domain None",
                        "CQ": [
                            "What can be the domain of the property 'hasProperPart'?",
                            "Is it correct that the property 'hasProperPart' has no specified domain?",
                            "Are there any restrictions on the types of subjects that can use the 'hasProperPart' property?"
                        ]
                    },
                    {
                        "axiom": "hasProperPart range None",
                        "CQ": [
                            "What entities are permitted as the range for the property 'hasProperPart'?",
                            "Is it correct that the property 'hasProperPart' does not specify a range?",
                            "Can any type of value appear as the range of 'hasProperPart' or should it be restricted?"
                        ]
                    },
                    {
                        "axiom": "hasProperPart subPropertyOf hasPart",
                        "CQ": [
                            "Is every use of the hasProperPart property also an instance of hasPart?",
                            "What properties are considered subproperties of hasPart?",
                            "Which superproperties does hasProperPart possess in the ontology?"
                        ]
                    },
                    {
                        "axiom": "hasProperPart inverseOf properPartOf",
                        "CQ": [
                            "What is the formal connection between the properties 'hasProperPart' and 'properPartOf' as defined in the ontology?",
                            "If an entity A has a proper part B, does the ontology entail that B is a proper part of A?",
                            "Which property is explicitly stated as the inverse of 'hasProperPart' in the ontology?"
                        ]
                    }
                ],
                "removed axiom": "hasProperPart inverseOf properPartOf",
                "Target CQ": [
                    "What is the formal connection between the properties 'hasProperPart' and 'properPartOf' as defined in the ontology?",
                    "If an entity A has a proper part B, does the ontology entail that B is a proper part of A?",
                    "Which property is explicitly stated as the inverse of 'hasProperPart' in the ontology?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'hasProperPart'?",
                    "Is it correct that the property 'hasProperPart' has no specified domain?",
                    "Are there any restrictions on the types of subjects that can use the 'hasProperPart' property?",
                    "What entities are permitted as the range for the property 'hasProperPart'?",
                    "Is it correct that the property 'hasProperPart' does not specify a range?",
                    "Can any type of value appear as the range of 'hasProperPart' or should it be restricted?",
                    "Is every use of the hasProperPart property also an instance of hasPart?",
                    "What properties are considered subproperties of hasPart?",
                    "Which superproperties does hasProperPart possess in the ontology?"
                ],
                "type": "Type1"
            }
        }
    },
    "home": {
        "classes": {
            "ExerciseSummary": {
                "axiom": {
                    "subClassOf": [
                        "DaySummary"
                    ],
                    "propertyRestrictions": [
                        "[exerciseStartTime only time:Instant]",
                        "[distanceTravelled only xsd:double]",
                        "[exerciseDuration only time:DurationDescription]",
                        "[walkSpeed exactly 1 xsd:double]",
                        "[exerciseDuration exactly 1 time:DurationDescription]",
                        "[heartRate only xsd:double]",
                        "[heartRate exactly 1 xsd:double]",
                        "[walkSpeed only xsd:double]",
                        "[exerciseIntensity exactly 1]",
                        "[exerciseStartTime exactly 1 time:Instant]",
                        "[strideLength only xsd:double]",
                        "[distanceTravelled exactly 1 xsd:double]",
                        "[accelerometerCountsPerMinute exactly 1 xsd:int]",
                        "[exerciseIntensity only rdfs:Literal]",
                        "[accelerometerCountsPerMinute only xsd:int]"
                    ]
                },
                "description": "ExerciseSummary is a subclass of DaySummary that encapsulates the summary of exercise activities recorded for a specific day. Members of this class must have exactly one value each for exerciseStartTime (of type time:Instant), distanceTravelled (xsd:double), strideLength (xsd:double), exerciseDuration (time:DurationDescription), walkSpeed (xsd:double), heartRate (xsd:double), exerciseIntensity (rdfs:Literal), and accelerometerCountsPerMinute (xsd:int). Each of these properties is also restricted to values of the specified type, ensuring strict data consistency for representing exercise-session summaries.",
                "CQ": [
                    {
                        "axiom": "ExerciseSummary subClassOf DaySummary",
                        "CQ": [
                            "Is ExerciseSummary categorized as a more specific type under DaySummary?",
                            "Which summaries are classified as specializations of DaySummary, such as ExerciseSummary?",
                            "What broader summary categories does ExerciseSummary fall within?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [exerciseStartTime only time:Instant]",
                        "CQ": [
                            "Is every value of 'exerciseStartTime' for an ExerciseSummary instance required to be of type time:Instant?",
                            "Can an ExerciseSummary have an 'exerciseStartTime' that is not an instance of time:Instant?",
                            "Does ExerciseSummary restrict the 'exerciseStartTime' property exclusively to values of type time:Instant?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [distanceTravelled only xsd:double]",
                        "CQ": [
                            "Is the value of 'distanceTravelled' for any ExerciseSummary always a datatype of xsd:double?",
                            "Can an ExerciseSummary have the 'distanceTravelled' property represented by a datatype other than xsd:double?",
                            "Does the ExerciseSummary restrict 'distanceTravelled' values exclusively to those conforming to xsd:double?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [strideLength exactly 1 xsd:double]",
                        "CQ": [
                            "Is each ExerciseSummary instance required to have exactly one value for the strideLength property?",
                            "Can an ExerciseSummary be associated with more than one strideLength value?",
                            "Does every ExerciseSummary exclude the possibility of having zero or multiple strideLength values?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [exerciseDuration only time:DurationDescription]",
                        "CQ": [
                            "Is every value of the exerciseDuration property for an ExerciseSummary instance required to be a DurationDescription as defined in the time ontology?",
                            "Can ExerciseSummary ever have an exerciseDuration that does not correspond to a time:DurationDescription?",
                            "Are all exerciseDuration descriptions used in ExerciseSummary instances restricted exclusively to time:DurationDescription types?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [walkSpeed exactly 1 xsd:double]",
                        "CQ": [
                            "Is it necessary for an ExerciseSummary to have exactly one walk speed value defined as a double?",
                            "Does an ExerciseSummary include multiple or only one value for the walkSpeed property?",
                            "Can an ExerciseSummary exist if it lacks a walkSpeed value or contains more than one?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [exerciseDuration exactly 1 time:DurationDescription]",
                        "CQ": [
                            "Is every instance of ExerciseSummary required to have exactly one value for the property exerciseDuration of type DurationDescription?",
                            "Can an ExerciseSummary have more than one or fewer than one exerciseDuration specified?",
                            "Does ExerciseSummary allow any value for exerciseDuration other than exactly one DurationDescription?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [heartRate only xsd:double]",
                        "CQ": [
                            "Is it required that the heartRate property of an ExerciseSummary only contain values of type xsd:double?",
                            "Can the heartRate property in ExerciseSummary ever be associated with a value that is not an xsd:double?",
                            "Are all values for heartRate in ExerciseSummary instances necessarily limited to the xsd:double datatype?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [heartRate exactly 1 xsd:double]",
                        "CQ": [
                            "Must every ExerciseSummary include exactly one heartRate value represented as a double?",
                            "Is it permitted for an ExerciseSummary to have more than one heartRate property?",
                            "Can an ExerciseSummary exist without having a heartRate value defined?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [walkSpeed only xsd:double]",
                        "CQ": [
                            "Is the value assigned to walkSpeed in ExerciseSummary always restricted to datatype xsd:double?",
                            "Can ExerciseSummary have walkSpeed properties with any datatype other than xsd:double?",
                            "Must every walkSpeed property for ExerciseSummary be typed exclusively as xsd:double?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [exerciseIntensity exactly 1]",
                        "CQ": [
                            "Is every ExerciseSummary instance required to possess exactly one value for the property exerciseIntensity?",
                            "Can an ExerciseSummary have more or less than one exerciseIntensity assigned?",
                            "Does ExerciseSummary restrict exerciseIntensity to a single, unique value per summary?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [exerciseStartTime exactly 1 time:Instant]",
                        "CQ": [
                            "Does every ExerciseSummary necessarily have exactly one value for the property exerciseStartTime of type time:Instant?",
                            "Can an ExerciseSummary instance possess more than one exerciseStartTime, or none at all?",
                            "Is it required that each ExerciseSummary be associated with one and only one exerciseStartTime that is a time:Instant?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [strideLength only xsd:double]",
                        "CQ": [
                            "Is strideLength in ExerciseSummary always required to have values of type xsd:double?",
                            "Can any property other than xsd:double be used for strideLength within ExerciseSummary?",
                            "Does ExerciseSummary ensure that strideLength values are exclusively of the datatype xsd:double?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [distanceTravelled exactly 1 xsd:double]",
                        "CQ": [
                            "Is every instance of ExerciseSummary associated with exactly one value for distanceTravelled?",
                            "Can ExerciseSummary have multiple or no values for the distanceTravelled property?",
                            "Does ExerciseSummary require a single and unique distanceTravelled measurement?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [accelerometerCountsPerMinute exactly 1 xsd:int]",
                        "CQ": [
                            "Must every ExerciseSummary instance include exactly one value for accelerometerCountsPerMinute?",
                            "Is it allowed for an ExerciseSummary to have either no value or more than one value for accelerometerCountsPerMinute?",
                            "Does the property accelerometerCountsPerMinute uniquely identify a single integer value for each ExerciseSummary?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [exerciseIntensity only rdfs:Literal]",
                        "CQ": [
                            "Is the value assigned to the 'exerciseIntensity' property for an ExerciseSummary always of type rdfs:Literal?",
                            "Are only rdfs:Literal values permitted for the 'exerciseIntensity' property in instances of ExerciseSummary?",
                            "Can ExerciseSummary have 'exerciseIntensity' values that are not rdfs:Literal?"
                        ]
                    },
                    {
                        "axiom": "ExerciseSummary propertyRestrictions [accelerometerCountsPerMinute only xsd:int]",
                        "CQ": [
                            "Are all values for the property 'accelerometerCountsPerMinute' in ExerciseSummary instances restricted exclusively to integers?",
                            "Can ExerciseSummary have any 'accelerometerCountsPerMinute' property values that are not integers?",
                            "Is it necessary that every 'accelerometerCountsPerMinute' associated with ExerciseSummary be of the integer data type?"
                        ]
                    }
                ],
                "removed axiom": "ExerciseSummary propertyRestrictions [strideLength exactly 1 xsd:double]",
                "Target CQ": [
                    "Is each ExerciseSummary instance required to have exactly one value for the strideLength property?",
                    "Can an ExerciseSummary be associated with more than one strideLength value?",
                    "Does every ExerciseSummary exclude the possibility of having zero or multiple strideLength values?"
                ],
                "Valid CQ": [
                    "Is ExerciseSummary categorized as a more specific type under DaySummary?",
                    "Which summaries are classified as specializations of DaySummary, such as ExerciseSummary?",
                    "What broader summary categories does ExerciseSummary fall within?",
                    "Is every value of 'exerciseStartTime' for an ExerciseSummary instance required to be of type time:Instant?",
                    "Can an ExerciseSummary have an 'exerciseStartTime' that is not an instance of time:Instant?",
                    "Does ExerciseSummary restrict the 'exerciseStartTime' property exclusively to values of type time:Instant?",
                    "Is the value of 'distanceTravelled' for any ExerciseSummary always a datatype of xsd:double?",
                    "Can an ExerciseSummary have the 'distanceTravelled' property represented by a datatype other than xsd:double?",
                    "Does the ExerciseSummary restrict 'distanceTravelled' values exclusively to those conforming to xsd:double?",
                    "Is every value of the exerciseDuration property for an ExerciseSummary instance required to be a DurationDescription as defined in the time ontology?",
                    "Can ExerciseSummary ever have an exerciseDuration that does not correspond to a time:DurationDescription?",
                    "Are all exerciseDuration descriptions used in ExerciseSummary instances restricted exclusively to time:DurationDescription types?",
                    "Is it necessary for an ExerciseSummary to have exactly one walk speed value defined as a double?",
                    "Does an ExerciseSummary include multiple or only one value for the walkSpeed property?",
                    "Can an ExerciseSummary exist if it lacks a walkSpeed value or contains more than one?",
                    "Is every instance of ExerciseSummary required to have exactly one value for the property exerciseDuration of type DurationDescription?",
                    "Can an ExerciseSummary have more than one or fewer than one exerciseDuration specified?",
                    "Does ExerciseSummary allow any value for exerciseDuration other than exactly one DurationDescription?",
                    "Is it required that the heartRate property of an ExerciseSummary only contain values of type xsd:double?",
                    "Can the heartRate property in ExerciseSummary ever be associated with a value that is not an xsd:double?",
                    "Are all values for heartRate in ExerciseSummary instances necessarily limited to the xsd:double datatype?",
                    "Must every ExerciseSummary include exactly one heartRate value represented as a double?",
                    "Is it permitted for an ExerciseSummary to have more than one heartRate property?",
                    "Can an ExerciseSummary exist without having a heartRate value defined?",
                    "Is the value assigned to walkSpeed in ExerciseSummary always restricted to datatype xsd:double?",
                    "Can ExerciseSummary have walkSpeed properties with any datatype other than xsd:double?",
                    "Must every walkSpeed property for ExerciseSummary be typed exclusively as xsd:double?",
                    "Is every ExerciseSummary instance required to possess exactly one value for the property exerciseIntensity?",
                    "Can an ExerciseSummary have more or less than one exerciseIntensity assigned?",
                    "Does ExerciseSummary restrict exerciseIntensity to a single, unique value per summary?",
                    "Does every ExerciseSummary necessarily have exactly one value for the property exerciseStartTime of type time:Instant?",
                    "Can an ExerciseSummary instance possess more than one exerciseStartTime, or none at all?",
                    "Is it required that each ExerciseSummary be associated with one and only one exerciseStartTime that is a time:Instant?",
                    "Is strideLength in ExerciseSummary always required to have values of type xsd:double?",
                    "Can any property other than xsd:double be used for strideLength within ExerciseSummary?",
                    "Does ExerciseSummary ensure that strideLength values are exclusively of the datatype xsd:double?",
                    "Is every instance of ExerciseSummary associated with exactly one value for distanceTravelled?",
                    "Can ExerciseSummary have multiple or no values for the distanceTravelled property?",
                    "Does ExerciseSummary require a single and unique distanceTravelled measurement?",
                    "Must every ExerciseSummary instance include exactly one value for accelerometerCountsPerMinute?",
                    "Is it allowed for an ExerciseSummary to have either no value or more than one value for accelerometerCountsPerMinute?",
                    "Does the property accelerometerCountsPerMinute uniquely identify a single integer value for each ExerciseSummary?",
                    "Is the value assigned to the 'exerciseIntensity' property for an ExerciseSummary always of type rdfs:Literal?",
                    "Are only rdfs:Literal values permitted for the 'exerciseIntensity' property in instances of ExerciseSummary?",
                    "Can ExerciseSummary have 'exerciseIntensity' values that are not rdfs:Literal?",
                    "Are all values for the property 'accelerometerCountsPerMinute' in ExerciseSummary instances restricted exclusively to integers?",
                    "Can ExerciseSummary have any 'accelerometerCountsPerMinute' property values that are not integers?",
                    "Is it necessary that every 'accelerometerCountsPerMinute' associated with ExerciseSummary be of the integer data type?"
                ],
                "type": "Type1"
            },
            "SocialSummary": {
                "axiom": {
                    "subClassOf": [
                        "DaySummary"
                    ],
                    "propertyRestrictions": [
                        "[numberOfSocialInteractions only xsd:int]",
                        "[numberOfFaceToFaceConversations only xsd:int]",
                        "[numberOfPhoneConversations exactly 1 xsd:int]",
                        "[numberOfCommunicativeAttempts exactly 1 xsd:int]",
                        "[numberOfCommunicativeAttempts only xsd:int]",
                        "[numberOfPhoneConversations only xsd:int]",
                        "[numberOfFaceToFaceConversations exactly 1 xsd:int]"
                    ]
                },
                "description": "SocialSummary is defined as a subclass of DaySummary, representing a daily aggregation of social interaction metrics. Members of this class are characterized by the presence of specific numeric properties: each individual must have exactly one value (of type xsd:int) specified for the number of social interactions, face-to-face conversations, phone conversations, and communicative attempts. Additionally, these properties are restricted to accept only integer values. This formalization ensures that every SocialSummary instance provides an unambiguous, integer-based summary of key social activities occurring within a single day.",
                "CQ": [
                    {
                        "axiom": "SocialSummary subClassOf DaySummary",
                        "CQ": [
                            "Does SocialSummary fall within the category defined by DaySummary?",
                            "Which summary types are classified under DaySummary, such as SocialSummary?",
                            "What are the more general categories that encompass SocialSummary?"
                        ]
                    },
                    {
                        "axiom": "SocialSummary propertyRestrictions [numberOfSocialInteractions only xsd:int]",
                        "CQ": [
                            "Must every SocialSummary instance specify its numberOfSocialInteractions value exclusively as an integer?",
                            "Is it possible for SocialSummary to have a value for numberOfSocialInteractions that is not of type xsd:int?",
                            "Are all values assigned to numberOfSocialInteractions in SocialSummary required to be integers?"
                        ]
                    },
                    {
                        "axiom": "SocialSummary propertyRestrictions [numberOfFaceToFaceConversations only xsd:int]",
                        "CQ": [
                            "Is every value of 'numberOfFaceToFaceConversations' for a SocialSummary necessarily of type xsd:int?",
                            "Can a SocialSummary have 'numberOfFaceToFaceConversations' assigned only as an integer data type?",
                            "Does the 'numberOfFaceToFaceConversations' property in SocialSummary exclude any datatype other than xsd:int?"
                        ]
                    },
                    {
                        "axiom": "SocialSummary propertyRestrictions [numberOfPhoneConversations exactly 1 xsd:int]",
                        "CQ": [
                            "Is a SocialSummary required to have exactly one value for the property numberOfPhoneConversations?",
                            "Can a SocialSummary include more or fewer than one phone conversation according to its numberOfPhoneConversations property?",
                            "Does the SocialSummary constrain the numberOfPhoneConversations property exclusively to one instance?"
                        ]
                    },
                    {
                        "axiom": "SocialSummary propertyRestrictions [numberOfCommunicativeAttempts exactly 1 xsd:int]",
                        "CQ": [
                            "Is a SocialSummary always restricted to exactly one value for the numberOfCommunicativeAttempts property?",
                            "Does the SocialSummary class permit more or fewer than one numberOfCommunicativeAttempts instance?",
                            "Can a SocialSummary ever be associated with multiple or zero instances of numberOfCommunicativeAttempts?"
                        ]
                    },
                    {
                        "axiom": "SocialSummary propertyRestrictions [numberOfCommunicativeAttempts only xsd:int]",
                        "CQ": [
                            "Is SocialSummary limited to having only numberOfCommunicativeAttempts as a property with values of type xsd:int?",
                            "Must every value of numberOfCommunicativeAttempts in SocialSummary be of type xsd:int?",
                            "Can SocialSummary have the property numberOfCommunicativeAttempts with any value type other than xsd:int?"
                        ]
                    },
                    {
                        "axiom": "SocialSummary propertyRestrictions [numberOfSocialInteractions exactly 1 xsd:int]",
                        "CQ": [
                            "Is it required that a SocialSummary must have exactly one value for the 'numberOfSocialInteractions' property?",
                            "Can a SocialSummary ever have more or fewer than one 'numberOfSocialInteractions' specified?",
                            "Does the SocialSummary class permit multiple or zero assignments of 'numberOfSocialInteractions', or is exactly one mandatory?"
                        ]
                    },
                    {
                        "axiom": "SocialSummary propertyRestrictions [numberOfPhoneConversations only xsd:int]",
                        "CQ": [
                            "Is every instance of SocialSummary required to have the numberOfPhoneConversations property assigned only values of type integer?",
                            "Can the property numberOfPhoneConversations for SocialSummary ever be a value other than an integer?",
                            "Does the SocialSummary class restrict numberOfPhoneConversations exclusively to integer values?"
                        ]
                    },
                    {
                        "axiom": "SocialSummary propertyRestrictions [numberOfFaceToFaceConversations exactly 1 xsd:int]",
                        "CQ": [
                            "Must every SocialSummary instance report exactly one face-to-face conversation?",
                            "Can a SocialSummary ever have more or fewer than one face-to-face conversation recorded?",
                            "Is it permitted for SocialSummary to reference multiple face-to-face conversations, or is it restricted to a single occurrence?"
                        ]
                    }
                ],
                "removed axiom": "SocialSummary propertyRestrictions [numberOfSocialInteractions exactly 1 xsd:int]",
                "Target CQ": [
                    "Is it required that a SocialSummary must have exactly one value for the 'numberOfSocialInteractions' property?",
                    "Can a SocialSummary ever have more or fewer than one 'numberOfSocialInteractions' specified?",
                    "Does the SocialSummary class permit multiple or zero assignments of 'numberOfSocialInteractions', or is exactly one mandatory?"
                ],
                "Valid CQ": [
                    "Does SocialSummary fall within the category defined by DaySummary?",
                    "Which summary types are classified under DaySummary, such as SocialSummary?",
                    "What are the more general categories that encompass SocialSummary?",
                    "Must every SocialSummary instance specify its numberOfSocialInteractions value exclusively as an integer?",
                    "Is it possible for SocialSummary to have a value for numberOfSocialInteractions that is not of type xsd:int?",
                    "Are all values assigned to numberOfSocialInteractions in SocialSummary required to be integers?",
                    "Is every value of 'numberOfFaceToFaceConversations' for a SocialSummary necessarily of type xsd:int?",
                    "Can a SocialSummary have 'numberOfFaceToFaceConversations' assigned only as an integer data type?",
                    "Does the 'numberOfFaceToFaceConversations' property in SocialSummary exclude any datatype other than xsd:int?",
                    "Is a SocialSummary required to have exactly one value for the property numberOfPhoneConversations?",
                    "Can a SocialSummary include more or fewer than one phone conversation according to its numberOfPhoneConversations property?",
                    "Does the SocialSummary constrain the numberOfPhoneConversations property exclusively to one instance?",
                    "Is a SocialSummary always restricted to exactly one value for the numberOfCommunicativeAttempts property?",
                    "Does the SocialSummary class permit more or fewer than one numberOfCommunicativeAttempts instance?",
                    "Can a SocialSummary ever be associated with multiple or zero instances of numberOfCommunicativeAttempts?",
                    "Is SocialSummary limited to having only numberOfCommunicativeAttempts as a property with values of type xsd:int?",
                    "Must every value of numberOfCommunicativeAttempts in SocialSummary be of type xsd:int?",
                    "Can SocialSummary have the property numberOfCommunicativeAttempts with any value type other than xsd:int?",
                    "Is every instance of SocialSummary required to have the numberOfPhoneConversations property assigned only values of type integer?",
                    "Can the property numberOfPhoneConversations for SocialSummary ever be a value other than an integer?",
                    "Does the SocialSummary class restrict numberOfPhoneConversations exclusively to integer values?",
                    "Must every SocialSummary instance report exactly one face-to-face conversation?",
                    "Can a SocialSummary ever have more or fewer than one face-to-face conversation recorded?",
                    "Is it permitted for SocialSummary to reference multiple face-to-face conversations, or is it restricted to a single occurrence?"
                ],
                "type": "Type1"
            }
        },
        "properties": {
            "eatingLocation": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"eatingLocation\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"EatingSummary,\" while its range is unspecified. This property is used to associate an \"EatingSummary\" with a location where eating occurs.",
                "CQ": [
                    {
                        "axiom": "eatingLocation domain EatingSummary",
                        "CQ": [
                            "Is it possible for something other than an EatingSummary to have an eatingLocation?",
                            "Are there any instances of EatingSummary that do not have an eatingLocation?",
                            "What types of subjects are allowed to use the eatingLocation property?"
                        ]
                    },
                    {
                        "axiom": "eatingLocation range None",
                        "CQ": [
                            "What can be the range of the property 'eatingLocation'?",
                            "Is it correct that the property 'eatingLocation' has no specified range?",
                            "Can 'eatingLocation' be used with any type of value as its object?"
                        ]
                    }
                ],
                "removed axiom": "eatingLocation domain EatingSummary",
                "Target CQ": [
                    "Is it possible for something other than an EatingSummary to have an eatingLocation?",
                    "Are there any instances of EatingSummary that do not have an eatingLocation?",
                    "What types of subjects are allowed to use the eatingLocation property?"
                ],
                "Valid CQ": [
                    "What can be the range of the property 'eatingLocation'?",
                    "Is it correct that the property 'eatingLocation' has no specified range?",
                    "Can 'eatingLocation' be used with any type of value as its object?"
                ],
                "type": "Type1"
            },
            "exerciseDuration": {
                "axiom": {
                    "characteristics": [],
                    "domain": [
                        "None"
                    ],
                    "range": [
                        "None"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"exerciseDuration\" does not specify explicit domain or range restrictions, nor any special characteristics. It is defined as a sub-property of \"time:hasBeginning,\" indicating that it inherits semantic meaning related to temporal beginnings. No inverse property is provided. This property is primarily intended to represent the temporal duration associated with an exercise activity.",
                "CQ": [
                    {
                        "axiom": "exerciseDuration domain None",
                        "CQ": [
                            "What can be the domain of the property 'exerciseDuration'?",
                            "Is it correct that the property 'exerciseDuration' does not have any specified domain?",
                            "Can 'exerciseDuration' be associated with any entity regardless of type?"
                        ]
                    },
                    {
                        "axiom": "exerciseDuration range None",
                        "CQ": [
                            "Can the property 'exerciseDuration' have a range other than unspecified?",
                            "What types of values can serve as the range for 'exerciseDuration'?",
                            "Is it appropriate for the property 'exerciseDuration' to lack a specified range?"
                        ]
                    },
                    {
                        "axiom": "exerciseDuration subPropertyOf time:hasBeginning",
                        "CQ": [
                            "Is every instance of the exerciseDuration property also an instance of time:hasBeginning?",
                            "Which properties are subproperties encompassed by time:hasBeginning in the ontology?",
                            "What superproperties does exerciseDuration have according to the property hierarchy?"
                        ]
                    }
                ],
                "removed axiom": "exerciseDuration subPropertyOf time:hasBeginning",
                "Target CQ": [
                    "Is every instance of the exerciseDuration property also an instance of time:hasBeginning?",
                    "Which properties are subproperties encompassed by time:hasBeginning in the ontology?",
                    "What superproperties does exerciseDuration have according to the property hierarchy?"
                ],
                "Valid CQ": [
                    "What can be the domain of the property 'exerciseDuration'?",
                    "Is it correct that the property 'exerciseDuration' does not have any specified domain?",
                    "Can 'exerciseDuration' be associated with any entity regardless of type?",
                    "Can the property 'exerciseDuration' have a range other than unspecified?",
                    "What types of values can serve as the range for 'exerciseDuration'?",
                    "Is it appropriate for the property 'exerciseDuration' to lack a specified range?"
                ],
                "type": "Type1"
            },
            "highlight": {
                "axiom": {
                    "characteristics": [],
                    "domain": [],
                    "range": [
                        "xsd:boolean"
                    ],
                    "subPropertyOf": [],
                    "inverseOf": []
                },
                "description": "The property \"highlight\" has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to instances of event:Event, and its range is xsd:boolean, indicating whether an event is highlighted (true) or not (false).",
                "CQ": [
                    {
                        "axiom": "highlight domain event:Event",
                        "CQ": [
                            "Is there any entity other than an Event that can be the subject of 'highlight'?",
                            "What types of individuals may appear as the domain of the 'highlight' property?",
                            "Must the subject of 'highlight' always be an Event?"
                        ]
                    },
                    {
                        "axiom": "highlight range xsd:boolean",
                        "CQ": [
                            "Can the property 'highlight' have a range other than xsd:boolean?",
                            "Is it possible for the property 'highlight' to be associated with values that are not of type xsd:boolean?",
                            "What datatypes are permitted as the range for the property 'highlight'?"
                        ]
                    }
                ],
                "removed axiom": "highlight domain event:Event",
                "Target CQ": [
                    "Is there any entity other than an Event that can be the subject of 'highlight'?",
                    "What types of individuals may appear as the domain of the 'highlight' property?",
                    "Must the subject of 'highlight' always be an Event?"
                ],
                "Valid CQ": [
                    "Can the property 'highlight' have a range other than xsd:boolean?",
                    "Is it possible for the property 'highlight' to be associated with values that are not of type xsd:boolean?",
                    "What datatypes are permitted as the range for the property 'highlight'?"
                ],
                "type": "Type1"
            }
        }
    }
}