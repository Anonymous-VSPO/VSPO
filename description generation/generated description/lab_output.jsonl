{"class": "AbilityToOrganiseAssessment", "description": "AbilityToOrganiseAssessment is defined as a subclass of ExperimentalAssessment. This means that every AbilityToOrganiseAssessment is an instance of ExperimentalAssessment, inheriting all its general characteristics. This class specifically represents assessments focusing on the capacity to organise or structure experimental tasks or processes. No further property restrictions or disjointness axioms are specified."}
{"class": "ApathyAssessment", "description": "ApathyAssessment is defined as a subclass of ExperimentalAssessment. This means that every ApathyAssessment is a specific type of ExperimentalAssessment, inheriting all characteristics of the latter. It is used to systematically evaluate or measure apathy within an experimental or research context."}
{"class": "CognitiveLoadAssessment", "description": "CognitiveLoadAssessment is defined as a subclass of ExperimentalAssessment, representing a specific type of assessment dedicated to measuring cognitive load in experimental contexts. Members of this class are characterized by having exactly one dual task score and exactly one mono task score, with both scores required to be data literals. This formalization ensures that each instance of CognitiveLoadAssessment includes precisely one measurable outcome for both mono-task and dual-task conditions, facilitating standardized evaluation and comparison of cognitive load across assessments."}
{"class": "ExperimentalDiagnosisAssessment", "description": "ExperimentalDiagnosisAssessment is a subclass of ExperimentalAssessment, specialized to capture assessments in experimental settings that specifically involve a diagnosis process. Individuals belonging to this class are constrained to have only hasExperimentalDiagnosis relationships pointing to instances of DiagnosisType, ensuring that each ExperimentalDiagnosisAssessment is exclusively associated with recognized types of diagnoses. This formalization establishes the role of ExperimentalDiagnosisAssessment in linking experimental assessments with diagnostic outcomes in a controlled, ontology-driven manner."}
{"class": "FunctionalAbilityAssessment", "description": "FunctionalAbilityAssessment is defined as a subclass of ExperimentalAssessment. This means every FunctionalAbilityAssessment is also an ExperimentalAssessment, inheriting its characteristics. No further restrictions or disjointness axioms are specified, so FunctionalAbilityAssessment can be understood as a specialized form of ExperimentalAssessment focused on evaluating functional abilities."}
{"class": "GaitAssessment", "description": "GaitAssessment is defined as a subclass of ExperimentalAssessment. Individuals in this class are required to have exactly one MonoTaskScore and exactly one DualTaskScore, both of which must be literals (i.e., data values such as numbers or strings). This formalization ensures that each GaitAssessment precisely records a single score for both mono-task and dual-task conditions using literal values."}
{"class": "MemorySelfAppraisalAssessment", "description": "MemorySelfAppraisalAssessment is defined as a subclass of ExperimentalAssessment. This means it represents a specific type of assessment conducted in an experimental context, which focuses on evaluating an individual's own appraisal or judgement of their memory abilities. Members of this class inherit all characteristics of ExperimentalAssessment, while emphasizing the self-evaluation of memory performance."}
{"class": "StressAssessment", "description": "StressAssessment is defined as a subclass of ExperimentalAssessment, indicating it inherits all properties of ExperimentalAssessment. This class represents assessments specifically designed to evaluate stress within an experimental context. No additional property restrictions or disjointness axioms are specified, so it can encompass any form of assessment fitting this criterion."}
{"class": "ActivityStatusType", "description": "ActivityStatusType is defined as a subclass of Type and is equivalent to the set containing the statuses: omitted, completed, and incomplete. This means that any instance of ActivityStatusType must be one of these three specific statuses, providing a controlled vocabulary for representing the status of an activity."}
{"class": "CountingType", "description": "CountingType is a subclass of Type and is defined as being equivalent to the set containing exactly the individuals _20_0 and _305_285. This means that any instance of CountingType must be one of these two specified individuals, and no others."}
{"class": "DiagnosisType", "description": "DiagnosisType is defined as a subclass of Type, and is equivalent to the set containing exactly three classes: predementia, dementia, and healthy. This means that any individual classified as a DiagnosisType must be either predementia, dementia, or healthy\u2014no other categories are permitted. This formalization ensures a closed, mutually-exclusive categorization of diagnostic statuses within the ontology."}
{"class": "GenderType", "description": "GenderType is a subclass of Type and is formally defined as exactly the set containing only \u2018male\u2019 and \u2018female\u2019. This means every instance of GenderType must be either male or female, and nothing outside this set can be an instance of GenderType. This definition ensures a closed list of exactly two possible gender types within the ontology."}
{"class": "HandTrajectoryType", "description": "HandTrajectoryType is defined as a subclass of Type. This class represents a specific categorization or kind of type that pertains to hand trajectory, inheriting all characteristics of Type. No additional axioms or restrictions are specified."}
{"class": "LateralityType", "description": "LateralityType is a subclass of Type, characterized as an enumerated class consisting exclusively of the instances 'left_handed' and 'right_handed'. Any instance of LateralityType must be either 'left_handed' or 'right_handed', capturing the concept of handedness in individuals."}
{"class": "AnswerPhoneTask", "description": "AnswerPhoneTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks but is specialized for the context of answering phone calls. This classification asserts that every instance of AnswerPhoneTask is also an instance of SemiDirectedTask, typically involving user interaction with some degree of guidance but not complete direction. No additional property or disjointness axioms are specified."}
{"class": "CallPsychologistTask", "description": "CallPsychologistTask is defined as a subclass of SemiDirectedTask. This classification indicates that any instance of CallPsychologistTask inherits all properties of SemiDirectedTask, representing a specific type of task that involves some level of pre-defined guidance or structure. No additional distinguishing properties or constraints are specified beyond its membership in the SemiDirectedTask category."}
{"class": "EstablishAccountBalanceTask", "description": "EstablishAccountBalanceTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all properties and constraints of SemiDirectedTask. This class represents tasks specifically related to establishing or determining an account balance, and it is semantically positioned within the ontology as a type of semi-directed task. No further restrictions or differentiators are specified in the current axioms."}
{"class": "FindBusLineOnMapTask", "description": "FindBusLineOnMapTask is defined as a subclass of SemiDirectedTask. This indicates that any instance of FindBusLineOnMapTask inherits the characteristics of a semi-directed task, which typically involves guidance but allows for a degree of user autonomy. The class is intended to represent tasks in which the objective is to locate a specific bus line on a map interface."}
{"class": "LeaveRoomTask", "description": "LeaveRoomTask is defined as a subclass of SemiDirectedTask. This means that every LeaveRoomTask must fulfill all the characteristics of a SemiDirectedTask, but it represents a more specific type of task centered on the activity of leaving a room. No additional restrictions or disjointness axioms are specified."}
{"class": "PayBillTask", "description": "PayBillTask is defined as a subclass of SemiDirectedTask, indicating it represents a specific type of task that involves partial direction or guidance in execution. No additional axioms are specified, so PayBillTask inherits all the general properties and constraints associated with SemiDirectedTask, and further characterizes tasks that involve the process of paying a bill."}
{"class": "PrepareDrugBoxTask", "description": "PrepareDrugBoxTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks. Individuals classified under PrepareDrugBoxTask represent tasks involving the preparation of drug boxes, and these tasks exhibit the general properties and constraints established for semi-directed tasks within the ontology. No additional restrictions or properties are specified beyond its subclass relationship."}
{"class": "PrepareHotTeaTask", "description": "PrepareHotTeaTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks. This class represents activities or processes specifically related to the preparation of hot tea, encompassing all steps that are partially guided yet allow for some flexibility in execution. There are currently no additional restrictions or disjointness axioms specified for this class."}
{"class": "ReadArticleTask", "description": "ReadArticleTask is defined as a subclass of SemiDirectedTask. This means that any instance of ReadArticleTask is also an instance of SemiDirectedTask, inheriting its characteristics and constraints. The class represents tasks that involve reading articles and fall within the category of semi-directed activities, which typically allow for some guidance or structure while retaining a degree of autonomy for the task performer."}
{"class": "TurnOnTVTask", "description": "TurnOnTVTask is defined as a subclass of SemiDirectedTask. This means that every TurnOnTVTask is a type of semi-directed task, typically characterized by having some predefined structure or guidance but allowing for some user input or variation. There are no additional property restrictions or disjointness axioms specified, so TurnOnTVTask is generally understood to represent any task that involves turning on a TV, within the broader category of semi-directed tasks."}
{"class": "WaterPlantTask", "description": "WaterPlantTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all the characteristics of semi-directed tasks. Members of this class represent tasks specifically concerned with watering plants, and they share any constraints or properties specified for semi-directed tasks."}
{"class": "AutonomyAssessment", "description": "AutonomyAssessment is a subclass of ClinicalAssessment designed specifically to evaluate an individual's level of autonomy. Every instance of AutonomyAssessment is required to have exactly one value for the property iadl_e, which must be of type xsd:int. This ensures that each AutonomyAssessment provides a singular, integer-based measurement relevant to the assessed individual's instrumental activities of daily living."}
{"class": "CognitiveAbilitiesAssessment", "description": "CognitiveAbilitiesAssessment is defined as a subclass of ClinicalAssessment, representing evaluations specifically focused on measuring cognitive functions. Instances of this class must have exactly one FAB score (an integer), one MMSE score (an integer), one Trail Making Test result (a string), one Free and Cued Reminding Assessment result (a string), and one Short Cognitive Battery Assessment result (a string). Property restrictions further specify that each of these assessments and scores must be unique and of the stated data type, ensuring a comprehensive and structured representation of cognitive assessment results for each individual."}
{"class": "DiagnosisAssessment", "description": "DiagnosisAssessment is defined as a subclass of ClinicalAssessment, indicating that it inherits properties common to all clinical assessments. It is characterized by having exactly one value for the property hasClinicalDiagnosis, and this value must be of type DiagnosisType. This ensures that every instance of DiagnosisAssessment is linked to precisely one clinical diagnosis, providing a specific and unambiguous diagnosis outcome for each assessment."}
{"class": "MotricityAbilitiesAssessment", "description": "MotricityAbilitiesAssessment is defined as a subclass of ClinicalAssessment, representing assessments that evaluate motor abilities. Every instance of this class is required to have exactly one UPDRS score, and this score must be an integer value (xsd:int). This ensures that each motricity abilities assessment is uniquely and quantitatively characterized by a single UPDRS score, aligning with the clinical need for standardized motor evaluation."}
{"class": "NeuropsychiatricAndMoodAssessment", "description": "NeuropsychiatricAndMoodAssessment is defined as a subclass of ClinicalAssessment. Members of this class are characterized by the mandatory presence of exactly one value for each of the following properties: npi (Neuropsychiatric Inventory), dsm_ivDepressionCriteria, and apathyInventory, each being of type xsd:string. Furthermore, these properties cannot have values outside the string datatype. This formalization ensures that any individual instance of NeuropsychiatricAndMoodAssessment contains exactly and only one string value for each of these assessment criteria, supporting precise and consistent neuropsychiatric and mood evaluation."}
{"class": "CognitiveAbilitiesData", "description": "CognitiveAbilitiesData is defined as a subclass of MeasuredData, representing data specifically related to the measurement of cognitive abilities. Each instance of this class is constrained to have exactly one status, which must be of type ActivityStatusType. Additionally, it must have exactly one value for repetitions, which is restricted to rdfs:Literal, and exactly one value for compliantInstructionsOrder, restricted to xsd:boolean. The taskDuration property is also required, with exactly one value of type time:DurationDescription. These property restrictions ensure that any CognitiveAbilitiesData instance is fully specified with respect to status, number of repetitions, compliance with instruction order, and duration of the cognitive task."}
{"class": "DiscussionInvolvementData", "description": "DiscussionInvolvementData is defined as a subclass of MeasuredData. Every instance of this class is required to have exactly one value for the property verbalReactionSpontaneity, and this property must take a value of type rdfs:Literal. This formalizes that each DiscussionInvolvementData entry captures a single, literal-valued measure of verbal reaction spontaneity as part of its involvement data."}
{"class": "FunctionalAbilitiesData", "description": "FunctionalAbilitiesData is a subclass of MeasuredData, characterized by having exactly one handTrajectory property, which must be of type HandTrajectoryType. All values for handTrajectory in instances of this class are restricted to HandTrajectoryType, ensuring that each FunctionalAbilitiesData instance is associated with a single, specific hand trajectory measurement."}
{"class": "GaitData", "description": "GaitData is defined as a subclass of MeasuredData, representing data specifically related to gait characteristics. Each instance of GaitData is required to have exactly one value for each of the following properties: walkingSpeedInstantaneous, walkingSpeed, stepLength, dynamicBalance, and stoppingDisplacement. The properties walkingSpeedInstantaneous, walkingSpeed, stepLength, and dynamicBalance are restricted to values of type rdfs:Literal, while stoppingDisplacement is restricted to a value of type xsd:boolean. This formalization ensures that any GaitData instance will precisely contain a complete set of objectively measured gait parameters."}
{"class": "LatencyData", "description": "LatencyData is a subclass of MeasuredData. Each instance of LatencyData must have exactly one latency value, and this value must be a literal (rdfs:Literal). This class formally represents measured data where the primary attribute is a singular latency value stored as a literal, ensuring uniformity and precision in latency representation."}
{"class": "MoodVoiceData", "description": "MoodVoiceData is a subclass of MeasuredData, indicating that it represents a specific type of measured information. Members of the MoodVoiceData class are characterized by being data entities whose primary function is to capture or represent aspects related to mood as conveyed through voice. This classification ensures that any instance of MoodVoiceData inherits all properties and characteristics of MeasuredData, with a particular focus on mood-related voice data."}
{"class": "OrganisationEfficiencyData", "description": "OrganisationEfficiencyData is a subclass of MeasuredData representing measured values related to organizational efficiency. Every instance of this class must have exactly one value each for distanceWalked, areasOfInterestExplored, and areasOfNoInterestExplored, and all of these values must be literals. This class structurally enforces that the data captured is precisely quantified for these three efficiency-related attributes."}
{"class": "StressData", "description": "StressData is defined as a subclass of MeasuredData. Each instance of StressData is required to have exactly one stressLevel property, and the value assigned to stressLevel must be of type rdfs:Literal. This characterizes StressData as a specific type of measured information where exactly one literal value represents the stress level for each data instance."}
{"class": "DirectedDiscussionTask", "description": "DirectedDiscussionTask is defined as a subclass of DiscussionTask. This means every DirectedDiscussionTask is a type of DiscussionTask, inheriting its general characteristics. There are no additional restrictions, property constraints, or disjointness axioms specified for this class. Its primary distinguishing feature lies in its hierarchical placement within the ontology."}
{"class": "FreeDiscussionTask", "description": "FreeDiscussionTask is defined as a subclass of DiscussionTask. This means that every FreeDiscussionTask inherits all properties and characteristics of DiscussionTask, while potentially introducing further specializations specific to free-form or open-ended discussions. No additional constraints or distinguishing features are specified in the current axiom."}
{"class": "DirectedTask", "description": "DirectedTask is defined as a subclass of Task. This means that every DirectedTask is a type of Task, inheriting all general characteristics of Task, but is further specialized to represent a more specific kind or instance within that broader category. No additional restrictions or differentiating axioms are specified beyond its hierarchical position in relation to Task."}
{"class": "DiscussionTask", "description": "DiscussionTask is defined as a subclass of Task. Every instance of DiscussionTask is required to have at least some measured data of type StressData and some measured data of type MoodVoiceData. Additionally, all measured data associated with DiscussionTask must be exclusively of type StressData or MoodVoiceData, meaning no other types of measured data are permitted. This ensures that the assessment of a DiscussionTask is strictly based on stress and mood-related voice data."}
{"class": "SemiDirectedTask", "description": "SemiDirectedTask is a subclass of Task characterized by the measurement of at least some FunctionalAbilitiesData and some CognitiveAbilitiesData. Additionally, any measuredData associated with a SemiDirectedTask must be exclusively of types CognitiveAbilitiesData, FunctionalAbilitiesData, or StressData\u2014no other data types are permitted. This formalization ensures that tasks within this class are specifically designed to evaluate both cognitive and functional abilities, potentially including stress indicators, thereby aligning with their defined assessment scope."}
{"class": "HealthyControlParticipant", "description": "HealthyControlParticipant is defined as a subclass of Person, and is equivalent to individuals who have at least one clinical record containing an assessment where the clinical diagnosis is \"healthy.\" This class formalizes the concept of a participant who, according to their clinical assessments, has no diagnosed health issues, ensuring that all HealthyControlParticipant instances are characterized by clinically verified healthy status."}
{"class": "PersonWithDementia", "description": "PersonWithDementia is defined as a subclass of Person, and is equivalent to any person who has an associated clinical record that contains at least one assessment in which a clinical diagnosis of dementia is present. This formalization ensures that all individuals in the PersonWithDementia class are explicitly linked to the confirmed clinical diagnosis of dementia via assessment records."}
{"class": "PersonWithPredementia", "description": "PersonWithPredementia is defined as a subclass of Person and is equivalent to those individuals who have at least one clinical record containing an assessment that diagnoses predementia. This formalization ensures that any member of the PersonWithPredementia class must be associated with a clinical record documenting a diagnosis assessment explicitly identifying predementia, thus providing a clear ontological basis for representing individuals in early stages of cognitive decline."}
{"class": "Person", "description": "Person is defined as a subclass of ns1:Person, representing human individuals who are participants in one or more Protocols. Each Person is required to participate in at least one Protocol and is not permitted to participate in anything other than a Protocol. Additionally, every Person must have at least one ClinicalRecord, at least one ExperimentalRecord, and at least one DemographicCharacteristicsRecord associated with them. The hasRecord property is strictly limited to linking only to ClinicalRecord, DemographicCharacteristicsRecord, or ExperimentalRecord, ensuring no other types of records are associated with a Person."}
{"class": "S1", "description": "S1_DirectedActivitiesStep is defined as a subclass of ProtocolStep. Each instance of this class is required to involve exactly one S1_P11_WalkingTask, one S1_P12_CountingBackwardsTask, one S1_P13_WalkingCountingBackwardsTask, one S1_P21_SentenceRepeatingTask, and one S1_P22_ArticulationControlTask. Additionally, the only tasks permitted to be involved are S1_P11_WalkingTask, S1_P12_CountingBackwardsTask, S1_P13_WalkingCountingBackwardsTask, S1_P21_SentenceRepeatingTask, S1_P22_ArticulationControlTask, or other general Task instances. This formalization ensures that each S1_DirectedActivitiesStep is composed of these five specific tasks, and does not include any other types of tasks."}
{"class": "S2", "description": "S2_SemiDirectedActivitiesStep is defined as a subclass of ProtocolStep. Any instance of this class must involve exactly one of each of the following tasks: TurnOnTVTask, WaterPlantTask, PrepareHotTeaTask, CallPsychologistTask, AnswerPhoneTask, FindBusLineOnMapTask, PayBillTask, EstablishAccountBalanceTask, LeaveRoomTask, and PrepareDrugBoxTask. Furthermore, the tasks involved are restricted to the following types: AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask. This formalization ensures that any S2_SemiDirectedActivitiesStep is a uniquely structured protocol step composed of this specific set of semi-directed activities."}
{"class": "S3", "description": "S3_DiscussionWithClinicianStep is a subclass of ProtocolStep, representing a specific stage within a protocol that involves engagement with a clinician. This class is formally defined to involve exactly one S3_P1_DirectedExpressionTask and exactly one S3_P21_PictureDescriptionTask, with all associated tasks being limited exclusively to S3_P1_DirectedExpressionTask, S3_P21_PictureDescriptionTask, or their subclasses. This ensures the step comprises a focused discussion component, structured by these particular task types."}
{"class": "S1", "description": "S1_P11_WalkingTask is a subclass of DirectedTask, representing a specific type of directed task that involves walking. Every instance of this class is required to have at least some measuredData of type GaitData as well as some LatencyData, and the measuredData associated with any instance may only be of types GaitData, LatencyData, or StressData. This ensures that S1_P11_WalkingTask is characterized by the collection and analysis of gait and latency information, with the potential inclusion of stress-related data during walking activities."}
{"class": "S1", "description": "S1_P12_CountingBackwardsTask is a subclass of DirectedTask characterized by specific measurement and property constraints. Every instance of this class must have measured data that includes some LatencyData and some MoodVoiceData. Additionally, measured data associated with this task may only be of the types LatencyData, MoodVoiceData, or StressData. The countingType property for individuals in this class is restricted to either _20_0 or _305_285. These axioms ensure that S1_P12_CountingBackwardsTask is a directed task that involves recording response latency, mood/voice indicators, and potentially stress, with a clearly defined range of permissible counting types."}
{"class": "S1", "description": "S1_P13_WalkingCountingBackwardsTask is a subclass of DirectedTask, representing a directed activity involving walking and counting backwards. Members of this class are characterized by being associated with measured data pertaining to gait, latency, and mood/voice, with the option to also include stress-related data. The task requires the presence of countingType information, restricted solely to instances of CountingType. Only data of types GaitData, LatencyData, MoodVoiceData, or StressData are permitted as measured data for this task."}
{"class": "S1", "description": "S1_P21_SentenceRepeatingTask is a subclass of DirectedTask characterized by measuredData properties. Every instance must have at least one measuredData value of type MoodVoiceData and at least one of type LatencyData. The measuredData property for this class can only be filled with LatencyData, MoodVoiceData, or StressData, and no other types. This structure ensures the task consistently collects both mood/voice and latency data, restricting measured data types to those specifically listed."}
{"class": "S1", "description": "S1_P22_ArticulationControlTask is defined as a subclass of DirectedTask. Members of this class are required to have at least one measuredData property linked to LatencyData, and all measuredData properties must be restricted to either LatencyData or StressData. This ensures that any instance of S1_P22_ArticulationControlTask is characterized by the measurement of latency and/or stress data, with no other data types permitted for the measuredData property."}
{"class": "S3", "description": "S3_P1_DirectedExpressionTask is defined as a subclass of DirectedDiscussionTask. Every instance of this class is required to be associated with at least some measuredData of type MoodVoiceData, while all measuredData linked to the class must exclusively be either MoodVoiceData or StressData. This specification ensures that the measurable outcomes for this task are strictly limited to mood or stress-related voice data, reflecting its design for directed expression activities with a focus on mood and stress recording."}
{"class": "S3", "description": "S3_P21_PictureDescriptionTask is defined as a subclass of FreeDiscussionTask. This means that every instance of S3_P21_PictureDescriptionTask is also an instance of FreeDiscussionTask, inheriting all the properties and constraints applicable to free discussion tasks. No additional restrictions or differentiating features beyond this specialization are specified by the axioms."}
{"class": "S3", "description": "S3_P22_PictureDiscussionTask is defined as a subclass of FreeDiscussionTask. This means that every instance of S3_P22_PictureDiscussionTask is also considered a FreeDiscussionTask, inheriting all characteristics and constraints of FreeDiscussionTask, while potentially introducing additional specificity relevant to picture discussion activities."}
{"class": "ClinicalRecord", "description": "ClinicalRecord is defined as a class that must contain exactly one instance each of AutonomyAssessment, MotricityAbilitiesAssessment, CognitiveAbilitiesAssessment, and DiagnosisAssessment. Furthermore, the containsAssessment property for any ClinicalRecord instance is restricted to only those assessments that are of type AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment. This ensures that every ClinicalRecord is a structured record of clinical assessments, each holding exactly one specific assessment of autonomy, motricity abilities, cognitive abilities, and diagnosis, with assessments strictly limited to the defined set."}
{"class": "DemographicCharacteristicsRecord", "description": "DemographicCharacteristicsRecord is a class characterized by strict property constraints to ensure comprehensive demographic data representation. Each instance must have exactly one dateOfBirth value of type xsd:dateTime, exactly one gender value of type GenderType, and exactly one educationLevel value of type rdfs:Literal. Additionally, each record must specify exactly one size (as a rdfs:Literal), and may optionally include laterality, restricted to values defined by LateralityType. These axioms ensure that every record is complete with respect to core demographic attributes while maintaining precise data types and cardinality for each property."}
{"class": "ExperimentalAssessment", "description": "ExperimentalAssessment is a class characterized by the restriction that each of its instances must have exactly one value for the property hasScore, and this value must be an rdfs:Literal. This formalization enforces that every ExperimentalAssessment is associated with a single, literal score value, supporting precise and unambiguous assessment results."}
{"class": "ExperimentalRecord", "description": "ExperimentalRecord represents a record comprised of exactly one assessment of each of the following types: ExperimentalDiagnosisAssessment, CognitiveLoadAssessment, AbilityToOrganiseAssessment, FunctionalAbilityAssessment, MemorySelfAppraisalAssessment, GaitAssessment, ApathyAssessment, and StressAssessment. The class restricts its containsAssessment property so that only these eight specific assessment types are included\u2014no additional or alternative types are permitted. Each ExperimentalRecord must contain exactly one instance of each assessment type, ensuring comprehensive and standardized coverage within each record."}
{"class": "Protocol", "description": "Protocol is a class that represents a structured set of actions or procedures, characterized by a well-defined workflow. Each instance of Protocol must have at least one protocol step and all protocol steps associated with a protocol must be instances of ProtocolStep. Additionally, every protocol is required to specify exactly one date, which must be an instance of xsd:dateTime, and exactly one participant, who must be an instance of Person. The axioms ensure strict adherence to these requirements, supporting precise modeling of procedural activities involving a single documented participant, a single date, and one or more procedural steps."}
{"class": "ProtocolStep", "description": "ProtocolStep represents a process component that is associated with exactly one start time and exactly one end time, both of which must be of type time:Instant. Each ProtocolStep must involve at least one Task, and may involve only entities that are instances of Task. The class\u2019s axioms enforce precise temporal boundaries and ensure strict task involvement, supporting detailed modeling of procedural workflows."}
{"class": "Task", "description": "Task is defined as a class whose members are associated with exactly one start time and exactly one end time, each of which must be an instance of time:Instant. Additionally, every Task must have some measuredData, and all such measuredData must be of type StressData. These property restrictions ensure that every Task is temporally bounded and is characterized by stress-related measurements."}
{"class": "involvesTask", "description": "The property \"involvesTask\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property, nor does it have an inverse property. This indicates that \"involvesTask\" is a general property intended to relate entities to unspecified tasks, without formal constraints on the types of entities or tasks involved."}
{"class": "before", "description": "The property \"before\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This indicates that it represents a generic relation without specific constraints on the types of entities it connects."}
{"class": "protocolStep", "description": "The property \"protocolStep\" does not have any explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of another property and has no declared inverse property. Its intended usage and semantics should be inferred from its name or surrounding context."}
{"class": "status", "description": "The property \"status\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This suggests flexibility in its use, allowing it to relate any types of entities without restriction."}
{"class": "walkingSpeedInstantaneous", "description": "The property \"walkingSpeedInstantaneous\" has no specified characteristics, domain, or range restrictions, and is not defined as a sub-property or inverse of any other property. The property is expected to represent an entity's instantaneous walking speed, but lacks formal axiomatization to constrain or further describe its use."}
{"class": "hasMMSEScore", "description": "The property \"hasMMSEScore\" has no explicitly defined characteristics, domain or range restrictions, super-properties, or inverse properties. Based on its name, it is intended to associate an entity with its MMSE (Mini-Mental State Examination) score."}
{"class": "verbalReactionSpontaneity", "description": "The property \"verbalReactionSpontaneity\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No current textual description is provided. Its use should be interpreted in context, as there are no formal restrictions or relations specified in its axioms."}
{"class": "compliantInstructionsOrder", "description": "The property \"compliantInstructionsOrder\" has no explicitly defined characteristics, domain, or super-properties. Its range is restricted to boolean values (xsd:boolean), indicating it is used to assert whether a particular condition of instruction order compliance holds true or false. No inverse property is specified."}
{"class": "taskDuration", "description": "The property \"taskDuration\" has no specified characteristics, domain, or range restrictions. It does not have defined super-properties or an inverse property. Its intended use should be inferred from its name, which suggests it relates to the duration associated with a task, but no explicit constraints are imposed by the current axioms."}
{"class": "countingType", "description": "The property \"countingType\" has no explicitly defined characteristics, domain, or range restrictions. It does not have any specified super-properties or inverse properties. Its intended purpose must be inferred from its name, as no additional description or axioms are provided."}
{"class": "startTime", "description": "The property \"startTime\" currently has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its intended use is likely to associate an entity with the point in time when an event or activity begins, but no formal restrictions or relationships are specified by the axioms."}
{"class": "areasOfNoInterestExplored", "description": "The property \"areasOfNoInterestExplored\" has no explicitly defined characteristics, domain restrictions, or super-properties. Its range is specified as rdfs:Literal, meaning it relates subjects to literal values such as strings or numbers. No inverse property is specified. This property is intended to capture information about areas that have been explored but are considered of no interest."}
{"class": "hasScore", "description": "The property \"hasScore\" has no defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is likely used to associate an entity with a numerical or evaluative score, but no formal restrictions or relationships are specified in the current axioms."}
{"class": "hasParticipant", "description": "The property \"hasParticipant\" has no specified domain, range, characteristics, super-properties, or inverse properties. This property can be used in a general manner to relate an entity to its participant(s) without restriction on the types of subjects or objects involved."}
{"class": "walkingSpeed", "description": "The property \"walkingSpeed\" has no specified characteristics, domain, range, super-properties, or inverse properties. This property is likely intended to capture the walking speed of an entity, but no formal usage constraints or value types are currently defined."}
{"class": "fabScore", "description": "The property \"fabScore\" has no specified domain, range, characteristics, super-properties, or inverse properties. Its usage and constraints are not defined by axioms, indicating that it is a general property without ontology-imposed restrictions or semantic details."}
{"class": "shortCognitiveBatteryAssessment", "description": "The property \"shortCognitiveBatteryAssessment\" does not have any explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it likely represents a relation involving a brief cognitive battery assessment, but no formal constraints are specified in the ontology."}
{"class": "stressLevel", "description": "The property \"stressLevel\" has no explicitly defined characteristics, domain, or range restrictions, nor any specified super-properties or inverse properties. Its intended purpose is not further described in the available axioms or documentation."}
{"class": "latency", "description": "The property \"latency\" has no explicitly specified characteristics, domain, or range constraints. It is not defined as a sub-property or inverse of any other property. The usage and applicable types for this property are unspecified in the current axioms."}
{"class": "hasUPDRSScore", "description": "The property \"hasUPDRSScore\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to associate an entity with its Unified Parkinson's Disease Rating Scale (UPDRS) score, reflecting clinical assessments in Parkinson's disease. No further constraints or relationships are specified in the current axioms."}
{"class": "measuredData", "description": "The property \"measuredData\" has no specified domain, range, characteristics, super-properties, or inverse properties. It can be used to relate any two entities without restriction, as no additional constraints or descriptive information are provided."}
{"class": "apathyInventory", "description": "The property \"apathyInventory\" does not have specified domain or range restrictions and has no declared characteristics. It is defined as a subproperty of \"owl:topDataProperty,\" indicating it is a data property applicable to any individual. No inverse property is specified."}
{"class": "iadl", "description": "The property \"iadl_e\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional description is provided, and the property is not currently constrained by any axioms, indicating it is unspecified in its current form."}
{"class": "size", "description": "The property \"size\" currently lacks explicit characteristics, domain, or range restrictions, and is not defined as a sub-property or inverse of any other property. This indicates that \"size\" is a general-purpose property intended to relate entities to their size attributes, but its specific usage and constraints are not currently specified."}
{"class": "hasClinicalDiagnosis", "description": "The property \"hasClinicalDiagnosis\" does not specify any characteristics, domain, or range. It is a subproperty of \"hasDiagnosis,\" indicating that it represents a specialized type of diagnostic relationship, specifically pertaining to clinical diagnoses. No inverse property is defined."}
{"class": "hasRecord", "description": "The property \"hasRecord\" does not have explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is likely intended to associate an entity with a record, but no further semantic constraints are specified by its current axioms."}
{"class": "hasDualTaskScore", "description": "The property \"hasDualTaskScore\" does not specify explicit domain or range restrictions and has no defined characteristics. It is a sub-property of \"hasScore,\" indicating that it represents a specific kind of score, likely associated with dual-task performance. No inverse property is defined."}
{"class": "distanceWalked", "description": "The property \"distanceWalked\" has no explicitly defined characteristics, domain, or range restrictions. It does not inherit from any super-properties and has no specified inverse property. Its usage and semantics should be defined by the context or by further specification in the ontology."}
{"class": "endTime", "description": "The property \"endTime\" has no defined domain, range, super-properties, or inverse properties, and no specific logical characteristics are assigned. This property is presumably intended to specify the endpoint or completion time of an event or process, but no ontological constraints or further documentation are currently provided."}
{"class": "gender", "description": "The property \"gender\" has no explicitly defined characteristics, domain, range, or hierarchy with other properties. There is no current description or axiomatic restriction, indicating that its usage context and value types are unspecified within the ontology. No inverse property is defined."}
{"class": "dynamicBalance", "description": "The property \"dynamicBalance\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate entities in the context of maintaining or evaluating balance under changing conditions, but no formal constraints or further documentation are currently specified."}
{"class": "hasExperimentalDiagnosis", "description": "The property \"hasExperimentalDiagnosis\" has no explicitly defined domain, range, or characteristics. It is a sub-property of \"hasDiagnosis,\" indicating that it represents a more specific form of diagnosis relationship within the ontology. No inverse property is specified. The lack of domain and range restrictions allows for flexible usage, but its naming suggests use for associating an entity with an experimental diagnosis."}
{"class": "laterality", "description": "The property \"laterality\" has no explicitly specified domain, range, or characteristics, and does not inherit from any super-properties nor possess any inverse property. The purpose and usage of this property are not further detailed by its current axioms."}
{"class": "hasDiagnosis", "description": "The property \"hasDiagnosis\" has no explicitly defined characteristics, no specified domain or range restrictions, and is not declared as a sub-property of any other property. No inverse property is specified. This suggests that \"hasDiagnosis\" serves as a general relation, potentially linking individuals to their diagnoses without further formal constraints."}
{"class": "freeAndCuedRemindingAssessment", "description": "The property \"freeAndCuedRemindingAssessment\" has no explicitly defined characteristics, domain, or range restrictions, and does not specify any super-properties or inverse properties. Its intended use and meaning should be clarified by additional documentation or context, as current axioms do not constrain its usage."}
{"class": "areasOfInterestExplored", "description": "The property \"areasOfInterestExplored\" has no explicitly defined characteristics, domain restrictions, or super-properties. Its range is rdfs:Literal, indicating that the values associated with this property are expected to be plain text or data values. No inverse property is specified. This property is used to record or describe the areas of interest that have been explored by an entity."}
{"class": "dsm", "description": "The property \"dsm_ivDepressionCriteria\" has no explicitly defined characteristics, domain, or range constraints, and it is not specified as a sub-property of any other property nor does it have an inverse property. Based on its name, it is intended to relate an entity to the diagnostic criteria for depression as defined in DSM-IV, but this intended usage is not formally constrained by the provided axioms."}
{"class": "handTrajectory", "description": "The property \"handTrajectory\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based solely on its name and lack of further restrictions, it can be inferred that this property is used to associate entities with information related to the movement or path of a hand, but its usage is not formally constrained within the ontology."}
{"class": "npi", "description": "The property \"npi\" has no specified characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and does not have any inverse properties. This indicates \"npi\" is a general property with no explicit structural or semantic constraints currently defined."}
{"class": "repetitions", "description": "The property \"repetitions\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. Based on the current axioms, \"repetitions\" can relate any two entities without additional constraints or semantic specifications."}
{"class": "containedInContext", "description": "The property \"containedInContext\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. It is a generic property with no specified constraints, indicating its use and applicability are context-dependent and unconstrained by the current ontology axioms."}
{"class": "participates", "description": "The property \"participates\" has no explicit domain or range restrictions and is a sub-property of \"owl:topObjectProperty.\" It does not have any characteristics such as functionality or symmetry. The property is the inverse of \"hasParticipant,\" meaning if an entity participates in something, that thing has the entity as a participant."}
{"class": "stepLength", "description": "The property \"stepLength\" is a data property with no explicitly defined domain or range, and no specified characteristics. It is a subproperty of owl:topDataProperty, indicating it is a general data property. There is no inverse property defined. This property is intended for representing the length of a step, but no further constraints are provided."}
{"class": "trailMakingTest", "description": "The property \"trailMakingTest\" has no specified characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely used to associate an entity with a trail making test, but no further ontological constraints or relationships are defined for this property."}
{"class": "date", "description": "The property \"date\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional descriptive information is provided, indicating that its use and relationships are unspecified in the current ontology."}
{"class": "hasMonoTaskScore", "description": "The property \"hasMonoTaskScore\" does not have explicitly defined characteristics, domain, or range restrictions. It is defined as a sub-property of \"hasScore,\" indicating it is used to represent a specific type of score related to mono-task contexts. No inverse property is specified."}
{"class": "educationLevel", "description": "The property \"educationLevel\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its use is not constrained to specific classes or value types, allowing for flexible application in the ontology. No further description is currently provided."}
{"class": "dateOfBirth", "description": "The property \"dateOfBirth\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Typically, it is intended to link an entity to its date of birth, although no formal constraints or relationships are currently specified in the ontology."}
{"class": "containsAssessment", "description": "The property \"containsAssessment\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is likely intended to associate an entity with an assessment, but its usage is not formally restricted by axioms. Additional details or constraints may be needed to clarify its precise application within the ontology."}
{"class": "stoppingDisplacement", "description": "The property \"stoppingDisplacement\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No current description is provided. The intended use or semantics of this property should be specified for greater clarity."}
