{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CarnivorousPlant\nDescription: CarnivorousPlant is defined as a subclass of plant whose members are characterized by possessing the ability to consume animals; specifically, each member must eat at least some animals. This distinguishes CarnivorousPlant from other plants by its unique adaptation for animal consumption.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[eats some animal]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every CarnivorousPlant eat at least one animal?", "1": "Is it required for any CarnivorousPlant to engage in eating activities involving animals?", "2": "Can a CarnivorousPlant exist without consuming any animals through the eats property?", "3": "Does the definition of CarnivorousPlant exclude all instances that do not participate in eating animals?", "4": "Are there any CarnivorousPlants that lack the eats relationship to animals?", "5": "Does being able to eat some animal serve as a necessary condition for classification as a CarnivorousPlant?", "6": "Would removing the eats property restriction result in no longer defining Carniv"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Parsnip\nDescription: Parsnip is defined as a subclass of Root, which means every parsnip is formally classified as a type of root. This class inherits all characteristics of roots, establishing parsnip as a specific instance within the broader root category.\nAxiom: {'subClassOf': ['Root']}\nGenerated CQs:", "generated_outputs": {"0": "Which types are classified under the broader group of Root, such as Parsnip?", "1": "Is Parsnip categorized as a kind of Root?", "2": "What more general classes does Parsnip belong to?", "3": "Does Parsnip fall under the classification of Root?", "4": "Which subclasses exist under the category of Root, including Parsnip?", "5": "To what higher-level categories is Parsnip hierarchically related?", "6": "What are the direct superclasses associated with Parsnip?", "7": "Is Parsnip included among the subclasses of Root?", "8": "Under which broader superclass does Parsnip reside?", "9": "Which entities are considered subtypes of Root,"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RockDassie\nDescription: RockDassie is defined as a subclass of animal. Members of this class are characterized by their diet, which mainly consists of grasses and broad-leafed plants. Further information about RockDassie can be found at http://en.wikipedia.org/wiki/Rock_Hyrax.\nAxiom: {'subClassOf': ['animal']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under the category of animal, such as RockDassie?", "1": "What broader classes encompass RockDassie within the taxonomy?", "2": "Is RockDassie classified under the general group of animals?", "3": "Is every RockDassie instance also categorized as an animal?", "4": "Which groups have RockDassie as a more specific member?", "5": "Does RockDassie belong to the classification hierarchy of animals?", "6": "To what higher-level categories does RockDassie pertain?", "7": "Is RockDassie included among the subclasses of animal?", "8": "Under which overarching categories is Rock"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: herbivore\nDescription: herbivore is defined as a subclass of animal, and is formally equivalent to those animals that eat only plants or only things that are part of plants. This class captures all animals whose diet consists exclusively of plants or plant parts, and explicitly excludes animals that consume any non-plant matter. This definition aligns with the description that herbivores are exactly those animals that eat only plants or parts of plants.\nAxiom: {'subClassOf': ['animal'], 'equivalentClass': ['([eats only plant] and [eats only [is-part-of some plant]])']}\nGenerated CQs:", "generated_outputs": {"0": "Must every herbivore be classified as an entity that eats only from plants through the is-part-of relationship?", "1": "Is it required for a herbivore to consume only things that are either plants or are part of plants?", "2": "Can a herbivor exist if it does not eat only plants or their parts via the is-part-of relation?", "3": "Does being an herbivore entail eating only entities that are directly or indirectly part of plants?", "4": "Is it necessary for a herbivore to have its diet restricted to only what is part of a plant or a plant itself?", "5": "Are all herb"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Palmtree\nDescription: Palmtree is defined as a subclass of plant and is characterized by a structural restriction: every palmtree has at least one part that is not a branch. This axiom formally distinguishes palmtrees from other plants by specifying that some of their parts must differ from branches.\nAxiom: {'subClassOf': ['plant'], 'disjointWith': ['tree'], 'propertyRestrictions': ['[has-part some not branch]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between Palmtree and Tree classes?", "1": "Is there any instance that can simultaneously belong to both Palmtree and Tree categories?", "2": "Which classes are specified as mutually exclusive with Palmtree? Next CQ:Is every individual classified under Palmtree necessarily disjoint from those categorized as Tree?", "3": "Can an entity fall within both Palmtree and Tree classifications?", "4": "What formal separation exists between the Palmtree and Tree classes? Last CQ:Does the ontology define any property or class that cannot coexist with Palmtree?", "5": "Which types are declared incompatible with Palmtree according to the current model?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is-part-of\nDescription: The property \"is-part-of\" is defined as both transitive and reflexive, meaning that if an entity is part of another, and that entity is part of a third, then the first is part of the third, and every entity is considered part of itself. There are no explicit domain or range restrictions, no super-properties, and no defined inverse property. This property is typically used to represent part-whole relationships within the ontology.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can entities other than those specified use the ‘is-part-of’ property as its subject?", "1": "Are there any restrictions on what types of entities can serve as the domain for the ‘is-part-of’ property?", "2": "Is it correct that the ‘is-part-of’ property does not have a specified range?", "3": "Can any type of value appear as the object of the ‘is-part-of’ property?", "4": "Does the ontology allow entities outside the specified domain to be related via ‘is-part-of’?", "5": "What kinds of values can be associated as the range of the ‘is-part-of’ property?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: has-part\nDescription: The property \"has-part\" is defined as transitive, allowing relationships to propagate along chains of connections. It has no explicitly defined domain or range restrictions, indicating it can relate any entities. \"has-part\" has \"is-part-of\" as its inverse property, but it is not specified as a sub-property of any other property. This property is typically used to express part-whole relationships between entities.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['is-part-of']}\nGenerated CQs:", "generated_outputs": {"0": "How are ‘has-part’ and ‘is-part-of’ related as inverses within the ontology?", "1": "If entity A has-part entity B, does this entail that B is-part-of A according to the ontology’s definition?", "2": "Which properties serve as inverses for ‘has-part’ in the ontology?", "3": "Is it correct that the inverse property of ‘has-part’ is defined as ‘is-part-of’?", "4": "Can an object have more than one inverse property in the ontology?", "5": "Does having an inverse property imply a specific directionality in relationships?", "6": "Are all uses of ‘has-part’"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eats\nDescription: The property \"eats\" does not have explicitly defined characteristics, domain restrictions, super-properties, or an inverse property. Its range is restricted to individuals classified as animals, plants, or entities that are part of an animal or plant, indicating its use for relating an entity to what it consumes within these biological groups.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['(animal or plant or [is-part-of only animal] or [is-part-of only plant])'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can entities other than animals, plants, or their parts be used as subjects for the 'eats' property?", "1": "Is there any entity that can appear as the range when associated via the 'eats' property?", "2": "What types of objects are permitted as the range for the property 'eats'?", "3": "Can anything except animals, plants, or entities consisting entirely of either serve as the value for the 'eats' property's range?", "4": "Are all possible values for the 'eats' property's range limited to animals, plants, or their constituent parts?", "5": "Does every instance associated through"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eaten-by\nDescription: The property \"eaten-by\" has no specified characteristics, domain, range, super-properties, or inverse properties. This indicates that there are no explicit restrictions or relationships defined for this property in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['eats']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology represent the reciprocal relationship between ‘eaten-by’ and ‘eats’?", "1": "If entity A is related via ‘eaten-by’ to entity B, can we infer that B is related via ‘eats’ to A?", "2": "Which properties are designated as inverses within the ontology?", "3": "Is ‘eats’ declared as the inverse property of ‘eaten-by’?", "4": "Does the ontology allow multiple paths connecting entities through both ‘eaten-by’ and ‘eats’ properties?", "5": "Can an instance X use both ‘eaten-by(Y)’ and ‘"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InLocation\nDescription: InLocation is defined as a subclass of AtomicActivity, representing activities associated with a specific physical location. Every instance of InLocation must have at least one roomLocalisation relationship to a Room, ensuring that all activities of this class are explicitly linked to a room where they occur.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[roomLocalisation some Room]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every InLocation necessarily have at least one roomLocalisation relation to a Room?", "1": "Is it required for any InLocation to be related via roomLocalisation to a Room?", "2": "Can an InLocation exist without being connected through roomLocalisation to a Room?", "3": "Is InLocation a specialized form of AtomicActivity that requires involvement with a Room through roomLocalisation?", "4": "Does the classification of InLocation as a subtype of AtomicActivity entail that it always participates in a roomLocalisation relationship with a Room?", "5": "Are all instances of InLocation characterized by having a roomLocalisation link to a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Object\nDescription: Object is defined as a subclass of Entity. This relationship indicates that every instance of Object is also considered an Entity, inheriting all general characteristics associated with Entity. No other constraints or differentiating axioms are specified for Object.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities encompass Object as a more specific type?", "1": "Is Object categorized under the broader class of Entity?", "2": "What higher-level classes does Object fall within?", "3": "Does Object inherit properties from its parent class, Entity?", "4": "Which subclasses are included under Entity, such as Object?", "5": "What are the direct superclasses associated with Object?", "6": "Is Object recognized as a specialized form of Entity?", "7": "To which overarching categories is Object logically related?", "8": "Can Object be viewed as a kind of Entity?", "9": "Under which overarching groupings can Object be classified?", "10": "Is Object defined as a more specific version of Entity"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Outdoors\nDescription: Outdoors is defined as a subclass of InLocation, indicating that it represents a specific type of location. Any instance of Outdoors is by definition also an instance of InLocation, capturing places or areas that are external to buildings or structures. The class formalizes the concept of being in an open, outside environment.\nAxiom: {'subClassOf': ['InLocation']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass Outdoors?", "1": "Is Outdoors classified under the category InLocation?", "2": "Which locations include Outdoors as a more specific subtype?", "3": "Does Outdoors fall within the scope of InLocation?", "4": "What are the direct parent classes associated with Outdoors?", "5": "Which subclasses are included under InLocation, such as Outdoors?", "6": "Is Outdoors categorized as a form of InLocation?", "7": "Under which higher-level location types does Outdoors fit?", "8": "What entities are considered subtypes of InLocation, including Outdoors?", "9": "Does Outdoors represent a specialized kind of InLocation?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LivingRoom\nDescription: LivingRoom is defined as a subclass of Room, representing a specific type of room within a structure. This classification indicates that every instance of LivingRoom is necessarily an instance of Room, inheriting all properties and constraints that apply to Room. No further distinguishing axioms or restrictions are present beyond this subclass relationship.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "generated_outputs": {"0": "Which types fall under the category of Room, including LivingRoom?", "1": "Is LivingRoom classified as a more specific kind of Room?", "2": "What broader classes does LivingRoom belong to within the ontology?", "3": "Next level up from LivingRoom, what parent categories exist?", "4": "Does LivingRoom represent a specialized form of Room?", "5": "Under which higher-level concepts can LivingRoom be grouped?", "6": "Which subtypes are encompassed by Room, such as LivingRoom?", "7": "To which overarching categories is LivingRoom hierarchically related?", "8": "What general categories include LivingRoom as a member?", "9": "Does LivingRoom inherit all"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bucket\nDescription: Bucket is defined as a subclass of Object. This means that every instance of Bucket is considered an Object, inheriting all the general properties and constraints associated with Objects. Since no additional restrictions or relations are specified, Bucket serves as a more specific type of Object without further distinguishing characteristics in this formalization.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass Bucket within the ontology?", "1": "Which entities are classified under Object, such as Bucket?", "2": "Does Bucket fall under the category of Object?", "3": "Is Bucket categorized under the class Object?", "4": "What higher-level classifications does Bucket inherit from?", "5": "Which subclasses are included within Object, specifically including Bucket?", "6": "To which overarching categories is Bucket assigned?", "7": "Is Bucket a specialized form of Object?", "8": "Under what more general types can Bucket be placed?", "9": "Does Bucket represent a more specific version of Object?", "10": "What concepts are directly subordinate to Object, like Bucket?", "11": "Which superclasses include Bucket"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PickUpPhone\nDescription: PickUpPhone is defined as a subclass of AtomicActivity, indicating that it represents an indivisible, fundamental action within a larger process or workflow. This classification implies that PickUpPhone is treated as a single, non-decomposable activity in the ontology. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What activities fall under the category of AtomicActivity, including PickUpPhone?", "1": "Is PickUpPhone classified as a type of AtomicActivity?", "2": "Which broader categories encompass PickUpPhone?", "3": "What higher-level classes does PickUpPhone inherit from?", "4": "Does PickUpPhone belong to the set of subclasses associated with AtomicActivity?", "5": "To which superordinate concepts is PickUpPhone linked?", "6": "What specific activities are categorized under AtomicActivity, such as PickUpPhone?", "7": "Is AtomicActivity a more general class than PickUpPhone?", "8": "Which entities are considered specializations of AtomicActivity, including PickUp"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Kitchen\nDescription: Kitchen is defined as a subclass of Room, indicating that every kitchen is considered a type of room within an environment. No additional property restrictions or relationships are specified in the axiom, so the class primarily inherits general characteristics of rooms while denoting its specific use as a kitchen.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass Kitchen?", "1": "Is Kitchen classified under the category of Room?", "2": "Which entities are subclasses of Room, including Kitchen?", "3": "Is Kitchen categorized as a type of Room?", "4": "What are the parent classes for Kitchen?", "5": "Does Kitchen fall under the classification of Room?", "6": "Which more general concepts include Kitchen as a member?", "7": "Under which overarching classifications does Kitchen exist?", "8": "Are all Kitchens also considered Rooms?", "9": "What are the direct superclasses of Kitchen?", "10": "Is Kitchen a specialized form of Room?", "11": "To what higher-level categories does Kitchen belong within this context?", "12": "Can Kitchen"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareDrink\nDescription: PrepareDrink is defined as a subclass of ComplexActivity, indicating that it represents a type of complex activity within the ontological model. Instances of PrepareDrink inherit all characteristics of ComplexActivity and specifically pertain to the processes and actions involved in preparing a drink. The class does not impose further restrictions or differentiators beyond its place in the activity hierarchy.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What are the direct superclasses associated with PrepareDrink?", "1": "Is PrepareDrink categorized under the broader group of ComplexActivity?", "2": "Which activities are considered more specific instances of ComplexActivity, such as PrepareDrink?", "3": "Is ComplexActivity a higher-level category encompassing PrepareDrink?", "4": "What types of ComplexActivity include PrepareDrink as a specialized form?", "5": "Does PrepareDrink fall under the classification of ComplexActivity?", "6": "Under which overarching categories is PrepareDrink grouped?", "7": "Are all instances of PrepareDrink also classified under ComplexActivity?", "8": "Which subclasses exist beneath ComplexActivity, including PrepareDrink?", "9": "To what general classes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveLunch\nDescription: HaveLunch is defined as a subclass of HaveMeal, indicating that every instance of HaveLunch is also an instance of HaveMeal. This class represents activities or events specifically related to having lunch, distinguishing them from other types of meals. No additional restrictions or properties are imposed beyond this hierarchical relationship.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "generated_outputs": {"0": "What more general classes does HaveLunch belong to?", "1": "Is HaveLunch categorized under the broader group of HaveMeal?", "2": "Which specific instances fall within the scope of HaveMeal, including HaveLunch?", "3": "Next level up from HaveLunch in the hierarchy is HaveMeal.", "4": "Does HaveLunch represent a specialized form of HaveMeal?", "5": "What subclasses are encompassed by HaveMeal, such as HaveLunch?", "6": "Is HaveLunch classified as a type of HaveMeal?", "7": "Which higher-level concepts include HaveLunch within their range?", "8": "Under which overarching categories can HaveL"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Patient\nDescription: Patient is defined as a subclass of Person, representing individuals who are receiving or registered to receive medical care or treatment. Any individual designated as a Patient is inherently a Person.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass Patient within the hierarchy?", "1": "Is every Patient necessarily classified under Person?", "2": "Which entities are recognized as subclasses of Person, including Patient?", "3": "What categories does Patient fall under in terms of its hierarchical structure?", "4": "Does Patient represent a specific type of Person?", "5": "To which parent class does Patient belong in this context?", "6": "Which types of Person include Patient as a more specialized form?", "7": "Under what overarching groupings can Patient be categorized?", "8": "Is Patient a narrower concept within the category of Person?", "9": "Are there any higher-level classifications that Patient falls under?", "10": "Which broader categories encompass"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bedroom\nDescription: Bedroom is defined as a subclass of Room, indicating that every instance of Bedroom is also an instance of Room. This classification structurally organizes Bedroom within the broader hierarchy of building spaces, emphasizing that a Bedroom inherits all general characteristics of a Room while potentially possessing more specific properties related to its intended use as a sleeping area.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "generated_outputs": {"0": "What are the direct superclasses associated with Bedroom?", "1": "Which types of Rooms include Bedroom as a specialized category?", "2": "Is Bedroom categorized under the broader class of Room?", "3": "What subclasses fall under Room, specifically including Bedroom?", "4": "To which higher-level classes does Bedroom belong?", "5": "Does Bedroom inherit all properties from Room?", "6": "Is Room a more general type encompassing Bedroom?", "7": "Which entities are classified as subtypes of Room, such as Bedroom?", "8": "Under which overarching categories can Bedroom be grouped?", "9": "What broader conceptual groupings include Bedroom as a member?", "10": "Is Bedroom recognized as a specialized form of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Event\nDescription: Event is a class characterized by property restrictions that enforce temporal precision. Each instance of Event must have exactly one startTime, which must be of type time:Instant, and exactly one duration, which must be of type time:DurationDescription. These constraints ensure that every Event is uniquely defined by both a specific starting instant and a specific duration, providing an unambiguous temporal identity for each Event.\nAxiom: {'propertyRestrictions': ['[duration only time:DurationDescription]', '[startTime exactly 1 time:Instant]', '[duration exactly 1 time:DurationDescription]', '[startTime some time:Instant]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every Event necessarily have at least one associated startTime?", "1": "Is it required for an Event to possess a startTime through some relationship?", "2": "Can an Event exist without being linked to any startTime via the property'startTime'?", "3": "Does the presence of a'startTime' property guarantee the existence of an Event?", "4": "Is there any Event that does not participate in the'startTime' relation with another entity?", "5": "Must all Events engage with at least one entity via the'startTime' property?", "6": "Is it possible for an Event to lack a'startTime' connection?", "7": "Does the definition of Event entail the existence"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorClosed\nDescription: DoorClosed is defined as a subclass of Closed, meaning every DoorClosed instance is also a Closed instance. There are no additional property restrictions specified for this class. This formalization indicates that DoorClosed represents the specific state where a door is closed, inheriting all characteristics of the broader Closed class.\nAxiom: {'subClassOf': ['Closed'], 'propertyRestrictions': ['[hasAgent some Door]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every occurrence of DoorClosed involve at least one entity classified as a Door?", "1": "Is it required that the agent associated with DoorClosed is necessarily a Door?", "2": "Can DoorClosed exist without any involvement from a Door through the hasAgent property?", "3": "Does the definition of DoorClosed entail that there must be an association via hasAgent to a Door?", "4": "Are all instances of DoorClosed characterized by having at least one Door as their agent?", "5": "Is it possible for DoorClosed to occur without being linked through hasAgent to a Door?", "6": "Does the presence of a Door as the hasAgent always define"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasTemperature\nDescription: The property \"hasTemperature\" inherits from the broader property \"hasValue\" but does not specify any domain or range restrictions, nor any specific logical characteristics. No inverse property is defined. This property is intended to associate an entity with its temperature, but its use is broadly unconstrained by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can entities other than those specified by the domain use the 'hasTemperature' property?", "1": "Is it correct that no domain is assigned for the 'hasTemperature' property?", "2": "What types of values are permitted as the range for the 'hasTemperature' property?", "3": "Is there any restriction on what can serve as the range for the 'hasTemperature' property?", "4": "Can anything other than the specified range be used with the 'hasTemperature' property?", "5": "Is there a type that should be associated as the range for the property 'hasTemperature'?", "6": "Is there any value that could serve as the domain"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no specified characteristics, domain, range, super-properties, or inverse property. It is a general property whose usage is not restricted to any particular class or value type in the current ontology specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can anything other than None serve as the subject for the 'duration' property?", "1": "Is it correct that there are no classes associated with the domain of 'duration'?", "2": "What types of values can be used as the range for the property 'duration'?", "3": "Can 'duration' have a range beyond what is currently defined?", "4": "Is it correct that the property 'duration' does not specify a domain?", "5": "Is it correct that the property 'duration' does not specify a range?", "6": "Should the property 'duration' have a more specific domain?", "7": "Are there any restrictions on the types of objects that"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasNoiseLevel\nDescription: The property \"hasNoiseLevel\" has no explicitly defined characteristics, domain, or range restrictions. It does not declare any super-properties or inverse properties. This indicates that the property can be used flexibly to relate entities to unspecified values representing noise levels, without ontological constraints on the types of subjects or objects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the possible domains for the property ‘hasNoiseLevel’?", "1": "What kinds of values can serve as the range for the property ‘hasNoiseLevel’?", "2": "Is it correct that the property ‘hasNoiseLevel’ does not have a specified domain?", "3": "Can anything other than a None value be assigned as the domain for the property ‘hasNoiseLevel’?", "4": "Is there a valid range associated with the property ‘hasNoiseLevel’?", "5": "Should the property ‘hasNoiseLevel’ use the class None as its range?", "6": "Does the property ‘hasNoiseLevel’ require a range restriction"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: index-type\nDescription: index-type is a subclass of datatype role, characterized by specific property restrictions. Any instance of index-type must have as members both an index upperbound and an index lowerbound, indicating the range of allowable index values. Additionally, index-type instances are members of an index-type list and are associated, via the role_of property, with some datatype. This formalization ensures that index-type serves as a role connecting data types to index value ranges, organized within relevant index-type lists.\nAxiom: {'subClassOf': ['datatype role'], 'propertyRestrictions': ['[has_member some index upperbound]', '[is_member_of some index-type list]', '[has_member some index lowerbound]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every index-type necessarily play the role_of relationship with at least one datatype?", "1": "Is it required for any index-type to be associated through role_of with a datatype?", "2": "Can an index-type exist without being related via role_of to any datatype?", "3": "Does the existence of an index-type imply the presence of some datatype linked by role_of?", "4": "Is there any index-type that does not participate in a role_of relationship with a datatype?", "5": "Are all instances of index-type necessarily connected to a datatype via the role_of property?", "6": "Can an index-type ever occur without having the role_of relation defined"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: index access\nDescription: index access is defined as a subclass of direct access property and is explicitly disjoint with key access, meaning an individual cannot be both an index access and a key access. This class represents mechanisms or operations that permit direct access to elements based on their positional index within a collection, distinctly separating it from access methods based on explicit keys.\nAxiom: {'subClassOf': ['direct access property'], 'disjointWith': []}\nGenerated CQs:", "generated_outputs": {"0": "What distinguishes index access from key access according to the ontology?", "1": "Is any entity permitted to belong simultaneously to both index access and key access categories?", "2": "Which classes are declared as mutually exclusive with key access?", "3": "Is index access classified under direct access property alongside other types such as key access?", "4": "What higher-level properties encompass both index access and key access?", "5": "Does the ontology specify that index access and key access must be placed in separate hierarchical groupings?", "6": "Which direct access property subclasses include both index access and key access?", "7": "Is there any instance that could be characterized as both an index access"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: identifier not unique\nDescription: identifier not unique is a subclass of aggregate-imposed identifier uniqueness and is disjoint with identifier unique, meaning no individual can simultaneously be both identifier not unique and identifier unique. This class represents identifiers within an aggregate context that are not required to be unique, distinguishing them from identifiers that have enforced uniqueness at the aggregate level.\nAxiom: {'subClassOf': ['aggregate-imposed identifier uniqueness'], 'disjointWith': []}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between identifier not unique and identifier unique?", "1": "Is there any instance that could be classified as both identifier not unique and identifier unique?", "2": "Which classes are specified as mutually exclusive with identifier unique?", "3": "Is identifier unique defined as being incompatible with identifier not unique?", "4": "What formal distinction does the ontology draw between identifier not unique and identifier unique?", "5": "Can something be considered both identifier not unique and identifier unique according to the ontology?", "6": "Which entities are asserted to be distinct from identifier unique?", "7": "Is identifier unique placed in opposition to identifier not unique within the ontology?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: record of discrete datatype\nDescription: record of discrete datatype is a subclass of record (tuple) datatype, characterized by the requirement that it must have at least one member drawn from a discrete field-list. This ensures that instances of this class represent tuple datatypes whose components include one or more fields with discrete (distinct, countable) values.\nAxiom: {'subClassOf': ['record (tuple) datatype'], 'propertyRestrictions': []}\nGenerated CQs:", "generated_outputs": {"0": "Must every record of a discrete datatype contain at least one member from a discrete field-list?", "1": "Is it required for records of discrete datatypes to possess members originating from discrete field-lists?", "2": "Can a record of a discrete datatype exist without having any member taken from a discrete field-list?", "3": "Does the presence of a property restriction requiring a member from a discrete field-list apply universally to all records of discrete datatypes?", "4": "Are there any records of discrete datatypes lacking a member derived from a discrete field-list?", "5": "Does the definition allow for records of discrete datatypes to be associated solely with non"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: cardinality\nDescription: cardinality is a subclass of datatype property and is disjoint from the classes order, boundedness, and equality, meaning no entity can simultaneously belong to both cardinality and any of these classes. It is formally equivalent to the union of countable, finite, and uncountable, reflecting that cardinality expresses the size or \"number of elements\" in a set, which may be countable, finite, or uncountable. This structure ensures clear differentiation from related set properties such as order, boundedness, and equality.\nAxiom: {'subClassOf': ['datatype property'], 'disjointWith': ['order', 'equality'], 'equivalentClass': ['(countable or finite or uncountable)']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology specify the distinction between cardinality and boundedness?", "1": "Is there any instance that can be classified under both cardinality and boundedness?", "2": "Which property types are defined as mutually exclusive with boundedness? Next CQ:Is cardinality recognized as a type of dataype property?", "3": "What broader categories encompass cardinality within the ontology?", "4": "Which specific properties fall under the category of datatype property, including cardinality? Last CQ:Does every cardinality represent a form of datatype property?", "5": "Can anything classified as a datatype property fail to be categorized as cardinality?", "6": "Are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: choice generator\nDescription: choice generator is defined as a subclass of non-aggregate generator. Members of this class are further characterized by the property that they are associated with at least one choice datatype, as expressed by the restriction [is_member_of some choice datatype]. This means any individual classified as a choice generator must participate in or be a member of a choice datatype, distinguishing them from other forms of non-aggregate generators.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[is_member_of some choice datatype]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of choice generator necessarily have at least one property restriction involving the is_member_of relation with a choice datatype?", "1": "Is it required for all choice generators to possess a property connection via is_member_of to at least one choice datatype?", "2": "Can a choice generator exist without having the property is_member_of applied to any choice datatype?", "3": "Is being associated through is_member_of with a choice datatype a necessary condition for something to be classified as a choice generator?", "4": "Does the definition of choice generator entail that each instance has at least one property restriction linked by is_member_of to a choice datatype?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: sequence of real datatype\nDescription: sequence of real datatype is a subclass of sequence datatype, characterized by the restriction that its members must be of the real base type. This means every element within a sequence of this type is a real number, ensuring that the sequence contains no members of other datatypes.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has_member some real base type]']}\nGenerated CQs:", "generated_outputs": {"0": "Does sequence of real datatype fall under the broader category of sequence datatype?", "1": "Which specific types are encompassed within sequence datatype, such as sequence of real datatype?", "2": "What general categories does sequence of real datatype inherit from?", "3": "Is sequence of real datatype categorized under sequence datatype?", "4": "To which higher-level classes is sequence of real datatype related?", "5": "What are the parent classes associated with sequence of real datatype?", "6": "Does sequence datatype include sequence of real datatype as one of its subclasses?", "7": "Under what overarching concepts is sequence of real datatype classified?", "8": "Which more specialized forms exist within the sequence datatype hierarchy,"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: labeled dataset descriptive field component\nDescription: labeled dataset descriptive field component is defined as a subclass of field component. This means every labeled dataset descriptive field component is by definition a type of field component. No additional property restrictions or disjointness constraints are specified, so its unique characterization is its specialization of the more general field component class.\nAxiom: {'subClassOf': ['field component']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass labeled dataset descriptive field component?", "1": "Is labeled dataset descriptive field component categorized under field component?", "2": "Which entities are classified as specialized forms of field component, such as labeled dataset descriptive field component?", "3": "Does every labeled dataset descriptive field component fall within the category of field component?", "4": "What are all subclasses included under field component, specifically mentioning labeled dataset descriptive field component?", "5": "Under which higher-level classification does labeled dataset descriptive field component reside?", "6": "Is labeled dataset descriptive field component recognized as a specific kind of field component?", "7": "Which superclasses define the membership of labeled dataset descriptive field component within"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: dyadic retrieve operation\nDescription: dyadic retrieve operation is defined as a subclass of dyadic operation, indicating it is an operation that acts on exactly two inputs or entities. No further distinguishing axioms or properties are specified, so its classification relies solely on this generalization.\nAxiom: {'subClassOf': ['dyadic operation']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does dyadic retrieve operation fall under within the context of operations?", "1": "Is every dyadic retrieve operation also classified as a dyadic operation?", "2": "Which specific types are encompassed by dyadic operation, such as dyadic retrieve operation?", "3": "Is dyadic retrieve operation categorized under dyadic operation?", "4": "What are the more general operation categories that include dyadic retrieve operation?", "5": "Which higher-level operation classifications include dyadic retrieve operation as a member?", "6": "Does dyadic operation encompass dyadic retrieve operation among its subclasses?", "7": "Which subcategories fall under dyadic operation,"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: promote operation\nDescription: promote operation is classified as a subclass of monadic operation. This indicates that promote operation is an operation involving a single operand or argument, inheriting all characteristics associated with monadic operations. No further distinguishing features or constraints are specified beyond its classification within this hierarchy.\nAxiom: {'subClassOf': ['monadic operation']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass promote operation?", "1": "Does every promote operation fall under the category of monadic operation?", "2": "What specific types of monadic operation include promote operation as a subtype?", "3": "Is promote operation categorized as a kind of monadic operation?", "4": "Which broader classes does promote operation belong to within the operation hierarchy?", "5": "Are all instances of promote operation also considered monadic operation instances?", "6": "Under which general operations is promote operation structured?", "7": "Does promote operation represent a specialized form of monadic operation?", "8": "To what overarching operation categories does promote operation pertain?", "9": "Is promote operation a more specific"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Reciprocal:complex\nDescription: Reciprocal:complex is defined as a subclass of reciprocal operation. This means every instance of Reciprocal:complex is also a reciprocal operation. The class is characterized by operations that involve computing the reciprocal (multiplicative inverse) specifically within the context of complex numbers.\nAxiom: {'subClassOf': ['reciprocial operation']}\nGenerated CQs:", "generated_outputs": {"0": "What are the more general classes encompassing Reciprocal:complex?", "1": "Is Reciprocal:complex classified under the broader category of reciprical operation?", "2": "Which specific types fall under the category of reciprical operation, including Reciprocal:complex?", "3": "Is Reciprocal:complex categorized as a type of reciprical operation?", "4": "What broader classes does Reciprocal:complex inherit from?", "5": "Does Reciprocal:complex represent a specialized form of reciprical operation?", "6": "Which parent categories is Reciprocal:complex associated with?", "7": "Is Reciprocal:complex considered a member of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Equal:time&date\nDescription: Equal:time&date is defined as a subclass of equal operation. This class represents equality operations specifically applied to time and date values, inheriting all characteristics of general equal operations while restricting its domain to temporal data. There are no additional property restrictions or disjointness axioms specified.\nAxiom: {'subClassOf': ['equal operation']}\nGenerated CQs:", "generated_outputs": {"0": "Does Equal:time&date fall under the broader classification of equal operation?", "1": "What specific types are encompassed within equal operation, such as Equal:time&date?", "2": "Which more general concepts include Equal:time&date as a specialized form?", "3": "Is every instance of Equal:time&date also classified as an equal operation?", "4": "What higher-level categories does Equal:time&date belong to within the context of operations?", "5": "To which superordinate classes is Equal:time&date related according to the hierarchy?", "6": "Does Equal:time&date represent a specialization of equal operation?", "7": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: implementation dependent access\nDescription: implementation dependent access is defined as a subclass of indirect access property, indicating that it inherits all characteristics of indirect access property. This means any instance of implementation dependent access is also considered an indirect access property, but with specific details or constraints determined by the particular implementation. There is no further specification beyond its placement in the class hierarchy.\nAxiom: {'subClassOf': ['indirect acess property']}\nGenerated CQs:", "generated_outputs": {"0": "Which properties are classified under indirect acess property, such as implementation dependent access?", "1": "Is implementation dependent access categorized under indirect acess property?", "2": "What broader classes encompass implementation dependent access?", "3": "Does implementation dependent access fall within the category of indirect acess property?", "4": "Which subclasses are included under indirect acess property, for example implementation dependent access?", "5": "To which more general properties does implementation dependent access belong?", "6": "Can implementation dependent access be seen as a type of indirect acess property?", "7": "Under what overarching types can implementation dependent access be organized?", "8": "Which higher-level categories include implementation dependent access?", "9": "Is implementation dependent access a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: non-recursive\nDescription: non-recursive is defined as a subclass of recursiveness, meaning every non-recursive entity is a specific type of recursiveness. This class represents elements that, while related to the broader concept of recursiveness, possess characteristics that distinguish them as non-recursive within that context.\nAxiom: {'subClassOf': ['recursiveness']}\nGenerated CQs:", "generated_outputs": {"0": "Which types are classified under recursiveness, such as non-recursive?", "1": "What general categories encompass non-recursive as a more specific instance?", "2": "Does non-recursive fall under the category of recursiveness?", "3": "Is non-recursive categorized under recursiveness?", "4": "To which overarching concepts does non-recursive belong in terms of recursiveness classification?", "5": "Which subclasses are included within recursiveness, for example, non-recursive?", "6": "Under what broader classes is non-recursive organized according to recursiveness?", "7": "Is recursiveness a parent category of non-recursive?", "8": "Can recursiveness be seen as encompassing"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: labeled dataset target field component\nDescription: labeled dataset target field component is defined as a subclass of field component. This means every labeled dataset target field component is a specific type of field component, typically representing the target variable in a labeled dataset. No additional property or disjointness restrictions are specified for this class.\nAxiom: {'subClassOf': ['field component']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under field component, including labeled dataset target field component?", "1": "What broader categories encompass labeled dataset target field component?", "2": "Is labeled dataset target field component categorized within field component?", "3": "Does the concept of labeled dataset target field component fall under the category of field component?", "4": "Which more general concepts include labeled dataset target field component as a member?", "5": "Is labeled dataset target field component a specialized form of field component?", "6": "To what higher-level classes does labeled dataset target field component belong?", "7": "Can labeled dataset target field component be viewed as a particular kind of field component?", "8": "Under which overarching"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: dyadic aritmetic operation\nDescription: dyadic arithmetic operation is defined as a subclass of dyadic operation, indicating that every dyadic arithmetic operation involves exactly two inputs (operands). This class specifically focuses on operations in the arithmetic domain (such as addition, subtraction, multiplication, or division), extending the more general concept of dyadic operations by emphasizing their application to arithmetic computations.\nAxiom: {'subClassOf': ['dyadic operation']}\nGenerated CQs:", "generated_outputs": {"0": "What are the broader operation classes that include dyadic arithmetic operation?", "1": "Is dyadic arithmetic operation classified under the category of dyadic operation?", "2": "Which specific types fall within the scope of dyadic operation, such as dyadic arithmetic operation?", "3": "Is dyadic operation a parent class of dyadic arithmetic operation?", "4": "What higher-level categories encompass dyadic arithmetic operation?", "5": "Does dyadic operation encompass dyadic arithmetic operation as one of its subclasses?", "6": "Which operations are more specialized forms of dyadic operation, including dyadic arithmetic operation?", "7": "To which overarching operational categories does dyadic arithmetic operation belong?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AttributeReplace:class\nDescription: AttributeReplace:class is defined as a subclass of dyadic updating operation. This means it represents a type of operation that updates data by replacing an attribute, and, as a dyadic operation, it involves two input entities. No further restrictions, disjointness, or property constraints are specified in the axiom, so its primary characterization is as a specialized updating action within the context of dyadic operations.\nAxiom: {'subClassOf': ['dyadic updating operation']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass AttributeReplace:class?", "1": "Which operations fall under the category of dyadic updating operation, including AttributeReplace:class?", "2": "Is AttributeReplace:class categorized as a form of dyadic updating operation?", "3": "Next more specific class beneath dyadic updating operation is AttributeReplace:class?", "4": "Which subclasses are included in dyadic updating operation, such as AttributeReplace:class?", "5": "Does AttributeReplace:class inherit from the general concept of dyadic updating operation?", "6": "What parent concepts does AttributeReplace:class have within this domain?", "7": "Is AttributeReplace:class classified under the overarching group of dyadic updating operation?", "8": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: octet string\nDescription: octet string is defined as a subclass of defined datatype. This means that octet string represents a specific type of datatype, though its precise structure and constraints are not further elaborated in the current axioms. Members of this class inherit all characteristics of defined datatype.\nAxiom: {'subClassOf': ['defined datatype']}\nGenerated CQs:", "generated_outputs": {"0": "Which datatypes are specified as subclasses under defined datatype, including octet string?", "1": "Does octet string fall under the category of defined datatype?", "2": "What broader datatype categories encompass octet string?", "3": "Is defined datatype a more general concept than octet string?", "4": "Which higher-level datatype classifications include octet string as a member?", "5": "Is defined datatype a parent of the octet string datatype?", "6": "What specific datatypes are categorized under defined datatype, such as octet string?", "7": "Can any instance of octet string be classified as a defined datatype?", "8": "Which datatypes have defined datatype as their"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Multiply:rational\nDescription: Multiply:rational is a subclass of multiply operation. This class represents multiplication operations where the operands are specifically rational numbers, distinguishing it from multiply operations over other numeric domains.\nAxiom: {'subClassOf': ['multiply operation']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific operations are classified under multiply operation, such as Multiply:rational?", "1": "Is every Multiply:rational instance categorized within multiply operation?", "2": "What broader classes does Multiply:rational fall under in the context of mathematical operations?", "3": "Does Multiply:rational represent a type of multiply operation?", "4": "Which types of multiply operation encompass Multiply:rational as a more specialized form?", "5": "Is Multiply:rational included among the subclasses of multiply operation?", "6": "Of what general operation categories is Multiply:rational a member?", "7": "To which higher-level operation classifications does Multiply:rational belong?", "8": "Does Multiply:rational inherit all properties defined"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: access by value\nDescription: access by value is defined as a subclass of indirect access property, indicating that it represents a specific type of indirect access. Any individual classified as access by value inherits all the characteristics of indirect access property, typically referring to situations where access is achieved through the value rather than the reference or pointer itself.\nAxiom: {'subClassOf': ['indirect acess property']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass access by value within the ontology?", "1": "Is access by value categorized under indirect access property?", "2": "Which properties are subclasses of indirect access property, including access by value?", "3": "Does every instance of access by value also fall under indirect access property?", "4": "What are the more general types that include access by value?", "5": "Which higher-level concepts does access by value belong to?", "6": "Is access by value a specialized form of indirect access property?", "7": "Under which overarching property classification is access by value organized?", "8": "Which specific access methods are included within indirect access property, such as access by value?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: unordered aggregate\nDescription: unordered aggregate is a subclass of aggregate imposed ordering. This means every unordered aggregate is an aggregate where some ordering has been considered, but specifically, unordered aggregate refers to those aggregates where the order of the constituents is irrelevant or not specified. No additional disjointness or property restrictions are defined.\nAxiom: {'subClassOf': ['aggregate imposed ordering']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under aggregate imposed ordering, such as unordered aggregate?", "1": "Is unordered aggregate classified under aggregate imposed ordering?", "2": "What broader categories include unordered aggregate within their hierarchy?", "3": "Is aggregate imposed ordering a more general class than unordered aggregate?", "4": "Which types are encompassed by aggregate imposed ordering, including unordered aggregate?", "5": "Does unordered aggregate belong to the group of aggregate imposed ordering?", "6": "What higher-level classifications does unordered aggregate inherit from?", "7": "Can unordered aggregate be associated with aggregate imposed ordering?", "8": "Under which overarching classes is unordered aggregate categorized?", "9": "Is unordered aggregate included among the specific types of aggregate imposed ordering"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Equal:real\nDescription: Equal:real is defined as a subclass of equal operation, representing equality operations that specifically pertain to real numbers. Any instance of Equal:real is an equal operation, and this class captures the concept of evaluating or asserting equality within the domain of real numbers.\nAxiom: {'subClassOf': ['equal operation']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are classified under equal operation, such as Equal:real?", "1": "Is every Equal:real instance also considered an equal operation?", "2": "What broader categories encompass Equal:real as a more specific subtype?", "3": "Does Equal:real fall under the category of equal operation?", "4": "To which higher-level concepts does Equal:real belong in terms of its classification hierarchy?", "5": "Which operations are categorized as subclasses of equal operation, including Equal:real?", "6": "Is equal operation a superclass that includes Equal:real as one of its members?", "7": "Of what general operation classes is Equal:real an instance?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: delete operation\nDescription: delete operation is a subclass of dyadic updating operation. This means that every delete operation is considered a specific type of updating operation that involves two entities (typically an object and context). The axiom establishes the hierarchical relationship, indicating that delete operation inherits all structural characteristics of dyadic updating operations.\nAxiom: {'subClassOf': ['dyadic updating operation']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific operations fall under the category of dyadic updating operation?", "1": "Is delete operation classified as a kind of dyadic updating operation?", "2": "What broader operational categories encompass delete operation within their hierarchy?", "3": "Next level of generalization for delete operation would include which higher-level operations?", "4": "Does delete operation belong to the set of dyadic updating operation subclasses?", "5": "To what more general classes does delete operation pertain within the context of update operations?", "6": "Which parent categories does delete operation inherit from among update operations?", "7": "Is delete operation included among the subtypes of dyadic updating operation?", "8": "Which operations are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: non-directed labeled graph generator\nDescription: non-directed labeled graph generator is defined as a subclass of defined generator. This means every non-directed labeled graph generator is a type of defined generator, inheriting its general properties. The class represents entities that produce non-directed graphs in which nodes and/or edges are assigned labels, but with no explicit directionality imposed on the connections.\nAxiom: {'subClassOf': ['defined generator']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under defined generator, such as non-directed labeled graph generator?", "1": "To what broader classes does non-directed labeled graph generator pertain within this context?", "2": "Does every non-directed labeled graph generator also qualify as a defined generator?", "3": "Is defined generator a more general category encompassing non-directed labeled graph generator?", "4": "What are all subclasses categorized under defined generator, including non-directed labeled graph generator?", "5": "Which parent categories is non-directed labeled graph generator associated with according to the ontology structure?", "6": "Is non-directed labeled graph generator classified as a kind of defined generator?", "7": "Which generators are categorized under"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: serialize operation\nDescription: serialize operation is defined as a subclass of monadic operation. This means every serialize operation is, by definition, a type of monadic operation, inheriting its general behaviors and properties. There are no additional restrictions or relationships specified.\nAxiom: {'subClassOf': ['monadic operation']}\nGenerated CQs:", "generated_outputs": {"0": "Which operations fall under the category of monadic operation, including serialize operation?", "1": "Is a serialize operation classified as a kind of monadic operation?", "2": "What broader operational categories encompass serialize operation?", "3": "Is serialize operation categorized under the umbrella of monadic operation?", "4": "Which more specific types are included within monadic operation, such as serialize operation?", "5": "To which higher-level operation classes does serialize operation belong?", "6": "Does serialize operation represent a specialized form of monadic operation?", "7": "Under which overarching operation classifications can serialize operation be placed?", "8": "What operations have monadic operation as their superclass, including serialize operation?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: negate operation\nDescription: negate operation is defined as a subclass of monadic operation, meaning it represents an operation that acts on a single operand. As a monadic operation, negate operation typically involves transforming or inverting the value of its sole input.\nAxiom: {'subClassOf': ['monadic operation']}\nGenerated CQs:", "generated_outputs": {"0": "Does negate operation fall under the category of monadic operation?", "1": "Which operations are classified as more specific types within monadic operation, such as negate operation?", "2": "What broader categories include negate operation as a member?", "3": "Is negate operation categorized under monadic operation?", "4": "To which higher-level operational classes does negate operation belong?", "5": "Which subclasses are encompassed by monadic operation, specifically including negate operation?", "6": "Is monadic operation a superclass for negate operation?", "7": "What general operational groups does negate operation pertain to?", "8": "Does every negate operation necessarily inherit from monadic operation?", "9": "Are all instances of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InOrder:ordinal\nDescription: InOrder:ordinal is defined as a subclass of in order operation, meaning every instance of InOrder:ordinal is also an instance of in order operation. This class captures operations that are performed in a specific, sequential order, consistent with the broader concept of ordered computational procedures.\nAxiom: {'subClassOf': ['in order operation']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories include InOrder:ordinal?", "1": "Is InOrder:ordinal categorized under in order operation?", "2": "What are all subclasses classified under in order operation, such as InOrder:ordinal?", "3": "...", "4": "Does InOrder:ordinal fall within the domain of in order operation?", "5": "Which more general concepts encompass InOrder:ordinal?", "6": "...", "7": "Is InOrder:ordinal an example of in order operation?", "8": "...", "9": "What types of operations are considered subclasses of in order operation, including InOrder:ordinal?", "10": "...", "11": "Can InOrder:ordinal be characterized as a specialized form of in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InOrder:enumerated\nDescription: InOrder:enumerated is defined as a subclass of in order operation. This indicates that it inherits all characteristics of in order operations, and further restricts its members to those specifically classified as InOrder:enumerated. No additional disjointness or property restrictions are specified.\nAxiom: {'subClassOf': ['in order operation']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass InOrder:enumerated?", "1": "Is InOrder:enumerated categorized under in order operation?", "2": "Which operations are more specific than in order operation, such as InOrder:enumerated?", "3": "...", "4": "Is InOrder:enumerated recognized as a type of in order operation?", "5": "What are the superclasses associated with InOrder:enumerated?", "6": "...", "7": "Does every instance of InOrder:enumerated also fall under in order operation?", "8": "...", "9": "Which subclasses are included within the category in order operation, for example InOrder:enumerated?", "10": "...", "11": "Can In"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Promote:rational\nDescription: Promote:rational is defined as a subclass of the promote operation class. This indicates that every instance of Promote:rational is a specific type of promote operation, inheriting all general characteristics of promote operations. No further restrictions, disjointness, or additional axioms are specified for this class.\nAxiom: {'subClassOf': ['promote operation']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass Promote:rational within the ontology?", "1": "Is Promote:rational classified under the broader category of promote operation?", "2": "Which specialized types fall under promote operation, such as Promote:rational?", "3": "Does Promote:rational represent a more specific form of promote operation?", "4": "What are the parent classes associated with Promote:rational?", "5": "Under which overarching operation concept does Promote:rational fall?", "6": "Are all instances of Promote:rational also considered promote operations?", "7": "Which broader operation groups include Promote:rational as a member?", "8": "Is Promote:rational categorized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: homogenous  unordered aggregate datatype with variable size\nDescription: homogenous unordered aggregate datatype with variable size is a subclass of homogenous aggregate datatype with variable size. Each instance of this class must have at least one member that is an instance of homogenous unordered aggregate generator with variable size. This class groups together collections of elements that are all of the same type, where the order of elements is not significant, and the number of elements may vary.\nAxiom: {'subClassOf': ['homogenous aggregate datatype with variable size'], 'propertyRestrictions': ['[has_member only homogenous unordered aggregate generator with variable size]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every homogenous unordered aggregate datatype with variable size include at least one member generated by a homogenous unordered aggregate generator with variable size?", "1": "Can a homogenous unordered aggregate datatype with variable size exist without having any member produced by a homogenous unordered aggregate generator with variable size?", "2": "Does the presence of the has_member property connecting a homogenous unordered aggregate datatype with variable size to some homogenous unordered aggregate generator with variable size indicate membership in this class?", "3": "Is it possible for a homogenous unordered aggregate datatype with variable size to lack a member that originates from a homogenous unordered aggregate generator with variable size"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: discrete datatype\nDescription: discrete datatype is a subclass of non-numeric unordered primitive datatype, and it is explicitly disjoint with boolean datatype, ensuring that no individual can be both a discrete datatype and a boolean datatype. Members of this class must have at least one member from a discrete-value-list, support at least the equality operation (Equal:discrete), and possess the quality of exactness. This formalization captures the distinct, non-numeric, unordered nature of discrete datatypes, characterized by well-defined, separate values and an emphasis on precise equality comparisons.\nAxiom: {'subClassOf': ['non-numeric unordered primitive datatype'], 'disjointWith': ['boolean datatype'], 'propertyRestrictions': ['[has_member some discrete-value-list]', '[has_operation some Equal:discrete]', '[has_quality only exact]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of discrete datatype possess at least one property labeled as has_quality?", "1": "Is it required for any discrete datatype to exhibit the has_quality relation with exactly one value?", "2": "Can a discrete datatype exist without having the has_quality property assigned?", "3": "Is there any discrete datatype that does not have the has_quality attribute?", "4": "Does the presence of the has_quality property restrict the definition of discrete datatype?", "5": "Can discrete datatype be defined independently of its association with the has_quality attribute?", "6": "Is the has_quality property inherent in all instances classified under discrete datatype?", "7": "Does every discrete datatype necessarily possess the has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: numericalness\nDescription: numericalness is a subclass of datatype property that classifies properties as either numeric or non-numeric. It is formally specified to be equivalent to the union of numeric and non-numeric, meaning all members must belong to one of these two categories. Additionally, numericalness is explicitly disjoint with cardinality, order, boundedness, and equality, ensuring these property types are mutually exclusive and no property can simultaneously belong to both numericalness and any of these other classes. This class captures the essential distinction between properties based on their numerical character.\nAxiom: {'subClassOf': ['datatype property'], 'disjointWith': ['cardinality', 'order', 'boundedness', 'equality'], 'equivalentClass': ['(numeric and non-numeric)']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between numericalness and equality within the ontology?", "1": "Is there any entity classified under both numericalness and equality?", "2": "Which property types are declared as incompatible with equality according to the ontology?", "3": "Does the ontology permit instances to be assigned to both numericalness and equality simultaneously?", "4": "What distinctiveness does the ontology assert for numericalness and equality?", "5": "Are numericalness and equality defined as mutually exclusive concepts within the ontology?", "6": "Can an object possess qualities represented by both numericalness and equality according to the ontology?", "7": "Is it possible for a single entity to exhibit characteristics associated with numericalness"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: target boolean field component\nDescription: target boolean field component is defined as a subclass of labeled dataset target field component. It is further characterized by the restriction that it must play the role of some boolean datatype, meaning instances of this class are components within a labeled dataset that represent target fields specifically associated with boolean data types. This ensures that the target values handled by this component are strictly boolean (i.e., true or false).\nAxiom: {'subClassOf': ['labeled dataset target field component'], 'propertyRestrictions': ['[role_of only boolean datatype]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every target boolean field component necessarily participate in at least one property where the subject plays the role of a boolean datatype?", "1": "Is it required for a target boolean field component to have a property whose subject is a boolean datatype?", "2": "Can a target boolean field component exist without having any relationship where its subject is a boolean datatype?", "3": "Is participation in a target boolean field component restricted solely to entities related via the role_of property to a boolean datatype?", "4": "Does every instance of a target boolean field component engage exclusively with objects linked through the role_of relation to boolean datatypes?", "5": "Are all properties possessed by"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: range\nDescription: range is defined as a subclass of value expression. Members of this class are characterized by having at least one association, through the property has_member, to both a lower bound and an upper bound. This formalization ensures that each instance of range must specify some lower and some upper bound, thereby representing a bounded interval or extent within the context of value expressions.\nAxiom: {'subClassOf': ['value expression'], 'propertyRestrictions': ['[has_member some upper bound]', '[has_member only lower bound]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of range necessarily have at least one member that is a lower bound?", "1": "Is it required for any range to possess the property has_member with respect to a lower bound?", "2": "Can all ranges be characterized by having a has_member relationship specifically to a lower bound entity?", "3": "Does the definition of range imply that there must exist at least one lower bound associated via has_member?", "4": "Is the presence of a has_member link to a lower bound a necessary condition for being classified as a range?", "5": "Can a range exist without having any lower bound connected by the has_member property?", "6": "Are all"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: aggregate-imposed identifier uniqueness\nDescription: aggregate-imposed identifier uniqueness is a subclass of aggregate generator property, and is explicitly disjoint with classes such as homogenity, aggregate size, uniqueness, component mandatoriness, structurness, recursiveness, and access type, ensuring mutual exclusivity with these notions. It is defined equivalently as a situation where an identifier may or may not be unique (identifier not unique or identifier unique), capturing precisely those cases where the uniqueness of identifiers is determined at the aggregate level rather than being strictly enforced or absent.\nAxiom: {'subClassOf': ['aggregate generator property'], 'disjointWith': ['homogenity', 'agregate size', 'uniqueness', 'component mandatoriness', 'structurness', 'recursiveness', 'access type'], 'equivalentClass': ['(identifier not unique and identifier unique)']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between aggregate-imposed identifier uniqueness and access type within this ontology?", "1": "Is it permissible for an entity to simultaneously possess characteristics from both aggregate-imposed identifier uniqueness and access type categories?", "2": "Which other concepts are declared incompatible with access type according to the ontology?", "3": "Is there any instance that can belong to both aggregate-imposed identifier uniqueness and access type groups?", "4": "How do the ontological constraints distinguish aggregate-imposed identifier uniqueness from access type?", "5": "Can an entity be classified under both aggregate-imposed identifier uniqueness and access type?", "6": "Which entities are formally incompatible with access type according to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: choice datatype\nDescription: choice datatype is a subclass of non-aggregate datatype, characterized by having values that represent a single value selected from a set of alternative datatypes. These alternative datatypes are differentiated by their correspondence to values from a tag-type, known as the tag datatype. Formally, a choice datatype has members such as tag-type, alternative-list, and a choice generator; it is subject to property restrictions requiring qualities such as exactness and being non-ordered. It supports specific operations, including Discriminant:choice, Tag:choice, Cast:choice, and Equal:choice, which facilitate the selection and identification of alternatives by tag values.\nAxiom: {'subClassOf': ['non-aggregate datatype'], 'propertyRestrictions': ['[has_quality some exact]', '[has_operation some Discriminant:choice]', '[has_quality some non-ordered]', '[has_operation some Cast:choice]', '[has_operation some Equal:choice]', '[has_member some tag-type]', '[has_member some alternative-list]', '[has_member some choice generator]', '[has_operation only Tag:choice]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every operation associated with a choice datatype necessarily involve the Tag:choice operation?", "1": "Is there any choice datatype operation that does not include the Tag:choice operation?", "2": "Can a choice datatype have an operation other than Tag:choice?", "3": "Next Generated CQ:Is the choice of operation for a choice datatype limited exclusively to Tag:choice?", "4": "Does the definition of a choice operation exclude all options except Tag:choice for this datatype?", "5": "Are all operations performed on a choice datatype specifically categorized as Tag:choice?", "6": "Is the range of operations allowed for a choice datatype strictly constrained to those defined by"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: rational datatype\nDescription: rational datatype is a subclass of numeric ordered primitive datatype. It possesses numerical, ordered, and exact qualities, indicating its values are precise, can be compared according to an order, and are of a numerical nature. Members of this class support a range of operations restricted to rational types, including addition, multiplication, negation, reciprocation, promoting to a different form, testing equality, ensuring non-negativity, and ordering. These axioms collectively formalize rational datatypes as exact, ordered primitive types over which rational-specific numeric operations are defined.\nAxiom: {'subClassOf': ['numeric ordered primitive datatype'], 'propertyRestrictions': ['[has_operation some Multiply:rational]', '[has_operation some Reciprocal:rational]', '[has_quality some numeric]', '[has_operation some NonNegative:rational]', '[has_quality some ordered]', '[has_operation some Promote:rational]', '[has_operation some Equal:rational]', '[has_operation some Add:rational]', '[has_operation some Negate:rational]', '[has_quality some exact]', '[has_operation some InOrder:rational]', '[has_quality some unbounded]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every rational operation include at least one instance of the property 'has_operation' related to 'Add:rational'?", "1": "Is it necessary for a rational operation to have 'has_operation' linked to 'Add:rational' among its properties?", "2": "Does the definition of a rational operation require it to participate in 'has_operation' with 'Add:rational'?", "3": "Can any rational operation exist without being associated via 'has_operation' to 'Add:rational'?", "4": "Does the presence of 'has_operation' relating to 'Add:rational' characterize all rational operations?", "5": "Are there rational operations that do not"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: tag-type\nDescription: tag-type is defined as a subclass of datatype role. This means every instance of tag-type is also an instance of datatype role, inheriting its characteristics, but no additional property restrictions or differentiating axioms are specified for tag-type.\nAxiom: {'subClassOf': ['datatype role'], 'propertyRestrictions': ['[role_of some datatype]']}\nGenerated CQs:", "generated_outputs": {"0": "Must a tag-type always have at least one role_of relationship with a datatype?", "1": "Is it required for any entity of type tag-type to be related via role_of to some datatype?", "2": "Can a tag-type exist without being associated through role_of to any datatype?", "3": "Does every tag-type necessarily play a role_of relation with at least one datatype?", "4": "Is it possible for a tag-type not to have any role_of connection to any datatype?", "5": "Are all instances of tag-type characterized by having a role_of link to some datatype?", "6": "Does the existence of tag-type entail a role_of relationship with"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: defined datatype\nDescription: defined datatype is a class characterized by the requirement that its members must have at least one has_member relationship to an individual of the class defined generator, and at least one has_member relationship to an individual of the class defined datatype parameter-list. There are no further subclass or property restrictions specified, indicating that the core definition relies on these membership conditions.\nAxiom: {'subClassOf': ['datatype'], 'propertyRestrictions': ['[has_member some defined generator]', '[has_member some defined datatype parameter-list]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified as a defined datatype necessarily possess at least one member that belongs to a defined generator?", "1": "Is it required for a defined datatype to have any association via the ‘has_member’ property to entities categorized under defined generator?", "2": "Can a defined datatype exist without being linked through ‘has_member’ to something recognized as a defined generator?", "3": "Does the defined datatype always include at least one element related by ‘has_member’ to a defined generator entity?", "4": "Is it mandatory for a defined datatype to have ‘has_member’ connections established with defined generators within the context of this ontology?", "5": "Are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: set datatype\nDescription: set datatype is a subclass of homogeneous unordered aggregate datatypes with variable size. Members of this class have the qualities of being non-ordered, non-numeric, and exact. A set datatype consists of members that are either of a base type or are generated by a set generator. The class supports fundamental set operations, including union, intersection, difference, subset, equality checking, creating an empty set, and creating a set of sets. These axioms formalize the characteristics and operations that define mathematical sets within a datatype context.\nAxiom: {'subClassOf': ['homogenous  unordered aggregate datatype with variable size'], 'propertyRestrictions': ['[has_quality some non-ordered]', '[has_operation some Lsln:set]', '[has_operation some Intersection:set]', '[has_member some base type]', '[has_operation some SetOf:set]', '[has_member some set generator]', '[has_operation some Equal:class]', '[has_quality some non-numeric]', '[has_quality some exact]', '[has_operation some Empty:set]', '[has_operation some Difference:set]', '[has_operation some Union:set]', '[has_operation some Subset:set]', '[has_operation some Select:set]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of set datatype possess at least one member that is a base type?", "1": "Is it required for any set datatype to have a has_member relationship with a base type?", "2": "Can a set datatype exist without being associated through has_member with any base type?", "3": "Does the existence of a set datatype imply the presence of a has_member connection between itself and a base type?", "4": "Are all set datatypes defined as having at least one base type among their members?", "5": "Does the definition of set datatype require membership of a base type via the has_member property?", "6": "Is it possible for a set"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: agregate size\nDescription: aggregate size is defined as a subclass of aggregate generator property and is formally disjoint with the classes uniqueness, component mandatoriness, structurness, and recursiveness—ensuring no individual can belong to aggregate size and any of those classes simultaneously. Furthermore, aggregate size is equivalent to the union of fixed size and variable size, meaning every aggregate size is either a fixed size or a variable size. This class characterizes properties describing whether the size of an aggregate is constant or may vary, distinguishing it from other structural aggregate properties.\nAxiom: {'subClassOf': ['aggregate generator property'], 'disjointWith': ['uniqueness', 'component mandatoriness', 'structurness', 'recursiveness', 'access type'], 'equivalentClass': ['(fixed size or variable size)']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology represent the relationship between aggregate size and access type?", "1": "Is there any instance that can simultaneously belong to both aggregate size and access type categories?", "2": "Which concepts are declared as mutually exclusive with access type within the ontology?", "3": "Does the ontology permit a single entity to possess characteristics associated with both aggregate size and access type?", "4": "What are the distinct property types that are specified as incompatible with access type?", "5": "Can an item be classified under both aggregate size and access type according to the ontology's constraints?", "6": "Are aggregate size and access type placed within separate groups for logical consistency?", "7": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: labeled dataset record datatype\nDescription: labeled dataset record datatype is defined as a subclass of record (tuple) datatype. This means every instance of labeled dataset record datatype is also a record (tuple) datatype, inheriting all characteristics of records, but with additional meaning or usage specific to labeled datasets. No further property restrictions or axioms are specified for this class.\nAxiom: {'subClassOf': ['record (tuple) datatype'], 'propertyRestrictions': ['[has_member exactly 1 labeled dataset field-list]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every labeled dataset record contain at least one member from the has_member property that is a labeled dataset field-list?", "1": "Is it required that each labeled dataset record includes some value via the has_member relationship that belongs to a labeled dataset field-list?", "2": "Does the presence of a labeled dataset field-list among the members of any given labeled dataset record fulfill the property restriction?", "3": "Can a labeled dataset record exist without having exactly one member that is a labeled dataset field-list through the has_member relation?", "4": "Are all instances of labeled dataset record characterized solely by their membership in exactly one labeled dataset field-list via the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: target record of reals field component\nDescription: target record of reals field component is a class whose members are characterized by participating in the role_of property with at least one record of real datatype. This means that every instance of this class must function in some role specifically related to a record whose values are of a real datatype.\nAxiom: {'subClassOf': ['labeled dataset target field component'], 'propertyRestrictions': ['[role_of some record of real datatype]']}\nGenerated CQs:", "generated_outputs": {"0": "Does target record of reals field component fall under the broader category of labeled dataset target field component?", "1": "Which specific types are classified as subtypes within labeled dataset target field component, such as target record of reals field component?", "2": "What general categories encompass target record of reals field component?", "3": "Is target record of reals field component categorized under labeled dataset target field component?", "4": "To which higher-level classes does target record of reals field component belong?", "5": "Which subclasses are included in labeled dataset target field component, particularly target record of reals field component?", "6": "Does every target record of re"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: has_operation\nDescription: The property \"has_operation\" does not have explicitly defined characteristics, domain, or range restrictions. It is declared as a sub-property of \"has_attribute,\" indicating that it inherits the general meaning of associating an attribute with an entity, with a more specific focus on operations. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How are the properties ‘has_operation’ and ‘has_attribute’ related within the ontology?", "1": "Which properties are classified as subproperties under ‘has_attribute’?", "2": "Is every use of ‘has_operation’ also considered a usage of ‘has_attribute’?", "3": "Can ‘has_operation’ be replaced with ‘has_attribute’ in all contexts where it appears?", "4": "What broader property categories encompass ‘has_operation’?", "5": "Does the property hierarchy permit ‘has_operation’ to serve as a superproperty for ‘has_attribute’?", "6": "Which higher-level properties can include ‘has_attribute’ as a subproperty?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: attribute_of\nDescription: The property \"attribute_of\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property and does not have an inverse property. This property can be used generally to relate an attribute to any entity without further ontological constraints.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'attribute_of' be associated with entities that are not attributes?", "1": "Is it correct that the property 'attribute_of' has no specified domain?", "2": "What types of values can appear as the subject of the property 'attribute_of'?", "3": "Can anything serve as the range for the property 'attribute_of'?", "4": "Does the property 'attribute_of' require a specific type of object as its range?", "5": "Are there any restrictions on the domains allowed for the property 'attribute_of'?", "6": "Is it accurate that the property 'attribute_of' does not specify a range?", "7": "Can 'attribute_of' be linked"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: denotes\nDescription: The property \"denotes\" has no defined domain, range, characteristics, super-properties, or inverse properties. It is a generic property with no explicit ontological constraints.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['is-about'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology represent the relationship between 'denotes' and 'is-about'?", "1": "Is 'denotes' classified as a subproperty of 'is-about'?", "2": "Which properties are considered more specific than 'is-about', such as 'denotes'?", "3": "Is every instance of 'denotes' necessarily related via 'is-about' to some other entity?", "4": "What higher-level properties encompass 'denotes' within the ontology structure?", "5": "Does the presence of 'denotes' imply the existence of an 'is-about' connection?", "6": "Under which broader categories is 'denotes' organized in terms"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiagnosisType\nDescription: DiagnosisType is defined as a subclass of Type, and is equivalent to the set containing exactly three classes: predementia, dementia, and healthy. This means that any individual classified as a DiagnosisType must be either predementia, dementia, or healthy—no other categories are permitted. This formalization ensures a closed, mutually-exclusive categorization of diagnostic statuses within the ontology.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Are all instances of DiagnosisType necessarily one of predementia, dementia, or healthy?", "1": "Does every DiagnosisType correspond exactly to predementia, dementia, or healthy?", "2": "Is DiagnosisType logically equivalent to the union of predementia, dementia, and healthy?", "3": "Is DiagnosisType synonymous with the class comprising predementia, dementia, and healthy exclusively?", "4": "Is being a diagnosis type strictly limited to predementia, dementia, or healthy?", "5": "Can a diagnosis type exist outside the classification of predementia, dementia, or healthy?", "6": "Does DiagnosisType cover exactly those entities categorized as predementia,"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SemiDirectedTask\nDescription: SemiDirectedTask is a subclass of Task characterized by the measurement of at least some FunctionalAbilitiesData and some CognitiveAbilitiesData. Additionally, any measuredData associated with a SemiDirectedTask must be exclusively of types CognitiveAbilitiesData, FunctionalAbilitiesData, or StressData—no other data types are permitted. This formalization ensures that tasks within this class are specifically designed to evaluate both cognitive and functional abilities, potentially including stress indicators, thereby aligning with their defined assessment scope.\nAxiom: {'subClassOf': ['Task'], 'propertyRestrictions': ['[measuredData some CognitiveAbilitiesData]', '[measuredData only (CognitiveAbilitiesData or FunctionalAbilitiesData or StressData)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every semi-directed task require at least one measured data entry classified as cognitive abilities data?", "1": "Is it necessary for a semi-directed task to have measured data that includes information categorized under cognitive abilities?", "2": "Can a semi-directed task exist without having any measured data related to cognitive abilities?", "3": "Is it possible for a semi-directed task to lack measured data that falls under cognitive abilities data?", "4": "Does every instance of measured data associated with a semi-directed task necessarily pertain to cognitive abilities data?", "5": "Are all measured data entries linked to a semi-directed task restricted solely to cognitive abilities data?", "6": "Must all measured"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HandTrajectoryType\nDescription: HandTrajectoryType is defined as a subclass of Type. This class represents a specific categorization or kind of type that pertains to hand trajectory, inheriting all characteristics of Type. No additional axioms or restrictions are specified.\nAxiom: {'subClassOf': ['Type']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under Type, such as HandTrajectoryType?", "1": "Is HandTrajectoryType categorized under the broader group known as Type?", "2": "What higher-level classifications does HandTrajectoryType belong to within this context?", "3": "Does every instance of HandTrajectoryType also represent an instance of Type?", "4": "Which types have HandTrajectoryType as a more specific subclass?", "5": "What are the parent categories for HandTrajectoryType?", "6": "Is HandTrajectoryType classified as a special form of Type?", "7": "Under which overarching types can HandTrajectoryType be grouped?", "8": "Are there any other entities that"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnswerPhoneTask\nDescription: AnswerPhoneTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks but is specialized for the context of answering phone calls. This classification asserts that every instance of AnswerPhoneTask is also an instance of SemiDirectedTask, typically involving user interaction with some degree of guidance but not complete direction. No additional property or disjointness axioms are specified.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "What broader task categories encompass AnswerPhoneTask?", "1": "Is AnswerPhoneTask classified under the category of SemiDirectedTask?", "2": "Which tasks are considered specializations of SemiDirectedTask, such as AnswerPhoneTask?", "3": "Next level up from AnswerPhoneTask within the hierarchy is which task type?", "4": "Does AnswerPhoneTask fall under the general category of SemiDirectedTask?", "5": "What higher-level classes does AnswerPhoneTask belong to?", "6": "Which subclasses are contained within SemiDirectedTask, specifically including AnswerPhoneTask?", "7": "Is AnswerPhoneTask categorized under SemiDirectedTask?", "8": "To what overarching task group does AnswerPhone"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FunctionalAbilityAssessment\nDescription: FunctionalAbilityAssessment is defined as a subclass of ExperimentalAssessment. This means every FunctionalAbilityAssessment is also an ExperimentalAssessment, inheriting its characteristics. No further restrictions or disjointness axioms are specified, so FunctionalAbilityAssessment can be understood as a specialized form of ExperimentalAssessment focused on evaluating functional abilities.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "generated_outputs": {"0": "Which types are encompassed under ExperimentalAssessment, including FunctionalAbilityAssessment?", "1": "What broader assessment categories does FunctionalAbilityAssessment fall within?", "2": "Is FunctionalAbilityAssessment categorized as a type of ExperimentalAssessment?", "3": "Which assessments are classified as more specific instances of ExperimentalAssessment, such as FunctionalAbilityAssessment?", "4": "To which higher-level assessment classes does FunctionalAbilityAssessment belong?", "5": "Does FunctionalAbilityAssessment fall under the category of ExperimentalAssessment?", "6": "Under what general assessment groups is FunctionalAbilityAssessment organized?", "7": "Is FunctionalAbilityAssessment included among the subtypes of Experimental"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiscussionTask\nDescription: DiscussionTask is defined as a subclass of Task. Every instance of DiscussionTask is required to have at least some measured data of type StressData and some measured data of type MoodVoiceData. Additionally, all measured data associated with DiscussionTask must be exclusively of type StressData or MoodVoiceData, meaning no other types of measured data are permitted. This ensures that the assessment of a DiscussionTask is strictly based on stress and mood-related voice data.\nAxiom: {'subClassOf': ['Task'], 'propertyRestrictions': ['[measuredData some StressData]', '[measuredData only (MoodVoiceData or StressData)]', '[measuredData only MoodVoiceData]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every measuredData property of a DiscussionTask be either a MoodVoiceData or a StressData?", "1": "Is it possible for a DiscussionTask's measuredData property to have a value other than MoodVoiceData or StressData?", "2": "Does the presence of any measuredData property on a DiscussionTask guarantee that it includes either MoodVoiceData or StressData?", "3": "Can a DiscussionTask possess measuredData values beyond those classified as MoodVoiceData or StressData?", "4": "Are all instances of measuredData associated with a DiscussionTask necessarily categorized as MoodVoiceData or StressData?", "5": "Is there any case where a Discussion"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PersonWithDementia\nDescription: PersonWithDementia is defined as a subclass of Person, and is equivalent to any person who has an associated clinical record that contains at least one assessment in which a clinical diagnosis of dementia is present. This formalization ensures that all individuals in the PersonWithDementia class are explicitly linked to the confirmed clinical diagnosis of dementia via assessment records.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': ['[hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment or [hasClinicalDiagnosis only {dementia}])])]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified under PersonWithDementia necessarily have a ClinicalRecord containing at least one Assessment where dementia is diagnosed?", "1": "Is PersonWithDementia formally defined as those individuals for whom there exists a ClinicalRecord that includes an Assessment documenting a diagnosis of dementia?", "2": "Are all members of PersonWithDementia characterized by having a ClinicalRecord with an Assessment indicating a clinical diagnosis of dementia?", "3": "Is it required that each PersonWithDementia possesses a ClinicalRecord with an Assessment that diagnoses dementia?", "4": "Does PersonWithDementia include only individuals whose ClinicalRecords contain Assessments confirming a clinical diagnosis of dementia?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GaitData\nDescription: GaitData is defined as a subclass of MeasuredData, representing data specifically related to gait analysis. Members of this class are characterized by exactly one value each for walkingSpeed, stepLength, dynamicBalance (all with values restricted to literals), and stoppingDisplacement (restricted to a boolean value). Additionally, walkingSpeedInstantaneous and dynamicBalance can only take literal values. This formalization ensures that each GaitData instance uniquely records these properties, providing a precise structure for representing gait measurements.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[walkingSpeedInstantaneous only rdfs:Literal]', '[walkingSpeed only rdfs:Literal]', '[stepLength only rdfs:Literal]', '[dynamicBalance exactly 1]', '[walkingSpeed exactly 1]', '[stoppingDisplacement exactly 1 xsd:boolean]', '[stepLength exactly 1]', '[dynamicBalance only rdfs:Literal]', '[stoppingDisplacement only xsd:boolean]', '[walkingSpeedInstantaneous exactly 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of GaitData have at least one associated property restriction for walkingSpeed?", "1": "Is it required for all GaitData entities to possess some walkingSpeed property restriction?", "2": "Can GaitData exist without any walkingSpeed property restrictions being specified?", "3": "Is it necessary for GaitData to include at least one walkingSpeed property restriction?", "4": "Does the presence of a walkingSpeed property restriction define a GaitData instance?", "5": "Are there any instances of GaitData that lack a walkingSpeed property restriction?", "6": "Can GaitData exist without having a walkingSpeed property restriction assigned"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveAbilitiesData\nDescription: CognitiveAbilitiesData is a class defined by several property restrictions. Every instance must have exactly one status of type ActivityStatusType, exactly one repetitions value (which must be an rdfs:Literal), exactly one compliantInstructionsOrder value (which must be a boolean), and exactly one taskDuration (which must be an instance of time:DurationDescription). The status property may only point to ActivityStatusType, repetitions only to rdfs:Literal, compliantInstructionsOrder only to boolean values, and taskDuration only to time:DurationDescription. This formalization ensures strict data structure and type safety for information related to cognitive ability assessment data.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[status exactly 1 ActivityStatusType]', '[repetitions exactly 1]', '[repetitions only rdfs:Literal]', '[compliantInstructionsOrder only xsd:boolean]', '[compliantInstructionsOrder exactly 1 xsd:boolean]', '[taskDuration only time:DurationDescription]', '[taskDuration exactly 1 time:DurationDescription]', '[status only ActivityStatusType]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of CognitiveAbilitiesData necessarily have at least one property value assigned to status?", "1": "Is it required that all CognitiveAbilitiesData entities are associated via the status property with some entity?", "2": "Can any CognitiveAbilitiesData exist without having the status property linked to anything?", "3": "Is it possible for CognitiveAbilitiesData to lack a status relationship to any other thing?", "4": "Are there cases where CognitiveAbilitiesData does not possess a status property pointing to an object?", "5": "Does the existence of CognitiveAbilitiesData entail the presence of a status attribute connected to some resource?", "6": "Must all"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasClinicalDiagnosis\nDescription: The property \"hasClinicalDiagnosis\" does not specify any characteristics, domain, or range. It is a subproperty of \"hasDiagnosis,\" indicating that it represents a specialized type of diagnostic relationship, specifically pertaining to clinical diagnoses. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the parent properties associated with ‘hasClinicalDiagnosis’?", "1": "Which properties are classified as subproperties under ‘hasDiagnosis’?", "2": "Is ‘hasClinicalDiagnosis’ considered a more specific form of ‘hasDiagnosis’?", "3": "Does every instance of ‘hasClinicalDiagnosis’ also satisfy the conditions of ‘hasDiagnosis’?", "4": "Which superproperties encompass ‘hasClinicalDiagnosis’ within this hierarchy?", "5": "Is ‘hasClinicalDiagnosis’ included among the subproperties of ‘hasDiagnosis’?", "6": "What higher-level relationships exist between ‘hasClinicalDiagnosis’ and"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: freeAndCuedRemindingAssessment\nDescription: The property \"freeAndCuedRemindingAssessment\" has no explicitly defined characteristics, domain, or range restrictions, and does not specify any super-properties or inverse properties. Its intended use and meaning should be clarified by additional documentation or context, as current axioms do not constrain its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'freeAndCuedRemindingAssessment' have a range other than None?", "1": "Is it correct that the property 'freeAndCuedRemindingAssessment' does not have a specified domain?", "2": "What types of entities can be used as the subject for the property 'freeAndCuedRemindingAssessment'?", "3": "Can the property 'freeAndCuedRemindingAssessment' have a domain different from None?", "4": "Is there any entity that cannot serve as the domain for 'freeAndCuedRemindingAssessment'?", "5": "Is it accurate that the property 'free"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: handTrajectory\nDescription: The property \"handTrajectory\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based solely on its name and lack of further restrictions, it can be inferred that this property is used to associate entities with information related to the movement or path of a hand, but its usage is not formally constrained within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any entity serve as the subject for the 'handTrajectory' property?", "1": "What types of values are permitted as the range for the property 'handTrajectory'?", "2": "Is it correct that the property 'handTrajectory' does not have a specified domain?", "3": "Is it correct that the property 'handTrajectory' does not have a specified range?", "4": "Can anything be used as the range for the property 'handTrajectory', given that its range is unspecified?", "5": "Is it correct that the property 'handTrajectory' has no specified domain?", "6": "Is there any entity that could serve"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: taskDuration\nDescription: The property \"taskDuration\" has no specified characteristics, domain, or range restrictions. It does not have defined super-properties or an inverse property. Its intended use should be inferred from its name, which suggests it relates to the duration associated with a task, but no explicit constraints are imposed by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'taskDuration' be used with any subject type?", "1": "Is it correct that the property 'taskDuration' has no specified range?", "2": "What types of values can serve as the range for 'taskDuration'?", "3": "Can 'taskDuration' have a value that is not of the specified range?", "4": "Is there any restriction on what entities can appear as the range for 'taskDuration'?", "5": "Is it accurate that 'taskDuration' does not specify a domain?", "6": "Should 'taskDuration' be restricted to having only certain types of subjects?", "7": "Are all possible subjects valid for 'taskDuration',"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: status\nDescription: The property \"status\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This suggests flexibility in its use, allowing it to relate any types of entities without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What can be the range of the property ‘status’?", "1": "Can the property ‘status’ have a domain other than None?", "2": "Is it correct that the property ‘status’ does not specify a range?", "3": "What are the possible domains for the property ‘status’?", "4": "Is it correct that the property ‘status’ does not specify a domain?", "5": "Are there any restrictions on the domain of the property ‘status’?", "6": "Can anything serve as the subject of the property ‘status’, regardless of type?", "7": "Does the property ‘status’ require a specific type as its range?", "8": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasExperimentalDiagnosis\nDescription: The property \"hasExperimentalDiagnosis\" has no specified domain, range, characteristics, super-properties, or inverse properties. This indicates it is a general property with no formal restrictions on the types of entities it can relate or the values it can take.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasDiagnosis'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What subproperties are defined for ‘hasDiagnosis’, such as ‘hasExperimentalDiagnosis’?", "1": "Is every use of ‘hasExperimentalDiagnosis’ also considered a use of ‘hasDiagnosis’?", "2": "Which broader properties encompass ‘hasExperimentalDiagnosis’ within the ontology?", "3": "Next level up from ‘hasExperimentalDiagnosis’ in the hierarchy of properties is ‘hasDiagnosis’.", "4": "Does ‘hasExperimentalDiagnosis’ fall under any higher-level properties other than ‘hasDiagnosis’?", "5": "Can ‘hasDiagnosis’ be used wherever ‘hasExperimentalDiagnosis’ is employed?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Immunoproteins, genes and antigens\nDescription: Immunoproteins, genes and antigens is a class defined as a subclass of both Protein families and Immunology. This class covers entities such as T cell receptors (TR), major histocompatibility complex (MHC), immunoglobulin superfamily (IgSF)/antibodies, and the major histocompatibility complex superfamily (MhcSF). It includes immunity-related genes, proteins, their ligands, and antigens involved in immune system function.\nAxiom: {'subClassOf': ['Protein families']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass Immunoproteins, genes and antigens?", "1": "What specific types fall under the category of Protein families, including Immunoproteins, genes and antigens?", "2": "Is Immunoproteins, genes and antigens classified within the broader group of Immunology?", "3": "Next level up from Immunoproteins, genes and antigns, what are its parent classes?", "4": "Which general categories does Immunoproteins, genes and antigens belong to according to the ontology structure?", "5": "Does Immunoproteins, genes and antigns fall under the classification of Immunology?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 50-50 MANOVA\nDescription: 50-50 MANOVA is defined as a subclass of software. Members of this class are characterized by being outputs of some software publishing process involving Matforsk as a participant. They implement some 50-50 MANOVA algorithm, and are encoded in either R or MATLAB languages. This formalization captures 50-50 MANOVA as specialized analytical software produced in collaborative contexts with Matforsk, leveraging both R and MATLAB for implementation.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is encoded in some R language]', '[implements some 50-50 MANOVA algorithm]', '[is encoded in some MATLAB language]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every output of a software publishing process involving Matforsk necessarily have to be implemented via the 50-50 MANOVA algorithm?", "1": "Is it required that all outputs of a software publishing process where Matforsk participates are encoded using at least one of the R or MATLAB languages?", "2": "Can an output from such a process exist without implementing any 50-50 MANOVA algorithm?", "3": "Is there any output generated through this publishing process that does not implement the 50-50 MANOVA algorithm?", "4": "Does the existence of an output require implementation of the 50-50 MANO"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TAIR accession\nDescription: TAIR accession is a subclass of both Accession and Identifier (hybrid). It represents an identifier specifically assigned to entries within the TAIR database, ensuring that each entry in the TAIR database can be uniquely and formally referenced using this identifier.\nAxiom: {'subClassOf': ['Accession']}\nGenerated CQs:", "generated_outputs": {"0": "Which identifiers are more specific than Accession, such as TAIR accession?", "1": "Is every TAIR accession classified under the broader category of Accession?", "2": "To what higher-level categories does TAIR accession belong according to the ontology structure?", "3": "What general classes encompass TAIR accession as a specialized instance?", "4": "Does TAIR accession fall under the classification of Identifier (hybrid)?", "5": "Which types of Accession include TAIR accession as a subcategory?", "6": "Under which overarching identifier types is TAIR accession categorized?", "7": "Is TAIR accession categorized as a form of Identifier (hybrid)?", "8": "Which entities"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Repeat sequence organisation analysis\nDescription: Repeat sequence organisation analysis is defined as a subclass of both Sequence composition calculation and Repeat sequence analysis, indicating that it inherits characteristics from both analytical approaches. It involves the analysis of the organization of repeat sequences within biological data, specifically focusing on aspects such as periodicity. This class is intended for methods and processes that evaluate how repeat sequences are arranged and structured within a given sequence, emphasizing their compositional and organizational properties.\nAxiom: {'subClassOf': ['Repeat sequence analysis']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific analyses fall under the category of Sequence composition calculation?", "1": "Is Repeat sequence organisation analysis classified as a type of Sequence composition calculation?", "2": "What broader categories encompass Repeat sequence organisation analysis?", "3": "Does Sequence composition calculation include Repeat sequence organisation analysis as one of its subclasses?", "4": "Which parent classes does Repeat sequence organisation analysis have according to the ontology?", "5": "Is Repeat sequence organisation analysis categorized under Repeat sequence analysis?", "6": "To which higher-level types is Repeat sequence organisation analysis hierarchically related?", "7": "Under what more general concepts is Repeat sequence organisation analysis organized?", "8": "Does Repeat sequence analysis encompass Repeat sequence organisation analysis as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Query and retrieval\nDescription: Query and retrieval is a subclass of information processing that focuses on searching or querying data resources to retrieve entries or annotations. Members of this class produce some form of data as output and are concerned specifically with topics related to data search, query, and retrieval. This formalization ensures that any process classified under query and retrieval involves both the act of querying/searching and the acquisition of data or annotations from relevant data resources.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[has output some data]', '[has topic some Data search, query and retrieval]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of query and retrieval require at least one output that is a piece of data?", "1": "Is it necessary for something classified as query and retrieval to have some output that is a data item?", "2": "Can a query and retrieval exist without producing any data as its output?", "3": "Does the existence of query and retrieval entail the presence of data among its outputs?", "4": "Is it possible for query and retrieval not to have any output that represents data?", "5": "Must all instances of query and retrieval produce at least one data-related output?", "6": "Does query and retrieval always involve generating some kind of output classified as data"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CDF ASCII format\nDescription: CDF ASCII format is defined as a subclass of ASCII format, with the additional restriction that it must be published by Affymetrix. This means every instance of CDF ASCII format is a type of ASCII format and is specifically associated with Affymetrix as its publisher.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[is published by hasValue Affymetrix]']}\nGenerated CQs:", "generated_outputs": {"0": "Does CDF ASCII format fall under the broader category of ASCII format?", "1": "What specific formats are classified as subclasses of ASCII format, including CDF ASCII format?", "2": "Which higher-level categories encompass CDF ASCII format?", "3": "Is CDF ASCII format categorized under ASCII format?", "4": "To which general format types does CDF ASCII format belong?", "5": "Does CDF ASCII format inherit properties from ASCII format?", "6": "Under what overarching format classifications does CDF ASCII format exist?", "7": "Is ASCII format a more general class than CDF ASCII format?", "8": "Which formats have ASCII format as their superclass, such as CDF"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Stock number\nDescription: Stock number is defined as a subclass of both Identifier (typed) and Accession, representing a specific type of typed identifier used for cataloguing. It is characterized as an identifier assigned to stock from a catalogue of biological resources, enabling precise identification and tracking of biological material in resource collections.\nAxiom: {'subClassOf': ['Accession']}\nGenerated CQs:", "generated_outputs": {"0": "Which identifiers are more specific than Accession, such as Stock number?", "1": "Is every Stock number categorized under the broader class of Accession?", "2": "To which higher-level classes does Stock number belong within the ontology?", "3": "Does Stock number fall under the general classification of Identifier?", "4": "Which subclasses are encompassed by Identifier, including Stock number?", "5": "What overarching categories include Stock number as a specialized form?", "6": "Is Stock number recognized as a subtype of Identifier?", "7": "Under which broad groupings is Stock number organized?", "8": "Which entities are classified as subtypes of Identifier, specifically including Stock number?", "9": "Can Stock"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Structural data\nDescription: Structural data is a subclass of Obsolete concept (EDAM), serving as a broad data type intended as a placeholder for more specific data types. It encompasses data related to molecular structural information, although its classification as an obsolete concept indicates it has been superseded by more precise categories within the domain.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level concepts encompass Structural data?", "1": "Which subclasses are included under Obsolete concept (EDAM), such as Structural data?", "2": "Is Structural data categorized as a kind of Obsolete concept (EDAM)?", "3": "Does Structural data fall under the broader group defined by Obsolete concept (EDAM)?", "4": "What overarching classes does Structural data belong to according to the ontology?", "5": "Which concepts are classified as more specific instances of Obsolete concept (EDAM), including Structural data?", "6": "Is Obsolete concept (EDAM) the overarching category for Structural data?", "7": "Under which general class is Structural data formally"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: raster image format\nDescription: raster image format is defined as a subclass of image format. This means every raster image format is an image format, but not all image formats are raster. Members of this class represent image formats in which images are composed of a grid of pixels, as opposed to formats based on vectors or other representations.\nAxiom: {'subClassOf': ['image format']}\nGenerated CQs:", "generated_outputs": {"0": "Which types fall under the category of image format, including raster image format?", "1": "Is raster image format categorized as a kind of image format?", "2": "What broader classes encompass raster image format within the ontology?", "3": "Does raster image format belong to the set of image format subclasses?", "4": "What specific subtypes exist under image format, such as raster image format?", "5": "To what higher-level concepts does raster image format relate within the ontology hierarchy?", "6": "Which categories are more general than raster image format, specifically in relation to image format?", "7": "Does raster image format inherit properties from the parent class image format?", "8": "What"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein targeting and localization\nDescription: Protein targeting and localization is defined as a subclass of Protein expression. It encompasses the study of the mechanisms by which proteins are transported to specific locations within or outside the cell, including processes such as signal peptide-mediated transport, subcellular localization, and protein export. This class focuses on understanding how proteins reach their functional destinations as part of cellular protein expression dynamics.\nAxiom: {'subClassOf': ['Protein expression']}\nGenerated CQs:", "generated_outputs": {"0": "Does Protein targeting and localization fall under the broader category of Protein expression?", "1": "What are the subclasses categorized directly under Protein expression, including Protein targeting and localization?", "2": "Which higher-level concepts encompass Protein targeting and localization?", "3": "Is Protein targeting and localization classified as a more specific type of Protein expression?", "4": "To what overarching biological process categories does Protein targeting and localization belong?", "5": "Under which general types is Protein targeting and localization organized?", "6": "Which broader biological processes include Protein targeting and localization as a specific instance?", "7": "Does Protein expression encompass Protein targeting and localization as one of its specialized forms?", "8": "Is Protein expression the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene features (SECIS element)\nDescription: Gene features (SECIS element) is defined as a subclass of Obsolete concept (EDAM), indicating that this concept is no longer considered current or in active use. It is described as a report on the selenocysteine insertion sequence (SECIS) element in a DNA sequence, which pertains to the identification or annotation of SECIS elements involved in the incorporation of selenocysteine during translation. The obsolete status suggests that this class has been deprecated in favor of more up-to-date concepts.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific subclasses are encompassed within Obsolete concept (EDAM), such as Gene features (SECIS element)?", "1": "Is Gene features (SECIS element) categorized under the broader group of Obsolete concept (EDAM)?", "2": "What higher-level classes does Gene features (SECIS element) fall under according to the ontology?", "3": "Next level up from Gene features (SECIS element) in the hierarchy is Obsolete concept (EDAM).", "4": "Which concepts are classified as specializations of Obsolete concept (EDAM), including Gene features (SECIS element)?", "5": "Does Gene features (SECIS element"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Chi-square\nDescription: Chi-square is defined as a subclass of algorithm, indicating that it is a specific type of algorithm. No further disjointness or property restrictions are specified, so any individual of this class is understood solely as an algorithm, with no additional constraints or differentiating features provided in the current axiom.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "generated_outputs": {"0": "Which algorithms include Chi-square as a more specific instance?", "1": "Is Chi-square classified under the broader category of algorithm?", "2": "What higher-level categories encompass Chi-square within the ontology?", "3": "Does every Chi-square belong to the group of algorithms?", "4": "Which subclasses fall under the general concept of algorithm, including Chi-square?", "5": "Under which overarching types does Chi-square fit according to the ontology structure?", "6": "Can Chi-square be considered a kind of algorithm?", "7": "What more general concepts is Chi-square related to through its classification?", "8": "Does the category of algorithm encompass Chi-square?", "9": "To which broader classes is Chi-square"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nucleic acid property\nDescription: Nucleic acid property is a subclass of Molecular property, representing reports that primarily describe intrinsic physical, chemical, or other properties of nucleic acid molecules, rather than their position in a sequence. This class encompasses broad data types, typically based on the analysis of nucleic acid sequence or structural data, and serves as a placeholder for more specific nucleic acid property types.\nAxiom: {'subClassOf': ['Molecular property']}\nGenerated CQs:", "generated_outputs": {"0": "Which molecular properties encompass subclasses such as Nucleic acid property?", "1": "Is Nucleic acid property classified under the broader category of Molecular property?", "2": "What higher-level categories include Nucleic acid property as a member?", "3": "Does every instance of Nucleic acid property also fall within Molecular property?", "4": "Which subclasses are defined under the concept of Molecular property, specifically including Nucleic acid property?", "5": "To which general property classes does Nucleic acid property belong?", "6": "Is Nucleic acid property a specialized form of Molecular property?", "7": "What parent property classifications exist for Nucleic acid property"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GO (molecular function)\nDescription: GO (molecular function) is classified as a subclass of Obsolete concept (EDAM), indicating it is no longer in active use within the ontology framework. It represents an enumerated string data type that provides a term definition for a molecular function from the Gene Ontology (GO). This class captures definitions associated with molecular functional terms, but is considered obsolete for current applications.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific concepts are categorized under Obsolete concept (EDAM), such as GO (molecular function)?", "1": "Is GO (molecular function) classified as a more specialized form of Obsolete concept (EDAM)?", "2": "What broader categories does GO (molecular function) fall under according to the ontology?", "3": "Does GO (molecular function) belong to the group of entities defined as Obsolete concept (EDAM)?", "4": "Which higher-level classes include GO (molecular function) as a member?", "5": "What are all direct or indirect superclasses of GO (molecular function)?", "6": "Is GO ("}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Shell\nDescription: Shell is defined as a subclass of programming language, indicating that every shell is considered a type of programming language within the ontology. No additional constraints or distinguishing characteristics are provided in the axioms. Thus, any individual classified as a shell must also be recognized as a programming language.\nAxiom: {'subClassOf': ['programming language']}\nGenerated CQs:", "generated_outputs": {"0": "Does Shell fall under the broader category of programming language?", "1": "Which types of programming languages include Shell as a specialized form?", "2": "What higher-level classes encompass Shell within the classification hierarchy?", "3": "Is Shell categorized as a kind of programming language?", "4": "To which overarching categories does Shell belong in terms of programming language classifications?", "5": "Which subclasses are included within the programming language category, such as Shell?", "6": "What general types encompass Shell, specifically in relation to programming languages?", "7": "Does Shell represent a specific instance of programming language?", "8": "Under which more general concepts can Shell be placed within the context of programming languages?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EMBOSS supermatcher error file\nDescription: EMBOSS supermatcher error file is categorized as an obsolete concept (EDAM ontology), indicating it is no longer in active use. It specifically refers to error files generated by the EMBOSS (EMBASSY) supermatcher tool.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "Which concepts are classified under Obsolete concept (EDAM), such as EMBOSS supermatcher error file?", "1": "Is EMBOSS supermatcher error file recognized as a type of Obsolete concept (EDAM)?", "2": "What higher-level categories encompass EMBOSS supermatcher error file within the EDAM ontology?", "3": "Does EMBOSS supermatcher error file fall under the broader classification of Obsolete concept (EDAM)?", "4": "Which entities are considered more specific than Obsolete concept (EDAM), including EMBOSS supermatcher error file?", "5": "Is EMBOSS supermatcher error file an instance of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: System metadata\nDescription: System metadata is defined as a subclass of Resource metadata. It specifically encompasses metadata that pertains to software, hardware, or other aspects of a computer system, distinguishing it from broader resource metadata by its focus on computer system components and their characteristics.\nAxiom: {'subClassOf': ['Resource metadata']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are classified under Resource metadata, such as System metadata?", "1": "Is System metadata categorized under the broader class of Resource metadata?", "2": "What higher-level categories include System metadata as a member?", "3": "Which classes fall within the scope of Resource metadata, including System metadata?", "4": "To which overarching groups does System metadata belong according to the ontology hierarchy?", "5": "Does System metadata represent a specialized form of Resource metadata?", "6": "What more general classifications encompass System metadata?", "7": "Is System metadata considered a type of Resource metadata?", "8": "Under what overarching category does System metadata fall within the ontology structure?", "9": "Which subclasses are included"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: 't-test'\nDescription: t-test is defined as a subclass of algorithm, indicating that it is a type of statistical procedure within the broader category of algorithms. This class represents methods used to determine if there is a significant difference between the means of two groups, commonly used in statistical hypothesis testing.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "generated_outputs": {"0": "What specific subclasses exist under algorithm, such as t-test?", "1": "Is every t-test classified under the broader group of algorithm?", "2": "Which higher-level categories encompass t-test?", "3": "Does t-test fall under the general classification of algorithm?", "4": "What types are more specialized than algorithm, including t-test?", "5": "To which superordinate concepts does t-test belong?", "6": "Is t-test categorized under the overarching concept of algorithm?", "7": "Which broader classes include t-test as a member?", "8": "What are the parent categories of t-test within the hierarchy?", "9": "Is t-test recognized as a kind of algorithm?", "10": "Which specific"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Misspelling\nDescription: Misspelling is defined as a subclass of the obsolete concept (EDAM), indicating that it is no longer an actively maintained or recommended concept within the ontology. It refers to a common misspelling of a word, formally capturing instances where a word is not spelled correctly according to standard conventions.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does Misspelling fall under within the EDAM ontology?", "1": "Which concepts are categorized under Obsolete concept (EDAM), including Misspelling?", "2": "Is Misspelling classified as a type of Obsolete concept (EDAM)?", "3": "Next level up from Misspelling in the EDAM hierarchy is which class?", "4": "Does Misspelling belong to the category of Obsolete concept (EDAM)?", "5": "What more general categories encompass Misspelling within the EDAM ontology?", "6": "Is Obsolete concept (EDAM) the overarching classification for Misspelling?", "7": "Which specific subclasses"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: REST service\nDescription: REST service is defined as a subclass of web service. This means every REST service is a type of web service, inheriting all its general characteristics. No additional property restrictions or disjointness axioms are specified, so a REST service is formally distinguished only by its placement under the broader category of web service.\nAxiom: {'subClassOf': ['web service']}\nGenerated CQs:", "generated_outputs": {"0": "Which services are classified as subclasses within web service, such as REST service?", "1": "What categories encompass REST service as a more specific instance?", "2": "Is REST service categorized under the broader group of web service?", "3": "Is every REST service necessarily also a web service?", "4": "Which higher-level types include REST service as a member?", "5": "Does the concept of web service encompass all instances of REST service?", "6": "Which parent classes does REST service inherit from?", "7": "Can REST service be viewed as a kind of web service?", "8": "Is REST service included among the specialized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence alignment parameter\nDescription: Sequence alignment parameter is a subclass of Obsolete concept (EDAM) and is defined as some simple value controlling a sequence alignment or similar 'match' operation. This class represents conceptual parameters that guide how sequence alignment procedures are performed, but has been marked as obsolete in the EDAM ontology.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass Sequence alignment parameter within the ontology?", "1": "Is Sequence alignment parameter categorized under Obsolete concept (EDAM)?", "2": "Which concepts fall under Obsolete concept (EDAM), including Sequence alignment parameter?", "3": "Does Sequence alignment parameter inherit any properties from Obsolete concept (EDAM)?", "4": "What broader classes does Sequence alignment parameter belong to?", "5": "Is Sequence alignment parameter classified as a type of Obsolete concept (EDAM)?", "6": "Which subclasses are included under Obsolete concept (EDAM), such as Sequence alignment parameter?", "7": "Can Obsolete concept (EDAM) have more specific instances like"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HGVbase entry format\nDescription: HGVbase entry format is defined as a subclass of Obsolete concept (EDAM), indicating that it is no longer in active use or has been deprecated. It represents the format of a record originating from the HGVbase database, which stored information about genotypes and phenotypes.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass the HGVbase entry format?", "1": "Is the HGVbase entry format classified under the broader group of Obsolete concept (EDAM)?", "2": "Which specific formats are categorized within Obsolete concept (EDAM), such as the HGVbase entry format?", "3": "Does the HGVbase entry format fall under the category of Obsolete concept (EDAM)?", "4": "What more general concepts include the HGVbase entry format as a specialization?", "5": "Which obsolete concepts (EDAM) have the HGVbase entry format as a member?", "6": "To which overarching classes is the HGV"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein structural motif\nDescription: Protein structural motif is a subclass of Protein structure, representing a 3D coordinate and associated data for a protein (3D) structural motif. It refers to any group of contiguous or non-contiguous amino acid residues, typically forming a feature with a structural or functional role within the protein. This class captures structural motifs that are defined by their spatial configuration and functional or structural significance within protein architecture.\nAxiom: {'subClassOf': ['Protein structure']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under the category of Protein structure, such as Protein structural motif?", "1": "Is Protein structural motif classified as a type of Protein structure?", "2": "What broader categories encompass Protein structural motif within this hierarchy?", "3": "...", "4": "Does every Protein structural motif necessarily belong to the set of Protein structure subclasses?", "5": "Under which overarching classes does Protein structural motif fall according to the ontology?", "6": "...", "7": "Is Protein structural motif categorized under the more general concept of Protein structure?", "8": "...", "9": "Which structures include Protein structural motif as a specialized form within the classification?", "10": "...", "11": "Can Protein structural motif be viewed as a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Dylan\nDescription: Dylan is defined as a subclass of programming language, indicating that it represents a specific type of programming language. No additional axioms or restrictions are provided, so members of this class inherit all the general characteristics of programming languages.\nAxiom: {'subClassOf': ['programming language']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories does Dylan fall under within the context of programming languages?", "1": "Is Dylan classified as a specialized form of programming language?", "2": "Which programming languages include Dylan as a more specific instance?", "3": "What subclasses are encompassed by the category of programming language, such as Dylan?", "4": "To which overarching classes does Dylan belong within the domain of programming languages?", "5": "Does Dylan represent a specific kind of programming language?", "6": "Under which general types of programming languages can Dylan be categorized?", "7": "Which programming languages have Dylan as a more specific subclass?", "8": "What general classes encompass Dylan among programming languages?", "9": "Is Dylan recognized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Secondary structure alignment generation\nDescription: Secondary structure alignment generation is classified as a subclass of Obsolete concept (EDAM), indicating it is no longer in active use within the ontology. This class refers to the process of aligning molecular secondary structures represented as 1D strings, but its deprecated status suggests newer or alternative methods are now preferred.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "Which concepts fall under the category of Obsolete concept (EDAM), including Secondary structure alignment generation?", "1": "Is Secondary structure alignment generation categorized as a type of Obsolete concept (EDAM)?", "2": "What broader conceptual groups does Secondary structure alignment generation belong to?", "3": "Does Obsolete concept (EDAM) encompass Secondary structure alignment generation as a specific instance?", "4": "To which higher-level categories is Secondary structure alignment generation hierarchically related?", "5": "Which concepts are considered more specialized than Obsolete concept (EDAM), such as Secondary structure alignment generation?", "6": "Is Obsolete concept (EDAM) a direct superclass"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiProDB ID\nDescription: DiProDB ID is defined as a subclass of Oligonucleotide ID, representing an identifier specifically assigned to a dinucleotide property within the DiProDB database. This class is intended to uniquely reference dinucleotide properties catalogued in DiProDB, ensuring structured identification within oligonucleotide-related datasets.\nAxiom: {'subClassOf': ['Oligonucleotide ID']}\nGenerated CQs:", "generated_outputs": {"0": "Which identifiers are classified under Oligonucleotide ID, including DiProDB ID?", "1": "Is DiProDB ID categorized as a type of Oligonucleotide ID?", "2": "What broader classes does DiProDB ID fall under within this context?", "3": "Next level up from DiProDB ID in the hierarchy is what?", "4": "Does every instance of DiProDB ID also belong to the category Oligonucleotide ID?", "5": "Which subclasses are included within Oligonucleotide ID such as DiProDB ID?", "6": "Is DiProDB ID recognized as a specific kind of Olig"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gene features (coding region) format\nDescription: Gene features (coding region) format is a subclass of Gene annotation format, specifically designated for representing reports on coding regions within nucleotide sequences. This class formalizes formats that are used to annotate and convey information about regions of genetic sequences that code for proteins, emphasizing their role in gene annotation workflows.\nAxiom: {'subClassOf': ['Gene annotation format']}\nGenerated CQs:", "generated_outputs": {"0": "Which types fall under the category of Gene annotation format, including Gene features (coding region) format?", "1": "Is Gene features (coding region) format classified as a kind of Gene annotation format?", "2": "What broader categories encompass Gene features (coding region) format?", "3": "Does every instance of Gene features (coding region) format also belong to the set of Gene annotation format?", "4": "Which more general classifications include Gene features (coding region) format?", "5": "Under which higher-level concepts does Gene features (coding region) format fall?", "6": "Can Gene features (coding region) format be seen as a specialized form of Gene"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sequence retrieval\nDescription: Sequence retrieval is defined as a subclass of Obsolete concept (EDAM), indicating that it represents a retired or deprecated concept within the EDAM ontology. This class encompasses methods for directly querying a sequence data resource—typically a sequence database—and retrieving sequences and/or their annotations. Direct retrieval methods, such as dbfetch, are included, but methods that perform calculations or further analysis on the sequences are excluded from this category.\nAxiom: {'subClassOf': ['Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass Sequence retrieval according to the ontology?", "1": "Is Sequence retrieval classified under the broader category of Obsolete concept (EDAM)?", "2": "Which concepts fall under the category of Obsolete concept (EDAM), including Sequence retrieval?", "3": "Next level up from Sequence retrieval in the hierarchy is Obsolete concept (EDAM).", "4": "What are all the subclasses grouped under Obsolete concept (EDAM), specifically including Sequence retrieval?", "5": "Does Sequence retrieval represent a specific type categorized under Obsolete concept (EDAM)?", "6": "Which higher-level classes does Sequence retrieval belong to in the ontology?", "7": "Is Sequence retrieval"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DragonDB author identifier\nDescription: DragonDB author identifier is defined as a subclass of Author ID, representing an identifier specifically assigned to authors within the DragonDB database. This class ensures that any instance identified as a DragonDB author identifier is formally recognized as a type of Author ID, uniquely referencing author entities in the DragonDB resource.\nAxiom: {'subClassOf': ['Author ID']}\nGenerated CQs:", "generated_outputs": {"0": "Does every DragonDB author identifier fall under the category of Author ID?", "1": "What broader classes encompass DragonDB author identifiers?", "2": "Which specific types are classified under Author ID, including DragonDB author identifier?", "3": "Is DragonDB author identifier categorized as a form of Author ID?", "4": "What are the parent categories for DragonDB author identifier?", "5": "Does DragonDB author identifier represent a more specialized kind of Author ID?", "6": "What other identifiers besides DragonDB author identifier are subclasses of Author ID?", "7": "Under which general identifier classifications does DragonDB author identifier reside?", "8": "Is DragonDB author identifier included among the types that"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Restriction enzyme name\nDescription: Restriction enzyme name is a subclass of Enzyme name. It refers specifically to the name assigned to a restriction enzyme, a type of enzyme that recognizes and cuts DNA at specific sequences. This class is formally situated within the broader category of enzyme names, distinguishing names of restriction enzymes from other enzyme types.\nAxiom: {'subClassOf': ['Enzyme name']}\nGenerated CQs:", "generated_outputs": {"0": "Which specialized types fall under the category of Enzyme name, such as Restriction enzyme name?", "1": "Is every Restriction enzyme name classified as a form of Enzyme name?", "2": "What are the direct parent categories for Restriction enzyme name?", "3": "Next level up in classification hierarchy for Restriction enzyme name?", "4": "Which higher-level classes include Restriction enzyme name as a member?", "5": "Does Restriction enzyme name represent a more general category encompassing Enzyme name?", "6": "Are all Restriction enzyme names categorized under Enzyme name?", "7": "What other subclasses are contained within Enzyme name"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: probability distribution estimation algorithm\nDescription: probability distribution estimation algorithm is defined as a subclass of single generalization algorithm. This class comprises algorithms that infer or estimate a probability distribution from data, rather than focusing on mapping individual inputs to outputs. Members of this class generalize from data in a way that results in a probabilistic model, which can then be used for tasks such as sampling, density estimation, or uncertainty quantification.\nAxiom: {'subClassOf': ['single generalization algorithm']}\nGenerated CQs:", "generated_outputs": {"0": "Which types of algorithms are more specific instances under single generalization algorithm, including probability distribution estimation algorithm?", "1": "Is every probability distribution estimation algorithm classified as a kind of single generalization algorithm?", "2": "What broader categories encompass probability distribution estimation algorithm within their hierarchy?", "3": "Does the concept of single generalization algorithm include probability distribution estimation algorithm as a specialized form?", "4": "To what higher-level algorithmic categories does probability distribution estimation algorithm belong?", "5": "Which algorithms are categorized under single generalization algorithm, specifically including probability distribution estimation algorithm?", "6": "Is probability distribution estimation algorithm a direct specialization of single generalization algorithm?", "7": "What are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ILLUMINA data\nDescription: ILLUMINA data is defined as a subclass of data, meaning it represents a specific type or category of data within the broader class of data. There are no additional property restrictions or disjointness axioms specified, so ILLUMINA data inherits all characteristics of the general data class, while being distinguished as data generated by ILLUMINA technologies or platforms.\nAxiom: {'subClassOf': ['data']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level classes include ILLUMINA data?", "1": "Is every instance of ILLUMINA data also classified under data?", "2": "Which types fall under the category of data, such as ILLUMINA data?", "3": "What categories encompass ILLUMINA data as a more specific member?", "4": "Does ILLUMINA data belong to the broader group known as data?", "5": "Which data subclasses exist, including ILLUMINA data?", "6": "Under which overarching data classification does ILLUMINA data fall?", "7": "Is ILLUMINA data categorized under the general concept of data?", "8": "To what"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bayesian Model\nDescription: Bayesian Model is defined as a subclass of algorithm, indicating that it is a specialized form of algorithm. Members of this class use principles of Bayesian inference to update probabilities or model parameters based on observed data, aligning with the general approach of algorithms in processing and decision-making.\nAxiom: {'subClassOf': ['algorithm']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses are encompassed within the category of algorithm, such as Bayesian Model?", "1": "Is Bayesian Model classified under the broader group of algorithm?", "2": "What higher-level categories include Bayesian Model as a member?", "3": "Does every Bayesian Model fall under the classification of algorithm?", "4": "To which parent classes does Bayesian Model belong within the hierarchy?", "5": "Which more specific models are categorized under algorithm, including Bayesian Model?", "6": "What overarching concepts define the relationship between Bayesian Model and algorithm?", "7": "Can a Bayesian Model be understood as a type of algorithm?", "8": "Under which general algorithmic classifications can Bayesian Model be grouped?", "9": "Are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Neurobiology\nDescription: Neurobiology is a subclass of Biomedical science, focused on the study of the nervous system and brain, including their anatomy, physiology, and functional aspects. This class encompasses research and knowledge relating to how nervous tissue develops, operates, and influences behavior and health.\nAxiom: {'subClassOf': ['Biomedical science']}\nGenerated CQs:", "generated_outputs": {"0": "Which specialized areas fall under the broader category of Biomedical science, such as neurobiology?", "1": "Is neurobiology classified as a more specific type within biomedical sciences?", "2": "What higher-level categories encompass neurobiology as a subfield?", "3": "Which overarching disciplines include neurobiology as a subordinate field?", "4": "Does neurobiology represent a subtype of biomedical science?", "5": "To which general fields does neurobiology belong in terms of classification?", "6": "What are the parent categories associated with neurobiology?", "7": "Is neurobiology categorized under the umbrella of biomedical science?", "8": "Within the hierarchy of biomedical science, what are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Carbohydrates\nDescription: Carbohydrates is a subclass within the broader domain of Biochemistry. This class focuses on topics related to carbohydrates, typically encompassing their structural information. It formalizes the study and categorization of carbohydrates as chemical compounds within biochemistry, emphasizing their molecular structure and relevance in biological systems.\nAxiom: {'subClassOf': ['Biochemistry']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories include Carbohydrates as a member?", "1": "Is Carbohydrates classified under the broader category of Biochemistry?", "2": "What are the direct subcategories of Biochemistry such as Carbohydrates?", "3": "Is every instance of Carbohydrates also considered an entity within Biochemistry?", "4": "Which more general concepts does Carbohydrates fall under?", "5": "Does Carbohydrates belong to the hierarchical structure defined for Biochemistry?", "6": "Under which overarching domains is Carbohydrates categorized?", "7": "Is Carbohydrates a specific type within the realm of Biochemistry?", "8": "To what broader classes is Carbohydrates"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Locus ID (MMP)\nDescription: Locus ID (MMP) is defined as a subclass of Locus ID, representing identifiers specifically assigned to loci within the Maize Mapping Project. These identifiers uniquely reference genetic loci mapped in the context of this project, ensuring precise identification and integration with broader genetic resources.\nAxiom: {'subClassOf': ['Locus ID']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are encompassed by Locus ID, such as Locus ID (MMP)?", "1": "Is Locus ID a more general class than Locus ID (MMP)?", "2": "What higher-level categories does Locus ID (MMP) belong to?", "3": "Next level up from Locus ID (MMP) is which class?", "4": "Does Locus ID include subclasses such as Locus ID (MMP)?", "5": "Which broader classes include Locus ID (MMP) as a member?", "6": "Is Locus ID a direct superclass of Locus ID (MMP)?", "7": "What are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein structural motifs and surfaces\nDescription: Protein structural motifs and surfaces is a subclass of Obsolete concept (EDAM), Protein structure analysis, and Protein sites, features and motifs. This class encompasses conserved substructures, geometry of secondary structure elements, and spatial arrangements within protein backbones. It also includes aspects related to solvent-exposed surfaces and internal cavities, addressing analyses of shape, hydropathy, electrostatic patches, and related roles and functions. The class captures topics concerning three-dimensional structural features or common 3D motifs in proteins, as well as functional surface regions such as biological interfaces with other molecules.\nAxiom: {'subClassOf': ['Protein structure analysis', 'Protein sites, features and motifs', 'Obsolete concept (EDAM)']}\nGenerated CQs:", "generated_outputs": {"0": "Which concepts are classified under Obsolete concept (EDAM), including Protein structural motifs and surfaces?", "1": "Is Protein structural motifs and surfaces categorized under the broader group of Obsolete concept (EDAM)?", "2": "What higher-level classes does Protein structural motifs and surfaces fall into according to the ontology?", "3": "Does Protein structural motifs and surfaces belong to the set of subclasses defined by Obsolete concept (EDAM)?", "4": "Which obsolete EDAM concepts include Protein structural motifs and surfaces as a more specific instance?", "5": "Under which general categories is Protein structural motifs and surfaces recognized within the ontology?", "6": "Is Protein structural motifs and surfaces"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protein cleavage sites\nDescription: Protein cleavage sites is a subclass of Protein sites, features and motifs, representing locations within a protein sequence where cleavage by a proteolytic enzyme or agent occurs. This class specifically captures the sites of proteolytic processing, which are essential for understanding post-translational modifications and protein maturation.\nAxiom: {'subClassOf': ['Protein sites, features or motifs']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass Protein cleavage sites?", "1": "Which entities fall under Protein sites, features and motifs including Protein cleavage sites?", "2": "Is Protein cleavage sites classified as a type of Protein sites, features and motifs?", "3": "...", "4": "Does every instance of Protein cleavage sites also belong to the broader category of Protein sites, features and motifs?", "5": "What specific subclasses are included within Protein sites, features and motifs such as Protein cleavage sites?", "6": "...", "7": "Which more general concepts does Protein cleavage sites pertain to within this ontology?", "8": "...", "9": "Is Protein cleavage sites categorized as a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Representative sequence identification\nDescription: Representative sequence identification is defined as a subclass of Sequence comparison. Individuals in this class are related to at least one topic involving sequence comparison (as specified by the property restriction: has topic some Sequence comparison). This class is concerned with the process of identifying a representative sequence from a set of sequences, generally utilizing pair-wise alignment scores or other sequence comparison methods.\nAxiom: {'subClassOf': ['Sequence comparison'], 'propertyRestrictions': ['[has topic only Sequence comparison]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of Representative sequence identification have at least one topic associated via 'has topic'?", "1": "Is it required for Representative sequence identification to be connected to some entity through the 'has topic' relationship?", "2": "Does Representative sequence identification always relate to something else via the property 'has topic'?", "3": "Can a Representative sequence identification exist without being linked to any topic via 'has topic'?", "4": "Are all instances of Representative sequence identification necessarily connected to at least one topic via the 'has topic' property?", "5": "Does Representative sequence identification require having the 'has topic' relation to a specific subject?", "6": "Is Representative sequence"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MIRIAM data type name\nDescription: MIRIAM data type name is a subclass of Data resource definition name, representing the name of a data type sourced from the MIRIAM database. Additionally, each instance serves as an identifier for some Database metadata. This ensures that every MIRIAM data type name uniquely references metadata within a database context, as per the definition from MIRIAM.\nAxiom: {'subClassOf': ['Data resource definition name'], 'propertyRestrictions': ['[is identifier of only Database metadata]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every MIRIAM data type name necessarily serve as an identifier for at least one entry in the Database metadata?", "1": "Is it required that any given MIRIAM data type name is linked via 'is identifier of' to a specific record within Database metadata?", "2": "Can there exist a MIRIAM data type name without being associated as an identifier for any Database metadata entity?", "3": "Is it necessary that all MIRIAM data type names are used to identify entries in the Database metadata?", "4": "Does the property restriction 'is identifier of' apply exclusively to MIRIAM data type names referencing Database metadata?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Quadruplex formation site detection\nDescription: Quadruplex formation site detection is a subclass of nucleic acid sequence feature detection, specifically focused on identifying regions within nucleotide sequences capable of forming quadruplex (4-stranded) structures. These quadruplexes, typically arising from guanine-rich regions, play important roles in biological processes and are potential therapeutic targets. The class is characterized by its association with nucleic acid structure prediction as a topic and the output of nucleic acid structure reports, ensuring that any instance of this class involves the detection and reporting of quadruplex-forming motifs.\nAxiom: {'subClassOf': ['Nucleic acid sequence feature detection'], 'propertyRestrictions': ['[has output some Nucleic acid structure report]', '[has topic only Nucleic acid structure prediction]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance associated with 'Quadruplex formation site detection' have at least one property 'has topic' linked to 'Nucleic acid structure prediction'?", "1": "Is it possible for an entity classified under 'Quadruplex formation site detection' not to possess any 'has topic' relation to 'Nucleic acid structure prediction'?", "2": "Does the presence of the 'has topic' relationship between 'Quadruplex formation site detection' and 'Nucleic acid structure prediction' necessarily characterize all instances of 'Quadruplex formation site detection'?", "3": "Can something be categorized as a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IRanges\nDescription: IRanges is defined as a subclass of software characterized by several key properties. It is encoded in the R language and operates in the context of data normalization and decision tree induction processes. IRanges requires input data in the form of an R data frame and produces output data also formatted as an R data frame. These property restrictions specify the technical environment and data formats integral to IRanges, emphasizing its role in R-based data workflows and its utility in data preprocessing and machine learning tasks.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[is executed in some data normalization]', '[has specified data input some (data and [has format specification some R data frame])]', '[is executed in some decision tree induction]', '[has specified data output some (data and [has format specification some R data frame])]', '[is encoded in only R language]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of IRanges have at least one specified data output that has both data and a format specification in R data frame?", "1": "Is it required for any IRanges to produce some specified data output that includes data and possesses a format specification as an R data frame?", "2": "Does the existence of IRanges entail that there must be associated specified data outputs which are both data and have a format specified by an R data frame?", "3": "Can an IRanges exist without producing any specified data output that consists of data and possesses a format specification in R data frame?", "4": "Is it possible for an IRanges to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MUSCLE 3.8.31\nDescription: MUSCLE 3.8.31 is a subclass of Drive5 MUSCLE and represents a specific release of the MUSCLE software (version 3.8.31). Instances of this class are characterized by having a defined download location (ns5:downloads.htm), access to at least one command-line interface, and are associated with documentation resources (ns5:muscle_userguide3.8.html and ns6:gkh340). This formalization ensures that any individual classified as MUSCLE 3.8.31 is identifiable by these version-specific properties and documentation links.\nAxiom: {'subClassOf': ['Drive5 MUSCLE'], 'propertyRestrictions': ['[has download location hasValue ns5:downloads.htm]', '[has documentation hasValue ns5:muscle_userguide3.8.html]', '[has version hasValue MUSCLE version 3.8.31]', '[has documentation hasValue ns6:gkh340]', '[has interface only command-line interface]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance with a property restriction of 'has interface' include at least one value from the command-line interface?", "1": "Is it required for an entity restricted by 'has interface' to possess some form of command-line interface?", "2": "Can there exist an object with 'has interface' without being linked to any command-line interface?", "3": "Next CQ:Is it necessary for all entities with the property 'has interface' to be associated exclusively with command-line interfaces?", "4": "Does the presence of the 'has interface' property imply that only command-line interfaces are involved?", "5": "Are all instances connected via 'has interface"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChipReader 3.1\nDescription: ChipReader 3.1 is defined as a class whose instances are outputs of at least one software publishing process, and every such process must have Bio-Rad Laboratories, Inc. as a participant. This axiom ensures that any individual categorized as ChipReader 3.1 originates from a software publishing process involving Bio-Rad Laboratories, Inc.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[output of some (software publishing process and [has participant hasValue Bio-Rad Laboratories, Inc.])]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified under ChipReader 3.1 necessarily result from a software publishing process that involves Bio-Rad Laboratories, Inc.?", "1": "Is ChipReader 3.1 encompassed within the broader category of software, and does it require participation by Bio-Rad Laboratories, Inc. in its producing software publishing process?", "2": "What higher-level categories or classes include ChipReader 3.1, particularly in relation to the involvement of Bio-Rad Laboratories, Inc. in software publishing processes?", "3": "Is ChipReader 3.1 characterized as a type of output produced through software publishing processes where Bio-R"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RFAM accession\nDescription: RFAM accession is defined as a subclass of Accession, indicating that every RFAM accession is a specific type of accession with all the general properties of an accession. No additional constraints or distinguishing characteristics are provided beyond its subclass relationship.\nAxiom: {'subClassOf': ['Accession', 'RNA family identifier']}\nGenerated CQs:", "generated_outputs": {"0": "Does an RFAM accession qualify as a type of RNA family identifier?", "1": "Which identifiers fall under the category of RNA family identifier, including RFAM accession?", "2": "What broader categories encompass RFAM accession within the context of RNA family identification?", "3": "Is RFAM accession classified under RNA family identifier?", "4": "To which higher-level concepts does RFAM accession belong among RNA family identifiers?", "5": "Is RFAM accession categorized as an RNA family identifier?", "6": "Which subclasses fall under the category of RNA family identifier, specifically including RFAM accession?", "7": "Does RFAM accession represent a specialized form of RNA family identifier"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: phyloXML\nDescription: phyloXML is defined as a subclass of Phylogenetic tree format (XML), indicating that it is a specific type of XML-based format used for representing phylogenetic trees. Any instance of phyloXML is also considered an instance of Phylogenetic tree format (XML).\nAxiom: {'subClassOf': ['Phylogenetic tree format (XML)', 'XML']}\nGenerated CQs:", "generated_outputs": {"0": "Does phyloXML fall under the broader classification of XML?", "1": "Which XML formats include phyloXML as a specialized variant?", "2": "What are the more general categories encompassing phyloXML?", "3": "Is phyloXML categorized within the broader group of XML?", "4": "Under which overarching XML classifications does phyloXML reside?", "5": "To what higher-level XML classes does phyloXML belong?", "6": "Does every phyloXML instance also qualify as an XML entity?", "7": "Can all phyloXML instances be seen as a kind of XML document?", "8": "Is phyloXML classified under the broader category of XML?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pathway ID (ConsensusPathDB)\nDescription: Pathway ID (ConsensusPathDB) is defined as a subclass of ConsensusPathDB identifier. This means any instance of Pathway ID (ConsensusPathDB) is recognized as a type of unique identifier specifically used within the ConsensusPathDB resource, dedicated to identifying biological pathways recorded in this database.\nAxiom: {'subClassOf': ['ConsensusPathDB identifier', 'Pathway or network accession']}\nGenerated CQs:", "generated_outputs": {"0": "Does Pathway ID (ConsensusPathDB) fall under the broader classification of Pathway or network accession?", "1": "Which accessions are more specific than Pathway or network accession, such as Pathway ID (ConsensusPathDB)?", "2": "What higher-level categories encompass Pathway ID (ConsensusPathDB)?", "3": "Is Pathway ID (ConsensusPathDB) classified under Pathway or network accession?", "4": "To which parent identifiers does Pathway ID (ConsensusPathDB) belong?", "5": "Which types of identifiers are subclasses of Pathway or network accession, including Pathway ID (ConsensusPath"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Epitope mapping\nDescription: Epitope mapping is defined as a subclass of protein sequence feature detection, focusing on the identification and analysis of epitopes. It is characterized by having a topical relationship to immunology, meaning that any instance of epitope mapping must relate to immunological topics. This ensures that the process specifically pertains to immunological research or applications within the broader domain of protein sequence analysis.\nAxiom: {'subClassOf': ['Protein sequence feature detection', 'Mapping'], 'propertyRestrictions': ['[has topic some Immunology]']}\nGenerated CQs:", "generated_outputs": {"0": "Does Epitope mapping fall under the category of Mapping?", "1": "Which specific types are classified as subtypes of Mapping, including Epitope mapping?", "2": "What higher-level categories does Epitope mapping belong to within the ontology?", "3": "Is Epitope mapping categorized under Protein sequence feature detection?", "4": "Under which broader classification is Epitope mapping grouped?", "5": "What processes are encompassed by Protein sequence feature detection, such as Epitope mapping?", "6": "Which broader concepts include Epitope mapping as a more specialized activity?", "7": "Does Epitope mapping represent a form of Protein sequence feature detection?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: unambiguous pure rna sequence\nDescription: unambiguous pure rna sequence is defined as a subclass of unambiguous pure. This means every unambiguous pure rna sequence inherits all characteristics of unambiguous pure, while further specializing the concept—typically to represent RNA sequences that contain only unambiguous (unmodified and clearly defined) nucleotide bases. No additional restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['unambiguous pure', 'rna']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass unambiguous pure rna sequence?", "1": "Which entities are categorized under unambiguous pure, including unambiguous pure rna sequence?", "2": "Is unambiguous pure rna sequence classified as a kind of unambiguous pure?", "3": "Is unambiguous pure a broader category than unambiguous pure rna sequence?", "4": "What are the more specific types included within unambiguous pure such as unambiguous pure rna sequence?", "5": "Does every instance of unambiguous pure rna sequence fall under the category of unambiguous pure?", "6": "Under which overarching classes does unambiguous pure rna sequence reside within the hierarchy"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: timecourse\nDescription: timecourse is defined as a subclass of software, specifically characterized by implementing some form of Robust Multi-array Average (RMA) methodology. Instances of this class are published by Bioconductor, are encoded in the R programming language, and are restricted to producing data output that has a format specification only in the CEL binary format. This formalization ensures that any timecourse software must fulfill these requirements and cannot represent software lacking these key attributes.\nAxiom: {'subClassOf': ['software'], 'propertyRestrictions': ['[implements some RMA]', '[is published by hasValue Bioconductor]', '[is encoded in some R language]', '[has specified data output some [has format specification only CEL binary format]]', '[has specified data input some Gene expression dataset]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every timecourse require at least one specified data input that is a gene expression dataset?", "1": "Is it necessary for a timecourse to have a specified data input that includes a gene expression dataset?", "2": "Can there exist a timecourse without having any specified data input from the set of gene expression datasets?", "3": "Does the property \"has specified data input\" relating a timecourse necessarily include a gene expression dataset among its values?", "4": "Is it possible for a timecourse's \"has specified data input\" property to refer only to something other than a gene expression dataset?", "5": "Are all instances of time"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: output of\nDescription: The property \"output of\" does not have explicitly defined characteristics, domain, or range restrictions. It is a sub-property of \"participates in,\" indicating that it represents a more specific relationship within the broader context of participation. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the higher-level properties that 'output of' is associated with?", "1": "Is 'output of' encompassed under the broader category of 'participates in'?", "2": "Which properties are considered subproperties of 'participates in', including 'output of'?", "3": "Does every use of 'output of' also imply involvement through 'participates in'?", "4": "What are all the superproperties for 'output of' in this ontology?", "5": "Can an entity serve as the output of another if they do not participate in some activity?", "6": "Are there any other properties besides 'output of' that are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is topic of\nDescription: The property \"is topic of\" relates an instance of 'Topic' (the subject) to an instance of 'data or information processing' (the object), indicating that the topic is the subject or scope of the referenced data or process. The domain is restricted to 'Topic', while the range includes data or information processing entities. There are no declared property characteristics, super-properties, or sub-properties. The inverse property is 'has topic'. In EDAM, this property is not used directly between EDAM concepts; instead, the inverse 'has topic' is applied. The property asserts that a topic A is the topic of object B, establishing a scope relationship.\nAxiom: {'characteristics': [], 'domain': ['Topic'], 'range': ['(data and information processing)'], 'subPropertyOf': [], 'inverseOf': ['has topic']}\nGenerated CQs:", "generated_outputs": {"0": "How does the property ‘is topic of’ relate to ‘has topic’ within the ontology?", "1": "If entity X has topic Y, can we infer that Y is a topic of X according to the ontology?", "2": "Which properties are defined as inverses for ‘is topic of’ in the ontology? Next CQ:Is it correct that the property ‘is topic of’ serves as the inverse of ‘has topic’ in the ontology?", "3": "What concept acts as the domain for the property ‘has topic’, given its inverse ‘is topic of’?", "4": "Does the ontology assert that every entity that uses"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: is version of\nDescription: The property \"is version of\" has no explicitly defined characteristics, domain or range restrictions, super-properties, or inverse properties. It is used without constraints on the types of entities it relates.\nAxiom: {'characteristics': [], 'domain': ['version name'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can anything other than a'version name' serve as the subject for the 'is version of' property?", "1": "What can be the domain of the 'is version of' property?", "2": "Are all instances of'version name' allowed to use the 'is version of' property?", "3": "Is there any entity outside of'version name' that could be associated via 'is version of'?", "4": "Can something other than'version name' be used as the domain for 'is version of'?", "5": "Is it required that every subject of 'is version of' must be a'version name'?", "6": "Does"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Report\nDescription: Report is a class defined by a set of strict property restrictions: each instance must be provided by exactly one event:Person and must refer to exactly one instance of either home:Questionnaire, lab:ClinicalRecord, or lab:DemographicCharacteristicsRecord. Additionally, every Report must have exactly one hasPlausibilityMetric value of type xsd:double and exactly one hasReportingTime value of type time:Instant, with no other values permitted for these properties. The class definition ensures that each Report is uniquely associated with one provider, one time of reporting, a plausibility metric, and one described source record, reflecting a precise and singular reporting activity.\nAxiom: {'propertyRestrictions': ['[hasPlausibilityMetric exactly 1 xsd:double]', '[hasPlausibilityMetric only xsd:double]', '[describes only (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]', '[providedBy exactly 1 event:Person]', '[providedBy only event:Person]', '[hasReportingTime only time:Instant]', '[describes exactly 1 (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every report necessarily describe at least one entity that is either a questionnaire, clinical record, or demographic characteristics record?", "1": "Is it required that all reports are related via 'describes' to instances from the set {questionnaire, clinical record, demographic characteristics record}?", "2": "Can a report exist without describing any document belonging to the categories of questionnaire, clinical record, or demographic characteristics record?", "3": "Does the presence of the 'describes' relation between a report and any entity imply membership in the group consisting of questionnaires, clinical records, and demographic characteristics records?", "4": "Are all entities described by a report"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FixedSensor\nDescription: FixedSensor is defined as a subclass of Sensor. This indicates that every FixedSensor is a type of Sensor, inheriting all characteristics of the Sensor class. No additional constraints or distinguishing axioms are specified beyond this hierarchical relationship, meaning FixedSensors share the essential properties of Sensors.\nAxiom: {'subClassOf': ['Sensor']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under the category of Sensor, including FixedSensor?", "1": "Is FixedSensor categorized within the broader group of Sensor?", "2": "What higher-level classes encompass FixedSensor as a member?", "3": "Does FixedSensor belong to the set of entities classified as Sensor?", "4": "Which parent categories include FixedSensor as a more specific type?", "5": "Under which overarching classes is FixedSensor organized?", "6": "Are there any other types of Sensor that also have FixedSensor as a subclass?", "7": "To what general categories does FixedSensor pertain according to the hierarchy?", "8": "Of what more specific instances is Sensor composed, such as FixedSensor"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Detection\nDescription: Detection is defined as a subclass of Observation. Individuals classified as Detection must only describe either an event of type AtomicActivity or ObjectEvent, and are restricted to being provided exclusively by a ProcessingComponent. This ensures that each Detection instance is specifically tied to these event types, and clearly attributed to a particular processing component within the system.\nAxiom: {'subClassOf': ['Observation'], 'propertyRestrictions': ['[describes only (event:AtomicActivity or event:ObjectEvent)]', '[providedBy some ProcessingComponent]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every detection necessarily have at least one provider that is a processing component?", "1": "Is it required for a detection to be associated with some processing component through the ‘providedBy’ property?", "2": "Can a detection exist without any connection via ‘providedBy’ to a processing component?", "3": "Does the presence of the ‘providedBy’ link to a processing component guarantee that the entity is a detection?", "4": "Are all detections necessarily linked to at least one processing component by the ‘providedBy’ relationship?", "5": "Is there any detection without a corresponding ‘providedBy’ reference to a processing component?", "6": "Can a detection"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Recognition\nDescription: Recognition is defined as a subclass of Observation, representing a specific type of observation process. It is further constrained such that any instance of Recognition must be provided only by either a Person or a ProcessingComponent, ensuring that the source of recognition events is always one of these two entities. This formalization distinguishes Recognition events from other Observations based on their permissible providers.\nAxiom: {'subClassOf': ['Observation'], 'propertyRestrictions': ['[providedBy only (event:Person or ProcessingComponent)]', '[describes only event:ComplexActivity]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every Recognition describe exactly one ComplexActivity?", "1": "Is it required for each Recognition property restriction to refer to a single ComplexActivity?", "2": "Can a Recognition have multiple ComplexActivities associated via its describes property?", "3": "Does the describes property of Recognition ever relate to more than one ComplexActivity?", "4": "Is there any Recognition whose describes property applies to anything beyond ComplexActivities?", "5": "Can the describes property of Recognition specify only ComplexActivities?", "6": "Are all ComplexActivities covered by the describes property of some Recognition?", "7": "Does the presence of the describes property restrict the domain of Recognition exclusively to ComplexActivities?", "8": "Is it possible for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: roomLocalisation\nDescription: The property \"roomLocalisation\" has no explicitly defined domain, range, or characteristics, and is not specified as a sub-property or inverse of any other property. In the absence of further axioms or existing description, its use and related entities remain unspecified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What can be the range for the property 'roomLocalisation'?", "1": "Can 'roomLocalisation' have any value outside of a specific class?", "2": "Is it correct that the property 'roomLocalisation' does not specify a domain?", "3": "What classes are permitted as the domain for 'roomLocalisation'?", "4": "Is it correct that the property 'roomLocalisation' does not specify a range?", "5": "Can 'roomLocalisation' be used with subjects from any class?", "6": "Is it correct that the property 'roomLocalisation' does not specify a range?", "7": "What types of values may appear as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: refersTo\nDescription: The property \"refersTo\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This indicates its use is unconstrained with respect to the types of entities it connects, allowing it to relate any two individuals without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What can serve as the domain for the property'refersTo'?", "1": "Can anything be used as the range for the property'refersTo'?", "2": "Is it correct that the property'refersTo' does not have a specified range?", "3": "Is it accurate that the property'refersTo' has no defined domain?", "4": "What are the possible ranges associated with the property'refersTo'?", "5": "Is there any entity that cannot act as the range when using the property'refersTo'?", "6": "Does the property'refersTo' lack a specified domain?", "7": "Is it correct that"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TobascoPepperSauce\nDescription: TobascoPepperSauce is defined as a subclass of SauceTopping, indicating it is a specific type of sauce used as a topping. All members of this class are required to have the property hasSpiciness with at least some value classified as Hot, meaning every TobascoPepperSauce must exhibit a hot level of spiciness.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "generated_outputs": {"0": "Does TobascoPepperSauce fall under the broader category of SauceTopping?", "1": "Which toppings encompass more specific varieties such as TobascoPepperSauce?", "2": "What are the direct superclasses associated with TobascoPepperSauce?", "3": "Is TobascoPepperSauce categorized as a type of SauceTopping?", "4": "To which higher-level classes does TobascoPepperSauce belong within the context of sauces?", "5": "Are all instances of TobascoPepperSauce classified under SauceTopping?", "6": "Which subclasses are included under the category of SauceTopping, specifically including Tobasco"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LaReine\nDescription: LaReine is defined as a subclass of NamedPizza and is declared disjoint with a number of other specific pizza classes, including Mushroom, Napoletana, Veneziana, and others—ensuring no individual pizza can be classified as both a LaReine and any of these listed classes. \n\nLaReine pizzas are characterized by several property restrictions: every LaReine pizza must have at least one topping of each of the following types—MushroomTopping, TomatoTopping, HamTopping, OliveTopping, and MozzarellaTopping. Additionally, the only permitted toppings for LaReine pizzas are MozzarellaTopping, TomatoTopping, HamTopping, OliveTopping, or MushroomTopping; no other toppings are allowed. This ensures that the LaReine pizza is strictly defined by this specific set of ingredients.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or OliveTopping or MushroomTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology define the mutual exclusivity between LaReine and AmericanHot?", "1": "Is it possible for an entity to be classified as both LaReine and AmericanHot according to the ontology?", "2": "Which classes are explicitly stated as disjoint with LaReine? Next:CQ:Is there any instance that can belong simultaneously to LaReine and Capricciosa in the ontology?", "3": "Which categories are declared incompatible with Capricciosa within the ontology?", "4": "What formal separation exists between LaReine and FruttiDiMare? Next:CQ:", "5": "Does the ontology permit an item"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DeepPanBase\nDescription: DeepPanBase is defined as a subclass of PizzaBase, establishing it as a specific type of pizza base. It is explicitly disjoint with ThinAndCrispyBase, which means that no pizza base can simultaneously be classified as both a DeepPanBase and a ThinAndCrispyBase. This formalization ensures clear differentiation between thick, deep pan styles and thin, crispy bases within the ontology.\nAxiom: {'subClassOf': ['PizzaBase'], 'disjointWith': []}\nGenerated CQs:", "generated_outputs": {"0": "What ontological distinction is made between DeepPanBase and ThinAndCrispyBase?", "1": "Is there any instance that can belong to both DeepPanBase and ThinAndCrispyBase categories?", "2": "Which other classes are specified as mutually exclusive with ThinAndCrispyBase?", "3": "Is DeepPanBase categorized under any higher-level group besides ThinAndCrispyBase?", "4": "Which subclasses fall under the broader classification of ThinAndCrispyBase?", "5": "Does the ontology allow for entities to be assigned to both ThinAndCrispyBase and its direct superclass?", "6": "What hierarchical relationships exist"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ValuePartition\nDescription: ValuePartition is a pattern used to represent a set of mutually exclusive and exhaustive subclasses that serve as the only permissible values for a particular property. It is disjoint with DomainConcept, ensuring that no individual can belong to both classes. The parent ValuePartition class is employed in property restrictions, and its subclasses collectively cover all possible values for the property—membership cannot extend beyond these predefined subclasses without modifying the ValuePartition. This structure enforces a fixed set of alternatives, supporting controlled vocabularies and value enumerations within the ontology.\nAxiom: {'disjointWith': ['DomainConcept']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between ValuePartition and DomainConcept?", "1": "Is there any entity classified under both ValuePartition and DomainConcept?", "2": "Which other classes are defined as disjoint with DomainConcept? Next CQ:Is ValuePartition considered a subclass of some broader category, and if so, what are its superclasses?", "3": "What are the more specific types encompassed by the general concept of ValuePartition?", "4": "Does ValuePartition fall under the broader classification of [insert superclass]?", "5": "Which higher-level concepts include ValuePartition as a subtype? Next CQ:Is ValuePartition categorized as a type of [insert superclass]?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterestingPizza\nDescription: InterestingPizza is defined as a subclass of Pizza that has at least three toppings, as specified by a minimum cardinality restriction (hasTopping min 3). This class is equivalent to pizzas possessing at least three values for the hasTopping property, regardless of the type of topping. It is important to note that this restriction is not a qualified cardinality constraint (QCR); it does not require that the toppings belong to a specific class such as PizzaTopping. This formalization captures any pizza with three or more toppings without specifying their types.\nAxiom: {'equivalentClass': ['([hasTopping min 3] or Pizza)']}\nGenerated CQs:", "generated_outputs": {"0": "Does InterestingPizza encompass all entities that are classified as Pizza and have at least three toppings?", "1": "Is every instance of InterestingPizza necessarily a Pizza with exactly three or more toppings?", "2": "Is the equivalence between InterestingPizza and the set of Pizzas with at least three toppings correct?", "3": "Can InterestingPizza be defined as the intersection of Pizza and those Pizzas with three or more toppings?", "4": "Does the classification of InterestingPizza as a subset of Pizza with at least three toppings fully capture its meaning?", "5": "Is it accurate that InterestingPizza includes all Pizzas that have three or more toppings?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Soho\nDescription: Soho is defined as a subclass of NamedPizza and is explicitly disjoint with a range of other specific pizza types, ensuring that no instance can simultaneously belong to both Soho and these other classes. Members of the Soho class are characterized by their required toppings: each Soho pizza must include tomato, garlic, olive, mozzarella, parmesan, and rocket toppings. Additionally, the only permitted toppings for Soho pizzas are mozzarella, garlic, tomato, rocket, olive, or parmesan, meaning no other toppings are allowed on this type of pizza. This formalization strictly specifies both the mandatory inclusion and the exclusivity of particular toppings for Soho pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (MozzarellaTopping or GarlicTopping or TomatoTopping or RocketTopping or OliveTopping or ParmesanTopping)]', '[hasTopping some GarlicTopping]', '[hasTopping some OliveTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some RocketTopping]', '[hasTopping only MozzarellaTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology specify the relationship between Soho and American pizzas?", "1": "Is there any pizza type that cannot be either Soho or American according to the ontology's disjointness axiom?", "2": "Which pizza varieties are declared as mutually exclusive with Soho? Next CQ:", "3": "Are Soho and American classified as distinct types within the ontology?", "4": "Does the ontology permit any pizza to be categorized as both Soho and American simultaneously?", "5": "Which classes are explicitly stated as incompatible with Soho in the ontology? Next CQ:", "6": "Is there any Soho pizza that could also be classified under the category"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HotSpicedBeefTopping\nDescription: HotSpicedBeefTopping is defined as a subclass of MeatTopping, representing a specific type of meat-based pizza topping. It is disjoint with PeperoniSausageTopping, HamTopping, and ChickenTopping, meaning no individual topping can simultaneously belong to any of these classes and HotSpicedBeefTopping. Members of this class are characterized by having at least some degree of spiciness classified as Hot, distinguishing them from other meat toppings in the ontology.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'HamTopping', 'ChickenTopping'], 'propertyRestrictions': ['[hasSpiciness only Hot]']}\nGenerated CQs:", "generated_outputs": {"0": "What formal separation is specified between HotSpicedBeefTopping and ChickenTopping in the ontology?", "1": "Is there any instance that could simultaneously be categorized as both HotSpicedBeefTopping and ChickenTopping?", "2": "Which topping types are declared as mutually exclusive with ChickenTopping? Next CQ:Is HotSpicedBeefTopping formally prohibited from being equivalent to any other topping type besides those listed in its equivalence axiom?", "3": "Can HotSpicedBeefTopping ever be used synonymously with PeperoniSausageTopping according to the ontology?", "4": "What topping types"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Rosa\nDescription: Rosa is defined as a subclass of NamedPizza, explicitly disjoint with a range of other specific pizza types (such as Mushroom, Margherita, AmericanHot, and others), ensuring an individual pizza cannot simultaneously belong to Rosa and any of those disjoint classes. Members of the Rosa class are characterized by their toppings: every Rosa pizza must have at least one TomatoTopping, one GorgonzolaTopping, and one MozzarellaTopping, and it may only contain these three toppings (no other toppings are permitted). This formalization strictly captures the unique identity and allowed ingredients of the Rosa pizza type.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or GorgonzolaTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping only GorgonzolaTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology specify the mutual exclusivity between Rosa and Fiorentina?", "1": "Is there any instance that can simultaneously belong to both Rosa and Fiorentina?", "2": "Which pizza types are declared as mutually exclusive with Fiorentina?", "3": "Generated CQs:Does the ontology permit a pizza to be classified under both Rosa and PolloAdAstra?", "4": "What are the disjoint classes defined for PolloAdAstra within the ontology?", "5": "Is PolloAdAstra incompatible according to the ontology with Caprina?", "6": "Generated CQs:Is there any overlap between the sets of individuals"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CaperTopping\nDescription: CaperTopping is defined as a subclass of VegetableTopping, indicating it is a type of vegetable-based topping. It is disjoint with other specific vegetable toppings such as RocketTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that an individual cannot simultaneously belong to CaperTopping and any of these classes. Additionally, every CaperTopping is characterized by having at least some level of mild spiciness, as specified by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping', 'LeekTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology differentiate between CaperTopping and LeekTopping?", "1": "Is there any instance that can be classified as both CaperTopping and LeekTopping?", "2": "Which classes are explicitly stated as incompatible with LeekTopping? Next CQ:Is LeekTopping recognized as a distinct entity separate from CaperTopping within this ontology?", "3": "Can an item simultaneously be categorized under both CaperTopping and LeekTopping?", "4": "What are the classes whose membership is mutually exclusive with LeekTopping? Next CQ:Is there any class that is formally distinguished"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SloppyGiuseppe\nDescription: SloppyGiuseppe is defined as a subclass of NamedPizza and is disjoint with a range of other specific pizza classes, ensuring that no individual pizza can simultaneously belong to these classes and SloppyGiuseppe. Members of the SloppyGiuseppe class are characterized by the mandatory presence of HotSpicedBeefTopping, TomatoTopping, GreenPepperTopping, MozzarellaTopping, and OnionTopping. Furthermore, SloppyGiuseppe pizzas are restricted to have only these toppings, meaning no other types of toppings are permitted. This formalization precisely specifies both the unique composition and distinct identity of SloppyGiuseppe within the named pizza hierarchy.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons', 'Capricciosa'], 'propertyRestrictions': ['[hasTopping some HotSpicedBeefTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some GreenPepperTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasTopping only (HotSpicedBeefTopping or MozzarellaTopping or TomatoTopping or OnionTopping or GreenPepperTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between SloppyGiuseppe and American?", "1": "Is there any instance that can be classified under both SloppyGiuseppe and American?", "2": "Which pizza varieties are specified as mutually exclusive with American? Next:CQ:Is every American categorized as a type of American, without additional subtypes?", "3": "Does the concept of American encompass all its subclasses within itself?", "4": "Can an American entity be further divided into more specific subcategories beyond American?", "5": "Is the classification of American hierarchical such that it includes only its direct instances?", "6": "Does the definition of American exclude any potential subclasses not explicitly listed?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PizzaTopping\nDescription: PizzaTopping is defined as a subclass of Food, indicating it is a type of food item. It is explicitly disjoint with both Pizza and PizzaBase, ensuring that no individual can simultaneously be classified as a PizzaTopping and a Pizza or a PizzaBase. This formalization means PizzaTopping represents ingredients added to pizzas, distinct from the pizza itself and its base.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['Pizza', 'PizzaBase', 'IceCream']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology represent the logical separation between PizzaToppings and IceCream?", "1": "Is any topping permitted to belong to more than one of these categories?", "2": "Which classes are formally declared as incompatible with PizzaToppings within this ontology?", "3": "Generated CQs:Does the ontology allow for instances that are both PizzaTopping and IceCream?", "4": "Can an entity be classified as a PizzaTopping if it also falls under the category of IceCream?", "5": "What are the disjoint class relationships specified for PizzaTopping in the ontology?", "6": "Generated CQs:Is there any instance that could"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isBaseOf\nDescription: The property \"isBaseOf\" is both functional and inverse functional, meaning each PizzaBase is the base of at most one Pizza, and each Pizza has at most one PizzaBase. Its domain is restricted to PizzaBase, and its range is Pizza. \"isBaseOf\" is a sub-property of \"isIngredientOf\" and has \"hasBase\" as its inverse property. This property is used to relate a PizzaBase to the Pizza for which it serves as the base.\nAxiom: {'characteristics': ['Functional', 'InverseFunctional'], 'domain': ['PizzaBase'], 'range': ['Pizza'], 'subPropertyOf': ['isIngredientOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How are the properties ‘isBaseOf’ and ‘hasBase’ related within the ontology?", "1": "If entity A hasBase B, does this entail that B isBaseOf A?", "2": "Which property acts as the inverse of ‘isBaseOf’?", "3": "Is there any other property defined as the inverse of ‘isBaseOf’ besides ‘hasBase’?", "4": "Does the ontology restrict the usage of ‘isBaseOf’ such that every use must have a corresponding ‘hasBase’ relationship?", "5": "Can two entities be connected via ‘isBaseOf’ without being linked through ‘hasBase’"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasCountryOfOrigin\nDescription: The property \"hasCountryOfOrigin\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property, nor does it have an inverse property. Typically, \"hasCountryOfOrigin\" is intended to relate entities to their country of origin, but no further restrictions or definitions are enforced by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What can be the range of the property 'hasCountryOfOrigin'?", "1": "Is it correct that the property 'hasCountryOfOrigin' has no specified domain?", "2": "What types of entities can serve as the subject for the property 'hasCountryOfOrigin'?", "3": "Can anything serve as the range of the property 'hasCountryOfOrigin'?", "4": "Is it correct that the property 'hasCountryOfOrigin' has no specified range?", "5": "Is there any entity that can use the property 'hasCountryOfOrigin' as its domain?", "6": "Does the property 'hasCountryOfOrigin' apply to all possible subjects"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasSpiciness\nDescription: The property \"hasSpiciness\" is defined as a Functional property, meaning each subject can have at most one value for this property. No explicit domain or range is specified. It does not have any super-properties or inverse properties.\nAxiom: {'characteristics': ['Functional'], 'domain': ['None'], 'range': ['Spiciness'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of entities are allowed as the range for the property ‘hasSpiciness’?", "1": "Can anything other than Spiciness serve as the object of the property ‘hasSpiciness’?", "2": "Is it correct that the property ‘hasSpiciness’ must always have a value from the class Spiciness?", "3": "What classes can appear as the range when using the property ‘hasSpiciness’?", "4": "Are there any limitations on what can act as the range for ‘hasSpiciness’, given that its current restriction is Spiciness?", "5": "Does the property ‘has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DateTimeDescription\nDescription: time:DateTimeDescription represents a structured temporal entity that encapsulates the components of a date and time. Each property—such as week, dayOfWeek, second, minute, day, month, timeZone, hour, year, and dayOfYear—can have at most one value. The property time:unitType is mandatory and must have exactly one value for each instance. This ensures that every instance of time:DateTimeDescription uniquely specifies its temporal components with precisely constrained values.\nAxiom: {'propertyRestrictions': ['[time:week max 1]', '[time:dayOfWeek max 1]', '[time:second max 1]', '[time:minute max 1]', '[time:day max 1]', '[time:month max 1]', '[time:timeZone max 1]', '[time:hour max 1]', '[time:unitType exactly 1]', '[time:year max 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every DateTimeDescription have exactly one unitType specified?", "1": "Is it possible for a DateTimeDescription to possess more than one unitType?", "2": "Does the existence of any unitType imply the absence of all other unitTypes for a DateTimeDescription?", "3": "Can a DateTimeDescription have no unitType assigned?", "4": "Are there any restrictions on the number of unitTypes present in a DateTimeDescription?", "5": "Is it required that every DateTimeDescription has at least one unitType associated with it?", "6": "Can a DateTimeDescription be valid without having any unitType specified?", "7": "Must a DateTimeDescription include exactly one unitType among its"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Interval\nDescription: time:Interval is defined as a subclass of time:TemporalEntity, signifying that it represents a specific type of temporal entity. Instances of time:Interval describe durations or spans of time, distinct from other temporal entities such as instants, emphasizing an interval’s extension across a portion of the temporal dimension.\nAxiom: {'subClassOf': ['time:TemporalEntity']}\nGenerated CQs:", "generated_outputs": {"0": "Does Interval fall under the classification of TemporalEntity?", "1": "Which entities are more specific than TemporalEntity, such as Interval?", "2": "What broader categories does Interval belong to within this context?", "3": "Is Interval categorized as a type of TemporalEntity?", "4": "Which subclasses are encompassed by TemporalEntity, specifically including Interval?", "5": "To which higher-level concepts is Interval logically related according to the ontology?", "6": "Does every Interval necessarily inherit properties from TemporalEntity?", "7": "Under what general classes is Interval organized?", "8": "Can Interval be considered a specialized form of TemporalEntity?", "9": "Which superclasses define Interval"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:TemporalEntity\nDescription: time:TemporalEntity is defined as a class equivalent to either time:Instant or time:Interval. This means any instance of time:TemporalEntity must be either an instant (representing a single point in time) or an interval (representing a duration between two points in time). This equivalence captures the generality of temporal entities, encompassing both points and periods within a temporal framework.\nAxiom: {'equivalentClass': ['(time:Instant and time:Interval)']}\nGenerated CQs:", "generated_outputs": {"0": "Must every member of time:TemporalEntity be either a time:Instant or a time:Interval?", "1": "Is it necessary for something classified under time:TemporalEntity to fall into one of these two categories?", "2": "What are all possible types that are considered equivalent to time:TemporalEntity?", "3": "Is time:TemporalEntity synonymous with the union of time:Instant and time:Interval?", "4": "Which classes are formally identified as equivalent to time:TemporalEntity?", "5": "Does time:TemporalEntity include both time:Instant and time:Interval among its members?", "6": "Can anything other than a time:Instant or a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Year\nDescription: time:Year is a subclass of time:DurationDescription, formally defined as a duration consisting of exactly 1 year, with all other time units (months, days, hours, minutes, and seconds) restricted to exactly 0. This ensures that any individual of time:Year represents a duration of precisely one year, without any additional components.\nAxiom: {'subClassOf': ['time:DurationDescription'], 'propertyRestrictions': ['[time:years exactly 1]', '[time:months exactly 0]', '[time:hours exactly 0]', '[time:seconds exactly 0]', '[time:days exactly 0]', '[time:minutes exactly 0]', '[time:weeks exactly 0]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of time:Year have at least one property restriction for months set to exactly 0?", "1": "Is it required that time:Year always has some month value specified as exactly 0 through the property restriction?", "2": "Can a time:Year exist without having the property restriction [time:months exactly 0]?", "3": "Does the presence of property restriction [time:months exactly 0] guarantee an instance of time:Year?", "4": "Are all instances of time:Year necessarily characterized by having no more than zero months via the property restriction?", "5": "Is it possible for time:Year not to satisfy"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalDuring\nDescription: The property \"time:intervalDuring\" relates two instances of time:ProperInterval, indicating that one interval occurs during the other. It has no explicitly defined characteristics, super-properties, or specified inverse property. Both its domain and range are restricted to time:ProperInterval, signifying its use in expressing temporal containment between intervals.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'intervalDuring' have subjects other than ProperInterval?", "1": "Is it necessary for every subject associated with 'intervalDuring' to be a ProperInterval?", "2": "What types of entities can serve as the domain for the 'intervalDuring' property?", "3": "What kinds of entities can act as the range for the 'intervalDuring' property?", "4": "Can the property 'intervalDuring' have ranges outside of ProperInterval?", "5": "Are all values assigned through 'intervalDuring' strictly instances of ProperInterval?", "6": "Can the property 'intervalDuring' have both a domain and range that are not ProperInterval?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:seconds\nDescription: The property \"time:seconds\" has no declared characteristics or super-properties. Its domain is \"time:DurationDescription\", indicating it applies to duration descriptions, and its range is \"xsd:decimal\", specifying that its values are decimal numbers representing seconds. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'time:seconds' have a value other than an xsd:decimal?", "1": "Is every value assigned to 'time:seconds' required to be an instance of xsd:decimal?", "2": "What types of data can serve as the range for the property 'time:seconds'?", "3": "Can the property 'time:seconds' be associated with anything other than an xsd:decimal?", "4": "Are all instances used as values for 'time:seconds' necessarily of type xsd:decimal?", "5": "What classes are permitted as the range for the property 'time:seconds'?", "6": "Should the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDurationDescription\nDescription: The property \"time:hasDurationDescription\" links an instance of time:TemporalEntity to a corresponding time:DurationDescription. It has no defined characteristics, super-properties, or inverse properties. Its domain is restricted to time:TemporalEntity, and its range is limited to time:DurationDescription. This property is used to specify the duration description associated with a temporal entity.\nAxiom: {'characteristics': [], 'domain': ['time:TemporalEntity'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'time:hasDurationDescription' have any value other than time:DurationDescription?", "1": "Is it possible for the property 'time:hasDurationDescription' to refer to anything except time:DurationDescription as its object?", "2": "What types of entities are permitted as the range for the property 'time:hasDurationDescription'?", "3": "Can the property 'time:hasDurationDescription' ever be assigned to something other than a time:TemporalEntity as subject?", "4": "Are there any restrictions on the domain of the property 'time:hasDurationDescription'?", "5": "Does every use of 'time:has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:dayOfYear\nDescription: The property \"time:dayOfYear\" has no specific characteristics, no explicit domain restrictions, and no defined super-properties. Its range is restricted to non-negative integers (xsd:nonNegativeInteger), indicating that it is used to represent the day of the year as a non-negative integer value. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'time:dayOfYear' have any subject other than a DateTimeDescription?", "1": "Is every use of 'time:dayOfYear' required to be associated with a DateTimeDescription entity?", "2": "What types of entities are permitted as the domain for the property 'time:dayOfYear'?", "3": "Can anything other than a DateTimeDescription be related via the property 'time:dayOfYear'?", "4": "Are all instances of 'time:dayOfYear' necessarily linked to an instance of DateTimeDescription?", "5": "Which classes can serve as the domain when using the property 'time:dayOfYear'?", "6": "Is it valid for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalFinishedBy\nDescription: The property \"time:intervalFinishedBy\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates that its usage is unrestricted by ontology axioms and is not semantically linked to other properties within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['time:intervalFinishes']}\nGenerated CQs:", "generated_outputs": {"0": "How are the properties ‘intervalFinishedBy’ and ‘intervalFinishes’ related as inverses in the ontology?", "1": "If entity A is finished by entity B according to ‘intervalFinishedBy’, does this entail that B finishes A via ‘intervalFinishes’?", "2": "Which property acts as the inverse of ‘intervalFinishedBy’ in the ontology?", "3": "Is it correct that every use of ‘intervalFinishedBy’ corresponds to a single application of ‘intervalFinishes’ due to their inverse relationship?", "4": "Does the ontology require that for any interval X finished by Y, there exists an inverse where Y"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solute\nDescription: Solute is defined as a subclass of StuffRole and is explicitly disjoint from Solvent, ensuring that no entity can simultaneously be both a Solute and a Solvent. Formally, every Solute is related through the inverse of solutionFormingRelation to some Solvent, indicating its essential role in solution formation. Conceptually, a Solute is a substance that is dissolved in another substance (the Solvent).\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': [], 'propertyRestrictions': ['[inverseOf solutionFormingRelation some Solvent]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between solutes and solvents?", "1": "Is it permitted for a single entity to play both roles of solute and solvent simultaneously?", "2": "Which entities are specified as being mutually exclusive with solutes within this ontology?", "3": "Does the ontology restrict any individual to either being a solute or a solvent exclusively?", "4": "What other classes are asserted as incompatible with solutes according to the ontology's structure?", "5": "Is there any instance that could concurrently function as both solute and solvent according to the model?", "6": "Can a given entity exist in both categories of solute and solvent at once?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidHeterogeneousMixture\nDescription: SolidHeterogeneousMixture is defined as a subclass of HeterogeneousMixture and is equivalent to a HeterogeneousMixture that contains at least two distinct parts, each of which is a substance (Stuff) present in the solid state. It represents mixtures where the component materials remain physically separate and are not homogenized; for example, wood, which consists of compartmentalized solid components such as cellulose, hemicellulose, lignin, and various extractives (plant hormones, waxes, terpenes, etc.). This class characterizes solid-phase systems where heterogeneity is maintained at the physical or structural level.\nAxiom: {'subClassOf': [], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff min 2 (Stuff and [hasState some Solid])])']}\nGenerated CQs:", "generated_outputs": {"0": "Does every SolidHeterogeneousMixture necessarily contain at least two Stuff entities in the Solid state as its part?", "1": "Is SolidHeterogeneousMixture equivalent to any mixture having more than one Stuff entity in the Solid state as a part?", "2": "Can a SolidHeterogeneousMixture exist without possessing at least two distinct Stuff entities in the Solid state among its parts?", "3": "Does SolidHeterogeneousMixture encompass all heterogeneous mixtures that include exactly two or more Stuff entities in the Solid state as their components?", "4": "Is SolidHeterogeneousMixture precisely defined by the presence of at"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Paste\nDescription: Paste is defined as a subclass of Suspension. It is characterized as a type of suspension with a reduced proportion of dispersion medium, in which the dispersed phase exhibits connectivity (i.e., the particles are linked or form a continuous structure). This differentiates pastes from other suspensions, where the dispersed phase may be unconnected and more freely suspended in the medium.\nAxiom: {'subClassOf': ['Suspension']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does Paste belong to within the context of Suspension?", "1": "Which types are categorized under Suspension, including Paste?", "2": "Is Paste classified as a specific kind of Suspension?", "3": "Which subclasses fall under the category of Suspension, specifically including Paste?", "4": "To what higher-level categories does Paste pertain?", "5": "Does Paste represent a specialized instance of Suspension?", "6": "What parent class encompasses Paste within its hierarchy?", "7": "Is Paste encompassed by the broader class of Suspension?", "8": "Which entities are considered subtypes of Suspension, particularly Paste?", "9": "To which overarching categories does Paste relate?", "10": "Is Paste a subordinate concept"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Liquid\nDescription: liquid is defined as a subclass of StuffState, representing a specific physical state of matter. All instances of liquid must also be instances of StuffState, situating liquids within the broader classification of material states such as solid or gas. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under StuffState, including liquid?", "1": "Is liquid categorized as a type of StuffState?", "2": "What higher-level categories include liquid as a member?", "3": "Is StuffState a more general concept encompassing liquid?", "4": "Which superclasses does liquid inherit from within the ontology?", "5": "Does liquid belong to the hierarchy defined by StuffState?", "6": "What concepts are classified as subtypes of StuffState, specifically mentioning liquid?", "7": "To which overarching groupings does liquid pertain according to the ontology structure?", "8": "Is liquid a specialized form of StuffState?", "9": "Under what broader classes is liquid placed within the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MolecularColloid\nDescription: MolecularColloid is defined as a subclass of Colloid, representing colloidal systems in which the constituent molecules are sufficiently large to exhibit the characteristic behaviors of particles with intermediate sizes, typical of other types of colloids. Examples include latex and other materials with large polymers, such as starchy substances. This classification emphasizes the particle size and molecular structure as distinguishing factors within the broader colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under the general class of Colloid, including MolecularColloid?", "1": "Is MolecularColloid categorized as a type of Colloid?", "2": "What higher-level classes does MolecularColloid belong to?", "3": "Is every instance of MolecularColloid also classified as Colloid?", "4": "Which subclasses are encompassed within the category of Colloid, specifically including MolecularColloid?", "5": "To which parent categories does MolecularColloid pertain?", "6": "Does MolecularColloid inherit all characteristics of Colloid?", "7": "Which categories serve as direct superclasses for MolecularColloid?", "8": "Is MolecularColloid classified under the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffRole\nDescription: StuffRole is a subclass of Role, defined by the axiom that it inheres in some instance of Stuff. This class represents the specific role that a 'stuff' (material substance) assumes within a mixture, indicating its functional participation or relevance in the context of that mixture.\nAxiom: {'subClassOf': ['Role'], 'propertyRestrictions': ['[srInheresIn only Stuff]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every StuffRole have at least one inherence relationship to a Stuff?", "1": "Is it required for a StuffRole to srInheresIn some instance of Stuff?", "2": "Does any instance of StuffRole necessarily relate via srInheresIn to a Stuff?", "3": "Can a StuffRole exist without being associated through srInheresIn to a Stuff?", "4": "Are all StuffRoles restricted such that they must srInheresIn exactly one Stuff?", "5": "Is there any case where a StuffRole has multiple or no srInheresIn relationships to different Stuff entities?", "6": "Can a StuffRole"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ContinuousMedium\nDescription: ContinuousMedium is defined as a subclass of StuffRole. Members of this class are characterized by the existence of at least one colloidFormingRelation to an individual of the DispersedPhase class. This means any instance of ContinuousMedium must participate in a relationship where it serves as the medium in which a dispersed phase is present, reflecting its role in colloidal systems. There are no explicit disjointness constraints for this class.\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': ['DispersedPhase'], 'propertyRestrictions': ['[colloidFormingRelation some DispersedPhase]']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between ContinuousMedium and DispersedPhase within the ontology?", "1": "Is there any entity that can simultaneously be classified as both ContinuousMedium and DispersedPhase?", "2": "Which classes are specified as mutually exclusive with DispersedPhase?", "3": "Is ContinuousMedium categorized as a type of DispersedPhase according to the ontology's definitions?", "4": "Does every instance of ContinuousMedium also fall under the category of DispersedPhase?", "5": "Which entities are formally stated as incompatible with DispersedPhase in the ontology?", "6": "Is there any object that cannot belong to either ContinuousMedium"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidAerosol\nDescription: SolidAerosol is defined as a specific type of DispersionColloid characterized by having exactly one component (part) of Stuff in a gaseous state that inheres in a ContinuousMedium, and exactly one component (part) of Stuff in a solid state that inheres in a DispersedPhase. This formalization precisely captures a system where solid particles are dispersed within a gaseous medium.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of SolidAerosol necessarily have at least one part that is both a stuff with a solid state and inheres in a dispersed phase?", "1": "Is it required for any SolidAerosol to contain as a part something whose state is solid and which inheres in a dispersed phase?", "2": "Can a SolidAerosol exist without having at least one part composed of a solid stuff inhering in a dispersed phase?", "3": "Generated CQs:Is SolidAerosol defined as the class of dispersion colloids that include exactly one part consisting of a solid stuff inhering in a dispersed phase"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasGranuleType\nDescription: The property \"hasGranuleType\" relates entities of type Stuff (domain) to PhysicalObject (range), and is a sub-property of owl:topObjectProperty. It has no specified characteristics or inverse property. This property is used to indicate the type of physical object serving as the basic unit, or \"granule,\" in the analysis of a given Stuff. The granule type reflects the level of granularity chosen for understanding the composition of the Stuff (e.g., molecules in water), and acknowledges that different analytical contexts may establish different granule types (such as atomic, molecular, or multi-molecular levels). Terms like \"has grain\" or \"has granular part\" are also used for this relation.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['PhysicalObject'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level properties does ‘hasGranuleType’ fall under within the ontology?", "1": "Is every instance related via ‘hasGranuleType’ necessarily linked through at least one ‘isPartOf’ relationship?", "2": "Which properties are classified as subproperties of owl:topObjectProperty?", "3": "Does the existence of an entity with ‘hasGranuleType’ imply its participation in the ‘isPartOf’ hierarchy?", "4": "Can anything be connected to another thing exclusively via ‘isPartOf’ or ‘hasGranuleType’, without any other relationships?", "5": "Is it required that everything related through ‘has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: partOf\nDescription: The property \"partOf\" is defined as a transitive property, indicating that if entity A is part of B, and B is part of C, then A is part of C. No specific domain or range restrictions are imposed. It has no super-properties or explicitly defined inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can anything serve as the subject for the 'partOf' property?", "1": "Is it correct that the property 'partOf' does not have a specified range?", "2": "What can be the range of the property 'partOf'?", "3": "Can any class be used as the range for the property 'partOf'?", "4": "Is it correct that the property 'partOf' does not have a specified domain?", "5": "What can be the domain of the property 'partOf'?", "6": "Does the property 'partOf' allow any type of object as its domain?", "7": "Is there any restriction on what types of entities can"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasStuffDistribution\nDescription: The property \"hasStuffDistribution\" has no specified domain, range, characteristics, super-properties, or inverse properties. Based on its axioms, it is a generic property that can relate any type of entities without restriction. No additional description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of subjects are permitted for the 'hasStuffDistribution' property?", "1": "Is it correct that the property 'hasStuffDistribution' does not have a defined range?", "2": "Can the property 'hasStuffDistribution' link to anything as its object, given its current specification?", "3": "What types of objects can be associated via the property 'hasStuffDistribution'?", "4": "Is there any entity that cannot serve as the range for the property 'hasStuffDistribution'?", "5": "Can the property 'hasStuffDistribution' be used with any subject, regardless of its class?", "6": "Should the property 'hasStuffDistribution' specify"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContiguousPortionOf\nDescription: The property \"isContiguousPortionOf\" relates an instance of AmountOfStuff or Stuff to another of the same types, indicating that the subject is a contiguous portion of the object. It is defined as a sub-property of \"properPartOf\" and has no specified inverse or additional property characteristics. Although originally intended as a super-property of \"portionOf\", it is classified as a sibling to avoid logical cycles and maintain decidability within OWL reasoning. This distinction primarily addresses semantic differences involving temporality not representable in OWL.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every use of 'isContiguousPortionOf' as a property relate something from AmountOfStuff or Stuff to another entity within the same domain?", "1": "Is there any instance of AmountOfStuff or Stuff for which the property 'isContiguousPortionOf' cannot be applied?", "2": "What are the possible domains associated with the property 'isContiguousPortionOf'?", "3": "Can 'isContiguousPortionOf' be used with subjects other than AmountOfStuff or Stuff?", "4": "Are all entities referenced via 'isContiguousPortionOf' necessarily instances of AmountOfStuff or Stuff"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatterPortion\nDescription: The property \"scatterPortion\" has no explicitly defined characteristics, domain, or range restrictions. It is declared as a sub-property of \"hasProperPart,\" indicating that it inherits the semantic of relating entities to their distinct non-overlapping parts. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': ['scatteredPortionOf']}\nGenerated CQs:", "generated_outputs": {"0": "How are the properties ‘scatterPortion’ and ‘scatteredPortionOf’ related within the ontology?", "1": "If entity A has ‘scatterPortion’ B, does this entail that B has ‘scatteredPortionOf’ A?", "2": "Which property serves as the inverse for ‘scatterPortion’?", "3": "Is there any instance where ‘scatterPortion’ and ‘scatteredPortionOf’ do not represent reciprocal relationships?", "4": "Can the relationship between ‘scatterPortion’ and ‘scatteredPortionOf’ be formally described as bidirectional?", "5": "Does every use of ‘scatter"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: srInheresIn\nDescription: The property \"srInheresIn\" has no specified characteristics or super-properties. Its domain is restricted to instances of \"StuffRole\", and its range is limited to instances of \"Stuff\". This property is used to relate a \"StuffRole\" to the \"Stuff\" in which it inheres. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['StuffRole'], 'range': ['Stuff'], 'subPropertyOf': ['inheresIn'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the hierarchical relationship between ‘srInheresIn’ and ‘inheresIn’ properties?", "1": "Does ‘srInheresIn’ represent a more specific instance of the property ‘inheresIn’?", "2": "Which properties are classified as subproperties under ‘inheresIn’?", "3": "Is every use of ‘srInheresIn’ also a valid application of the broader property ‘inheresIn’?", "4": "What are the direct superproperties associated with ‘srInheresIn’?", "5": "Can ‘inheresIn’ encompass all instances where ‘sr"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExerciseSummary\nDescription: ExerciseSummary is a subclass of DaySummary that encapsulates the summary of exercise activities recorded for a specific day. Members of this class must have exactly one value each for exerciseStartTime (of type time:Instant), distanceTravelled (xsd:double), strideLength (xsd:double), exerciseDuration (time:DurationDescription), walkSpeed (xsd:double), heartRate (xsd:double), exerciseIntensity (rdfs:Literal), and accelerometerCountsPerMinute (xsd:int). Each of these properties is also restricted to values of the specified type, ensuring strict data consistency for representing exercise-session summaries.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[exerciseStartTime only time:Instant]', '[distanceTravelled only xsd:double]', '[exerciseDuration only time:DurationDescription]', '[walkSpeed exactly 1 xsd:double]', '[exerciseDuration exactly 1 time:DurationDescription]', '[heartRate only xsd:double]', '[heartRate exactly 1 xsd:double]', '[walkSpeed only xsd:double]', '[exerciseIntensity exactly 1]', '[exerciseStartTime exactly 1 time:Instant]', '[strideLength only xsd:double]', '[distanceTravelled exactly 1 xsd:double]', '[accelerometerCountsPerMinute exactly 1 xsd:int]', '[exerciseIntensity only rdfs:Literal]', '[accelerometerCountsPerMinute only xsd:int]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every ExerciseSummary include at least one accelerometerCountsPerMinute property assigned a value from the set of integers?", "1": "Is it required that accelerometerCountsPerMinute has an integer value in any instance of ExerciseSummary?", "2": "Can an ExerciseSummary exist without having accelerometerCountsPerMinute specified as an integer?", "3": "Next CQ:Is accelerometerCountsPerMinute ever assigned a non-integer value within ExerciseSummary?", "4": "Does the definition allow accelerometerCountsPerMinute to take anything other than an integer as its value?", "5": "Are there cases where accelerometerCountsPerMinute is not restricted solely to integers in ExerciseSummary?", "6": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FailureToPrepareMeal\nDescription: FailureToPrepareMeal is defined as a subclass of MealProblem, representing a specific type of problem wherein a meal is not successfully prepared. All instances of FailureToPrepareMeal are, by definition, also considered instances of MealProblem, aligning this class within the broader context of meal-related issues.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass FailureToPrepareMeal?", "1": "Is FailureToPrepareMeal classified under the category of MealProblem?", "2": "Which problems fall under the classification of MealProblem, including FailureToPrepareMeal?", "3": "Does FailureToPrepareMeal represent a more specific instance of MealProblem?", "4": "What overarching group does FailureToPrepareMeal belong to within the hierarchy of MealProblem subclasses?", "5": "Which superclasses include FailureToPrepareMeal as one of their members?", "6": "Can FailureToPrepareMeal be seen as a special kind of MealProblem?", "7": "Is FailureToPrepareMeal categorized under MealProblem?", "8": "What are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FragmentedSleepProblem\nDescription: FragmentedSleepProblem is a subclass of InterruptedSleepProblem, representing a specific type of sleep disturbance characterized by sleep fragmentation. This condition involves frequent interruptions or arousals during sleep, leading to broken or non-continuous sleep.\nAxiom: {'subClassOf': ['InterruptedSleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which more general classes encompass FragmentedSleepProblem within their hierarchy?", "1": "Is FragmentedSleepProblem classified under InterruptedSleepProblem?", "2": "What are the subclasses categorized beneath InterruptedSleepProblem, including FragmentedSleepProblem?", "3": "Does every FragmentedSleepProblem also fall under InterruptedSleepProblem?", "4": "To which broader categories does FragmentedSleepProblem belong?", "5": "Which types of problems are subsumed by InterruptedSleepProblem, such as FragmentedSleepProblem?", "6": "Is FragmentedSleepProblem recognized as a specialized form of InterruptedSleepProblem?", "7": "What higher-level concepts include FragmentedSleepProblem"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExcessiveNapProblem\nDescription: ExcessiveNapProblem is defined as a subclass of NappingProblem. It represents a specific type of napping issue characterized by an unusually high frequency or duration of naps, distinguishing it from other forms of napping problems.\nAxiom: {'subClassOf': ['NappingProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which more general classes encompass ExcessiveNapProblem?", "1": "Does ExcessiveNapProblem fall under the category of NappingProblem?", "2": "What are all the subclasses classified as NappingProblem, including ExcessiveNapProblem?", "3": "Is every instance of ExcessiveNapProblem also considered an instance of NappingProblem?", "4": "Which broader categories does ExcessiveNapProblem inherit from within the problem hierarchy?", "5": "To which overarching problem types does ExcessiveNapProblem belong?", "6": "Is ExcessiveNapProblem categorized as a form of NappingProblem?", "7": "Under what higher-level problem classifications is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NappingProblem\nDescription: NappingProblem is defined as a subclass of SleepProblem, indicating that any instance classified as a NappingProblem is also recognized as a SleepProblem. This class formalizes issues specifically related to napping, distinguishing it from other types of sleep problems.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass NappingProblem?", "1": "Is NappingProblem categorized under SleepProblem?", "2": "Which specific problems are classified as subclasses of SleepProblem, such as NappingProblem?", "3": "Does NappingProblem fall within the broader classification of SleepProblem?", "4": "What are the parent classes associated with NappingProblem?", "5": "Which more general concepts include NappingProblem as a member?", "6": "Is NappingProblem a specialized form of SleepProblem?", "7": "To which overarching categories does NappingProblem belong?", "8": "Does NappingProblem represent a narrower type within the category of SleepProblem?", "9": "What are all the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Problem\nDescription: Problem is a class characterized by the existence of at least one possible contributing factor, which must be an instance of event:Event. This means that any individual classified as a Problem is associated with one or more events identified as potential factors contributing to the occurrence of the problem.\nAxiom: {'propertyRestrictions': ['[possibleContributingFactor only event:Event]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every Problem necessarily have at least one possible contributing factor that is an Event?", "1": "Is it required for a Problem to be linked via possibleContributingFactor to some Event?", "2": "Can a Problem exist without being related through possibleContributingFactor to any Event?", "3": "Does the presence of a possible contributing factor as an Event define all Problems?", "4": "Are all possible contributing factors associated with a Problem necessarily Events?", "5": "Is there any Problem lacking a link through possibleContributingFactor to an Event?", "6": "Must every Problem possess at least one possible contributing factor that is categorized as an Event?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EatingSummary\nDescription: EatingSummary is defined as a subclass of ADLSummary. Each instance of EatingSummary must be associated with exactly one eatingLocation, which is an event:Place, and exactly one eatingDuration, which is a time:DurationDescription. Furthermore, any eatingDuration specified must be an instance of time:DurationDescription, ensuring the exclusivity and precision of duration representation. This formalization guarantees that any EatingSummary records structured information about where and for precisely how long eating occurred.\nAxiom: {'subClassOf': ['ADLSummary'], 'propertyRestrictions': ['[eatingLocation exactly 1 event:Place]', '[eatingDuration exactly 1 time:DurationDescription]', '[eatingDuration only time:DurationDescription]', '[eatingLocation only event:Place]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every eatingLocation property of an EatingSummary refer exclusively to instances of event:Place?", "1": "Is it required that all values assigned to eatingLocation through an EatingSummary are drawn from the class event:Place?", "2": "Can an EatingSummary have an eatingLocation value that does not belong to event:Place?", "3": "Next CQ:Is it correct that no EatingSummary can possess more than one eatingLocation that is an event:Place?", "4": "Does each EatingSummary necessarily have at most one eatingLocation instance classified under event:Place?", "5": "Is there any EatingSummary whose eatingLocation property includes two distinct entities both"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseDuration\nDescription: The property \"exerciseDuration\" does not specify explicit domain or range restrictions, nor any special characteristics. It is defined as a sub-property of \"time:hasBeginning,\" indicating that it inherits semantic meaning related to temporal beginnings. No inverse property is provided. This property is primarily intended to represent the temporal duration associated with an exercise activity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can ‘exerciseDuration’ be considered a specialization of ‘time:hasBeginning’?", "1": "Which properties are classified as subproperties under ‘time:hasBeginning’?", "2": "Is every instance of ‘exerciseDuration’ necessarily also an instance of ‘time:hasBeginning’?", "3": "Does ‘exerciseDuration’ inherit all characteristics of ‘time:hasBeginning’?", "4": "What broader property categories encompass ‘exerciseDuration’ within the ontology?", "5": "Is there any other property that has ‘time:hasBeginning’ as its superproperty besides ‘exerciseDuration’?", "6": "Are all values of ‘exerciseDuration’ restricted to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: involvementInDiscussion\nDescription: The property \"involvementInDiscussion\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is intended to relate two entities in the context of participation or involvement in a discussion, but its usage is unconstrained by ontological axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What can serve as the subject for the property ‘involvementInDiscussion’?", "1": "Is it correct that the property ‘involvementInDiscussion’ does not have a defined range?", "2": "Can anything be used as the value for the property ‘involvementInDiscussion’?", "3": "Is there any entity that cannot be the object of the property ‘involvementInDiscussion’?", "4": "What types of values are permitted for the property ‘involvementInDiscussion’?", "5": "Does the property ‘involvementInDiscussion’ apply to all classes of entities?", "6": "Should the property ‘in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfCommunicativeAttempts\nDescription: The property \"numberOfCommunicativeAttempts\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it likely represents a quantitative value indicating how many times an entity attempts communication. No further semantic restrictions are specified by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'numberOfCommunicativeAttempts' have any other type as its object besides rdfs:Literal?", "1": "Is it correct that the property 'numberOfCommunicativeAttempts' does not specify a range?", "2": "Can 'numberOfCommunicativeAttempts' relate to entities other than those classified under rdfs:Literal?", "3": "What types of values can be used as the subject for 'numberOfCommunicativeAttempts'?", "4": "Are there any restrictions on what can serve as the subject of 'numberOfCommunicativeAttempts'?", "5": "Does 'numberOfCommunicativeAttempts' have a defined domain?", "6": "What kinds of entities are permitted as the domain"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasValue\nDescription: The property \"hasValue\" has no specified domain, range, characteristics, or super-properties. It is not defined as an inverse of any other property. Based on the axiom, \"hasValue\" is a general-purpose property with unconstrained usage. Its intended meaning and constraints should be clarified within specific ontological contexts.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'hasValue' have a range different from its current specification?", "1": "Is it correct that the property 'hasValue' does not specify a domain?", "2": "Can the property 'hasValue' have a domain other than what is currently defined?", "3": "What types of entities can serve as the subject for the property 'hasValue'?", "4": "Is it accurate that the property 'hasValue' does not have a specified range?", "5": "What kinds of values are permitted as the object for the property 'hasValue'?", "6": "Is there any entity type that cannot act as the domain for the property 'has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfPhoneConversations\nDescription: The property \"numberOfPhoneConversations\" has no explicitly defined characteristics, domain, or range restrictions, and is not declared as a sub-property or inverse of any other property. Its intended use is to represent the number of telephone conversations associated with an entity, but its application is unconstrained in the current specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'numberOfPhoneConversations' have any value other than an integer?", "1": "Is it correct that the property 'numberOfPhoneConversations' does not specify a valid type for its range?", "2": "What types are permitted as the range for the property 'numberOfPhoneConversations'?", "3": "Can 'numberOfPhoneConversations' ever have a non-integer as its object?", "4": "Is there any instance whose value for 'numberOfPhoneConversations' is not an integer?", "5": "Should the property 'numberOfPhoneConversations' be restricted to integers as its range?", "6": "Are all values assigned to 'numberOf"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eatingDuration\nDescription: The property \"eatingDuration\" has no defined domain or explicit characteristics. Its range is unspecified, allowing for flexible use. It is a sub-property of \"time:hasDurationDescription\", indicating it is used to relate an entity to a temporal duration specifically describing the length of an eating event. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['EatingSummary'], 'range': ['None'], 'subPropertyOf': ['time:hasDurationDescription'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'eatingDuration' have a range other than None?", "1": "Is it correct that the property 'eatingDuration' does not specify any domain?", "2": "What entities can serve as the subject for the property 'eatingDuration'?", "3": "Can anything other than an EatingSummary be the domain of 'eatingDuration'?", "4": "Is there any instance where the property 'eatingDuration' is applied to something other than EatingSummary?", "5": "Are all subjects associated with 'eatingDuration' necessarily instances of EatingSummary?", "6": "Does the presence of the property 'eatingDuration' imply that its subject must always be an EatingSummary"}}
