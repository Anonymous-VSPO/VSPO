{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveLoadAssessment\nDescription: CognitiveLoadAssessment is defined as a subclass of ExperimentalAssessment, representing a specific type of assessment dedicated to measuring cognitive load in experimental contexts. Members of this class are characterized by having exactly one dual task score and exactly one mono task score, with both scores required to be data literals. This formalization ensures that each instance of CognitiveLoadAssessment includes precisely one measurable outcome for both mono-task and dual-task conditions, facilitating standardized evaluation and comparison of cognitive load across assessments.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasDualTaskScore exactly 1]', '[hasMonoTaskScore only rdfs:Literal]', '[hasDualTaskScore only rdfs:Literal]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every CognitiveLoadAssessment necessarily have at least one hasDualTaskScore property value that is a Literal?", "1": "Is it required for all CognitiveLoadAssessments to possess a hasDualTaskScore relationship to some Literal entity?", "2": "Can a CognitiveLoadAssessment exist without being associated via hasDualTaskScore to any Literal?", "3": "Generated CQs:Is it necessary for a CognitiveLoadAssessment to have exactly one hasMonoTaskScore property value that is a Literal?", "4": "Does every CognitiveLoadAssessment always have only one hasMonoTaskScore property value from the set of Literals?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ActivityStatusType\nDescription: ActivityStatusType is defined as a subclass of Type and is equivalent to the set containing the statuses: omitted, completed, and incomplete. This means that any instance of ActivityStatusType must be one of these three specific statuses, providing a controlled vocabulary for representing the status of an activity.\nAxiom: {'subClassOf': [], 'equivalentClass': ['{omitted, completed, incomplete}']}\nGenerated CQs:", "generated_outputs": {"0": "Which types are classified under Type, specifically including ActivityStatusType?", "1": "Is ActivityStatusType a specialized form within the broader category of Type?", "2": "What higher-level categories encompass ActivityStatusType?", "3": "Next level up from ActivityStatusType in the type hierarchy", "4": "Does ActivityStatusType fall under the general classification of Type?", "5": "Which subclasses are included in the Type class, such as ActivityStatusType?", "6": "What are the parent classes associated with ActivityStatusType?", "7": "Is ActivityStatusType categorized under Type or not?", "8": "Which concepts are more specific than Type, like ActivityStatusType?", "9": "To which overarching"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiagnosisType\nDescription: DiagnosisType is defined as a subclass of Type, and is equivalent to the set containing exactly three classes: predementia, dementia, and healthy. This means that any individual classified as a DiagnosisType must be either predementia, dementia, or healthyâ€”no other categories are permitted. This formalization ensures a closed, mutually-exclusive categorization of diagnostic statuses within the ontology.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Are all instances of DiagnosisType necessarily one of predementia, dementia, or healthy?", "1": "Is DiagnosisType logically equivalent to the union of predementia, dementia, and healthy?", "2": "Does every member of DiagnosisType fall into at least one of the categories predementia, dementia, or healthy?", "3": "Can anything be classified as both healthy and DiagnosisType simultaneously?", "4": "Which classes are specified as exhaustive alternatives for DiagnosisType?", "5": "Does DiagnosisType include only those entities that could also be categorized under predementia, dementia, or healthy?", "6": "Is the class DiagnosisType restricted such that it cannot have members outside of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LateralityType\nDescription: LateralityType is a subclass of Type, characterized as an enumerated class consisting exclusively of the instances 'left_handed' and 'right_handed'. Any instance of LateralityType must be either 'left_handed' or 'right_handed', capturing the concept of handedness in individuals.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Does LateralityType encompass all entities classified as left_handed or right_handed?", "1": "Is there any entity assigned to LateralityType that does not fall under either left_handed or right_handed?", "2": "Which classes are equivalent to LateralityType according to their definition?", "3": "Next CQ:Is every member of LateralityType necessarily one of left_handed or right_handed?", "4": "Can LateralityType include members beyond those categorized as left_handed or right_handed?", "5": "Does LateralityType specify both left_handed and right_handed as its only permitted values?", "6": "Previous CQ"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NeuropsychiatricAndMoodAssessment\nDescription: NeuropsychiatricAndMoodAssessment is defined as a subclass of ClinicalAssessment. Members of this class are characterized by the mandatory presence of exactly one value for each of the following properties: npi (Neuropsychiatric Inventory), dsm_ivDepressionCriteria, and apathyInventory, each being of type xsd:string. Furthermore, these properties cannot have values outside the string datatype. This formalization ensures that any individual instance of NeuropsychiatricAndMoodAssessment contains exactly and only one string value for each of these assessment criteria, supporting precise and consistent neuropsychiatric and mood evaluation.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[npi only xsd:string]', '[npi exactly 1 xsd:string]', '[dsm_ivDepressionCriteria exactly 1 xsd:string]', '[dsm_ivDepressionCriteria only xsd:string]', '[apathyInventory only xsd:string]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of NeuropsychiatricAndMoodAssessment necessarily include at least one property restriction related to apathyInventory?", "1": "Is it required that all instances of NeuropsychiatricAndMoodAssessment possess some apathyInventory property value classified under xsd:string?", "2": "Can there exist a NeuropsychiatricAndMoodAssessment without any associated apathyInventory property having a value from xsd:string?", "3": "Next CQ:Is it permitted for an entity of type NeuropsychiatricAndMoodAssessment to lack any connection via the apathyInventory property to a value within xsd:string?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FunctionalAbilitiesData\nDescription: FunctionalAbilitiesData is a subclass of MeasuredData, characterized by having exactly one handTrajectory property, which must be of type HandTrajectoryType. All values for handTrajectory in instances of this class are restricted to HandTrajectoryType, ensuring that each FunctionalAbilitiesData instance is associated with a single, specific hand trajectory measurement.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[handTrajectory only HandTrajectoryType]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of FunctionalAbilitiesData have at least one value for the handTrajectory property?", "1": "Is it required for any data classified as FunctionalAbilitiesData to possess a handTrajectory attribute?", "2": "Can FunctionalAbilitiesData exist without being linked through handTrajectory to some HandTrajectoryType?", "3": "Does the definition of FunctionalAbilitiesData entail that all members are related via handTrajectory to HandTrajectoryType?", "4": "Is it permitted for FunctionalAbilitiesData to lack a handTrajectory link to HandTrajectoryType?", "5": "Can FunctionalAbilitiesData have multiple different values for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OrganisationEfficiencyData\nDescription: OrganisationEfficiencyData is a subclass of MeasuredData representing measured values related to organizational efficiency. Every instance of this class must have exactly one value each for distanceWalked, areasOfInterestExplored, and areasOfNoInterestExplored, and all of these values must be literals. This class structurally enforces that the data captured is precisely quantified for these three efficiency-related attributes.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[areasOfInterestExplored only rdfs:Literal]', '[areasOfNoInterestExplored only rdfs:Literal]', '[areasOfNoInterestExplored exactly 1]', '[areasOfInterestExplored exactly 1]', '[distanceWalked exactly 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every OrganisationEfficiencyData possess at least one areaOfInterestExplored with a literal value?", "1": "Is it required that OrganisationEfficiencyData includes some areaOfInterestExplored with a literal as its value?", "2": "Can OrganisationEfficiencyData exist without having any areaOfInterestExplored with a literal value assigned?", "3": "Related CQ:Is OrganisationEfficiencyData allowed if it has no areasOfInterestExplored with a literal value specified?", "4": "Does the existence of OrganisationEfficiencyData necessitate the presence of an areaOfInterestExplored with a literal value?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SemiDirectedTask\nDescription: SemiDirectedTask is a subclass of Task characterized by the measurement of at least some FunctionalAbilitiesData and some CognitiveAbilitiesData. Additionally, any measuredData associated with a SemiDirectedTask must be exclusively of types CognitiveAbilitiesData, FunctionalAbilitiesData, or StressDataâ€”no other data types are permitted. This formalization ensures that tasks within this class are specifically designed to evaluate both cognitive and functional abilities, potentially including stress indicators, thereby aligning with their defined assessment scope.\nAxiom: {'subClassOf': ['Task'], 'propertyRestrictions': ['[measuredData some CognitiveAbilitiesData]', '[measuredData only (CognitiveAbilitiesData or FunctionalAbilitiesData or StressData)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every SemiDirectedTask necessarily involve at least one measuredData item classified as CognitiveAbilitiesData?", "1": "Is it required for a SemiDirectedTask to have a measuredData entry of type CognitiveAbilitiesData?", "2": "Can a SemiDirectedTask exist without having any measuredData item categorized under CognitiveAbilitiesData?", "3": "Next CQ:Is it allowed for a SemiDirectedTask to possess measuredData entries that include only CognitiveAbilitiesData or FunctionalAbilitiesData but not StressData?", "4": "Does the presence of measuredData containing StressData disqualify a SemiDirectedTask from being classified as such?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PersonWithPredementia\nDescription: PersonWithPredementia is defined as a subclass of Person and is equivalent to those individuals who have at least one clinical record containing an assessment that diagnoses predementia. This formalization ensures that any member of the PersonWithPredementia class must be associated with a clinical record documenting a diagnosis assessment explicitly identifying predementia, thus providing a clear ontological basis for representing individuals in early stages of cognitive decline.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every individual classified as PersonWithPredementia necessarily have at least one clinical record that includes a predementia diagnosis?", "1": "Is it required for all PersonWithPredementia instances to possess some clinical record with a predementia diagnosis documented?", "2": "Are PersonWithPredementia and â€˜person with at least one clinical record containing a predementia diagnosisâ€™ logically equivalent classes?", "3": "Does the classification as PersonWithPredementia imply the existence of a relevant clinical record diagnosing predementia?", "4": "Can a PersonWithPredementia exist without having any clinical records documenting predementia?", "5": "Is PersonWithPredementia a subset of persons"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S2_SemiDirectedActivitiesStep\nDescription: S2_SemiDirectedActivitiesStep is defined as a subclass of ProtocolStep. Any instance of this class must involve exactly one of each of the following tasks: TurnOnTVTask, WaterPlantTask, PrepareHotTeaTask, CallPsychologistTask, AnswerPhoneTask, FindBusLineOnMapTask, PayBillTask, EstablishAccountBalanceTask, LeaveRoomTask, and PrepareDrugBoxTask. Furthermore, the tasks involved are restricted to the following types: AnswerPhoneTask, CallPsychologistTask, EstablishAccountBalanceTask, FindBusLineOnMapTask, LeaveRoomTask, PayBillTask, PrepareDrugBoxTask, PrepareHotTeaTask, Task, TurnOnTVTask, or WaterPlantTask. This formalization ensures that any S2_SemiDirectedActivitiesStep is a uniquely structured protocol step composed of this specific set of semi-directed activities.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask exactly 1 TurnOnTVTask]', '[involvesTask exactly 1 PrepareHotTeaTask]', '[involvesTask exactly 1 CallPsychologistTask]', '[involvesTask exactly 1 AnswerPhoneTask]', '[involvesTask exactly 1 FindBusLineOnMapTask]', '[involvesTask only (AnswerPhoneTask or CallPsychologistTask or EstablishAccountBalanceTask or FindBusLineOnMapTask or LeaveRoomTask or PayBillTask or PrepareDrugBoxTask or PrepareHotTeaTask or Task or TurnOnTVTask or WaterPlantTask)]', '[involvesTask exactly 1 PayBillTask]', '[involvesTask exactly 1 EstablishAccountBalanceTask]', '[involvesTask exactly 1 LeaveRoomTask]', '[involvesTask exactly 1 PrepareDrugBoxTask]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every S2_SemiDirectedActivitiesStep necessarily include at least one PayBillTask?", "1": "Is it required for all instances of S2_SemiDirectedActivitiesStep to have a PayBillTask as part of their involvesTask property?", "2": "Can an S2_SemiDirectedActivitiesStep exist without being associated with a PayBillTask through involvesTask?", "3": "[]", "4": "[]", "5": "[]", "6": "[]", "7": "[]", "8": "[]", "9": "[]", "10": "[]", "11": "[]", "12": "[]", "13": "[]", "14": "[]", "15": "[]", "16": "[]", "17": "[]", "18": "[]", "19": "[]", "20": "[]", "21": "[]", "22": "[]", "23": "[]", "24": "[]", "25": "[]", "26": "[]", "27": "[]"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P12_CountingBackwardsTask\nDescription: S1_P12_CountingBackwardsTask is a subclass of DirectedTask characterized by specific measurement and property constraints. Every instance of this class must have measured data that includes some LatencyData and some MoodVoiceData. Additionally, measured data associated with this task may only be of the types LatencyData, MoodVoiceData, or StressData. The countingType property for individuals in this class is restricted to either _20_0 or _305_285. These axioms ensure that S1_P12_CountingBackwardsTask is a directed task that involves recording response latency, mood/voice indicators, and potentially stress, with a clearly defined range of permissible counting types.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (LatencyData or MoodVoiceData or StressData)]', '[countingType only {_20_0, _305_285}]', '[measuredData some MoodVoiceData]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of S1_P12_CountingBackwardsTask necessarily have at least one measuring activity related to MoodVoiceData?", "1": "Is it required that any S1_P12_CountingBackwardsTask possesses measured Data classified as MoodVoiceData?", "2": "Can an S1_P12_CountingBackwardsTask exist without having any measured data linked to MoodVoiceData?", "3": "Next CQ:Is it correct that all S1_P12_CountingBackwardsTasks are characterized by possessing at least one measured Data item identified as MoodVoiceData?", "4": "Does the definition of S1_P12_CountingBack"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P22_ArticulationControlTask\nDescription: S1_P22_ArticulationControlTask is defined as a subclass of DirectedTask. Members of this class are required to have at least one measuredData property linked to LatencyData, and all measuredData properties must be restricted to either LatencyData or StressData. This ensures that any instance of S1_P22_ArticulationControlTask is characterized by the measurement of latency and/or stress data, with no other data types permitted for the measuredData property.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (LatencyData or StressData)]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every S1_P22_ArticulationControlTask possess at least one measuredData value that is either LatencyData or StressData?", "1": "Is it necessary for an S1_P22_ArticulationControlTask to have some measuredData related to either LatencyData or StressData?", "2": "Can an S1_P22_ArticulationControlTask exist without having any measuredData associated with LatencyData or StressData?", "3": "Does the presence of a measuredData value restricted to LatencyData or StressData distinguish S1_P22_ArticulationControlTask from other classes?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DemographicCharacteristicsRecord\nDescription: DemographicCharacteristicsRecord is a class characterized by strict property constraints to ensure comprehensive demographic data representation. Each instance must have exactly one dateOfBirth value of type xsd:dateTime, exactly one gender value of type GenderType, and exactly one educationLevel value of type rdfs:Literal. Additionally, each record must specify exactly one size (as a rdfs:Literal), and may optionally include laterality, restricted to values defined by LateralityType. These axioms ensure that every record is complete with respect to core demographic attributes while maintaining precise data types and cardinality for each property.\nAxiom: {'propertyRestrictions': ['[dateOfBirth only xsd:dateTime]', '[gender only GenderType]', '[laterality only LateralityType]', '[size exactly 1]', '[educationLevel only rdfs:Literal]', '[educationLevel exactly 1]', '[gender exactly 1 GenderType]', '[dateOfBirth exactly 1 xsd:dateTime]']}\nGenerated CQs:", "generated_outputs": {"0": "Does DemographicCharacteristicsRecord require at least one size specified?", "1": "Is it necessary for every DemographicCharacteristicsRecord to have exactly one associated size?", "2": "Can a DemographicCharacteristicsRecord exist without any specified size?", "3": "Next CQ:Is DemographicCharacteristicsRecord permitted to possess more than one size?", "4": "Does having multiple sizes disqualify a DemographicCharacteristicsRecord from being valid?", "5": "Last CQ:Are all instances of DemographicCharacteristicsRecord limited to possessing no more than one size?", "6": "Previous CQ:Can a DemographicCharacteristicsRecord contain multiple different sizes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Protocol\nDescription: Protocol is a class that represents a structured set of actions or procedures, characterized by a well-defined workflow. Each instance of Protocol must have at least one protocol step and all protocol steps associated with a protocol must be instances of ProtocolStep. Additionally, every protocol is required to specify exactly one date, which must be an instance of xsd:dateTime, and exactly one participant, who must be an instance of Person. The axioms ensure strict adherence to these requirements, supporting precise modeling of procedural activities involving a single documented participant, a single date, and one or more procedural steps.\nAxiom: {'propertyRestrictions': ['[protocolStep some ProtocolStep]', '[protocolStep only ProtocolStep]', '[date exactly 1 xsd:dateTime]', '[hasParticipant exactly 1 Person]', '[hasParticipant only Person]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every Protocol necessarily have at least one hasParticipant relationship with a Person?", "1": "Is it required for any Protocol to participate in association with at least one Person through hasParticipant?", "2": "Can there exist a Protocol without being linked via hasParticipant to any Person?", "3": "Next CQ:Is it necessary for a Protocol to be related via hasParticipant to exactly one Person?", "4": "Does the definition of Protocol imply that each Protocol can only be associated with one Person through hasParticipant?", "5": "Can multiple Persons be connected to the same Protocol via hasParticipant?", "6": "Previous CQ:Is it permissible for a Protocol to be associated"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AbilityToOrganiseAssessment\nDescription: AbilityToOrganiseAssessment is defined as a subclass of ExperimentalAssessment. This means that every AbilityToOrganiseAssessment is an instance of ExperimentalAssessment, inheriting all its general characteristics. This class specifically represents assessments focusing on the capacity to organise or structure experimental tasks or processes. No further property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "generated_outputs": {"0": "Which assessment types encompass AbilityToOrganiseAssessment?", "1": "Is AbilityToOrganiseAssessment categorized under ExperimentalAssessment?", "2": "What broader categories does AbilityToOrganiseAssessment fall within?", "3": "Next higher-level category for AbilityToOrganiseAssessment is which?", "4": "Does AbilityToOrganiseAssessment belong to the group of ExperimentalAssessments?", "5": "Which assessment subclasses exist beneath ExperimentalAssessment, such as AbilityToOrganiseAssessment?", "6": "What are the parent classes associated with AbilityToOrganiseAssessment?", "7": "Can AbilityToOrganiseAssessment be classified as a type of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ApathyAssessment\nDescription: ApathyAssessment is defined as a subclass of ExperimentalAssessment. This means that every ApathyAssessment is a specific type of ExperimentalAssessment, inheriting all characteristics of the latter. It is used to systematically evaluate or measure apathy within an experimental or research context.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "generated_outputs": {"0": "Which assessments are subclasses of ExperimentalAssessment, such as ApathyAssessment?", "1": "What broader assessment categories does ApathyAssessment fall under?", "2": "Is ApathyAssessment classified as a kind of ExperimentalAssessment?", "3": "Next level up from ApathyAssessment in the hierarchy is which assessment category?", "4": "Which assessments have ExperimentalAssessment as their superclass and include ApathyAssessment as a more specific type?", "5": "Does ApathyAssessment encompass any broader assessment types beyond itself?", "6": "What specific assessments fall under the category of ExperimentalAssessment, including Apathy"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FunctionalAbilityAssessment\nDescription: FunctionalAbilityAssessment is defined as a subclass of ExperimentalAssessment. This means every FunctionalAbilityAssessment is also an ExperimentalAssessment, inheriting its characteristics. No further restrictions or disjointness axioms are specified, so FunctionalAbilityAssessment can be understood as a specialized form of ExperimentalAssessment focused on evaluating functional abilities.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories does FunctionalAbilityAssessment fall under within experimental assessments?", "1": "Which types of ExperimentalAssessment encompass FunctionalAbilityAssessment as a more specific subtype?", "2": "Is FunctionalAbilityAssessment classified as a kind of ExperimentalAssessment?", "3": "Next-level parent class for FunctionalAbilityAssessment in the hierarchy is what?", "4": "Does FunctionalAbilityAssessment represent a subset within the category of ExperimentalAssessment?", "5": "What are the more general assessment types into which FunctionalAbilityAssessment is organized?", "6": "Is every instance of FunctionalAbilityAssessment also considered an ExperimentalAssessment?", "7": "Which assessment types are categorized directly"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MemorySelfAppraisalAssessment\nDescription: MemorySelfAppraisalAssessment is defined as a subclass of ExperimentalAssessment. This means it represents a specific type of assessment conducted in an experimental context, which focuses on evaluating an individual's own appraisal or judgement of their memory abilities. Members of this class inherit all characteristics of ExperimentalAssessment, while emphasizing the self-evaluation of memory performance.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "generated_outputs": {"0": "Does MemorySelfAppraisalAssessment fall under the category of ExperimentalAssessment?", "1": "Which assessments are classified as specialized forms of ExperimentalAssessment, such as MemorySelfAppraisalAssessment?", "2": "What broader categories encompass MemorySelfAppraisalAssessment within the ontology?", "3": "Next level up from MemorySelfAppraisalAssessment in the hierarchy is what?", "4": "Is every MemorySelfAppraisalAssessment instance also categorized as an ExperimentalAssessment?", "5": "Under which higher-level assessment types does MemorySelfAppraisalAssessment reside?", "6": "Which assessments have MemorySelfAppraisalAssessment as a more specific classification?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StressAssessment\nDescription: StressAssessment is defined as a subclass of ExperimentalAssessment, indicating it inherits all properties of ExperimentalAssessment. This class represents assessments specifically designed to evaluate stress within an experimental context. No additional property restrictions or disjointness axioms are specified, so it can encompass any form of assessment fitting this criterion.\nAxiom: {'subClassOf': ['ExperimentalAssessment']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories does StressAssessment fall under?", "1": "Is StressAssessment classified under ExperimentalAssessment?", "2": "What specific types are categorized beneath ExperimentalAssessment, such as StressAssessment?", "3": "Next level up from StressAssessment in the hierarchy is what?", "4": "Which broader classes include StressAssessment as a member?", "5": "Does StressAssessment belong to the category of ExperimentalAssessment?", "6": "Under which more general classifications is StressAssessment organized?", "7": "Is StressAssessment subsumed by ExperimentalAssessment?", "8": "To which overarching concepts does StressAssessment have direct hierarchical relationships?", "9": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HandTrajectoryType\nDescription: HandTrajectoryType is defined as a subclass of Type. This class represents a specific categorization or kind of type that pertains to hand trajectory, inheriting all characteristics of Type. No additional axioms or restrictions are specified.\nAxiom: {'subClassOf': ['Type']}\nGenerated CQs:", "generated_outputs": {"0": "Which types encompass more specific classifications such as HandTrajectoryType?", "1": "Is every instance of HandTrajectoryType also classified under Type?", "2": "What broader categories include HandTrajectoryType within their hierarchy?", "3": "Next level up from HandTrajectoryType in the classification is which category?", "4": "Does HandTrajectoryType fall under the general concept of Type?", "5": "Which subclasses are categorized under Type, including HandTrajectoryType?", "6": "To what higher-level concepts does HandTrajectoryType belong?", "7": "Are all instances of HandTrajectoryType also members of the Type class?", "8": "Which classes are considered more specialized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnswerPhoneTask\nDescription: AnswerPhoneTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks but is specialized for the context of answering phone calls. This classification asserts that every instance of AnswerPhoneTask is also an instance of SemiDirectedTask, typically involving user interaction with some degree of guidance but not complete direction. No additional property or disjointness axioms are specified.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "Which tasks are more specific than SemiDirectedTask, such as AnswerPhoneTask?", "1": "To what higher-level task categories does AnswerPhoneTask belong?", "2": "Is AnswerPhoneTask categorized under SemiDirectedTask?", "3": "Next level up from AnswerPhoneTask in the hierarchy is which task type?", "4": "Which tasks fall under the broader class of SemiDirectedTask?", "5": "Does AnswerPhoneTask have any superclasses within the domain of tasks?", "6": "What general task types encompass AnswerPhoneTask as a subtype?", "7": "Is AnswerPhoneTask classified as a kind of SemiDirectedTask?", "8": "Under which overarching task categories can AnswerPhone"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CallPsychologistTask\nDescription: CallPsychologistTask is defined as a subclass of SemiDirectedTask. This classification indicates that any instance of CallPsychologistTask inherits all properties of SemiDirectedTask, representing a specific type of task that involves some level of pre-defined guidance or structure. No additional distinguishing properties or constraints are specified beyond its membership in the SemiDirectedTask category.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "Which tasks fall under the broader class of SemiDirectedTask, including CallPsychologistTask?", "1": "Is CallPsychologistTask categorized as a specialized form of SemiDirectedTask?", "2": "What more general classes does CallPsychologistTask inherit from within the ontology?", "3": "Next higher-level categories for CallPsychologistTask include which ones?", "4": "Does CallPsychologistTask represent a specific kind of SemiDirectedTask?", "5": "Which subclasses exist under SemiDirectedTask, such as CallPsychologistTask?", "6": "To what overarching task categories does CallPsychologistTask belong?", "7": "Can CallPsychologistTask be identified as an example of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EstablishAccountBalanceTask\nDescription: EstablishAccountBalanceTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all properties and constraints of SemiDirectedTask. This class represents tasks specifically related to establishing or determining an account balance, and it is semantically positioned within the ontology as a type of semi-directed task. No further restrictions or differentiators are specified in the current axioms.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "Does EstablishAccountBalanceTask fall under the broader classification of SemiDirectedTask?", "1": "What higher-level categories encompass EstablishAccountBalanceTask within the ontology?", "2": "Which tasks are subclasses of SemiDirectedTask, such as EstablishAccountBalanceTask?", "3": "Next level up from EstablishAccountBalanceTask in the hierarchy is what kind of task?", "4": "Is every EstablishAccountBalanceTask classified under SemiDirectedTask?", "5": "Which tasks have SemiDirectedTask as their direct superclass, including EstablishAccountBalanceTask?", "6": "How does EstablishAccountBalanceTask relate structurally to SemiDirectedTask?", "7": "Does EstablishAccountBalanceTask inherit all characteristics of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FindBusLineOnMapTask\nDescription: FindBusLineOnMapTask is defined as a subclass of SemiDirectedTask. This indicates that any instance of FindBusLineOnMapTask inherits the characteristics of a semi-directed task, which typically involves guidance but allows for a degree of user autonomy. The class is intended to represent tasks in which the objective is to locate a specific bus line on a map interface.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "What are the parent classes associated with FindBusLineOnMapTask?", "1": "Is every FindBusLineOnMapTask categorized under SemiDirectedTask?", "2": "Which tasks fall within the hierarchy of SemiDirectedTask, including FindBusLineOnMapTask?", "3": "Next higher level classification for FindBusLineOnMapTask is what?", "4": "Does FindBusLineOnMapTask belong to the broader group of SemiDirectedTask?", "5": "What tasks are classified directly beneath SemiDirectedTask, such as FindBusLineOnMapTask?", "6": "Which more general categories encompass FindBusLineOnMapTask?", "7": "Is FindBusLine"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeaveRoomTask\nDescription: LeaveRoomTask is defined as a subclass of SemiDirectedTask. This means that every LeaveRoomTask must fulfill all the characteristics of a SemiDirectedTask, but it represents a more specific type of task centered on the activity of leaving a room. No additional restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "Which tasks are classified under SemiDirectedTask, such as LeaveRoomTask?", "1": "Is LeaveRoomTask categorized within the broader class of SemiDirectedTask?", "2": "What higher-level categories does LeaveRoomTask belong to according to the ontology?", "3": "Next level up from LeaveRoomTask in the hierarchy is which task category?", "4": "Does LeaveRoomTask fall under the classification of SemiDirectedTask?", "5": "Which tasks are included in the group of SemiDirectedTask subclasses?", "6": "What general task types encompass LeaveRoomTask?", "7": "Is LeaveRoomTask considered a kind of SemiDirectedTask?", "8": "Under what overarching task classes can"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PayBillTask\nDescription: PayBillTask is defined as a subclass of SemiDirectedTask, indicating it represents a specific type of task that involves partial direction or guidance in execution. No additional axioms are specified, so PayBillTask inherits all the general properties and constraints associated with SemiDirectedTask, and further characterizes tasks that involve the process of paying a bill.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "Which tasks fall under the category of SemiDirectedTask, such as PayBillTask?", "1": "What broader classes encompass PayBillTask within the hierarchy?", "2": "Is PayBillTask classified as a kind of SemiDirectedTask?", "3": "Next level up from PayBillTask in the classification is which task types?", "4": "Which tasks are categorized as more specialized forms of SemiDirectedTask?", "5": "Does PayBillTask represent a direct specialization of SemiDirectedTask?", "6": "What other subclasses exist beneath SemiDirectedTask, including PayBillTask?", "7": "Which higher-level categories include PayBillTask as a member?", "8": "Can PayBillTask"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareDrugBoxTask\nDescription: PrepareDrugBoxTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks. Individuals classified under PrepareDrugBoxTask represent tasks involving the preparation of drug boxes, and these tasks exhibit the general properties and constraints established for semi-directed tasks within the ontology. No additional restrictions or properties are specified beyond its subclass relationship.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "What broader task categories encompass PrepareDrugBoxTask?", "1": "Which tasks fall under the category of SemiDirectedTask, including PrepareDrugBoxTask?", "2": "Is PrepareDrugBoxTask classified as a type of SemiDirectedTask?", "3": "Next higher-level concept associated with PrepareDrugBoxTask", "4": "Does PrepareDrugBoxTask belong to the class of SemiDirectedTask?", "5": "What more specific task types are categorized under SemiDirectedTask such as PrepareDrugBoxTask?", "6": "Is SemiDirectedTask a supercategory for PrepareDrugBoxTask?", "7": "Which entities are subclasses of SemiDirectedTask, specifically including PrepareDrugBoxTask?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareHotTeaTask\nDescription: PrepareHotTeaTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all characteristics of semi-directed tasks. This class represents activities or processes specifically related to the preparation of hot tea, encompassing all steps that are partially guided yet allow for some flexibility in execution. There are currently no additional restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "What broader task categories include PrepareHotTeaTask?", "1": "Which tasks fall under the classification of SemiDirectedTask, such as PrepareHotTeaTask?", "2": "Is PrepareHotTeaTask categorized as a type of SemiDirectedTask?", "3": "Next level of more specific tasks within SemiDirectedTask is what?", "4": "Which general task types does PrepareHotTeaTask belong to?", "5": "Does PrepareHotTeaTask fit into the hierarchy of SemiDirectedTask?", "6": "What tasks are classified under SemiDirectedTask, including PrepareHotTeaTask?", "7": "Is PrepareHotTeaTask an instance of SemiDirected"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ReadArticleTask\nDescription: ReadArticleTask is defined as a subclass of SemiDirectedTask. This means that any instance of ReadArticleTask is also an instance of SemiDirectedTask, inheriting its characteristics and constraints. The class represents tasks that involve reading articles and fall within the category of semi-directed activities, which typically allow for some guidance or structure while retaining a degree of autonomy for the task performer.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "Which tasks are more specific than SemiDirectedTask, such as ReadArticleTask?", "1": "To what higher-level task categories does ReadArticleTask belong?", "2": "Does ReadArticleTask represent a form of SemiDirectedTask?", "3": "Next level up from ReadArticleTask within the hierarchy: SemiDirectedTask", "4": "Is every ReadArticleTask classified under SemiDirectedTask?", "5": "What broader task classes encompass ReadArticleTask?", "6": "Which tasks are considered subtypes of SemiDirectedTask, including ReadArticleTask?", "7": "How do the subclasses of SemiDirectedTask relate to the general concept of SemiDirectedTask?", "8": "Are all instances of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TurnOnTVTask\nDescription: TurnOnTVTask is defined as a subclass of SemiDirectedTask. This means that every TurnOnTVTask is a type of semi-directed task, typically characterized by having some predefined structure or guidance but allowing for some user input or variation. There are no additional property restrictions or disjointness axioms specified, so TurnOnTVTask is generally understood to represent any task that involves turning on a TV, within the broader category of semi-directed tasks.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level classes encompass TurnOnTVTask?", "1": "Which tasks fall under the classification of SemiDirectedTask, including TurnOnTVTask?", "2": "Is TurnOnTVTask categorized as a specific type of SemiDirectedTask?", "3": "Next level up from TurnOnTVTask in the hierarchy is what class?", "4": "Does TurnOnTVTask inherit all characteristics associated with SemiDirectedTask?", "5": "To which general task types does TurnOnTVTask belong according to the ontology?", "6": "What more specific instances or subtasks are classified beneath SemiDirectedTask, such as TurnOnTVTask?", "7": "Is TurnOnTVTask"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WaterPlantTask\nDescription: WaterPlantTask is defined as a subclass of SemiDirectedTask, indicating that it inherits all the characteristics of semi-directed tasks. Members of this class represent tasks specifically concerned with watering plants, and they share any constraints or properties specified for semi-directed tasks.\nAxiom: {'subClassOf': ['SemiDirectedTask']}\nGenerated CQs:", "generated_outputs": {"0": "Which tasks are categorized under SemiDirectedTask, such as WaterPlantTask?", "1": "Is WaterPlantTask classified within the broader category of SemiDirectedTask?", "2": "What more general task classes include WaterPlantTask as a member?", "3": "Next level up from WaterPlantTask in the hierarchy is what type of task?", "4": "Does WaterPlantTask fall under the category of SemiDirectedTask?", "5": "Which specific tasks are subsumed by SemiDirectedTask, including WaterPlantTask?", "6": "To which higher-level task categories does WaterPlantTask pertain?", "7": "Is WaterPlantTask considered a kind of SemiDirectedTask?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodVoiceData\nDescription: MoodVoiceData is a subclass of MeasuredData, indicating that it represents a specific type of measured information. Members of the MoodVoiceData class are characterized by being data entities whose primary function is to capture or represent aspects related to mood as conveyed through voice. This classification ensures that any instance of MoodVoiceData inherits all properties and characteristics of MeasuredData, with a particular focus on mood-related voice data.\nAxiom: {'subClassOf': ['MeasuredData']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does MoodVoiceData belong to within the context of MeasuredData?", "1": "Is MoodVoiceData categorized under the general group of MeasuredData?", "2": "Which subclasses fall under the category of MeasuredData, including MoodVoiceData?", "3": "Next level parent concept for MoodVoiceData in the hierarchy is what?", "4": "Does MoodVoiceData inherit all properties from its supercategory MeasuredData?", "5": "What types of data are classified directly under MeasuredData, such as MoodVoiceData?", "6": "Is MeasuredData the overarching category that encompasses MoodVoiceData?", "7": "Which data types are more specific"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DirectedDiscussionTask\nDescription: DirectedDiscussionTask is defined as a subclass of DiscussionTask. This means every DirectedDiscussionTask is a type of DiscussionTask, inheriting its general characteristics. There are no additional restrictions, property constraints, or disjointness axioms specified for this class. Its primary distinguishing feature lies in its hierarchical placement within the ontology.\nAxiom: {'subClassOf': ['DiscussionTask']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does DirectedDiscussionTask fall under?", "1": "Which tasks are categorized as subtypes of DiscussionTask, including DirectedDiscussionTask?", "2": "Is DirectedDiscussionTask classified as a specific kind of DiscussionTask?", "3": "Next level up from DirectedDiscussionTask in the hierarchy is what task category?", "4": "Does DirectedDiscussionTask represent a more specialized form of DiscussionTask?", "5": "What are all the higher-level categories that include DirectedDiscussionTask?", "6": "Is every DirectedDiscussionTask instance also recognized as a DiscussionTask?", "7": "To which overarching task types does DirectedDiscussionTask belong?", "8": "Can any DiscussionTask be further distinguished into"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FreeDiscussionTask\nDescription: FreeDiscussionTask is defined as a subclass of DiscussionTask. This means that every FreeDiscussionTask inherits all properties and characteristics of DiscussionTask, while potentially introducing further specializations specific to free-form or open-ended discussions. No additional constraints or distinguishing features are specified in the current axiom.\nAxiom: {'subClassOf': ['DiscussionTask']}\nGenerated CQs:", "generated_outputs": {"0": "Which tasks fall under the category of DiscussionTask, such as FreeDiscussionTask?", "1": "Is FreeDiscussionTask classified as a type of DiscussionTask?", "2": "What broader task categories does FreeDiscussionTask belong to?", "3": "Next higher-level classification for FreeDiscussionTask is what?", "4": "Does FreeDiscussionTask represent a more specialized form of DiscussionTask?", "5": "Which tasks are categorized beneath DiscussionTask, including FreeDiscussionTask?", "6": "How does the hierarchy relate FreeDiscussionTask to DiscussionTask?", "7": "Are there any other subclasses within the broader class of DiscussionTask besides FreeDiscussionTask?", "8": "To which parent classes does FreeDiscussion"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DirectedTask\nDescription: DirectedTask is defined as a subclass of Task. This means that every DirectedTask is a type of Task, inheriting all general characteristics of Task, but is further specialized to represent a more specific kind or instance within that broader category. No additional restrictions or differentiating axioms are specified beyond its hierarchical position in relation to Task.\nAxiom: {'subClassOf': ['Task']}\nGenerated CQs:", "generated_outputs": {"0": "Does DirectedTask fall under the broader classification of Task?", "1": "Which tasks have DirectedTask as a more specific form?", "2": "What higher-level categories encompass DirectedTask?", "3": "Next level up from DirectedTask in the hierarchy is what?", "4": "Is DirectedTask categorized as a subtype of Task?", "5": "Which subclasses are included within Task, specifically including DirectedTask?", "6": "What superclasses does DirectedTask inherit from?", "7": "Does Task include DirectedTask as one of its subtypes?", "8": "Which types of tasks comprise DirectedTask among their members?", "9": "What general classes does DirectedTask belong to if we consider inheritance?", "10": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P21_PictureDescriptionTask\nDescription: S3_P21_PictureDescriptionTask is defined as a subclass of FreeDiscussionTask. This means that every instance of S3_P21_PictureDescriptionTask is also an instance of FreeDiscussionTask, inheriting all the properties and constraints applicable to free discussion tasks. No additional restrictions or differentiating features beyond this specialization are specified by the axioms.\nAxiom: {'subClassOf': ['FreeDiscussionTask']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass S3_P21_PictureDescriptionTask?", "1": "Is S3_P21_PictureDescriptionTask classified under FreeDiscussionTask?", "2": "Which tasks are more specific than FreeDiscussionTask, such as S3_P21_PictureDescriptionTask?", "3": "Next level parent for S3_P21_PictureDescriptionTask", "4": "Does S3_P21_PictureDiscussionTask fall within the category of FreeDiscussionTask?", "5": "Which general task types include S3_P21_PictureDescriptionTask as a member?", "6": "What entities are categorized as subtypes of FreeDiscussionTask, specifically including S3_P21"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P22_PictureDiscussionTask\nDescription: S3_P22_PictureDiscussionTask is defined as a subclass of FreeDiscussionTask. This means that every instance of S3_P22_PictureDiscussionTask is also considered a FreeDiscussionTask, inheriting all characteristics and constraints of FreeDiscussionTask, while potentially introducing additional specificity relevant to picture discussion activities.\nAxiom: {'subClassOf': ['FreeDiscussionTask']}\nGenerated CQs:", "generated_outputs": {"0": "Which tasks are more specific than FreeDiscussionTask, such as S3_P22_PictureDiscussionTask?", "1": "What broader task categories include S3_P22_PictureDiscussionTask within their hierarchy?", "2": "Is S3_P22_PictureDiscussionTask classified under the category of FreeDiscussionTask?", "3": "Next level up in the classification for S3_P22_PictureDiscussionTask would be which task group?", "4": "Does S3_P22_PictureDiscussionTask fall under the general category of FreeDiscussionTask?", "5": "Which tasks have FreeDiscussionTask as their immediate superclass?", "6": "Is it accurate to say that S"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GaitAssessment\nDescription: GaitAssessment is defined as a subclass of ExperimentalAssessment. Individuals in this class are required to have exactly one MonoTaskScore and exactly one DualTaskScore, both of which must be literals (i.e., data values such as numbers or strings). This formalization ensures that each GaitAssessment precisely records a single score for both mono-task and dual-task conditions using literal values.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasMonoTaskScore exactly 1]', '[hasMonoTaskScore only rdfs:Literal]', '[hasDualTaskScore exactly 1]', '[hasDualTaskScore some rdfs:Literal]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every GaitAssessment possess at least one hasDualTaskScore property with a value from the set of rdfs:Literal?", "1": "Is it necessary for any instance of GaitAssessment to have a non-empty hasDualTaskScore relation involving only rdfs:Literal members?", "2": "Can a GaitAssessment exist without being linked via hasDualTaskScore to something classified as rdfs:Literal?", "3": "Generated CQs:Is it possible for a GaitAssessment not to have any hasDualTaskScore property with an rdfs:Literal object?", "4": "Does every GaitAssessment"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AutonomyAssessment\nDescription: AutonomyAssessment is a subclass of ClinicalAssessment designed specifically to evaluate an individual's level of autonomy. Every instance of AutonomyAssessment is required to have exactly one value for the property iadl_e, which must be of type xsd:int. This ensures that each AutonomyAssessment provides a singular, integer-based measurement relevant to the assessed individual's instrumental activities of daily living.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[iadl_e exactly 1 xsd:int]', '[iadl_e some xsd:int]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every AutonomyAssessment necessarily involve at least one iadl_e relationship to an integer?", "1": "Is it required that AutonomyAssessment has the iadl_e property linked to at least one integer value?", "2": "Can an AutonomyAssessment exist without having any iadl_e connection to integers?", "3": "Generated CQs:Are all instances of AutonomyAssessment associated via the iadl_e property to at least one integer?", "4": "Does AutonomyAssessment always possess an iadl_e relationship to some integer?", "5": "Is there any AutonomyAssessment that does not"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveAbilitiesAssessment\nDescription: CognitiveAbilitiesAssessment is defined as a subclass of ClinicalAssessment, representing evaluations specifically focused on measuring cognitive functions. Instances of this class must have exactly one FAB score (an integer), one MMSE score (an integer), one Trail Making Test result (a string), one Free and Cued Reminding Assessment result (a string), and one Short Cognitive Battery Assessment result (a string). Property restrictions further specify that each of these assessments and scores must be unique and of the stated data type, ensuring a comprehensive and structured representation of cognitive assessment results for each individual.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[fabScore exactly 1 xsd:int]', '[freeAndCuedRemindingAssessment exactly 1 xsd:string]', '[hasMMSEScore exactly 1 xsd:int]', '[trailMakingTest only xsd:string]', '[trailMakingTest exactly 1 xsd:string]', '[freeAndCuedRemindingAssessment only xsd:string]', '[hasMMSEScore only xsd:int]', '[shortCognitiveBatteryAssessment exactly 1 xsd:string]', '[fabScore only xsd:int]', '[shortCognitiveBatteryAssessment some xsd:string]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of CognitiveAbilitiesAssessment necessarily possess at least one shortCognitiveBatteryAssessment value classified as xsd:string?", "1": "Is it required for all entities categorized under CognitiveAbilitiesAssessment to have a shortCognitiveBatteryAssessment property with an xsd:string as its value?", "2": "Can a CognitiveAbilitiesAssessment exist without being associated via shortCognitiveBatteryAssessment to any xsd:string object?", "3": "Next CQ:Is it permitted for a CognitiveAbilitiesAssessment to lack a shortCognitiveBatteryAssessment entry of type xsd:string?", "4": "Does the presence"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MotricityAbilitiesAssessment\nDescription: MotricityAbilitiesAssessment is defined as a subclass of ClinicalAssessment, representing assessments that evaluate motor abilities. Every instance of this class is required to have exactly one UPDRS score, and this score must be an integer value (xsd:int). This ensures that each motricity abilities assessment is uniquely and quantitatively characterized by a single UPDRS score, aligning with the clinical need for standardized motor evaluation.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[hasUPDRSScore exactly 1 xsd:int]', '[hasUPDRSScore some xsd:int]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every MotricityAbilitiesAssessment include at least one hasUPDRSScore property with an integer value?", "1": "Is it necessary for MotricityAbilitiesAssessment to have an associated UPDRS score classified as an integer within the context of hasUPDRSScore?", "2": "Can a MotricityAbilitiesAssessment exist without any reference to an integer-valued UPDRS score via hasUPDRSScore?", "3": "Does the presence of any non-integer UPDRS score via hasUPDRSScore disqualify an entity from being classified as a Motricity"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiscussionInvolvementData\nDescription: DiscussionInvolvementData is defined as a subclass of MeasuredData. Every instance of this class is required to have exactly one value for the property verbalReactionSpontaneity, and this property must take a value of type rdfs:Literal. This formalizes that each DiscussionInvolvementData entry captures a single, literal-valued measure of verbal reaction spontaneity as part of its involvement data.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[verbalReactionSpontaneity exactly 1]', '[verbalReactionSpontaneity some rdfs:Literal]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of DiscussionInvolvementData necessarily possess at least one verbalReactionSpontaneity value of type rdfs:Literal?", "1": "Is it required for all DiscussionInvolvementData entities to have a verbalReactionSpontaneity property assigned a literal value?", "2": "Can a DiscussionInvolvementData exist without being linked via verbalReactionSpontaneity to any literal value?", "3": "Next CQ:Is there any DiscussionInvolvementData entity that lacks a verbalReactionSpontaneity relationship to a literal value?", "4": "Does the presence of a non-literal verbalReactionSpont"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LatencyData\nDescription: LatencyData is a subclass of MeasuredData. Each instance of LatencyData must have exactly one latency value, and this value must be a literal (rdfs:Literal). This class formally represents measured data where the primary attribute is a singular latency value stored as a literal, ensuring uniformity and precision in latency representation.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[latency exactly 1]', '[latency some rdfs:Literal]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every LatencyData possess at least one property called latency with a value that is an rdfs:Literal?", "1": "Is it required for any LatencyData instance to have a latency property associated with an rdfs:Literal value?", "2": "Can LatencyData exist without having any latency property assigned an rdfs:Literal?", "3": "Does LatencyData necessarily include a latency relation to at least one rdfs:Literal entity?", "4": "Is LatencyData defined such that each instance has exactly one latency property whose value is an rdfs:Literal?", "5": "Does LatencyData require the existence of a latency"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiscussionTask\nDescription: DiscussionTask is defined as a subclass of Task. Every instance of DiscussionTask is required to have at least some measured data of type StressData and some measured data of type MoodVoiceData. Additionally, all measured data associated with DiscussionTask must be exclusively of type StressData or MoodVoiceData, meaning no other types of measured data are permitted. This ensures that the assessment of a DiscussionTask is strictly based on stress and mood-related voice data.\nAxiom: {'subClassOf': ['Task'], 'propertyRestrictions': ['[measuredData some StressData]', '[measuredData only (MoodVoiceData or StressData)]', '[measuredData only MoodVoiceData]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every DiscussionTask necessarily include at least one measurement that is a MoodVoiceData?", "1": "Is it possible for a DiscussionTask to exist without any measured data being of type MoodVoiceData?", "2": "Must all instances of DiscussionTask possess some measured value classified as MoodVoiceData?", "3": "Does the presence of MoodVoiceData among measured data distinguish all DiscussionTasks from those lacking such data?", "4": "Can a DiscussionTask be considered valid if its measured data do not include any MoodVoiceData?", "5": "Are there any DiscussionTasks that lack measurements categorized under MoodVoiceData?", "6": "Is the existence of at least one Mood"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PersonWithDementia\nDescription: PersonWithDementia is defined as a subclass of Person, and is equivalent to any person who has an associated clinical record that contains at least one assessment in which a clinical diagnosis of dementia is present. This formalization ensures that all individuals in the PersonWithDementia class are explicitly linked to the confirmed clinical diagnosis of dementia via assessment records.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': ['[hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment or [hasClinicalDiagnosis only {dementia}])])]']}\nGenerated CQs:", "generated_outputs": {"0": "Does PersonWithDementia fall under the broader category of Person?", "1": "Which entities are classified as specialized forms of Person, such as PersonWithDementia?", "2": "What higher-level classifications does PersonWithDementia pertain to within the ontology?", "3": "Next level up from PersonWithDementia: what types of Person include PersonWithDementia as a subtype?", "4": "Is every PersonWithDementia also categorized under Person?", "5": "Can a Person be considered PersonWithDementia if they do not meet the specified criteria regarding clinical records and assessments?", "6": "Does PersonWithDementia have any superclasses beyond Person"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_DirectedActivitiesStep\nDescription: S1_DirectedActivitiesStep is defined as a subclass of ProtocolStep. Each instance of this class is required to involve exactly one S1_P11_WalkingTask, one S1_P12_CountingBackwardsTask, one S1_P13_WalkingCountingBackwardsTask, one S1_P21_SentenceRepeatingTask, and one S1_P22_ArticulationControlTask. Additionally, the only tasks permitted to be involved are S1_P11_WalkingTask, S1_P12_CountingBackwardsTask, S1_P13_WalkingCountingBackwardsTask, S1_P21_SentenceRepeatingTask, S1_P22_ArticulationControlTask, or other general Task instances. This formalization ensures that each S1_DirectedActivitiesStep is composed of these five specific tasks, and does not include any other types of tasks.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask exactly 1 S1_P11_WalkingTask]', '[involvesTask exactly 1 S1_P13_WalkingCountingBackwardsTask]', '[involvesTask exactly 1 S1_P21_SentenceRepeatingTask]', '[involvesTask exactly 1 S1_P22_ArticulationControlTask]', '[involvesTask exactly 1 S1_P12_CountingBackwardsTask]', '[involvesTask only (S1_P11_WalkingTask and S1_P12_CountingBackwardsTask and S1_P13_WalkingCountingBackwardsTask and S1_P21_SentenceRepeatingTask and S1_P22_ArticulationControlTask and Task)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of DirectedActivitiesStep necessarily participate in at least one Task?", "1": "Is it possible for a DirectedActivitiesStep to exist without being associated with any Task?", "2": "Can there be a DirectedActivitiesStep that involves no Tasks whatsoever?", "3": "Generated CQs:Is the involvement of any Task mandatory for all entities classified as DirectedActivitiesStep?", "4": "Does the definition of DirectedActivitiesStep require the presence of at least one Task through the â€˜involvesTaskâ€™ property?", "5": "Only those entities labeled as DirectedActivitiesStep can have associations with multiple Tasks via â€˜involvesTaskâ€™, but they may also"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P11_WalkingTask\nDescription: S1_P11_WalkingTask is a subclass of DirectedTask, representing a specific type of directed task that involves walking. Every instance of this class is required to have at least some measuredData of type GaitData as well as some LatencyData, and the measuredData associated with any instance may only be of types GaitData, LatencyData, or StressData. This ensures that S1_P11_WalkingTask is characterized by the collection and analysis of gait and latency information, with the potential inclusion of stress-related data during walking activities.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (GaitData or LatencyData or StressData)]', '[measuredData some GaitData]', '[measuredData only LatencyData]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every S1_P11_WalkingTask have at least one measuredData entry classified as LatencyData?", "1": "Is it necessary for an S1_P11_WalkingTask to include some measuredData with type LatencyData?", "2": "Can an S1_P11_WalkingTask exist without having any measuredData labeled as LatencyData?", "3": "Generated CQs:Is it permissible for an S1_P11_WalkingTask to possess multiple measuredData entries where each has a different type among GaitData, LatencyData, and StressData?", "4": "Are all instances of S1_P11_W"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P21_SentenceRepeatingTask\nDescription: S1_P21_SentenceRepeatingTask is a subclass of DirectedTask characterized by measuredData properties. Every instance must have at least one measuredData value of type MoodVoiceData and at least one of type LatencyData. The measuredData property for this class can only be filled with LatencyData, MoodVoiceData, or StressData, and no other types. This structure ensures the task consistently collects both mood/voice and latency data, restricting measured data types to those specifically listed.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[measuredData only (LatencyData or MoodVoiceData or StressData)]', '[measuredData some LatencyData]', '[measuredData only MoodVoiceData]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every S1_P21_SentenceRepeatingTask necessarily involve at least one measurement classified as MoodVoiceData?", "1": "Is it required that all instances of S1_P21_SentenceRepeatingTask possess a measuredData entry of type MoodVoiceData?", "2": "Can an S1_P21_SentenceRepeatingTask exist without any measuredData value assigned to MoodVoiceData?", "3": "Next CQ:Is there any S1_P21_SentenceRepeatingTask that lacks a measuredData link to MoodVoiceData?", "4": "Does the definition of S1_P21_SentenceRepeatingTask permit the presence of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ClinicalRecord\nDescription: ClinicalRecord is defined as a class that must contain exactly one instance each of AutonomyAssessment, MotricityAbilitiesAssessment, CognitiveAbilitiesAssessment, and DiagnosisAssessment. Furthermore, the containsAssessment property for any ClinicalRecord instance is restricted to only those assessments that are of type AutonomyAssessment, CognitiveAbilitiesAssessment, DiagnosisAssessment, MotricityAbilitiesAssessment, or NeuropsychiatricAndMoodAssessment. This ensures that every ClinicalRecord is a structured record of clinical assessments, each holding exactly one specific assessment of autonomy, motricity abilities, cognitive abilities, and diagnosis, with assessments strictly limited to the defined set.\nAxiom: {'propertyRestrictions': ['[containsAssessment exactly 1 AutonomyAssessment]', '[containsAssessment exactly 1 MotricityAbilitiesAssessment]', '[containsAssessment exactly 1 CognitiveAbilitiesAssessment]', '[containsAssessment exactly 1 DiagnosisAssessment]', '[containsAssessment only (AutonomyAssessment and CognitiveAbilitiesAssessment and DiagnosisAssessment and MotricityAbilitiesAssessment and NeuropsychiatricAndMoodAssessment)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every ClinicalRecord necessarily have at least one containsAssessment relation with a NeuropsychiatricAndMoodAssessment?", "1": "Is it required for a ClinicalRecord to include a containsAssessment link to some NeuropsychiatricAndMoodAssessment?", "2": "Can there exist a ClinicalRecord without any associated NeuropsychiatricAndMoodAssessment via the containsAssessment property?", "3": "Next CQ:Is it permitted for a ClinicalRecord to have multiple containsAssessment relations pointing to different NeuropsychiatricAndMoodAssessments?", "4": "Does the presence of one containsAssessment connection to a Neuropsych"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalRecord\nDescription: ExperimentalRecord represents a record comprised of exactly one assessment of each of the following types: ExperimentalDiagnosisAssessment, CognitiveLoadAssessment, AbilityToOrganiseAssessment, FunctionalAbilityAssessment, MemorySelfAppraisalAssessment, GaitAssessment, ApathyAssessment, and StressAssessment. The class restricts its containsAssessment property so that only these eight specific assessment types are includedâ€”no additional or alternative types are permitted. Each ExperimentalRecord must contain exactly one instance of each assessment type, ensuring comprehensive and standardized coverage within each record.\nAxiom: {'propertyRestrictions': ['[containsAssessment exactly 1 ExperimentalDiagnosisAssessment]', '[containsAssessment exactly 1 CognitiveLoadAssessment]', '[containsAssessment exactly 1 AbilityToOrganiseAssessment]', '[containsAssessment exactly 1 FunctionalAbilityAssessment]', '[containsAssessment exactly 1 MemorySelfAppraisalAssessment]', '[containsAssessment exactly 1 GaitAssessment]', '[containsAssessment exactly 1 ApathyAssessment]', '[containsAssessment exactly 1 StressAssessment]', '[containsAssessment only (AbilityToOrganiseAssessment and ApathyAssessment and CognitiveLoadAssessment and ExperimentalDiagnosisAssessment and FunctionalAbilityAssessment and GaitAssessment and MemorySelfAppraisalAssessment and StressAssessment)]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every ExperimentalRecord contain at least one StressAssessment?", "1": "Is it necessary for an ExperimentalRecord to have a StressAssessment as part of its containsAssessment property?", "2": "Can an ExperimentalRecord exist without any StressAssessment associated through containsAssessment?", "3": "Related:CognitiveLoadAssessment", "4": "FunctionalAbilityAssessment", "5": "MemorySelfAppraisalAssessment", "6": "GaitAssessment", "7": "ApathyAssessment", "8": "ExperimentalDiagnosisAssessment", "9": "AbilityToOrganiseAssessment", "10": "PropertyRestrictions:containsAssessment", "11": "Class hierarchy:ExperimentalRecord", "12": "StressAssessment", "13": "PropertyRestrictions:containsAss"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Task\nDescription: Task is defined as a class whose members are associated with exactly one start time and exactly one end time, each of which must be an instance of time:Instant. Additionally, every Task must have some measuredData, and all such measuredData must be of type StressData. These property restrictions ensure that every Task is temporally bounded and is characterized by stress-related measurements.\nAxiom: {'propertyRestrictions': ['[startTime exactly 1 time:Instant]', '[measuredData some StressData]', '[startTime only time:Instant]', '[endTime exactly 1 time:Instant]', '[endTime only time:Instant]', '[measuredData some StressData]']}\nGenerated CQs:", "generated_outputs": {"0": "Does a task necessarily possess at least one'measuredData' value that is of type StressData?", "1": "Can a task exist without any'measuredData' assigned as StressData?", "2": "Is it required for every task to include some'measuredData' classified under StressData?", "3": "Does a task always have at least one'measuredData' entry categorized as StressData?", "4": "Must every'measuredData' associated with a task represent StressData?", "5": "Can a task lack a'measuredData' value of type StressData?", "6": "Is there any task that does not have"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalDiagnosisAssessment\nDescription: ExperimentalDiagnosisAssessment is defined as a subclass of ExperimentalAssessment. This means every instance of ExperimentalDiagnosisAssessment is also an instance of ExperimentalAssessment. There are no additional property restrictions specified for this class. This class represents a specific type of experimental assessment that is focused on diagnostic evaluation within an experimental context.\nAxiom: {'subClassOf': ['ExperimentalAssessment'], 'propertyRestrictions': ['[hasExperimentalDiagnosis only DiagnosisType]']}\nGenerated CQs:", "generated_outputs": {"0": "Must an ExperimentalDiagnosisAssessment always have at least one hasExperimentalDiagnosis relationship to a DiagnosisType?", "1": "Is it required that any ExperimentalDiagnosisAssessment involves some form of diagnosis classified under DiagnosisType through the hasExperimentalDiagnosis property?", "2": "Does the presence of the hasExperimentalDiagnosis property linking an ExperimentalDiagnosisAssessment to a DiagnosisType suffice for classification as an ExperimentalDiagnosisAssessment?", "3": "Can an ExperimentalDiagnosisAssessment exist without being associated via hasExperimentalDiagnosis to any DiagnosisType?", "4": "Is there any ExperimentalDiagnosisAssessment lacking a connection to a Diagnosis"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CountingType\nDescription: CountingType is defined as a subclass of Type. This indicates that every CountingType is necessarily a Type, inheriting all characteristics of Type, but there are no additional restrictions or distinguishing features specified for CountingType beyond this subclass relationship.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{_20_0, _305_285}']}\nGenerated CQs:", "generated_outputs": {"0": "Does CountingType encompass any entities other than those classified as either _20_0 or _305_285?", "1": "Are all instances of CountingType strictly equivalent to either _20_0 or _305_285?", "2": "Can CountingType be considered synonymous with the union of _20_0 and _305_285?", "3": "Next CQ:Is it necessary for CountingType to include at least one element from either _20_0 or _305_285?", "4": "Does CountingType permit membership only through elements belonging to both _20_0 and _305_285?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GenderType\nDescription: GenderType is defined as a subclass of Type. This means that every instance of GenderType is also an instance of Type. No additional constraints or equivalence conditions are specified for this class.\nAxiom: {'subClassOf': ['Type'], 'equivalentClass': ['{male, female}']}\nGenerated CQs:", "generated_outputs": {"0": "Does GenderType encompass all individuals classified under male or female?", "1": "Is there any individual categorized as GenderType if it is not either male or female?", "2": "Are GenderType and the union of {male, female} equivalent classes within the context of the ontology?", "3": "Does GenderType represent exactly those entities that are male or female?", "4": "Can any entity be considered a member of GenderType unless it is explicitly male or female?", "5": "Is the set of GenderType instances entirely contained within the set comprising both male and female?", "6": "Does GenderType include anything other than male or female?", "7": "Are all possible"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DiagnosisAssessment\nDescription: DiagnosisAssessment is defined as a subclass of ClinicalAssessment. Every instance of DiagnosisAssessment must be associated with exactly one clinical diagnosis, specified by the property restriction that it has exactly one value for hasClinicalDiagnosis, and that value must be of type DiagnosisType. This formalizes that each diagnosis assessment relates to one and only one diagnosis type.\nAxiom: {'subClassOf': ['ClinicalAssessment'], 'propertyRestrictions': ['[hasClinicalDiagnosis exactly 1 DiagnosisType]', '[hasClinicalDiagnosis only DiagnosisType]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every DiagnosisAssessment have at least one hasClinicalDiagnosis relationship to some entity classified under DiagnosisType?", "1": "Is it required for all instances of DiagnosisAssessment to possess a hasClinicalDiagnosis link to a DiagnosisType individual?", "2": "Can a DiagnosisAssessment exist without being connected through hasClinicalDiagnosis to any DiagnosisType member?", "3": "Does having a hasClinicalDiagnosis association to something categorized as DiagnosisType serve as a necessary condition for a DiagnosisAssessment?", "4": "Is it possible for a DiagnosisAssessment to lack the hasClinicalDiagnosis property referencing a DiagnosisType entity?", "5": "Are there"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CognitiveAbilitiesData\nDescription: CognitiveAbilitiesData is a class defined by several property restrictions. Every instance must have exactly one status of type ActivityStatusType, exactly one repetitions value (which must be an rdfs:Literal), exactly one compliantInstructionsOrder value (which must be a boolean), and exactly one taskDuration (which must be an instance of time:DurationDescription). The status property may only point to ActivityStatusType, repetitions only to rdfs:Literal, compliantInstructionsOrder only to boolean values, and taskDuration only to time:DurationDescription. This formalization ensures strict data structure and type safety for information related to cognitive ability assessment data.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[status exactly 1 ActivityStatusType]', '[repetitions exactly 1]', '[repetitions only rdfs:Literal]', '[compliantInstructionsOrder only xsd:boolean]', '[compliantInstructionsOrder exactly 1 xsd:boolean]', '[taskDuration only time:DurationDescription]', '[taskDuration exactly 1 time:DurationDescription]', '[status only ActivityStatusType]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every CognitiveAbilitiesData necessarily possess at least one status assigned from the set of ActivityStatusTypes?", "1": "Is it required that all CognitiveAbilitiesData instances are linked via the â€˜statusâ€™ property to some member of ActivityStatusTypes?", "2": "Can a CognitiveAbilitiesData exist without any â€˜statusâ€™ property referencing an entity within ActivityStatusTypes?", "3": "Next CQ:Is CognitiveAbilitiesData categorized under MeasuredData?", "4": "Which higher-level categories does CognitiveAbilitiesData fall under within the ontology?", "5": "Does CognitiveAbilitiesData represent a specialization of MeasuredData?", "6": "Previous CQ:Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GaitData\nDescription: GaitData is defined as a subclass of MeasuredData, representing data specifically related to gait analysis. Members of this class are characterized by exactly one value each for walkingSpeed, stepLength, dynamicBalance (all with values restricted to literals), and stoppingDisplacement (restricted to a boolean value). Additionally, walkingSpeedInstantaneous and dynamicBalance can only take literal values. This formalization ensures that each GaitData instance uniquely records these properties, providing a precise structure for representing gait measurements.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[walkingSpeedInstantaneous only rdfs:Literal]', '[walkingSpeed only rdfs:Literal]', '[stepLength only rdfs:Literal]', '[dynamicBalance exactly 1]', '[walkingSpeed exactly 1]', '[stoppingDisplacement exactly 1 xsd:boolean]', '[stepLength exactly 1]', '[dynamicBalance only rdfs:Literal]', '[stoppingDisplacement only xsd:boolean]', '[walkingSpeedInstantaneous exactly 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every GaitData necessarily have at least one associated walkingSpeedInstantaneous property?", "1": "Is it required that all instances of GaitData possess some value for walkingSpeedInstantaneous?", "2": "Can a GaitData exist without being linked through walkingSpeedInstantaneous?", "3": "Next CQ:Is it permissible for a GaitData to lack any value assigned to its walkingSpeedInstantaneous property?", "4": "Does the definition of GaitData specify that each must have precisely one walkingSpeedInstantaneous property value?", "5": "Only if a GaitData has no more than one walkingSpeedInstantaneous property value does it"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StressData\nDescription: StressData is defined as a subclass of MeasuredData. Any individual of StressData is characterized by the property restriction that its stressLevel property may only take values that are rdfs:Literal (such as numbers or strings). This ensures that StressData captures measured data in which stress level is recorded exclusively as a literal value.\nAxiom: {'subClassOf': ['MeasuredData'], 'propertyRestrictions': ['[stressLevel only rdfs:Literal]', '[stressLevel exactly 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of StressData necessarily have at least one stressLevel property?", "1": "Is it required for StressData to possess exactly one stressLevel attribute?", "2": "Can a StressData exist without any specified stressLevel?", "3": "Next CQ:Is there any StressData lacking a stressLevel assigned to it?", "4": "Does StressData permit multiple stressLevels per instance?", "5": "Is it possible for StressData not to have a unique stressLevel established?", "6": "Last CQ:Is having a single stressLevel property mandatory for all instances classified under StressData?", "7": "Can StressData ever lack a defined stressLevel?", "8": "Should each"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HealthyControlParticipant\nDescription: HealthyControlParticipant is defined as a subclass of Person, representing individuals who are considered persons. There are no additional axioms or property restrictions specified, indicating that HealthyControlParticipant inherits all characteristics of Person without further differentiation or equivalence to other classes.\nAxiom: {'subClassOf': ['Person'], 'equivalentClass': ['[hasRecord some (ClinicalRecord and [containsAssessment some (DiagnosisAssessment and [hasClinicalDiagnosis some {healthy}])])]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every HealthyControlParticipant have at least one clinical record containing an assessment with a healthy diagnosis?", "1": "Is it necessary for HealthyControlParticipant to possess a clinical record that includes a diagnosis labeled as â€˜healthyâ€™ through some form of assessment?", "2": "Does the definition of HealthyControlParticipant require having a clinical record where there exists an assessment classified as healthy?", "3": "Can a HealthyControlParticipant exist without any clinical records featuring assessments diagnosed as healthy?", "4": "Is HealthyControlParticipant equivalent to individuals who are linked via a clinical record to at least one assessment with a healthy diagnosis?", "5": "Are HealthyControlParticipant and those possessing a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Person\nDescription: Person is defined as a subclass of ns1:Person. Every individual belonging to this class is required to participate in at least one Protocol, and is also restricted such that they participate only in Protocol (no other types of participation are allowed). Additionally, each Person is associated with at least one ClinicalRecord, one ExperimentalRecord, and one DemographicCharacteristicsRecord via the hasRecord property. This formalization ensures that all Persons have these specific record types and exclusively participate in Protocols.\nAxiom: {'subClassOf': ['ns1:Person'], 'propertyRestrictions': ['[participates some Protocol]', '[hasRecord some ClinicalRecord]', '[hasRecord some ExperimentalRecord]', '[hasRecord some DemographicCharacteristicsRecord]', '[participates only Protocol]', '[hasRecord only (ClinicalRecord or DemographicCharacteristicsRecord or ExperimentalRecord)]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every person possess at least one clinical record?", "1": "Is it necessary for a person to have a clinical record among their records?", "2": "Can a person exist without any clinical record being linked to them through â€˜hasRecordâ€™?", "3": "Does having a clinical record via â€˜hasRecordâ€™ constitute a defining characteristic of persons?", "4": "Are there individuals classified as persons who lack any association with a clinical record?", "5": "Does the definition permit the existence of persons without any clinical records?", "6": "Is it possible for a person not to have a clinical record?", "7": "Is the presence of a clinical record via â€˜hasRecordâ€™"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_DiscussionWithClinicianStep\nDescription: S3_DiscussionWithClinicianStep is defined as a subclass of ProtocolStep. Every instance of this class necessarily involves exactly one S3_P1_DirectedExpressionTask, and may additionally involve an S3_P21_PictureDescriptionTask or another Task. The property restriction ensures that all tasks involved are limited to S3_P1_DirectedExpressionTask, S3_P21_PictureDescriptionTask, or other specified Task subclasses, reflecting a step that is structured around these specific clinical activities.\nAxiom: {'subClassOf': ['ProtocolStep'], 'propertyRestrictions': ['[involvesTask only (S3_P1_DirectedExpressionTask or S3_P21_PictureDescriptionTask or Task)]', '[involvesTask exactly 1 S3_P1_DirectedExpressionTask]', '[involvesTask exactly 1 S3_P21_PictureDescriptionTask]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of S3_DiscussionWithClinicianStep necessarily include at least one task involving an S3_P21_PictureDescriptionTask?", "1": "Is it required for any S3_DiscussionWithClinicianStep to have involvement through some S3_P21_PictureDescriptionTask?", "2": "Can an S3_DiscussionWithClinicianStep exist without being associated with even one S3_P21_PictureDescriptionTask via the â€˜involvesTaskâ€™ property?", "3": "Generated CQs:Must every S3_DiscussionWithClinicianStep always include exactly one S3_P"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S1_P13_WalkingCountingBackwardsTask\nDescription: S1_P13_WalkingCountingBackwardsTask is defined as a subclass of DirectedTask. Members of this class are exclusively associated with counting types of CountingType and are required to have at least some measured data of both LatencyData and GaitData. It also enforces that measured data for this task must only include data of the following types: GaitData, LatencyData, MoodVoiceData, or StressData. This formalization ensures that instances of this class involve directed walking while counting backwards, with behavioral and cognitive performance captured by relevant measured data.\nAxiom: {'subClassOf': ['DirectedTask'], 'propertyRestrictions': ['[countingType only CountingType]', '[measuredData some LatencyData]', '[measuredData some GaitData]', '[countingType some CountingType]', '[measuredData only (GaitData or LatencyData or MoodVoiceData or StressData)]', '[measuredData some MoodVoiceData]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of S1_P13_WalkingCountingBackwardsTask necessarily possess measured data related to mood voice?", "1": "Is it required for any S1_P13_WalkingCountingBackwardsTask to have at least one measurement associated with mood voice?", "2": "Can there exist an S1_P13_WalkingCountingBackwardsTask without any recorded mood voice data?", "3": "Next CQ:Is it necessary for each S1_P13_WalkingCountingBackwardsTask to be linked via measured data to stress data?", "4": "Does every S1_P13_WalkingCountingBackwardsTask always"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: S3_P1_DirectedExpressionTask\nDescription: S3_P1_DirectedExpressionTask is defined as a subclass of DirectedDiscussionTask. Members of this class are characterized by the property that they are associated with at least some measuredData of type MoodVoiceData. This means that every S3_P1_DirectedExpressionTask instance involves collecting or utilizing mood-related voice data as part of the task.\nAxiom: {'subClassOf': ['DirectedDiscussionTask'], 'propertyRestrictions': ['[measuredData some MoodVoiceData]', '[measuredData only (MoodVoiceData or StressData)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every S3_P1_DirectedExpressionTask necessarily involve at least one measurement of StressData?", "1": "Is it required for any instance of S3_P1_DirectedExpressionTask to have a measuredData value classified as StressData?", "2": "Can an S3_P1_DirectedExpressionTask exist without being related via measuredData to StressData?", "3": "Next CQ:Is there any instance of S3_P1_DirectedExpressionTask that does not include measuredData with a type of StressData?", "4": "Does the definition of S3_P1_DirectedExpressionTask permit measurements other than those categorized under Stress"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExperimentalAssessment\nDescription: ExperimentalAssessment is a class that is characterized by a property restriction: every instance must have the hasScore property whose values are only rdfs:Literal (such as numbers, strings, or other literal data). This ensures that the assessment results are always represented as literal data types, capturing quantified or descriptive information relevant to the assessment process.\nAxiom: {'propertyRestrictions': ['[hasScore only rdfs:Literal]', '[hasScore exactly 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Must an ExperimentalAssessment have at least one value for the 'hasScore' property?", "1": "Is it required that each ExperimentalAssessment possesses exactly one score via the 'hasScore' relation?", "2": "Can an ExperimentalAssessment exist without any associated score through the 'hasScore' property?", "3": "Does every ExperimentalAssessment necessarily have the 'hasScore' property filled once?", "4": "Is there any ExperimentalAssessment allowed if its 'hasScore' property does not hold a single value?", "5": "Is it necessary for an ExperimentalAssessment to possess exactly one score linked via 'hasScore'?", "6": "Can an"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ProtocolStep\nDescription: ProtocolStep is a class characterized by its involvement in at least one Task (via the involvesTask property), with the restriction that it can only be associated with individuals of type Task through this property. Each ProtocolStep is also formally constrained to have exactly one startTime, which must be of type time:Instant, and may have zero or more endTimes, but any endTime provided must also be of type time:Instant. These axioms ensure that every ProtocolStep is precisely linked to its temporal boundaries and the tasks it entails.\nAxiom: {'propertyRestrictions': ['[involvesTask some Task]', '[endTime only time:Instant]', '[startTime exactly 1 time:Instant]', '[startTime only time:Instant]', '[involvesTask only Task]', '[endTime exactly 1 time:Instant]']}\nGenerated CQs:", "generated_outputs": {"0": "Does ProtocolStep necessarily involve at least one instance of Task?", "1": "Is there always an instance of ProtocolStep that participates in a Task via the 'involvesTask' property?", "2": "Can a ProtocolStep exist without being connected to any Task through 'involvesTask'?", "3": "Next CQ:Is every ProtocolStep required to relate to some Task using the 'involvesTask' relationship?", "4": "Does the presence of 'involvesTask' linking a ProtocolStep to a Task guarantee that both entities are present?", "5": "Previous CQ:Can a ProtocolStep ever participate in a Task if it"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: participates\nDescription: The property \"participates\" has no explicit domain or range restrictions and is a sub-property of \"owl:topObjectProperty.\" It does not have any characteristics such as functionality or symmetry. The property is the inverse of \"hasParticipant,\" meaning if an entity participates in something, that thing has the entity as a participant.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical relationship between â€˜participatesâ€™ and â€˜hasParticipantâ€™ properties?", "1": "If entity A participates in B, can we infer that B hasParticipant A?", "2": "Which property serves as the inverse for â€˜hasParticipantâ€™?", "3": "Next CQ:Is there any defined property that is an inverse of â€˜participatesâ€™ within this ontology?", "4": "Does every instance where entity A participates in B necessarily imply that B hasParticipant A?", "5": "How are the roles of â€˜participatesâ€™ and â€˜hasParticipantâ€™ related according to the ontology?", "6": "Is it required that whenever entity A is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: apathyInventory\nDescription: The property \"apathyInventory\" does not have specified domain or range restrictions and has no declared characteristics. It is defined as a subproperty of \"owl:topDataProperty,\" indicating it is a data property applicable to any individual. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value assigned to apathyInventory also serve as a member of the set of apathyInventory?", "1": "Does apathyInventory allow only those values that are included within its own inventory?", "2": "Is there at least one instance outside the apathyInventory set that can still be used as a range for apathyInventory?", "3": "Does apathyInventory permit all possible values from its inventory?", "4": "Can apathyInventory take on any value that is part of its inventory?", "5": "Is every valid value associated with apathyInventory necessarily present in its inventory?", "6": "Does apathyInventory restrict its range to items found"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasMonoTaskScore\nDescription: The property \"hasMonoTaskScore\" does not have explicitly defined characteristics, domain, or range restrictions. It is defined as a sub-property of \"hasScore,\" indicating it is used to represent a specific type of score related to mono-task contexts. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any entity other than Score serve as the range for the property 'hasMonoTaskScore'?", "1": "Is every value assigned to the property 'hasMonoTaskScore' required to be of type Score?", "2": "What types are allowed as the range when using the property 'hasMonoTaskScore'?", "3": "Next CQ:Is there any Score instance that can appear as the range for the property 'hasMonoTaskScore'?", "4": "Does the definition of the property 'hasMonoTaskScore' restrict its range exclusively to instances of Score?", "5": "Can a non-Score entity be associated via the property 'hasMonoTask"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: areasOfInterestExplored\nDescription: The property \"areasOfInterestExplored\" has no explicitly defined characteristics, domain restrictions, or super-properties. Its range is rdfs:Literal, indicating that the values associated with this property are expected to be plain text or data values. No inverse property is specified. This property is used to record or describe the areas of interest that have been explored by an entity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can areasOfInterestExplored relate to entities other than None?", "1": "Is it possible for areasOfInterestExplored to be used with subjects not classified as None?", "2": "Which types of entities can serve as the domain for areasOfInterestExplored?", "3": "Does areasOfInterestExplored apply only to None among its specified domains?", "4": "What entities does areasOfInterestExplored allow as its subject?", "5": "Are there any entities beyond None that can be linked via areasOfInterestExplored?", "6": "Can areasOfInterestExplored operate without being tied to None as its"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasClinicalDiagnosis\nDescription: The property \"hasClinicalDiagnosis\" does not specify any characteristics, domain, or range. It is a subproperty of \"hasDiagnosis,\" indicating that it represents a specialized type of diagnostic relationship, specifically pertaining to clinical diagnoses. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What relationships exist between â€˜hasClinicalDiagnosisâ€™ and other properties within the ontology?", "1": "Is â€˜hasClinicalDiagnosisâ€™ classified as a subproperty under â€˜hasDiagnosisâ€™?", "2": "Which superproperties are associated with â€˜hasClinicalDiagnosisâ€™?", "3": "Next property in the hierarchy for â€˜hasClinicalDiagnosisâ€™:", "4": "Does every instance related via â€˜hasClinicalDiagnosisâ€™ also fall under â€˜hasDiagnosisâ€™?", "5": "Can entities connected through â€˜hasClinicalDiagnosisâ€™ be further linked by another specific diagnosis-related property?", "6": "Is there any property that serves as the inverse of â€˜hasClinical"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: verbalReactionSpontaneity\nDescription: The property \"verbalReactionSpontaneity\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No current textual description is provided. Its use should be interpreted in context, as there are no formal restrictions or relations specified in its axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can verbalReactionSpontaneity relate any entity as its subject?", "1": "Is it permissible for verbalReactionSpontaneity to have no object associated with it?", "2": "Does every instance of verbalReactionSpontaneity necessarily involve some subject?", "3": "Can verbalReactionSpontaneity act as a property without being linked to an object?", "4": "What entities can serve as the domain for verbalReactionSpontaneity?", "5": "Which types of values are valid as the range for verbalReactionSpontaneity?", "6": "Are there any specific requirements regarding the range when applying verbalReactionSpontaneity?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containedInContext\nDescription: The property \"containedInContext\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. It is a generic property with no specified constraints, indicating its use and applicability are context-dependent and unconstrained by the current ontology axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the subject of â€˜containedInContextâ€™ be any entity?", "1": "Is it permissible for the object of â€˜containedInContextâ€™ to be any value?", "2": "What entities can serve as the range for the property â€˜containedInContextâ€™?", "3": "Does the property â€˜containedInContextâ€™ have a restricted domain?", "4": "Is there any restriction imposed on the subject of the property â€˜containedInContextâ€™?", "5": "Which types of objects can appear as the domain for the property â€˜containedInContextâ€™?", "6": "Can â€˜containedInContextâ€™ relate any type of entity as its domain?", "7": "Are there any restrictions"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: status\nDescription: The property \"status\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This suggests flexibility in its use, allowing it to relate any types of entities without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the status property have any other values apart from None as its range?", "1": "Is there any instance where the status property is assigned a value other than None?", "2": "What are all possible range values for the status property in this ontology?", "3": "Does status always require a value specified within the None class?", "4": "Can status ever take on a value outside the None category?", "5": "Is it necessary for status to be associated exclusively with instances of None?", "6": "Are there any restrictions placed on the values that can appear as the range of status?", "7": "Must every occurrence of status specify at least one value drawn from the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: measuredData\nDescription: The property \"measuredData\" has no specified domain, range, characteristics, super-properties, or inverse properties. It can be used to relate any two entities without restriction, as no additional constraints or descriptive information are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value assigned to the property â€˜measuredDataâ€™ also serve as a subject for the same property?", "1": "Is it required that if entity A is related to entity B via â€˜measuredDataâ€™, then B must have at least one value associated with â€˜measuredDataâ€™?", "2": "Does the existence of a â€˜measuredDataâ€™ relationship from A to B imply thereâ€™s a corresponding â€˜measuredDataâ€™ link from B back to A?", "3": "Does the property â€˜measuredDataâ€™ model a symmetric relationship between its subjects and objects?", "4": "Can any individual be both subject and object of the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containsAssessment\nDescription: The property \"containsAssessment\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is likely intended to associate an entity with an assessment, but its usage is not formally restricted by axioms. Additional details or constraints may be needed to clarify its precise application within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value associated with the 'containsAssessment' property also be classified as an assessment?", "1": "Is it required for any subject linked via 'containsAssessment' to have at least one related assessment?", "2": "Are assessments necessarily among the possible ranges for the 'containsAssessment' property?", "3": "Does the use of 'containsAssessment' always imply the existence of some associated assessment?", "4": "Can there exist a subject linked through 'containsAssessment' without any corresponding assessment?", "5": "Is 'containsAssessment' limited to relating subjects to assessments exclusively?", "6": "Does the definition of 'containsAssessment'"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDiagnosis\nDescription: The property \"hasDiagnosis\" has no explicitly defined characteristics, no specified domain or range restrictions, and is not declared as a sub-property of any other property. No inverse property is specified. This suggests that \"hasDiagnosis\" serves as a general relation, potentially linking individuals to their diagnoses without further formal constraints.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of values can be assigned as the â€˜rangeâ€™ for the property â€˜hasDiagnosisâ€™?", "1": "Is it possible for the property â€˜hasDiagnosisâ€™ to have no value specified for its â€˜rangeâ€™?", "2": "Which properties are designated as having a â€˜rangeâ€™ restricted to the same type as â€˜hasDiagnosisâ€™?", "3": "Can the â€˜rangeâ€™ of â€˜hasDiagnosisâ€™ include entities outside those classified under the category of â€˜hasDiagnosisâ€™?", "4": "What entities are permitted within the â€˜rangeâ€™ of the property â€˜hasDiagnosisâ€™?", "5": "Does the definition of â€˜has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasScore\nDescription: The property \"hasScore\" has no defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is likely used to associate an entity with a numerical or evaluative score, but no formal restrictions or relationships are specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value serve as both the subject and object for the property â€˜hasScoreâ€™?", "1": "Is there at least one individual that can have â€˜hasScoreâ€™ relationship with itself?", "2": "Are all instances that possess â€˜hasScoreâ€™ property restricted to those entities capable of being subjects and objects within this context?", "3": "Does the ontology permit the use of â€˜hasScoreâ€™ with a single argument?", "4": "Can â€˜hasScoreâ€™ ever relate two different individuals without involving a self-reference?", "5": "Is every value associated via â€˜hasScoreâ€™ necessarily linked to a single entity or can it connect multiple distinct entities?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dateOfBirth\nDescription: The property \"dateOfBirth\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Typically, it is intended to link an entity to its date of birth, although no formal constraints or relationships are currently specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of objects can serve as the domain for the property â€˜dateOfBirthâ€™?", "1": "Is there any restriction imposed on the domain entities associated with the â€˜dateOfBirthâ€™ property?", "2": "Which properties have a domain specified as None, such as â€˜dateOfBirthâ€™?", "3": "Next property without a specified domain:...", "4": "Previous property without a specified domain:...", "5": "Can â€˜dateOfBirthâ€™ be used as a property where neither subject nor object is restricted to any specific class?", "6": "Does the ontology permit assigning â€˜dateOfBirthâ€™ to a subject lacking any specified domain?", "7": "What generalization does the lack of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasMMSEScore\nDescription: The property \"hasMMSEScore\" has no explicitly defined characteristics, domain or range restrictions, super-properties, or inverse properties. Based on its name, it is intended to associate an entity with its MMSE (Mini-Mental State Examination) score.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What entities are permitted as the range for the property â€˜hasMMSEScoreâ€™?", "1": "Is it valid to use the property â€˜hasMMSEScoreâ€™ where the subject is not specified within the ontology?", "2": "Which property ranges are allowed when using the property â€˜hasMMSEScoreâ€™?", "3": "Does the property â€˜hasMMSEScoreâ€™ have any specified domain restrictions?", "4": "What types of subjects can be related to objects via the property â€˜hasMMSEScoreâ€™?", "5": "Can a value be assigned to the property â€˜hasMMSEScoreâ€™ without specifying a subject from the ontology?", "6": "Is there"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: repetitions\nDescription: The property \"repetitions\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. Based on the current axioms, \"repetitions\" can relate any two entities without additional constraints or semantic specifications.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between â€˜repetitionsâ€™ and the types of values it may take?", "1": "Is every value accepted as input for â€˜repetitionsâ€™ classified under â€˜Noneâ€™?", "2": "Which property ranges are specified for â€˜repetitionsâ€™?", "3": "Can â€˜repetitionsâ€™ have a value outside the category â€˜Noneâ€™?", "4": "Does â€˜repetitionsâ€™ permit all possible values within its declared range?", "5": "What types of values are allowed for the â€˜repetitionsâ€™ property?", "6": "Is there any restriction on the types of values associated with â€˜repetitionsâ€™?", "7": "Are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: iadl_e\nDescription: The property \"iadl_e\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional description is provided, and the property is not currently constrained by any axioms, indicating it is unspecified in its current form.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of objects are permitted as subjects for the â€˜iadl_eâ€™ property?", "1": "Which properties have â€˜iadl_eâ€™ as their subproperty?", "2": "Is there any object that can serve as the subject of the â€˜iadl_eâ€™ property?", "3": "Can the â€˜iadl_eâ€™ property relate an individual without having a corresponding object in its domain?", "4": "What entities fall under the domain of the â€˜iadl_eâ€™ property?", "5": "Does the definition of the â€˜iadl_eâ€™ property restrict its application only within its specified domain?", "6": "Are there any restrictions placed upon the potential values that"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: size\nDescription: The property \"size\" currently lacks explicit characteristics, domain, or range restrictions, and is not defined as a sub-property or inverse of any other property. This indicates that \"size\" is a general-purpose property intended to relate entities to their size attributes, but its specific usage and constraints are not currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can size be used as a property for values outside of the defined range?", "1": "Is it necessary for the subject of size to have a value within the specified range?", "2": "What types of values are permitted for the range of size?", "3": "Does size allow only certain specific values as its object?", "4": "Is there a restriction on the kinds of objects that can appear in the range of size?", "5": "Can size ever take an object from outside its allowed set?", "6": "Which properties are defined over the same restricted range as size?", "7": "Are all possible values of size also valid inputs for some other property?", "8": "Does"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: protocolStep\nDescription: The property \"protocolStep\" does not have any explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of another property and has no declared inverse property. Its intended usage and semantics should be inferred from its name or surrounding context.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the possible values for the â€˜protocolStepâ€™ property?", "1": "Can anything other than None serve as the subject of a â€˜protocolStepâ€™ relationship?", "2": "Is there any upper bound on the types of objects that can appear as the object of a â€˜protocolStepâ€™ property?", "3": "Does the â€˜protocolStepâ€™ property allow multiple ranges within a single property assertion?", "4": "What entities are permitted as the domain of a â€˜protocolStepâ€™ property?", "5": "Is it necessary for every use of the â€˜protocolStepâ€™ property to specify a valid range value?", "6": "Are there any restrictions on what kinds of values"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: countingType\nDescription: The property \"countingType\" has no explicitly defined characteristics, domain, or range restrictions. It does not have any specified super-properties or inverse properties. Its intended purpose must be inferred from its name, as no additional description or axioms are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does countingType allow values other than those restricted by its range?", "1": "What entities can serve as the range for the countingType property according to its definition?", "2": "Is it permissible for countingType to reference an object outside its explicitly declared range?", "3": "Does the range of countingType include all possible types?", "4": "Can countingType's value be any type, regardless of whether it is listed in its range?", "5": "Are there types beyond those specified in the range of countingType?", "6": "Is every valid value assigned to countingType necessarily included within its defined range?", "7": "Does countingType specify any restrictions on its allowed"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: taskDuration\nDescription: The property \"taskDuration\" has no specified characteristics, domain, or range restrictions. It does not have defined super-properties or an inverse property. Its intended use should be inferred from its name, which suggests it relates to the duration associated with a task, but no explicit constraints are imposed by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between taskDuration and taskDurationInverse?", "1": "Can taskDuration be used as an equivalent property to taskDurationInverse?", "2": "Which properties serve as inverses for taskDuration within this ontology?", "3": "Next CQ:Is taskDuration defined as the inverse of taskDurationInverse?", "4": "Does the ontology permit the assignment of multiple inverse properties for taskDuration?", "5": "How do the properties taskDuration and taskDurationInverse relate to each other according to the ontology's structure?", "6": "Is there any property aside from taskDurationInverse that can serve as an inverse for taskDuration?", "7": "Does every instance linked via"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasParticipant\nDescription: The property \"hasParticipant\" has no specified domain, range, characteristics, super-properties, or inverse properties. This property can be used in a general manner to relate an entity to its participant(s) without restriction on the types of subjects or objects involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value serve as both the subject and object for the property â€˜hasParticipantâ€™?", "1": "Is it valid for two entities to have each other as participants according to the property â€˜hasParticipantâ€™?", "2": "Does the definition of the â€˜hasParticipantâ€™ property allow for bidirectional relationships between individuals?", "3": "Next CQ:Is it possible for one individual to participate in another through multiple uses of the property â€˜hasParticipantâ€™?", "4": "Can an instance of â€˜hasParticipantâ€™ relate two different entities simultaneously, such as A and B, where A participates in B and also B participates in A?", "5": "Are there"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: distanceWalked\nDescription: The property \"distanceWalked\" has no explicitly defined characteristics, domain, or range restrictions. It does not inherit from any super-properties and has no specified inverse property. Its usage and semantics should be defined by the context or by further specification in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What properties are defined as subproperties under â€˜distanceWalkedâ€™?", "1": "Is â€˜distanceWalkedâ€™ included among the parent properties for â€˜distanceWalked?â€™", "2": "Which higher-level properties encompass â€˜distanceWalkedâ€™ within their hierarchy?", "3": "Next level up in the hierarchy from â€˜distanceWalkedâ€™ is which property?", "4": "Does the ontology define any direct subproperty for â€˜distanceWalkedâ€™?", "5": "Which entities can serve as subjects for the property â€˜distanceWalkedâ€™ according to the ontologyâ€™s current structure?", "6": "Can â€˜distanceWalkedâ€™ have an object that is not classified as either None"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: laterality\nDescription: The property \"laterality\" has no explicitly specified domain, range, or characteristics, and does not inherit from any super-properties nor possess any inverse property. The purpose and usage of this property are not further detailed by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What properties are defined as inverses for laterality?", "1": "Can laterality be used as an equivalent expression for any other property through the inverse relationship?", "2": "Does the definition of laterality imply a reciprocal connection with another property?", "3": "Next property in the hierarchy of laterality:...", "4": "Previous property associated with laterality:...", "5": "Is laterality classified under a broader property category?", "6": "Which properties have laterality as their parent within the property hierarchy?", "7": "What concepts are related to laterality via the subProperty relation?", "8": "Are there any restrictions imposed on the use of laterality due to its placement"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: shortCognitiveBatteryAssessment\nDescription: The property \"shortCognitiveBatteryAssessment\" does not have any explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it likely represents a relation involving a brief cognitive battery assessment, but no formal constraints are specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between â€˜shortCognitiveBatteryAssessmentâ€™ and other properties within the ontology?", "1": "Is â€˜shortCognitiveBatteryAssessmentâ€™ considered a subproperty under any existing property?", "2": "Which properties serve as superproperties for â€˜shortCognitiveBatteryAssessmentâ€™?", "3": "Does â€˜shortCognitiveBatteryAssessmentâ€™ have an inverse property defined?", "4": "Can you illustrate the hierarchy of properties with â€˜shortCognitiveBatteryAssessmentâ€™ at the bottom?", "5": "How does the ontology represent the relationship between â€˜shortCognitiveBatteryAssessmentâ€™ and â€˜hasPartâ€™?", "6": "Is there"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: date\nDescription: The property \"date\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional descriptive information is provided, indicating that its use and relationships are unspecified in the current ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value of the 'date' property also serve as the range for another property?", "1": "Is there at least one instance where the 'date' property points to something that could be used as the range of another property?", "2": "Are all possible values of the 'date' property restricted from being valid ranges for other properties?", "3": "Does the 'date' property have any specified restrictions on its potential ranges?", "4": "Can the 'date' property ever have a range that is not allowed elsewhere as a range for some other property?", "5": "Is it required that every value assigned via the 'date' property must"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" currently has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its intended use is likely to associate an entity with the point in time when an event or activity begins, but no formal restrictions or relationships are specified by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value assigned as the 'range' for the'startTime' property also serve as its 'domain'?", "1": "Is it required that every instance used as the 'domain' of'startTime' can equally function as the 'range' for this property?", "2": "What entities can fulfill both roles as 'domain' and 'range' for the'startTime' property?", "3": "Does the'startTime' property have any restriction on its 'domain', such as requiring it to be among those allowed as its 'range'?", "4": "Can a subject of the'startTime' property exist without being connected as a 'range"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: endTime\nDescription: The property \"endTime\" has no defined domain, range, super-properties, or inverse properties, and no specific logical characteristics are assigned. This property is presumably intended to specify the endpoint or completion time of an event or process, but no ontological constraints or further documentation are currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value other than None be used as the range for the property endTime?", "1": "Is it allowed for the property endTime to have a range different from None?", "2": "What types can serve as valid ranges for the property endTime according to its definition?", "3": "Does the property endTime restrict its range exclusively to instances of None?", "4": "Can a property value for endTime ever be associated with anything except None?", "5": "Is there any instance where the range of the property endTime does not correspond to None?", "6": "Does the specification for the property endTime permit values outside of None within its range?", "7": "Are all possible values for the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: before\nDescription: The property \"before\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This indicates that it represents a generic relation without specific constraints on the types of entities it connects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every use of the 'before' property have at least one specified domain?", "1": "Can a 'before' relationship exist without being associated with any domain?", "2": "Is it required for all instances of 'before' to possess a domain?", "3": "Does the absence of a domain restrict the applicability of the 'before' property?", "4": "Is there any instance of 'before' where the domain is not specified?", "5": "Are there any properties other than 'before' that can be applied to entities lacking a specified domain?", "6": "Can the 'before' property be used when neither subject nor object possesses a domain?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: freeAndCuedRemindingAssessment\nDescription: The property \"freeAndCuedRemindingAssessment\" has no explicitly defined characteristics, domain, or range restrictions, and does not specify any super-properties or inverse properties. Its intended use and meaning should be clarified by additional documentation or context, as current axioms do not constrain its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can freeAndCuedRemindingAssessment relate entities outside the specified range?", "1": "Is every value associated with freeAndCuedRemindingAssessment necessarily an instance of None?", "2": "What types are permitted as the range for the property freeAndCuedRemindingAssessment?", "3": "Does freeAndCuedRemindingAssessment have a restricted range within the ontology?", "4": "Can the range of freeAndCuedRemindingAssessment include entities other than None?", "5": "Which classes are allowed as the range for the property freeAndCuedRemindingAssessment?", "6": "Is it required that all values"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: handTrajectory\nDescription: The property \"handTrajectory\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based solely on its name and lack of further restrictions, it can be inferred that this property is used to associate entities with information related to the movement or path of a hand, but its usage is not formally constrained within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of objects are permitted as subjects for the property â€˜handTrajectoryâ€™?", "1": "Is there any specified upper bound on the number of values that can be associated with an entity via the property â€˜handTrajectoryâ€™?", "2": "Which properties have a more general relationship than â€˜handTrajectoryâ€™ within the ontology?", "3": "Does the property â€˜handTrajectoryâ€™ serve as an inverse to any other property in the ontology?", "4": "What entities can appear as the object of the property â€˜handTrajectoryâ€™?", "5": "Can multiple values be linked to the same subject through the property â€˜handTrajectoryâ€™?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: gender\nDescription: The property \"gender\" has no explicitly defined characteristics, domain, range, or hierarchy with other properties. There is no current description or axiomatic restriction, indicating that its usage context and value types are unspecified within the ontology. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What specific data types can serve as the range for the â€˜genderâ€™ property?", "1": "Is it required that all instances of the â€˜genderâ€™ property have values from the class â€˜Noneâ€™ as their range?", "2": "Which properties have the same specified range as â€˜genderâ€™ within this ontology?", "3": "Can the â€˜genderâ€™ property accept any type as its value, including those not listed under â€˜Noneâ€™?", "4": "Does the range of â€˜genderâ€™ encompass only instances of the class â€˜Noneâ€™, without allowing additional types?", "5": "Are there any properties whose ranges include entities outside the category â€˜Noneâ€™?", "6": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkingSpeedInstantaneous\nDescription: The property \"walkingSpeedInstantaneous\" has no specified characteristics, domain, or range restrictions, and is not defined as a sub-property or inverse of any other property. The property is expected to represent an entity's instantaneous walking speed, but lacks formal axiomatization to constrain or further describe its use.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between walkingSpeedInstantaneous and walkingSpeedAverage according to the ontology?", "1": "If an individual has walkingSpeedInstantaneous value A, does it necessarily have a walkingSpeedAverage value B?", "2": "Is walkingSpeedAverage logically equivalent to walkingSpeedInstantaneous in this context?", "3": "Next CQ:Is every instance with a walkingSpeedAverage value also associated with a walkingSpeedInstantaneous value?", "4": "Can an object possess walkingSpeedInstantaneous without having walkingSpeedAverage?", "5": "Does the ontology define any cases where walkingSpeedInstantaneous exists independently of walkingSpeedAverage?", "6": "Next CQ:Are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasUPDRSScore\nDescription: The property \"hasUPDRSScore\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to associate an entity with its Unified Parkinson's Disease Rating Scale (UPDRS) score, reflecting clinical assessments in Parkinson's disease. No further constraints or relationships are specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What entities can serve as the subject for the property â€˜hasUPDRSScoreâ€™?", "1": "Is it possible for any object other than those listed under the domain to possess the property â€˜hasUPDRSScoreâ€™?", "2": "What are the specific types of objects that are permitted as the domain for the property â€˜hasUPDRSScoreâ€™?", "3": "Does the property â€˜hasUPDRSScoreâ€™ require a subject from the class â€˜Noneâ€™?", "4": "Which classes are allowed as the domain when applying the property â€˜hasUPDRSScoreâ€™?", "5": "Can any object outside the specified domain be associated"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dsm_ivDepressionCriteria\nDescription: The property \"dsm_ivDepressionCriteria\" has no explicitly defined characteristics, domain, or range constraints, and it is not specified as a sub-property of any other property nor does it have an inverse property. Based on its name, it is intended to relate an entity to the diagnostic criteria for depression as defined in DSM-IV, but this intended usage is not formally constrained by the provided axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can dsm_ivDepressionCriteria link entities outside the class of DepressionCriteria?", "1": "Is every value associated with dsm_ivDepressionCriteria required to be a DepressionCriteria instance?", "2": "What types of values are permitted as the range for the dsm_ivDepressionCriteria property?", "3": "Does dsm_ivDepressionCriteria allow linking to objects beyond those classified under DepressionCriteria?", "4": "Which entities can serve as the range for the dsm_ivDepressionCriteria property according to its definition?", "5": "Can the dsm_ivDepressionCriteria property connect to elements that do not fall within the category of DepressionCriteria"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: latency\nDescription: The property \"latency\" has no explicitly specified characteristics, domain, or range constraints. It is not defined as a sub-property or inverse of any other property. The usage and applicable types for this property are unspecified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can latency be used as an input value in the subject position?", "1": "What entities can serve as the domain for the latency property?", "2": "Is it permissible for latency to have a value outside of its specified range?", "3": "Does latency require a specific type of object as its range?", "4": "Can latency exist without being associated with any particular range?", "5": "Are there any restrictions on the kinds of values allowed as the range of latency?", "6": "Which properties specify latency as their range?", "7": "Is the range of latency limited to certain predefined types?", "8": "Can latency be assigned a value from any class as its range?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: educationLevel\nDescription: The property \"educationLevel\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its use is not constrained to specific classes or value types, allowing for flexible application in the ontology. No further description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any instance serve as both the subject and object of the property â€˜educationLevelâ€™?", "1": "Is it possible for one entity to have multiple values for the property â€˜educationLevelâ€™, where each value relates to different objects via this property?", "2": "Does the property â€˜educationLevelâ€™ allow relationships between two entities such that either can play the role of both subject and object simultaneously?", "3": "Does the property â€˜educationLevelâ€™ support bidirectional linking between individuals, enabling them to be related as both subjects and objects?", "4": "Can there exist instances where the same individual is linked twice under the property â€˜educationLevelâ€™, once"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: npi\nDescription: The property \"npi\" has no specified characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and does not have any inverse properties. This indicates \"npi\" is a general property with no explicit structural or semantic constraints currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value associated with the 'npi' property be classified under the category of None?", "1": "Is it required for all instances linked by 'npi' to fall within the range of None?", "2": "What types are permitted as the range for the 'npi' property?", "3": "Does the 'npi' property restrict its values exclusively to entities categorized as None?", "4": "Can the 'npi' property connect to objects outside the domain of None?", "5": "Is there any instance allowed to serve as the domain for the 'npi' property if it's not explicitly specified as None?", "6": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stoppingDisplacement\nDescription: The property \"stoppingDisplacement\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. No current description is provided. The intended use or semantics of this property should be specified for greater clarity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between stoppingDisplacement and its associated values?", "1": "Is it possible for stoppingDisplacement to have any value other than None as its range?", "2": "Does stoppingDisplacement have a specified range within the ontology?", "3": "Next CQ:Is there a defined upper bound on the range for the property stoppingDisplacement?", "4": "Can stoppingDisplacement ever be assigned a value outside the class None?", "5": "Does the stoppingDisplacement property allow values from classes other than None?", "6": "Is stoppingDisplacement restricted to accepting only instances of None as its output?", "7": "Does stoppingDisplacement specify a limited set"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: trailMakingTest\nDescription: The property \"trailMakingTest\" has no specified characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely used to associate an entity with a trail making test, but no further ontological constraints or relationships are defined for this property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can trailMakingTest be applied to any type of subject?", "1": "Is every possible value of trailMakingTest valid as an object for all subjects?", "2": "What types of entities can serve as the domain for trailMakingTest?", "3": "Does trailMakingTest have any restrictions on its allowed domains?", "4": "Which properties are permitted to have None as their domain?", "5": "Is there a property whose domain includes None and has a specific range?", "6": "Can the range of trailMakingTest be set to None for certain subjects?", "7": "Are there any objects within the range of trailMakingTest that could also be associated with None as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: involvesTask\nDescription: The property \"involvesTask\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property, nor does it have an inverse property. This indicates that \"involvesTask\" is a general property intended to relate entities to unspecified tasks, without formal constraints on the types of entities or tasks involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between â€˜involvesTaskâ€™ and â€˜hasTaskâ€™ properties in terms of their inverses?", "1": "If entity A involves task B, can we infer that task B has entity A through the inverse property?", "2": "Which property serves as the inverse for â€˜involvesTaskâ€™ in this context?", "3": "Next CQ:Is there another property besides â€˜involvesTaskâ€™ that uses â€˜hasTaskâ€™ as its inverse in the ontology?", "4": "Does every use of â€˜involvesTaskâ€™ necessarily imply a corresponding application of â€˜hasTaskâ€™ via the inverse relation?", "5": "Can"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stressLevel\nDescription: The property \"stressLevel\" has no explicitly defined characteristics, domain, or range restrictions, nor any specified super-properties or inverse properties. Its intended purpose is not further described in the available axioms or documentation.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are all possible values for the â€˜stressLevelâ€™ property?", "1": "Is there any instance where the value associated with â€˜stressLevelâ€™ is neither high nor low?", "2": "Can the â€˜stressLevelâ€™ property ever have a value other than high or low?", "3": "Next CQ:Is it required for every use of â€˜stressLevelâ€™ to specify either high or low as its value?", "4": "Does the definition of â€˜stressLevelâ€™ permit values outside of high and low?", "5": "Is it necessary for the â€˜stressLevelâ€™ property to always take on one of high or low as its argument?", "6": "Next C"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: dynamicBalance\nDescription: The property \"dynamicBalance\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate entities in the context of maintaining or evaluating balance under changing conditions, but no formal constraints or further documentation are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'dynamicBalance' be used as a subject in a statement?", "1": "Is there any object that can serve as the domain for the property 'dynamicBalance'?", "2": "What types of values can appear as the range when the property 'dynamicBalance' is used?", "3": "Does 'dynamicBalance' allow both domain and range to be set to None?", "4": "Are all instances of the property 'dynamicBalance' restricted to having a value from the class 'None' as either their domain or range?", "5": "Can the property 'dynamicBalance' be associated with objects that do not belong to the class '"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasRecord\nDescription: The property \"hasRecord\" does not have explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is likely intended to associate an entity with a record, but no further semantic constraints are specified by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value other than None serve as the subject for the property 'hasRecord'?", "1": "Is there at least one instance where the object of 'hasRecord' is set to None?", "2": "Does every use of the property 'hasRecord' necessarily involve None as its subject?", "3": "Next CQ:Are all possible subjects for the property 'hasRecord' restricted to None?", "4": "Previous CQ:Is it required that every 'hasRecord' relates back to None as its domain?", "5": "Does the property 'hasRecord' allow any subject other than None?", "6": "Next CQ:Does the property '"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: fabScore\nDescription: The property \"fabScore\" has no specified domain, range, characteristics, super-properties, or inverse properties. Its usage and constraints are not defined by axioms, indicating that it is a general property without ontology-imposed restrictions or semantic details.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What entities can serve as the subject for the property â€˜fabScoreâ€™?", "1": "Is there any constraint limiting the domain of the property â€˜fabScoreâ€™ to specific types of individuals?", "2": "Which property has the same domain as â€˜fabScoreâ€™?", "3": "Does the property â€˜fabScoreâ€™ have a specified range among its characteristics?", "4": "Can the property â€˜fabScoreâ€™ be used with subjects outside its explicitly declared domain?", "5": "What is the range associated with the property â€˜fabScoreâ€™ according to its definition?", "6": "Are all possible values for the property â€˜fabScoreâ€™ restricted to those within its declared range"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkingSpeed\nDescription: The property \"walkingSpeed\" has no specified characteristics, domain, range, super-properties, or inverse properties. This property is likely intended to capture the walking speed of an entity, but no formal usage constraints or value types are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does walkingSpeed have any specified subproperties?", "1": "Which properties are defined as subproperties under walkingSpeed?", "2": "What higher-level properties encompass walkingSpeed within their scope?", "3": "Next level up from walkingSpeed in the hierarchy of properties is which one?", "4": "Is walkingSpeed categorized as a type of broader property?", "5": "Under what overarching property does walkingSpeed fall?", "6": "Are there other subproperties besides walkingSpeed associated with the broader property?", "7": "What entities can be linked via the walkingSpeed relationship, given its current definition?", "8": "Can walkingSpeed serve as a subproperty for another property?", "9": "Does walkingSpeed"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: areasOfNoInterestExplored\nDescription: The property \"areasOfNoInterestExplored\" has no defined characteristics, domain, range, super-properties, or inverse properties. This indicates it is a general property without specific constraints or hierarchical relationships in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['rdfs:Literal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value assigned to the â€˜areasOfNoInterestExploredâ€™ property be other than a literal?", "1": "Is every instance used as the range for the â€˜areasOfNoInterestExploredâ€™ property required to be a literal?", "2": "What types are permitted as values for the â€˜areasOfNoInterestExploredâ€™ property according to its definition?", "3": "Does the â€˜areasOfNoInterestExploredâ€™ property allow non-literal entities as its value?", "4": "Can the â€˜areasOfNoInterestExploredâ€™ property have a value that is not a literal?", "5": "Is there any"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: compliantInstructionsOrder\nDescription: The property \"compliantInstructionsOrder\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Its purpose and constraints are unspecified according to the given axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['xsd:boolean'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of compliantInstructionsOrder have at least one value that is a boolean?", "1": "Is it required for compliantInstructionsOrder to relate only to boolean values as its range?", "2": "Can compliantInstructionsOrder ever connect to entities other than those classified as boolean?", "3": "Does the property range of compliantInstructionsOrder exclusively include booleans?", "4": "Is any instance allowed to possess multiple values related via compliantInstructionsOrder if not all are boolean?", "5": "Is there a case where compliantInstructionsOrder relates two non-boolean values together?", "6": "Are all valid instances of compliantInstructionsOrder constrained such that their second argument must be a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDualTaskScore\nDescription: The property \"hasDualTaskScore\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property and does not have an inverse property. Its usage and semantics are unrestricted by the given axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasScore'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What relationships exist between hasDualTaskScore and hasScore in the ontology?", "1": "Is hasDualTaskScore considered a more specific form of hasScore?", "2": "Which properties are classified as subproperties under hasScore?", "3": "Next level parent for hasDualTaskScore within the hierarchy of score-related properties is which one?", "4": "Does every instance associated via hasDualTaskScore necessarily receive a score through hasScore?", "5": "Can you illustrate an example where hasDualTaskScore links two entities without invoking hasScore?", "6": "What broader property categories encompass hasDualTaskScore?", "7": "Are there any constraints or restrictions governing the use"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasExperimentalDiagnosis\nDescription: The property \"hasExperimentalDiagnosis\" has no specified domain, range, characteristics, super-properties, or inverse properties. This indicates it is a general property with no formal restrictions on the types of entities it can relate or the values it can take.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasDiagnosis'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does the property 'hasExperimentalDiagnosis' have any subproperties beyond those defined as 'hasDiagnosis'?", "1": "Which properties are classified under 'hasDiagnosis', including 'hasExperimentalDiagnosis'?", "2": "Is every instance of 'hasExperimentalDiagnosis' also considered an instance of 'hasDiagnosis'?", "3": "Next-level subproperty of 'hasDiagnosis':?", "4": "Can 'hasExperimentalDiagnosis' be used wherever 'hasDiagnosis' is allowed?", "5": "What broader property classifications include 'hasExperimentalDiagnosis'?", "6": "Does the use of 'hasExperimentalDiagnosis' imply the use of '"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stepLength\nDescription: The property \"stepLength\" has no explicitly defined characteristics, domain, or range restrictions. It is not declared as a sub-property of any other property and has no specified inverse property. This suggests its usage is flexible and not limited to particular classes or value types within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topDataProperty'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can stepLength be used with any entity as subject?", "1": "Is it possible for stepLength to have both a subject and an object from different domains?", "2": "What are the permitted domains for the stepLength property?", "3": "Does stepLength specify a fixed range of values it can relate to?", "4": "Which entities are allowed as the range for stepLength?", "5": "Can stepLength link an individual without specifying a valid target type?", "6": "Is there any restriction on the types of objects that can serve as the range for stepLength?", "7": "Does stepLength allow linking to individuals with arbitrary ranges?", "8": "Are all potential ranges"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:January\nDescription: time:January is defined as a subclass of time:DateTimeDescription, representing the temporal concept of January within a calendar system. Members of this class are restricted such that the time:month property must have the value \"01\" (indicating January), and the time:unitType property must have the value time:unitMonth, ensuring that it refers specifically to a month unit. This formalization guarantees that any instance of time:January corresponds uniquely to the month of January.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[time:month hasValue --01]', '[time:unitType hasValue time:unitMonth]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every individual classified under time:DateTimeDescription necessarily possess at least one time:month property with value '01'?", "1": "Is it required for all instances of time:DateTimeDescription to be associated via time:month to something labeled as '01'?", "2": "Can there exist a time:DateTimeDescription without a time:month relationship to '01'?", "3": "Generated CQs:Must every time:DateTimeDescription include at least one time:unitType having the value time:unitMonth?", "4": "Does the presence of time:unitType equal to time:unitMonth constitute a necessary condition for being classified as time"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DateTimeDescription\nDescription: time:DateTimeDescription represents a structured temporal entity that encapsulates the components of a date and time. Each propertyâ€”such as week, dayOfWeek, second, minute, day, month, timeZone, hour, year, and dayOfYearâ€”can have at most one value. The property time:unitType is mandatory and must have exactly one value for each instance. This ensures that every instance of time:DateTimeDescription uniquely specifies its temporal components with precisely constrained values.\nAxiom: {'propertyRestrictions': ['[time:week max 1]', '[time:dayOfWeek max 1]', '[time:second max 1]', '[time:minute max 1]', '[time:day max 1]', '[time:month max 1]', '[time:timeZone max 1]', '[time:hour max 1]', '[time:unitType exactly 1]', '[time:year max 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of time:DateTimeDescription necessarily possess at least one unitType?", "1": "Is it required that all time:DateTimeDescription entities are associated with some unitType through the property time:unitType?", "2": "Can there exist a time:DateTimeDescription without any unitType specified via the time:unitType property?", "3": "Next CQ:Is it permitted for a time:DateTimeDescription to lack a unitType if no such association exists for that instance?", "4": "Does every time:DateTimeDescription always have exactly one unitType linked via the time:unitType property?", "5": "Must every time:DateTimeDescription be"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DateTimeInterval\nDescription: time:DateTimeInterval is defined as a subclass of time:ProperInterval. This means every DateTimeInterval is a specific type of ProperInterval, representing a continuous interval of time with explicitly defined start and end date-time values. The class is intended for use where temporal intervals need to be precisely bounded using date and time information.\nAxiom: {'subClassOf': ['time:ProperInterval']}\nGenerated CQs:", "generated_outputs": {"0": "Does time:DateTimeInterval fall under the category of time:ProperInterval?", "1": "What broader classes encompass time:DateTimeInterval within the context of proper intervals?", "2": "Which subclasses are included within time:ProperInterval, such as time:DateTimeInterval?", "3": "Next level of generalization for time:DateTimeInterval is what?", "4": "Is time:DateTimeInterval classified as a kind of time:ProperInterval?", "5": "Under which higher-level interval types does time:DateTimeInterval exist?", "6": "What are the parent categories that time:DateTimeInterval belongs to?", "7": "Does time:DateTimeInterval represent a more specialized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Interval\nDescription: time:Interval is defined as a subclass of time:TemporalEntity, signifying that it represents a specific type of temporal entity. Instances of time:Interval describe durations or spans of time, distinct from other temporal entities such as instants, emphasizing an intervalâ€™s extension across a portion of the temporal dimension.\nAxiom: {'subClassOf': ['time:TemporalEntity']}\nGenerated CQs:", "generated_outputs": {"0": "Does time:Interval fall under the broader category of time:TemporalEntity?", "1": "Which temporal entities encompass time:Interval as a more specific kind?", "2": "What are the direct subclasses of time:TemporalEntity, including time:Interval?", "3": "Next level up for time:Interval within the hierarchy is time:TemporalEntity.", "4": "Is every instance of time:Interval classified under time:TemporalEntity?", "5": "To which higher-level categories does time:Interval belong in the ontology?", "6": "Does time:TemporalEntity include all instances that could also be described as time:Interval?", "7": "How does the class hierarchy relate time"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:ProperInterval\nDescription: time:ProperInterval is defined as a subclass of time:Interval. This means every instance of time:ProperInterval is also an instance of time:Interval, inheriting all its properties. Proper intervals represent temporal intervals with distinct start and end points (i.e., the start and end times are different), distinguishing them from instantaneous time points or degenerate intervals where start equals end.\nAxiom: {'subClassOf': ['time:Interval']}\nGenerated CQs:", "generated_outputs": {"0": "Does time:ProperInterval fall under the broader classification of time:Interval?", "1": "Which subclasses are encompassed within time:Interval, including time:ProperInterval?", "2": "What higher-level categories does time:ProperInterval belong to?", "3": "Next level up in hierarchy for time:ProperInterval is what?", "4": "Is time:ProperInterval categorized under time:Interval?", "5": "To which more general concepts is time:ProperInterval associated?", "6": "How do the categories relate such that time:ProperInterval is classified under time:Interval?", "7": "Are there any other classes besides time:Interval"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DayOfWeek\nDescription: time:DayOfWeek is defined as a class equivalent to the set containing time:Monday, time:Tuesday, time:Wednesday, time:Thursday, time:Friday, time:Saturday, and time:Sunday. This means that any individual of time:DayOfWeek must be exactly one of these seven days, formally capturing the conventional enumeration of days in a week.\nAxiom: {'equivalentClass': ['{time:Wednesday, time:Friday, time:Saturday, time:Tuesday, time:Monday, time:Sunday, time:Thursday}']}\nGenerated CQs:", "generated_outputs": {"0": "What are the logical equivalences for the class DayOfWeek within the ontology?", "1": "Is every member of DayOfWeek necessarily one of Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, or Sunday?", "2": "Which classes have the same members as DayOfWeek according to the ontology?", "3": "Does the ontology allow DayOfWeek to include entities other than those explicitly listed (Monday through Sunday)?", "4": "What additional entities, if any, are implied by the equivalence between DayOfWeek and the specified weekdays?", "5": "Can a value belong to both DayOfWeek and another day not listed here?", "6": "Are all possible values for DayOfWeek"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:TemporalUnit\nDescription: time:TemporalUnit is a class that is defined as being equivalent to the set containing time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, and time:unitWeek. This means that any individual that is an instance of any of these specific temporal units (such as month, minute, day, hour, year, second, or week) is also an instance of time:TemporalUnit, and vice versa. The class thus serves as a grouping for the major standard units used to measure time.\nAxiom: {'equivalentClass': ['{time:unitMonth, time:unitMinute, time:unitDay, time:unitHour, time:unitYear, time:unitSecond, time:unitWeek}']}\nGenerated CQs:", "generated_outputs": {"0": "Does time:TemporalUnit encompass all instances of time:unitMonth?", "1": "Is every time:unitMonth necessarily classified under time:TemporalUnit?", "2": "Which subclasses fall within time:TemporalUnit, including time:unitMonth?", "3": "Next level up in hierarchy from time:unitMonth is time:TemporalUnit.", "4": "Does time:TemporalUnit include time:unitMinute as one of its member types?", "5": "What entities are considered part of the broader group time:TemporalUnit?", "6": "Can time:TemporalUnit be characterized as the union of time:unitMonth, time:unitMinute, time:unit"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:TemporalEntity\nDescription: time:TemporalEntity is defined as a class equivalent to either time:Instant or time:Interval. This means any instance of time:TemporalEntity must be either an instant (representing a single point in time) or an interval (representing a duration between two points in time). This equivalence captures the generality of temporal entities, encompassing both points and periods within a temporal framework.\nAxiom: {'equivalentClass': ['(time:Instant and time:Interval)']}\nGenerated CQs:", "generated_outputs": {"0": "What are the logical equivalences for the concept time:TemporalEntity?", "1": "Is every time:TemporalEntity necessarily classified as either a time:Instant or a time:Interval?", "2": "Which classes are equivalent to time:TemporalEntity according to the ontology definition?", "3": "Does time:TemporalEntity include instances that are exclusively time:Instant or time:Interval, but not both?", "4": "Are all time:Intervals also considered time:TemporalEntities, and vice versa?", "5": "Can time:TemporalEntity be formally represented as the union of time:Instant and time:Interval?", "6": "Does time:TemporalEntity encompass instances"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Instant\nDescription: time:Instant is defined as a subclass of time:TemporalEntity, meaning it represents a specific point within the temporal domain. There are no explicit disjointness axioms specified, so no additional exclusivity constraints are imposed.\nAxiom: {'subClassOf': ['time:TemporalEntity'], 'disjointWith': ['time:ProperInterval']}\nGenerated CQs:", "generated_outputs": {"0": "What ontological separation exists between time:Instant and time:ProperInterval?", "1": "Is any instance allowed to belong simultaneously to both time:Instant and time:ProperInterval?", "2": "Which classes are formally specified as mutually exclusive with time:ProperInterval?", "3": "Next time:ProperInterval", "4": "Previous time:Instant", "5": "Is every time:Instant necessarily distinct from all time:ProperIntervals?", "6": "Does time:Instant share any common instances with time:ProperInterval?", "7": "Can time:Instant exist without being associated with time:ProperInterval through their disjoint property?", "8": "Which entities"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:Year\nDescription: time:Year is a subclass of time:DurationDescription, formally defined as a duration consisting of exactly 1 year, with all other time units (months, days, hours, minutes, and seconds) restricted to exactly 0. This ensures that any individual of time:Year represents a duration of precisely one year, without any additional components.\nAxiom: {'subClassOf': ['time:DurationDescription'], 'propertyRestrictions': ['[time:years exactly 1]', '[time:months exactly 0]', '[time:hours exactly 0]', '[time:seconds exactly 0]', '[time:days exactly 0]', '[time:minutes exactly 0]', '[time:weeks exactly 0]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of time:Year necessarily have at least one property restriction related to time:weeks?", "1": "Is it required for time:Year to exhibit some form of time:weeks relationship?", "2": "Can there exist a time:Year without any association to time:weeks via property restrictions?", "3": "Does the existence of a time:Weeks property restriction entail membership in the class time:Year?", "4": "Are all individuals classified under time:Year characterized by having at least one time:Weeks property restriction?", "5": "Can a time:Year entity lack a time:Weeks property restriction?", "6": "Does the definition"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: time:DurationDescription\nDescription: time:DurationDescription is a class representing temporal durations, where each instance is restricted to having at most one value for each of the following properties: time:hours, time:minutes, time:seconds, time:days, time:weeks, and time:years. This ensures that an individual duration description cannot specify more than one value for any temporal unit, maintaining a unique specification for each time component.\nAxiom: {'propertyRestrictions': ['[time:hours max 1]', '[time:seconds max 1]', '[time:weeks max 1]', '[time:days max 1]', '[time:years max 1]', '[time:minutes max 1]', '[time:months max 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of time:DurationDescription necessarily have at least one value for the property time:months?", "1": "Is it required for all entities classified as time:DurationDescription to possess some associated value through the relation time:months?", "2": "Can a time:DurationDescription exist without being related via time:months to any other entity?", "3": "...", "4": "Does time:DurationDescription always include at least one time:months relationship?", "5": "Are there any time:DurationDescriptions that lack a time:months connection?", "6": "Is time:DurationDescription defined such that every occurrence must link to something via time:months?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:weeks\nDescription: The property \"time:weeks\" has no defined characteristics or super-properties. Its domain is restricted to instances of \"time:DurationDescription\", and its range is specified as a decimal value (xsd:decimal). This property is used to indicate the number of weeks associated with a given duration description. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of values are allowed for the â€˜rangeâ€™ of the property â€˜time:weeksâ€™?", "1": "Is it permissible for the â€˜time:weeksâ€™ property to have a value outside of xsd:decimal as its range?", "2": "Which properties have the same â€˜rangeâ€™ specification as â€˜time:weeksâ€™ within this ontology?", "3": "Does the â€˜time:weeksâ€™ property accept any other data type besides xsd:decimal as its output?", "4": "Can the property â€˜time:weeksâ€™ be assigned a value from a set that does not include xsd:decimal?", "5": "What is the explicit definition"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:seconds\nDescription: The property \"time:seconds\" has no declared characteristics or super-properties. Its domain is \"time:DurationDescription\", indicating it applies to duration descriptions, and its range is \"xsd:decimal\", specifying that its values are decimal numbers representing seconds. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every use of the property 'time:seconds' relate to at least one entity classified as 'time:DurationDescription'?", "1": "Is there any instance where the property 'time:seconds' connects two entities, neither of which belongs to 'time:DurationDescription'?", "2": "Can all possible subjects for the property 'time:seconds' be restricted to objects of type 'time:DurationDescription'?", "3": "Does the usage of 'time:seconds' require that both subject and object must fall under 'time:DurationDescription'?", "4": "Are all objects associated via 'time:seconds' necessarily instances of 'time:"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalOverlappedBy\nDescription: The property \"time:intervalOverlappedBy\" has no explicitly defined domain, range, characteristics, or super-properties. It is specified as the inverse of \"time:intervalOverlaps\", indicating that if one interval is overlapped by another, the second interval overlaps the first. No further restrictions or features are defined for this property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does the property 'time:intervalOverlappedBy' have any specified inverses?", "1": "What property is considered the inverse of 'time:intervalOverlappedBy'?", "2": "Is there a direct logical relationship established between 'time:intervalOverlappedBy' and 'time:intervalOverlaps'?", "3": "Next CQ:Is it required that every instance related via 'time:intervalOverlappedBy' must also appear connected through 'time:intervalOverlaps'?", "4": "Can two entities be related via both 'time:intervalOverlappedBy' and its inverse 'time:intervalOverlaps"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalAfter\nDescription: The property \"time:intervalAfter\" has no explicitly defined characteristics, domain, or range restrictions. It does not have any super-properties. Its inverse property is \"time:intervalBefore,\" indicating that if one interval is after another, the second is before the first. This property is used to relate temporal intervals where one occurs after the other.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between â€˜time:intervalAfterâ€™ and â€˜time:intervalBeforeâ€™ according to the ontology?", "1": "If entity A is related to B via â€˜time:intervalAfterâ€™, can we infer that B is related to A via â€˜time:intervalBeforeâ€™?", "2": "Which property serves as the inverse for â€˜time:intervalAfterâ€™ within the ontology?", "3": "Next CQ:Is there any specified subproperty associated with â€˜time:intervalAfterâ€™ in the ontology?", "4": "Does â€˜time:intervalAfterâ€™ have any direct superproperties assigned to it?", "5": "Can you list all properties that are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:timeZone\nDescription: The property \"time:timeZone\" links an instance of time:DateTimeDescription to an instance of tzont:TimeZone. It has no explicitly defined characteristics, super-properties, or inverse properties. This property is used to specify the time zone associated with a particular date-time description.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between time:timeZone and tzont:TimeZone as specified by the ontology?", "1": "If entity A uses time:timeZone and points to entity B, does entity B necessarily belong to the class tzont:TimeZone?", "2": "Is it required for every subject linked via time:timeZone to have at least one object from the class tzont:TimeZone?", "3": "Can any entity other than tzont:TimeZone serve as the value for the property time:timeZone?", "4": "Which entities are permitted as values for the property time:timeZone according to the ontology?", "5": "Does the ontology"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasEnd\nDescription: The property \"time:hasEnd\" links a temporal entity (\"time:TemporalEntity\") to a time instant (\"time:Instant\") indicating its endpoint. It has no defined property characteristics, super-properties, or inverse properties. This property is used to specify when a temporal entity concludes.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:Instant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What entities are permitted as the range for the â€˜time:hasEndâ€™ property?", "1": "Is it correct that any use of â€˜time:hasEndâ€™ must have a value from the class â€˜time:Instantâ€™?", "2": "Which types can serve as the range for the property â€˜time:hasEndâ€™?", "3": "Does â€˜time:hasEndâ€™ require its object to be of type â€˜time:Instantâ€™?", "4": "Can â€˜time:hasEndâ€™ link to values other than those classified under â€˜time:Instantâ€™?", "5": "What classes are allowed as the range for instances of â€˜time:has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalDuring\nDescription: The property \"time:intervalDuring\" relates two instances of time:ProperInterval, indicating that one interval occurs during the other. It has no explicitly defined characteristics, super-properties, or specified inverse property. Both its domain and range are restricted to time:ProperInterval, signifying its use in expressing temporal containment between intervals.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between â€˜time:intervalDuringâ€™ and â€˜time:properIntervalâ€™ as specified in the ontology?", "1": "Can any entity outside of â€˜time:properIntervalâ€™ serve as the subject for the â€˜time:intervalDuringâ€™ property?", "2": "Which types can function as the object within the context of the â€˜time:intervalDuringâ€™ property?", "3": "Is it required that every value associated with â€˜time:intervalDuringâ€™ must also be an instance of â€˜time:properIntervalâ€™?", "4": "Does the ontology restrict the domain of â€˜time:intervalDuringâ€™ exclusively to â€˜time:proper"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalMetBy\nDescription: The property \"time:intervalMetBy\" has no explicitly defined characteristics, domain, or range restrictions, and does not have any super-properties. It is specified as the inverse of \"time:intervalMeets,\" indicating a temporal relation where one interval is met by another. No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of time:intervalMetBy necessarily relate to at least one instance of time:intervalMeets?", "1": "Is it required for time:intervalMetBy to have a corresponding relationship through time:intervalMeets within the ontology?", "2": "Can there exist an entity related via time:intervalMetBy without being linked back through time:intervalMeets?", "3": "Does the ontology allow time:intervalMetBy to associate with entities other than those connected via time:intervalMeets?", "4": "What are the allowed relationships between time:intervalMetBy and time:intervalMeets according to the ontology's"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inDateTime\nDescription: The property \"time:inDateTime\" links an instance of time:Instant to a corresponding time:DateTimeDescription. It has no declared characteristics such as being functional or transitive, and it does not inherit from any super-property or have an inverse property. The domain is restricted to time:Instant, and the range is time:DateTimeDescription, indicating its purpose is to specify the detailed date and time information for a given temporal instant.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:DateTimeDescription'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every use of the property â€˜time:inDateTimeâ€™ require a value of type time:Instant?", "1": "Is it necessary for the subject of â€˜time:inDateTimeâ€™ to be classified as time:Instant?", "2": "Can â€˜time:inDateTimeâ€™ ever relate something other than a time:Instant to a time:DateTimeDescription?", "3": "Does the domain restriction of â€˜time:inDateTimeâ€™ allow values outside of time:Instant?", "4": "What types are permitted as the domain for the property â€˜time:inDateTimeâ€™?", "5": "Which classes can serve as the domain when using â€˜time:inDateTime"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hours\nDescription: The property \"time:hours\" has a domain of \"time:DurationDescription\" and a range of \"xsd:decimal\", indicating it relates a duration description to a decimal value representing hours. It has no explicitly defined characteristics, super-properties, or inverse properties.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between â€˜time:hoursâ€™ and â€˜xsd:decimalâ€™ as specified in the ontology?", "1": "Is every value associated with â€˜time:hoursâ€™ necessarily an instance of â€˜xsd:decimalâ€™?", "2": "Which types are allowed as the range for the property â€˜time:hoursâ€™ according to the ontology?", "3": "Does the property â€˜time:hoursâ€™ have any specified subtypes among numeric data types?", "4": "What are the permitted domains for the property â€˜time:hoursâ€™ within the ontology?", "5": "Can the property â€˜time:hoursâ€™ connect entities outside the class of numeric values?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDateTimeDescription\nDescription: The property \"time:hasDateTimeDescription\" has no special characteristics and is not defined as a sub-property or inverse of any other property. Its domain is restricted to instances of time:DateTimeInterval, and its range is time:DateTimeDescription. This property relates a DateTimeInterval to a DateTimeDescription, indicating the specific date and time details associated with the interval.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:DateTimeDescription'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between â€˜time:hasDateTimeDescriptionâ€™ and â€˜time:DateTimeDescriptionâ€™ according to the ontology?", "1": "If entity A has the property â€˜time:hasDateTimeDescriptionâ€™, what types of entities can B be if A â€˜time:hasDateTimeDescriptionâ€™ B?", "2": "Is it valid for â€˜time:hasDateTimeDescriptionâ€™ to relate an instance from its domain to something outside its specified range?", "3": "Does every value used as the range of â€˜time:hasDateTimeDescriptionâ€™ need to belong to the class â€˜time:DateTimeDescriptionâ€™?", "4": "Can there exist an individual without any â€˜"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:second\nDescription: The property \"time:second\" has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to instances of time:DateTimeDescription, and its range is xsd:decimal. This property is used to associate a DateTimeDescription with a decimal value representing seconds.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value other than xsd:decimal serve as the range for the property time:second?", "1": "Is it required for the range of time:second to be a member of xsd:decimal?", "2": "What types are permitted as the range for the property time:second according to the ontology?", "3": "Next CQ:Is every instance associated with time:second necessarily linked to an element of xsd:decimal?", "4": "Does time:second have any defined restrictions on its range beyond xsd:decimal?", "5": "Can time:second be connected to values outside of the xsd:decimal class?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:minute\nDescription: The property \"time:minute\" relates an individual of the class \"time:DateTimeDescription\" to a non-negative integer value representing the minute component of a date-time description. It has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to \"time:DateTimeDescription\", and its range is restricted to \"xsd:nonNegativeInteger\".\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the superproperties associated with â€˜time:minuteâ€™?", "1": "Is it correct that there are no superproperties specified for â€˜time:minuteâ€™?", "2": "Which properties are classified as subproperties under â€˜time:minuteâ€™?", "3": "Next, I need to know if any other property besides â€˜time:minuteâ€™ serves as a superproperty over â€˜time:minuteâ€™.", "4": "Does â€˜time:minuteâ€™ have any inverseOf relationships established within the ontology?", "5": "Can entities related via â€˜time:minuteâ€™ be connected through another propertyâ€™s inverse relationship?", "6": "What property is designated as the inverseOf â€˜"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDurationDescription\nDescription: The property \"time:hasDurationDescription\" links an instance of time:TemporalEntity to a corresponding time:DurationDescription. It has no defined characteristics, super-properties, or inverse properties. Its domain is restricted to time:TemporalEntity, and its range is limited to time:DurationDescription. This property is used to specify the duration description associated with a temporal entity.\nAxiom: {'characteristics': [], 'domain': ['time:TemporalEntity'], 'range': [], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the logical connections between time:hasDurationDescription and other properties within the ontology?", "1": "If A uses time:hasDurationDescription with B as value, does this imply that B uses time:hasDurationDescription with A as value?", "2": "Which properties have time:hasDurationDescription as their inverse?", "3": "Next Property:time:hasDurationSpecification", "4": "Previous Property:time:hasDuration", "5": "Description:time:hasDurationSpecification is a subproperty of time:hasDurationSpecification. It serves to relate instances of time:TemporalEntity to time:DurationSpecification, specifying which duration specification applies to each"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalStarts\nDescription: The property \"time:intervalStarts\" has no explicitly defined characteristics or super-properties. Its domain and range are both limited to \"time:ProperInterval\", indicating it relates two proper time intervals. This property is used to assert that one proper interval starts another proper interval. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology relate time:intervalStarts to other properties through subPropertyOf?", "1": "Is time:intervalStarts classified as a specialized form of any other property?", "2": "Which properties are considered more general than time:intervalStarts?", "3": "Next Property in the hierarchy of time:intervalStarts:", "4": "Previous Property in the hierarchy of time:intervalStarts:", "5": "What are all parent properties associated with time:intervalStarts?", "6": "Does time:intervalStarts inherit any constraints from its parent property?", "7": "Which entities can serve as subjects for time:intervalStarts given its current"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:after\nDescription: The property \"time:after\" has no explicitly defined characteristics, domain, or range restrictions, and does not have any super-properties. It is specified as the inverse of the property \"time:before,\" indicating that if one entity is related to another via \"time:after,\" the second entity is related to the first via \"time:before.\" No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between â€˜time:afterâ€™ and â€˜time:beforeâ€™ properties?", "1": "If A has â€˜time:afterâ€™ relation to B, can we infer that B has â€˜time:beforeâ€™ relation to A?", "2": "Which property serves as the inverse for â€˜time:afterâ€™ in this context?", "3": "Next CQ:Is there any property other than â€˜time:beforeâ€™ associated as the inverse with â€˜time:afterâ€™?", "4": "Previous CQ:Does every instance linked by â€˜time:afterâ€™ necessarily establish a corresponding link through â€˜time:beforeâ€™?", "5": "Final CQ:Are all"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inXSDDateTime\nDescription: The property \"time:inXSDDateTime\" relates instances of \"time:Instant\" to values of type \"xsd:dateTime\". It has no additional characteristics, super-properties, or inverse properties specified. This property is used to associate a temporal instant with its corresponding XML Schema dateTime representation.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:dateTime'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the inverse relationships defined for the property â€˜time:inXSDDateTimeâ€™?", "1": "If entity A has value B via â€˜time:inXSDDateTimeâ€™, does it hold that B is associated with A through â€˜time:inXSDDateTimeâ€™ as well?", "2": "Which properties have â€˜time:inXSDDateTimeâ€™ as their inverse?", "3": "Next CQ:Is there any other property whose inverse is â€˜time:inXSDDateTimeâ€™ besides itself?", "4": "Does the triple (A, time:inXSDDateTime, B) entail that (B, time:inXSD"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalStartedBy\nDescription: The property \"time:intervalStartedBy\" has no explicitly defined characteristics, domain, or range restrictions, and is not a sub-property of any other property. It is specified as the inverse of \"time:intervalStarts,\" indicating that if an interval is started by another, then the latter starts the former. No additional constraints or relationships are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between â€˜time:intervalStartedByâ€™ and â€˜time:intervalStartsâ€™ according to the ontology?", "1": "If entity A is related via â€˜time:intervalStartedByâ€™ to entity B, does this entail that B is related to A via â€˜time:intervalStartsâ€™?", "2": "Which property is defined as the inverse of â€˜time:intervalStartedByâ€™?", "3": "Next CQ:Is there any property listed as the inverse of â€˜time:intervalStartedByâ€™ in the ontology?", "4": "Does the ontology specify any property as the inverse of both â€˜time:intervalStarted"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:months\nDescription: The property \"time:months\" links an instance of time:DurationDescription to a decimal value representing the number of months. It has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to time:DurationDescription, and its range is xsd:decimal.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value other than xsd:decimal be used as the object for the property time:months?", "1": "Is it required that every use of the property time:months must have an xsd:decimal as its second argument?", "2": "What types are permitted as the range for the property time:months according to the ontology?", "3": "Next CQ:Is there any instance where time:months does not reference an xsd:decimal?", "4": "Does the definition of time:months restrict its objects exclusively to xsd:decimal values?", "5": "Are all possible values associated with time:months necessarily drawn from xsd"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalEquals\nDescription: The property \"time:intervalEquals\" links two individuals of type \"time:ProperInterval\" and asserts that they are equal in terms of their start and end points. It has no additional characteristics, super-properties, or inverse properties defined. Both its domain and range are restricted to \"time:ProperInterval\".\nAxiom: {'characteristics': [], 'domain': [], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology relate time:intervalEquals to other properties through subPropertyOf?", "1": "Is time:intervalEquals classified as a subproperty under any existing property?", "2": "Which properties are recognized as more specific than time:intervalEquals within this structure?", "3": "Next property in hierarchical classification of time:intervalEquals", "4": "Previous property associated via subPropertyOf relationship with time:intervalEquals", "5": "What general property encompasses time:intervalEquals in the ontology hierarchy?", "6": "Can time:intervalEquals serve as the domain for entities related by someProperty?", "7": "Are there any restrictions on the types of entities that can be used"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:years\nDescription: The property \"time:years\" relates instances of \"time:DurationDescription\" to a decimal value representing a duration in years. It does not have explicitly defined characteristics, super-properties, or inverse properties. Its range is restricted to decimal values (xsd:decimal).\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any entity other than time:DurationDescription serve as the subject for the property time:years?", "1": "Is it required that the domain of time:years consists exclusively of time:DurationDescription entities?", "2": "What types of objects are permitted as the domain for the property time:years?", "3": "Does the property time:years have a specified domain beyond time:DurationDescription?", "4": "Can time:years link a time:DurationDescription instance to anything outside its designated range?", "5": "Which classes are allowed as the range for the property time:years?", "6": "Is it necessary for the range of time:years to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:minutes\nDescription: The property \"time:minutes\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"time:DurationDescription,\" indicating that it is intended to relate duration descriptions to a specific value or entity corresponding to minutes. The range of this property is not explicitly specified.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every use of the property 'time:minutes' require at least one subject from the class 'time:DurationDescription'?", "1": "Is it necessary for any object linked via 'time:minutes' to have a value within the decimal data type?", "2": "What are all possible classes that can serve as the domain for the property 'time:minutes'?", "3": "Can an instance without classification under 'time:DurationDescription' ever appear as the subject of 'time:minutes'?", "4": "Does the restriction on the domain of 'time:minutes' exclude entities outside the class 'time:DurationDescription'?", "5": "Are there"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:xsdDateTime\nDescription: The property \"time:xsdDateTime\" has a domain restricted to \"time:DateTimeInterval\" and does not specify a range, characteristics, super-properties, or inverse properties. This property is used to associate instances of DateTimeInterval with additional information, likely a specific date and time value.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeInterval'], 'range': ['xsd:dateTime'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does time:xsdDateTime have any specified inverse property?", "1": "Which properties are declared as inverses for time:xsdDateTime?", "2": "Is there any property other than time:xsdDateTime defined as its inverse in the ontology?", "3": "Next Property:...", "4": "Previous Property:...", "5": "Classification: Property", "6": "Direct Subproperties: None", "7": "Indirect Subproperties: None", "8": "Object Properties: time:xsdDateTime", "9": "Qualifiers: domain [time:DateTimeInterval] range [xsd:dateTime]", "10": "Superproperties: None", "11": "Inverse: None", "12": "Characteristics: None", "13": "Description: This property relates entities of type time"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:unitType\nDescription: The property \"time:unitType\" has no specified characteristics, domain, super-properties, or inverse property. Its range is restricted to instances of \"time:TemporalUnit\", indicating that it associates a subject with a temporal unit.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['time:TemporalUnit'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can time:unitType be used as a subproperty within another property?", "1": "Is every instance of time:unitType also considered an instance of some broader property?", "2": "Which properties are defined as subproperties under time:unitType?", "3": "Next level parent property for time:unitType is...", "4": "Does time:unitType inherit all characteristics from its parent property?", "5": "What general property encompasses time:unitType within its hierarchy?", "6": "Is there any property that serves as a parent to time:unitType?", "7": "Which properties have time:unitType listed among their subproperties?", "8": "Are there any"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:month\nDescription: The property \"time:month\" has no explicitly defined characteristics, domain restrictions, super-properties, or inverse properties.  \nIts range is restricted to values of data type xsd:gMonth, indicating it is used to relate an entity to a specific month in the Gregorian calendar.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:gMonth'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value other than an xsd:gMonth be considered as the range for the property time:month?", "1": "Is it required for all instances of time:month to have a value from the set xsd:gMonth as their range?", "2": "What types are permitted as the range for the property time:month according to its definition?", "3": "Does time:month ever link to anything outside of xsd:gMonth?", "4": "Are there any entities not classified as xsd:gMonth that could serve as the range for time:month?", "5": "Can time:month have a range that is not an instance of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hour\nDescription: The property \"time:hour\" has \"time:DateTimeDescription\" as its domain, indicating it is used with instances of date and time descriptions. No explicit range, characteristics, super-properties, or inverse properties are defined. This property represents the hour component within a temporal description.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does the property 'time:hour' have any specified subproperties?", "1": "Which properties are classified as subproperties under 'time:hour'?", "2": "Is there any property that serves as a parent for 'time:hour' within the ontology?", "3": "Next level parent property of 'time:hour'", "4": "What broader property does 'time:hour' fall under according to the ontology structure?", "5": "Does every use of 'time:hour' also involve the use of its parent property?", "6": "Which entities can serve as the subject when using the property at the next higher hierarchical level?", "7": "Are there other properties"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalOverlaps\nDescription: The property \"time:intervalOverlaps\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"time:ProperInterval,\" indicating that it is used to relate proper time intervals to other entities. No specific range is defined for this property.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of objects can serve as the subject of the property â€˜time:intervalOverlapsâ€™?", "1": "Is every instance associated with the property â€˜time:intervalOverlapsâ€™ necessarily also related through the property â€˜time:properIntervalOverlapâ€™?", "2": "Which properties are declared as inverses of â€˜time:intervalOverlapsâ€™ within the ontology?", "3": "Next CQ:Is there any object that could have both a â€˜time:intervalOverlapsâ€™ relation and a â€˜time:properIntervalOverlapâ€™ relation simultaneously?", "4": "Can two entities be connected via â€˜time:intervalOverlapsâ€™ without being linked by"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalFinishedBy\nDescription: The property \"time:intervalFinishedBy\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates that its usage is unrestricted by ontology axioms and is not semantically linked to other properties within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['time:intervalFinishes']}\nGenerated CQs:", "generated_outputs": {"0": "Can the subject of â€˜time:intervalFinishedByâ€™ always have an object related to it through â€˜time:intervalFinishesâ€™?", "1": "Does every instance connected by â€˜time:intervalFinishedByâ€™ necessarily participate as a subject in â€˜time:intervalFinishesâ€™?", "2": "Is there any entity that can serve as both the subject of â€˜time:intervalFinishedByâ€™ and the object of â€˜time:intervalFinishesâ€™ simultaneously?", "3": "Next CQ:Is the relationship between subjects of â€˜time:intervalFinishedByâ€™ and objects of â€˜time:intervalFinishesâ€™ symmetrical?", "4": "Can an"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalContains\nDescription: The property \"time:intervalContains\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate a temporal interval to another interval or event that it contains.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['time:intervalDuring']}\nGenerated CQs:", "generated_outputs": {"0": "What logical connection exists between â€˜time:intervalContainsâ€™ and â€˜time:intervalDuringâ€™ within the ontology?", "1": "If entity A contains B via â€˜time:intervalContainsâ€™, can we infer that B occurs during A using â€˜time:intervalDuringâ€™?", "2": "Which property is considered the inverse of â€˜time:intervalContainsâ€™ in this ontology?", "3": "Next CQ:Is there any subproperty defined for â€˜time:intervalContainsâ€™ in the ontology?", "4": "What higher-level relationships are associated with â€˜time:intervalContainsâ€™?", "5": "Can â€˜time:intervalDuringâ€™ be used as a substitute for â€˜"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:dayOfYear\nDescription: The property \"time:dayOfYear\" has no specific characteristics, no explicit domain restrictions, and no defined super-properties. Its range is restricted to non-negative integers (xsd:nonNegativeInteger), indicating that it is used to represent the day of the year as a non-negative integer value. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every use of the property 'time:dayOfWeek' require the presence of 'time:dayOfYear'?", "1": "Can an instance have 'time:dayOfWeek' without also having 'time:dayOfYear'?", "2": "Is 'time:dayOfWeek' necessarily associated with some value of 'time:dayOfYear'?", "3": "Does 'time:dayOfWeek' always appear within the context of 'time:dayOfYear'?", "4": "Is there any scenario where 'time:dayOfWeek' exists independently of 'time:dayOfYear'?", "5": "Are all entities connected via 'time:dayOfWeek' also related through 'time"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasBeginning\nDescription: The property \"time:hasBeginning\" does not have specified characteristics, domain restrictions, super-properties, or inverse properties. Its range is limited to individuals of type \"time:Instant,\" indicating it associates a subject with a temporal instant marking its beginning.\nAxiom: {'characteristics': [], 'domain': ['time:TemporalEntity'], 'range': ['time:Instant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any entity other than time:TemporalEntity serve as the subject for the property time:hasBeginning?", "1": "Is there a time:TemporalEntity required as the domain for the time:hasBeginning relationship?", "2": "What entities are allowed as the domain for the property time:hasBeginning?", "3": "Next CQ:Is it necessary for every instance associated via time:hasBeginning to belong to the class time:TemporalEntity?", "4": "Does the property time:hasBeginning restrict its subjects to time:TemporalEntity exclusively?", "5": "Are all subjects linked by time:hasBeginning instances of time:TemporalEntity?", "6": "Can"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:dayOfWeek\nDescription: The property \"time:dayOfWeek\" has no explicitly defined characteristics or super-properties. Its domain is restricted to instances of \"time:DateTimeDescription\", indicating it is used to associate a date-time description with its corresponding day of the week. No specific range or inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['time:DayOfWeek'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the properties that serve as inverses for â€˜time:dayOfWeekâ€™?", "1": "If entity A has the property â€˜time:dayOfWeekâ€™ value B, does B have the property â€˜time:dayOfWeekâ€™ inverse value A?", "2": "Which property is specified as the inverse of â€˜time:dayOfWeekâ€™ in the ontology?", "3": "Next CQ:Is there any property other than â€˜time:dayOfWeekâ€™ that has the inverse relationship with itself?", "4": "Does every instance of â€˜time:dayOfWeekâ€™ possess at least one inverse property link?", "5": "Can two different entities be related through an inverse"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:year\nDescription: The property \"time:year\" has no specified characteristics or super-properties. Its domain is restricted to instances of time:DateTimeDescription, but no range is defined. This property is intended to associate a DateTimeDescription with a corresponding year value. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:gYear'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does time:year have any specified inverse property?", "1": "Which properties are declared as inverses for time:year within the ontology?", "2": "Is there any entity related through time:year and its inverse property?", "3": "Next CQ:Is time:year directly linked to at least one other property via its inverseOf relation?", "4": "Previous CQ:What other properties does time:year share as inverses in this context?", "5": "Can time:year exist without being connected to another property via its inverseOf relationship?", "6": "Does time:year participate in a direct inverse association with another property?", "7": "Are all entities"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:days\nDescription: The property \"time:days\" has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to \"time:DurationDescription\", indicating that it is used to associate a duration description with an unspecified value representing days. The range of this property is not explicitly defined.\nAxiom: {'characteristics': [], 'domain': ['time:DurationDescription'], 'range': ['xsd:decimal'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does time:days have any specific restrictions regarding its use as a subproperty?", "1": "What are all possible superproperties for time:days within the ontology?", "2": "Is time:days classified under any broader property categories according to the ontology structure?", "3": "Next-level parent property of time:days:", "4": "Which properties are considered subproperties of time:days?", "5": "Does the ontology define any direct subproperties for time:days beyond those inherited from higher levels?", "6": "How does the hierarchy of time:days relate to other properties within the ontology?", "7": "Is there a more general property associated with time:days in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalMeets\nDescription: The property \"time:intervalMeets\" has no specified property characteristics or super-properties. Its domain is restricted to instances of \"time:ProperInterval\", indicating that it is used to relate proper time intervals to other entities. No range or inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value associated with the property â€˜time:intervalMeetsâ€™ also serve as the subject for the same property?", "1": "Is there any instance where the object related via â€˜time:intervalMeetsâ€™ cannot act as the subject for this property?", "2": "What properties have â€˜time:intervalMeetsâ€™ as their inverse?", "3": "Next CQ:Is it required that if A â€˜time:intervalMeetsâ€™ B, then B â€˜time:intervalMeetsâ€™ A?", "4": "Can we find two distinct individuals X and Y such that X â€˜time:intervalMeetsâ€™ Y but Y does not"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:week\nDescription: The property \"time:week\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"time:DateTimeDescription,\" indicating that it is used to associate a week-related value or resource with a date-time description. No range is specified.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:nonNegativeInteger'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can time:week have a value outside the set of non-negative integers as its range?", "1": "What types are permitted as the range for values assigned via time:week?", "2": "Does every instance of time:week necessarily correspond to some non-negative integer within its defined range?", "3": "Is there any non-negative integer not included in the range of time:week?", "4": "Which entities can serve as the range for time:week according to its specification?", "5": "Can time:week have a range that includes negative numbers?", "6": "Is the range of time:week constrained to include only non-negative integers?", "7": "Are all"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalBefore\nDescription: The property \"time:intervalBefore\" has no explicitly defined characteristics or domain restrictions. Its range is restricted to \"time:ProperInterval,\" indicating that it relates an entity to a proper time interval. It is specified as a sub-property of \"time:before,\" inheriting its semantic implications. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': ['time:before'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How are the properties â€˜time:intervalBeforeâ€™ and â€˜time:intervalAfterâ€™ related through their respective superproperties?", "1": "Which properties are considered subproperties under â€˜time:intervalAfterâ€™?", "2": "Is every instance associated with â€˜time:intervalAfterâ€™ necessarily linked via â€˜time:intervalAfterâ€™ to some other entity?", "3": "Next CQ:Is there any individual that can serve as the subject for both â€˜time:intervalBeforeâ€™ and â€˜time:intervalAfterâ€™ properties?", "4": "Can â€˜time:intervalBeforeâ€™ have â€˜time:intervalAfterâ€™ as its object without being related back through the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:before\nDescription: The property \"time:before\" is a transitive property used to relate temporal entities, as indicated by its range restriction to \"time:TemporalEntity.\" There are no explicit domain constraints, no specified super-properties, and no defined inverse property. This property is typically used to assert that one temporal entity precedes another in time.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['time:TemporalEntity'], 'range': ['time:TemporalEntity'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'time:before' be used with subjects other than those classified as 'time:TemporalEntity'?", "1": "Is it required for every use of 'time:before' to have at least one subject from the class 'time:TemporalEntity'?", "2": "What types of entities are allowed as domains for the property 'time:before'?", "3": "Next CQ:Is there any entity outside the category of 'time:TemporalEntity' that can serve as the domain for 'time:before'?", "4": "Does the definition of 'time:before' restrict its application solely to instances of 'time:TemporalEntity'?", "5": "Can objects unrelated"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:inside\nDescription: The property \"time:inside\" has no specified characteristics, domain, super-properties, or inverse properties. Its range is restricted to instances of \"time:Instant\", indicating that it relates subjects to a specific temporal instant.\nAxiom: {'characteristics': [], 'domain': ['time:Interval'], 'range': ['time:Instant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any entity other than time:Interval serve as the subject for the property time:inside?", "1": "Is it required for the object of the time:inside property to be an instance of time:Interval?", "2": "What types of entities are permitted as the domain for the time:inside property?", "3": "Does the use of time:inside as a property necessarily involve at least one time:Interval as its subject?", "4": "Which classes have the time:Interval as their domain according to the ontology's property constraints?", "5": "Are there any entities outside of time:Interval that can function as the domain for time:inside"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:intervalFinishes\nDescription: The property \"time:intervalFinishes\" has no specified characteristics or domain restrictions. Its range is limited to instances of \"time:ProperInterval,\" indicating it relates an entity to a proper time interval that it finishes. There are no super-properties or inverse properties defined.\nAxiom: {'characteristics': [], 'domain': ['time:ProperInterval'], 'range': ['time:ProperInterval'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the subject of the 'time:intervalFinishes' property always be classified as a type of time:ProperInterval?", "1": "Is every instance associated with 'time:intervalFinishes' required to have at least one value from the class time:ProperInterval?", "2": "Which entities can serve as the domain for the 'time:intervalFinishes' relationship according to its definition?", "3": "Does the usage of 'time:intervalFinishes' restrict the potential subjects to those categorized under time:ProperInterval?", "4": "What types of values are allowed for the 'time:intervalFinishes'"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:day\nDescription: The property \"time:day\" has no special characteristics or super-properties. Its domain is restricted to instances of \"time:DateTimeDescription,\" indicating that it is used to associate a day value with a temporal description. There are no specified range constraints or inverse properties.\nAxiom: {'characteristics': [], 'domain': ['time:DateTimeDescription'], 'range': ['xsd:gDay'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does the property â€˜time:dayâ€™ have any specified inverse relationship defined within the ontology?", "1": "Which properties are declared as inverses for â€˜time:dayâ€™?", "2": "Is there any property other than â€˜time:dayâ€™ associated with an inverse property in the ontology?", "3": "Next CQ:Is â€˜time:dayâ€™ classified under the subPropertyOf category in the ontology?", "4": "What higher-level properties does â€˜time:dayâ€™ fall under according to the ontology structure?", "5": "Previous CQ:Is every instance of â€˜time:dayâ€™ also considered an instance of some subproperty of â€˜time:day"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExerciseSummary\nDescription: ExerciseSummary is a subclass of DaySummary that encapsulates the summary of exercise activities recorded for a specific day. Members of this class must have exactly one value each for exerciseStartTime (of type time:Instant), distanceTravelled (xsd:double), strideLength (xsd:double), exerciseDuration (time:DurationDescription), walkSpeed (xsd:double), heartRate (xsd:double), exerciseIntensity (rdfs:Literal), and accelerometerCountsPerMinute (xsd:int). Each of these properties is also restricted to values of the specified type, ensuring strict data consistency for representing exercise-session summaries.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[exerciseStartTime only time:Instant]', '[distanceTravelled only xsd:double]', '[exerciseDuration only time:DurationDescription]', '[walkSpeed exactly 1 xsd:double]', '[exerciseDuration exactly 1 time:DurationDescription]', '[heartRate only xsd:double]', '[heartRate exactly 1 xsd:double]', '[walkSpeed only xsd:double]', '[exerciseIntensity exactly 1]', '[exerciseStartTime exactly 1 time:Instant]', '[strideLength only xsd:double]', '[distanceTravelled exactly 1 xsd:double]', '[accelerometerCountsPerMinute exactly 1 xsd:int]', '[exerciseIntensity only rdfs:Literal]', '[accelerometerCountsPerMinute only xsd:int]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every ExerciseSummary include at least one property restriction specifying an exact value for acceleratorCountPerMinute of type xsd:int?", "1": "Is it required that ExerciseSummary has exactly one property restriction where the subject is acceleratorCountPerMinute and its object is an instance of xsd:int?", "2": "Can an ExerciseSummary exist without having any property restriction that specifies an exact xsd:int value for acceleratorCountPerMinute?", "3": "Next, does ExerciseSummary always possess some property restriction such that the property is acceleratorCountPerMinute and the value is of type xsd:int?", "4": "Does ExerciseSummary necessarily include at least one"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialSummary\nDescription: SocialSummary is defined as a subclass of DaySummary, representing a daily aggregation of social interaction metrics. Members of this class are characterized by the presence of specific numeric properties: each individual must have exactly one value (of type xsd:int) specified for the number of social interactions, face-to-face conversations, phone conversations, and communicative attempts. Additionally, these properties are restricted to accept only integer values. This formalization ensures that every SocialSummary instance provides an unambiguous, integer-based summary of key social activities occurring within a single day.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[numberOfSocialInteractions only xsd:int]', '[numberOfFaceToFaceConversations only xsd:int]', '[numberOfPhoneConversations exactly 1 xsd:int]', '[numberOfCommunicativeAttempts exactly 1 xsd:int]', '[numberOfCommunicativeAttempts only xsd:int]', '[numberOfPhoneConversations only xsd:int]', '[numberOfFaceToFaceConversations exactly 1 xsd:int]']}\nGenerated CQs:", "generated_outputs": {"0": "Does SocialSummary require at least one property restriction involving numberOfPhoneConversations?", "1": "Is it necessary for any instance of SocialSummary to possess a value for the property numberOfPhoneConversations?", "2": "Can a SocialSummary exist without having a value assigned to its numberOfPhoneConversations property?", "3": "Next CQ:Is every SocialSummary associated with some value through the numberOfPhoneConversations property?", "4": "Does the definition of SocialSummary specify that all instances must have a valid value linked via numberOfPhoneConversations?", "5": "Previous CQ:Are there any SocialSummary entities lacking a value for the numberOfPhoneConversations property"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ADLProblem\nDescription: ADLProblem is defined as a subclass of Problem. This means every instance of ADLProblem is also an instance of Problem, establishing a hierarchical relationship where ADLProblem specifies a more specialized type of problem related to activities of daily living (ADL). No further property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under the class Problem, including ADLProblem?", "1": "Is ADLProblem categorized as a kind of Problem?", "2": "What broader classes does ADLProblem inherit from within the ontology?", "3": "Next level up which includes ADLProblem is Problem", "4": "Which entities are classified as subtypes of Problem, such as ADLProblem?", "5": "Does ADLProblem represent a specialization of the general concept Problem?", "6": "To what higher-level concepts does ADLProblem pertain?", "7": "Under which overarching categories does ADLProblem exist?", "8": "Is it accurate to say that ADLProblem is encompassed by"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExerciseProblem\nDescription: ExerciseProblem is defined as a subclass of Problem. This means that every ExerciseProblem is considered a type of Problem, inheriting all characteristics of the Problem class. No additional distinguishing axioms or property restrictions are specified for ExerciseProblem in the current definition.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader classes encompass ExerciseProblem?", "1": "Is ExerciseProblem categorized under the general concept of Problem?", "2": "What subclasses fall within the category of Problem, specifically including ExerciseProblem?", "3": "Next higher-level classification for ExerciseProblem:", "4": "Does ExerciseProblem represent a more specific form of Problem?", "5": "Which entities are classified as subtypes of Problem, such as ExerciseProblem?", "6": "Can ExerciseProblem be regarded as a special kind of Problem?", "7": "To which overarching categories does ExerciseProblem belong?", "8": "Is it accurate to say that ExerciseProblem is included among the types of Problem?", "9": "What are the direct superclasses associated with"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodProblem\nDescription: MoodProblem is defined as a subclass of Problem, indicating that any instance of MoodProblem is also an instance of Problem. This classification establishes MoodProblem as a specific type of problem, but does not currently provide further distinguishing characteristics beyond its placement in the hierarchy.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "generated_outputs": {"0": "Which specialized types fall under the category of Problem, including MoodProblem?", "1": "What broader categories encompass MoodProblem within the ontology?", "2": "Is MoodProblem classified as a kind of Problem?", "3": "Next higher-level concept for MoodProblem is which class?", "4": "Which problems are more specific than Problem, such as MoodProblem?", "5": "Does every MoodProblem belong to the set of Problems?", "6": "How does the hierarchy relate MoodProblem to general Problem?", "7": "Which entities are subclasses under Problem, including MoodProblem?", "8": "Is MoodProblem categorized under Problem in the ontology structure?", "9": "To what parent classes does MoodProblem pertain"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepProblem\nDescription: SleepProblem is defined as a subclass of Problem, representing a specific category of problems related to sleep. Any individual classified as a SleepProblem is, by definition, also a Problem, inheriting all general properties and restrictions of the Problem class but specializing them to issues involving sleep.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "generated_outputs": {"0": "What are the broader classes encompassing SleepProblem?", "1": "Which subclasses fall under Problem, such as SleepProblem?", "2": "Is SleepProblem categorized within the hierarchy of Problem?", "3": "Next higher-level concept for SleepProblem within the ontology is which one?", "4": "Does SleepProblem represent a type of Problem?", "5": "Which superclasses does SleepProblem inherit from?", "6": "Is Problem the overarching category under which SleepProblem is organized?", "7": "What more general classifications include SleepProblem?", "8": "Which entities are considered specializations of Problem, such as SleepProblem?", "9": "To what parent categories does SleepProblem belong?", "10": "Can any instance of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialProblem\nDescription: SocialProblem is defined as a subclass of Problem. This means every social problem is recognized as a problem, but with distinguishing features or contexts that are social in nature. The axiom places SocialProblem within the hierarchy of problems, ensuring that social problems inherit all general characteristics of problems while being specifically identified for their relevance to societal issues.\nAxiom: {'subClassOf': ['Problem']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under the category of Problem, including SocialProblem?", "1": "Is SocialProblem classified as a type of Problem?", "2": "What broader categories encompass SocialProblem?", "3": "Next level up from SocialProblem within the hierarchy is which class?", "4": "Does SocialProblem belong to the set of Problem classifications?", "5": "Which higher-level concepts include SocialProblem as a more specific instance?", "6": "Can SocialProblem be seen as a kind of Problem?", "7": "Which entities are categorized under Problem, such as SocialProblem?", "8": "How does SocialProblem relate to the overarching concept of Problem?", "9": "Is Problem a direct supercategory for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ADLSummary\nDescription: ADLSummary is a subclass of DaySummary. This means that every instance of ADLSummary is also an instance of DaySummary and inherits its properties and constraints. No additional axioms or distinguishing features are specified beyond its hierarchical relationship.\nAxiom: {'subClassOf': ['DaySummary']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific summaries fall under the category of DaySummary?", "1": "What broader summary types encompass ADLSummary as a subtype?", "2": "Is ADLSummary classified as a type of DaySummary?", "3": "Next level up from ADLSummary within the hierarchy includes which class?", "4": "Which summaries have ADLSummary as their more general category?", "5": "Does ADLSummary belong to the group defined by DaySummary?", "6": "Under what higher-level summaries does ADLSummary fall?", "7": "Which classes include ADLSummary as one of their subtypes?", "8": "What categories does ADLSummary"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ExcessiveNapProblem\nDescription: ExcessiveNapProblem is defined as a subclass of NappingProblem. It represents a specific type of napping issue characterized by an unusually high frequency or duration of naps, distinguishing it from other forms of napping problems.\nAxiom: {'subClassOf': ['NappingProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which more general problem classes include ExcessiveNapProblem?", "1": "Is ExcessiveNapProblem categorized under the broader class of NappingProblem?", "2": "What specific types are encompassed within NappingProblem, such as ExcessiveNapProblem?", "3": "Next higher-level category for ExcessiveNapProblem", "4": "Does ExcessiveNapProblem fall under the general classification of NappingProblem?", "5": "Which problems are classified as subtypes of NappingProblem, including ExcessiveNapProblem?", "6": "To which overarching problem categories does ExcessiveNapProblem belong?", "7": "Is ExcessiveNapProblem recognized as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FailureToPrepareMeal\nDescription: FailureToPrepareMeal is defined as a subclass of MealProblem, representing a specific type of problem wherein a meal is not successfully prepared. All instances of FailureToPrepareMeal are, by definition, also considered instances of MealProblem, aligning this class within the broader context of meal-related issues.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which types of MealProblem encompass FailureToPrepareMeal as a specialized category?", "1": "Is FailureToPrepareMeal categorized under MealProblem?", "2": "What more general classes does FailureToPrepareMeal belong to according to the ontology?", "3": "Next level up from FailureToPrepareMeal within the hierarchy is what group?", "4": "Does FailureToPrepareMeal fall under the broader classification of MealProblem?", "5": "Which problems are classified as subtypes of MealProblem, such as FailureToPrepareMeal?", "6": "How does the ontology organize FailureToPrepareMeal in relation to MealProblem?", "7": "Is FailureToPrepareMeal a direct or indirect"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InappropriateMealDuration\nDescription: InappropriateMealDuration is defined as a subclass of MealProblem. This class represents meal-related issues specifically concerning the duration of meals. Any instance of InappropriateMealDuration is inherently a type of MealProblem, indicating that problems related to the amount of time spent during meals fall under this category.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are encompassed within MealProblem, such as InappropriateMealDuration?", "1": "What broader problem categories does InappropriateMealDuration inherit from?", "2": "Does every InappropriateMealDuration represent a kind of MealProblem?", "3": "Next level up in classification for InappropriateMealDuration is which group?", "4": "Is MealProblem the more general concept that encompasses InappropriateMealDuration?", "5": "Which meal-related issues are classified as subtypes of MealProblem, including InappropriateMealDuration?", "6": "To what higher-level meal problems does InappropriateMealDuration belong?", "7": "Is it accurate to say that all instances of Inappropriate"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InappropriateMealLocation\nDescription: InappropriateMealLocation is a subclass of MealProblem. This class represents issues or problems specifically related to unsuitable or improper locations for meals. Every instance of InappropriateMealLocation is also considered a type of MealProblem, highlighting its role in categorizing location-based meal issues.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are classified under MealProblem, including InappropriateMealLocation?", "1": "What broader categories encompass InappropriateMealLocation within the context of meal-related issues?", "2": "Is InappropriateMealLocation categorized as a kind of MealProblem?", "3": "Next level up in hierarchy from InappropriateMealLocation includes which problem types?", "4": "Does InappropriateMealLocation fall under the general category of MealProblem?", "5": "Which meal-related issue subtypes are included within MealProblem, such as InappropriateMealLocation?", "6": "Can every InappropriateMealLocation instance be identified as a MealProblem?", "7": "How does the classification structure relate In"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterruptedMeal\nDescription: InterruptedMeal is a subclass of MealProblem, indicating that it represents a specific type of issue arising during a meal. Members of this class are characterized as meal-related problems where the meal is disrupted or not completed as intended. This formalization ensures that any instance of InterruptedMeal also qualifies as a MealProblem, distinguishing it from other meal-related issues by its defining feature of interruption.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which types of MealProblem encompass InterruptedMeal as a more specific category?", "1": "Is every InterruptedMeal classified under the broader category of MealProblem?", "2": "What higher-level classes does InterruptedMeal fall within?", "3": "Next level up in hierarchy for InterruptedMeal: MealProblem", "4": "Does InterruptedMeal represent a specialization of MealProblem?", "5": "Which meal-related issues are categorized as subtypes of MealProblem, including InterruptedMeal?", "6": "Is InterruptedMeal recognized as a kind of MealProblem?", "7": "Under which general categories is InterruptedMeal organized within the ontology?", "8": "Which entities are considered subclasses of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MissedMeal\nDescription: MissedMeal is defined as a subclass of MealProblem, meaning it represents a specific type of problem related to meals. Any instance of MissedMeal is, by definition, also an instance of MealProblem. This classification is used to denote situations where a meal is not consumed as expected.\nAxiom: {'subClassOf': ['MealProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which MealProblems are more specific than MealProblem itself, such as MissedMeal?", "1": "Is every MissedMeal categorized under the broader class of MealProblem?", "2": "What higher-level classes encompass MissedMeal within their hierarchy?", "3": "Next level up from MissedMeal in the ontology is what class?", "4": "Does MissedMeal fall under the general category of MealProblem?", "5": "Which problems are classified as subtypes of MealProblem, including MissedMeal?", "6": "Under which overarching issue categories does MissedMeal fit?", "7": "Is MissedMeal included among the subcategories of MealProblem?", "8": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FragmentedSleepProblem\nDescription: FragmentedSleepProblem is a subclass of InterruptedSleepProblem, representing a specific type of sleep disturbance characterized by sleep fragmentation. This condition involves frequent interruptions or arousals during sleep, leading to broken or non-continuous sleep.\nAxiom: {'subClassOf': ['InterruptedSleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass FragmentedSleepProblem within the ontology?", "1": "Which problems are classified as more specific instances of InterruptedSleepProblem, such as FragmentedSleepProblem?", "2": "Is FragmentedSleepProblem categorized under InterruptedSleepProblem?", "3": "Next level up from FragmentedSleepProblem in the hierarchy is which group?", "4": "What other subclasses fall under InterruptedSleepProblem alongside FragmentedSleepProblem?", "5": "Does FragmentedSleepProblem belong to the InterruptedSleepProblem class?", "6": "Which general problem types include FragmentedSleepProblem as a specialized form?", "7": "Under what overarching problems does FragmentedSleepProblem fall"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nocturia\nDescription: Nocturia is defined as a subclass of InterruptedSleepProblem. Individuals with nocturia typically experience interrupted sleep due to visiting the bathroom more than twice during the night. This classification formalizes nocturia as a specific type of sleep disturbance characterized by frequent nighttime urination.\nAxiom: {'subClassOf': ['InterruptedSleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader classes does Nocturia fall under within the domain of sleep disorders?", "1": "Is Nocturia categorized as a kind of InterruptedSleepProblem?", "2": "What are the subclasses encompassed by InterruptedSleepProblem, specifically including Nocturia?", "3": "Next tier parent class for Nocturia in the hierarchy of sleep issues", "4": "Which general problem types include Nocturia as a specific instance?", "5": "Does every Nocturia case also represent an InterruptedSleepProblem?", "6": "How does the hierarchy relate Nocturia to other forms of InterruptedSleepProblem?", "7": "Can Nocturia be classified under"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HighStressLevel\nDescription: HighStressLevel is defined as a subclass of MoodProblem, indicating that all individuals classified as HighStressLevel are also considered to have a mood-related problem. This formalization groups HighStressLevel within the broader category of mood issues for more precise reasoning and classification. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['MoodProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level classes does HighStressLevel belong to?", "1": "Is every instance of HighStressLevel categorized under MoodProblem?", "2": "What subclasses exist within MoodProblem, including HighStressLevel?", "3": "Next level up from HighStressLevel in the hierarchy is which class?", "4": "Does HighStressLevel fall under the broader grouping of MoodProblem?", "5": "Which entities are classified as subtypes of MoodProblem, such as HighStressLevel?", "6": "To what overarching categories does HighStressLevel pertain?", "7": "Is HighStressLevel encompassed by the concept of MoodProblem?", "8": "What"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SelfReportedLowMood\nDescription: SelfReportedLowMood is defined as a subclass of MoodProblem, indicating that all individuals classified under SelfReportedLowMood are also considered types of MoodProblem. This formalization implies that SelfReportedLowMood represents a specific form or instance of mood problem, characterized by being self-reported rather than externally assessed.\nAxiom: {'subClassOf': ['MoodProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall within the category of MoodProblem, including SelfReportedLowMood?", "1": "What broader categories does SelfReportedLowMood belong to according to its definition?", "2": "Is SelfReportedLowMood categorized as a type of MoodProblem?", "3": "Next higher-level classification for SelfReportedLowMood within the hierarchy is what?", "4": "Does every SelfReportedLowMood instance also represent a kind of MoodProblem?", "5": "Which more general concepts encompass SelfReportedLowMood in this context?", "6": "How does SelfReportedLowMood relate structurally to MoodProblem in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientAccelerometerCounts\nDescription: InsufficientAccelerometerCounts is defined as a subclass of ExerciseProblem. This class represents a specific type of exercise problem where the measured accelerometer counts are lower than required or expected levels, indicating an issue with the quantity or quality of motion captured during exercise activities.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific problems fall under the category of ExerciseProblem, such as InsufficientAccelerometerCounts?", "1": "What broader categories encompass InsufficientAccelerometerCounts within the context of exercise-related issues?", "2": "Is InsufficientAccelerometerCounts classified as a type of ExerciseProblem?", "3": "Next-level subclasses of ExerciseProblem include which types, specifically?", "4": "Does every instance of InsufficientAccelerometerCounts belong to the general group of ExerciseProblem?", "5": "Which more general problem categories does InsufficientAccelerometerCounts inherit from?", "6": "Can an InsufficientAccelerometerCounts problem also be considered an ExerciseProblem?", "7": "How does the hierarchy"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ShortStrideLength\nDescription: ShortStrideLength is defined as a subclass of ExerciseProblem. This indicates that it represents a specific type of issue encountered during exercise, categorized under general exercise problems. No further constraints or distinguishing characteristics are specified.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass ShortStrideLength within the hierarchy?", "1": "Is ShortStrideLength classified as a more specific instance of ExerciseProblem?", "2": "Which subclasses fall under the category of ExerciseProblem, including ShortStrideLength?", "3": "Next level up from ShortStrideLength in the classification is what group?", "4": "Does ShortStrideLength belong to the group of ExerciseProblem?", "5": "Under which higher-level classes is ShortStrideLength organized?", "6": "Which entities are considered subtypes of ExerciseProblem, such as ShortStrideLength?", "7": "What is the most general class that ShortStrideLength is associated with?", "8": "Is ExerciseProblem a direct"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SlowWalkSpeed\nDescription: SlowWalkSpeed is defined as a subclass of ExerciseProblem, indicating that it represents a specific type of problem or difficulty related to walking at a slow speed. Members of this class are considered instances where an individual's slow walking speed is identified as an exercise-related issue.\nAxiom: {'subClassOf': ['ExerciseProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass SlowWalkSpeed within the hierarchy?", "1": "Which subclasses fall under ExerciseProblem, specifically including SlowWalkSpeed?", "2": "Does SlowWalkSpeed represent a more specific instance of ExerciseProblem?", "3": "Next level parent category for SlowWalkSpeed is which?", "4": "Is ExerciseProblem a general concept that includes SlowWalkSpeed as a member?", "5": "Which higher-level categories does SlowWalkSpeed belong to?", "6": "What concepts are categorized directly below ExerciseProblem, such as SlowWalkSpeed?", "7": "Is every instance of SlowWalkSpeed also classified as an ExerciseProblem?", "8": "Which problems are included as subtypes under Exercise"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientFaceToFaceInteraction\nDescription: InsufficientFaceToFaceInteraction is defined as a subclass of SocialProblem. This class represents social problems that arise specifically from a lack of direct, in-person interactions between individuals. Any instance of InsufficientFaceToFaceInteraction is, by definition, also an instance of SocialProblem, indicating its relevance within the broader context of social issues.\nAxiom: {'subClassOf': ['SocialProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What specific subclasses are encompassed by SocialProblem, including InsufficientFaceToFaceInteraction?", "1": "Is every InsufficientFaceToFaceInteraction classified under the category of SocialProblem?", "2": "Which more general problem categories does InsufficientFaceToFaceInteraction fall under?", "3": "Next level up from InsufficientFaceToFaceInteraction in the hierarchy is what type of problem?", "4": "Does InsufficientFaceToFaceInteraction represent a subset of SocialProblem or not?", "5": "What other kinds of problems are categorized as subtypes of SocialProblem, such as InsufficientFaceToFaceInteraction?", "6": "Is it accurate to state that all"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InsufficientTelephoneInteraction\nDescription: InsufficientTelephoneInteraction is defined as a subclass of SocialProblem. This means that every instance of InsufficientTelephoneInteraction is also an instance of SocialProblem, situating it within the broader category of issues impacting social well-being. No further property restrictions or disjointness axioms are specified, so its definition relies solely on its classification as a type of social problem.\nAxiom: {'subClassOf': ['SocialProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Does InsufficientTelephoneInteraction fall under the broader category of SocialProblem?", "1": "What specific problems are classified as subclasses of SocialProblem, including InsufficientTelephoneInteraction?", "2": "Which higher-level categories encompass InsufficientTelephoneInteraction?", "3": "Next level up from InsufficientTelephoneInteraction in the hierarchy is which group?", "4": "Is InsufficientTelephoneInteraction categorized as a form of SocialProblem?", "5": "Which general types include InsufficientTelephoneInteraction as a more specific member?", "6": "To what overarching problem classes does InsufficientTelephoneInteraction belong?", "7": "Is SocialProblem a parent class for InsufficientTelephoneInteraction?", "8": "Which entities are recognized as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterruptedSleepProblem\nDescription: InterruptedSleepProblem is defined as a subclass of SleepProblem, indicating that every instance of InterruptedSleepProblem is also an instance of SleepProblem. This class characterizes sleep issues specifically involving interruptions or disturbances during sleep, distinguishing it from other types of sleep problems.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific sleep-related conditions are classified under SleepProblem, including InterruptedSleepProblem?", "1": "Is InterruptedSleepProblem categorized as a type of SleepProblem?", "2": "What broader sleep issue categories encompass InterruptedSleepProblem?", "3": "Next tier up in classification for InterruptedSleepProblem within the hierarchy of sleep disorders?", "4": "Does InterruptedSleepProblem fall under the general category of SleepProblem?", "5": "Which sleep problems have InterruptedSleepProblem as a more specialized form?", "6": "Under which higher-level sleep disorder classifications does InterruptedSleepProblem reside?", "7": "Can InterruptedSleepProblem be considered a subset of SleepProblem?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NappingProblem\nDescription: NappingProblem is defined as a subclass of SleepProblem, indicating that any instance classified as a NappingProblem is also recognized as a SleepProblem. This class formalizes issues specifically related to napping, distinguishing it from other types of sleep problems.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass NappingProblem within the ontology?", "1": "Which specific problems are classified under SleepProblem, such as NappingProblem?", "2": "Is every NappingProblem instance also considered a type of SleepProblem?", "3": "Next level up in classification for NappingProblem is which problem category?", "4": "Does NappingProblem fall under the general category of SleepProblem?", "5": "What are all subclasses categorized under SleepProblem, including NappingProblem?", "6": "Is NappingProblem included among the more general problems identified as SleepProblem?", "7": "Which higher-level classifications include NappingProblem as a member?", "8": "Can Napping"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeriodicLimbMovement\nDescription: PeriodicLimbMovement is defined as a subclass of SleepProblem, indicating that every instance of PeriodicLimbMovement is also considered a type of sleep problem. This class captures disturbances involving repetitive limb movements during sleep, aligning with the broader classification of sleep-related disorders.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific conditions are classified under SleepProblem, such as PeriodicLimbMovement?", "1": "Is PeriodicLimbMovement categorized as a form of SleepProblem?", "2": "What broader categories encompass PeriodicLimbMovement within the ontology?", "3": "Next higher-level concept for PeriodicLimbMovement in the hierarchy is which one?", "4": "Does PeriodicLimbMovement fall under the general category of SleepProblem?", "5": "Which problems are more specialized than SleepProblem, including PeriodicLimbMovement?", "6": "Is PeriodicLimbMovement included among the subtypes of SleepProblem?", "7": "What overall group does Periodic"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepDurationProblem\nDescription: SleepDurationProblem is defined as a subclass of SleepProblem. Members of this class experience issues related specifically to sleep duration. According to the current description, this class is characterized by individuals whose sleep duration is less than 7 hours. This formalization ensures that all instances of SleepDurationProblem represent cases where insufficient sleep time is the primary issue.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which problems are classified under the category of SleepProblem?", "1": "Is SleepDurationProblem categorized as a type of SleepProblem?", "2": "What broader classes encompass SleepDurationProblem within the hierarchy?", "3": "Next level up from SleepDurationProblem in the classification structure is which group?", "4": "Does every instance of SleepDurationProblem also belong to the class SleepProblem?", "5": "Which subclasses fall under SleepProblem, such as SleepDurationProblem?", "6": "Is SleepDurationProblem included among the more general categories of SleepProblem?", "7": "What specific types are categorized beneath SleepProblem, including SleepDurationProblem?", "8": "Can SleepDurationProblem be seen as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepEfficiencyProblem\nDescription: SleepEfficiencyProblem is a subclass of SleepProblem, referring specifically to cases where an individual's sleep efficiency is less than 85%. This classification distinguishes SleepEfficiencyProblem from other sleep-related issues by focusing on reduced efficiency in sleep, as formally defined by the subclass axiom and supported by the given comment.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass SleepEfficiencyProblem within the context of sleep disorders?", "1": "Which specific problems are categorized under SleepProblem, including SleepEfficiencyProblem?", "2": "Is SleepEfficiencyProblem classified as a type of SleepProblem?", "3": "Next level up in the hierarchy for SleepEfficiencyProblem is what category?", "4": "Does SleepEfficiencyProblem fall under the general class of SleepProblem?", "5": "Which higher-level classifications include SleepEfficiencyProblem?", "6": "Can SleepEfficiencyProblem be seen as a specialization of SleepProblem?", "7": "What are all subclasses identified beneath SleepProblem, including SleepEfficiencyProblem?", "8": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepLatencyProblem\nDescription: SleepLatencyProblem is a subclass of SleepProblem, representing a specific type of sleep issue. Members of this class are characterized by experiencing sleep latency (the time taken to fall asleep) exceeding 30 minutes. This definition situates SleepLatencyProblem within the broader category of sleep-related disorders, with a focus on delayed sleep onset.\nAxiom: {'subClassOf': ['SleepProblem']}\nGenerated CQs:", "generated_outputs": {"0": "What more general classes encompass SleepLatencyProblem?", "1": "Which problems are classified as specializations of SleepProblem, including SleepLatencyProblem?", "2": "Is SleepLatencyProblem categorized under the broader group of SleepProblem?", "3": "Next higher level categories for SleepLatencyProblem include which types?", "4": "Does every instance of SleepLatencyProblem also belong to the category of SleepProblem?", "5": "Which subclasses fall under the classification of SleepProblem, such as SleepLatencyProblem?", "6": "Is SleepLatencyProblem contained within the set of entities defined by SleepProblem?", "7": "What broader problem classifications does SleepLatency"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MealProblem\nDescription: MealProblem is defined as a subclass of ADLProblem, indicating that it represents a specific kind of difficulty or issue related to Activities of Daily Living (ADL). Any instance of MealProblem is also an instance of ADLProblem, inheriting its characteristics and properties, but is used to specifically denote problems associated with meal-related activities.\nAxiom: {'subClassOf': ['ADLProblem']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader problem categories encompass MealProblem?", "1": "What are the specialized subtypes under ADLProblem, such as MealProblem?", "2": "Does MealProblem fall within the hierarchy of ADLProblem?", "3": "Next higher level category for MealProblem is what?", "4": "Is MealProblem classified as a type of ADLProblem?", "5": "Which general problem classes include MealProblem as a more specific member?", "6": "Can MealProblem be regarded as a subset of ADLProblem?", "7": "Under which overarching problem categories does MealProblem reside?", "8": "Is ADLProblem a supercategory for MealProblem?", "9": "Which problems are categorized as sub"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodQuestionnaire\nDescription: MoodQuestionnaire is defined as a subclass of Questionnaire. This class represents questionnaires designed specifically to assess or measure mood-related aspects of an individual. All MoodQuestionnaire instances inherit the general characteristics of Questionnaire, while focusing on evaluating emotional or affective states.\nAxiom: {'subClassOf': ['Questionnaire']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories does MoodQuestionnaire fall under within the questionnaire hierarchy?", "1": "Which types of questionnaires encompass MoodQuestionnaire as a more specific classification?", "2": "Is MoodQuestionnaire classified as a form of Questionnaire?", "3": "Next level of specialization for Questionnaire includes which subclasses such as MoodQuestionnaire?", "4": "Does MoodQuestionnaire represent a subset of Questionnaire?", "5": "Which parent classes does MoodQuestionnaire inherit from among the questionnaire categories?", "6": "What are the immediate superclasses associated with MoodQuestionnaire?", "7": "Can MoodQuestionnaire be categorized as a type of Questionnaire?", "8": "How does MoodQuestionnaire"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepQuestionnaire\nDescription: SleepQuestionnaire is defined as a subclass of Questionnaire. This means every SleepQuestionnaire is a type of Questionnaire, typically designed to assess or gather information related to sleep patterns, habits, or disorders. No additional restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Questionnaire']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass SleepQuestionnaire?", "1": "Which specific types fall under the category of Questionnaire, such as SleepQuestionnaire?", "2": "Is SleepQuestionnaire classified as a specialized form of Questionnaire?", "3": "Next level up in the hierarchy from SleepQuestionnaire would be which broader classes?", "4": "Does SleepQuestionnaire inherit all characteristics of Questionnaire?", "5": "To what more general concepts does SleepQuestionnaire belong within the ontology?", "6": "Which entities are categorized under the superclass Questionnaire, including SleepQuestionnaire?", "7": "What are the direct subclasses identified under Questionnaire, specifically including SleepQuestionnaire?", "8": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:LongNap\nDescription: event:LongNap is a class characterized by the requirement that all its instances have the property â€˜highlightâ€™ set to true. This means every long nap event is marked as highlighted, distinguishing it from other types of events that may not have this property. There are no additional subclass, disjointness, or other property axioms specified.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of event:LongNap necessarily possess the 'highlight' property with value true?", "1": "Is it required for an entity to be classified as event:LongNap if it includes at least one 'highlight' with value true?", "2": "Can an event:LongNap exist without having the 'highlight' property assigned to true?", "3": "Next CQ:Is there any event:LongNap that does not have the 'highlight' property restricted to true?", "4": "Does the presence of the 'highlight' property with value true uniquely define event:LongNap among all entities?", "5": "Only"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NapAfterLunch\nDescription: event:NapAfterLunch is a class characterized by having the property highlight with a required value of true for all its instances. This means every instance of event:NapAfterLunch must be associated with the property highlight set to true, signifying its notable or emphasized status within a given context. No other description is currently provided, so the class is defined solely by this property restriction.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "generated_outputs": {"0": "Does the ontology require that any event:NapAfterLunch necessarily possess the 'highlight' property with a value of true?", "1": "Can an individual classified as event:NapAfterLunch exist without being related via 'highlight' to true?", "2": "Is it necessary for event:NapAfterLunch entities to have at least one 'highlight' value equal to true?", "3": "Next CQ:Is there any event:NapAfterLunch entity that does not participate in a relationship where 'highlight' equals true?", "4": "Does the definition of event:NapAfterLunch ensure that each occurrence includes some form of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NightKitchenVisit\nDescription: event:NightKitchenVisit is a class characterized by the property restriction that any instance must have the attribute 'highlight' with a value of true. This means that all individuals classified under event:NightKitchenVisit are specifically marked or emphasized via the 'highlight' property. In the absence of additional superclasses or disjointness, this class is primarily defined by this property restriction.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every NightKitchenVisit necessarily involve at least one highlight with value true?", "1": "Is it required for something to be considered a NightKitchenVisit if it includes a highlight set to true?", "2": "Can a NightKitchenVisit exist without having any highlighted element with value true?", "3": "Does the presence of a true-valued highlight property distinguish NightKitchenVisit from other types of events?", "4": "Is it necessary for all NightKitchenVisits to possess some form of highlighted property equal to true?", "5": "Can there be a NightKitchenVisit that does not feature any highlighted entity with value true?", "6": "Is having at least one"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: event:NightLivingRoomVisit\nDescription: event:NightLivingRoomVisit is a class characterized by the property restriction that every instance must have the property 'highlight' with the value 'true'. This formalization ensures that any individual classified as event:NightLivingRoomVisit is specifically marked as highlighted, indicating its special significance or prominence.\nAxiom: {'propertyRestrictions': ['[highlight hasValue true]']}\nGenerated CQs:", "generated_outputs": {"0": "Does event:NightLivingRoomVisit necessarily include at least one property restriction where highlight has the value true?", "1": "Is it required for all instances of event:NightLivingRoomVisit to possess the property highlight with some entity labeled as true?", "2": "Can event:NightLivingRoomVisit exist without having the property highlight applied to the value true?", "3": "Next CQ:Is there any event:NightLivingRoomVisit that lacks the property restriction involving highlight set to true?", "4": "Are all events classified under event:NightLivingRoomVisit constrained by the presence of the property highlight with the value true?", "5": "Does event:N"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SleepSummary\nDescription: SleepSummary is defined as a subclass of DaySummary that captures a comprehensive summary of an individual's sleep for a given day. Each SleepSummary instance is characterized by exactly one value for sleepBedTime, sleepTime, wakeUpTime (all xsd:dateTime), duration, totalDurationOfNaps, numberOfNaps, numberOfArousals, numberOfAwakenings, numberOfBedExits, sleepLatency (all xsd:int), sleepEfficiency and sleepMovementIndex (all xsd:double), and lightLevel (xsd:string). These properties ensure that each SleepSummary provides detailed and quantitative metrics for sleep episodes, including timings, efficiency, nap statistics, nocturnal movements, arousals, awakenings, light levels, and related quantitative indicators, supporting precise day-by-day rest analysis.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[totalDurationOfNaps exactly 1 xsd:int]', '[sleepBedTime exactly 1 xsd:dateTime]', '[duration only xsd:int]', '[sleepEfficiency exactly 1 xsd:double]', '[duration exactly 1 xsd:int]', '[sleepMovementIndex exactly 1 xsd:double]', '[numberOfNaps only xsd:int]', '[totalDurationOfNaps only xsd:int]', '[numberOfNaps exactly 1 xsd:int]', '[numberOfArousals only xsd:int]', '[numberOfAwakenings exactly 1 xsd:int]', '[wakeUpTime only xsd:dateTime]', '[numberOfBedExits only xsd:int]', '[lightLevel only xsd:string]', '[sleepTime exactly 1 xsd:dateTime]', '[sleepBedTime only xsd:dateTime]', '[numberOfAwakenings only xsd:int]', '[lightLevel exactly 1 xsd:string]', '[numberOfBedExits exactly 1 xsd:int]', '[sleepLatency exactly 1 xsd:int]', '[sleepEfficiency only xsd:double]', '[sleepLatency only xsd:int]', '[numberOfArousals exactly 1 xsd:int]', '[sleepTime only xsd:dateTime]', '[wakeUpTime exactly 1 xsd:dateTime]', '[sleepMovementIndex some xsd:double]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every SleepSummary necessarily have at least one property restriction associated with sleepMovementIndex?", "1": "Is it required that all instances of SleepSummary possess a property restriction on sleepMovementIndex?", "2": "Can a SleepSummary exist without any specified property constraint related to sleepMovementIndex?", "3": "Next CQ:Is it permitted for a SleepSummary to lack a property restriction for sleepMovementIndex?", "4": "Does the definition of SleepSummary imply that each instance must have a property restriction for sleepMovementIndex?", "5": "Can a SleepSummary be classified as valid if it does not specify a property restriction for sleepMovementIndex?", "6": "Previous C"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DaySummary\nDescription: DaySummary is a class characterized by the presence of exactly one associated date (of type xsd:dateTime) and exactly one related patient (of class event:Patient). Additionally, every instance must have at least one date and be linked to at least one patient. This ensures that each DaySummary uniquely corresponds to a specific date and patient, representing summaries that are strictly tied to individual patient-days.\nAxiom: {'propertyRestrictions': ['[date exactly 1 xsd:dateTime]', '[forPatient exactly 1 event:Patient]', '[date some xsd:dateTime]', '[forPatient only event:Patient]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every DaySummary necessarily have at least one 'forPatient' property linking it to an entity classified as event:Patient?", "1": "Is there any DaySummary without a 'forPatient' relation to an event:Patient?", "2": "Can a DaySummary exist without being connected via 'forPatient' to an event:Patient through this property?", "3": "Next CQ:Is it required for all instances of DaySummary to possess the 'forPatient' property directed towards an event:Patient?", "4": "Does the existence of a DaySummary imply the presence of the 'forPatient' property connecting it to an event:Patient"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Problem\nDescription: Problem is a class characterized by the existence of at least one possible contributing factor, which must be an instance of event:Event. This means that any individual classified as a Problem is associated with one or more events identified as potential factors contributing to the occurrence of the problem.\nAxiom: {'propertyRestrictions': ['[possibleContributingFactor only event:Event]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every Problem necessarily have at least one possible contributing factor related to an event?", "1": "Is it required for a Problem to be linked via 'hasPossibleContributingFactor' to some event?", "2": "Can a Problem exist without having any association through 'hasPossibleContributingFactor' to an event?", "3": "Is there any Problem that lacks a possible contributing factor from the domain of events?", "4": "Does the presence of a 'hasPossibleContributingFactor' link to an event define all Problems within this ontology?", "5": "Are all Problems defined solely by their relationships to events through the 'hasPossibleContributingFactor'"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoodSummary\nDescription: MoodSummary is a subclass of DaySummary, representing a summary of mood-related aspects for a particular day. It is characterized by exactly one stressLevel, which must be a literal value, exactly one numberOfSocialInteractions (an integer), some physicalHygiene information, and some involvementInDiscussion. This formalization ensures that each MoodSummary instance documents a single stress level and number of social interactions, and includes details on both physical hygiene and participation in discussions.\nAxiom: {'subClassOf': ['DaySummary'], 'propertyRestrictions': ['[stressLevel exactly 1]', '[physicalHygiene some owl:Thing]', '[numberOfSocialInteractions exactly 1 xsd:int]', '[stressLevel only rdfs:Literal]', '[involvementInDiscussion some owl:Thing]', '[numberOfSocialInteractions only xsd:int]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every MoodSummary have at least one involvementInDiscussion?", "1": "Is it required for a MoodSummary to include involvement in some discussion?", "2": "Can a MoodSummary exist without being involved in any discussion?", "3": "Next CQ:Is it necessary for all MoodSummaries to participate in at least one discussion?", "4": "Does the definition of MoodSummary entail involvement in some form of discussion?", "5": "Only MoodSummaries with involvement in a discussion are valid according to this restriction.", "6": "Previous CQ:Does the presence of involvementInDiscussion distinguish MoodSummary from other classes?", "7": "Are there MoodSummaries that lack involvement"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EatingSummary\nDescription: EatingSummary is defined as a subclass of ADLSummary. Each instance of EatingSummary must be associated with exactly one eatingLocation, which is an event:Place, and exactly one eatingDuration, which is a time:DurationDescription. Furthermore, any eatingDuration specified must be an instance of time:DurationDescription, ensuring the exclusivity and precision of duration representation. This formalization guarantees that any EatingSummary records structured information about where and for precisely how long eating occurred.\nAxiom: {'subClassOf': ['ADLSummary'], 'propertyRestrictions': ['[eatingLocation exactly 1 event:Place]', '[eatingDuration exactly 1 time:DurationDescription]', '[eatingDuration only time:DurationDescription]', '[eatingLocation only event:Place]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every EatingSummary necessarily have at least one eatingLocation?", "1": "Is it required for an EatingSummary to be linked to some eatingLocation through the property restriction?", "2": "Can an EatingSummary exist without having any eatingLocation associated with it via this property?", "3": "Next CQ:Are all instances of EatingSummary permitted to have multiple eatingLocations?", "4": "Does the property restriction allow for more than one eatingLocation to be connected to an EatingSummary?", "5": "Can an EatingSummary have an eatingLocation other than those classified under event:Place?", "6": "Next CQ:Is it valid for an EatingSummary to possess eating"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eatingLocation\nDescription: The property \"eatingLocation\" has no explicitly defined characteristics, super-properties, or inverse properties. Its domain is restricted to instances of \"EatingSummary,\" while its range is unspecified. This property is used to associate an \"EatingSummary\" with a location where eating occurs.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of objects can serve as the subject for the property â€˜eatingLocationâ€™?", "1": "Is it permissible for any entity other than EatingSummary to have the property â€˜eatingLocationâ€™ assigned to it?", "2": "Which entities are specified as valid ranges for the property â€˜eatingLocationâ€™?", "3": "Can an EatingSummary instance possess multiple values for the property â€˜eatingLocationâ€™ from different domains?", "4": "Does the property â€˜eatingLocationâ€™ allow EatingSummaries to relate to values outside its defined domain?", "5": "What are all possible domain restrictions imposed on the property â€˜eatingLocationâ€™ within the ontology?", "6": "Are there any"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseDuration\nDescription: The property \"exerciseDuration\" does not specify explicit domain or range restrictions, nor any special characteristics. It is defined as a sub-property of \"time:hasBeginning,\" indicating that it inherits semantic meaning related to temporal beginnings. No inverse property is provided. This property is primarily intended to represent the temporal duration associated with an exercise activity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How are â€˜exerciseDurationâ€™ and â€˜time:hasBeginningâ€™ related in terms of subproperty hierarchy?", "1": "Is every instance of â€˜exerciseDurationâ€™ also an instance of â€˜time:hasBeginningâ€™ due to the subPropertyOf relationship?", "2": "What properties are classified as subproperties under â€˜time:hasBeginningâ€™, such as â€˜exerciseDurationâ€™?", "3": "Next property in the subPropertyOf sequence for â€˜exerciseDurationâ€™ is which one?", "4": "Does â€˜exerciseDurationâ€™ inherit all semantic constraints from â€˜time:hasBeginningâ€™?", "5": "Which superproperties define â€˜exerciseDurationâ€™ within the ontology structure?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: highlight\nDescription: The property \"highlight\" has no specified characteristics, super-properties, or inverse properties. Its domain is restricted to instances of event:Event, and its range is xsd:boolean, indicating whether an event is highlighted (true) or not (false).\nAxiom: {'characteristics': [], 'domain': [], 'range': ['xsd:boolean'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What entities can serve as subjects for the â€˜highlightâ€™ property?", "1": "Is it permissible for an object other than Event to be related via the â€˜highlightâ€™ property?", "2": "What types of values are permitted as objects for the â€˜highlightâ€™ property?", "3": "Does the â€˜highlightâ€™ property have any defined range restrictions?", "4": "Which property ranges are explicitly associated with â€˜highlightâ€™?", "5": "Can the â€˜highlightâ€™ property take on values outside of the Boolean data type?", "6": "Are there any additional property constraints beyond those defined for â€˜highlightâ€™?", "7": "Is the â€˜highlightâ€™ property restricted to linking only Events with Boolean"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepTime\nDescription: The property \"sleepTime\" has no specified characteristics, domain, or range restrictions. It does not have any super-properties or inverse properties defined. Based on its name, \"sleepTime\" likely represents the time or duration related to an entity's sleep, but further constraints or intended usage are not specified in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between â€˜sleepTimeâ€™ and other properties defined in the ontology?", "1": "Is there any property that is considered a subproperty of â€˜sleepTimeâ€™?", "2": "Which properties are asserted as subproperties under â€˜sleepTimeâ€™?", "3": "Next CQ:Is â€˜sleepTimeâ€™ equivalent to some other property within the ontology?", "4": "Which properties are classified as having â€˜sleepTimeâ€™ as their superproperty?", "5": "Does â€˜sleepTimeâ€™ possess any direct subproperties according to the ontology structure?", "6": "Previous CQ:Is â€˜sleepTimeâ€™ declared as a subproperty of another property in the ontology"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: lightLevel\nDescription: The property \"lightLevel\" does not have explicitly defined characteristics, domain, range, super-properties, or inverse properties. No additional description or axiomatic restrictions are provided, suggesting its intended use is either unspecified or context-dependent within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does lightLevel relate to entities of type None as its domain?", "1": "Is it specified that the domain of lightLevel includes None?", "2": "Which types are allowed as the domain for the property lightLevel?", "3": "Next, can the subject of lightLevel be any instance from None?", "4": "Does lightLevel possess a defined domain among the classes None?", "5": "Can the domain associated with lightLevel be restricted to instances of None?", "6": "Are there any other potential domains besides None for the property lightLevel?", "7": "Is lightLevel's domain constrained exclusively to values of None?", "8": "Does lightLevel specify a domain that is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepBedTime\nDescription: The property \"sleepBedTime\" has no defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to represent the time at which an individual goes to bed for sleep, but no formal constraints or descriptions are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the specified ranges allowed for the property â€˜sleepBedTimeâ€™?", "1": "Can any value other than those listed as valid ranges be assigned to â€˜sleepBedTimeâ€™?", "2": "Is there a restriction on what types of values can be used as the subjectâ€™s â€˜sleepBedTimeâ€™ property?", "3": "Does the property â€˜sleepBedTimeâ€™ have a restricted set of possible values for its object?", "4": "Which entities are permitted as the range when using the property â€˜sleepBedTimeâ€™?", "5": "Is every instance associated with the property â€˜sleepBedTimeâ€™ required to have one of the listed valid ranges as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfArousals\nDescription: The property \"numberOfArousals\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Based on its name, it is likely intended to represent the count or frequency of arousal events associated with an entity, but no formal constraints are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does the property â€˜numberOfArousalsâ€™ have any specified inverse property?", "1": "What properties are considered inverses for â€˜numberOfArousalsâ€™ within the ontology?", "2": "Is there a direct relationship between â€˜numberOfArousalsâ€™ and â€˜arousalFrequencyâ€™ through the use of an inverse property?", "3": "Next CQ:Is â€˜numberOfArousalsâ€™ classified under any broader property hierarchy in the ontology?", "4": "Which properties are recognized as subproperties of â€˜numberOfArousalsâ€™?", "5": "Can â€˜numberOfArousalsâ€™ be used as a superproperty for â€˜arousalFrequencyâ€™?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfCommunicativeAttempts\nDescription: The property \"numberOfCommunicativeAttempts\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it likely represents a quantitative value indicating how many times an entity attempts communication. No further semantic restrictions are specified by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between â€˜numberOfCommunicativeAttemptsâ€™ and other properties within the ontology?", "1": "Is â€˜numberOfCommunicativeAttemptsâ€™ considered a subproperty of any other property?", "2": "Which properties are classified as more specific than â€˜numberOfCommunicativeAttemptsâ€™?", "3": "Does â€˜numberOfCommunicativeAttemptsâ€™ have any superproperties beyond those listed?", "4": "Can you specify all properties that are subsumed by â€˜numberOfCommunicativeAttemptsâ€™?", "5": "Which broader property categories encompass â€˜numberOfCommunicativeAttemptsâ€™?", "6": "Are there any additional property constraints associated with â€˜numberOfCommunicativeAttemptsâ€™?", "7": "Does the ontology"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfNaps\nDescription: The property \"numberOfNaps\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property and does not have an inverse property. The intended use of this property may be to associate an entity with the number of naps it takes, but no formal restrictions are currently imposed.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the range of the 'numberOfNaps' property include values other than integers?", "1": "Is every possible value for the 'numberOfNaps' property required to be an integer?", "2": "What types of entities are permitted as the range for the 'numberOfNaps' property?", "3": "Does the definition restrict the range of 'numberOfNaps' exclusively to integers?", "4": "Can non-integer values be assigned to the 'numberOfNaps' property?", "5": "Which classes can serve as the range for the 'numberOfNaps' property according to its specification?", "6": "Is there any possibility for the 'numberOfN"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: strideLength\nDescription: The property \"strideLength\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Its description and usage context should be clarified in the ontology, as no formal axioms currently constrain its application.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What specific values can serve as the range for the â€˜strideLengthâ€™ property?", "1": "Can any entity be associated with multiple instances of the â€˜strideLengthâ€™ property with different ranges?", "2": "Is it required that all instances of the â€˜strideLengthâ€™ property have a value within the defined range?", "3": "Next CQ:Is there any restriction imposed on the possible domains for which the â€˜strideLengthâ€™ property can be used?", "4": "Which entities are permitted as the domain for the â€˜strideLengthâ€™ property according to the ontology?", "5": "Does the â€˜strideLengthâ€™ property apply to every type of entity without further specification"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepEfficiency\nDescription: The property \"sleepEfficiency\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Its intended use is not further specified by axioms, indicating it may be used flexibly unless additional constraints are provided elsewhere in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What properties are considered subproperties of sleepEfficiency?", "1": "Is sleepEfficiency a more general property than wakefulness?", "2": "Which properties are included as subtypes under sleepEfficiency?", "3": "Next level parent for wakefulness within the hierarchy is which property?", "4": "Does sleepEfficiency encompass all instances associated with wakefulness?", "5": "What higher-level property does wakefulness fall under?", "6": "Can any entity be classified as both sleepEfficiency and wakefulness?", "7": "Are there any properties that have sleepEfficiency as their direct superproperty?", "8": "Which entities can serve as the domain for sleepEfficiency?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfFaceToFaceConversations\nDescription: The property \"numberOfFaceToFaceConversations\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a subproperty or inverse of any other property. It is likely intended to represent the count of face-to-face conversations associated with an entity, but no further axiomatic constraints are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What kinds of values can be assigned to the â€˜numberOfFaceToFaceConversationsâ€™ property?", "1": "Is it permissible for the â€˜numberOfFaceToFaceConversationsâ€™ property to have any value outside those classified under â€˜Noneâ€™?", "2": "What entities are permitted as the range for the â€˜numberOfFaceToFaceConversationsâ€™ property?", "3": "Can the â€˜numberOfFaceToFaceConversationsâ€™ property take on values that are not categorized under â€˜Noneâ€™?", "4": "Does the â€˜numberOfFaceToFaceConversationsâ€™ property allow only values from the class â€˜Noneâ€™?", "5": "Which types of values are valid for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: endTime\nDescription: The property \"endTime\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. This suggests that \"endTime\" can be used flexibly to relate an entity to its corresponding end time, but the specific types of subjects and values are not constrained by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship between the â€˜endTimeâ€™ property and other subproperties as specified in the ontology?", "1": "Is â€˜endTimeâ€™ considered a subproperty within the ontologyâ€™s hierarchy?", "2": "Which properties are designated as superproperties for â€˜endTimeâ€™ according to the ontology?", "3": "Next, consider whether â€˜endTimeâ€™ has been identified as an inverse property within this ontology.", "4": "Can you describe how the â€˜endTimeâ€™ property relates to its inverse property through logical connections?", "5": "Are there any explicit value restrictions assigned to the â€˜endTimeâ€™ property in the ontology?", "6": "Does the â€˜endTimeâ€™ property have any specified domain constraints"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasValue\nDescription: The property \"hasValue\" has no specified domain, range, characteristics, or super-properties. It is not defined as an inverse of any other property. Based on the axiom, \"hasValue\" is a general-purpose property with unconstrained usage. Its intended meaning and constraints should be clarified within specific ontological contexts.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can â€˜hasValueâ€™ relate any entity to anything as its value?", "1": "Is it permissible for the subject of â€˜hasValueâ€™ to be any type of individual?", "2": "What types of entities can serve as the subject of the â€˜hasValueâ€™ property?", "3": "Does every instance of â€˜hasValueâ€™ necessarily involve some form of value specification?", "4": "Can the object of â€˜hasValueâ€™ be restricted to values from a particular class?", "5": "Which classes are permitted as potential ranges for the â€˜hasValueâ€™ property?", "6": "Is there any restriction on the types of objects that may appear as the value associated with"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: date\nDescription: The property \"date\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates that its intended usage and applicable types are not currently specified in the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value serve as the range for the 'date' property?", "1": "Is it required that the range of 'date' is restricted to specific values?", "2": "What types of data can appear as the range for 'date'?", "3": "Does 'date' have a fixed range among all possible property ranges?", "4": "Can the range of 'date' include any arbitrary value?", "5": "Is there any restriction on what values may be used as the range for 'date'?", "6": "Are there any additional restrictions on the range of 'date' beyond those specified?", "7": "Is the range of 'date' limited to a predefined"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfSocialInteractions\nDescription: The property \"numberOfSocialInteractions\" has no explicitly defined characteristics, domain, or range constraints, and is not specified as a sub-property or inverse of any other property. This suggests it can be used flexibly to associate any subject and object, though its intended purpose is to represent the count or quantity of social interactions related to an entity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What properties are defined as inverses for â€˜numberOfSocialInteractionsâ€™?", "1": "Is there any direct link between â€˜numberOfSocialInteractionsâ€™ and â€˜hasPersonalityTraitâ€™ via an inverse property?", "2": "Which property is designated as the inverse of â€˜numberOfSocialInteractionsâ€™ within this ontology?", "3": "Next CQ:Is â€˜numberOfSocialInteractionsâ€™ used as a subproperty under any other property?", "4": "Can â€˜numberOfSocialInteractionsâ€™ be considered a specialization of another property?", "5": "What higher-level properties does â€˜numberOfSocialInteractionsâ€™ fall under according to the ontology structure?", "6": "Does the ontology"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepMovementIndex\nDescription: The property \"sleepMovementIndex\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Its use and meaning are unspecified in the ontology, as no descriptive information or axioms restrict or explain its application or value type.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the direct relationship between sleepMovementIndex and other ontology properties?", "1": "Is sleepMovementIndex considered a specialized form of any other property within the ontology?", "2": "Which properties are classified as subproperties under sleepMovementIndex?", "3": "Does sleepMovementIndex have any specified superproperty in the ontology?", "4": "What property hierarchy includes sleepMovementIndex among its members?", "5": "Is there an inverse property associated with sleepMovementIndex in the ontology?", "6": "Can you illustrate the subproperty hierarchy for sleepMovementIndex?", "7": "Under which broader property does sleepMovementIndex fall according to the ontology structure?", "8": "Are there any additional properties"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: walkSpeed\nDescription: The property \"walkSpeed\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to represent the walking speed of an entity, but no formal constraints or further description are provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can walkSpeed be used as a property for values other than None?", "1": "Is there any value associated with walkSpeed outside of None?", "2": "What types of objects can serve as the range for the walkSpeed property?", "3": "Does walkSpeed allow specifying a range beyond None?", "4": "Can walkSpeed have a range different from None?", "5": "Are all instances of walkSpeed restricted to having None as their range?", "6": "Is walkSpeed limited to referencing None as its range?", "7": "Does walkSpeed ever accept anything other than None within its range?", "8": "Is the range of walkSpeed exclusively composed of None?", "9": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: forPatient\nDescription: The property \"forPatient\" has no explicitly defined domain, range, or characteristics. It does not specify any super-properties or inverse properties. Based on its name, it is intended to relate an entity or process to a patient, typically indicating that something is meant or designated for an individual receiving care.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can â€˜forPatientâ€™ be used as a subproperty of another property?", "1": "Which properties are considered more general than â€˜forPatientâ€™?", "2": "Is every instance of â€˜forPatientâ€™ also classified under some other property type?", "3": "Next level up in hierarchy from â€˜forPatientâ€™:", "4": "Does â€˜forPatientâ€™ possess an inverse relationship with any other property?", "5": "What property is inversely related to â€˜forPatientâ€™?", "6": "Is there a property that directly includes â€˜forPatientâ€™ among its subproperties?", "7": "Which properties include â€˜forPatientâ€™ as one of their subproperties?", "8": "Can â€˜for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: accelerometerCountsPerMinute\nDescription: The property \"accelerometerCountsPerMinute\" has no specified domain, range, characteristics, super-properties, or inverse properties. It is designed to represent the number of counts detected by an accelerometer per minute but is not restricted to any particular subject or value type by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types are allowed as the range for the â€˜accelerometerCountsPerMinuteâ€™ property?", "1": "Is it permissible to assign values from the set {â€˜Noneâ€™, â€˜floatâ€™, â€˜intâ€™, â€˜doubleâ€™, â€˜datetimeâ€™, â€˜booleanâ€™, â€˜stringâ€™, â€˜uriâ€™, â€˜bag','sequence', 'ordered', 'unbounded'} to the range of this property?", "2": "Does the â€˜accelerometerCountsPer Minuteâ€™ property have a defined range within the ontology?", "3": "Next CQ:Is there any restriction imposed on the values that can appear as the range for the â€˜accelerometerCountsPer"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: physicalHygiene\nDescription: The property \"physicalHygiene\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property or inverse of any other property. Its usage and scope are not further restricted by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can physicalHygiene have any value outside of the set {hygienic, unhygienic}?", "1": "Is it possible for physicalHygiene to take on values other than hygienic or unhygienic?", "2": "What types of data can physicalHygiene represent according to its definition?", "3": "Does physicalHygiene allow only hygienic or unhygienic as valid outcomes?", "4": "Can physicalHygiene ever have a value that is neither hygienic nor unhygienic?", "5": "Which values does physicalHygiene accept as valid instances?", "6": "Is every instance of physicalHygiene either"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: possibleContributingFactor\nDescription: The property \"possibleContributingFactor\" has no explicitly defined characteristics, domain, or range restrictions, and is not specified as a sub-property of any other property. No inverse property is defined. This property is intended to relate entities to possible factors that may contribute to a particular situation or event, but its usage is not restricted to specific classes or value types.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every instance related by the â€˜possibleContributingFactorâ€™ property have any type of value?", "1": "Is it required for all values linked via â€˜possibleContributingFactorâ€™ to belong to a specific class or category?", "2": "Are there any restrictions on the types of values allowed as the range for the â€˜possibleContributingFactorâ€™ property?", "3": "Does the â€˜possibleContributingFactorâ€™ property permit only instances from a certain class as its range?", "4": "Can the range of the â€˜possibleContributingFactorâ€™ property include objects of arbitrary types?", "5": "Is there an upper bound on the type hierarchy that instances can"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: distanceTravelled\nDescription: The property \"distanceTravelled\" has no specified characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and has no declared inverse property. Based on its name, it is likely intended to represent the distance an entity has moved or covered, but no formal constraints are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can distanceTravelled relate to entities outside the set of None?", "1": "Is distanceTravelled restricted to linking instances from None only?", "2": "Which properties have None as their domain for distanceTravelled?", "3": "Does distanceTravelled allow associations beyond those involving None?", "4": "What entities can serve as the domain for the use of distanceTravelled?", "5": "Can distanceTravelled be used when both participants are not from None?", "6": "Are there any domains besides None for which distanceTravelled could be applied?", "7": "Is it valid to associate distanceTravelled with subjects that are not of type None?", "8": "Can distanceTravel"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasBeginning\nDescription: The property \"time:hasBeginning\" has no explicitly defined characteristics, domain, or range constraints, nor does it specify any super-properties or inverse properties. Based on its name, it is likely intended to relate a temporal entity to its starting point or beginning, but no formal axioms restrict its usage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can time:hasBeginning be applied to entities outside of the specified range?", "1": "Is every subject of time:hasBeginning necessarily within the defined range?", "2": "What types are allowed as targets for the time:hasBeginning property?", "3": "Does time:hasBeginning have any restrictions on its value range?", "4": "Can time:hasBeginning have a range that includes values other than those specified?", "5": "Which properties share the same range as time:hasBeginning?", "6": "Is there any overlap between the ranges of time:hasBeginning and another property?", "7": "Does time:hasBeginning permit values from all possible domains or is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: totalDurationOfNaps\nDescription: The property \"totalDurationOfNaps\" currently has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. Based on its name, it is intended to represent the total duration of naps associated with an entity. However, without further axioms, its precise usage within the ontology remains unspecified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does the totalDurationOfNaps property have any specified range restrictions?", "1": "What types of values are permitted as the range for the totalDurationOfNaps property?", "2": "Is there a maximum allowed value defined for the totalDurationOfNaps property's range?", "3": "Can the totalDurationOfNaps property have a range that includes both integer and string values?", "4": "Does the totalDurationOfNaps property allow only specific numerical ranges such as integers or floats?", "5": "Are there any additional constraints on the range of the totalDurationOfNaps property beyond those specified here?", "6": "Is it possible for the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: sleepLatency\nDescription: The property \"sleepLatency\" has no defined domain, range, or formal characteristics, and lacks specification of super-properties or an inverse property. Its formal usage and intended meaning must be inferred from its name, which typically refers to the duration or interval between attempting to sleep and the onset of sleep. No additional restrictions or relationships are provided in the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the relationship defined by the property â€˜sleepLatencyâ€™?", "1": "Can the value of the property â€˜sleepLatencyâ€™ ever be something other than an integer?", "2": "Which properties have â€˜sleepLatencyâ€™ as their subproperty according to the ontology?", "3": "Does the use of â€˜sleepLatencyâ€™ allow for any non-integer values as its range?", "4": "Is there any specified upper bound on the value of the property â€˜sleepLatencyâ€™?", "5": "What types of entities can serve as the range of the property â€˜sleepLatencyâ€™?", "6": "Can the property â€˜sleepLatencyâ€™"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfPhoneConversations\nDescription: The property \"numberOfPhoneConversations\" has no explicitly defined characteristics, domain, or range restrictions, and is not declared as a sub-property or inverse of any other property. Its intended use is to represent the number of telephone conversations associated with an entity, but its application is unconstrained in the current specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property â€˜numberOfPhoneConversationsâ€™ have values outside the set of integers?", "1": "Is it permissible for the property â€˜numberOfPhoneConversationsâ€™ to take non-integer values?", "2": "Does every value assigned to â€˜numberOfPhoneConversationsâ€™ necessarily correspond to an integer within the set of integers?", "3": "Can the range of the property â€˜numberOfPhoneConversationsâ€™ include non-integer types?", "4": "What are the allowed data types for the property â€˜numberOfPhoneConversationsâ€™?", "5": "Does the property â€˜numberOfPhoneConversationsâ€™ exclusively accept integer values?", "6": "Are there any additional valid data types permitted"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: time:hasDurationDescription\nDescription: The property \"time:hasDurationDescription\" has no specified domain, range, characteristics, super-properties, or inverse properties. It is used to associate entities with their duration descriptions, but no additional constraints or relationships are imposed by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does the property 'time:hasDurationDescription' have any specified inverse property?", "1": "What are all the properties defined as inverses for 'time:hasDurationDescription'?", "2": "Is there another property whose inverse is 'time:hasDurationDescription'?", "3": "Next CQ:Is 'time:hasDurationDescription' categorized under any higher-level property within the ontology?", "4": "Which properties are designated as subproperties of 'time:hasDurationDescription'?", "5": "Does 'time:hasDurationDescription' serve as a subproperty of any other property?", "6": "Previous CQ:Is it correct that 'time:hasDurationDescription"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no explicitly defined domain, range, characteristics, super-properties, or inverse property. It is intended to represent the concept of duration, but no further constraints or relationships are specified by its current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value other than None serve as the range for the property 'duration'?", "1": "Is it necessary for the 'duration' property to have a range of None?", "2": "What types of values can the 'duration' property specify as its range, according to the ontology?", "3": "Does the ontology allow multiple possible ranges for the 'duration' property?", "4": "Can the 'duration' property be associated with a value outside of the set {None}?", "5": "Is there any entity that could potentially act as the range for the 'duration' property beyond None?", "6": "Are all instances of the range for 'duration'"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfBedExits\nDescription: The property \"numberOfBedExits\" has no explicitly defined characteristics, domain, or range, and is not specified as a sub-property or inverse of any other property. Based on its name, it likely represents the quantity of times a bed exit occurs in a given context, but further specification of its scope and value type is not provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are all properties that are equivalent to â€˜numberOfBedExitsâ€™?", "1": "Is there another property that is logically equivalent to â€˜numberOfBedExitsâ€™?", "2": "Which properties have â€˜numberOfBedExitsâ€™ as their inverse?", "3": "Next CQ:Is the inverse relationship between â€˜numberOfBedExitsâ€™ and â€˜bedExitNumberâ€™ required for every instance?", "4": "Does every use of â€˜bedExitNumberâ€™ imply the existence of an associated â€˜numberOfBedExitsâ€™?", "5": "Can the absence of a â€˜bedExitNumberâ€™ property indicate that no corresponding â€˜numberOfBedExitsâ€™ exists?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: involvementInDiscussion\nDescription: The property \"involvementInDiscussion\" has no specified characteristics, domain, range, super-properties, or inverse properties. It is intended to relate two entities in the context of participation or involvement in a discussion, but its usage is unconstrained by ontological axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can â€˜involvementInDiscussionâ€™ have any value other than those defined within the specified range?", "1": "Is it permissible for the property â€˜involvementInDiscussionâ€™ to link an entity outside of its declared range?", "2": "What types of values are permitted as the range for the property â€˜involvementInDiscussionâ€™?", "3": "Does the property â€˜involvementInDiscussionâ€™ restrict its output to specific types from the range?", "4": "Can the property â€˜involvementInDiscussionâ€™ produce values not listed under its defined range?", "5": "Are there any restrictions placed on the potential ranges of the property â€˜"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: numberOfAwakenings\nDescription: The property \"numberOfAwakenings\" has no defined domain, range, characteristics, super-properties, or inverse properties. It is intended to represent the number of times an awakening event occurs, but its usage is not currently constrained by axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property â€˜numberOfAwakeningsâ€™ have values outside the set of integers?", "1": "Is it permissible for â€˜numberOfAwakeningsâ€™ to relate individuals without specifying integer outcomes?", "2": "Does every instance associated via â€˜numberOfAwakeningsâ€™ necessarily correspond to an integer value?", "3": "Can you cite an example where â€˜numberOfAwakeningsâ€™ is used with non-integer data?", "4": "Is there any constraint limiting the range of â€˜numberOfAwakeningsâ€™ to integers only?", "5": "Does â€˜numberOfAwakeningsâ€™ allow non-numeric values as potential targets?", "6": "Is it required that all values linked"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: heartRate\nDescription: The property \"heartRate\" has no specified domain, range, super-properties, or inverse properties, and lacks defined characteristics. Its intended use is to associate an entity with its heart rate, but no formal constraints on its usage are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What kinds of entities can serve as the subject for the property â€˜heartRateâ€™?", "1": "Is it permissible for any instance of â€˜Personâ€™ to have the property â€˜heartRateâ€™ without specifying a target type?", "2": "Which types of values may appear as the object of the property â€˜heartRateâ€™?", "3": "Can â€˜heartRateâ€™ be used with subjects from â€˜Animalâ€™ class and objects restricted to â€˜floatâ€™ type?", "4": "Does the property â€˜heartRateâ€™ allow linking individuals of type â€˜Fishâ€™ exclusively to numerical values?", "5": "Are there any other domains besides â€˜Personâ€™, â€˜Animalâ€™, and â€˜"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stressLevel\nDescription: The property \"stressLevel\" has no defined domain or range restrictions, and no specified characteristics, super-properties, or inverse properties. This indicates that \"stressLevel\" can relate any subject to any object, with its precise usage intended to be determined by context or further specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can stressLevel be used as a subproperty under another property?", "1": "Is stressLevel a more specific type of property compared to those without specified subproperties?", "2": "Which properties are considered direct superproperties of stressLevel?", "3": "Next level parent property for stressLevel if it exists", "4": "Does stressLevel inherit all characteristics from its parent property?", "5": "What higher-level properties include stressLevel as their subproperty?", "6": "Can stressLevel serve as the subproperty for another property within the ontology?", "7": "Which subproperties fall under stressLevel in the ontology hierarchy?", "8": "Is stressLevel categorized as a general property without subproperties"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: wakeUpTime\nDescription: The property \"wakeUpTime\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate an entity to a time value indicating when waking up occurs, but no formal constraints or additional documentation are currently specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What entities can serve as the subject for the property â€˜wakeUpTimeâ€™?", "1": "Is there any upper bound on the types that can be the object of the â€˜wakeUpTimeâ€™ relation?", "2": "Which properties have the same range as â€˜wakeUpTimeâ€™ within this ontology?", "3": "Next property in the hierarchy of â€˜wakeUpTimeâ€™: none", "4": "Previous property in the hierarchy of â€˜wakeUpTimeâ€™: none", "5": "Does â€˜wakeUpTimeâ€™ inherit restrictions from any other property?", "6": "Can â€˜wakeUpTimeâ€™ be used to relate individuals outside the specified range?", "7": "What property is classified as a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no specified domain or range restrictions and does not inherit from any super-property. It has no explicitly defined characteristics, nor is any inverse property specified. This property is intended to represent the beginning time of an event or process, though the exact usage context is unconstrained by current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between the properties â€˜endTimeâ€™ and â€˜startTimeâ€™ within the ontology?", "1": "If event A starts at time T1 and ends at time T2, can we infer that there exists an event B whose start time T3 is related to T2 through the â€˜endTimeâ€™ property?", "2": "Which property is used as the inverse of â€˜endTimeâ€™ in the ontology?", "3": "Next CQ:Is it required for every instance having the â€˜endTimeâ€™ property also have the â€˜startTimeâ€™ property applied to some other entity?", "4": "Does the ontology permit the use of both â€˜endTimeâ€™ and â€˜"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseIntensity\nDescription: The property \"exerciseIntensity\" has no defined characteristics, domain, range, super-properties, or inverse properties. Based on its name, it is likely intended to relate an entity to a measure or classification of physical activity intensity, but no formal constraints or description are specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What specific entities can serve as the range for the property â€˜exerciseIntensityâ€™?", "1": "Is there any restriction imposed on the value that can appear as the range when using the property â€˜exerciseIntensityâ€™?", "2": "Which types of values are permitted as the range for instances of the property â€˜exerciseIntensityâ€™?", "3": "Can the property â€˜exerciseIntensityâ€™ have a range that is not classified under â€˜Noneâ€™?", "4": "Does the property â€˜exerciseIntensityâ€™ restrict its range to only include members of â€˜Noneâ€™?", "5": "What entities are explicitly allowed as the range for objects related via the property â€˜exerciseIntensityâ€™?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: exerciseStartTime\nDescription: The property \"exerciseStartTime\" has no specified domain, range, super-properties, inverse properties, or declared characteristics. Its intended use is to represent the start time of an exercise, but the axiom does not constrain its applicable subjects or the type of values it relates to.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['time:hasBeginning'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can exerciseStartTime be used as a subproperty of another property?", "1": "Which properties are defined as subproperties under time:hasBeginning?", "2": "Is every instance related by exerciseStartTime also connected through time:hasBeginning?", "3": "Next Property in hierarchical structure of time:hasBeginning", "4": "Previous Property in hierarchical structure of exerciseStartTime", "5": "What broader property classification includes exerciseStartTime?", "6": "Does exerciseStartTime inherit any restrictions from time:hasBeginning?", "7": "Is there any property more specific than time:hasBeginning that includes exerciseStartTime as a subproperty?", "8": "To which superproperties does exerciseStartTime belong within this context?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: eatingDuration\nDescription: The property \"eatingDuration\" has no defined domain or explicit characteristics. Its range is unspecified, allowing for flexible use. It is a sub-property of \"time:hasDurationDescription\", indicating it is used to relate an entity to a temporal duration specifically describing the length of an eating event. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['EatingSummary'], 'range': ['None'], 'subPropertyOf': ['time:hasDurationDescription'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can eatingDuration have any subject other than EatingSummary?", "1": "Is there any instance where eatingDuration is applied without being associated with EatingSummary as its subject?", "2": "What entities can serve as the domain for the eatingDuration property?", "3": "Next CQ:Is eatingDuration applicable to resources outside of EatingSummary?", "4": "Does eatingDuration require EatingSummary as its subject when making assertions?", "5": "Which classes are permitted as the domain for eatingDuration?", "6": "Previous CQ:Is eatingDuration restricted to EatingSummary as its subject within the ontology?", "7": "Can eatingDuration operate over subjects not classified under EatingSummary?", "8": "Does eating"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Measurement\nDescription: Measurement is defined as a subclass of Observation. Every Measurement instance formally describes only entities classified as event:Measurement, ensuring it cannot describe other types of events. Additionally, each Measurement must be provided by either an event:Person or a Sensor, restricting its provenance to these two sources. This specification captures the nature of measurements as observational entities exclusively linked to specific events and originating strictly from people or sensor devices.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[describes only event:Measurement]', '[providedBy only (event:Person or Sensor)]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every measurement be provided by at least one person or sensor?", "1": "Is it possible for a measurement not to have any provider among persons or sensors?", "2": "Can a measurement be associated with a source other than a person or a sensor?", "3": "Does the property restriction allow a measurement to have multiple providers, including both persons and sensors?", "4": "Is there a measurement without any provision by a person or a sensor?", "5": "Are all measurements required to have been made by some person or sensor?", "6": "Can a measurement exist if none of its providers are either a person or a sensor?", "7": "Does the existence of a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Report\nDescription: Report is a class defined by a set of strict property restrictions: each instance must be provided by exactly one event:Person and must refer to exactly one instance of either home:Questionnaire, lab:ClinicalRecord, or lab:DemographicCharacteristicsRecord. Additionally, every Report must have exactly one hasPlausibilityMetric value of type xsd:double and exactly one hasReportingTime value of type time:Instant, with no other values permitted for these properties. The class definition ensures that each Report is uniquely associated with one provider, one time of reporting, a plausibility metric, and one described source record, reflecting a precise and singular reporting activity.\nAxiom: {'propertyRestrictions': ['[hasPlausibilityMetric exactly 1 xsd:double]', '[hasPlausibilityMetric only xsd:double]', '[describes only (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]', '[providedBy exactly 1 event:Person]', '[providedBy only event:Person]', '[hasReportingTime only time:Instant]', '[describes exactly 1 (home:Questionnaire or lab:ClinicalRecord or lab:DemographicCharacteristicsRecord)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every report necessarily include at least one describes relationship to a home:Questionnaire?", "1": "Is it required for reports to have the 'describes' property linking them to some home:Questionnaire?", "2": "Can any report exist without being connected via 'describes' to a home:Questionnaire?", "3": "Does the presence of 'describes' with home:Questionnaire suffice to define all possible reports?", "4": "Are there reports that do not use the 'describes' property to reference any home:Questionnaire?", "5": "Can a report lack the 'describes' relation to any home:Questionnaire"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Accelerometer\nDescription: Accelerometer is defined as a subclass of WearableSensor. This means that every accelerometer is considered a wearable sensor, inheriting all characteristics of wearable sensors. Accelerometers are specialized sensors used in wearable devices to measure acceleration forces, which can be used to detect motion, orientation, and activity levels. No additional axioms further constrain the class.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "generated_outputs": {"0": "Does Accelerometer fall under the category of WearableSensor?", "1": "Which types are more specific than WearableSensor, such as Accelerometer?", "2": "To what higher-level categories does Accelerometer belong within the context of wearable devices?", "3": "Next level up from Accelerometer in the hierarchy is WearableSensor.", "4": "Is every instance of Accelerometer also classified as a WearableSensor?", "5": "What broader classes encompass Accelerometer in this ontology?", "6": "Does Accelerometer have any parent classes beyond WearableSensor?", "7": "Which subclasses exist directly beneath WearableSensor, including Accelerometer?", "8": "How does Accelerometer relate struct"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DTI-2\nDescription: DTI-2 is defined as a subclass of WearableSensor, indicating that it inherits all characteristics of wearable sensors. This means any instance of DTI-2 is necessarily a wearable sensor, though no further distinguishing properties or restrictions are specified.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass DTI-2 within the classification hierarchy?", "1": "Which entities fall under the category of WearableSensor, such as DTI-2?", "2": "Is DTI-2 classified as a type of WearableSensor?", "3": "Next higher-level concept associated with DTI-2", "4": "Classification structure for DTI-2 in relation to WearableSensor", "5": "Does DTI-2 represent a specific kind of WearableSensor?", "6": "Which subclasses are included within the group of WearableSensors, including DTI-2?", "7": "What general categories does DTI-2 fall under according to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableMicrophone\nDescription: WearableMicrophone is defined as a subclass of WearableSensor. This class represents microphones that are designed to be worn on the body, distinguishing them from other types of wearable sensors by their specific function of capturing audio signals. Members of this class inherit all attributes and behaviors of wearable sensors, with a focus on audio data acquisition.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "generated_outputs": {"0": "What more general categories does WearableMicrophone fall under?", "1": "Which devices are classified as subclasses of WearableSensor, including WearableMicrophone?", "2": "Is every WearableMicrophone instance also considered a type of WearableSensor?", "3": "Next level up in the hierarchy for WearableMicrophone is what group?", "4": "Does WearableMicrophone encompass all entities categorized under WearableSensor?", "5": "What broader classes include WearableMicrophone within their scope?", "6": "Are there any entities outside of WearableSensor but still subsumed by WearableMicrophone?", "7": "Which higher-level classifications feature Wearable"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableVideoCamera\nDescription: WearableVideoCamera is defined as a subclass of WearableSensor. This means any instance of WearableVideoCamera is also an instance of WearableSensor, inheriting all characteristics of wearable sensors. WearableVideoCamera specifically refers to sensors that are worn on the body and are capable of capturing video data.\nAxiom: {'subClassOf': ['WearableSensor']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level classes does WearableVideoCamera belong to?", "1": "Is every WearableVideoCamera classified under the category of WearableSensor?", "2": "What specific types fall within the category of WearableSensor, such as WearableVideoCamera?", "3": "Next tier of specialization for WearableSensor includes which subclasses?", "4": "Does WearableVideoCamera represent a more specific form of WearableSensor?", "5": "Which broader categories encompass WearableVideoCamera?", "6": "Can WearableVideoCamera be categorized under WearableSensor?", "7": "Which entities are subsumed by WearableSensor, including WearableVideoCamera?", "8": "How"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Alert\nDescription: Alert is defined as a subclass of Feedback, meaning every instance of Alert is also considered an instance of Feedback. This class captures specific types of feedback events characterized as alerts, distinguishing them from other forms of feedback. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['Feedback']}\nGenerated CQs:", "generated_outputs": {"0": "Does Alert fall under the category of Feedback?", "1": "Which subclasses exist within the broader class of Feedback, including Alert?", "2": "What higher-level classes encompass Alert?", "3": "Next level up in hierarchy for Alert is what?", "4": "Is Alert classified as a type of Feedback?", "5": "To which superclasses does Alert pertain?", "6": "Can Alert be regarded as a kind of Feedback?", "7": "Which entities are categorized under Feedback, specifically including Alert?", "8": "Is Feedback a more general concept than Alert?", "9": "What are all the parent categories associated with Alert?", "10": "Does Alert represent a specialization of Feedback?", "11": "Under which overarching classes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ambient2DVideoCamera\nDescription: Ambient2DVideoCamera is defined as a subclass of FixedSensor, indicating that every Ambient2DVideoCamera is a type of sensor with a fixed position. This class represents video cameras designed to capture ambient, two-dimensional visual information from a stationary location.\nAxiom: {'subClassOf': ['FixedSensor']}\nGenerated CQs:", "generated_outputs": {"0": "What specific types are encompassed within the category of FixedSensor, including Ambient2DVideoCamera?", "1": "Which higher-level classes does Ambient2DVideoCamera inherit from according to the ontology?", "2": "Is Ambient2DVideoCamera classified under the broader group of FixedSensor?", "3": "Next level up in the hierarchy for Ambient2DVideoCamera is which class or groups?", "4": "Does the ontology recognize any subclasses beyond those specified for FixedSensor such as Ambient2DVideoCamera?", "5": "What are all the parent categories associated with Ambient2DVideoCamera?", "6": "Which entities are categorized as more specialized forms of Fixed"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: _3DVideoCamera\nDescription: _3DVideoCamera is defined as a subclass of FixedSensor, indicating that every instance of _3DVideoCamera is a type of sensor that operates in a fixed position. This class represents cameras capable of capturing three-dimensional video data, inheriting all characteristics of fixed sensors.\nAxiom: {'subClassOf': ['FixedSensor']}\nGenerated CQs:", "generated_outputs": {"0": "Which types are more specific than FixedSensor, such as _3DVideoCamera?", "1": "Is _3DVideoCamera categorized under the broader class of FixedSensor?", "2": "What broader classes encompass _3DVideoCamera within the ontology?", "3": "Next level up in hierarchy from _3DVideoCamera is what?", "4": "Which entities are classified under FixedSensor, including _3DVideoCamera?", "5": "Does _3DVideoCamera fall under the category of FixedSensor?", "6": "To which higher-level groupings does _3DVideoCamera pertain?", "7": "Which subclasses exist beneath FixedSensor, specifically including _"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FixedSensor\nDescription: FixedSensor is defined as a subclass of Sensor. This indicates that every FixedSensor is a type of Sensor, inheriting all characteristics of the Sensor class. No additional constraints or distinguishing axioms are specified beyond this hierarchical relationship, meaning FixedSensors share the essential properties of Sensors.\nAxiom: {'subClassOf': ['Sensor']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are categorized under Sensor, such as FixedSensor?", "1": "Is FixedSensor classified as a kind of Sensor?", "2": "What broader classes does FixedSensor fall within?", "3": "Next higher-level category for FixedSensor is what?", "4": "Does FixedSensor represent a more specific type within Sensor?", "5": "Which subclasses are encompassed by Sensor, including FixedSensor?", "6": "What general categories include FixedSensor as a member?", "7": "Is FixedSensor included among the subclasses of Sensor?", "8": "To which superclasses does FixedSensor pertain?", "9": "Which classes have FixedSensor as a direct specialization?", "10": "Does FixedSensor serve as a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WearableSensor\nDescription: WearableSensor is defined as a subclass of Sensor. This means that every instance of WearableSensor is also considered an instance of Sensor, inheriting its general properties and behaviors. WearableSensor typically refers to a sensor designed to be worn on the human body for the purpose of monitoring physiological signals, activity, or environmental parameters.\nAxiom: {'subClassOf': ['Sensor']}\nGenerated CQs:", "generated_outputs": {"0": "What are the more specific classes encompassed within Sensor, such as WearableSensor?", "1": "Is WearableSensor categorized under the broader class of Sensor?", "2": "Which higher-level categories does WearableSensor fall under within the ontology?", "3": "Next level up from WearableSensor in the hierarchy is what type of entity?", "4": "Does WearableSensor represent a specialization of Sensor?", "5": "To which parent concepts does WearableSensor belong according to the ontology structure?", "6": "What entities are classified as subclasses of Sensor, including WearableSensor?", "7": "Which superclasses define WearableSensor's position within the ontology?", "8": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Detection\nDescription: Detection is defined as a subclass of Observation. Individuals classified as Detection must only describe either an event of type AtomicActivity or ObjectEvent, and are restricted to being provided exclusively by a ProcessingComponent. This ensures that each Detection instance is specifically tied to these event types, and clearly attributed to a particular processing component within the system.\nAxiom: {'subClassOf': ['Observation'], 'propertyRestrictions': ['[describes only (event:AtomicActivity or event:ObjectEvent)]', '[providedBy some ProcessingComponent]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every detection necessarily have a provider that is a processing component?", "1": "Is it required for a detection to be associated with at least one processing component through the â€˜providedByâ€™ property?", "2": "Can any detection exist without being linked to a processing component via the â€˜providedByâ€™ relation?", "3": "Does the presence of a processing component as the provider suffice for an entity to qualify as a detection?", "4": "Are all detections necessarily connected to a processing component through the â€˜providedByâ€™ property?", "5": "Is there any detection lacking the â€˜providedByâ€™ relationship with a processing component?", "6": "Can a detection possess multiple providers"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Observation\nDescription: Observation is a class characterized by its formal linkage to a single event, as indicated by the restriction that each Observation describes exactly one event:Event. Each Observation is provided by exactly one provider, restricted to being either a event:Person, a ProcessingComponent, or a Sensor. Observations are further annotated with precisely one plausibility metric (hasPlausibilityMetric exactly 1 xsd:double) and exactly one reporting time (hasReportingTime exactly 1 time:Instant). These formal restrictions ensure that an Observation instance unambiguously refers to a specific event, has a single well-defined provider, includes a quantitative plausibility assessment, and records the precise time at which the observation was reported.\nAxiom: {'propertyRestrictions': ['[describes only event:Event]', '[providedBy only (event:Person or ProcessingComponent or Sensor)]', '[describes exactly 1 event:Event]', '[hasPlausibilityMetric only xsd:double]', '[hasReportingTime only time:Instant]', '[hasReportingTime exactly 1 time:Instant]', '[hasPlausibilityMetric exactly 1 xsd:double]', '[providedBy exactly 1 (event:Person and ProcessingComponent and Sensor)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every Observation necessarily have a 'hasPlausibilityMetric' property value that is an instance of xsd:double?", "1": "Is it required for any Observation to possess at least one 'hasPlausibilityMetric' attribute whose value is an xsd:double?", "2": "Can an Observation exist without having a 'hasPlusibilityMetric' property with an xsd:double as its value?", "3": "Next CQ:Is it possible for an Observation not to have exactly one 'hasPlausibilityMetric' property with an xsd:double as its value?", "4": "Does the definition of Observation specify"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sensor\nDescription: Sensor is a class characterized by the restriction that every instance must be attached to exactly one entity from the event:Entity class; no sensor can be attached to more than one, nor to any entity outside of event:Entity. This ensures a one-to-one association between each sensor and an event entity.\nAxiom: {'propertyRestrictions': ['[attachedTo exactly 1 event:Entity]', '[attachedTo some event:Entity]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every Sensor necessarily have at least one 'attachedTo' relationship with an Entity?", "1": "Is it required for a Sensor to be associated via 'attachedTo' with some Entity?", "2": "Can a Sensor exist without being connected through 'attachedTo' to any Entity?", "3": "Does the presence of the property 'attachedTo' imply the existence of an Entity linked to a Sensor?", "4": "Can there be a Sensor without any 'attachedTo' link to an Entity?", "5": "Is having an 'attachedTo' connection to an Entity a defining characteristic of Sensors?", "6": "Must all instances of Sensor possess at least one"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Recognition\nDescription: Recognition is defined as a subclass of Observation, representing a specific type of observation process. It is further constrained such that any instance of Recognition must be provided only by either a Person or a ProcessingComponent, ensuring that the source of recognition events is always one of these two entities. This formalization distinguishes Recognition events from other Observations based on their permissible providers.\nAxiom: {'subClassOf': ['Observation'], 'propertyRestrictions': ['[providedBy only (event:Person or ProcessingComponent)]', '[describes only event:ComplexActivity]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every recognition describe at least one Complex activity?", "1": "Is it required for a recognition to have the property 'describes' associated with some Complex activity?", "2": "Can a recognition exist without being linked via 'describes' to any Complex activity?", "3": "Does the presence of 'describes' connecting a recognition to a Complex activity serve as a necessary condition for a valid recognition?", "4": "Is there any recognition that does not relate through 'describes' to a Complex activity?", "5": "Can a recognition possess the property 'describes' only if its subject is a Complex activity?", "6": "Are all recognitions characterized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Result\nDescription: Result is a class characterized by several property restrictions: each Result must be described by exactly one DaySummary or Problem, and may only describe these types. Each Result must be provided by exactly one entity, which can be either a Person or a ProcessingComponent, and may only be provided by these types. Furthermore, each Result must have exactly one reporting time, which must be an instance of time:Instant. Results may have plausibility metrics, represented only by values of type xsd:double. These restrictions ensure that every Result is uniquely linked to its source, time, and subject, reflecting precise and validated reporting.\nAxiom: {'propertyRestrictions': ['[providedBy exactly 1 (event:Person or ProcessingComponent)]', '[hasReportingTime exactly 1 time:Instant]', '[hasReportingTime only time:Instant]', '[describes only (home:DaySummary or home:Problem)]', '[providedBy only (event:Person or ProcessingComponent)]', '[hasPlausibilityMetric only xsd:double]', '[describes exactly 1 (home:DaySummary or home:Problem)]', '[hasPlausibilityMetric exactly 1 xsd:double]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every result necessarily include at least one hasPlausibilityMetric property with a value from the xsd:double data type?", "1": "Is it required for any result to possess a hasPlausibilityMetric property whose value is drawn exclusively from xsd:double?", "2": "Can a result exist without being associated via hasPlausibilityMetric to any xsd:double value?", "3": "Relevant axiom: [hasPlausibilityMetric only xsd:double]", "4": "Does the presence of a hasPlausibilityMetric property with an xsd:double value constitute sufficient condition for defining a valid result?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: roomLocalisation\nDescription: The property \"roomLocalisation\" has no explicitly defined domain, range, or characteristics, and is not specified as a sub-property or inverse of any other property. In the absence of further axioms or existing description, its use and related entities remain unspecified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of roomLocalisation necessarily have an associated value from the set None?", "1": "Is it required for the range of roomLocalisation to be restricted to None?", "2": "Can roomLocalisation have values outside of the class None?", "3": "Does roomLocalisation allow any value other than None?", "4": "Is there any instance allowed for which the value of roomLocalisation does not belong to None?", "5": "Can the range of roomLocalisation include elements beyond those classified under None?", "6": "Does roomLocalisation accept values that are not instances of None?", "7": "Is the range of roomLocalisation limited exclusively to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasParticipant\nDescription: The property \"hasParticipant\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. It can be used to relate any two individuals in the ontology without restriction. No additional description or constraints are provided by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every participant in a group have multiple roles?", "1": "Is it required for each role within a group to belong to at least one participant?", "2": "Does the existence of a role necessarily imply its association with some participant through the â€˜hasParticipantâ€™ property?", "3": "Can there exist a role that is not associated with any participant via the â€˜hasParticipantâ€™ property?", "4": "Is it possible for a participant to possess more than one role?", "5": "Are all entities with the role classified as participants under the â€˜hasParticipantâ€™ relationship?", "6": "Must every entity with a role also be recognized as a participant in this context?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" has no explicitly defined characteristics, domain, or range restrictions. It does not specify any super-properties or inverse properties. This property is generally intended to associate an entity with a quality but its precise usage is not restricted by axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every value of the property â€˜hasQualityâ€™ necessarily have at least one associated value through the property â€˜hasQualityâ€™?", "1": "Is it required for all instances of â€˜hasQualityâ€™ to possess some related instance via â€˜hasQualityâ€™?", "2": "Can there exist an object with â€˜hasQualityâ€™ without being linked to another object via â€˜hasQualityâ€™?", "3": "Does the existence of â€˜hasQualityâ€™ imply the presence of a corresponding link through â€˜hasQualityâ€™?", "4": "Is it possible for â€˜hasQualityâ€™ to be present without being connected to anything else via â€˜hasQualityâ€™?", "5": "Are all"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasAgent\nDescription: The property \"hasAgent\" does not have asserted characteristics, domain, or range restrictions. It is not defined as a sub-property of any other property and has no specified inverse. This property is intended to relate entities to their agents, but its usage is not formally constrained by ontology axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value assigned to the property â€˜hasAgentâ€™ also be a subject for the property â€˜hasRoleâ€™?", "1": "Is it necessary for an individual related via â€˜hasAgentâ€™ to participate in at least one role through â€˜hasRoleâ€™?", "2": "Does the existence of a â€˜hasAgentâ€™ relationship imply the presence of a corresponding â€˜hasRoleâ€™ connection?", "3": "Next CQ:Is there any instance that can serve as the subject of both â€˜hasAgentâ€™ and â€˜hasRoleâ€™ properties?", "4": "Can an entity possess both roles and agents simultaneously according to these definitions?", "5": "Are all individuals connected via"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: providedBy\nDescription: The property \"providedBy\" has no specified characteristics, domain, or range, and is not defined as a sub-property of or inverse to any other property. Its use and applicable classes are unrestricted, indicating a general-purpose relationship for associating entities with their providers.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value of the 'providedBy' property also be a member of the class None?", "1": "Is it required that all instances related through 'providedBy' belong to the set defined by None?", "2": "Does the range of the 'providedBy' property include at least one element from None?", "3": "Can a value associated with 'providedBy' ever have a type outside of None?", "4": "Is there any instance that could serve as a valid 'providedBy' value without being classified under None?", "5": "Does the definition of 'providedBy' restrict its values exclusively to those within None?", "6": "Are all"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no explicitly defined characteristics, domain, or range restrictions, and does not specify any super-properties or inverse properties. It is used to relate entities to their duration, but the types of subjects or objects are not formally constrained.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every instance related by the â€˜durationâ€™ property have a value within the set of None?", "1": "Is it required for the â€˜durationâ€™ property to have either None as its range or no specified range at all?", "2": "Does the â€˜durationâ€™ property allow values other than None as its range?", "3": "Next CQ:Is there any restriction on the type of value that can serve as the range for the â€˜durationâ€™ property?", "4": "Can the range of the â€˜durationâ€™ property include elements beyond None?", "5": "Does the specification permit instances associated via the â€˜durationâ€™ property to lack a defined range?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPlausibilityMetric\nDescription: The property \"hasPlausibilityMetric\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property and has no defined inverse. The purpose of this property is not currently described and would depend on its intended use within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What properties are defined as inverses for â€˜hasPlausibilityMetricâ€™?", "1": "If entity A has plausibility metric B via â€˜hasPlausibilityMetricâ€™, does it follow that B has plausibility metric A via â€˜hasPlausibilityMetricâ€™?", "2": "Which entities can serve as the inverse subject for â€˜hasPlausibilityMetricâ€™?", "3": "Next CQ:Is there any property besides â€˜hasPlausibilityMetricâ€™ that is declared as an inverse to another property?", "4": "Can you demonstrate how â€˜hasPlausibilityMetricâ€™ and another property form an inverse pair in the ontology"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: attachedTo\nDescription: The property \"attachedTo\" has no explicitly defined characteristics, domain, or range restrictions and is not specified as a sub-property or an inverse of any other property. This indicates that \"attachedTo\" is a general-purpose property intended to express an unspecified attachment relationship between entities.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'attachedTo' relate an individual of type None to an entity outside the set of None?", "1": "Is it valid for 'attachedTo' to connect a value from the None class to something not categorized under None?", "2": "What types can serve as the subject or object in the 'attachedTo' relationship, according to its current definition?", "3": "Does 'attachedTo' have any explicit domain restriction limiting its subjects to entities classified under None?", "4": "Can 'attachedTo' ever link two individuals where both are instances of None?", "5": "Are there any specific entities allowed in the range of 'attachedTo',"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a sub-property of any other property and has no inverse property declared. Its intended usage is not further detailed by current axioms or description.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of 'endTime' have at least one value associated via the 'hasEndTime' property?", "1": "Can we infer from the data that for each 'endTime', there exists some entity connected by 'hasEndTime'?", "2": "Is it required for all entities related through 'hasEndTime' to have corresponding values for 'endTime'?", "3": "Does the existence of 'endTime' entail the presence of at least one value linked by 'hasEndTime'?", "4": "Are all instances with 'endTime' necessarily connected to some object via the 'hasEndTime' relationship?", "5": "Can we conclude that if something has 'endTime', then"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: refersTo\nDescription: The property \"refersTo\" has no explicitly defined domain, range, characteristics, super-properties, or inverse properties. This indicates its use is unconstrained with respect to the types of entities it connects, allowing it to relate any two individuals without restriction.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What entities can serve as the subject for the â€˜referstoâ€™ property?", "1": "Can objects other than those specified in the domain of â€˜referstoâ€™ be used as subjects?", "2": "Is there any defined upper bound on the kinds of objects allowed as subjects for â€˜referstoâ€™?", "3": "Does the property â€˜referstoâ€™ have a declared domain?", "4": "Which classes are recognized as valid domains for the property â€˜referstoâ€™?", "5": "Are all possible values of the â€˜referstoâ€™ property restricted to members within its stated domain?", "6": "What types of entities are permitted as the domain for the â€˜refersto"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: describes\nDescription: The property \"describes\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. It is a general property intended to associate one entity with another in a descriptive relationship, without restrictions on the types of entities it connects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any value serve as both the subject and object for the property â€˜describesâ€™?", "1": "Is there at least one instance where the same individual is related to itself via the property â€˜describesâ€™?", "2": "Does the property â€˜describesâ€™ allow for self-referential relationships within its domain?", "3": "Next CQ:Is it possible for two different entities to have the same value for the property â€˜describesâ€™, such that they are both described by the same thing?", "4": "Can the property â€˜describesâ€™ relate distinct individuals to the same resource?", "5": "Are all instances of the property â€˜describes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasReportingTime\nDescription: The property \"hasReportingTime\" has no explicitly defined characteristics, domain, or range restrictions. It is not specified as a subproperty of any other property and does not have an inverse property. No additional description or constraints are currently provided, indicating that its intended usage and value type are not restricted by the ontology at this stage.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every reporting time be assigned to only one report through the hasReportingTime property?", "1": "Is it necessary for each report to have exactly one reporting time via the hasReportingTime relationship?", "2": "Can multiple reports share the same reporting time when connected via hasReportingTime?", "3": "Does the hasReportingTime property allow a report to be associated with more than one reporting time?", "4": "Is there any report that can have multiple reporting times as described by the hasReportingTime property?", "5": "Are all reporting times unique across all reports linked by the hasReportingTime property?", "6": "Does the definition of the hasReportingTime property"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Measurement\nDescription: Measurement is defined as a subclass of Event. Each instance of Measurement must refer to exactly one Entity and is related only to entities of the class Entity. It must also possess exactly one PhysicalQuality, and the hasQuality property can only reference members of PhysicalQuality. Additionally, every Measurement must have exactly one value, this value being a literal as specified by the rdfs:Literal datatype. These axioms ensure that each Measurement event precisely characterizes the act of quantifying a single quality of a single entity and recording this observation as a literal value.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasQuality only PhysicalQuality]', '[refersTo exactly 1 Entity]', '[hasValue exactly 1]', '[hasQuality exactly 1 PhysicalQuality]', '[refersTo only Entity]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every measurement necessarily relate through refersTo to at least one entity?", "1": "Is it required for any measurement to referTo some entity within its domain?", "2": "Can a measurement exist without referringTo any entity?", "3": "Does the presence of refersTo with an entity suffice for defining a measurement?", "4": "Must all measurements include at least one refersTo relationship to an entity?", "5": "Are there measurements that do not have a refersTo link to an entity?", "6": "Is it possible for a measurement to lack the refersTo relation to any entity?", "7": "Should every measurement have exactly one refersTo connection to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhoneRinging\nDescription: PhoneRinging is defined as a subclass of Ringing, describing events or states where ringing occurs specifically due to a telephone. Every instance of PhoneRinging is associated with at least one agent that is a telephone, as specified by the property restriction (hasAgent some Telephone). This ensures that PhoneRinging refers exclusively to ringing acts caused by telephones, distinguishing it from other types of ringing (such as an alarm or bell).\nAxiom: {'subClassOf': ['Ringing'], 'propertyRestrictions': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of PhoneRinging necessarily have the hasAgent property connected to something that is a telephone?", "1": "Is it required for PhoneRinging to involve at least one agent that is a telephone?", "2": "Can PhoneRinging exist without being associated via hasAgent to any telephone?", "3": "Next CQ:Is there any entity classified under PhoneRinging that does not participate in the hasAgent relationship with a telephone?", "4": "Are all instances of PhoneRinging characterized by having at least one telephone as its agent through the hasAgent property?", "5": "Does the definition of PhoneRinging ensure that each occurrence must include"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InLocation\nDescription: InLocation is defined as a subclass of AtomicActivity, representing activities associated with a specific physical location. Every instance of InLocation must have at least one roomLocalisation relationship to a Room, ensuring that all activities of this class are explicitly linked to a room where they occur.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[roomLocalisation some Room]']}\nGenerated CQs:", "generated_outputs": {"0": "Does InLocation fall under the broader classification of AtomicActivity?", "1": "Which entities are categorized as subclasses of AtomicActivity, such as InLocation?", "2": "What higher-level classes does InLocation inherit from within the context of AtomicActivity?", "3": "Next level up in hierarchy for InLocation", "4": "Is InLocation classified under AtomicActivity?", "5": "Which atomic activities encompass InLocation as a more specific type?", "6": "What are the parent categories of InLocation when viewed through the lens of AtomicActivity?", "7": "Does InLocation represent a specialized kind of AtomicActivity?", "8": "Which atomic activity types include InLocation as their subclass?", "9": "Under"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HeartRate\nDescription: HeartRate is defined as a subclass of PhysiologicalMeasurement, representing a specific type of physiological measurement characterized by having exactly one associated rate value, which must be provided as a literal (numerical) value. This class ensures that every instance of HeartRate records precisely one measurement value through the hasRate property.\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasRate exactly 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every HeartRate necessarily have at least one hasRate property with a numerical value?", "1": "Is it required for all instances of HeartRate to possess some rate specified via the hasRate property with a numeric value?", "2": "Can a HeartRate exist without being linked by hasRate to any numerical value?", "3": "Next CQ:Is there any HeartRate without the hasRate relationship to a numerical value?", "4": "Does the definition allow for a HeartRate lacking association via hasRate with a number?", "5": "Only HeartRates with no hasRate link to numbers are valid according to this rule, correct?", "6": "Last CQ"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InRoom\nDescription: InRoom is defined as a subclass of InLocation, indicating that it represents a more specific type of location context. Every instance of InRoom must be associated with at least one Place through the roomLocalisation property. This formalization ensures that anything classified as InRoom is located within a specified Place, thereby refining its spatial characterization within a broader location hierarchy.\nAxiom: {'subClassOf': ['InLocation'], 'propertyRestrictions': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every InRoom entity necessarily have at least one relationship via roomLocalisation to some Place?", "1": "Is it required for all instances of InRoom to be linked to exactly one or more Places through roomLocalisation?", "2": "Can an InRoom exist without being related by roomLocalisation to any Place?", "3": "Next CQ:Is there any InRoom instance that does not participate in a roomLocalisation relationship with a Place?", "4": "Does the presence of roomLocalisation linking an InRoom to a Place constitute a necessary condition for InRoom classification?", "5": "Only InRooms that are localized in at least one Place"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KettleOn\nDescription: KettleOn is a subclass of On, representing states or events in which something is switched on. Specifically, KettleOn instances are characterized by having some agent that is a Kettle (i.e., a Kettle is responsible for or involved in the 'on' state). This ensures that only situations where a Kettle is turned on are included in this class.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[hasAgent some Kettle]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of KettleOn have at least one hasAgent relationship to a Kettle?", "1": "Is it required for any entity classified as KettleOn to be associated through hasAgent with a Kettle?", "2": "Can a KettleOn exist without being linked via hasAgent to a Kettle?", "3": "Does the presence of the hasAgent property to a Kettle define all possible instances of KettleOn?", "4": "Are there KettleOn entities that do not possess the hasAgent relation to a Kettle?", "5": "Is the hasKettle association essential for distinguishing KettleOn from other classes?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lying\nDescription: Lying is defined as a subclass of Posture and is characterized by the requirement that it occurs in association with some piece of Furniture. Any instance of Lying must involve an object that is at least partially localized on furniture, distinguishing this posture from other postures that may occur in different contexts.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[objectLocalisation some Furniture]']}\nGenerated CQs:", "generated_outputs": {"0": "Does lying fall under the broader category of Posture?", "1": "Which specific types are encompassed within Posture, including lying?", "2": "What higher-level classes does lying inherit from?", "3": "Next level up in the hierarchy for lying would be what class?", "4": "Is lying classified as a kind of Posture?", "5": "Which postures have lying as their more general category?", "6": "To which overarching concepts does lying pertain within the context of posture classification?", "7": "Does lying represent a specialized form of posture or does it relate to something else entirely?", "8": "Which individuals or subclasses are categorized as forms of Posture, such"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Active\nDescription: Active is defined as a subclass of State. This means that any instance of Active is also an instance of State, representing a particular condition or mode within the broader context of states. Active inherits all general properties and constraints of State, distinguishing itself as a specific form or type of state.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses are encompassed by State, such as Active?", "1": "What higher-level categories include Active as a member?", "2": "Is Active classified under the broader category of State?", "3": "Next level up from Active in the hierarchy is which class?", "4": "Which classes fall under the State category, including Active?", "5": "Does Active represent a more specific kind within State?", "6": "Under what overarching group does Active reside?", "7": "What are the direct superclasses associated with Active?", "8": "Is Active categorized under the broader class of State?", "9": "Which concepts are considered subtypes of State, such as Active?", "10": "How does Active relate"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Apnea\nDescription: Apnea is defined as a subclass of State, indicating that it represents a specific type of state or condition. Individuals classified as Apnea are instances where an organism is in a particular state, typically characterized by the temporary cessation of breathing. This classification ensures that Apnea is formally recognized as a distinct physiological state within the ontology.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "generated_outputs": {"0": "Does Apnea fall under the broader category of State?", "1": "Which states have Apnea as a more specific instance?", "2": "What higher-level categories encompass Apnea?", "3": "Next level up from Apnea in the hierarchy is what class?", "4": "Is every instance of Apnea also classified under State?", "5": "Which subclasses are included within State, specifically mentioning Apnea?", "6": "To which parent classes does Apnea belong?", "7": "Does Apnea represent a specialized form of State?", "8": "Which entities are categorized under State, including Apnea?", "9": "Is Apnea an example of a State or one of its sub"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Arousal\nDescription: Arousal is defined as a subclass of State, representing a specific type of state within the ontology. Members of the Arousal class inherit all characteristics of State, indicating that arousal denotes a particular condition or status, although no further differentiating axioms or property restrictions are specified.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass Arousal?", "1": "Which states have Arousal as a more specific instance?", "2": "Is Arousal classified under the general category of State?", "3": "Next level up from Arousal within the hierarchy is which concept?", "4": "To what higher-level concepts does Arousal belong?", "5": "Does every instance of Arousal fall under the category of State?", "6": "What subclasses are included under State, such as Arousal?", "7": "Which entities are categorized as subtypes of State, including Arousal?", "8": "Is Arousal recognized as a specialized form of State?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MoveLimb\nDescription: MoveLimb is defined as a subclass of State, indicating that it represents a specific type of state within the ontology. This class characterizes conditions or situations involving the movement of a limb, and inherits all general properties applicable to State. There are no additional restrictions or disjointness axioms specified for MoveLimb.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "generated_outputs": {"0": "Does MoveLimb fall under the broader classification of State?", "1": "Which subclasses are encompassed by State, including MoveLimb?", "2": "What higher-level categories does MoveLimb inherit from?", "3": "Next level up from MoveLimb in the hierarchy is State.", "4": "Is every instance of MoveLimb also classified as a State?", "5": "To which parent classes is MoveLimb conceptually related?", "6": "What concepts are more specific than State, such as MoveLimb?", "7": "Does MoveLimb have any superclasses beyond State?", "8": "Which entities are classified directly beneath State, including MoveLimb?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Posture\nDescription: Posture is defined as a subclass of State, meaning any instance of Posture is also an instance of State. This class represents the particular physical alignment or arrangement of an organism or object. The lack of disjointness or additional restrictions indicates Posture is broadly characterized within the hierarchy of states or conditions.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "generated_outputs": {"0": "What are the specific subclasses included under State, such as Posture?", "1": "Which broader categories encompass Posture according to its classification?", "2": "Is Posture classified as a type of State?", "3": "Next higher-level concepts that include Posture are which ones?", "4": "What are all the categories that Posture falls under?", "5": "Does every instance of Posture also belong to the category of State?", "6": "Under which general classes does Posture have been categorized?", "7": "Which entities are considered more general than Posture within this context?", "8": "Is there any entity that belongs exclusively to either Posture or another separate category?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Rest\nDescription: Rest is defined as a subclass of State, indicating that it represents a specific type of state within the ontology. No further restrictions or properties are specified, and it is annotated with the comment \"DTI-2.\"\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "generated_outputs": {"0": "Which states encompass more specific categories such as Rest?", "1": "Is Rest classified under the broader category of State?", "2": "What general classes include Rest as a member?", "3": "Next level parent class for Rest in the hierarchy is which one?", "4": "Does Rest fall under the general category of State?", "5": "Which subclasses are included within State, specifically Rest?", "6": "To what overarching concepts does Rest belong?", "7": "Which entities are categorized as specializations of State, including Rest?", "8": "Under which higher-level classification does Rest exist?", "9": "Is Rest recognized as a kind of State?", "10": "Which higher-level groupings contain Rest?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AlarmClock\nDescription: AlarmClock is defined as a subclass of Object. This classification indicates that every instance of AlarmClock is an Object, inheriting all associated characteristics. No additional properties or constraints are specified in the current axiom or description.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass AlarmClock within the ontology?", "1": "Is AlarmClock classified under the general category of Object?", "2": "Which subclasses fall under the category of Object, including AlarmClock?", "3": "Next higher level categories for AlarmClock include which ones?", "4": "Does AlarmClock represent a more specific type within the Object class hierarchy?", "5": "What entities are categorized as subclasses of Object, such as AlarmClock?", "6": "Which superclasses does AlarmClock inherit from in this context?", "7": "Is AlarmClock considered a kind of Object according to the ontology?", "8": "To what overarching groups does AlarmClock belong in the ontology?", "9": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Appliance\nDescription: Appliance is defined as a subclass of Object, indicating that every appliance is an object within the domain. This class encompasses all physical objects designed to perform specific functions, typically in a household or industrial setting. No further restrictions or specializations are specified in the current axioms.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories does Appliance belong to?", "1": "Which subclasses fall under Object, such as Appliance?", "2": "Is Appliance classified under the broader category of Object?", "3": "Next level up from Appliance in the hierarchy is what type?", "4": "Does Appliance represent a specialized kind of Object?", "5": "Which entities encompassed by Appliance exist at a more general level called Object?", "6": "What overarching concepts include Appliance as a subordinate member?", "7": "Can Appliance be seen as a subset of Objects in this context?", "8": "Under which parent classes is Appliance formally categorized?", "9": "Are there any other types"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Book\nDescription: Book is defined as a subclass of Object. This formalization states that every Book is an Object, inheriting all general characteristics of Objects. No further restrictions or distinguishing properties are specified in the current axiom or description.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "What specific types are encompassed within the category of Object, such as Book?", "1": "Is Book classified under the broader group of Object?", "2": "Which more general categories include Book as a member?", "3": "Next level up from Book in the hierarchy is which class?", "4": "Does Object encompass Book as one of its subclasses?", "5": "What entities are categorized beneath Object, including Book?", "6": "Is Book considered a special kind of Object?", "7": "Which higher-level classes does Book fall under in this context?", "8": "Does Book represent a particular type of Object?", "9": "Under which overarching class is Book situated?", "10": "Which objects are categorized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bucket\nDescription: Bucket is defined as a subclass of Object. This means that every instance of Bucket is considered an Object, inheriting all the general properties and constraints associated with Objects. Since no additional restrictions or relations are specified, Bucket serves as a more specific type of Object without further distinguishing characteristics in this formalization.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level classes encompass Bucket?", "1": "Is Bucket categorized under Object?", "2": "What entities are subclasses of Object, including Bucket?", "3": "Next level up from Bucket within the hierarchy is which class?", "4": "Does Bucket fall under the broader classification of Object?", "5": "Which concepts are directly subsumed by Object, such as Bucket?", "6": "What are the direct parent categories for Bucket?", "7": "Is Bucket classified as a specialized form of Object?", "8": "To what overarching group does Bucket pertain according to its hierarchical structure?", "9": "Which more general classes include Bucket as a member?", "10": "Can Bucket be seen as a kind of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cup\nDescription: Cup is defined as a subclass of Object. This means every cup is considered an object, inheriting all properties and characteristics associated with objects. No additional distinguishing characteristics or property restrictions are specified for the class at this level.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Which classes fall under the category of Object, such as Cup?", "1": "Is every Cup classified as an Object?", "2": "What broader categories does Cup belong to within the ontology?", "3": "Next higher-level classification for Cup", "4": "Does Cup represent a more specific type of Object?", "5": "Which entities are subclasses of Object, including Cup?", "6": "Can Cup be categorized under Object?", "7": "What are the superclasses associated with Cup?", "8": "Is Cup encompassed by the concept of Object?", "9": "To which parent classes does Cup pertain?", "10": "Does Object include Cup as one of its specialized instances?", "11": "Which subclasses are included within"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cuttlery\nDescription: Cuttlery is defined as a subclass of Object, representing items that fall within the broader category of objects. At present, there are no additional restrictions or characteristics specified, so any individual member of Cuttlery must be an Object. Further distinctions or properties distinguishing Cuttlery from other Objects are not provided in the current axiom.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are encompassed by Object, such as Cuttlery?", "1": "What general categories does Cuttlery belong to according to the classification hierarchy?", "2": "Is every instance of Cuttlery also classified under Object?", "3": "Next level up which class includes Cuttlery within its subclasses?", "4": "Does Cuttlery fall under the broader category of Object?", "5": "Which higher-level classes is Cuttlery categorized under?", "6": "Can Cuttlery be considered a more specific type of Object?", "7": "What entities are categorized as subtypes of Object, including Cuttlery?", "8": "Is Cuttlery included among"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Door\nDescription: Door is defined as a subclass of Object. This establishes that every Door is considered an Object within the ontology, inheriting all characteristics and properties assigned to Object. No additional restrictions or disjointness axioms are specified, so the class serves as a general categorization for any entity that can be considered a door.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under Object, such as Door?", "1": "Is Door categorized under the broader group of Object?", "2": "What higher-level classes encompass Door within the ontology?", "3": "Next level up from Door in the hierarchy is which class?", "4": "Does Door fall under the category of Object?", "5": "Which subclasses are contained within Object, specifically including Door?", "6": "What more general concepts does Door inherit from?", "7": "Is Door included among the types classified under Object?", "8": "Under which overarching categories is Door organized?", "9": "Which classes have Door as a member in their subsumption hierarchy?", "10": "Does Object contain Door as one"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorBell\nDescription: DoorBell is defined as a subclass of Object, indicating it is a physical entity or artifact. This class encompasses all entities recognized as doorbells, but no further axiomatic constraints or distinguishing characteristics are specified. Members of this class inherit general properties of objects.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does DoorBell belong to within the ontology?", "1": "Is every DoorBell instance classified under the category of Object?", "2": "Which specific types fall under the classification of Object, such as DoorBell?", "3": "Does DoorBell represent a specialized kind of Object?", "4": "What higher-level categories encompass DoorBell within the ontology structure?", "5": "Is DoorBell categorized as a type of Object?", "6": "Which objects include DoorBell as one of their subclasses?", "7": "Which concepts are more general than DoorBell in terms of classification?", "8": "Is DoorBell organized under the broader concept of Object?", "9": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Furniture\nDescription: Furniture is defined as a subclass of Object, indicating that all pieces of furniture are considered objects. This classification positions furniture within a broader category of tangible entities that have physical presence, without specifying further characteristics or restrictions.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass Furniture?", "1": "Is Furniture classified under the general category of Object?", "2": "Which subclasses fall within the class Object, including Furniture?", "3": "Next level up from Furniture within the hierarchy is what group?", "4": "What are the parent classes for Furniture in this context?", "5": "Does Furniture belong to the same superclass as Object?", "6": "Which superclasses does Furniture inherit from within the ontology?", "7": "Can Furniture be categorized under the more general class Object?", "8": "To which higher-level concepts is Furniture associated through its subclass relationship?", "9": "Is Object the direct superclass of Furniture?", "10": "Which specific instances or subclasses can be"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Glass\nDescription: Glass is defined as a subclass of Object, meaning it represents a specific kind of object within the ontology. No further restrictions or disjointness are specified, so any individual classified as Glass inherits all the properties of Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Does Glass fall under the broader category of Object?", "1": "Which entities are classified as more specific types within Object, such as Glass?", "2": "What higher-level categories include Glass as a member?", "3": "Next level up from Glass in the hierarchy is what class?", "4": "Is Glass categorized as a type of Object?", "5": "To which superclasses does Glass belong?", "6": "Which subclasses exist beneath Object, including Glass?", "7": "Does Glass represent a specialization of Object?", "8": "Under which overarching classes is Glass organized?", "9": "Which other concepts are classified as subtypes of Object, such as Glass?", "10": "Is every instance of Glass also"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KitchenPress\nDescription: KitchenPress is defined as a subclass of Object, indicating that it represents a specific type of object within the ontology. No additional axioms or restrictions are specified, so individuals of this class inherit all properties of Object without further distinguishing characteristics.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Does KitchenPress fall under the broader category of Object?", "1": "Which entities are classified as specializations of Object, such as KitchenPress?", "2": "What general categories does KitchenPress belong to according to the ontology?", "3": "Next level up from KitchenPress in the classification hierarchy is what?", "4": "Is KitchenPress encompassed within the group of Object?", "5": "Is Object a parent class for KitchenPress?", "6": "To which higher-level classes is KitchenPress associated?", "7": "Does KitchenPress represent a kind of Object?", "8": "Which more specific concepts are categorized under Object, including KitchenPress?", "9": "Under which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mop\nDescription: mop is defined as a subclass of Object. This means that every mop is considered to be an Object within the ontology, inheriting all characteristics associated with objects. There are currently no further restrictions or differentiating axioms specified for the mop class.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Does mop fall under the broader category of Object?", "1": "Which specific types are encompassed by Object, such as mop?", "2": "What general classes does mop inherit from according to the ontology?", "3": "Next higher-level categories for mop are which ones?", "4": "Is every mop classified as an instance of Object?", "5": "What kinds of entities are more specialized than Object, like mop?", "6": "Which subclasses are included within Object, including mop?", "7": "Is mop categorized under the superclass Object?", "8": "Which broader groupings include mop as a member?", "9": "Does the concept of mop represent a subset of Objects?", "10": "Under which overarching"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Plate\nDescription: Plate is defined as a subclass of Object. This means that every instance of Plate is also an instance of Object, inheriting all properties and characteristics associated with Object. No further restrictions or characteristics are specified for Plate beyond its classification as an Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level classes encompass Plate within their hierarchy?", "1": "Is Plate categorized under Object?", "2": "What entities are classified as more specific types of Object, such as Plate?", "3": "Next level up from Plate within the class hierarchy is which group?", "4": "Which broader classes does Plate fall under according to the ontology structure?", "5": "Does Plate represent a specialized form of Object?", "6": "Under which overarching categories is Plate positioned?", "7": "To what parent class does Plate belong in terms of classification?", "8": "Are there any subclasses more general than Plate?", "9": "Which higher-order classes include Plate as one of their members?", "10": "Can Plate be"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RemoteControl\nDescription: RemoteControl is defined as a subclass of Object, indicating that all remote controls are considered objects within the ontology. This class captures entities that serve as physical devices used to control other systems or appliances remotely. There are currently no additional property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under the category of Object, such as RemoteControl?", "1": "What broader classes encompass RemoteControl?", "2": "Is RemoteControl classified as a kind of Object?", "3": "Next level up from RemoteControl in the hierarchy is which entity type?", "4": "Which subclasses are included in the category of Object, specifically mentioning RemoteControl?", "5": "Does RemoteControl appear as a more general category than RemoteControl itself?", "6": "To what higher-level groupings does RemoteControl pertain?", "7": "Is RemoteControl categorized as a special case within Objects?", "8": "Under which overarching categories does RemoteControl fall?", "9": "Which concepts are defined"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Telephone\nDescription: Telephone is defined as a subclass of Object, establishing it as a specific type of object. No further restrictions or relationships are specified, so any individual classified as a Telephone is understood to be an object according to the current ontology.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass Telephone within the ontology?", "1": "Is Telephone categorized under the class Object?", "2": "Which entities are subclasses of Object, including Telephone?", "3": "Next level up in the hierarchy for Telephone is what?", "4": "What higher-level concepts include Telephone as a member?", "5": "Does Telephone fall under the category of Object?", "6": "To which parent categories does Telephone belong?", "7": "Is Telephone classified as a kind of Object?", "8": "Which objects have Telephone as one of their more general types?", "9": "Under which overarching classes is Telephone organized?", "10": "Are there other subtypes besides Telephone that are part of Object?", "11": "Which broader"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WaterCan\nDescription: WaterCan is defined as a subclass of Object. This means every water can is formally recognized as an Object within the ontology. No additional axioms or property restrictions are specified, so WaterCan inherits all general characteristics of Object, serving as a specialized type of Object.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under the category of Object, such as WaterCan?", "1": "What broader categories encompass WaterCan according to its classification?", "2": "Is WaterCan classified as a more specific kind of Object?", "3": "Next level up from WaterCan in the hierarchy is what class?", "4": "Which classes are included under Object, including WaterCan?", "5": "Does WaterCan represent a subtype within the Object group?", "6": "Under which overarching class is WaterCan categorized?", "7": "What entities are designated as subclasses of Object, for example WaterCan?", "8": "Can WaterCan be seen as an instance of Object due to its classification?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Window\nDescription: Window is defined as a subclass of Object, indicating that every Window is an Object. No further distinguishing characteristics or constraints are specified beyond this general classification.\nAxiom: {'subClassOf': ['Object']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories does Window fall under?", "1": "What specific instances belong within the category of Object, such as Window?", "2": "Is Window classified under the broader group of Object?", "3": "Can any instance categorized as Object also be recognized as a Window?", "4": "Does Window inherit all properties of its parent class, Object?", "5": "Is there any class more general than Window besides Object?", "6": "Which entities encompass Window as a more specific type within their hierarchy?", "7": "What types of Objects include Window as one of their subclasses?", "8": "Is Window considered a specialized form of Object?", "9": "Which superclasses"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnswerPhoneCall\nDescription: AnswerPhoneCall is defined as a subclass of TelephoneInteraction, indicating that it represents a specialized form of interaction involving telephones. Any individual classified as an AnswerPhoneCall inherently fulfills the characteristics and constraints of a TelephoneInteraction, but is specifically focused on the activity of answering a phone call.\nAxiom: {'subClassOf': ['TelephoneInteraction']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader categories encompass AnswerPhoneCall within the hierarchy?", "1": "Is every AnswerPhoneCall instance also classified under TelephoneInteraction?", "2": "What specific types are included under the category of TelephoneInteraction, such as AnswerPhoneCall?", "3": "Next level up from AnswerPhoneCall within the hierarchy is which class?", "4": "Does AnswerPhoneCall fall under the general classification of TelephoneInteraction?", "5": "Which subclasses are categorized directly under TelephoneInteraction, including AnswerPhoneCall?", "6": "What higher-level concepts does AnswerPhoneCall inherit from?", "7": "Is AnswerPhoneCall a type of TelephoneInteraction?", "8": "To what overarching classes is AnswerPhoneCall assigned"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MakePhoneCall\nDescription: MakePhoneCall is defined as a subclass of TelephoneInteraction, indicating that it represents a specific type of interaction conducted via telephone. Any instance classified as MakePhoneCall necessarily inherits all characteristics of TelephoneInteraction, distinguishing itself as an interaction where a phone call is made.\nAxiom: {'subClassOf': ['TelephoneInteraction']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under the category of TelephoneInteraction, specifically including MakePhoneCall?", "1": "Is MakePhoneCall categorized within the broader class of TelephoneInteraction?", "2": "What parent classes does MakePhoneCall inherit from according to its classification?", "3": "Next level up from MakePhoneCall in the hierarchy is what?", "4": "Does every instance of MakePhoneCall also belong to the group represented by TelephoneInteraction?", "5": "Which higher-level categories encompass MakePhoneCall as a member?", "6": "How are MakePhoneCall and TelephoneInteraction related in terms of their super/subclass relationships?", "7": "To which more general classifications does MakePhoneCall p"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AtomicActivity\nDescription: AtomicActivity is defined as a subclass of Activity. This indicates that every AtomicActivity is an Activity, but it may possess more specific properties or constraints not captured at the Activity level. No additional axioms or restrictions are provided, so AtomicActivity serves as a specialized categorization within the broader class of activities.\nAxiom: {'subClassOf': ['Activity']}\nGenerated CQs:", "generated_outputs": {"0": "Which types fall under the category of Activity, such as AtomicActivity?", "1": "Is AtomicActivity classified as a kind of Activity?", "2": "What general categories include AtomicActivity as a member?", "3": "Next higher-level classification for AtomicActivity is what?", "4": "Does AtomicActivity represent a specialization of Activity?", "5": "Which subclasses are encompassed by Activity, including AtomicActivity?", "6": "To which overarching concepts does AtomicActivity belong?", "7": "How does AtomicActivity relate to the broader concept of Activity?", "8": "Can AtomicActivity be characterized as a type of Activity?", "9": "Under which superclasses is AtomicActivity categorized?", "10": "Is Activity the most"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ComplexActivity\nDescription: ComplexActivity is defined as a subclass of Activity, meaning every ComplexActivity is an Activity. No additional property restrictions or disjointness axioms are specified, indicating that ComplexActivity inherits all characteristics of Activity but may represent more specialized or structured forms of activities.\nAxiom: {'subClassOf': ['Activity']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass ComplexActivity?", "1": "What activities have subclasses such as ComplexActivity?", "2": "Does ComplexActivity fall under the category of Activity?", "3": "Next level up from ComplexActivity in the hierarchy is what?", "4": "Is ComplexActivity classified as a type of Activity?", "5": "Which broader concepts does ComplexActivity belong to within the ontology?", "6": "Can ComplexActivity be viewed as a kind of Activity?", "7": "To which superclasses does ComplexActivity pertain?", "8": "What entities are categorized under Activity, including ComplexActivity?", "9": "Is ComplexActivity a specific form of Activity?", "10": "Under which overarching class is ComplexActivity positioned"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bathroom\nDescription: Bathroom is defined as a subclass of Room, establishing that every bathroom is a specialized type of room. No additional axioms or property restrictions are specified, so its distinguishing characteristic is solely its classification within the broader category of rooms.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "generated_outputs": {"0": "What more general classes does Bathroom belong to?", "1": "Which types of Room include Bathroom as a specific instance?", "2": "Is Bathroom categorized under the broader class of Room?", "3": "Next level up in the hierarchy for Bathroom is what group of entities?", "4": "Does Bathroom fall within the definition of Room?", "5": "Which subclasses are encompassed by Room, such as Bathroom?", "6": "What higher-level categories can Bathroom be assigned to?", "7": "Is Bathroom classified under the overarching concept of Room?", "8": "To which parent concepts does Bathroom pertain?", "9": "Which entities are considered narrower than Room, including Bathroom?", "10": "Can Bathroom be found among"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bedroom\nDescription: Bedroom is defined as a subclass of Room, indicating that every instance of Bedroom is also an instance of Room. This classification structurally organizes Bedroom within the broader hierarchy of building spaces, emphasizing that a Bedroom inherits all general characteristics of a Room while potentially possessing more specific properties related to its intended use as a sleeping area.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "generated_outputs": {"0": "Does Bedroom fall under the category of Room?", "1": "Which rooms are subclasses of Room, such as Bedroom?", "2": "To which higher-level classes does Bedroom pertain in this context?", "3": "Next level up from Bedroom in the hierarchy is what type of entity?", "4": "Is Bedroom classified as a specialized form of Room?", "5": "What entities are encompassed by the category Room, including Bedroom?", "6": "Which broader categories include Bedroom as a member?", "7": "Does Bedroom represent a particular kind of Room or not?", "8": "Under which overarching concepts can Bedroom be categorized?", "9": "Is it correct to say that Bedroom is a subset of Room"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Kitchen\nDescription: Kitchen is defined as a subclass of Room, indicating that every kitchen is considered a type of room within an environment. No additional property restrictions or relationships are specified in the axiom, so the class primarily inherits general characteristics of rooms while denoting its specific use as a kitchen.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under Room, such as Kitchen?", "1": "Is Kitchen classified under the broader category of Room?", "2": "What higher-level categories does Kitchen belong to within the ontology?", "3": "Next higher-level classification for Kitchen would be what?", "4": "Does Kitchen represent a more specialized form of Room?", "5": "Which entities are categorized directly beneath Room, including Kitchen?", "6": "What superclasses encompass Kitchen in this ontology?", "7": "Is Kitchen included among the subtypes of Room?", "8": "Under which overarching concepts can Kitchen be grouped?", "9": "Which other classes are recognized as subtypes of Room, such as Kitchen?", "10": "What are the parent"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LivingRoom\nDescription: LivingRoom is defined as a subclass of Room, representing a specific type of room within a structure. This classification indicates that every instance of LivingRoom is necessarily an instance of Room, inheriting all properties and constraints that apply to Room. No further distinguishing axioms or restrictions are present beyond this subclass relationship.\nAxiom: {'subClassOf': ['Room']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does LivingRoom fall under?", "1": "Is LivingRoom classified as a more specific kind of Room?", "2": "Which rooms include LivingRoom as a specialized form?", "3": "Next level up from LivingRoom in the hierarchy is what category?", "4": "Does LivingRoom represent a subset of the broader class Room?", "5": "What subclasses exist beneath Room, including LivingRoom?", "6": "Is Room the parent category for LivingRoom?", "7": "Which entities encompass LivingRoom as one of their subtypes?", "8": "How does LivingRoom relate hierarchically to other types of rooms?", "9": "Under which general categories is LivingRoom organized?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bed\nDescription: Bed is formally defined as a subclass of Furniture, indicating that every instance of Bed is also an instance of Furniture. This classification situates Bed within the broader category of items intended for furnishing interior spaces. No additional axioms or restrictions are specified.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "generated_outputs": {"0": "Does Bed fall under the general class of Furniture?", "1": "Which specific types of Furniture include Bed as a more detailed subcategory?", "2": "What broader categories does Bed inherit from in terms of furniture classifications?", "3": "Next level of abstraction for Bed within the hierarchy of Furniture?", "4": "Is every Bed necessarily classified as Furniture?", "5": "Under which overarching categories can Bed be grouped according to the ontology?", "6": "Is Furniture encompassing all instances of Bed?", "7": "Which entities are categorized directly beneath Furniture, such as Bed?", "8": "Does Bed have any superclasses beyond Furniture?", "9": "Is Furniture a direct superclass for Bed?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Chair\nDescription: Chair is defined as a subclass of Furniture, indicating that every Chair is a type of Furniture. This formalization situates Chair within a broader hierarchy of household or office items intended for use and support. Without additional restrictions or properties, the class encompasses any object recognized as a Chair within the general category of Furniture.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are classified under Furniture, such as Chair?", "1": "Is Chair categorized as a kind of Furniture?", "2": "What broader classes does Chair fall under in the context of furniture classification?", "3": "Next level up from Chair in the hierarchical structure includes what categories?", "4": "Does Chair inherit all characteristics associated with Furniture?", "5": "Which entities are more general than Chair within the domain of Furniture?", "6": "Can Chair be regarded as a specialized form of Furniture?", "7": "Under which overarching groups can Chair be organized within the furniture taxonomy?", "8": "Are there any other subclasses of Furniture aside from Chair?", "9": "Which higher-level categories encompass Chair"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Couch\nDescription: Couch is defined as a subclass of Furniture, indicating that every couch is a type of furniture. No additional property, disjointness, or restriction axioms are specified, so the class inherits all general characteristics of furniture but is specifically dedicated to couches.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "generated_outputs": {"0": "Does Couch fall under the broader classification of Furniture?", "1": "What specific types of Furniture include Couch as a more detailed category?", "2": "Which higher-level categories encompass Couch within their hierarchy?", "3": "Next level up from Couch in the hierarchical structure is what?", "4": "Is Couch classified as a kind of Furniture?", "5": "To which superclasses does Couch pertain?", "6": "What broader classes does Couch inherit membership from?", "7": "Which entities are categorized as specializations of Furniture, such as Couch?", "8": "Does Couch represent a specialized form of Furniture?", "9": "Under which overarching groupings is Couch organized?", "10": "Is Furniture a superclass that includes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Table\nDescription: Table is defined as a subclass of Furniture, meaning every instance of Table is also considered an instance of Furniture. No additional property restrictions or disjointness axioms are specified, so the class captures any furniture item that qualifies as a table within the ontology.\nAxiom: {'subClassOf': ['Furniture']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories does Table fall under according to the classification?", "1": "Which entities are categorized as more specific types of Furniture, such as Table?", "2": "Is Table classified as a type of Furniture?", "3": "Next level up in the hierarchy for Table is which group of objects?", "4": "Does Table belong to the general category of Furniture?", "5": "What are all the subclasses included in Furniture, including Table?", "6": "To which higher-level classes does Table pertain?", "7": "Is Table encompassed by the broader concept of Furniture?", "8": "What are the parent classes associated with Table?", "9": "Can Table be seen as a kind of Furniture"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: BedExit\nDescription: BedExit is defined as a subclass of ComplexActivity, indicating that it represents a type of complex action or event. Individuals belonging to this class participate in multifaceted activities related to the process of exiting a bed. The classification ensures that any instance of BedExit is recognized specifically as a form of ComplexActivity.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific activities are encompassed under ComplexActivity, such as BedExit?", "1": "Does every BedExit fall within the broader category of ComplexActivity?", "2": "What higher-level activity classifications include BedExit as a more specialized form?", "3": "Next tier up from BedExit among the hierarchy is which activity group?", "4": "Is BedExit categorized as a kind of ComplexActivity?", "5": "Which general categories does BedExit inherit membership from?", "6": "To what overarching activity classes does BedExit belong?", "7": "What subclasses are included within ComplexActivity, for example BedExit?", "8": "Is BedExit classified under the larger concept of ComplexActivity?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fall\nDescription: Fall is defined as a subclass of ComplexActivity, indicating it is categorized as a type of complex activity. The current description notes that a fall occurs \"if not supported by LCS\" (likely referring to 'Lowering Control System' or a similar support mechanism), implying the event is characterized by the absence of this support during the occurrence. No disjointness or specific property restrictions have been asserted for this class.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which activities are classified under ComplexActivity, such as Fall?", "1": "Is Fall encompassed within the broader category of ComplexActivity?", "2": "What more general categories does Fall inherit from according to the ontology?", "3": "Next level up in hierarchy from Fall: ComplexActivity", "4": "Are all Falls also considered ComplexActivities?", "5": "Which subclasses fall under ComplexActivity, including Fall?", "6": "Does Fall represent a specific kind of ComplexActivity?", "7": "Under which higher-level categories can Fall be placed?", "8": "Can any ComplexActivity include instances of Fall as its subcategory?", "9": "Which activities are categorized directly beneath ComplexActivity, such as Fall?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FoodAndDrinkConsumption\nDescription: FoodAndDrinkConsumption is defined as a subclass of ComplexActivity. This class represents activities that involve the intake or consumption of food and/or drink, and it inherits all characteristics of ComplexActivity. No further property restrictions or disjointness axioms are specified, so its definition is based solely on its placement in the activity hierarchy.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does FoodAndDrinkConsumption belong to within the context of complex activities?", "1": "Is FoodAndDrinkConsumption classified under ComplexActivity?", "2": "Which activities are more specific than ComplexActivity, such as FoodAndDrinkConsumption?", "3": "Next level up from FoodAndDrinkConsumption in the hierarchical classification is what?", "4": "Does every instance of FoodAndDrinkConsumption fall under the category of ComplexActivity?", "5": "What are the subclasses encompassed by ComplexActivity, specifically including FoodAndDrinkConsumption?", "6": "Can FoodAndDrinkConsumption be regarded as a kind of ComplexActivity?", "7": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Nap\nDescription: Nap is defined as a subclass of ComplexActivity, indicating that it is a type of complex activity within the ontology. As a ComplexActivity, a nap is considered to involve multiple components or steps beyond a simple action, distinguishing it from more basic activities. No further restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass Nap?", "1": "Which specific instances fall under the category of ComplexActivity, including Nap?", "2": "Is every Nap classified as a form of ComplexActivity?", "3": "Next level up categories for Nap include which types of ComplexActivity?", "4": "Does Nap represent a kind of ComplexActivity?", "5": "Which entities are categorized as subclasses of ComplexActivity, such as Nap?", "6": "Is Nap included among the subtypes of ComplexActivity?", "7": "What general classifications does Nap inherit from within the hierarchy?", "8": "Which ComplexActivities have Nap as one of their more specific forms?", "9": "Is Nap associated with any higher-level concepts in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightSleep\nDescription: NightSleep is defined as a subclass of ComplexActivity, representing the entire sleep episode experienced during the night, including any relevant inferences or processes that occur throughout the sleep period. This class formalization associates NightSleep with complex activities and ensures its distinction by emphasizing the inclusion of all inferable events or activities occurring during sleep.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass NightSleep within the ontology?", "1": "Is NightSleep classified under ComplexActivity?", "2": "Which activities are specified as subclasses of ComplexActivity, such as NightSleep?", "3": "Next level parent category for NightSleep in the hierarchy is which?", "4": "Does NightSleep fall under the general classification of ComplexActivity?", "5": "Which entities are categorized more specifically than ComplexActivity, such as NightSleep?", "6": "What higher-level concepts does NightSleep inherit from?", "7": "Can NightSleep be seen as a type of ComplexActivity?", "8": "Which specific instances are recognized as subtypes of ComplexActivity, like NightSleep?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareDrink\nDescription: PrepareDrink is defined as a subclass of ComplexActivity, indicating that it represents a type of complex activity within the ontological model. Instances of PrepareDrink inherit all characteristics of ComplexActivity and specifically pertain to the processes and actions involved in preparing a drink. The class does not impose further restrictions or differentiators beyond its place in the activity hierarchy.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which activities are more specific than ComplexActivity, such as PrepareDrink?", "1": "What broader classes encompass PrepareDrink according to the ontology structure?", "2": "Does PrepareDrink fall under the category of ComplexActivity?", "3": "Next level up from PrepareDrink in the ontology hierarchy is what?", "4": "Is PrepareDrink classified as a form of ComplexActivity?", "5": "Which types of ComplexActivity include PrepareDrink as a specialized instance?", "6": "What activities are considered subclasses of ComplexActivity, including PrepareDrink?", "7": "Is PrepareDrink categorized as a ComplexActivity or one of its subtypes?", "8": "Under which general categories is PrepareDrink organized in the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareMeal\nDescription: PrepareMeal is defined as a subclass of ComplexActivity, indicating that it represents a type of activity characterized by having multiple interrelated actions or steps. Any instance of PrepareMeal is therefore also an instance of ComplexActivity, situating meal preparation as a process that involves several coordinated activities.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which activities are subclasses under ComplexActivity, such as PrepareMeal?", "1": "What broader categories encompass PrepareMeal within the ontology?", "2": "Is PrepareMeal classified under the category of ComplexActivity?", "3": "Next level parent class for PrepareMeal in the hierarchy is which one?", "4": "Which entities fall under the umbrella of ComplexActivity, including PrepareMeal?", "5": "Does PrepareMeal inherit all properties and restrictions from ComplexActivity?", "6": "How does PrepareMeal relate to its superclass ComplexActivity in terms of property inheritance?", "7": "Are there any other subclasses besides PrepareMeal that are categorized under ComplexActivity?", "8": "To what higher-level concepts does Prepare"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SocialInteraction\nDescription: SocialInteraction is defined as a subclass of ComplexActivity. This specifies that every instance of SocialInteraction is a type of ComplexActivity, indicating that social interactions are considered to involve multiple, coordinated actions or processes. No further restrictions or elaborations are provided, so the class is characterized primarily by its inherited properties from ComplexActivity.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which activities are classified under ComplexActivity, such as SocialInteraction?", "1": "What broader categories encompass SocialInteraction within the ontology?", "2": "Does SocialInteraction fall under the category of ComplexActivity?", "3": "Next level up in classification for SocialInteraction is what group?", "4": "Is SocialInteraction categorized as a kind of ComplexActivity?", "5": "Which subclasses are included in ComplexActivity, specifically including SocialInteraction?", "6": "To which higher-level concepts does SocialInteraction pertain?", "7": "Can SocialInteraction be viewed as a form of ComplexActivity?", "8": "Which entities are specified as subtypes of ComplexActivity, such as SocialInteraction?", "9": "Is Social"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TableExit\nDescription: TableExit is defined as a subclass of ComplexActivity, indicating that every TableExit is a specific type of ComplexActivity. No additional property restrictions, disjointness, or further subclass relations are specified, so individuals of the TableExit class inherit all the general characteristics and behaviors attributed to ComplexActivity. This class is currently characterized solely by its hierarchical relation within the ontology.\nAxiom: {'subClassOf': ['ComplexActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which complex activities encompass TableExit as a more specific category?", "1": "Is TableExit categorized under the broader group of ComplexActivities?", "2": "What types of complex activities include TableExit as a specialized form?", "3": "Next level up in hierarchy for TableExit", "4": "Which activities are classified as specializations of ComplexActivity, such as TableExit?", "5": "Does TableExit represent a narrower classification within ComplexActivity?", "6": "Under which overarching activity types does TableExit fall?", "7": "How are TableExit and ComplexActivity related in terms of classification?", "8": "Are there any higher-level concepts that encompass TableExit?", "9": "Which entities are subsum"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Carer\nDescription: Carer is defined as a subclass of Person, indicating that every Carer is also a Person. No further axioms or property restrictions are specified, so a Carer inherits all characteristics of Person without additional differentiating features in this definition.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "generated_outputs": {"0": "Does Carer fall under the broader classification of Person?", "1": "Which subclasses are encompassed within Person, including Carer?", "2": "To what higher-level categories does Carer belong?", "3": "Next level up from Carer in the hierarchy is which class?", "4": "Is every Carer classified as a type of Person?", "5": "What general groupings include Carer as a member?", "6": "Can a Carer be categorized as a kind of Person?", "7": "Which entities are considered more specific types under Person, such as Carer?", "8": "Does the category of Person encompass Carer as one of its subtypes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Clinician\nDescription: Clinician is defined as a subclass of Person, indicating that every clinician is a person. No further axioms or property restrictions are specified, so the class currently serves as a specialization of Person without additional constraints.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level classes does Clinician fall under?", "1": "Is a Clinician classified as a type of Person?", "2": "Which individuals categorized as Person include subtypes such as Clinician?", "3": "Next level up from Clinician within the hierarchy is what group?", "4": "Does the concept of Person encompass entities like Clinician?", "5": "What broader categories is Clinician associated with in this context?", "6": "Is Clinician represented as a specific kind of Person?", "7": "Under which overarching groups is Clinician organized?", "8": "Does the category Clinician inherit all properties of Person?", "9": "To which more general concepts does Clinician belong?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Patient\nDescription: Patient is defined as a subclass of Person, representing individuals who are receiving or registered to receive medical care or treatment. Any individual designated as a Patient is inherently a Person.\nAxiom: {'subClassOf': ['Person']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level classes encompass Patient?", "1": "Is Patient categorized under Person?", "2": "What entities are more specific than Person, such as Patient?", "3": "Can every Patient be considered a type of Person?", "4": "Which broader classes include Patient as a member?", "5": "Does Patient fall within the classification of Person?", "6": "To which overarching categories does Patient belong?", "7": "Is Patient classified as a subset of Person?", "8": "Which subclasses are included under Person, such as Patient?", "9": "Is it correct to say Patient is a kind of Person?", "10": "What general classes does Patient inherit from?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChangeOrientation\nDescription: ChangeOrientation is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible type of activity within the domain. While the current description provides a brief comment (\"WIMU\"), no detailed explanation is available. Based on its name and axiom, ChangeOrientation likely refers to an atomic activity where the orientation of an entity is altered.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level classifications encompass ChangeOrientation?", "1": "Which activities are categorized under AtomicActivity, such as ChangeOrientation?", "2": "Is ChangeOrientation included among the specialized forms of AtomicActivity?", "3": "Next level up from ChangeOrientation within the hierarchy is which class?", "4": "Does ChangeOrientation fall under the broader category of AtomicActivity?", "5": "What general categories does ChangeOrientation inherit membership in?", "6": "To what more comprehensive groups does ChangeOrientation pertain?", "7": "Which subclasses are directly associated with AtomicActivity, including ChangeOrientation?", "8": "Is ChangeOrientation classified under the overarching concept of AtomicActivity?", "9": "Which entities are recognized as subtypes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChangePosture\nDescription: ChangePosture is defined as a subclass of AtomicActivity, indicating it represents an elementary, indivisible activity within the ontology. While the current description only notes \"WIMU,\" this class structurally inherits all characteristics of AtomicActivity and is intended to capture specific activities related to posture changes.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are more specialized than AtomicActivity, such as ChangePosture?", "1": "What broader categories encompass ChangePosture in the hierarchy?", "2": "Is ChangePosture classified under the category of AtomicActivity?", "3": "Next level parent for ChangePosture in the ontology structure", "4": "Does ChangePosture fall under the general concept of AtomicActivity?", "5": "Which higher-level classes include ChangePosture as a member?", "6": "How does ChangePosture relate hierarchically to AtomicActivity?", "7": "Is AtomicActivity an overarching classification for ChangePosture?", "8": "To what more general concepts does ChangePosture pertain within the ontology"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DialNumber\nDescription: DialNumber is defined as a subclass of AtomicActivity. This means that every instance of DialNumber is also an instance of AtomicActivity. There are no further restrictions or disjointness axioms specified, so DialNumber inherits all characteristics of AtomicActivity without additional distinguishing features. This class is intended to represent the fundamental activity of dialing a number, which is atomic in nature within the modeled domain.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does DialNumber belong to?", "1": "Which activities encompass DialNumber as a more specific type?", "2": "Is DialNumber classified under the category of AtomicActivity?", "3": "Next level up from DialNumber in the hierarchy is what group?", "4": "Does DialNumber fall within the subset of AtomicActivity?", "5": "What concepts are categorized as subtypes of AtomicActivity, including DialNumber?", "6": "Which entities are designated as more general than DialNumber?", "7": "Is DialNumber included among the subclasses of AtomicActivity?", "8": "To which overarching categories does DialNumber pertain?", "9": "Under which higher-level classifications is DialNumber organized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Drink\nDescription: Drink is defined as a subclass of AtomicActivity, indicating that it represents a fundamental activity that cannot be further decomposed into simpler actions. This class encompasses all actions entailing the act of consuming liquids, and inherits general properties and constraints from AtomicActivity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader classes does Drink fall under within the hierarchy?", "1": "Is Drink categorized under AtomicActivity?", "2": "What specific types are encompassed by AtomicActivity, such as Drink?", "3": "Next higher level category for Drink within the ontology structure?", "4": "Does Drink represent a more specialized form of AtomicActivity?", "5": "Which entities are classified under AtomicActivity, including Drink?", "6": "What hierarchical relationships exist between Drink and AtomicActivity?", "7": "Is every instance of Drink also considered an AtomicActivity?", "8": "To which overarching concepts is Drink conceptually related through subClassOf relations?", "9": "Which activities include Drink as a more detailed type under"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Eat\nDescription: Eat is defined as a subclass of AtomicActivity, indicating that it represents a fundamental, indivisible activity within the ontology. Any instance of Eat must also be an instance of AtomicActivity. No further constraints or characteristics are specified.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories does Eat fall under within the context of activities?", "1": "Which atomic activities encompass Eat as a more specific type?", "2": "Does Eat represent a specialized form of AtomicActivity?", "3": "Next level up in hierarchy for Eat is what?", "4": "Is Eat classified under AtomicActivity?", "5": "Which atomic activities include Eat as their member class?", "6": "What general groupings include Eat as a subordinate concept?", "7": "Can Eat be considered a subset of AtomicActivity?", "8": "Which classes are categorized as types of AtomicActivity, such as Eat?", "9": "Does Eat belong to the broader category of AtomicActivity?", "10": "Is every Eat"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalActivity\nDescription: PhysicalActivity is defined as a subclass of AtomicActivity. This classification indicates that any instance of PhysicalActivity is also an instance of AtomicActivity, inheriting all its properties and constraints. PhysicalActivity, therefore, represents a specific kind of AtomicActivity, typically involving bodily movement or exertion. No other disjointness or additional property restrictions are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass PhysicalActivity?", "1": "Is every instance of PhysicalActivity classified under AtomicActivity?", "2": "What activities fall within the category of AtomicActivity, including PhysicalActivity?", "3": "Next level up from PhysicalActivity in the hierarchy is what type of activity?", "4": "Does PhysicalActivity represent a specialized form of AtomicActivity?", "5": "Which broader concepts include PhysicalActivity as a member?", "6": "Can PhysicalActivity be seen as a subset of AtomicActivity?", "7": "What activities are more specifically categorized under AtomicActivity, such as PhysicalActivity?", "8": "Is there any activity that is not included within PhysicalActivity but is still considered an"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PickUpPhone\nDescription: PickUpPhone is defined as a subclass of AtomicActivity, indicating that it represents an indivisible, fundamental action within a larger process or workflow. This classification implies that PickUpPhone is treated as a single, non-decomposable activity in the ontology. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which activities are classified under AtomicActivity, such as PickUpPhone?", "1": "What broader categories encompass PickUpPhone within the ontology?", "2": "Is PickUpPhone categorized under the class AtomicActivity?", "3": "Next level parent classes for PickUpPhone include which types?", "4": "Does PickUpPhone fall under the general category of AtomicActivity?", "5": "Which subclasses are included under AtomicActivity, specifically including PickUpPhone?", "6": "How does the hierarchy relate PickUpPhone to AtomicActivity?", "7": "To what overarching classes is PickUpPhone assigned?", "8": "Is PickUpPhone categorized as a type of AtomicActivity?", "9": "What are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sleep\nDescription: Sleep is defined as a subclass of AtomicActivity, indicating that it represents a fundamental, indivisible type of activity within the given ontology. The current description (\"Gear 4 / DTI-2\") provides domain-specific or contextual labeling but does not further characterize the nature of Sleep. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass Sleep within the ontology?", "1": "Is Sleep classified under the category of AtomicActivity?", "2": "Which activities fall under the concept of AtomicActivity, including Sleep?", "3": "Next higher-level groupings for Sleep include which entities besides AtomicActivity?", "4": "Does Sleep represent a more specific form of AtomicActivity?", "5": "What subclasses exist beneath AtomicActivity, such as Sleep?", "6": "Can any entity be considered both Sleep and AtomicActivity at the same time?", "7": "Is Sleep categorized exclusively under AtomicActivity without overlap with other classes?", "8": "Which types are recognized as subtypes of AtomicActivity, including Sleep?", "9": "Under"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Speak\nDescription: Speak is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible action within the ontology. Any instance of Speak is necessarily an AtomicActivity, but not all AtomicActivities are instances of Speak. No additional property restrictions or class relationships are specified for Speak in the current axiom.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which activities are more specific than AtomicActivity, such as Speak?", "1": "Is every instance of Speak classified under AtomicActivity?", "2": "What broader categories encompass the concept of Speak?", "3": "Next level up from Speak in the hierarchy: AtomicActivity", "4": "Does the classification structure include Speak as a subtype of AtomicActivity?", "5": "Which general activity classes does Speak fall under?", "6": "Is Speak categorized under the broader group of AtomicActivity?", "7": "Which entities are considered subclasses of AtomicActivity, including Speak?", "8": "To which superclasses does Speak pertain within the hierarchy?", "9": "Can any activity be classified as both Speak and AtomicActivity"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: State\nDescription: State is defined as a subclass of AtomicActivity, indicating that every State represents an atomic (indivisible) activity within a given framework. This classification positions State as a fundamental unit of activity, inheriting all characteristics and constraints of AtomicActivity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass State according to the ontology?", "1": "Which entities are specified as subclasses under AtomicActivity, such as State?", "2": "Does State fall within the category of AtomicActivity?", "3": "Next higher-level categories for State include which ones?", "4": "What activities does State inherit its classification from?", "5": "Is State categorized under AtomicActivity?", "6": "To what more general concepts is State hierarchically related?", "7": "Which subclasses are classified under AtomicActivity, including State?", "8": "Under which overarching activity types is State organized?", "9": "Does State represent a type of AtomicActivity?", "10": "Which other classes are recognized as subtypes of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StepCounting\nDescription: StepCounting is defined as a subclass of AtomicActivity, indicating that it represents a specific, indivisible type of activity. The class is annotated with the comment \"WIMU,\" which may refer to its association with wearable inertial measurement unit systems, commonly used for tracking activity metrics such as steps. No further property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass StepCounting within the ontology?", "1": "Is StepCounting classified under the broader category of AtomicActivity?", "2": "What activities are more specific than AtomicActivity, including StepCounting?", "3": "Next level up from StepCounting in the hierarchy is what type of activity?", "4": "Does every instance of StepCounting also fall into the category of AtomicActivity?", "5": "Which broader classes include StepCounting among their subclasses?", "6": "How does StepCounting relate to AtomicActivity in terms of classification?", "7": "Are there any activities that have both StepCounting and AtomicActivity assigned as parent types"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UseObject\nDescription: UseObject is defined as a subclass of AtomicActivity, indicating that it represents a specific type of atomic activity within the ontology. By this axiom, all instances of UseObject inherit the general properties and constraints of AtomicActivity, situating UseObject as a more specialized activity focused on the usage of objects.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are categorized under AtomicActivity, including UseObject?", "1": "Is UseObject classified as a kind of AtomicActivity?", "2": "What broader classes does UseObject fall under according to the ontology structure?", "3": "Next level up from UseObject in the hierarchy is which class?", "4": "Does UseObject represent a specialization of AtomicActivity?", "5": "Which activities encompass UseObject as their subclass?", "6": "Under what overarching categories can UseObject be organized?", "7": "To which higher-level concepts does UseObject pertain in the ontology?", "8": "Is AtomicActivity the most general category to which UseObject belongs?", "9": "What subtypes are included"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Walk\nDescription: Walk is defined as a subclass of AtomicActivity, indicating that walking is considered a fundamental unit of activity within the ontology. No additional property restrictions or disjointness axioms are specified, so Walk inherits all characteristics of AtomicActivity, serving to represent the act of walking as a basic type of activity.\nAxiom: {'subClassOf': ['AtomicActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which activities are more specific than AtomicActivity, such as Walk?", "1": "What broader categories encompass Walk within the ontology structure?", "2": "Is Walk classified under the category of AtomicActivity?", "3": "Next higher-level concepts for Walk include which class?", "4": "Does Walk fall under the general group of AtomicActivity?", "5": "Which subclasses are included within AtomicActivity, specifically Walk?", "6": "To what parent classes does Walk pertain according to the ontology hierarchy?", "7": "Are there any atomic activities other than Walk that have no further specialization?", "8": "Which entities are categorized directly beneath AtomicActivity, including Walk?", "9": "Can Walk be assigned as a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Closed\nDescription: Closed is defined as a subclass of ObjectEvent, indicating that it represents a specific type of event involving an object. Any individual belonging to the class Closed is inherently classified as an ObjectEvent, inheriting all of its characteristics. No additional distinguishing restrictions or properties are specified for Closed beyond its relationship to ObjectEvent.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass Closed within the ontology?", "1": "Which events are more specific than ObjectEvent, such as Closed?", "2": "Is Closed categorized under the general concept of ObjectEvent?", "3": "Next higher-level classes for Closed include which types of ObjectEvent?", "4": "Does every instance of Closed fall under the classification of ObjectEvent?", "5": "What entities are subclasses of ObjectEvent, including Closed?", "6": "Can Closed be classified as a special kind of ObjectEvent?", "7": "To what parent classes does Closed pertain according to the ontology structure?", "8": "Is there any other category that encompasses Closed beyond ObjectEvent?", "9": "Which concepts are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Off\nDescription: Off is defined as a subclass of ObjectEvent. This means every instance of Off is also an instance of ObjectEvent, inheriting all its properties and restrictions. The class Off is used to represent events where an object is turned off or ceases to be active. There are no further property restrictions or disjointness axioms specified for this class.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "generated_outputs": {"0": "What specific types fall under the category of ObjectEvent, such as Off?", "1": "Is Off classified as a type within ObjectEvent?", "2": "Which broader event categories does Off belong to according to the ontology structure?", "3": "Next level up from Off in the ontology hierarchy is which group?", "4": "Does Off represent a more specific kind of ObjectEvent?", "5": "Which instances are categorized as subclasses under ObjectEvent, including Off?", "6": "What superclasses encompass Off in the ontology?", "7": "Is Off included among the specialized forms of ObjectEvent?", "8": "Which higher-level concepts include Off as a member?", "9": "Can Off be considered a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: On\nDescription: On is defined as a subclass of ObjectEvent, meaning that all instances of On are specific types of ObjectEvent. This classification indicates that On inherits all characteristics of ObjectEvent, serving as a more specialized concept within the event hierarchy. No additional property restrictions or disjointness axioms are specified for On.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "generated_outputs": {"0": "Which events are classified under ObjectEvent, such as On?", "1": "Is every instance of On considered a type of ObjectEvent?", "2": "What broader classes does On fall under according to the ontology?", "3": "Next level up from On in the hierarchy is what class?", "4": "Does On belong to the category of ObjectEvent?", "5": "Which subclasses are encompassed by ObjectEvent, including On?", "6": "Is On categorized under ObjectEvent?", "7": "Which parent categories include On within their scope?", "8": "Can On be found among the descendants of ObjectEvent?", "9": "To which higher-level classes does On pertain?", "10": "Is it accurate"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Open\nDescription: Open is defined as a subclass of ObjectEvent. This means that every instance of Open is also an instance of ObjectEvent, situating it within the broader context of events involving objects. No additional characteristics or constraints beyond its classification under ObjectEvent are specified.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "generated_outputs": {"0": "What specific subclasses exist under ObjectEvent, such as Open?", "1": "Is Open categorized as a type of ObjectEvent?", "2": "Which higher-level classes include Open as a member?", "3": "Next level up from Open in the hierarchy is ObjectEvent.", "4": "Does Open fall under the broader class of ObjectEvent?", "5": "Which entities are classified as more general than Open?", "6": "What are all the categories that Open is a part of?", "7": "Which subclasses are encompassed by ObjectEvent, including Open?", "8": "Under which overarching concepts does Open reside?", "9": "Is Open included among the types falling under ObjectEvent?", "10": "To what"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ringing\nDescription: Ringing is defined as a subclass of ObjectEvent. This means that any instance of Ringing is also an instance of ObjectEvent, capturing events specifically characterized as ringing occurrences. No further restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['ObjectEvent']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass Ringing within the ontology?", "1": "Is every Ringing instance classified under the broader category of ObjectEvent?", "2": "Which specific types fall under the general concept of ObjectEvent, such as Ringing?", "3": "Next level up from Ringing in the hierarchy is which event type?", "4": "Does Ringing represent a specialized form of ObjectEvent?", "5": "Which parent classes does Ringing inherit properties and constraints from?", "6": "Is there any entity more general than Ringing in the ontology?", "7": "What other subclasses are included within ObjectEvent, alongside Ringing?", "8": "Can Ringing be considered a particular"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cooker\nDescription: Cooker is defined as a subclass of Appliance. This class encompasses all appliances that are specifically designed for cooking functions, such as stoves, ovens, and similar equipment. Every instance of Cooker is, by definition, also an Appliance.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are encompassed within the category of Appliance, including Cooker?", "1": "To what broader classes does Cooker belong according to the hierarchy?", "2": "Is every Cooker classified under the general category of Appliance?", "3": "Next level up in classification from Cooker would include which groups?", "4": "What appliances have Cooker as a more specific type within their classification?", "5": "Does Cooker fall under the overarching category of Appliance?", "6": "Which higher-level categories does Cooker inherit from?", "7": "Can any entity classified as Cooker be considered an Appliance?", "8": "How do the subclasses of Appliance"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fridge\nDescription: Fridge is defined as a subclass of Appliance, indicating that every instance of Fridge is also an Appliance. This formalization groups fridges within the broader category of appliances, without imposing additional constraints or property restrictions specific to fridges.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under Appliance, such as Fridge?", "1": "What higher-level categories encompass Fridge as a member?", "2": "Does Fridge fall under the general class of Appliance?", "3": "Next level up from Fridge within the hierarchy is Appliance.", "4": "Is Fridge categorized as a type of Appliance?", "5": "Which appliances include subclasses like Fridge?", "6": "Under which more general appliance classifications does Fridge exist?", "7": "Can Fridge be viewed as a specialized form of Appliance?", "8": "What specific appliances have Fridge as a direct or indirect subclass?", "9": "Are all Friges recognized as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Kettle\nDescription: Kettle is defined as a subclass of Appliance, indicating that every kettle is considered a type of appliance. Currently, there are no additional property restrictions or disjointness axioms specified for this class, so its definition is based solely on its classification as an appliance.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "generated_outputs": {"0": "Which appliances include subclasses such as Kettle?", "1": "What broader categories encompass Kettle within the appliance hierarchy?", "2": "Is Kettle classified under the general category of Appliance?", "3": "Next level up from Kettle within the appliance taxonomy is what?", "4": "Which appliances have Kettle as a more specific instance?", "5": "Does Kettle fall under the overarching concept of Appliance?", "6": "What types of appliances does Kettle represent?", "7": "To which higher-level appliance classes does Kettle belong?", "8": "Can Kettle be categorized under the broader group of Appliance?", "9": "Which entities are classified as subtypes of Appliance"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TV\nDescription: TV is defined as a subclass of Appliance. This means that every instance of TV is also considered an Appliance, inheriting all general characteristics of Appliances. No further restrictions, disjointness, or property constraints are specified.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "generated_outputs": {"0": "Which categories does TV fall under within the appliance classification?", "1": "What types of appliances include TV as a more specific category?", "2": "Is TV categorized under the broader group of appliances?", "3": "Next level up in hierarchy from TV: what appliances encompass it?", "4": "Which higher-level classifications does TV belong to?", "5": "Does TV represent a type of appliance?", "6": "What appliances have TV as a specialized form?", "7": "Which subclasses exist beneath the category of appliance, such as TV?", "8": "Under which overarching categories can TV be classified?", "9": "Is TV included among the kinds of appliances?", "10": "To which parent classes is TV concept"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: WashingMachine\nDescription: WashingMachine is defined as a subclass of Appliance, indicating that all washing machines are considered a type of appliance. No further restrictions or relationships are specified in the current axioms. This class is used to represent devices designed for cleaning laundry.\nAxiom: {'subClassOf': ['Appliance']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific appliances include WashingMachine as a more detailed classification?", "1": "Is every WashingMachine classified under the broader category of Appliance?", "2": "What general categories encompass WashingMachine within the hierarchy of Appliances?", "3": "Next higher-level concept in the ontology for WashingMachine?", "4": "Which types of Appliance include WashingMachine as a specialized kind?", "5": "Does WashingMachine fall under the supercategory of Appliance?", "6": "To what overarching groups does WashingMachine belong in terms of its classification?", "7": "Is Appliance a parent category for WashingMachine?", "8": "Which subclasses are categorized beneath Appliance, such as WashingMachine?", "9": "Under"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cycling\nDescription: Cycling is defined as a subclass of OutdoorPhysicalActivity, meaning that it is classified as a type of physical activity that takes place outdoors. This formalization indicates that all instances of Cycling are also instances of OutdoorPhysicalActivity, inheriting its general characteristics.\nAxiom: {'subClassOf': ['OutdoorPhysicalActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader classes does Cycling fall under within the hierarchy?", "1": "Is Cycling categorized as a specific type of OutdoorPhysicalActivity?", "2": "What activities are considered more specialized than OutdoorPhysicalActivity, such as Cycling?", "3": "Next level up from Cycling in the classification structure is what group?", "4": "Does Cycling represent a subset of OutdoorPhysicalActivity or not?", "5": "Which higher-level categories encompass Cycling as a member?", "6": "What types of outdoor activities include Cycling as a subcategory?", "7": "Does Cycling fall under the umbrella of OutdoorPhysicalActivity or not?", "8": "Which subclasses are included within OutdoorPhysicalActivity, specifically excluding Cycling?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Running\nDescription: Running is defined as a subclass of OutdoorPhysicalActivity, indicating that all instances of Running are considered outdoor physical activities. This formalization situates Running within the broader context of activities performed outdoors that involve physical exertion.\nAxiom: {'subClassOf': ['OutdoorPhysicalActivity']}\nGenerated CQs:", "generated_outputs": {"0": "What general categories encompass Running within the ontology?", "1": "Is Running classified under OutdoorPhysicalActivity?", "2": "Which specific types fall under OutdoorPhysicalActivity, including Running?", "3": "Next higher-level classification for Running is what?", "4": "Does Running belong to the set of OutdoorPhysicalActivities?", "5": "What broader classes does Running inherit from?", "6": "Are there any activities more specialized than OutdoorPhysicalActivity such as Running?", "7": "Which activities are categorized as subtypes of OutdoorPhysicalActivity, specifically including Running?", "8": "Under which overarching activity type is Running situated?", "9": "Is Running included among the subclasses of OutdoorPhysicalActivity?", "10": "Which entities have"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DangerousBedExit\nDescription: DangerousBedExit is defined as a subclass of BedExit. This indicates that every instance of DangerousBedExit is also an instance of BedExit, but captures those bed exit events that are specifically characterized as dangerous or high-risk. No further distinguishing axioms or property restrictions are specified beyond its position in the class hierarchy.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "generated_outputs": {"0": "Which specialized exits are classified under BedExit, such as DangerousBedExit?", "1": "Is DangerousBedExit categorized within the broader group of BedExit?", "2": "To what higher-level classes does DangerousBedExit belong according to the ontology?", "3": "Next level up from DangerousBedExit in the classification hierarchy is which type of exit?", "4": "Does every DangerousBedExit fall under the category of BedExit?", "5": "What general types of exit include DangerousBedExit as a more specific variant?", "6": "Which subclasses are encompassed by BedExit, including DangerousBedExit?", "7": "Is DangerousBedExit considered a subset of BedExit in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongBedExit\nDescription: LongBedExit is defined as a subclass of BedExit. This indicates that every instance of LongBedExit is also an instance of BedExit, inheriting all characteristics and restrictions that apply to BedExit, while potentially having additional distinguishing properties or constraints specific to LongBedExit.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "generated_outputs": {"0": "Which specialized exit types are included within the broader category of BedExit?", "1": "What higher-level categories encompass LongBedExit as a member?", "2": "Is LongBedExit classified under the general group of BedExit?", "3": "Next level up in classification from LongBedExit would be what type of exit?", "4": "Does LongBedExit fall under the broader class known as BedExit?", "5": "Which exit subclasses are categorized under BedExit, including LongBedExit?", "6": "Can LongBedExit be seen as a more specific form of BedExit?", "7": "What parent classes does LongBedExit inherit from within the hierarchy?", "8": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightRoomVisit\nDescription: NightRoomVisit is defined as a subclass of BedExit, indicating that every instance of NightRoomVisit is also a kind of BedExit. This class represents events where an individual exits their bed specifically for a room visit during the night, inheriting all the characteristics and properties of BedExit while providing a more specific context for nighttime occurrences.\nAxiom: {'subClassOf': ['BedExit']}\nGenerated CQs:", "generated_outputs": {"0": "Does NightRoomVisit fall under the broader classification of BedExit?", "1": "Which entities are subclasses of BedExit, including NightRoomVisit?", "2": "To what higher-level categories does NightRoomVisit pertain within the ontology?", "3": "Next level up from NightRoomVisit within the hierarchy is which group?", "4": "What specific instances are encompassed by BedExit, such as NightRoomVisit?", "5": "Is NightRoomVisit categorized under the general concept of BedExit?", "6": "Which superclasses does NightRoomVisit inherit from in the ontology?", "7": "Does NightRoomVisit represent a type of BedExit?", "8": "Which classes have Bed"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FaceToFaceInteraction\nDescription: FaceToFaceInteraction is a subclass of SocialInteraction, representing social interactions that occur when participants are physically present with each other. Individuals in this class engage in direct, co-located communication, distinguishing them from remote or mediated interactions.\nAxiom: {'subClassOf': ['SocialInteraction']}\nGenerated CQs:", "generated_outputs": {"0": "Which specialized forms of SocialInteraction include FaceToFaceInteraction?", "1": "Is every instance of FaceToFaceInteraction classified under SocialInteraction?", "2": "What broader interaction categories encompass FaceToFaceInteraction?", "3": "Can FaceToFaceInteraction be considered a type of SocialInteraction?", "4": "Which interactions fall within the scope defined by SocialInteraction, including FaceToFaceInteraction?", "5": "Does FaceToFaceInteraction represent a specific kind of SocialInteraction?", "6": "To what higher-level interaction classes does FaceToFaceInteraction pertain?", "7": "Is FaceToFaceInteraction categorized as a form of SocialInteraction?", "8": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TelephoneInteraction\nDescription: TelephoneInteraction is defined as a subclass of SocialInteraction, indicating that it represents a specific type of social exchange occurring via telephone communication. Members of this class participate in interactions where the primary medium is a telephone, distinguishing them from other forms of social interaction such as face-to-face conversations or electronic messaging.\nAxiom: {'subClassOf': ['SocialInteraction']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader categories encompass TelephoneInteraction?", "1": "Is TelephoneInteraction classified under the category of SocialInteraction?", "2": "What are the subclasses associated with SocialInteraction, including TelephoneInteraction?", "3": "Next level up from TelephoneInteraction within the hierarchy is what kind of Interaction?", "4": "Does TelephoneInteraction fall within the domain of SocialInteraction?", "5": "Which general types does TelephoneInteraction inherit characteristics from?", "6": "Are all TelephoneInteractions also considered SocialInteractions?", "7": "What more specific instances are categorized under SocialInteraction, such as TelephoneInteraction?", "8": "Does TelephoneInteraction represent a form of SocialInteraction?", "9": "Which higher-level concepts include TelephoneInteraction as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveBreakfast\nDescription: HaveBreakfast is defined as a subclass of HaveMeal, indicating that every instance of HaveBreakfast is also an instance of HaveMeal. This class represents the specific act or event of having breakfast, distinguished from other types of meals by its subclass relationship. No additional constraints or disjointness axioms are specified.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass HaveBreakfast within the context of meal-related activities?", "1": "Is HaveBreakfast classified under the general category of HaveMeal?", "2": "Which meal-related events are more specific instances than HaveMeal, such as HaveBreakfast?", "3": "Next level up from HaveBreakfast in terms of meal-related categories is HaveMeal.", "4": "Does HaveBreakfast fall under the overarching concept of HaveMeal?", "5": "Which superordinate concepts does HaveBreakfast belong to in relation to meals?", "6": "What subcategories exist beneath HaveMeal, including HaveBreakfast?", "7": "Is HaveBreakfast included among the subclasses of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveDinner\nDescription: HaveDinner is defined as a subclass of HaveMeal, meaning that every instance of HaveDinner is also an instance of HaveMeal. This class represents the specific type of meal event that occurs during dinner, distinguishing it from other meal occasions within the broader category of meals.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under HaveMeal, including HaveDinner?", "1": "Is HaveDinner categorized as a kind of HaveMeal?", "2": "What higher-level concepts does HaveDinner belong to according to the hierarchy?", "3": "Next level up from HaveDinner within the classification structure is HaveMeal.", "4": "Does HaveDinner represent a specialized form of HaveMeal?", "5": "Which entities are classified more specifically than HaveMeal, such as HaveDinner?", "6": "Can HaveDinner be understood as a particular instance of HaveMeal?", "7": "Are all instances of HaveDinner necessarily included among those of HaveMeal?", "8": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveLunch\nDescription: HaveLunch is defined as a subclass of HaveMeal, indicating that every instance of HaveLunch is also an instance of HaveMeal. This class represents activities or events specifically related to having lunch, distinguishing them from other types of meals. No additional restrictions or properties are imposed beyond this hierarchical relationship.\nAxiom: {'subClassOf': ['HaveMeal']}\nGenerated CQs:", "generated_outputs": {"0": "Which more specific concepts fall under HaveMeal, such as HaveLunch?", "1": "Is HaveLunch categorized as a type of HaveMeal?", "2": "What broader classes encompass HaveLunch within the meal-related hierarchy?", "3": "Next level up from HaveLunch in the hierarchy is HaveMeal.", "4": "Does HaveLunch represent a subset of HaveMeal?", "5": "To what parent classes does HaveLunch belong?", "6": "Which entities are classified as subtypes of HaveMeal, including HaveLunch?", "7": "How does HaveLunch relate structurally to HaveMeal?", "8": "Can HaveLunch be considered a specialized form"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveDrink\nDescription: HaveDrink is a subclass of FoodAndDrinkConsumption, representing events or actions where an individual consumes a beverage. Any instance of HaveDrink is, by definition, a specific type of food and drink consumption activity, emphasizing the act of drinking over eating.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "generated_outputs": {"0": "Does HaveDrink represent a more specific category within FoodAndDrinkConsumption?", "1": "Which broader consumption categories encompass HaveDrink as a subcategory?", "2": "What are all the subclasses categorized under FoodAndDrinkConsumption, including HaveDrink?", "3": "Next level up from HaveDrink within the hierarchy is FoodAndDrinkConsumption.", "4": "Is HaveDrink classified as a kind of FoodAndDrinkConsumption?", "5": "To which higher-level consumption activities does HaveDrink belong?", "6": "Does every HaveDrink event also fall under the category of FoodAndDrinkConsumption?", "7": "Which types of FoodAndDrinkConsumption include"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveMeal\nDescription: HaveMeal is defined as a subclass of FoodAndDrinkConsumption, representing instances where an individual engages in the act of consuming food and drink. Members of this class inherit all characteristics and constraints attributed to food and drink consumption activities.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under the category of FoodAndDrinkConsumption, such as HaveMeal?", "1": "What broader categories encompass HaveMeal within the context of FoodAndDrinkConsumption?", "2": "Is HaveMeal classified as a subtype of FoodAndDrinkConsumption?", "3": "Next higher-level classification for HaveMeal in the hierarchy is what?", "4": "Which classes are more general than HaveMeal in the domain of FoodAndDrinkConsumption?", "5": "Does HaveMeal represent a kind of FoodAndDrinkConsumption?", "6": "Under which overarching concepts does HaveMeal fall as a subcategory?", "7": "How are HaveMeal and FoodAnd"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HaveSnack\nDescription: HaveSnack is defined as a subclass of FoodAndDrinkConsumption, meaning any instance of HaveSnack is also an instance of FoodAndDrinkConsumption. This class represents events or activities where snacks are consumed, distinguishing it from other forms of food and drink consumption.\nAxiom: {'subClassOf': ['FoodAndDrinkConsumption']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader classes encompass HaveSnack within their hierarchy?", "1": "Is HaveSnack categorized under FoodAndDrinkConsumption?", "2": "What subclasses fall under FoodAndDrinkConsumption, such as HaveSnack?", "3": "Next level up in classification for HaveSnack is which group?", "4": "Does HaveSnact represent a specific form of FoodAndDrinkConsumption?", "5": "Which higher-level concepts does HaveSnack belong to?", "6": "Is HaveSnact included among the types classified under FoodAndDrinkConsumption?", "7": "What general categories encompass HaveSnact?", "8": "Which more specific types are associated with FoodAndDrink"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Outdoors\nDescription: Outdoors is defined as a subclass of InLocation, indicating that it represents a specific type of location. Any instance of Outdoors is by definition also an instance of InLocation, capturing places or areas that are external to buildings or structures. The class formalizes the concept of being in an open, outside environment.\nAxiom: {'subClassOf': ['InLocation']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under InLocation, including Outdoors?", "1": "What broader classes does Outdoors inherit from within the ontology?", "2": "Is Outdoors classified as a more specific form of InLocation?", "3": "Next level up in the hierarchy for Outdoors would be which parent category?", "4": "Does Outdoors represent a specialized kind of InLocation?", "5": "Which entities are encompassed by InLocation, such as Outdoors?", "6": "What general categories include Outdoors as a member?", "7": "Is Outdoors categorized under InLocation in this ontology?", "8": "Which supercategories define Outdoors within their classification structure?", "9": "Can Outdoors"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IndoorPhysicalActivity\nDescription: IndoorPhysicalActivity is defined as a subclass of PhysicalActivity. This class encompasses physical activities that are specifically performed indoors, distinguishing them from outdoor or unspecified-location activities. Any individual classified as IndoorPhysicalActivity is, by definition, a type of PhysicalActivity but is further characterized by its occurrence within indoor environments.\nAxiom: {'subClassOf': ['PhysicalActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under the category of PhysicalActivity, including IndoorPhysicalActivity?", "1": "To which broader categories does IndoorPhysicalActivity belong?", "2": "Is every instance of IndoorPhysicalActivity also considered a PhysicalActivity?", "3": "Next higher level classification for IndoorPhysicalActivity is what?", "4": "What specific types of PhysicalActivity include IndoorPhysicalActivity?", "5": "Does IndoorPhysicalActivity represent a more specialized form of PhysicalActivity?", "6": "Which general categories encompass IndoorPhysicalActivity?", "7": "How does IndoorPhysicalActivity relate hierarchically to PhysicalActivity?", "8": "Are there any activities categorized under PhysicalActivity other than IndoorPhysicalActivity?", "9": "Which broader classes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OutdoorPhysicalActivity\nDescription: OutdoorPhysicalActivity is defined as a subclass of PhysicalActivity. This class encompasses all forms of physical activity that take place outdoors, distinguishing it from indoor activities. Members of this class inherit all characteristics of PhysicalActivity, but are specifically constrained by their outdoor context.\nAxiom: {'subClassOf': ['PhysicalActivity']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are encompassed within PhysicalActivity, such as OutdoorPhysicalActivity?", "1": "What broader classes does OutdoorPhysicalActivity fall under according to the classification hierarchy?", "2": "Is every instance of OutdoorPhysicalActivity also classified as a PhysicalActivity?", "3": "Next higher-level category for OutdoorPhysicalActivity in the taxonomy is what?", "4": "Does the classification include any entities that are both OutdoorPhysicalActivity and PhysicalActivity?", "5": "Which subclasses are recognized beneath PhysicalActivity, including OutdoorPhysicalActivity?", "6": "Are there any other categories beyond those listed here that are subclasses of PhysicalActivity?", "7": "To which general class or set does OutdoorPhysical"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongNap\nDescription: LongNap is defined as a subclass of Nap, representing nap instances with a duration longer than 30 minutes. This class is used to categorize naps that exceed the typical short duration, allowing formal distinction within the Nap hierarchy based on temporal length.\nAxiom: {'subClassOf': ['Nap']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are more specific types under Nap, such as LongNap?", "1": "Is every instance classified as LongNap also categorized as Nap?", "2": "What broader classes encompass LongNap within the hierarchy?", "3": "Next level up in the hierarchy for LongNap would be what?", "4": "Does LongNap fall under the category of Nap?", "5": "Which subclasses are included within the group Nap, specifically considering LongNap?", "6": "Is LongNap recognized as a type of Nap?", "7": "Under which general class does LongNap exist?", "8": "What other specialized forms of Nap exist besides LongNap?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NapAfterLunch\nDescription: NapAfterLunch is defined as a subclass of Nap, indicating that every instance of NapAfterLunch is also an instance of Nap. This class specifies naps that occur specifically after lunch, distinguishing them from naps taken at other times.\nAxiom: {'subClassOf': ['Nap']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types are classified under Nap, including NapAfterLunch?", "1": "Is every NapAfterLunch instance inherently categorized as a type of Nap?", "2": "What broader classes does NapAfterLunch fall under within the hierarchy?", "3": "Next level up in classification for NapAfterLunch would be which parent category?", "4": "Does NapAfterLunch encompass all instances that belong to Nap?", "5": "Which subclasses are more general than NapAfterLunch?", "6": "Under which overarching groupings does NapAfterLunch fall?", "7": "Is it correct that all NapAfterLunch individuals are also considered Naps?", "8": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LongTableExit\nDescription: LongTableExit is defined as a subclass of TableExit. This means that every LongTableExit is a kind of TableExit, inheriting all properties and constraints of TableExit, and can be used wherever a TableExit is required. No further distinguishing characteristics or restrictions are specified for LongTableExit beyond this subclass relationship.\nAxiom: {'subClassOf': ['TableExit']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does LongTableExit belong to within the context of exit types?", "1": "Is LongTableExit categorized under TableExit?", "2": "Which exits are classified as more specific forms of TableExit, such as LongTableExit?", "3": "Next level up from LongTableExit in the hierarchy is what type of exit?", "4": "Does the classification include TableExit as an overarching category for LongTableExit?", "5": "What general exit categories encompass LongTableExit?", "6": "Is LongTableExit recognized as a specialized form of TableExit?", "7": "Under which parent class does LongTableExit fall within the exit taxonomy?", "8": "Which exits"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Moving\nDescription: Moving is defined as a subclass of Active, indicating that all instances of Moving are also considered Active. This classification captures entities or processes characterized by being in a state of action or motion, forming a specific subset within the broader category of Active phenomena.\nAxiom: {'subClassOf': ['Active']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass Moving in the ontology?", "1": "Is Moving categorized under Active in the ontology?", "2": "Which subclasses fall under Active, including Moving?", "3": "Next level parent class for Moving is what?", "4": "Does Moving represent a more specific instance within Active?", "5": "What categories does Moving inherit from in terms of Active?", "6": "To which higher-level classifications does Moving belong?", "7": "Which entities are classified as subtypes of Active, such as Moving?", "8": "Is Moving an example of a concept that is further specialized within Active?", "9": "Under which overarching groups does Moving currently exist?", "10": "Which more general concepts include Moving as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightBathroomVisit\nDescription: NightBathroomVisit is defined as a subclass of NightRoomVisit. This means every instance of NightBathroomVisit is also considered an instance of NightRoomVisit, specifying that the visit occurs during the night and takes place specifically in a bathroom. No additional restrictions or properties are provided.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "generated_outputs": {"0": "Does NightBathroomVisit fall under the broader classification of NightRoomVisit?", "1": "Which types of NightRoomVisit include NightBathroomVisit as a more specific variant?", "2": "What higher-level categories encompass NightBathroomVisit within the context of room visits at night?", "3": "#NextCQ:Is NightBathroomVisit classified as a kind of NightRoomVisit?", "4": "To which higher-level concepts does NightBathroomVisit belong when considering nighttime room activities?", "5": "#PrevCQ:What subtypes exist for NightRoomVisit, such as NightBathroomVisit?", "6": "#StopGenCQ:Which parent"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightKitchenVisit\nDescription: NightKitchenVisit is defined as a subclass of NightRoomVisit. This means every NightKitchenVisit is a type of NightRoomVisit, inheriting all characteristics associated with NightRoomVisit, but specifically refers to visits to the kitchen that occur at night. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types of NightRoomVisit include NightKitchenVisit?", "1": "What broader visit categories encompass NightKitchenVisit?", "2": "Does a NightKitchenVisit fall under the category of NightRoomVisit?", "3": "Next level of more general classes for NightKitchenVisit", "4": "Which visit subtypes are classified as NightRoomVisit?", "5": "Is NightKitchenVisit categorized within the hierarchy of NightRoomVisit?", "6": "Under which higher-level visit classifications does NightKitchenVisit exist?", "7": "How does NightKitchenVisit relate structurally to NightRoomVisit?", "8": "Are there any other visit subclasses besides NightKitchenVisit that are considered part of NightRoomVisit"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NightLivingRoomVisit\nDescription: NightLivingRoomVisit is defined as a subclass of NightRoomVisit. This denotes that every instance of a NightLivingRoomVisit is also an instance of NightRoomVisit, typically representing visits to a living room that occur specifically during nighttime. No further property or disjointness constraints are specified in the current axioms.\nAxiom: {'subClassOf': ['NightRoomVisit']}\nGenerated CQs:", "generated_outputs": {"0": "Which types of NightRoomVisit include NightLivingRoomVisit as a more specific variant?", "1": "What broader visit categories encompass NightLivingRoomVisit within their hierarchy?", "2": "Is every NightLivingRoomVisit classified under the category of NightRoomVisit?", "3": "Next level up from NightLivingRoomVisit within the classification structure is what?", "4": "Which entities fall under the subcategory of NightRoomVisit, such as NightLivingRoomVisit?", "5": "Does NightLivingRoomVisit represent a specialization of NightRoomVisit?", "6": "Under which higher-level visit classifications does NightLivingRoomVisit fall?", "7": "Are all instances of NightLivingRoomVisit"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Object\nDescription: Object is defined as a subclass of Entity. This relationship indicates that every instance of Object is also considered an Entity, inheriting all general characteristics associated with Entity. No other constraints or differentiating axioms are specified for Object.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level classes encompass Object within their hierarchy?", "1": "Is Object classified under the broader category of Entity?", "2": "Which subclasses fall under the concept of Entity, including Object?", "3": "Next level up from Object in the ontology structure is which class?", "4": "Does Object represent a specific kind of Entity?", "5": "Which superclasses does Object inherit from within the ontology?", "6": "What entities include Object as one of their more detailed categories?", "7": "Is Object categorized under the overarching group of Entity?", "8": "To what parent concepts does Object belong according to the ontology hierarchy?", "9": "Which instances of Entity have Object as a subordinate type?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Person\nDescription: Person is defined as a subclass of Entity, meaning every individual categorized as a Person is also considered an Entity. No additional property restrictions or disjointness axioms are specified, so the class Person serves as a general categorization for entities recognized as people.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass Person within their hierarchy?", "1": "Is Person classified under the broader category of Entity?", "2": "What specific types fall under the general concept of Entity, such as Person?", "3": "Does Person represent a more specialized kind within the domain of Entity?", "4": "Which superclasses does Person inherit from in this ontology?", "5": "Are all instances of Person necessarily included among those of Entity?", "6": "To which overarching groupings is Person assigned according to the ontology's structure?", "7": "What concepts are designated as subclasses of Entity, including Person?", "8": "Can any entity that is not a Person still qualify as an Entity?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Place\nDescription: Place is defined as a subclass of Entity, meaning every instance of Place is also an Entity. This class represents physical or conceptual locations or areas, but no further restrictions, relationships, or properties are currently specified.\nAxiom: {'subClassOf': ['Entity']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level classes encompass Place within their hierarchy?", "1": "Which entities include Place as a specific type or subclass?", "2": "Does Place fall under the broader classification of Entity?", "3": "Next level up in the hierarchy from Place is which category?", "4": "Is Place categorized as a kind of Entity?", "5": "Which more general concepts does Place inherit from within the ontology?", "6": "Is Place classified under the supercategory of Entity?", "7": "What entities contain Place as a specialized form or subtype?", "8": "To what overarching categories does Place pertain?", "9": "Which subtypes are covered by Entity, such as Place?", "10": "Does Place represent a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrepareHotTea\nDescription: PrepareHotTea is defined as a subclass of PrepareDrink, indicating that it represents a specialized form of drink preparation activity. Any instance of PrepareHotTea is inherently an instance of PrepareDrink, specifically concerned with the preparation of hot tea. No additional property restrictions or disjointness axioms are specified.\nAxiom: {'subClassOf': ['PrepareDrink']}\nGenerated CQs:", "generated_outputs": {"0": "Which activities fall under the category of PrepareDrink, such as PrepareHotTea?", "1": "Is PrepareHotTea classified as a type of PrepareDrink?", "2": "What broader categories encompass PrepareHotTea within the hierarchy?", "3": "Next level up from PrepareHotTea in the classification tree is PrepareDrink.", "4": "Which subclasses exist beneath PrepareDrink, including PrepareHotTea?", "5": "Does PrepareHotTea inherit all characteristics associated with PrepareDrink?", "6": "To what higher-level concepts does PrepareHotTea belong within this domain?", "7": "Is every instance of PrepareHotTea also considered a member of Prepare"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Room\nDescription: Room is defined as a subclass of Place, indicating that every Room is a specific type of Place. This classification implies that all characteristics of Place are inherited by Room, allowing it to be used wherever a Place is referenced within the ontology. No additional restrictions or distinguishing axioms are specified for Room.\nAxiom: {'subClassOf': ['Place']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under Place, such as Room?", "1": "Is Room categorized as a more specific form of Place?", "2": "To what broader classes does Room belong according to the ontology structure?", "3": "Next level up from Room in the hierarchy is what?", "4": "Which subclasses fall under Place, including Room?", "5": "Does the ontology group Place into categories that include Room?", "6": "What general class does Room inherit from?", "7": "Are there any higher-level classes that encompass Room?", "8": "How does the hierarchy organize Room relative to Place?", "9": "Is Room directly included within the category of Place?", "10": "To which overarching groups does Room"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SittingToStanding\nDescription: SittingToStanding is defined as a subclass of ChangePosture, representing the specific process or action in which an individual transitions from a sitting position to a standing position. As a more specialized posture change, every instance of SittingToStanding inherently qualifies as an instance of ChangePosture.\nAxiom: {'subClassOf': ['ChangePosture']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader classes encompass SittingToStanding?", "1": "Is SittingToStanding categorized under ChangePosture?", "2": "What are all subclasses classified under ChangePosture, including SittingToStanding?", "3": "Next higher-level category for SittingToStanding within the hierarchy is what?", "4": "Does SittingToStanding fall under the general concept of ChangePosture?", "5": "Which entities are classified as ChangePosture and include SittingToStanding as a specific type?", "6": "Under which overarching concepts does SittingToStanding exist?", "7": "Is ChangePosture a superclass of SittingToStanding?", "8": "Which instances of ChangePosture have SittingToStanding as their"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StandingToSitting\nDescription: StandingToSitting is defined as a subclass of ChangePosture. This class represents the action or process in which an individual moves from a standing position to a sitting position. All instances of StandingToSitting are, by definition, specific forms of posture change.\nAxiom: {'subClassOf': ['ChangePosture']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass StandingToSitting within the context of postural changes?", "1": "Which types of posture modifications include StandingToSitting as a more specific instance?", "2": "Is StandingToSitting classified under the general category of ChangePosture?", "3": "Next level up in hierarchy for StandingToSitting is what kind of posture transformation?", "4": "Does StandingToSitting fall under the overarching concept of ChangePosture?", "5": "Which posture transitions are subclasses of ChangePosture, including StandingToSitting?", "6": "What parent classes does StandingToSitting inherit from among posture modification processes?", "7": "Is StandingTo"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Activity\nDescription: Activity is defined as a subclass of Event, representing occurrences or happenings that necessarily involve agents. Every instance of Activity must have at least one agent that is a Person and, in particular, must have exactly one Person as an agent. This ensures that any Activity is specifically characterized by the participation of one and only one Person as its agent.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasAgent exactly 1 Person]', '[hasAgent only Person]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every activity necessarily have at least one agent that is a person?", "1": "Is it required for an activity to have some association via hasAgent to a person?", "2": "Can an activity exist without being linked through hasAgent to any individual who is a person?", "3": "Does the presence of a person as an agent guarantee that the entity is classified under activities?", "4": "Are all entities categorized as activities necessarily related to at least one person via the hasAgent property?", "5": "Can there be an activity that does not have any person associated with it via hasAgent?", "6": "Is having at least one hasAgent connection to a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AlarmClockRinging\nDescription: AlarmClockRinging is defined as a subclass of Ringing, representing a specific ringing event. Its defining characteristic is that the agent responsible for the ringing must be an instance of AlarmClock. This ensures that any event classified as AlarmClockRinging involves an alarm clock as the source of the ringing.\nAxiom: {'subClassOf': ['Ringing'], 'propertyRestrictions': ['[hasAgent only AlarmClock]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every AlarmClockRinging necessarily have at least one hasAgent property referencing an AlarmClock?", "1": "Is it required that AlarmClockRinging is associated via hasAgent to some AlarmClock?", "2": "Can AlarmClockRinging exist without being linked through hasAgent to an AlarmClock?", "3": "Next CQ:Is AlarmClockRinging allowed to possess more than one hasAgent property value that is not an AlarmClock?", "4": "Are all instances of AlarmClockRinging restricted to having hasAgent relationships only to entities classified as AlarmClock?", "5": "Does the presence of the hasAgent property with any entity other than Alarm"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysiologicalMeasurement\nDescription: PhysiologicalMeasurement is defined as a subclass of Measurement, representing a specialized form of measurement that pertains exclusively to patients. Any instance of PhysiologicalMeasurement must refer only to a patient, ensuring that this class captures measurements that specifically describe physiological characteristics or parameters observed in patient individuals.\nAxiom: {'subClassOf': ['Measurement'], 'propertyRestrictions': ['[refersTo some Patient]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every PhysiologicalMeasurement always refer to at least one Patient?", "1": "Is it required for PhysiologicalMeasurement to have a reference to any individual classified as Patient?", "2": "Can PhysiologicalMeasurement exist without referring to any Patient?", "3": "Does PhysiologicalMeasurement necessarily involve a relationship where refersTo points to a Patient entity?", "4": "Is PhysiologicalMeasurement associated only through the property refersTo with entities categorized under Patient?", "5": "Can a PhysiologicalMeasurement link to subjects other than those identified as Patients?", "6": "Does PhysiologicalMeasurement necessarily relate to something that is not a Patient via the property refersTo?", "7": "Are all instances"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorOpen\nDescription: DoorOpen is defined as a subclass of Open, representing a specific type of open state. It is further characterized by the property restriction that it must have some agent which is a Door. This means that instances of DoorOpen denote situations or events where the entity being open is specifically a Door.\nAxiom: {'subClassOf': ['Open'], 'propertyRestrictions': ['[hasAgent only Door]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of DoorOpen have at least one hasAgent relationship to something that is a Door?", "1": "Is there any DoorOpen individual without an associated agent that is itself a Door?", "2": "Does the existence of a DoorOpen necessarily require the presence of a hasAgent link to a Door?", "3": "Can a DoorOpen exist if none of its hasAgent values are Doors?", "4": "Is it possible for a DoorOpen not to be connected via hasAgent to any Door?", "5": "Is having at least one hasAgent that is a Door sufficient for an object to be classified as DoorOpen?", "6": "Are all Door"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SkinTemperature\nDescription: SkinTemperature is defined as a subclass of PhysiologicalMeasurement, representing a specific type of physiological measurement. Members of this class are constrained by the property restriction that they must have exactly one hasTemperature property value, which must be a literal (e.g., a numerical value). This formalization ensures that any instance of SkinTemperature uniquely and quantifiably indicates the temperature measured on the skin.\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasTemperature exactly 1]', '[hasTemperature only rdfs:Literal]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every SkinTemperature require at least one hasTemperature relationship with a value of type rdfs:Literal?", "1": "Is it necessary for SkinTemperature instances to have a hasTemperature property with some rdfs:Literal value?", "2": "Can a SkinTemperature exist without being linked through hasTemperature to any rdfs:Literal?", "3": "Generated CQs:Is it allowed for a SkinTemperature to possess more than one hasTemperature relationship where each value is not of type rdfs:Literal?", "4": "Does the presence of multiple hasTemperature properties with non-rdfs:Literal values disqualify a concept from being classified as Skin"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: KettleOff\nDescription: KettleOff is defined as a subclass of Off, representing situations or states where something is powered down or inactive. It is characterized by the additional property that its agent must be some instance of Kettle, indicating that only kettles can be agents in this context. This class ensures that any instance of KettleOff specifically refers to a kettle that is in the \"off\" state.\nAxiom: {'subClassOf': ['Off'], 'propertyRestrictions': ['[hasAgent only Kettle]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every KettleOff have at least one hasAgent relation to a Kettle?", "1": "Is it required for KettleOff instances to possess a hasAgent link connected to a Kettle entity?", "2": "Can a KettleOff exist without being associated through hasAgent to any Kettle?", "3": "Does the presence of the hasAgent property with value Kettle distinguish all KettleOff instances from others?", "4": "Are there KettleOff entities permitted if they lack a hasAgent relationship with any Kettle?", "5": "Does the definition of KettleOff guarantee that each occurrence is linked via hasAgent to exactly one K"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NoiseLevel\nDescription: NoiseLevel is defined as a subclass of AmbientMeasurement, indicating that it represents a specific type of measurement related to environmental conditions. Every instance of NoiseLevel must have exactly one associated value via the hasNoiseLevel property, and this value must be a literal (e.g., a number or string representing the measured noise). This formalization ensures each NoiseLevel measurement uniquely records a single quantifiable noise value.\nAxiom: {'subClassOf': ['AmbientMeasurement'], 'propertyRestrictions': ['[hasNoiseLevel exactly 1]', '[hasNoiseLevel only rdfs:Literal]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every NoiseLevel possess at least one hasNoiseLevel property with a value from the set of literals?", "1": "Is it required for any NoiseLevel to have a hasNoiseLevel relationship to some literal?", "2": "Can a NoiseLevel exist without being linked through hasNoiseLevel to any literal?", "3": "Next CQ:Is it allowed for a NoiseLevel to have more than one hasNoiseLevel property with different literal values?", "4": "Does the existence of multiple distinct hasNoiseLevel relationships to literals define a NoiseLevel?", "5": "Can a NoiseLevel be associated via hasNoiseLevel with only one specific literal value throughout its lifetime"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Event\nDescription: Event is a class characterized by property restrictions that enforce temporal precision. Each instance of Event must have exactly one startTime, which must be of type time:Instant, and exactly one duration, which must be of type time:DurationDescription. These constraints ensure that every Event is uniquely defined by both a specific starting instant and a specific duration, providing an unambiguous temporal identity for each Event.\nAxiom: {'propertyRestrictions': ['[duration only time:DurationDescription]', '[startTime exactly 1 time:Instant]', '[duration exactly 1 time:DurationDescription]', '[startTime some time:Instant]']}\nGenerated CQs:", "generated_outputs": {"0": "Does Event require at least one occurrence of the property 'hasStartTime' relating it to an individual of type time:Instant?", "1": "Is it necessary for any instance of Event to possess the property 'hasStartTime' connected to something classified as time:Instant?", "2": "Can an Event exist without having a 'hasStartTime' relationship to an entity of type time:Instant?", "3": "Next CQ:Is there an Event that does not participate in at least one 'hasStartTime' relation with a time:Instant?", "4": "Does the definition of Event specify that it must be associated via 'hasStartTime' with at least"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ObjectEvent\nDescription: ObjectEvent is a subclass of Event, characterized by the restriction that it must have exactly one Object as its agent. This means every instance of ObjectEvent is an Event in which precisely one Object acts as the agent. This axiom ensures clear and unambiguous assignment of agency within such events.\nAxiom: {'subClassOf': ['Event'], 'propertyRestrictions': ['[hasAgent exactly 1 Object]', '[hasAgent some Object]']}\nGenerated CQs:", "generated_outputs": {"0": "Does ObjectEvent necessarily involve at least one hasAgent relationship with an Object?", "1": "Is it required for any ObjectEvent to possess the property hasAgent with an Object?", "2": "Can an ObjectEvent exist without having an association via hasAgent to an Object?", "3": "Does every ObjectEvent always relate through hasAgent to exactly one Object?", "4": "Must all ObjectEvents specify at least one Object as their agent via the hasAgent property?", "5": "Can an ObjectEvent ever lack a hasAgent connection to any Object?", "6": "Is there an ObjectEvent that does not have hasAgent linking it to some Object?", "7": "Is it"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmbientMeasurement\nDescription: AmbientMeasurement is a class whose instances are characterized by the property that they only refer to Room; that is, any AmbientMeasurement must be associated exclusively with one or more Rooms. This restriction ensures that AmbientMeasurement data cannot pertain to entities outside the Room class.\nAxiom: {'subClassOf': ['Measurement'], 'propertyRestrictions': ['[refersTo only Room]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every AmbientMeasurement necessarily have at least one refersTo relationship to some instance of Room?", "1": "Is it required for AmbientMeasurement to relate to a Room through the refersTo property?", "2": "Can AmbientMeasurement exist without being connected via refersTo to any Room?", "3": "Does AmbientMeasurement inherit all properties from Measurement, except possibly those concerning refersTo relationships to non-Room entities?", "4": "What broader measurement classes include AmbientMeasurement as a subclass, considering its restrictions on refersTo?", "5": "Is AmbientMeasurement classified under the general category of Measurement and constrained by specific refersTo conditions?", "6": "Which measurements are subclasses of Measurement,"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DoorClosed\nDescription: DoorClosed is defined as a subclass of Closed, meaning every DoorClosed instance is also a Closed instance. There are no additional property restrictions specified for this class. This formalization indicates that DoorClosed represents the specific state where a door is closed, inheriting all characteristics of the broader Closed class.\nAxiom: {'subClassOf': ['Closed'], 'propertyRestrictions': ['[hasAgent some Door]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every DoorClosed have at least one hasAgent relationship to a Door?", "1": "Is it required that if something is DoorClosed, then there exists an entity related via hasAgent to a Door?", "2": "Can a DoorClosed exist without being associated through hasAgent to any Door?", "3": "Does the presence of the hasAgent property connecting DoorClosed to a Door constitute an essential condition for DoorClosed instances?", "4": "Is it necessary for DoorClosed entities to participate in the hasAgent relation with Doors?", "5": "Can a DoorClosed lack the hasAgent relationship to any Door?", "6": "Are all DoorClosed instances necessarily linked via"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SkinConductivity\nDescription: SkinConductivity is defined as a subclass of PhysiologicalMeasurement, representing measurements related to skin's electrical properties. Every instance of SkinConductivity is constrained such that its hasConductivity property can only take values of type rdfs:Literal, ensuring that conductivity data is recorded in a literal data format (e.g., numeric or text values).\nAxiom: {'subClassOf': ['PhysiologicalMeasurement'], 'propertyRestrictions': ['[hasConductivity only rdfs:Literal]', '[hasConductivity exactly 1]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every individual of the class SkinConductivity necessarily have at least one value for the property hasConductivity?", "1": "Is it required for any instance of SkinConductivity to possess exactly one value through the hasConductivity relationship?", "2": "Can there exist a SkinConductivity entity without having the hasConductivity property specified precisely once?", "3": "Next CQ:Is it permitted for a SkinConductivity instance to have more than one value assigned via the hasConductivity property?", "4": "Does the definition of SkinConductivity allow for the presence of multiple hasConductivity values"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NearObject\nDescription: NearObject is defined as a subclass of InLocation, meaning every NearObject is also considered to be located in a specific place or context. There are no additional property restrictions specified for this class.\nAxiom: {'subClassOf': ['InLocation'], 'propertyRestrictions': ['[objectLocalisation some Object]']}\nGenerated CQs:", "generated_outputs": {"0": "Does NearObject fall under the classification of InLocation?", "1": "Which entities are categorized as subtypes of InLocation, such as NearObject?", "2": "What broader classes encompass NearObject within the hierarchy?", "3": "Next level up from NearObject in the hierarchy is what type?", "4": "Is NearObject classified as a form of InLocation?", "5": "To which higher-level concepts does NearObject belong?", "6": "Does NearObject inherit all characteristics of InLocation?", "7": "Which superclasses define NearObject in terms of InLocation?", "8": "Can any instance of NearObject be further described as an InLocation?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LightLevel\nDescription: LightLevel is defined as a subclass of AmbientMeasurement. Every instance of LightLevel must be associated with exactly one value via the property hasLightLevel, indicating that each measurement in this class represents a single, specific light level reading. This formalization ensures consistency in quantifying ambient light for each measurement instance.\nAxiom: {'subClassOf': ['AmbientMeasurement'], 'propertyRestrictions': ['[hasLightLevel exactly 1]', '[hasLightLevel some rdfs:Literal]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every LightLevel necessarily have at least one hasLightLevel relationship with a literal?", "1": "Is it required that all instances of LightLevel are related through hasLightLevel to some rdfs:Literal?", "2": "Can there exist a LightLevel without any association via hasLightLevel to a literal?", "3": "Next CQ:Is it necessary for LightLevel to possess exactly one hasLightLevel attribute referencing a literal?", "4": "Does the definition of LightLevel ensure that each instance is linked by hasLightLevel to precisely one literal?", "5": "Can a LightLevel be characterized by more than one hasLightLevel relationship to literals?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sitting\nDescription: Sitting is defined as a subclass of Posture. This means that every instance of Sitting is also an instance of Posture, representing a specific type of body position or stance, but no additional property restrictions are specified for this class.\nAxiom: {'subClassOf': ['Posture'], 'propertyRestrictions': ['[objectLocalisation some Furniture]']}\nGenerated CQs:", "generated_outputs": {"0": "Does sitting always involve localization at least one piece of furniture?", "1": "Is it required for something to be sitting if it has localisation related to some furniture?", "2": "Can an entity be considered sitting without being associated with any furniture through localisation?", "3": "Does the presence of furniture via localisation define the sitting classification?", "4": "Are all instances classified as sitting necessarily localized to at least one piece of furniture?", "5": "Can you identify any other properties besides localisation that restrict the sitting concept?", "6": "Is sitting exclusive to entities having localisation to furniture?", "7": "Does the definition of sitting encompass only those things that have local"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasLightLevel\nDescription: The property \"hasLightLevel\" has no explicitly defined domain, range, or logical characteristics. It is a sub-property of \"hasValue,\" indicating that it is used to relate entities to their light level values in a manner more specific than the general value association. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the inverse properties associated with â€˜hasLightLevelâ€™ in the ontology?", "1": "If entity A hasLightLevel B, does the ontology entail that B hasLightLevel A?", "2": "How does the ontology define the relationship between â€˜hasLightLevelâ€™ and its inverse property?", "3": "Next CQ:Is there any property other than â€˜hasLightLevelâ€™ that is linked as an inverse in the ontology?", "4": "Does the presence of an inverse link for â€˜hasLightLevelâ€™ impact its usage in data integration?", "5": "Which property serves as the inverse of â€˜hasLightLevelâ€™ according to the ontology specification?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasConductivity\nDescription: The property \"hasConductivity\" currently lacks explicit domain and range constraints and does not have specified logical characteristics or an inverse property. It is defined as a sub-property of \"hasValue,\" indicating that it inherits the semantics of associating an entity with a value, specifically in the context of electrical or thermal conductivity.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can any object serve as the subject for the property â€˜hasConductivityâ€™?", "1": "Is there at least one instance where the object associated with â€˜hasConductivityâ€™ falls outside the specified range?", "2": "What are all possible values allowed for the property â€˜hasConductivityâ€™?", "3": "Does every use of the property â€˜hasConductivityâ€™ require a specific type within its range?", "4": "Which entities can occupy the range of the property â€˜hasConductivityâ€™?", "5": "Is the range of the property â€˜hasConductivityâ€™ restricted to certain types?", "6": "Can the property â€˜has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasTemperature\nDescription: The property \"hasTemperature\" inherits from the broader property \"hasValue\" but does not specify any domain or range restrictions, nor any specific logical characteristics. No inverse property is defined. This property is intended to associate an entity with its temperature, but its use is broadly unconstrained by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the properties that are subproperties under â€˜hasValueâ€™?", "1": "Is every instance of â€˜hasTemperatureâ€™ also an instance of â€˜hasValueâ€™?", "2": "Which superproperties does â€˜hasTemperatureâ€™ inherit from within the ontology?", "3": "Next property in the hierarchy for â€˜hasTemperatureâ€™:", "4": "Does â€˜hasTemperatureâ€™ fall under the category of â€˜hasValueâ€™?", "5": "What concepts have â€˜hasValueâ€™ as their most general parent among properties?", "6": "Can â€˜hasTemperatureâ€™ be considered a type of â€˜hasValueâ€™?", "7": "Are all instances of â€˜hasTemperatureâ€™ necessarily instances of â€˜has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasValue\nDescription: The property \"hasValue\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. As specified by its axioms, no constraints are currently imposed on its use, so its purpose and applicable contexts are not restricted within the ontology.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between â€˜hasValueâ€™ and â€˜isPartOfâ€™ as defined in the ontology?", "1": "If entity A is related via â€˜hasValueâ€™ to entity B, does this imply that B is also linked to A through â€˜isPartOfâ€™?", "2": "Can you describe the directionality of the relationship between â€˜hasValueâ€™ and â€˜isPartOfâ€™?", "3": "Next CQ:Is it necessary for every entity that has a value to be part of some other entity according to the ontologyâ€™s property hierarchy?", "4": "Does the ontology model the inverse relation such that if A â€˜hasValue"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: roomLocalisation\nDescription: The property \"roomLocalisation\" has no explicitly defined characteristics, domain, or range constraints, and is not specified as a sub-property or inverse of any other property. Based on its name, it is likely intended to associate entities with their location within a room, but no further semantic or structural restrictions are currently defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does roomLocalisation have an inverse relationship with any other property?", "1": "Which properties are inverses of roomLocalisation?", "2": "Can roomLocalisation be used to relate two instances through both roomLocalisation and its inverse?", "3": "Next CQ:Is there any property that serves as the inverse for roomLocalisation?", "4": "How does the ontology represent the reciprocal connection between roomLocalisation and another property?", "5": "Does the ontology allow chaining from roomLocalisation to its inverse property?", "6": "Is roomLocalisation considered equivalent to the composition of itself and its inverse property?", "7": "What additional property relationships can be inferred when"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: objectLocalisation\nDescription: The property \"objectLocalisation\" has no explicitly defined domain or range restrictions and no formally specified characteristics. It is not declared as a sub-property of any other property nor does it have an inverse property. Its intended use is not further described by the available axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can objectLocalisation be used as a subject property?", "1": "What properties are permitted to appear before objectLocalisation in a triple?", "2": "Is objectLocalisation allowed to occur as a predicate within a triple?", "3": "Does objectLocalisation apply to any particular type of entity as its subject?", "4": "Which entities can serve as the domain for objectLocalisation?", "5": "Are there any domain constraints associated with the use of objectLocalisation?", "6": "Can objectLocalisation have a domain restriction applied to it?", "7": "Is objectLocalisation restricted to only acting upon specific types of objects?", "8": "Which classes of entities can be"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: duration\nDescription: The property \"duration\" has no specified characteristics, domain, range, super-properties, or inverse property. It is a general property whose usage is not restricted to any particular class or value type in the current ontology specification.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value assigned to the property â€˜durationâ€™ also serve as a valid input for the property â€˜has-durationâ€™?", "1": "Is there at least one entity associated with both â€˜durationâ€™ and â€˜has-durationâ€™ properties?", "2": "Does the inverse relationship between â€˜durationâ€™ and â€˜has-durationâ€™ ensure that if A has duration B, then B is a duration of A?", "3": "Does â€˜durationâ€™ have an explicit inverse property defined in the ontology?", "4": "Which property is specified as the inverse of â€˜durationâ€™ within this ontology?", "5": "Can â€˜durationâ€™ be used to link two entities such that they are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: refersTo\nDescription: The property \"refersTo\" has no specified domain, range, characteristics, super-properties, or inverse properties. This indicates that it can be used to relate any two entities without formal restrictions. No additional description is provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property â€˜refersToâ€™ have both individuals as its subject and object?", "1": "Is it possible for â€˜refersToâ€™ to relate an entity to itself?", "2": "Does the ontology allow the use of â€˜refersToâ€™ between instances of different classes?", "3": "Can you give examples where â€˜refersToâ€™ links objects from distinct domains?", "4": "What are the allowed types for the domain and range of the property â€˜refersToâ€™?", "5": "Are there any constraints specified for the subjects and objects associated with â€˜refersToâ€™?", "6": "Which entities are permitted as the domain for the property"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" does not specify any explicit characteristics, domain, or range restrictions, nor does it define any super-properties or inverse properties. It is typically used to associate an entity with a quality, although no further constraints are currently imposed by its axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What kind of entities can serve as subjects for the â€˜hasQualityâ€™ relationship?", "1": "Is it possible for the object of â€˜hasQualityâ€™ to be anything other than a quality?", "2": "Which properties have None specified as their range?", "3": "Next property in the hierarchy of â€˜hasQualityâ€™:", "4": "Does every use of â€˜hasQualityâ€™ necessarily involve a quality in its object position?", "5": "Can â€˜hasQualityâ€™ relate an individual to something that is not classified as a quality?", "6": "What types of values are permitted for the â€˜hasQualityâ€™ propertyâ€™s range?", "7": "Are there any additional properties defined with a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: startTime\nDescription: The property \"startTime\" has no explicitly defined characteristics, domain or range restrictions, super-properties, or inverse properties. Its usage context and intended meaning are not further specified by current axioms. This property may be intended to capture the starting time of an event or process, but no formal constraints are applied.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does the property'startTime' have any specified range?", "1": "Is it allowed for the value of'startTime' to be anything other than None?", "2": "What entities can serve as the range for'startTime'?", "3": "Does'startTime' possess a defined domain?", "4": "Which types of subjects does'startTime' permit as its domain?", "5": "Can'startTime' exist without being associated with any particular domain?", "6": "Is there any subject type restricted to use as the domain for'startTime'?", "7": "Is the range of'startTime' constrained to include only None values?", "8": "Are there any restrictions placed on the domain used"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasRate\nDescription: The property \"hasRate\" has no explicitly specified domain, range, characteristics, super-properties, or inverse properties. This indicates that it is a general-purpose property, with its usage and applicable types left unspecified by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every value associated with the property 'hasRate' also serve as a subject for the property 'hasRate'?", "1": "Is there any instance where the object linked via 'hasRate' acts both as the subject and the object?", "2": "What are all possible roles played by entities related through the 'hasRate' property?", "3": "Does the use of 'hasRate' necessarily imply the existence of a second entity connected via 'hasRate', such that each entity plays one role as subject and another as object?", "4": "Is it required that all objects connected by 'hasRate' have at least two different uses"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasAgent\nDescription: The property \"hasAgent\" is an object property without explicitly defined characteristics, domain, or range restrictions. It is specified as a subproperty of \"owl:topObjectProperty,\" indicating it inherits the broadest possible usage among object properties. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': ['isAgentIn']}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between â€˜hasAgentâ€™ and â€˜isAgentInâ€™ according to the ontology?", "1": "If entity A has agent B, does it follow that B is an agent in A?", "2": "Which property is declared as the inverse of â€˜hasAgentâ€™ in this ontology?", "3": "Next CQ:Is there any instance where the use of â€˜hasAgentâ€™ would not imply an equivalent â€˜isAgentInâ€™ relationship?", "4": "Can we infer that every subject related via â€˜hasAgentâ€™ must also have a corresponding â€˜isAgentInâ€™ link?", "5": "How are the roles of â€˜hasAgentâ€™"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasNoiseLevel\nDescription: The property \"hasNoiseLevel\" has no explicitly defined characteristics, domain, or range restrictions. It does not declare any super-properties or inverse properties. This indicates that the property can be used flexibly to relate entities to unspecified values representing noise levels, without ontological constraints on the types of subjects or objects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasValue'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every instance of hasNoiseLevel also be considered as having some value?", "1": "Is there at least one entity that possesses both hasNoiseLevel and hasValue relationships?", "2": "Which properties are classified as subproperties under hasValue, such as hasNoiseLevel?", "3": "Next CQ:Is hasNoiseLevel a specific type within the category of hasValue?", "4": "What broader property categories encompass hasNoiseLevel?", "5": "Does hasNoiseLevel inherit all characteristics of hasValue?", "6": "Next CQ:Are all instances associated with hasNoiseLevel necessarily connected through hasValue to another entity?", "7": "Can an object have a has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isAgentIn\nDescription: The property \"isAgentIn\" has no explicitly defined characteristics, domain, or range restrictions, and it does not declare any super-properties or inverse properties. Its intended use should be clarified with additional axioms or documentation.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What logical connections exist between â€˜isAgentInâ€™ and other properties within the ontology?", "1": "Is â€˜isAgentInâ€™ considered a specialization of the general object property â€˜owl:topObjectPropertyâ€™?", "2": "Which higher-level properties encompass â€˜isAgentInâ€™ as their subproperty?", "3": "Next level up from â€˜isAgentInâ€™: what property hierarchies include it?", "4": "Does â€˜isAgentInâ€™ serve as a subproperty for any other property besides â€˜owl:topObjectPropertyâ€™?", "5": "Which properties are classified under â€˜owl:topObjectPropertyâ€™, including â€˜isAgentInâ€™?"}}
