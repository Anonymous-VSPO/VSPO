{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Container\nDescription: Container is defined as a subclass of PhysicalEndurant. It is characterized by the restriction that it may only be the inverse of containedIn with respect to AmountOfStuff or PhysicalObject; that is, only an AmountOfStuff or a PhysicalObject can be contained in a Container. The class is intended for use when an amount of matter is not self-contained, emphasizing the role of the Container in physically enclosing or holding such entities.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[inverseOf containedIn only (AmountOfStuff or PhysicalObject)]']}\nGenerated CQs:", "output": "Is Container categorized under the broader type of PhysicalEndurant? | Which entities are specified as subtypes of PhysicalEndurant, including Container? | To what higher-level classes does Container belong within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Stuff\nDescription: Stuff is defined as a subclass of PhysicalEndurant and is synonymous with \"Amount of Matter.\" Members of this class are restricted to having only states that are instances of StuffState, with a maximum of three such states per individual. This formalization captures the notion of matter existing in a limited number of distinct possible states.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'propertyRestrictions': ['[hasState max 3 StuffState]']}\nGenerated CQs:", "output": "Is every state associated with Stuff necessarily classified as a StuffState? | Can Stuff exist in any state other than those categorized as StuffState? | Does Stuff restrict all of its hasState relations to only refer to entities of type StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bulk\nDescription: Bulk is a subclass of Stuff, further constrained to entities whose granule type is either Molecule or MultiMoleculeParticle, or which consist only of or contain as parts other Stuff. Bulk is equivalent to either MixedStuff or StructuredPureStuff, and cannot be UnstructuredPureStuff. In practical contexts, particularly in the food industry, Bulk refers to goods such as soy beans, coffee, nuts, pet food, tea, whole grains, and sugar—items typically handled and measured in aggregate amounts rather than as individual units. The class accommodates various granularities (e.g., bags of nuts or packets of cookies are counted in units of the contained item type) and encompasses different material compositions, such as StructuredPureStuff (like sugar), HomogenousMixedStuff (such as stabilized peanut butter), and HeterogenousMixedStuff (e.g., pet food), highlighting the concept’s versatility in bulk goods handling and classification.\nAxiom: {'subClassOf': ['Stuff', '(([hasGranuleType some (Molecule or MultiMoleculeParticle)] or [hasPartStuff some Stuff]) and ([hasGranuleType only (Molecule or MultiMoleculeParticle)] or [hasPartStuff only Stuff]))']}\nGenerated CQs:", "output": "Is Bulk classified under either MixedStuff or StructuredPureStuff categories? | Which concepts are more specific than the union of MixedStuff and StructuredPureStuff, such as Bulk? | Into which overarching groups does Bulk fit within the ontology: MixedStuff, StructuredPureStuff, or both? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PureStuff\nDescription: PureStuff is defined as a subclass of Stuff and is equivalent to entities that have exactly one granule type (either an Atom, Molecule, or MultiMoleculeParticle), exactly one part stuff (which must be either PureBulk, StructuredPureStuff, or UnstructuredPureStuff), and exactly one stuff distribution (which must be an EvenDistribution). In the literature, PureStuff has also been referred to as 'Unstructured stuff' and 'discrete stuff', and is characterized by being composed of a single kind of molecule or atomic constituent—for example, water composed only of H₂O molecules or pure manganese made up solely of manganese atoms. This is an idealized category, as real-world materials are only pure relative to detection limits.\nAxiom: {'subClassOf': ['Stuff'], 'equivalentClass': []}\nGenerated CQs:", "output": "Is PureStuff equivalent to the intersection of Stuff, entities with exactly one granule type being Atom, Molecule, or MultiMoleculeParticle, exactly one part being PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and exactly one even distribution of matter? | Does every PureStuff instance necessarily have one and only one granule type from Atom, Molecule, or MultiMoleculeParticle, one and only one component from PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and exactly one even stuff distribution? | Can PureStuff be completely characterized as Stuff with a single granule type chosen from Atom, Molecule, or MultiMoleculeParticle, a single part chosen from PureBulk, StructuredPureStuff, or UnstructuredPureStuff, and one even distribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solution\nDescription: Solution is formally defined as a subclass of HomogeneousMixture, characterized by a uniform composition throughout. Equivalent class axioms specify that a Solution consists of at least two “stuffs”: one acting as a Solute and one as a Solvent, each of which is inhered by some HomogeneousMixture and has a granule type restricted to Atom, Ion, or Molecule. Furthermore, a Solution must have a number of phases exactly equal to one. The class captures chemical systems where the mixing occurs at the molecular level, resulting in homogeneity; this applies to solutions in all physical states (solid, liquid, or gas). The definition intentionally omits \"dilute solution\" due to the lack of a clear-cut quantitative threshold.\nAxiom: {'subClassOf': ['HomogeneousMixture'], 'equivalentClass': []}\nGenerated CQs:", "output": "Is a Solution necessarily defined as a homogeneous mixture that includes at least one part composed of a Solute and another part composed of a Solvent, both being stuff with granule types restricted to atom, ion, or molecule and having at least two phases? | Does the definition of Solution require its parts to consist solely of stuff inhering in solute or solvent, each having only granule types atom, ion, or molecule? | Can Solution be characterized as the intersection of HomogeneousMixture and entities possessing both solute-stuff and solvent-stuff components—each constrained by granule type and a minimum number of phases? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solute\nDescription: Solute is defined as a subclass of StuffRole and is explicitly disjoint from Solvent, ensuring that no entity can simultaneously be both a Solute and a Solvent. Formally, every Solute is related through the inverse of solutionFormingRelation to some Solvent, indicating its essential role in solution formation. Conceptually, a Solute is a substance that is dissolved in another substance (the Solvent).\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': [], 'propertyRestrictions': ['[inverseOf solutionFormingRelation some Solvent]']}\nGenerated CQs:", "output": "What is the formal distinction between Solute and Solvent in the ontology? | Is there any entity that can belong to both the Solute and Solvent classes? | Which entities or classes are explicitly specified as disjoint with Solute? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Emulsion\nDescription: Emulsion is defined as a subclass of DispersionColloid and is equivalent to a DispersionColloid with exactly one liquid in the continuous medium and exactly one liquid in the dispersed phase. The class axiom enforces that an emulsion must have two distinct parts: a liquid continuous medium and a liquid dispersed phase. Examples include milk, mayonnaise, and hand cream, where both the continuous and dispersed phases are liquids. This classification captures the key characteristic of emulsions as colloidal mixtures of two immiscible liquids.\nAxiom: {'subClassOf': [], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Is Emulsion classified under the broader category of DispersionColloid? | Which more specific types are contained within DispersionColloid, including Emulsion? | What higher-level categories does Emulsion belong to within the context of colloids? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gel\nDescription: Gel is a subclass of DispersionColloid and is defined as a colloidal system consisting of exactly one solid continuous medium and exactly one liquid dispersed phase. This means that in a gel, the solid component forms a continuous network throughout the material, while the liquid is dispersed within it. Examples include agar, gelatin, and jelly. The class axioms ensure that any instance of Gel must have a solid state as the continuous medium and a liquid as the dispersed phase, formalizing its structural composition as described in the referenced sources.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': []}\nGenerated CQs:", "output": "Must every Gel contain exactly one part that is a Stuff in the liquid state inhering in a DispersedPhase, and exactly one part that is a Stuff in the solid state inhering in a ContinuousMedium? | Is Gel equivalent to the intersection of DispersionColloid and those entities composed of precisely one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium? | Does the definition of Gel permit any hasPartStuff relationships other than one liquid Stuff in a DispersedPhase and one solid Stuff in a ContinuousMedium? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sol\nDescription: Sol is defined as a subclass of DispersionColloid, precisely characterized as a colloidal system consisting of exactly one liquid continuous medium and exactly one solid dispersed phase. The class axiom specifies that the system contains:  \n- one part (Stuff) in a liquid state inhering in the continuous medium, and  \n- one part (Stuff) in a solid state inhering in the dispersed phase.  \nThis structure excludes the possibility of additional types of states or phases within the sol. Typical examples include pigmented ink and blood, where solid particles are dispersed uniformly within a liquid medium.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': []}\nGenerated CQs:", "output": "Does every Sol necessarily include exactly one part that is Stuff with a liquid state inhering in a ContinuousMedium, and exactly one part that is Stuff with a solid state inhering in a DispersedPhase? | Is Sol equivalent to the intersection of DispersionColloid and those entities that have exactly one liquid-stated part in a continuous medium and exactly one solid-stated part in a dispersed phase? | Are all members of Sol precisely those DispersionColloid instances that possess one and only one liquid state part associated with a ContinuousMedium and one and only one solid state part associated with a DispersedPhase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidFoam\nDescription: SolidFoam is a subclass of DispersionColloid, characterized by having a solid as the continuous medium and a gas as the dispersed phase. Formally, each instance of SolidFoam consists of exactly one part that is a solid (constituting the continuous medium), and exactly one part that is a gas (constituting the dispersed phase). Examples include aerogel and styrofoam. This structure ensures that SolidFoam represents colloidal systems where gas is dispersed throughout a solid matrix.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': []}\nGenerated CQs:", "output": "Does every SolidFoam necessarily have exactly one part consisting of gas-state stuff inhering in a dispersed phase and exactly one part consisting of solid-state stuff inhering in a continuous medium? | Is SolidFoam equivalent to the intersection of DispersionColloid and those entities with one gaseous dispersed phase part and one solid continuous medium part? | Can SolidFoam be fully defined as a DispersionColloid with precisely one gas-state dispersed phase part and one solid-state continuous medium part? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HeterogeneousMixture\nDescription: HeterogeneousMixture is a subclass of MixedStuff, formally disjoint from HomogeneousMixture, meaning no mixture can be both heterogeneous and homogeneous simultaneously. Members of this class are defined by having at least two different granule types (each being a Molecule or MultiMoleculeParticle) and consisting of a minimum of two distinct parts, each being either MixedStuff or PureStuff. Additionally, every HeterogeneousMixture exhibits exactly one instance of UnevenDistribution, ensuring that its components are not distributed uniformly. As described, a HeterogeneousMixture is a combination of different substances, often with visibly different particle sizes, which do not react chemically and can be separated by physical means (such as filtration). Unlike a homogeneous mixture, any portion of a heterogeneous mixture may differ in composition from the whole, unless special care is taken in selecting the portion.\nAxiom: {'subClassOf': ['MixedStuff'], 'disjointWith': [], 'propertyRestrictions': ['[hasGranuleType min 2 (Molecule or MultiMoleculeParticle)]', '[hasPartStuff min 2 (MixedStuff or PureStuff)]', '[hasStuffDistribution exactly 1 UnevenDistribution]']}\nGenerated CQs:", "output": "How are HeterogeneousMixture and HomogeneousMixture differentiated within the ontology? | Is any mixture classified as both HeterogeneousMixture and HomogeneousMixture simultaneously? | Which mixture types are specified as disjoint with HomogeneousMixture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Piece\nDescription: Piece is defined as a subclass of Portion, characterized by the axiom that it is a self-contained, scattered portion of some AmountOfStuff. According to its description, \"Piece\" represents discrete, self-contained amounts—such as slices or lumps—that are distinct from the whole but still derive from it. This class formalization ensures that any instance of Piece must be both a Portion and a self-contained segment of an AmountOfStuff, supporting modeling of individual fragments or divisions of a larger substance.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[isSelfContainedScatteredPortionOf some AmountOfStuff]']}\nGenerated CQs:", "output": "Is every Piece an example of a Portion? | Which types fall under the broader class of Portion, such as Piece? | What are the more general categories that include Piece? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PureBulk\nDescription: PureBulk is a subclass of PureStuff, defined as equivalent to those entities that consist of PureStuff whose granule type is exclusively and exactly one type of MultiMoleculeParticle. This means all granules within a PureBulk are restricted to a single specified kind of multi-molecular particle, differentiating it from StructuredPureStuff and UnstructuredPureStuff where basis types may vary. Typical examples include a silo of soy beans, a packet of tea biscuits, or a bag of cashew nuts, where each bulk contains only one type of multi-molecular particulate basis.\nAxiom: {'subClassOf': ['PureStuff'], 'equivalentClass': []}\nGenerated CQs:", "output": "Is PureBulk equivalent to the class of PureStuff that has exactly one granule type, and that granule type is only MultiMoleculeParticle? | Does every instance of PureBulk necessarily have only one granule type, which must be a MultiMoleculeParticle, and must also be PureStuff? | Are all PureBulk entities strictly those PureStuff individuals with hasGranuleType limited to exactly one occurrence of MultiMoleculeParticle? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidHeterogeneousMixture\nDescription: SolidHeterogeneousMixture is defined as a subclass of HeterogeneousMixture and is equivalent to a HeterogeneousMixture that contains at least two distinct parts, each of which is a substance (Stuff) present in the solid state. It represents mixtures where the component materials remain physically separate and are not homogenized; for example, wood, which consists of compartmentalized solid components such as cellulose, hemicellulose, lignin, and various extractives (plant hormones, waxes, terpenes, etc.). This class characterizes solid-phase systems where heterogeneity is maintained at the physical or structural level.\nAxiom: {'subClassOf': [], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff min 2 (Stuff and [hasState some Solid])])']}\nGenerated CQs:", "output": "Is SolidHeterogeneousMixture categorized under the broader class of HeterogeneousMixture? | Which mixture types are subclasses of HeterogeneousMixture, such as SolidHeterogeneousMixture? | What are the more general classes that encompass SolidHeterogeneousMixture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AbstractRegion\nDescription: AbstractRegion is defined as a subclass of Region. This indicates that every instance of AbstractRegion is also an instance of Region, inheriting all its characteristics. The class formalizes a conceptual or non-physical specialization of Region, but no additional constraints or distinctions are provided beyond its subsumption in the hierarchy.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "Which subclasses fall under the class Region, including AbstractRegion? | Is AbstractRegion encompassed within the wider class of Region? | To what parent class does AbstractRegion pertain? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalRegion\nDescription: PhysicalRegion is defined as a subclass of Region, indicating that every PhysicalRegion is, by definition, a type of Region. This formalization distinguishes PhysicalRegion as a specific conceptual or spatial area within the broader class of Region, with characteristics or properties that pertain to physical or tangible attributes.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "Is PhysicalRegion classified as a specific type of Region? | Which kinds of regions include PhysicalRegion as a specialized form? | What are the immediate superclasses of PhysicalRegion within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: om-1:Quantity\nDescription: om-1:Quantity is defined as a subclass of Region. This means every om-1:Quantity is categorized within the broader class of Region, inheriting its general characteristics. No additional restrictions or differentiations are provided, so om-1:Quantity serves to represent a more specific concept or type of Region within the ontology.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "output": "Does om-1:Quantity fall under the general category of Region? | Which subclasses are defined under Region, such as om-1:Quantity? | What higher-level concepts is om-1:Quantity classified as a member of? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmountOfStuff\nDescription: AmountOfStuff is defined as a subclass of PhysicalEndurant, representing entities that persist through time while maintaining their identity as physical particulars. According to the current description, it aligns with DOLCE's notion of \"amount of matter\" and applies exclusively to specific, individual entities (particulars) rather than universals or collections. This class captures the concept of a definite quantity of physical substance.\nAxiom: {'subClassOf': ['PhysicalEndurant']}\nGenerated CQs:", "output": "Which specific concepts are included as subclasses of PhysicalEndurant, such as AmountOfStuff? | What are the higher-level categories to which AmountOfStuff is assigned? | Is AmountOfStuff classified under the broader category of PhysicalEndurant? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AssociationalColloid\nDescription: AssociationalColloid is defined as a subclass of Colloid. This class includes colloidal systems characterized by the association of amphiphilic molecules, such as hydrophobic/hydrophilic interactions. Typical examples are micellar colloids (e.g., soap solutions), where molecules form aggregates known as micelles. Properties specific to this class can include aggregation numbers—typically a range—reflecting the number of molecules per micelle, often determined by the critical micelle concentration.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "Does AssociationalColloid fall under the broader category of Colloid? | What are the parent categories for AssociationalColloid in the ontology? | Which types of Colloid include AssociationalColloid as a more specific instance? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DispersionColloid\nDescription: DispersionColloid is defined as a subclass of Colloid and represents the most common type among colloids, distinguishing it from other types within the Colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "What broader classes does DispersionColloid belong to? | Is DispersionColloid classified as a specific form of Colloid? | Which subclasses are encompassed by the concept of Colloid? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MolecularColloid\nDescription: MolecularColloid is defined as a subclass of Colloid, representing colloidal systems in which the constituent molecules are sufficiently large to exhibit the characteristic behaviors of particles with intermediate sizes, typical of other types of colloids. Examples include latex and other materials with large polymers, such as starchy substances. This classification emphasizes the particle size and molecular structure as distinguishing factors within the broader colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "output": "Which specific subtypes of Colloid encompass MolecularColloid? | Is MolecularColloid categorized under the broader class of Colloid? | To what overarching categories does MolecularColloid pertain within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Atom\nDescription: Atom is defined as a subclass of PhysicalObject, indicating that every atom is considered a physical entity within the ontology. This classification places atoms within the broader category of tangible objects, establishing their role as fundamental physical units that compose matter.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Does Atom fall under the category of PhysicalObject? | Which entities are more specific than PhysicalObject, such as Atom? | What broader classes does Atom belong to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ion\nDescription: Ion is defined as a subclass of PhysicalObject, meaning it represents a kind of physical entity. No further property restrictions, disjointness, or specific characteristics are asserted in the axioms, so the class encompasses any physical object identified as an ion—typically, an atom or molecule with a net electric charge due to the loss or gain of electrons.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Which entities are specified as subclasses under PhysicalObject, such as Ion? | What overarching categories encompass Ion as a subordinate type? | Is an Ion classified as a type of PhysicalObject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MultiMoleculeParticle\nDescription: MultiMoleculeParticle is defined as a subclass of PhysicalObject, referring to a particle composed of multiple molecules, such as those found in suspensions or colloidal droplets (distinct from sub-atomic particles). This class is intended for cases where individual entities are aggregates of molecules, and, as noted in its annotation, is considered a pragmatic solution within the ontology structure rather than a rigorous chemical classification.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "output": "Does MultiMoleculeParticle fall under the broader class of PhysicalObject? | Which entities are categorized as types of PhysicalObject, specifically including MultiMoleculeParticle? | What are the more abstract categories to which MultiMoleculeParticle is assigned? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DispersedPhase\nDescription: DispersedPhase is defined as a subclass of StuffRole. It refers to the role played by a substance within the context of a colloidal system, specifically as the phase that is distributed throughout another phase (the ContinuousMedium). The relationship (colloidFormingRelation) exists between the DispersedPhase and the ContinuousMedium themselves, rather than their respective bearers (stuffs), emphasizing that simply combining the substance bearers does not suffice to form a colloid. Proper mixing is required to achieve a homogeneous colloidal mixture; the ability of a substance to serve as either dispersed phase or continuous medium depends on the specific system being formed.\nAxiom: {'subClassOf': ['StuffRole']}\nGenerated CQs:", "output": "What higher-level categories does DispersedPhase belong to? | Is DispersedPhase classified under the broader category of StuffRole? | Which roles are encompassed within StuffRole, including DispersedPhase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solvent\nDescription: Solvent is defined as a subclass of StuffRole. It represents a substance in which another substance, known as the solute, is dissolved. Solvents are essential participants in solution-forming relations, acting as the medium that enables solutes to dissolve and sometimes facilitating various chemical reactions during the dissolution process. This formalization emphasizes the role-based nature of solvents within chemical systems.\nAxiom: {'subClassOf': ['StuffRole']}\nGenerated CQs:", "output": "What are the more general roles associated with Solvent? | Is Solvent classified under the broader category of StuffRole? | Which roles are encompassed by StuffRole, including Solvent? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Drop\nDescription: Drop is defined as a subclass of Piece, representing a specific type of piece, such as a drop of blood. This class serves as an example to illustrate a distinct, often small and discrete, portion or quantity of a substance.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "Which subclasses fall under the category of Piece, with Drop included? | What broader classes include Drop within their hierarchy? | Is Drop categorized under the broader class of Piece? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lump\nDescription: Lump is defined as a subclass of Piece, representing a specific type of piece. The class is exemplified by instances such as a \"lump of clay,\" illustrating that a lump is considered a particular form or configuration of a piece. This class serves as an example of how the concept of \"piece\" can be specialized.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "What broader classes encompass Lump within the ontology? | Which entities are specified as subtypes under Piece, such as Lump? | Is Lump classified as a type of Piece? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Slice\nDescription: Slice is defined as a subclass of Piece, representing a specific type of piece. As indicated in the example, a Slice could refer to a slice of bread, illustrating that this class captures instances where something is cut or divided into thin, flat portions.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "output": "Which subtypes fall under the category of Piece, including Slice? | Is Slice categorized under the broader class of Piece? | What overarching types does Slice inherit from within the hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EvenDistribution\nDescription: EvenDistribution is defined as a subclass of AbstractRegion. This indicates that every instance of EvenDistribution is a type of abstract region, but with additional implied properties that distinguish it from other abstract regions. No further property restrictions, equivalence, or disjointness axioms are specified. The class likely represents distributions characterized by some notion of \"evenness\" or uniformity, although the specifics are not constrained by the given axiom.\nAxiom: {'subClassOf': ['AbstractRegion']}\nGenerated CQs:", "output": "What broader classes does EvenDistribution hierarchically fall under? | Is EvenDistribution classified as a type within AbstractRegion? | Which entities are direct specializations of AbstractRegion, such as EvenDistribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnevenDistribution\nDescription: UnevenDistribution is defined as a subclass of AbstractRegion. This indicates that every instance of UnevenDistribution is a specific kind of AbstractRegion, likely representing regions or segments where distribution is not uniform. No additional constraints or properties are specified, so this class primarily serves to differentiate non-uniform or irregular distributions within the broader category of abstract regions.\nAxiom: {'subClassOf': ['AbstractRegion']}\nGenerated CQs:", "output": "Is UnevenDistribution classified under the broader group of AbstractRegion? | To which higher-level categories does UnevenDistribution pertain within the ontology? | What kinds of specialized regions are encompassed by AbstractRegion, specifically including UnevenDistribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gas\nDescription: Gas is defined as a subclass of StuffState. This classification indicates that Gas represents a particular state or condition in which a substance (stuff) can exist. Any individual classified as Gas inherits the general properties of StuffState, marking it as a type of physical state distinct from other possible states (such as solid or liquid).\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "Is Gas classified as a specific type within the broader StuffState category? | What entities are categorized more specifically than StuffState, including Gas? | Which higher-level classes encompass Gas? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Liquid\nDescription: liquid is defined as a subclass of StuffState, representing a specific physical state of matter. All instances of liquid must also be instances of StuffState, situating liquids within the broader classification of material states such as solid or gas. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "What other specific states are encompassed by StuffState besides Liquid? | Which general categories in the ontology include Liquid as a member? | Is Liquid classified under the broader category of StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solid\nDescription: Solid is defined as a subclass of StuffState, representing a particular state of matter. This class encompasses all entities that exist in the solid state, distinguishing them from other possible states such as liquid or gas. All instances of Solid inherit the characteristics of StuffState.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "output": "Does Solid fall under the broader grouping of StuffState? | Which specific states of stuff are categorized as subtypes of StuffState, such as Solid? | What are the general states that Solid is classified within? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MicellarColloid\nDescription: MicellarColloid is defined as a subclass of AssociationalColloid. Although the formal axioms do not distinguish it further from AssociationalColloid, the usage of the term \"MicellarColloid\" reflects domain-specific terminology differences between food physics and colloid chemistry. Therefore, individuals of this class share all characteristics of AssociationalColloid, with differentiation rooted primarily in contextual nomenclature rather than ontological structure.\nAxiom: {'subClassOf': ['AssociationalColloid']}\nGenerated CQs:", "output": "Is MicellarColloid classified under the broader group of AssociationalColloid? | Which classes are specialized instances of AssociationalColloid, including MicellarColloid? | What higher-level classes does MicellarColloid fall under within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Paste\nDescription: Paste is defined as a subclass of Suspension. It is characterized as a type of suspension with a reduced proportion of dispersion medium, in which the dispersed phase exhibits connectivity (i.e., the particles are linked or form a continuous structure). This differentiates pastes from other suspensions, where the dispersed phase may be unconnected and more freely suspended in the medium.\nAxiom: {'subClassOf': ['Suspension']}\nGenerated CQs:", "output": "Does Paste fall under the more general category of Suspension? | Which subclasses are encompassed by Suspension, specifically including Paste? | What broader classifications is Paste associated with in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Role\nDescription: Role is defined as a subclass of Endurant, indicating that any individual classified as a Role is also necessarily an Endurant. This positions Role as an entity that persists through time while possibly undergoing changes. No further restrictions or disjointness conditions are specified for this class.\nAxiom: {'subClassOf': ['Endurant']}\nGenerated CQs:", "output": "What broader classes encompass Role within the ontology? | Is Role a specialized type of Endurant? | Which entities are classified under Endurant, including Role? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Region\nDescription: Region is defined as a subclass of Abstract, indicating that it represents an abstract concept rather than a physical entity. This classification implies that instances of Region are used to denote conceptual or non-physical areas, rather than tangible, material locations.\nAxiom: {'subClassOf': ['Abstract']}\nGenerated CQs:", "output": "What broader categories encompass Region as a subclass? | Which entities are defined as subclasses within Abstract, including Region? | Is Region a specific type classified under Abstract? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: om-1:Unit_of_measure\nDescription: om-1:Unit_of_measure is defined as a subclass of Abstract, indicating that it represents a conceptual or non-physical entity within the ontology. This class is intended to capture the abstract nature of measurement units used to quantify physical or abstract quantities, rather than representing tangible objects themselves.\nAxiom: {'subClassOf': ['Abstract']}\nGenerated CQs:", "output": "Which subclasses fall under the Abstract category, such as Unit_of_measure? | Is Unit_of_measure categorized under the broader class of Abstract? | What higher-level classes does Unit_of_measure inherit from? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: State\nDescription: State is defined as a subclass of Perdurant, indicating that it represents a temporally extended entity or occurrence. As a Perdurant, a State exists over a period of time, rather than as an instantaneous or static entity. No further restrictions or distinctions are specified in the current axioms.\nAxiom: {'subClassOf': ['Perdurant']}\nGenerated CQs:", "output": "Which concepts are classified as subtypes of Perdurant, including State? | Is State a specialized form of Perdurant? | To which general categories is State hierarchically related within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffState\nDescription: StuffState is defined as a subclass of State. It represents the general state in which a substance (or \"stuff\") exists, such as solid, liquid, or gas. While it is relevant for describing the phase of a specific material (e.g., water as ice, liquid, or vapor), the class also accommodates cases like colloids, where the states of mixed components are important. The focus of StuffState is on the state as a property of a substance in general, rather than on the particular state of an individual stuff. This provides a foundation for distinguishing and reasoning about the states of matter across different contexts, including mixtures and colloidal systems.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "output": "Is StuffState categorized under the broader class of State? | Which subclasses fall under State, including StuffState? | What higher-level classes encompass StuffState? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Endurant\nDescription: Endurant is formally specified as a class disjoint with Perdurant, which ensures that no individual entity can be simultaneously classified as both an Endurant and a Perdurant. This distinction typically reflects the ontological separation between entities that persist wholly through time (Endurants, such as physical objects) and those that occur in or unfold over time (Perdurants, such as events or processes).\nAxiom: {'disjointWith': ['Perdurant']}\nGenerated CQs:", "output": "What other ontology classes are specified as disjoint with Perdurant? | Is there any instance that can simultaneously be classified as both Endurant and Perdurant? | How does the ontology formally separate Endurant and Perdurant classes? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NumberOfPhases\nDescription: NumberOfPhases is defined as a subclass of AbstractRegion, where each instance must have at least one associated data value of type xsd:nonNegativeInteger (i.e., a non-negative integer). This class provides an alternative way of modeling the number of phases, as opposed to direct datatype usage. The formalization requires that every NumberOfPhases individual be characterized by a non-negative integer value indicating the number of phases.\nAxiom: {'subClassOf': ['AbstractRegion'], 'propertyRestrictions': ['[hasDataValue only xsd:nonNegativeInteger]']}\nGenerated CQs:", "output": "Must every instance of NumberOfPhases possess a hasDataValue property with a non-negative integer value? | Is it required that NumberOfPhases is associated with at least one hasDataValue that is a non-negative integer? | Does the class NumberOfPhases necessarily include only those entities that have a hasDataValue of some non-negative integer type? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeastPortion\nDescription: LeastPortion is defined as a subclass of Portion that does not contain any further Portion as a part (i.e., it cannot be subdivided into smaller portions). It represents the smallest possible portion that still exhibits all macroscopic properties characteristic of its kind, analogous to the concept of an atom in mereology, but specifically applied to \"stuffs\" or material substances. This ensures that individuals of LeastPortion are indivisible relative to the kind of material or substance under consideration.\nAxiom: {'subClassOf': ['Portion', 'not [hasPortion only Portion]']}\nGenerated CQs:", "output": "Which entities are classified as LeastPortion under the restriction of not having any associated Portion via hasPortion? | Does being a member of LeastPortion imply the absence of any hasPortion relationship to Portion? | What classes are included in the category of entities that do not possess any Portion through the hasPortion property, such as LeastPortion? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Portion\nDescription: Portion is defined as a subclass of AmountOfStuff, representing a specific part or segment derived from a larger whole. Every Portion is characterized by the property restriction that it must be a portion of some AmountOfStuff, ensuring a relational dependency with another instance of AmountOfStuff. This formalization encapsulates the idea that a Portion cannot exist independently, but always as a part related to a greater quantity or whole.\nAxiom: {'subClassOf': ['AmountOfStuff'], 'propertyRestrictions': ['[portionOf only AmountOfStuff]']}\nGenerated CQs:", "output": "Is every Portion necessarily a portion of some AmountOfStuff? | Is it required for a Portion to be linked via 'portionOf' to at least one AmountOfStuff instance? | Can a Portion exist without being associated with an AmountOfStuff through the 'portionOf' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnstructuredPureStuff\nDescription: UnstructuredPureStuff is a subclass of PureStuff, formally defined as material that contains exactly one type of atom as its granular component (i.e., it satisfies the restriction [hasGranuleType only Atom] and [hasGranuleType exactly 1 Atom]). This means all constituent atoms are of the same atomic type, corresponding to the ontological equivalent of a chemical element (e.g., a quantity of helium or gold). This class is synonymous with the notion of an \"Element\" and disregards the presence of undetectable impurities. The definition intends that the \"one atom\" restriction refers to a single atomic type, not a single individual atom.\nAxiom: {'subClassOf': ['PureStuff'], 'equivalentClass': ['(PureStuff or [hasGranuleType some Atom] or [hasGranuleType exactly 1 Atom])']}\nGenerated CQs:", "output": "Is UnstructuredPureStuff logically equivalent to the intersection of PureStuff and those with exactly one granule type, which must be Atom? | Does every instance of UnstructuredPureStuff have only one granule type, and that granule type is Atom? | Is UnstructuredPureStuff fully defined as a subclass of PureStuff that can have no granule types other than a single Atom? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffRole\nDescription: StuffRole is a subclass of Role, defined by the axiom that it inheres in some instance of Stuff. This class represents the specific role that a 'stuff' (material substance) assumes within a mixture, indicating its functional participation or relevance in the context of that mixture.\nAxiom: {'subClassOf': ['Role'], 'propertyRestrictions': ['[srInheresIn only Stuff]']}\nGenerated CQs:", "output": "Is every StuffRole necessarily associated with at least one Stuff through the srInheresIn property? | Must a StuffRole have the srInheresIn relation to some instance of Stuff? | Does the existence of a StuffRole imply that it inheres in one or more Stuff via srInheresIn? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalObject\nDescription: PhysicalObject is defined as a subclass of PhysicalEndurant. This means every PhysicalObject necessarily inherits all characteristics of PhysicalEndurants. There are no explicit disjointness constraints specified, so PhysicalObject may overlap with other subclasses of PhysicalEndurant unless otherwise restricted in the ontology.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'disjointWith': ['Stuff']}\nGenerated CQs:", "output": "How does the ontology characterize the distinction between PhysicalObject and Stuff? | Is there any entity that can simultaneously be classified as both PhysicalObject and Stuff? | Which classes are specified as mutually exclusive with Stuff within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Molecule\nDescription: Molecule is defined as a subclass of PhysicalObject, indicating that every molecule is a type of physical entity. There are no additional property restrictions specified for this class.\nAxiom: {'subClassOf': ['PhysicalObject'], 'propertyRestrictions': ['[hasPart some Atom]']}\nGenerated CQs:", "output": "Is every molecule composed of at least one atom as a part? | Must a molecule necessarily possess the 'hasPart' relationship with an atom? | Can a molecule exist without having any atom as one of its parts? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MixedStuff\nDescription: MixedStuff is defined as a subclass of Stuff, specifically representing entities that consist of at least two component parts, each of which is itself a Stuff. This formalization requires any instance of MixedStuff to have at least two distinct Stuff components through the hasPartStuff property. MixedStuff is not specified to be disjoint with any other class.\nAxiom: {'subClassOf': ['Stuff', '(Stuff and [hasPartStuff min 2 Stuff])'], 'disjointWith': ['PureStuff']}\nGenerated CQs:", "output": "How does the ontology define the distinction between MixedStuff and PureStuff? | Is there any instance that can belong to both MixedStuff and PureStuff? | Which classes are logically incompatible with PureStuff according to the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Colloid\nDescription: Colloid is formally defined as a type of homogeneous mixture characterized by having exactly two distinct components: one continuous medium and one dispersed phase, each represented as a unique part (stuff) that exists in at least some physical state. The structure requires at least two phases in total, with the dispersed phase and continuous medium inhering in their respective stuffs. This precise definition captures the essential nature of colloids as multi-phase, homogeneous systems.\nAxiom: {'subClassOf': ['HomogeneousMixture'], 'equivalentClass': ['(HomogeneousMixture and [hasPartStuff exactly 1 (Stuff and [hasState some StuffState] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some StuffState] and [inverseOf srInheresIn some DispersedPhase])] and [hasNrOfPhase some DatatypeRestriction(xsd:int minInclusive 2)])']}\nGenerated CQs:", "output": "Is a Colloid classified under the broader group of HomogeneousMixture? | Which specific mixtures are included as subclasses of HomogeneousMixture, such as Colloid? | What are the parent categories that Colloid belongs to within the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ContinuousMedium\nDescription: ContinuousMedium is defined as a subclass of StuffRole. Members of this class are characterized by the existence of at least one colloidFormingRelation to an individual of the DispersedPhase class. This means any instance of ContinuousMedium must participate in a relationship where it serves as the medium in which a dispersed phase is present, reflecting its role in colloidal systems. There are no explicit disjointness constraints for this class.\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': ['DispersedPhase'], 'propertyRestrictions': ['[colloidFormingRelation some DispersedPhase]']}\nGenerated CQs:", "output": "What logical separation is defined between ContinuousMedium and DispersedPhase within the ontology? | Can an entity simultaneously be classified as both ContinuousMedium and DispersedPhase? | Which classes are explicitly stated as mutually exclusive with DispersedPhase? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Distribution\nDescription: Distribution is a class whose members are characterized by the requirement that they must have at least one quale that is either an EvenDistribution or an UnevenDistribution. This means any individual of the Distribution class must be associated, through the hasQuale property, with a quale reflecting either evenness or unevenness in distribution.\nAxiom: {'subClassOf': ['Quality'], 'propertyRestrictions': ['[hasQuale some (EvenDistribution or UnevenDistribution)]']}\nGenerated CQs:", "output": "Is Distribution classified under the broader group of Quality? | What specific kinds of Quality include Distribution as a subclass? | Which overarching categories encompass Distribution? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Foam\nDescription: Foam is defined as a subclass of DispersionColloid, indicating that every instance of foam is a type of dispersion colloid. This means that foams inherit all properties and restrictions of DispersionColloid, but no additional equivalence conditions or distinguishing characteristics are specified beyond this subclass relationship.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])])']}\nGenerated CQs:", "output": "Does a Foam necessarily consist of exactly one part that is a Stuff with a gaseous state inhering in a DispersedPhase and exactly one part that is a Stuff with a liquid state inhering in a ContinuousMedium? | Is Foam defined as the intersection of DispersionColloid and systems comprising precisely one gaseous phase as the dispersed part and one liquid phase as the continuous medium? | Are all instances of Foam required to have both a single gas-phase dispersed component and a single liquid-phase continuous component as part stuffs? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LiquidAerosol\nDescription: LiquidAerosol is defined as a type of DispersionColloid that consists of exactly one component of gas in the continuous medium and exactly one component of liquid in the dispersed phase. Formally, any member of this class must have a gas substance (Stuff) that inheres in the continuous medium, and a liquid substance (Stuff) that inheres in the dispersed phase. This definition captures systems where liquid droplets are dispersed throughout a gaseous medium, such as mist or fog.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Is DispersionColloid a broader classification that encompasses LiquidAerosol? | Which types of DispersionColloid specifically include LiquidAerosol as a subclass? | Under what higher-level categories is LiquidAerosol formally organized? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidAerosol\nDescription: SolidAerosol is defined as a specific type of DispersionColloid characterized by having exactly one component (part) of Stuff in a gaseous state that inheres in a ContinuousMedium, and exactly one component (part) of Stuff in a solid state that inheres in a DispersedPhase. This formalization precisely captures a system where solid particles are dispersed within a gaseous medium.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Is SolidAerosol classified under the broader group of DispersionColloid? | Which types fall under DispersionColloid, specifically including SolidAerosol? | What parent classes does SolidAerosol belong to within the colloid hierarchy? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidSol\nDescription: SolidSol is a class defined as an equivalent class to a dispersion colloid that consists of exactly two types of solid components: one that inheres in a continuous medium and another that inheres in a dispersed phase. Both parts must be in a solid state, and each occurs exactly once within the SolidSol. This formalization captures the structure of a solid sol, where solid particles are dispersed within a solid continuous medium, both being distinct and occurring exactly once, consistent with the classical understanding of solid sols in colloidal science.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does SolidSol fall within the classification of DispersionColloid? | Which types are classified as subcategories under DispersionColloid, such as SolidSol? | To what broader classes does SolidSol pertain within the ontology's structure? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HomogeneousMixture\nDescription: HomogeneousMixture is defined as a subclass of MixedStuff, where every instance is required to have exactly one hasStuffDistribution property value, and that value must be an EvenDistribution. This formalization captures the concept that all parts of a homogeneous mixture are distributed uniformly, distinguishing it from other types of mixtures.\nAxiom: {'subClassOf': ['MixedStuff'], 'propertyRestrictions': ['[hasStuffDistribution exactly 1 EvenDistribution]', '[hasGranuleType only (Atom or Ion or Molecule)]']}\nGenerated CQs:", "output": "Are all granule types present in a HomogeneousMixture necessarily restricted to atoms, ions, or molecules? | Can a HomogeneousMixture have any granule type other than atom, ion, or molecule via the 'hasGranuleType' property? | Does having a granule type outside of atom, ion, or molecule prevent a mixture from being classified as a HomogeneousMixture? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalEndurant\nDescription: PhysicalEndurant is defined as a subclass of Endurant and is equivalent to om-1:Phenomenon, indicating that every instance of PhysicalEndurant corresponds to an instance of om-1:Phenomenon and vice versa. There are no specified disjointness constraints. This class represents entities that persist through time while maintaining their identity and physical characteristics.\nAxiom: {'subClassOf': ['Endurant'], 'disjointWith': ['Role'], 'equivalentClass': ['om-1:Phenomenon']}\nGenerated CQs:", "output": "What ontological separation is established between PhysicalEndurant and Role? | Is any entity allowed to be classified as both PhysicalEndurant and Role simultaneously? | Which classes are defined as mutually exclusive with Role in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StructuredPureStuff\nDescription: StructuredPureStuff is a subclass of PureStuff and is equivalent to those PureStuff individuals that have exactly one granule type, which must be a Molecule. This means every instance of StructuredPureStuff is composed exclusively of a single type of molecule and cannot have multiple or different granule types. There are no explicit disjointness constraints specified with any other classes.\nAxiom: {'subClassOf': ['PureStuff'], 'disjointWith': ['UnstructuredPureStuff'], 'equivalentClass': ['(PureStuff and [hasGranuleType only Molecule] and [hasGranuleType exactly 1 Molecule])']}\nGenerated CQs:", "output": "How does the ontology define the connection between StructuredPureStuff and UnstructuredPureStuff? | Is there any instance classified under both StructuredPureStuff and UnstructuredPureStuff? | Which classes are stated as mutually exclusive with UnstructuredPureStuff? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Suspension\nDescription: Suspension is defined as a type of heterogeneous mixture in which the mixture contains both liquid and solid phases: it necessarily has components (hasPartStuff) where one part is a substance in a liquid state that inheres in (i.e., serves as) a continuous medium, and another part is a substance in a solid state that inheres in a dispersed phase. Additionally, any suspension must involve granule types that include both Molecule and MultiMoleculeParticle. This class formalization ensures that suspensions are mixtures where solid particles (typically larger than molecules) are dispersed within a liquid medium, reflecting the classical definition in physical sciences.\nAxiom: {'subClassOf': ['([hasGranuleType some Molecule] and [hasGranuleType some MultiMoleculeParticle])', 'HeterogeneousMixture'], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff some (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff some (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "output": "Does Suspension fall within the broader group of HeterogeneousMixture? | Which mixtures are classified as subtypes of HeterogeneousMixture, such as Suspension? | What are the higher-level mixture categories that encompass Suspension? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasState\nDescription: The property \"hasState\" is an object property with no specifically defined characteristics and no inverse property. Its domain is restricted to \"PhysicalEndurant\" entities, and its range is limited to instances of \"State\". It is a sub-property of \"owl:topObjectProperty\", indicating general applicability among object properties. This property is used to relate physical endurants to their corresponding states.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['State'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'hasState' be associated with entities that are not PhysicalEndurants? | Are all entities with which 'hasState' is used necessarily of type PhysicalEndurant? | Which types of individuals can serve as the subject for the 'hasState' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasSelfContainedScatteredPortion\nDescription: The property \"hasSelfContainedScatteredPortion\" relates to entities such as lumps, puddles, slices, or other discrete pieces. It has no explicitly defined domain or range restrictions and no defined characteristics. It is a sub-property of \"scatterPortion\" and has \"isSelfContainedScatteredPortionOf\" as its inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['scatterPortion'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the connection between 'hasSelfContainedScatteredPortion' and 'isSelfContainedScatteredPortionOf' as defined in the ontology? | If entity A has a self-contained scattered portion B, does it follow that B is a self-contained scattered portion of A, according to the ontology? | Which property acts as the inverse of 'hasSelfContainedScatteredPortion'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPartStuff\nDescription: The property \"hasPartStuff\" lacks explicit domain and range constraints, and does not possess any special property characteristics. It is specified as a subproperty of \"hasProperPart\" and is the inverse of \"stuffPartOf\". Notably, its use implies that the related entities are distinct kinds of \"stuffs\", as the current description highlights a requirement for distinction between the entities involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the inverse relationship established between ‘hasPartStuff’ and ‘stuffPartOf’ in the ontology? | If entity A has a part-stuff B via ‘hasPartStuff’, does that indicate that B is related to A through ‘stuffPartOf’? | Which object property is declared as the inverse of ‘hasPartStuff’ in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasContainedScatteredPortion\nDescription: The property \"hasContainedScatteredPortion\" is used to relate a container to scattered portions necessarily contained within it (e.g., water in a glass). It has no explicit domain or range restrictions and does not declare any specific property characteristics. It is a sub-property of \"scatterPortion\" and has \"isContainedScatteredPortionOf\" as its inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['scatterPortion'], 'inverseOf': []}\nGenerated CQs:", "output": "In what way are the properties 'hasContainedScatteredPortion' and 'isContainedScatteredPortionOf' related in the ontology? | If an entity A hasContainedScatteredPortion B, does it follow that B isContainedScatteredPortionOf A? | Which property is modeled as the inverse of 'hasContainedScatteredPortion' in this ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: partOf\nDescription: The property \"partOf\" is defined as a transitive property, indicating that if entity A is part of B, and B is part of C, then A is part of C. No specific domain or range restrictions are imposed. It has no super-properties or explicitly defined inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is partOf a transitive property, such that if an entity is part of a second entity, and the second is part of a third, the first entity is part of the third? | Can the partOf property infer that if object A is part of object B, and object B is part of object C, then object A is part of object C? | Does the ontology require partOf to satisfy the transitive characteristic over related entities? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: contiguousPortion\nDescription: The property \"contiguousPortion\" is defined as a sub-property of \"hasProperPart\" with no explicitly specified domain or range restrictions. It has no declared characteristics. The property has an inverse, \"isContiguousPortionOf,\" indicating a bidirectional relationship. This property is intended to relate an entity to one of its proper parts that is contiguous.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "How are the object properties ‘contiguousPortion’ and ‘isContiguousPortionOf’ interconnected in the ontology? | If entity A is linked to entity B via ‘contiguousPortion’, does that entail that B is related to A through ‘isContiguousPortionOf’? | What object property is defined as the inverse of ‘contiguousPortion’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: properPartOf\nDescription: The property \"properPartOf\" represents the usual proper parthood relation in mereology, indicating that one entity is a proper part of another. It has no explicitly defined characteristics, domain, or range. It is specified as a subproperty of \"partOf\" and does not have an inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is properPartOf classified as a subproperty of partOf within the ontology? | Which properties are identified as subproperties under partOf? | Does the use of properPartOf property entail the use of partOf property for the same subject and object? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasGranuleType\nDescription: The property \"hasGranuleType\" relates entities of type Stuff (domain) to PhysicalObject (range), and is a sub-property of owl:topObjectProperty. It has no specified characteristics or inverse property. This property is used to indicate the type of physical object serving as the basic unit, or \"granule,\" in the analysis of a given Stuff. The granule type reflects the level of granularity chosen for understanding the composition of the Stuff (e.g., molecules in water), and acknowledges that different analytical contexts may establish different granule types (such as atomic, molecular, or multi-molecular levels). Terms like \"has grain\" or \"has granular part\" are also used for this relation.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['PhysicalObject'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "output": "Is the subject of 'hasGranuleType' always required to be a Stuff? | Are there any entities besides Stuff that can be associated with the 'hasGranuleType' property as its domain? | What classes can serve as the domain for the property 'hasGranuleType'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPortion\nDescription: The property \"hasPortion\" is a sub-property of \"hasProperPart\" and has \"portionOf\" as its inverse. While there are no explicit domain or range restrictions or defined characteristics, \"hasPortion\" is intended to relate an entity to a part that consists of the same substance or kind as the whole. Practically, it represents portions or divisions of a material entity at a given instant; for example, different amounts of wine divided from a whole. The property is useful in representing naive chemistry, although continuous changes at the molecular level may challenge the strict philosophical notion of 'portion.'\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the logical connection between ‘hasPortion’ and ‘portionOf’ in the ontology? | If entity X hasPortion Y, does this infer that Y portionOf X? | Which property is defined as the inverse of ‘hasPortion’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containedIn\nDescription: The property \"containedIn\" has no explicitly defined characteristics, domain, or range restrictions. It is specified as a sub-property of \"partOf,\" indicating that it expresses a specialized containment relationship within the broader context of part-whole relations. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is containedIn defined as a more specific property under partOf? | Which properties are recognized as subproperties of partOf? | What are the superproperties assigned to containedIn in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasProperPart\nDescription: The property \"hasProperPart\" has no explicitly defined characteristics, domain, or range restrictions. It is a sub-property of \"hasPart,\" indicating a hierarchical relationship. The inverse property is \"properPartOf,\" which relates an entity to its proper whole. This property is used to specify that one entity is a proper (non-identical) part of another.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasPart'], 'inverseOf': []}\nGenerated CQs:", "output": "What is the formal connection between the properties 'hasProperPart' and 'properPartOf' as defined in the ontology? | If an entity A has a proper part B, does the ontology entail that B is a proper part of A? | Which property is explicitly stated as the inverse of 'hasProperPart' in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasStuffDistribution\nDescription: The property \"hasStuffDistribution\" has no specified domain, range, characteristics, super-properties, or inverse properties. Based on its axioms, it is a generic property that can relate any type of entities without restriction. No additional description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Should the property 'hasStuffDistribution' be expected to have a specified range? | Is it correct that 'hasStuffDistribution' has no specified domain? | Is it possible for the property 'hasStuffDistribution' to exist without a defined range? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stuffFormingRelation\nDescription: The property \"stuffFormingRelation\" relates individuals that are either ContinuousMedium, DispersedPhase, Solute, or Solvent. It has no explicit property characteristics, super-properties, or inverses. This property is used to represent relationships that characterize the formation or interactions among substances within a mixture, such as surface tension effects, molecular interactions (e.g., hydrogen bonding), or compositional ratios (e.g., the proportional amounts required to form a mixture like lemonade). Both the domain and range are restricted to the aforementioned substance types.\nAxiom: {'characteristics': [], 'domain': ['(ContinuousMedium and DispersedPhase and Solute and Solvent)'], 'range': ['(ContinuousMedium or DispersedPhase or Solute or Solvent)'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'stuffFormingRelation' have subjects other than ContinuousMedium, DispersedPhase, Solute, or Solvent? | Are there any entities that cannot serve as a subject for the 'stuffFormingRelation' property? | What types of things can be the domain for the property 'stuffFormingRelation'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: portionOf\nDescription: The property \"portionOf\" relates an entity of type AmountOfStuff or Stuff to another entity of the same type, representing a portion or part of the same kind of matter (e.g., a slice of cake to the cake, a glass of wine to the bottle of wine). The domain and range are both restricted to AmountOfStuff or Stuff. It is a sub-property of \"properPartOf\" and has no specified characteristics or inverse property. This property is intended for use with mass nouns or non-countable substances.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value used with the property 'portionOf' required to be either an AmountOfStuff or Stuff? | Can 'portionOf' have a range that is not AmountOfStuff or Stuff? | What entities are permitted as the range of the property 'portionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContainedScatteredPortionOf\nDescription: The property \"isContainedScatteredPortionOf\" relates instances of AmountOfStuff or Stuff to other instances of the same types, indicating that the subject is a portion that originated from a larger whole and currently requires a container. As a subproperty of \"scatteredPortionOf,\" it specifically captures the context where a portion, such as 'wine in a wine glass,' was part of a bulk amount, now separated and needing containment. No explicit property characteristics, inverse, or additional hierarchical relations are defined.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['scatteredPortionOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'isContainedScatteredPortionOf' apply to subjects other than AmountOfStuff or Stuff? | What are the possible domain classes for the property 'isContainedScatteredPortionOf'? | Are all entities categorized as AmountOfStuff or Stuff valid subjects for the property 'isContainedScatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatteredStuffPartOf\nDescription: The property \"scatteredStuffPartOf\" is a subproperty of \"properPartOf\" and relates instances of \"AmountOfStuff\" or \"Stuff\" to other instances within the same classes. It is intended to connect quantities or types of matter—typically those denoted by mass nouns in natural language (e.g., gold, milk, mayonnaise)—with their constituent ingredients that are of a different type (e.g., alcohol in wine, oil in mayonnaise, sugar in cake). The property does not specify domain or range characteristics beyond these classes and has no defined inverse. It also suggests a temporal dimension, where the part was once a contiguous proper part of the whole, but is now scattered or integrated.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Does the property 'scatteredStuffPartOf' apply to subjects other than AmountOfStuff or Stuff? | What classes are permitted as the domain for the property 'scatteredStuffPartOf'? | Is it possible for an instance that is not an AmountOfStuff or Stuff to use the 'scatteredStuffPartOf' property as its subject? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatteredPortionOf\nDescription: The property \"scatteredPortionOf\" has a domain and range restricted to either AmountOfStuff or Stuff. It is defined as a subproperty of \"properPartOf\" and has no explicitly specified characteristics or inverse. This property is intended to represent a specific kind of portion relationship but is not made a subproperty of \"portionOf\" to avoid reasoning cycles and undecidability in Description Logics. The distinction between this property and related properties is primarily temporal, which is not expressible in OWL; therefore, \"scatteredPortionOf\" and \"portionOf\" are modeled as sibling properties to enable practical property chaining in reasoning.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'scatteredPortionOf' have a subject that is not an AmountOfStuff or Stuff? | Is there any AmountOfStuff or Stuff that is not associated with 'scatteredPortionOf'? | What are the possible classes that can serve as the domain for the property 'scatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" has no explicitly defined characteristics or super-properties. Its domain includes entities classified as Endurant or Perdurant, and its range is restricted to instances of Quality. This property is used to relate an Endurant or Perdurant to a Quality. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['(Endurant and Perdurant)'], 'range': ['Quality'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can 'hasQuality' be used with subjects other than Endurant or Perdurant? | Are all instances associated with 'hasQuality' required to be either Endurant or Perdurant as the subject? | What entities are permitted to serve as the domain for the property 'hasQuality'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isSelfContainedScatteredPortionOf\nDescription: The property \"isSelfContainedScatteredPortionOf\" relates an entity classified as \"AmountOfStuff\" or \"Stuff\" to another entity of the same types, indicating that the former is a self-standing, scattered portion of the latter (such as a lump, drop, or slice). It is a sub-property of \"scatteredPortionOf\" and does not specify any particular characteristics or inverse properties. This property is typically used to denote portions that were once part of a larger whole but now exist as distinct, stand-alone pieces.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['scatteredPortionOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for 'isSelfContainedScatteredPortionOf' to have a domain other than AmountOfStuff or Stuff? | Can entities outside of AmountOfStuff or Stuff be involved as the subject of the property 'isSelfContainedScatteredPortionOf'? | What kinds of entities are permitted as the domain for 'isSelfContainedScatteredPortionOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stuffPartOf\nDescription: The property \"stuffPartOf\" relates entities classified as AmountOfStuff or Stuff to other entities of the same categories, indicating a part-whole relationship specifically among mass nouns or substances that are not typically countable. It is a subproperty of \"properPartOf,\" emphasizing that the 'part' is a distinct type of stuff or ingredient within another. No additional property characteristics or inverse are specified. Examples include alcohol as a stuff-part of wine, oil in mayonnaise, or sugar in cake.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any subject using 'stuffPartOf' that is not an AmountOfStuff or Stuff? | Can entities outside AmountOfStuff or Stuff have the 'stuffPartOf' property? | What classes can serve as the domain for the property 'stuffPartOf'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContiguousPortionOf\nDescription: The property \"isContiguousPortionOf\" relates an instance of AmountOfStuff or Stuff to another of the same types, indicating that the subject is a contiguous portion of the object. It is defined as a sub-property of \"properPartOf\" and has no specified inverse or additional property characteristics. Although originally intended as a super-property of \"portionOf\", it is classified as a sibling to avoid logical cycles and maintain decidability within OWL reasoning. This distinction primarily addresses semantic differences involving temporality not representable in OWL.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every value associated with 'isContiguousPortionOf' necessarily of type 'AmountOfStuff' or 'Stuff'? | Can entities other than 'AmountOfStuff' or 'Stuff' serve as the object for the property 'isContiguousPortionOf'? | What types are permitted as the range of the 'isContiguousPortionOf' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatterPortion\nDescription: The property \"scatterPortion\" has no explicitly defined characteristics, domain, or range restrictions. It is declared as a sub-property of \"hasProperPart,\" indicating that it inherits the semantic of relating entities to their distinct non-overlapping parts. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': ['scatteredPortionOf']}\nGenerated CQs:", "output": "What is the ontological connection between the properties ‘scatterPortion’ and ‘scatteredPortionOf’? | If entity A scatterPortion B, does ontology entail that B scatteredPortionOf A? | Which property is defined as the inverse of ‘scatterPortion’ in the ontology? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: inheresIn\nDescription: The property \"inheresIn\" has no specified characteristics, domain restrictions, super-properties, or inverse properties. Its range is restricted to instances of \"PhysicalEndurant,\" meaning it is used to relate a subject to a physical endurant entity.\nAxiom: {'characteristics': [], 'domain': ['Role'], 'range': ['PhysicalEndurant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'inheresIn' be asserted for subjects that are not instances of Role? | Is there any instance of Role that cannot be the domain of the 'inheresIn' property? | What types of entities are permitted as the domain for the 'inheresIn' relationship? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: properContainedIn\nDescription: The property \"properContainedIn\" has no explicitly defined characteristics, domain, or range restrictions. It does not inherit from any super-properties and does not specify any inverse property. This suggests the property is intended to represent a containment relation, but its usage is not further constrained by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "output": "Is properPartOf a superproperty of properContainedIn? | What are the subproperties encompassed by properPartOf? | Which properties serve as superproperties for properContainedIn? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasNrOfPhase\nDescription: The property \"hasNrOfPhase\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is restricted to integer values (xsd:integer), indicating its use for associating entities with a numerical value representing the number of phases.\nAxiom: {'characteristics': [], 'domain': ['Stuff'], 'range': ['xsd:integer'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can the property 'hasNrOfPhase' be used with any subject other than 'Stuff'? | Is it possible for an entity that is not classified as 'Stuff' to have a value for 'hasNrOfPhase'? | What types of entities are permitted as the domain of the property 'hasNrOfPhase'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: srInheresIn\nDescription: The property \"srInheresIn\" has no specified characteristics or super-properties. Its domain is restricted to instances of \"StuffRole\", and its range is limited to instances of \"Stuff\". This property is used to relate a \"StuffRole\" to the \"Stuff\" in which it inheres. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['StuffRole'], 'range': ['Stuff'], 'subPropertyOf': ['inheresIn'], 'inverseOf': []}\nGenerated CQs:", "output": "Is every use of the srInheresIn property also captured by the inheresIn property? | Which properties are subproperties of inheresIn within the ontology? | Does inheresIn represent a broader relationship than srInheresIn? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: solutionFormingRelation\nDescription: The property \"solutionFormingRelation\" has no specified characteristics or super-properties. Its domain is restricted to entities classified as \"Solvent,\" and its range to entities classified as \"Solute.\" This property is used to relate solvents to the solutes they dissolve. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['Solvent'], 'range': ['Solute'], 'subPropertyOf': ['stuffFormingRelation'], 'inverseOf': []}\nGenerated CQs:", "output": "Is solutionFormingRelation considered a specific type of stuffFormingRelation within the ontology? | Which properties are subproperties of stuffFormingRelation, and does solutionFormingRelation appear among them? | What superproperties are associated with solutionFormingRelation? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: colloidFormingRelation\nDescription: The property \"colloidFormingRelation\" has no explicitly defined characteristics or super-properties. Its domain is restricted to instances of \"ContinuousMedium\", and its range is restricted to instances of \"DispersedPhase\". This property is used to relate a continuous medium to a dispersed phase in the context of colloid formation. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['ContinuousMedium'], 'range': ['DispersedPhase'], 'subPropertyOf': ['stuffFormingRelation'], 'inverseOf': []}\nGenerated CQs:", "output": "Is colloidFormingRelation considered a specific kind of stuffFormingRelation within the ontology? | What properties are subproperties of stuffFormingRelation? | Which superproperties does colloidFormingRelation have? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: instantiation\nDescription: The property \"instantiation\" has a domain restricted to \"AmountOfStuff\" but no specified range, characteristics, super-properties, or inverse properties. This indicates that \"instantiation\" is intended to relate entities of type \"AmountOfStuff\" to unspecified targets.\nAxiom: {'characteristics': [], 'domain': ['AmountOfStuff'], 'range': ['Stuff'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is it possible for the property 'instantiation' to have a range other than Stuff? | Are all values assigned to the property 'instantiation' necessarily of type Stuff? | What entities can appear as the range for the property 'instantiation'? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDataValue\nDescription: The property \"hasDataValue\" does not have any explicitly defined characteristics, domain, range, super-properties, or inverse properties. This suggests it is a general property without specified usage constraints or relationships in the ontology.\nAxiom: {'characteristics': [], 'domain': ['Abstract'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Is there any class other than Abstract that can be the subject of the 'hasDataValue' property? | Can 'hasDataValue' be used with any entity that is not an instance of Abstract? | What classes are permitted as the domain of the 'hasDataValue' property? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPart\nDescription: The property \"hasPart\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates it is a general-purpose property used to relate an entity to its constituent parts, without constraints on the types of entities it connects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['partOf']}\nGenerated CQs:", "output": "How are the object properties ‘hasPart’ and ‘partOf’ connected as inverse properties within the ontology? | If entity A ‘hasPart’ entity B, does the ontology state that B is ‘partOf’ A? | Which property in the ontology is defined as the inverse of ‘hasPart’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasScatterStuffPart\nDescription: The property \"hasScatterStuffPart\" has no explicitly defined characteristics, domain, or range restrictions. It is specified as a sub-property of \"hasProperPart,\" indicating that any instance of \"hasScatterStuffPart\" also qualifies as an instance of \"hasProperPart.\" No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': ['scatteredStuffPartOf']}\nGenerated CQs:", "output": "How are the properties ‘hasScatterStuffPart’ and ‘scatteredStuffPartOf’ connected in the ontology? | If an entity X hasScatterStuffPart Y, does it follow that Y scatteredStuffPartOf X? | Which property is considered the inverse of ‘hasScatterStuffPart’? "}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuale\nDescription: The property \"hasQuale\" does not specify domain restrictions, characteristics, super-properties, or an inverse property. Its range is restricted to individuals classified as \"Abstract,\" indicating it is used to relate entities to abstract qualities or properties.\nAxiom: {'characteristics': [], 'domain': ['Quality'], 'range': ['Abstract'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "output": "Can entities other than Quality appear as the subject of the property 'hasQuale'? | What types of individuals can serve as the domain for the property 'hasQuale'? | Is 'hasQuale' ever used where the subject is not a member of Quality? "}
