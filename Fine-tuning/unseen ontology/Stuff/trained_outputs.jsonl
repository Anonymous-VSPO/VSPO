{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Container\nDescription: Container is defined as a subclass of PhysicalEndurant. It is characterized by the restriction that it may only be the inverse of containedIn with respect to AmountOfStuff or PhysicalObject; that is, only an AmountOfStuff or a PhysicalObject can be contained in a Container. The class is intended for use when an amount of matter is not self-contained, emphasizing the role of the Container in physically enclosing or holding such entities.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[inverseOf containedIn only (AmountOfStuff or PhysicalObject)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of Container necessarily contain at least one PhysicalObject through the property restriction?", "1": "Is it required that all Containers are related via the 'contains' property to some PhysicalObject?", "2": "Can a Container exist without being connected to any PhysicalObject via the 'contains' relationship?", "3": "Generated CQ: Are there any instances of Container that do not have at least one PhysicalObject associated with them through the containment relation?", "4": "Does the definition of Container imply that each Container must include at least one PhysicalObject via the 'contains' property?", "5": "Is it necessary for every Container to possess a 'contains"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Stuff\nDescription: Stuff is defined as a subclass of PhysicalEndurant and is synonymous with \"Amount of Matter.\" Members of this class are restricted to having only states that are instances of StuffState, with a maximum of three such states per individual. This formalization captures the notion of matter existing in a limited number of distinct possible states.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'propertyRestrictions': ['[hasState max 3 StuffState]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of Stuff necessarily have at least one state classified as StuffState?", "1": "Is it required for all members of the Stuff class to possess some StuffState through the property hasState?", "2": "Can an entity belong to the Stuff category without being associated with any StuffState via hasState?", "3": "Generated CQ: Does the existence of the Stuff class entail that each instance must have at least one hasState relationship to a StuffState?", "4": "Are all entities categorized under Stuff characterized by possessing some StuffState through the hasState property?", "5": "CQ:Is it necessary for every member of the Stuff group to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Bulk\nDescription: Bulk is a subclass of Stuff, further constrained to entities whose granule type is either Molecule or MultiMoleculeParticle, or which consist only of or contain as parts other Stuff. Bulk is equivalent to either MixedStuff or StructuredPureStuff, and cannot be UnstructuredPureStuff. In practical contexts, particularly in the food industry, Bulk refers to goods such as soy beans, coffee, nuts, pet food, tea, whole grains, and sugar—items typically handled and measured in aggregate amounts rather than as individual units. The class accommodates various granularities (e.g., bags of nuts or packets of cookies are counted in units of the contained item type) and encompasses different material compositions, such as StructuredPureStuff (like sugar), HomogenousMixedStuff (such as stabilized peanut butter), and HeterogenousMixedStuff (e.g., pet food), highlighting the concept’s versatility in bulk goods handling and classification.\nAxiom: {'subClassOf': ['Stuff', '(([hasGranuleType some (Molecule or MultiMoleculeParticle)] or [hasPartStuff some Stuff]) and ([hasGranuleType only (Molecule or MultiMoleculeParticle)] or [hasPartStuff only Stuff]))']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of Bulk have at least one hasPart relationship with another instance of Bulk?", "1": "Is it possible for something classified as Bulk not to participate in any hasPart relationship with another Bulk entity?", "2": "Does the definition of Bulk require all its members to be linked via hasPart to another member of the Bulk class?", "3": "Generated CQ:Is there any instance of Bulk that does not have at least one part related through hasPart to another Bulk object?", "4": "Can a Bulk exist without being associated via hasPart to some other Bulk element?", "5": "Are all elements of Bulk defined exclusively by their participation in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PureStuff\nDescription: PureStuff is defined as a subclass of Stuff and is equivalent to entities that have exactly one granule type (either an Atom, Molecule, or MultiMoleculeParticle), exactly one part stuff (which must be either PureBulk, StructuredPureStuff, or UnstructuredPureStuff), and exactly one stuff distribution (which must be an EvenDistribution). In the literature, PureStuff has also been referred to as 'Unstructured stuff' and 'discrete stuff', and is characterized by being composed of a single kind of molecule or atomic constituent—for example, water composed only of H₂O molecules or pure manganese made up solely of manganese atoms. This is an idealized category, as real-world materials are only pure relative to detection limits.\nAxiom: {'subClassOf': ['Stuff'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified under PureStuff necessarily include exactly one part stuff?", "1": "Is it required for any entity categorized as PureStuff to possess at least one part stuff?", "2": "Can PureStuff exist without having any part assigned as stuff?", "3": "Generated CQs:Is it necessary for PureStuff to have precisely one stuff distribution?", "4": "Are all instances of PureStuff restricted to possessing no more than one stuff distribution?", "5": "Does PureStuff entail having exactly one stuff distribution among its properties?", "6": "Generated CQs:Is there any PureStuff that does not specify a stuff distribution?", "7": "Can PureStuff be defined without"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solution\nDescription: Solution is formally defined as a subclass of HomogeneousMixture, characterized by a uniform composition throughout. Equivalent class axioms specify that a Solution consists of at least two “stuffs”: one acting as a Solute and one as a Solvent, each of which is inhered by some HomogeneousMixture and has a granule type restricted to Atom, Ion, or Molecule. Furthermore, a Solution must have a number of phases exactly equal to one. The class captures chemical systems where the mixing occurs at the molecular level, resulting in homogeneity; this applies to solutions in all physical states (solid, liquid, or gas). The definition intentionally omits \"dilute solution\" due to the lack of a clear-cut quantitative threshold.\nAxiom: {'subClassOf': ['HomogeneousMixture'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Must every Solution contain at least one Solute that is part of some HomogeneousMixture?", "1": "Is it required for any instance of Solution to include a Solute that is an inhomogenity of a HomogeneousMixture?", "2": "Does the presence of a Solute within a Solution necessarily imply its membership in some HomogeneousMixture?", "3": "Generated CQ: Are all Solutions encompassed under HomogeneousMixture solely through their inclusion of a Solute that belongs to another HomogeneousMixture?", "4": "Can there exist a Solution without any Solute being part of a broader HomogeneousMixture"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solute\nDescription: Solute is defined as a subclass of StuffRole and is explicitly disjoint from Solvent, ensuring that no entity can simultaneously be both a Solute and a Solvent. Formally, every Solute is related through the inverse of solutionFormingRelation to some Solvent, indicating its essential role in solution formation. Conceptually, a Solute is a substance that is dissolved in another substance (the Solvent).\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': [], 'propertyRestrictions': ['[inverseOf solutionFormingRelation some Solvent]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between solutes and solvents?", "1": "Is there any instance that can simultaneously function as both a solute and a solvent?", "2": "Which classes are specified as mutually exclusive with solutes within this ontology?", "3": "Next, considering the property restriction [hasPart only Solute], what entities must necessarily participate in the hasPart relationship exclusively with Solute instances?", "4": "Does the presence of propertyRestriction [hasPart only Solute] imply that all members of Solute must have at least one hasPart relation to something classified under Solute?", "5": "Can a non-Solute entity ever"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Emulsion\nDescription: Emulsion is defined as a subclass of DispersionColloid and is equivalent to a DispersionColloid with exactly one liquid in the continuous medium and exactly one liquid in the dispersed phase. The class axiom enforces that an emulsion must have two distinct parts: a liquid continuous medium and a liquid dispersed phase. Examples include milk, mayonnaise, and hand cream, where both the continuous and dispersed phases are liquids. This classification captures the key characteristic of emulsions as colloidal mixtures of two immiscible liquids.\nAxiom: {'subClassOf': [], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of Emulsion possess at least one part that has the state of a Liquid?", "1": "Is it required for something classified as Emulsion to contain a component whose property'state' is set to Liquid?", "2": "Can an entity labeled as Emulsion exist without any portion characterized by the property'state' having value Liquid?", "3": "Generated CQs:Does the definition of Emulsion require the presence of at least one part with the property'state' equal to Liquid?", "4": "Must all instances of Emulsion include a part such that its'state' attribute is Liquid?", "5": "Is it necessary"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gel\nDescription: Gel is a subclass of DispersionColloid and is defined as a colloidal system consisting of exactly one solid continuous medium and exactly one liquid dispersed phase. This means that in a gel, the solid component forms a continuous network throughout the material, while the liquid is dispersed within it. Examples include agar, gelatin, and jelly. The class axioms ensure that any instance of Gel must have a solid state as the continuous medium and a liquid as the dispersed phase, formalizing its structural composition as described in the referenced sources.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Must every Gel contain exactly one solid continuous medium?", "1": "Is it necessary for a Gel to consist solely of one solid continuous component?", "2": "Does the definition of Gel specify that there can only be one solid continuous element present?", "3": "Generated CQ:Are Gels characterized by having at most one solid continuous medium?", "4": "Can a Gel exist without a solid continuous medium if another is present?", "5": "Is it required for a Gel to have exactly one liquid dispersed phase?", "6": "Must each Gel contain precisely one liquid dispersed phase?", "7": "Are all instances of Gel necessarily composed of just one liquid dispersed phase?", "8": "Can"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Sol\nDescription: Sol is defined as a subclass of DispersionColloid, precisely characterized as a colloidal system consisting of exactly one liquid continuous medium and exactly one solid dispersed phase. The class axiom specifies that the system contains:  \n- one part (Stuff) in a liquid state inhering in the continuous medium, and  \n- one part (Stuff) in a solid state inhering in the dispersed phase.  \nThis structure excludes the possibility of additional types of states or phases within the sol. Typical examples include pigmented ink and blood, where solid particles are dispersed uniformly within a liquid medium.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance classified as Sol have at least one part that is both in a liquid state and belongs to the Stuff class?", "1": "Is it required for any entity categorized under Sol to contain a part that is in a liquid state and also an instance of Stuff?", "2": "Does the definition of Sol entail that all entities must possess some part that is both a liquid and a member of the Stuff class?", "3": "Generated CQ:Is it necessary for Sol to consist only of parts that are liquids and belong to the Stuff class?", "4": "Can something be considered a Sol if it has parts that are not liquids or do"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidFoam\nDescription: SolidFoam is a subclass of DispersionColloid, characterized by having a solid as the continuous medium and a gas as the dispersed phase. Formally, each instance of SolidFoam consists of exactly one part that is a solid (constituting the continuous medium), and exactly one part that is a gas (constituting the dispersed phase). Examples include aerogel and styrofoam. This structure ensures that SolidFoam represents colloidal systems where gas is dispersed throughout a solid matrix.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified as SolidFoam necessarily have at least one part that is a solid?", "1": "Is it required for any entity categorized as SolidFoam to possess some component made entirely of a solid material?", "2": "Can SolidFoam exist without including a single part composed solely of a solid?", "3": "Generated CQ: Are all parts within a SolidFoam composition strictly defined as consisting of solids?", "4": "Does the definition of SolidFoam imply that its constituent parts are exclusively solid entities?", "5": "Is SolidFoam equivalent to the set of all physical structures whose parts are limited to being purely solid in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HeterogeneousMixture\nDescription: HeterogeneousMixture is a subclass of MixedStuff, formally disjoint from HomogeneousMixture, meaning no mixture can be both heterogeneous and homogeneous simultaneously. Members of this class are defined by having at least two different granule types (each being a Molecule or MultiMoleculeParticle) and consisting of a minimum of two distinct parts, each being either MixedStuff or PureStuff. Additionally, every HeterogeneousMixture exhibits exactly one instance of UnevenDistribution, ensuring that its components are not distributed uniformly. As described, a HeterogeneousMixture is a combination of different substances, often with visibly different particle sizes, which do not react chemically and can be separated by physical means (such as filtration). Unlike a homogeneous mixture, any portion of a heterogeneous mixture may differ in composition from the whole, unless special care is taken in selecting the portion.\nAxiom: {'subClassOf': ['MixedStuff'], 'disjointWith': [], 'propertyRestrictions': ['[hasGranuleType min 2 (Molecule or MultiMoleculeParticle)]', '[hasPartStuff min 2 (MixedStuff or PureStuff)]', '[hasStuffDistribution exactly 1 UnevenDistribution]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between HeterogeneousMixture and HomogeneousMixture?", "1": "Is it possible for an entity to belong to both HeterogeneousMixture and HomogeneousMixture categories?", "2": "Which classes are specified as mutually exclusive with HeterogeneousMixture?", "3": "Next, consider whether HomogeneousMixture and HeterogeneousMixture should be treated as separate entities within the ontology.", "4": "What formal constraints prevent an individual from being classified under both HeterogeneousMixture and HomogeneousMixture?", "5": "Are there any other classes declared as incompatible with HeterogeneousMixture in the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Piece\nDescription: Piece is defined as a subclass of Portion, characterized by the axiom that it is a self-contained, scattered portion of some AmountOfStuff. According to its description, \"Piece\" represents discrete, self-contained amounts—such as slices or lumps—that are distinct from the whole but still derive from it. This class formalization ensures that any instance of Piece must be both a Portion and a self-contained segment of an AmountOfStuff, supporting modeling of individual fragments or divisions of a larger substance.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[isSelfContainedScatteredPortionOf some AmountOfStuff]']}\nGenerated CQs:", "generated_outputs": {"0": "Does Piece fall under the category of Portion?", "1": "Which subclasses are encompassed by Portion, including Piece?", "2": "What broader classes does Piece inherit from within this context?", "3": "### Generated CQs:Is Piece categorized as a type of Portion?", "4": "Which concepts are classified under Portion, such as Piece?", "5": "Within which higher-level categories does Piece find its classification?", "6": "### Generated CQs:Is Piece categorized as a type of Portion?", "7": "Which concepts are classified under Portion, including Piece?", "8": "Within which higher-level categories does Piece find its classification?", "9": "### Generated C"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PureBulk\nDescription: PureBulk is a subclass of PureStuff, defined as equivalent to those entities that consist of PureStuff whose granule type is exclusively and exactly one type of MultiMoleculeParticle. This means all granules within a PureBulk are restricted to a single specified kind of multi-molecular particle, differentiating it from StructuredPureStuff and UnstructuredPureStuff where basis types may vary. Typical examples include a silo of soy beans, a packet of tea biscuits, or a bag of cashew nuts, where each bulk contains only one type of multi-molecular particulate basis.\nAxiom: {'subClassOf': ['PureStuff'], 'equivalentClass': []}\nGenerated CQs:", "generated_outputs": {"0": "What distinguishes PureBulk from other subtypes under PureStuff?", "1": "Is every instance classified as PureBulk necessarily also categorized as PureStuff?", "2": "Which broader classes encompass PureBulk within their hierarchy?", "3": "Does PureBulk represent a more specific form of PureStuff?", "4": "What are the direct parent categories associated with PureBulk?", "5": "Can PureBulk be found among the subclasses of PureStuff?", "6": "Which concepts are considered more general than PureBulk?", "7": "Is PureBulk included as a specialized version of PureStuff?", "8": "Of which higher-level classes is PureBulk an instance?", "9": "How does PureBulk relate hier"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidHeterogeneousMixture\nDescription: SolidHeterogeneousMixture is defined as a subclass of HeterogeneousMixture and is equivalent to a HeterogeneousMixture that contains at least two distinct parts, each of which is a substance (Stuff) present in the solid state. It represents mixtures where the component materials remain physically separate and are not homogenized; for example, wood, which consists of compartmentalized solid components such as cellulose, hemicellulose, lignin, and various extractives (plant hormones, waxes, terpenes, etc.). This class characterizes solid-phase systems where heterogeneity is maintained at the physical or structural level.\nAxiom: {'subClassOf': [], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff min 2 (Stuff and [hasState some Solid])])']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance classified as SolidHeterogeneousMixture also be recognized as a type of HeterogeneousMixture?", "1": "Is it necessary for SolidHeterogeneousMixture to inherit all characteristics of HeterogeneousMixture?", "2": "Which broader mixture classes encompass SolidHeterogeneousMixture within their hierarchy?", "3": "Next, consider whether any other mixture types fall under HeterogeneousMixture alongside SolidHeterogeneousMixture.", "4": "Does the classification of SolidHeterogeneousMixture imply membership in the category of HeterogeneousMixture?", "5": "What more specific forms does HeterogeneousMixture"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AbstractRegion\nDescription: AbstractRegion is defined as a subclass of Region. This indicates that every instance of AbstractRegion is also an instance of Region, inheriting all its characteristics. The class formalizes a conceptual or non-physical specialization of Region, but no additional constraints or distinctions are provided beyond its subsumption in the hierarchy.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes does AbstractRegion fall under within the ontology?", "1": "Is AbstractRegion categorized under the general group of Region?", "2": "Which concepts are classified as specializations of Region, including AbstractRegion?", "3": "Next level up: which subclasses belong to Region, such as AbstractRegion?", "4": "Does AbstractRegion represent a more specific form of Region?", "5": "What higher-level categories include AbstractRegion in their classification hierarchy?", "6": "Is AbstractRegion encompassed within the broader class of Region?", "7": "Which entities are considered more general than AbstractRegion?", "8": "Which concepts have AbstractRegion as a specialized subtype under Region?", "9": "Which hier"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalRegion\nDescription: PhysicalRegion is defined as a subclass of Region, indicating that every PhysicalRegion is, by definition, a type of Region. This formalization distinguishes PhysicalRegion as a specific conceptual or spatial area within the broader class of Region, with characteristics or properties that pertain to physical or tangible attributes.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under Region, such as PhysicalRegion?", "1": "What broader classes does PhysicalRegion inherit from according to the ontology?", "2": "Is PhysicalRegion categorized as a more specific type within the Region hierarchy?", "3": "Next level up from PhysicalRegion in the classification hierarchy would be which category?", "4": "Does PhysicalRegion fall under the general grouping of Region?", "5": "Which types are encompassed by Region, including PhysicalRegion?", "6": "To what higher-level concepts does PhysicalRegion relate within the ontology?", "7": "Is PhysicalRegion recognized as a specialized kind of Region?", "8": "What are all the subclasses associated with Region, specifically including"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: om-1:Quantity\nDescription: om-1:Quantity is defined as a subclass of Region. This means every om-1:Quantity is categorized within the broader class of Region, inheriting its general characteristics. No additional restrictions or differentiations are provided, so om-1:Quantity serves to represent a more specific concept or type of Region within the ontology.\nAxiom: {'subClassOf': ['Region']}\nGenerated CQs:", "generated_outputs": {"0": "Which classes are considered more specialized than Region, such as om-1:Quantity?", "1": "Is om-1:Quantity classified under the broader category of Region?", "2": "What higher-level categories encompass om-1:Quantity?", "3": "Next level up from om-1:Quantity in the hierarchy would be what class?", "4": "Which subclasses fall under Region, including om-1:Quantity?", "5": "Does om-1:Quantity belong to the group of entities associated with Region?", "6": "What concepts are direct specializations of Region, like om-1:Quantity?", "7": "To which parent categories does om-1:"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmountOfStuff\nDescription: AmountOfStuff is defined as a subclass of PhysicalEndurant, representing entities that persist through time while maintaining their identity as physical particulars. According to the current description, it aligns with DOLCE's notion of \"amount of matter\" and applies exclusively to specific, individual entities (particulars) rather than universals or collections. This class captures the concept of a definite quantity of physical substance.\nAxiom: {'subClassOf': ['PhysicalEndurant']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses are encompassed under PhysicalEndurant, such as AmountOfStuff?", "1": "Is AmountOfStuff categorized as a type of PhysicalEndurant?", "2": "What broader classes include AmountOfStuff within their hierarchy?", "3": "Next level up in classification from AmountOfStuff would be what category?", "4": "Does AmountOfStuff fall under the general group of PhysicalEndurant?", "5": "Which entities are classified more specifically than PhysicalEndurant, including AmountOfStuff?", "6": "What hierarchical relationships exist between AmountOfStuff and PhysicalEndurant?", "7": "Is AmountOfStuff considered a specialized form of PhysicalEnd"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AssociationalColloid\nDescription: AssociationalColloid is defined as a subclass of Colloid. This class includes colloidal systems characterized by the association of amphiphilic molecules, such as hydrophobic/hydrophilic interactions. Typical examples are micellar colloids (e.g., soap solutions), where molecules form aggregates known as micelles. Properties specific to this class can include aggregation numbers—typically a range—reflecting the number of molecules per micelle, often determined by the critical micelle concentration.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "generated_outputs": {"0": "Which categories encompass AssociationalColloid within the broader classification?", "1": "What types fall under Colloid, specifically including AssociationalColloid?", "2": "Is AssociationalColloid categorized as a kind of Colloid?", "3": "Next level up from AssociationalColloid in its hierarchy would be what type of entity?", "4": "Which more general classifications does AssociationalColloid inherit from?", "5": "Does AssociationalColloid belong to the group classified as Colloid?", "6": "What entities are included under the category of Colloid, particularly AssociationalColloid?", "7": "To which overarching classes does AssociationalColloid pertain?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DispersionColloid\nDescription: DispersionColloid is defined as a subclass of Colloid and represents the most common type among colloids, distinguishing it from other types within the Colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass DispersionColloid?", "1": "Which subclasses fall under the general class of Colloid, including DispersionCollid?", "2": "Is DispersionColloid categorized under the broader group of Colloid?", "3": "Next level up in hierarchy for DispersionColloid is what?", "4": "Does DispersionColloid represent a specific kind of Colloid?", "5": "What are all the more detailed categories classified under Colloid, such as DispersionColloid?", "6": "Which types of Colloid include DispersionColloid as a member?", "7": "To which overarching concepts does DispersionColloid belong within this classification system"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MolecularColloid\nDescription: MolecularColloid is defined as a subclass of Colloid, representing colloidal systems in which the constituent molecules are sufficiently large to exhibit the characteristic behaviors of particles with intermediate sizes, typical of other types of colloids. Examples include latex and other materials with large polymers, such as starchy substances. This classification emphasizes the particle size and molecular structure as distinguishing factors within the broader colloid category.\nAxiom: {'subClassOf': ['Colloid']}\nGenerated CQs:", "generated_outputs": {"0": "Does MolecularColloid fall under the general classification of Colloid?", "1": "What higher-level categories encompass MolecularColloid within the ontology?", "2": "Which specific types are classified as subcategories of Colloid, including MolecularColloid?", "3": "Is MolecularColloid categorized as a type of Colloid?", "4": "To which overarching classes does MolecularColloid belong according to the ontology?", "5": "Which broader classifications include MolecularColloid as a more specific instance?", "6": "What is the hierarchical relationship between MolecularColloid and Colloid in the ontology?", "7": "Does MolecularColloid represent a specialized form of Colloid within the ontology?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Atom\nDescription: Atom is defined as a subclass of PhysicalObject, indicating that every atom is considered a physical entity within the ontology. This classification places atoms within the broader category of tangible objects, establishing their role as fundamental physical units that compose matter.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "generated_outputs": {"0": "What are the parent classes associated with Atom?", "1": "Which entities fall under the category of PhysicalObject, such as Atom?", "2": "Is Atom classified as a type of PhysicalObject?", "3": "Next level up from Atom in the hierarchy is what class?", "4": "Does Atom inherit properties from the PhysicalObject category?", "5": "What specific subclasses exist under PhysicalObject, including Atom?", "6": "To which higher-level categories does Atom belong?", "7": "Is Atom categorized as a kind of PhysicalObject?", "8": "Which broader classes encompass Atom?", "9": "Does Atom represent a more specialized form of PhysicalObject?", "10": "What other entities are classified as types of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Ion\nDescription: Ion is defined as a subclass of PhysicalObject, meaning it represents a kind of physical entity. No further property restrictions, disjointness, or specific characteristics are asserted in the axioms, so the class encompasses any physical object identified as an ion—typically, an atom or molecule with a net electric charge due to the loss or gain of electrons.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under PhysicalObject, such as Ion?", "1": "Is every instance of Ion also categorized as a PhysicalObject?", "2": "What broader classes does Ion fall under within this context?", "3": "Next level up in classification for Ion is which type of entity?", "4": "Does Ion represent a specialization of PhysicalObject?", "5": "Which subclasses are encompassed by PhysicalObject, including Ion?", "6": "To what higher-level category does Ion belong according to its classification?", "7": "Is Ion a more specific form of PhysicalObject?", "8": "Which types are considered subtypes of PhysicalObject, specifically mentioning Ion?", "9": "Of which general categories is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MultiMoleculeParticle\nDescription: MultiMoleculeParticle is defined as a subclass of PhysicalObject, referring to a particle composed of multiple molecules, such as those found in suspensions or colloidal droplets (distinct from sub-atomic particles). This class is intended for cases where individual entities are aggregates of molecules, and, as noted in its annotation, is considered a pragmatic solution within the ontology structure rather than a rigorous chemical classification.\nAxiom: {'subClassOf': ['PhysicalObject']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific types fall under the category of PhysicalObject, including MultiMoleculeParticle?", "1": "What broader categories encompass MultiMoleculeParticle according to the ontology?", "2": "Is every instance of MultiMoleculeParticle classified under the group of PhysicalObjects?", "3": "Next level up in the hierarchy from MultiMoleculeParticle would be what class?", "4": "Which entities are categorized as more general than MultiMoleculeParticle?", "5": "Does the classification include all instances of PhysicalObject as potential parents of MultiMoleculeParticle?", "6": "What other subclasses exist alongside MultiMoleculeParticle under PhysicalObject?", "7": "Is MultiMoleculeParticle recognized as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DispersedPhase\nDescription: DispersedPhase is defined as a subclass of StuffRole. It refers to the role played by a substance within the context of a colloidal system, specifically as the phase that is distributed throughout another phase (the ContinuousMedium). The relationship (colloidFormingRelation) exists between the DispersedPhase and the ContinuousMedium themselves, rather than their respective bearers (stuffs), emphasizing that simply combining the substance bearers does not suffice to form a colloid. Proper mixing is required to achieve a homogeneous colloidal mixture; the ability of a substance to serve as either dispersed phase or continuous medium depends on the specific system being formed.\nAxiom: {'subClassOf': ['StuffRole']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass DispersedPhase?", "1": "Is every instance of DispersedPhase also classified under StuffRole?", "2": "What concepts are more specific than StuffRole, including DispersedPhase?", "3": "Next level up from DispersedPhase in the classification hierarchy?", "4": "Does DispersedPhase fall under the broader category of StuffRole?", "5": "Which entities have StuffRole as their parent class, such as DispersedPhase?", "6": "What are the direct subclasses of StuffRole, for example, DispersedPhase?", "7": "Is DispersedPhase categorized as a type of StuffRole?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solvent\nDescription: Solvent is defined as a subclass of StuffRole. It represents a substance in which another substance, known as the solute, is dissolved. Solvents are essential participants in solution-forming relations, acting as the medium that enables solutes to dissolve and sometimes facilitating various chemical reactions during the dissolution process. This formalization emphasizes the role-based nature of solvents within chemical systems.\nAxiom: {'subClassOf': ['StuffRole']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are categorized under the broader class of StuffRole, including Solvent?", "1": "Is every instance of Solvent classified as a type of StuffRole?", "2": "What more general classes encompass Solvent within the ontology?", "3": "Next level up from Solvent in the hierarchy is what class?", "4": "Does Solvent fall under the category of StuffRole?", "5": "Which higher-level categories include Solvent as a member?", "6": "What concepts are included as subclasses of StuffRole, specifically considering Solvent?", "7": "Is Solvent classified under the broader group of StuffRole?", "8": "To which overarching groups does Solvent belong within"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Drop\nDescription: Drop is defined as a subclass of Piece, representing a specific type of piece, such as a drop of blood. This class serves as an example to illustrate a distinct, often small and discrete, portion or quantity of a substance.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are more specific than Piece, including Drop?", "1": "Is Drop categorized under the broader class of Piece?", "2": "What general categories encompass Drop within the hierarchy?", "3": "Next level up from Drop in the classification structure is which category?", "4": "Which subclasses fall under Piece, specifically including Drop?", "5": "Does Drop belong to the set of all Piece subtypes?", "6": "Of what higher-level classes is Drop a member?", "7": "What other concepts are classified alongside Drop under Piece?", "8": "Is Drop recognized as a specialized form of Piece?", "9": "To which overarching types does Drop pertain according to its definition?", "10": "What are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Lump\nDescription: Lump is defined as a subclass of Piece, representing a specific type of piece. The class is exemplified by instances such as a \"lump of clay,\" illustrating that a lump is considered a particular form or configuration of a piece. This class serves as an example of how the concept of \"piece\" can be specialized.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "generated_outputs": {"0": "What are the more general classes that encompass Lump?", "1": "Which subclasses fall under Piece, including Lump?", "2": "Is Lump categorized as a kind of Piece?", "3": "Next level up from Lump within the hierarchy is which class?", "4": "Does Lump represent a specialization within the broader class of Piece?", "5": "What concepts are classified under Piece, specifically considering Lump?", "6": "Which entities are encompassed by Piece, including Lump as a member?", "7": "To which higher-level categories does Lump pertain?", "8": "Is Lump recognized as a subtype of Piece?", "9": "What types of Piece include Lump as a specific instance?", "10": "Which broader classes"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Slice\nDescription: Slice is defined as a subclass of Piece, representing a specific type of piece. As indicated in the example, a Slice could refer to a slice of bread, illustrating that this class captures instances where something is cut or divided into thin, flat portions.\nAxiom: {'subClassOf': ['Piece']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under Piece, such as Slice?", "1": "What broader categories encompass Slice within the hierarchy?", "2": "Is every Slice necessarily categorized as a type of Piece?", "3": "Next higher-level category for Slice in the ontology structure?", "4": "Which subclasses fall under Piece, including Slice?", "5": "Does Slice represent a more specific form within the general group of Piece?", "6": "What are the direct superclasses associated with Slice?", "7": "Is Slice included among the specialized types of Piece?", "8": "Which Piece subclasses include Slice as a member?", "9": "To which overarching classes does Slice belong according to its definition?", "10": "Does Slice inherit properties"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: EvenDistribution\nDescription: EvenDistribution is defined as a subclass of AbstractRegion. This indicates that every instance of EvenDistribution is a type of abstract region, but with additional implied properties that distinguish it from other abstract regions. No further property restrictions, equivalence, or disjointness axioms are specified. The class likely represents distributions characterized by some notion of \"evenness\" or uniformity, although the specifics are not constrained by the given axiom.\nAxiom: {'subClassOf': ['AbstractRegion']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass EvenDistribution within the hierarchy?", "1": "Is EvenDistribution classified under the category of AbstractRegion?", "2": "Which subclasses fall under the category of AbstractRegion, including EvenDistribution?", "3": "Next-level categories more specific than AbstractRegion include EvenDistribution.", "4": "What higher-level groupings does EvenDistribution belong to?", "5": "Does EvenDistribution represent a specialization of AbstractRegion?", "6": "Which general concepts is EvenDistribution associated with according to its classification?", "7": "What are all the subclasses identified under AbstractRegion, such as EvenDistribution?", "8": "Is AbstractRegion a superclass of EvenDistribution?", "9": "What is the hierarchical relationship between"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnevenDistribution\nDescription: UnevenDistribution is defined as a subclass of AbstractRegion. This indicates that every instance of UnevenDistribution is a specific kind of AbstractRegion, likely representing regions or segments where distribution is not uniform. No additional constraints or properties are specified, so this class primarily serves to differentiate non-uniform or irregular distributions within the broader category of abstract regions.\nAxiom: {'subClassOf': ['AbstractRegion']}\nGenerated CQs:", "generated_outputs": {"0": "Which subclasses fall under AbstractRegion, such as UnevenDistribution?", "1": "Is UnevenDistribution categorized under the broader group of AbstractRegion?", "2": "What more general classes does UnevenDistribution inherit from within the ontology?", "3": "Next level up from UnevenDistribution in the hierarchy is what?", "4": "Which concepts are classified as direct specializations of AbstractRegion, including UnevenDistribution?", "5": "Does UnevenDistribution represent a specialized form of AbstractRegion?", "6": "To which higher-level groups is UnevenDistribution logically related?", "7": "Which entities have AbstractRegion as their superclass, encompassing UnevenDistribution?", "8": "Is Uneven"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Gas\nDescription: Gas is defined as a subclass of StuffState. This classification indicates that Gas represents a particular state or condition in which a substance (stuff) can exist. Any individual classified as Gas inherits the general properties of StuffState, marking it as a type of physical state distinct from other possible states (such as solid or liquid).\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "generated_outputs": {"0": "Which broader categories encompass Gas within the ontology?", "1": "Is Gas categorized under the more general class of StuffState?", "2": "What specific types are included under the category of StuffState, such as Gas?", "3": "Next level up from Gas in the hierarchy is what?", "4": "Does Gas fall under the classification of StuffState?", "5": "Which entities are subclasses of StuffState, including Gas?", "6": "What are the parent classes associated with Gas?", "7": "Is Gas a specialized form of StuffState?", "8": "Which higher-level classes does Gas inherit characteristics from?", "9": "What are all instances that are direct or indirect specializations of StuffState"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Liquid\nDescription: liquid is defined as a subclass of StuffState, representing a specific physical state of matter. All instances of liquid must also be instances of StuffState, situating liquids within the broader classification of material states such as solid or gas. No additional property restrictions or disjointness axioms are specified for this class.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories include Liquid?", "1": "Which entities fall under the category of StuffState, specifically including Liquid?", "2": "Is Liquid classified under the broader group of StuffState?", "3": "Next level up from Liquid in the hierarchy would be what classes?", "4": "Which subclasses belong to StuffState alongside Liquid?", "5": "What are the parent classes associated with Liquid?", "6": "Does Liquid represent a more specific kind within the general concept of StuffState?", "7": "Which types are encompassed by StuffState, particularly Liquid?", "8": "Is Liquid categorized under the overarching concept of StuffState?", "9": "What are all the subclasses recognized under StuffState,"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Solid\nDescription: Solid is defined as a subclass of StuffState, representing a particular state of matter. This class encompasses all entities that exist in the solid state, distinguishing them from other possible states such as liquid or gas. All instances of Solid inherit the characteristics of StuffState.\nAxiom: {'subClassOf': ['StuffState']}\nGenerated CQs:", "generated_outputs": {"0": "Which specific states are categorized under StuffState, including Solid?", "1": "Is Solid classified as a type of StuffState?", "2": "What broader classes does Solid belong to within this context?", "3": "Next level up in the hierarchy for Solid would be what groupings?", "4": "Which subclasses fall under StuffState, specifically mentioning Solid?", "5": "Does Solid represent a specialized instance of StuffState?", "6": "What general categories encompass Solid according to its classification?", "7": "Is Solid included among the more specific types derived from StuffState?", "8": "To which higher-level concepts is Solid hierarchically related?", "9": "Which higher-level classifications does Solid relate to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MicellarColloid\nDescription: MicellarColloid is defined as a subclass of AssociationalColloid. Although the formal axioms do not distinguish it further from AssociationalColloid, the usage of the term \"MicellarColloid\" reflects domain-specific terminology differences between food physics and colloid chemistry. Therefore, individuals of this class share all characteristics of AssociationalColloid, with differentiation rooted primarily in contextual nomenclature rather than ontological structure.\nAxiom: {'subClassOf': ['AssociationalColloid']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass MicellarColloid?", "1": "Is MicellarColloid classified under the broader category of AssociationalColloid?", "2": "What specific types are included within AssociationalColloid, such as MicellarColloid?", "3": "Is MicellarColloid categorized as a kind of AssociationalColloid?", "4": "Which subclasses fall under AssociationalColloid, including MicellarColloid?", "5": "To which overarching classes does MicellarColloid belong in this context?", "6": "Does MicellarColloid represent a more specialized form of AssociationalColloid?", "7": "What are the parent classifications for MicellarCol"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Paste\nDescription: Paste is defined as a subclass of Suspension. It is characterized as a type of suspension with a reduced proportion of dispersion medium, in which the dispersed phase exhibits connectivity (i.e., the particles are linked or form a continuous structure). This differentiates pastes from other suspensions, where the dispersed phase may be unconnected and more freely suspended in the medium.\nAxiom: {'subClassOf': ['Suspension']}\nGenerated CQs:", "generated_outputs": {"0": "Which types are classified under Suspension, including Paste?", "1": "What broader categories encompass Paste within the context of Suspensions?", "2": "Is Paste categorized as a kind of Suspension?", "3": "Next level of abstraction for Paste within the hierarchy of Suspension types?", "4": "Which subclasses fall under Suspension, such as Paste?", "5": "Does Paste belong to the class of Suspension?", "6": "What are all the direct superclasses associated with Paste?", "7": "Is Paste included among the subtypes of Suspension?", "8": "To which higher-level concepts does Paste pertain within the Suspension classification?", "9": "Which entities are classified as specialized forms of Suspension, specifically including Paste"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Role\nDescription: Role is defined as a subclass of Endurant, indicating that any individual classified as a Role is also necessarily an Endurant. This positions Role as an entity that persists through time while possibly undergoing changes. No further restrictions or disjointness conditions are specified for this class.\nAxiom: {'subClassOf': ['Endurant']}\nGenerated CQs:", "generated_outputs": {"0": "What broader classes encompass Role within the ontology?", "1": "Which subclasses fall under Endurant, including Role?", "2": "Is Role categorized under the general class of Endurant?", "3": "Next level up from Role in the hierarchy would be which higher-level concepts?", "4": "What entities are considered more specific than Endurant, such as Role?", "5": "Does Role represent a type of Endurant?", "6": "Which superclasses does Role inherit from according to the ontology?", "7": "Is Role classified under the category of Endurant?", "8": "Which types of Endurant include Role as a specialization?", "9": "What hierarchical relationships exist"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Region\nDescription: Region is defined as a subclass of Abstract, indicating that it represents an abstract concept rather than a physical entity. This classification implies that instances of Region are used to denote conceptual or non-physical areas, rather than tangible, material locations.\nAxiom: {'subClassOf': ['Abstract']}\nGenerated CQs:", "generated_outputs": {"0": "Which higher-level categories encompass Region within their hierarchy?", "1": "What types fall under the category of Abstract, such as Region?", "2": "Is Region classified under the broader group of Abstract?", "3": "Next level up from Region, what general class does it belong to?", "4": "Which specific concepts are categorized as subclasses of Abstract, including Region?", "5": "Does Region represent a more specific instance within the Abstract category?", "6": "To which overarching classes does Region have an association?", "7": "Is Region considered a specialized form of Abstract?", "8": "What are all the subclasses included under Abstract, specifically Region?", "9": "Which entities are categorized directly below Abstract,"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: om-1:Unit_of_measure\nDescription: om-1:Unit_of_measure is defined as a subclass of Abstract, indicating that it represents a conceptual or non-physical entity within the ontology. This class is intended to capture the abstract nature of measurement units used to quantify physical or abstract quantities, rather than representing tangible objects themselves.\nAxiom: {'subClassOf': ['Abstract']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under Abstract, including Unit_of_measure?", "1": "Is Unit_of_measure categorized under the broader class of Abstract?", "2": "What more general categories does Unit_of_measure fall into according to the ontology?", "3": "Next level up from Unit_of_measure in the hierarchy would include which classes?", "4": "Which subclasses are encompassed by Abstract, such as Unit_of_measure?", "5": "Does Unit_of_measure belong to the category of Abstract concepts?", "6": "Which higher-level groups does Unit_of_measure pertain to?", "7": "Is Unit_of_measure a specialized form of Abstract?", "8": "To what overarching classes does Unit_of_measure relate within"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: State\nDescription: State is defined as a subclass of Perdurant, indicating that it represents a temporally extended entity or occurrence. As a Perdurant, a State exists over a period of time, rather than as an instantaneous or static entity. No further restrictions or distinctions are specified in the current axioms.\nAxiom: {'subClassOf': ['Perdurant']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified under Perdurant, such as State?", "1": "What broader categories does State belong to within the ontology?", "2": "Is State categorized under Perdurant?", "3": "Next level up in classification from State: what is it?", "4": "Which subclasses fall under Perdurant, including State?", "5": "Does State represent a specific kind of Perdurant?", "6": "What more general classes include State as a member?", "7": "Is Perdurant encompassing State as one of its subclasses?", "8": "What are all instances that inherit from Perdurant, for example, State?", "9": "Which superclasses does State have"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffState\nDescription: StuffState is defined as a subclass of State. It represents the general state in which a substance (or \"stuff\") exists, such as solid, liquid, or gas. While it is relevant for describing the phase of a specific material (e.g., water as ice, liquid, or vapor), the class also accommodates cases like colloids, where the states of mixed components are important. The focus of StuffState is on the state as a property of a substance in general, rather than on the particular state of an individual stuff. This provides a foundation for distinguishing and reasoning about the states of matter across different contexts, including mixtures and colloidal systems.\nAxiom: {'subClassOf': ['State']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories encompass StuffState within the ontology?", "1": "Is StuffState classified under the more general category of State?", "2": "Which specific types fall under the concept of State, including StuffState?", "3": "Next level up from StuffState in the hierarchy would be what type of entity?", "4": "Does StuffState represent a specialized form of State?", "5": "Which higher-level classes does StuffState pertain to within this ontology?", "6": "What other entities are categorized directly beneath State, such as StuffState?", "7": "Is StuffState a subset of the broader classification known as State?", "8": "Which subclasses are included within State, specifically Stuff"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Endurant\nDescription: Endurant is formally specified as a class disjoint with Perdurant, which ensures that no individual entity can be simultaneously classified as both an Endurant and a Perdurant. This distinction typically reflects the ontological separation between entities that persist wholly through time (Endurants, such as physical objects) and those that occur in or unfold over time (Perdurants, such as events or processes).\nAxiom: {'disjointWith': ['Perdurant']}\nGenerated CQs:", "generated_outputs": {"0": "Are there any classes defined as disjoint with Endurant?", "1": "Which concepts are explicitly stated to be incompatible with Endurant within the ontology?", "2": "Can something be classified as both Endurant and another disjoint class at the same time?", "3": "Next CQ:Is Endurant mutually exclusive with Perdurant?", "4": "Is there any instance that could belong to both Endurant and Perdurant categories?", "5": "Which entities are identified as being distinct from Endurant according to the ontology's structure?", "6": "Does the ontology permit the assignment of an object to both Endurant and Perdurant"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NumberOfPhases\nDescription: NumberOfPhases is defined as a subclass of AbstractRegion, where each instance must have at least one associated data value of type xsd:nonNegativeInteger (i.e., a non-negative integer). This class provides an alternative way of modeling the number of phases, as opposed to direct datatype usage. The formalization requires that every NumberOfPhases individual be characterized by a non-negative integer value indicating the number of phases.\nAxiom: {'subClassOf': ['AbstractRegion'], 'propertyRestrictions': ['[hasDataValue only xsd:nonNegativeInteger]']}\nGenerated CQs:", "generated_outputs": {"0": "Does NumberOfPhases fall under the classification of AbstractRegion?", "1": "Which entities are categorized as subclasses of AbstractRegion, such as NumberOfPhases?", "2": "What broader classes include NumberOfPhases within their hierarchy?", "3": "Is AbstractRegion a generalization of NumberOfPhases?", "4": "To which higher-level concepts does NumberOfPhases belong?", "5": "Which specific types are encompassed by AbstractRegion, including NumberOfPhases?", "6": "What is the hierarchical relationship between NumberOfPhases and AbstractRegion?", "7": "Does NumberOfPhases represent a more specialized form of AbstractRegion?", "8": "Under which overarching categories can NumberOfPhases be placed"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeastPortion\nDescription: LeastPortion is defined as a subclass of Portion that does not contain any further Portion as a part (i.e., it cannot be subdivided into smaller portions). It represents the smallest possible portion that still exhibits all macroscopic properties characteristic of its kind, analogous to the concept of an atom in mereology, but specifically applied to \"stuffs\" or material substances. This ensures that individuals of LeastPortion are indivisible relative to the kind of material or substance under consideration.\nAxiom: {'subClassOf': ['Portion', 'not [hasPortion only Portion]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of LeastPortion necessarily have no other Portion as a component?", "1": "Is it required for LeastPortion entities to lack any association through hasPortion with another Portion?", "2": "Can a LeastPortion exist if it contains at least one Portion via hasPortion?", "3": "Generated CQ:Are there any instances of LeastPortion that do not exclusively consist of Portion components related by hasPortion?", "4": "Does the existence of a hasPortion relationship between LeastPortion and some Portion preclude the presence of other Portion components?", "5": "Generated CQ:Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Portion\nDescription: Portion is defined as a subclass of AmountOfStuff, representing a specific part or segment derived from a larger whole. Every Portion is characterized by the property restriction that it must be a portion of some AmountOfStuff, ensuring a relational dependency with another instance of AmountOfStuff. This formalization encapsulates the idea that a Portion cannot exist independently, but always as a part related to a greater quantity or whole.\nAxiom: {'subClassOf': ['AmountOfStuff'], 'propertyRestrictions': ['[portionOf only AmountOfStuff]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every Portion necessarily have at least one 'portionOf' relationship to an AmountOfStuff?", "1": "Is it required for a Portion to be associated via 'portionOf' with some AmountOfStuff?", "2": "Can a Portion exist without being linked through 'portionOf' to any AmountOfStuff?", "3": "Generated CQs:Is Portion classified under the broader category of AmountOfStuff?", "4": "Which subclasses are encompassed within AmountOfStuff, including Portion?", "5": "What higher-level categories does Portion fall under according to the ontology?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnstructuredPureStuff\nDescription: UnstructuredPureStuff is a subclass of PureStuff, formally defined as material that contains exactly one type of atom as its granular component (i.e., it satisfies the restriction [hasGranuleType only Atom] and [hasGranuleType exactly 1 Atom]). This means all constituent atoms are of the same atomic type, corresponding to the ontological equivalent of a chemical element (e.g., a quantity of helium or gold). This class is synonymous with the notion of an \"Element\" and disregards the presence of undetectable impurities. The definition intends that the \"one atom\" restriction refers to a single atomic type, not a single individual atom.\nAxiom: {'subClassOf': ['PureStuff'], 'equivalentClass': ['(PureStuff or [hasGranuleType some Atom] or [hasGranuleType exactly 1 Atom])']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of UnstructuredPureStuff necessarily have at least one granule type that is an Atom?", "1": "Is it required for UnstructuredPureStuff to include a granule with the type Atom?", "2": "Can an entity be classified as UnstructuredPureStuff if it does not possess any granules of type Atom?", "3": "Generated CQs:Is UnstructuredPureStuff equivalent to the union of PureStuff and entities that have at least one hasGranuleType relationship to Atom?", "4": "Does the existence of a hasGranuleType link to Atom uniquely determine membership in UnstructuredPureStuff among PureStuff instances"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StuffRole\nDescription: StuffRole is a subclass of Role, defined by the axiom that it inheres in some instance of Stuff. This class represents the specific role that a 'stuff' (material substance) assumes within a mixture, indicating its functional participation or relevance in the context of that mixture.\nAxiom: {'subClassOf': ['Role'], 'propertyRestrictions': ['[srInheresIn only Stuff]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of StuffRole necessarily have at least one property restriction where the srInheresIn relation points to something other than Stuff?", "1": "Is it required for any entity playing the StuffRole to be associated via srInheresIn exclusively to instances of Stuff?", "2": "Can a StuffRole exist without having the srInheresIn property linking it to any object except Stuff?", "3": "Generated CQ: Does the definition of StuffRole allow it to relate through srInheresIn to entities outside the category of Stuff?", "4": "Generated CQ: Are all objects connected to a StuffRole via"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalObject\nDescription: PhysicalObject is defined as a subclass of PhysicalEndurant. This means every PhysicalObject necessarily inherits all characteristics of PhysicalEndurants. There are no explicit disjointness constraints specified, so PhysicalObject may overlap with other subclasses of PhysicalEndurant unless otherwise restricted in the ontology.\nAxiom: {'subClassOf': ['PhysicalEndurant'], 'disjointWith': ['Stuff']}\nGenerated CQs:", "generated_outputs": {"0": "What distinguishes PhysicalObject from Stuff within the ontology?", "1": "Is there any instance that can simultaneously belong to both PhysicalObject and Stuff categories?", "2": "Which classes are asserted as mutually exclusive with PhysicalObject?", "3": "Next, considering the class hierarchy, what other concepts are declared incompatible with PhysicalObject?", "4": "Can something be classified under both PhysicalObject and another entity marked as disjoint with it?", "5": "How does the ontology ensure logical separation between PhysicalObject and Stuff?", "6": "Is the classification of a given object as either PhysicalObject or Stuff exclusive according to the ontology?", "7": "Which entities are recognized as being incompatible with Physical"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Molecule\nDescription: Molecule is defined as a subclass of PhysicalObject, indicating that every molecule is a type of physical entity. There are no additional property restrictions specified for this class.\nAxiom: {'subClassOf': ['PhysicalObject'], 'propertyRestrictions': ['[hasPart some Atom]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every molecule necessarily contain at least one atom as a part?", "1": "Is it required for a molecule to have atoms among its components?", "2": "Can a molecule exist without having any atomic parts?", "3": "Does the presence of atoms imply the existence of molecules within the context of molecular structure?", "4": "Is there any instance of a molecule that lacks any component which is an atom?", "5": "Can a molecule have more than one type of atom as a part according to the definition?", "6": "Is there a molecule characterized solely by containing at least one specific type of atom?", "7": "Are all molecules defined exclusively"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MixedStuff\nDescription: MixedStuff is defined as a subclass of Stuff, specifically representing entities that consist of at least two component parts, each of which is itself a Stuff. This formalization requires any instance of MixedStuff to have at least two distinct Stuff components through the hasPartStuff property. MixedStuff is not specified to be disjoint with any other class.\nAxiom: {'subClassOf': ['Stuff', '(Stuff and [hasPartStuff min 2 Stuff])'], 'disjointWith': ['PureStuff']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation is established between MixedStuff and PureStuff within the ontology?", "1": "Is there any instance that can simultaneously belong to both MixedStuff and PureStuff classes?", "2": "Which classes are explicitly declared as mutually exclusive with PureStuff?", "3": "Is every PureStuff necessarily excluded from being classified as MixedStuff?", "4": "Which classes share the same level of exclusion with MixedStuff?", "5": "Can PureStuff and MixedStuff exist as separate categories without overlap?", "6": "What distinguishes MixedStuff from PureStuff in terms of class membership?", "7": "Are all instances of MixedStuff incompatible with those of PureStuff"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Colloid\nDescription: Colloid is formally defined as a type of homogeneous mixture characterized by having exactly two distinct components: one continuous medium and one dispersed phase, each represented as a unique part (stuff) that exists in at least some physical state. The structure requires at least two phases in total, with the dispersed phase and continuous medium inhering in their respective stuffs. This precise definition captures the essential nature of colloids as multi-phase, homogeneous systems.\nAxiom: {'subClassOf': ['HomogeneousMixture'], 'equivalentClass': ['(HomogeneousMixture and [hasPartStuff exactly 1 (Stuff and [hasState some StuffState] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some StuffState] and [inverseOf srInheresIn some DispersedPhase])] and [hasNrOfPhase some DatatypeRestriction(xsd:int minInclusive 2)])']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance classified under Colloid include at least two distinct parts through hasPartStuff?", "1": "Is it necessary for any entity identified as a Colloid to have more than one component related via hasPartStuff?", "2": "Does the presence of multiple hasPartStuff relationships distinguish all Colloids from other types of HomogeneousMixture?", "3": "Generated CQs:Is Colloid a specific kind of HomogeneousMixture characterized by possessing at least two different parts connected via hasPartStuff?", "4": "Can something be classified as a HomogeneousMixture if it does not contain any entities linked by hasPartStuff with"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ContinuousMedium\nDescription: ContinuousMedium is defined as a subclass of StuffRole. Members of this class are characterized by the existence of at least one colloidFormingRelation to an individual of the DispersedPhase class. This means any instance of ContinuousMedium must participate in a relationship where it serves as the medium in which a dispersed phase is present, reflecting its role in colloidal systems. There are no explicit disjointness constraints for this class.\nAxiom: {'subClassOf': ['StuffRole'], 'disjointWith': ['DispersedPhase'], 'propertyRestrictions': ['[colloidFormingRelation some DispersedPhase]']}\nGenerated CQs:", "generated_outputs": {"0": "What is the formal distinction between ContinuousMedium and DispersedPhase within the ontology?", "1": "Is there any entity permitted to belong to both ContinuousMedium and DispersedPhase simultaneously?", "2": "Which classes are specified as mutually exclusive with DispersedPhase?", "3": "Next, consider whether ContinuousMedium could also be classified under DispersedPhase; if so, what implications would this have for the ontology?", "4": "How does the ontology ensure that every instance belongs exclusively to either ContinuousMedium or DispersedPhase?", "5": "What additional classes are identified as being incompatible with DispersedPhase?", "6": "Can you define the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Distribution\nDescription: Distribution is a class whose members are characterized by the requirement that they must have at least one quale that is either an EvenDistribution or an UnevenDistribution. This means any individual of the Distribution class must be associated, through the hasQuale property, with a quale reflecting either evenness or unevenness in distribution.\nAxiom: {'subClassOf': ['Quality'], 'propertyRestrictions': ['[hasQuale some (EvenDistribution or UnevenDistribution)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does Distribution fall under the broader category of Quality?", "1": "Which subclasses are encompassed within Quality, such as Distribution?", "2": "What general categories does Distribution belong to according to the classification hierarchy?", "3": "Is every instance of Distribution necessarily also classified as a Quality?", "4": "To which higher-level classes is Distribution hierarchically related?", "5": "Which entities are more specific than Quality, including Distribution?", "6": "Does Distribution represent a specialization of Quality in the ontology?", "7": "Under what overarching classifications can Distribution be grouped?", "8": "Is Distribution categorized under the more abstract concept of Quality?", "9": "What are the direct superclasses of Distribution within this"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Foam\nDescription: Foam is defined as a subclass of DispersionColloid, indicating that every instance of foam is a type of dispersion colloid. This means that foams inherit all properties and restrictions of DispersionColloid, but no additional equivalence conditions or distinguishing characteristics are specified beyond this subclass relationship.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some DispersedPhase])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])])']}\nGenerated CQs:", "generated_outputs": {"0": "Must any entity classified as Foam necessarily have at least one part that consists exclusively of Stuff with both a gas state and an inverse relation to DispersedPhase?", "1": "Is it required for Foam to include only instances where the hasPartStuff property links to entities that are both in a gas state and related via inverse to DispersedPhase?", "2": "Does the definition of Foam specify that its parts must be restricted to those which are Stuff with a gas state and have an inverse relationship with DispersedPhase?", "3": "Generated CQ:Can something be considered Foam if it does not possess any parts that are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LiquidAerosol\nDescription: LiquidAerosol is defined as a type of DispersionColloid that consists of exactly one component of gas in the continuous medium and exactly one component of liquid in the dispersed phase. Formally, any member of this class must have a gas substance (Stuff) that inheres in the continuous medium, and a liquid substance (Stuff) that inheres in the dispersed phase. This definition captures systems where liquid droplets are dispersed throughout a gaseous medium, such as mist or fog.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of LiquidAerosol include at least one hasPart relationship to a Stuff entity with both a gas state and a specific continuous medium?", "1": "Is it necessary for LiquidAerosol to involve something that has a part consisting of a Stuff item characterized by being in a gas state within a continuous medium?", "2": "Can LiquidAerosol exist without having a hasPart connection to a Stuff object that exhibits both a gas state and belongs to a continuous medium?", "3": "Generated CQs:Is LiquidAerosol equivalent to all instances where there exists a hasPart relationship involving a Stuff entity in a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidAerosol\nDescription: SolidAerosol is defined as a specific type of DispersionColloid characterized by having exactly one component (part) of Stuff in a gaseous state that inheres in a ContinuousMedium, and exactly one component (part) of Stuff in a solid state that inheres in a DispersedPhase. This formalization precisely captures a system where solid particles are dispersed within a gaseous medium.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Gas] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of SolidAerosol include at least one part consisting of Stuff with both gas and solid states?", "1": "Is it required for SolidAerosol to have parts that are instances of Stuff and possess both gas and solid states simultaneously?", "2": "Does the presence of any part with both gas and solid states necessarily classify an entity as a SolidAerosol?", "3": "Generated CQs:Is SolidAerosol equivalent to entities that have at least one part consisting of Stuff in both gas and solid states?", "4": "Can SolidAerosol exist without having components of Stuff that exhibit both gas and solid"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SolidSol\nDescription: SolidSol is a class defined as an equivalent class to a dispersion colloid that consists of exactly two types of solid components: one that inheres in a continuous medium and another that inheres in a dispersed phase. Both parts must be in a solid state, and each occurs exactly once within the SolidSol. This formalization captures the structure of a solid sol, where solid particles are dispersed within a solid continuous medium, both being distinct and occurring exactly once, consistent with the classical understanding of solid sols in colloidal science.\nAxiom: {'subClassOf': ['DispersionColloid'], 'equivalentClass': ['(DispersionColloid and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff exactly 1 (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of SolidSol have at least one hasPartStuff relationship to a Stuff entity with the hasState property set to Solid?", "1": "Is it required for any individual classified as SolidSol to participate in hasPartStuff with something whose hasState is Solid?", "2": "Can a SolidSol exist without having the hasPartStuff property linking it to anything characterized by hasState as Solid?", "3": "Generated CQ: Does the definition of SolidSol imply that there must always be at least one hasPartStuff connection between a SolidSol and a Stuff object that is in the Solid state?", "4": "Is it possible for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HomogeneousMixture\nDescription: HomogeneousMixture is defined as a subclass of MixedStuff, where every instance is required to have exactly one hasStuffDistribution property value, and that value must be an EvenDistribution. This formalization captures the concept that all parts of a homogeneous mixture are distributed uniformly, distinguishing it from other types of mixtures.\nAxiom: {'subClassOf': ['MixedStuff'], 'propertyRestrictions': ['[hasStuffDistribution exactly 1 EvenDistribution]', '[hasGranuleType only (Atom or Ion or Molecule)]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every HomogeneousMixture possess at least one granule of type Atom, Ion, or Molecule?", "1": "Is it possible for a HomogeneousMixture to contain a granule of a type outside those specified (Atom, Ion, or Molecule)?", "2": "Are only Atom, Ion, and Molecule considered valid granuleTypes within HomogeneousMixture instances?", "3": "Does the definition restrict granules in HomogeneousMixture exclusively to Atom, Ion, or Molecule types?", "4": "Can a HomogeneousMixture include any granule whose type is not listed among Atom, Ion, or M"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PhysicalEndurant\nDescription: PhysicalEndurant is defined as a subclass of Endurant and is equivalent to om-1:Phenomenon, indicating that every instance of PhysicalEndurant corresponds to an instance of om-1:Phenomenon and vice versa. There are no specified disjointness constraints. This class represents entities that persist through time while maintaining their identity and physical characteristics.\nAxiom: {'subClassOf': ['Endurant'], 'disjointWith': ['Role'], 'equivalentClass': ['om-1:Phenomenon']}\nGenerated CQs:", "generated_outputs": {"0": "What formal separation exists between PhysicalEndurant and Role within the ontology?", "1": "Is any entity permitted to belong simultaneously to both PhysicalEndurant and Role categories?", "2": "Which classes are explicitly declared as mutually exclusive with Role?", "3": "Next, which classes are recognized as distinct from PhysicalEndurant?", "4": "Are all instances classified under PhysicalEndurant necessarily free from membership in Role?", "5": "Can a single concept be associated concurrently with both PhysicalEndurant and Role?", "6": "How does the ontology define the distinction between PhysicalEndurant and Role?", "7": "Which other classes, apart from Role, are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: StructuredPureStuff\nDescription: StructuredPureStuff is a subclass of PureStuff and is equivalent to those PureStuff individuals that have exactly one granule type, which must be a Molecule. This means every instance of StructuredPureStuff is composed exclusively of a single type of molecule and cannot have multiple or different granule types. There are no explicit disjointness constraints specified with any other classes.\nAxiom: {'subClassOf': ['PureStuff'], 'disjointWith': ['UnstructuredPureStuff'], 'equivalentClass': ['(PureStuff and [hasGranuleType only Molecule] and [hasGranuleType exactly 1 Molecule])']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology differentiate between StructuredPureStuff and UnstructuredPureStuff?", "1": "Is there any entity classified as both StructuredPureStuff and UnstructuredPureStuff simultaneously?", "2": "Which pure stuff categories are declared as mutually exclusive with StructuredPureStuff?", "3": "Next CQ:What concepts within the ontology are incompatible with StructuredPureStuff?", "4": "Is it required that every instance of StructuredPureStuff exclude membership in UnstructuredPureStuff?", "5": "Can something be categorized as both StructuredPureStuff and UnstructuredPureStuff according to this ontology?", "6": "What are the formal restrictions imposed on the relationship"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Suspension\nDescription: Suspension is defined as a type of heterogeneous mixture in which the mixture contains both liquid and solid phases: it necessarily has components (hasPartStuff) where one part is a substance in a liquid state that inheres in (i.e., serves as) a continuous medium, and another part is a substance in a solid state that inheres in a dispersed phase. Additionally, any suspension must involve granule types that include both Molecule and MultiMoleculeParticle. This class formalization ensures that suspensions are mixtures where solid particles (typically larger than molecules) are dispersed within a liquid medium, reflecting the classical definition in physical sciences.\nAxiom: {'subClassOf': ['([hasGranuleType some Molecule] and [hasGranuleType some MultiMoleculeParticle])', 'HeterogeneousMixture'], 'equivalentClass': ['(HeterogeneousMixture and [hasPartStuff some (Stuff and [hasState some Liquid] and [inverseOf srInheresIn some ContinuousMedium])] and [hasPartStuff some (Stuff and [hasState some Solid] and [inverseOf srInheresIn some DispersedPhase])])']}\nGenerated CQs:", "generated_outputs": {"0": "Does Suspension fall under the broader classification of HeterogeneousMixture?", "1": "Which subclasses are encompassed by HeterogeneousMixture, including Suspension?", "2": "What higher-level classes does Suspension belong to within this hierarchy?", "3": "Is Suspension categorized as a kind of HeterogeneousMixture?", "4": "Which specific categories are more general than Suspension and classified under HeterogeneousMixture?", "5": "To what overarching groupings does Suspension pertain within the context of mixtures?", "6": "Does Suspension represent a specialized form of HeterogeneousMixture?", "7": "Which concepts are more general than Suspension within the mixture classification?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasState\nDescription: The property \"hasState\" is an object property with no specifically defined characteristics and no inverse property. Its domain is restricted to \"PhysicalEndurant\" entities, and its range is limited to instances of \"State\". It is a sub-property of \"owl:topObjectProperty\", indicating general applicability among object properties. This property is used to relate physical endurants to their corresponding states.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['State'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'hasState' be considered a specialization of the owl:topObjectProperty?", "1": "Which properties are classified as subproperties under owl:topObjectProperty?", "2": "Is every instance related via 'hasState' also connected through owl:topObjectProperty?", "3": "Does the use of 'hasState' imply the existence of a relationship mediated by owl:topObjectProperty?", "4": "What broader property categories include 'hasState' within the ontology hierarchy?", "5": "Can 'hasState' be used in place of owl:topObjectProperty for certain relationships?", "6": "Is owl"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasSelfContainedScatteredPortion\nDescription: The property \"hasSelfContainedScatteredPortion\" relates to entities such as lumps, puddles, slices, or other discrete pieces. It has no explicitly defined domain or range restrictions and no defined characteristics. It is a sub-property of \"scatterPortion\" and has \"isSelfContainedScatteredPortionOf\" as its inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['scatterPortion'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What logical connection exists between ‘hasSelfContainedScatteredPortion’ and ‘isSelfContainedScatteredPortionOf’ in the ontology?", "1": "If entity A has a self-contained scattered portion B, does this entail that B is also a self-contained scattered portion of A?", "2": "Which property serves as the inverse for ‘hasSelfContainedScatteredPortion’ within this ontology?", "3": "Next CQ:How do the properties ‘hasSelfContainedScatteredPortion’ and ‘isSelfContainedScatteredPortionOf’ relate conceptually in the ontology?", "4": "Is it correct that having a"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPartStuff\nDescription: The property \"hasPartStuff\" lacks explicit domain and range constraints, and does not possess any special property characteristics. It is specified as a subproperty of \"hasProperPart\" and is the inverse of \"stuffPartOf\". Notably, its use implies that the related entities are distinct kinds of \"stuffs\", as the current description highlights a requirement for distinction between the entities involved.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology represent the relationship between 'hasPartStuff' and'stuffPartOf'?", "1": "If entity A has part B through 'hasPartStuff', does it necessarily mean B is a part of A via'stuffPartOf'?", "2": "Which properties serve as inverses within the ontology?", "3": "Next, what property is defined as the inverse of 'hasPartStuff'?", "4": "Is every instance linked by 'hasPartStuff' also connected by'stuffPartOf' in the ontology?", "5": "Can you illustrate how 'hasPartStuff' and'stuffPartOf' relate conceptually in the ontology"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasContainedScatteredPortion\nDescription: The property \"hasContainedScatteredPortion\" is used to relate a container to scattered portions necessarily contained within it (e.g., water in a glass). It has no explicit domain or range restrictions and does not declare any specific property characteristics. It is a sub-property of \"scatterPortion\" and has \"isContainedScatteredPortionOf\" as its inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['scatterPortion'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical relationship between ‘hasContainedScatteredPortion’ and ‘isContainedScatteredPortionOf’ according to the ontology?", "1": "If entity A has a contained scattered portion of B, does this entail that B contains a scattered portion of A via ‘isContainedScatteredPortionOf’?", "2": "How do the properties ‘hasContainedScatteredPortion’ and ‘isContainedScatteredPortionOf’ specify the containment direction between entities in the ontology?", "3": "Is there a property that represents the reverse relationship for ‘hasContainedScatteredPortion’, such as ‘isContainedScatteredPortion"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: partOf\nDescription: The property \"partOf\" is defined as a transitive property, indicating that if entity A is part of B, and B is part of C, then A is part of C. No specific domain or range restrictions are imposed. It has no super-properties or explicitly defined inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can entities without a specified type serve as the subject for the property 'partOf'?", "1": "Is it correct that the property 'partOf' does not have any domain restriction?", "2": "What types of values can be used as the range for the property 'partOf'?", "3": "Can entities without a specified type use the property 'partOf' as its value?", "4": "Is it accurate that the property 'partOf' does not specify a range?", "5": "Can anything serve as the range for the property 'partOf', or should there be a restriction?", "6": "Is it correct that the property 'partOf'"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: contiguousPortion\nDescription: The property \"contiguousPortion\" is defined as a sub-property of \"hasProperPart\" with no explicitly specified domain or range restrictions. It has no declared characteristics. The property has an inverse, \"isContiguousPortionOf,\" indicating a bidirectional relationship. This property is intended to relate an entity to one of its proper parts that is contiguous.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the ontological connection between ‘contiguousPortion’ and ‘isContiguousPortionOf’?", "1": "If entity A has a contiguous portion B, does it follow that B is contiguous with A via ‘isContiguousPortionOf’?", "2": "Which property serves as the inverse for ‘contiguousPortion’ within this ontology?", "3": "Next, are there any entities outside the current context that could serve as the domain for the property ‘contiguousPortion’?", "4": "What types of values can appear as the range for the property ‘contiguousPortion’, given that no specific"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: properPartOf\nDescription: The property \"properPartOf\" represents the usual proper parthood relation in mereology, indicating that one entity is a proper part of another. It has no explicitly defined characteristics, domain, or range. It is specified as a subproperty of \"partOf\" and does not have an inverse property.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of 'properPartOf' necessarily relate to some entity classified under the 'partOf' property?", "1": "Can all entities connected via 'properPartOf' also be found through the broader 'partOf' relationship?", "2": "Which properties are considered subproperties within the hierarchy under 'partOf'?", "3": "Is it correct that 'properPartOf' inherits its behavior from 'partOf'?", "4": "What higher-level relationships encompass 'properPartOf' in the ontology?", "5": "Does 'properPartOf' serve as a specialization for the general 'partOf' property?", "6": "Which superproperties define"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasGranuleType\nDescription: The property \"hasGranuleType\" relates entities of type Stuff (domain) to PhysicalObject (range), and is a sub-property of owl:topObjectProperty. It has no specified characteristics or inverse property. This property is used to indicate the type of physical object serving as the basic unit, or \"granule,\" in the analysis of a given Stuff. The granule type reflects the level of granularity chosen for understanding the composition of the Stuff (e.g., molecules in water), and acknowledges that different analytical contexts may establish different granule types (such as atomic, molecular, or multi-molecular levels). Terms like \"has grain\" or \"has granular part\" are also used for this relation.\nAxiom: {'characteristics': [], 'domain': [], 'range': ['PhysicalObject'], 'subPropertyOf': ['owl:topObjectProperty'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'hasGranuleType' be considered a specialization of 'owl:topObjectProperty'?", "1": "Which properties are classified as subproperties under 'owl:topObjectProperty', including 'hasGranuleType'?", "2": "Does the use of 'hasGranuleType' necessarily imply the application of 'owl:topObjectProperty'?", "3": "Next level up in the hierarchy from 'hasGranuleType' would be which property?", "4": "Is every instance of 'hasGranuleType' also an instance of 'owl:topObjectProperty'?", "5": "What broader property does 'hasGranuleType' inherit from within"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPortion\nDescription: The property \"hasPortion\" is a sub-property of \"hasProperPart\" and has \"portionOf\" as its inverse. While there are no explicit domain or range restrictions or defined characteristics, \"hasPortion\" is intended to relate an entity to a part that consists of the same substance or kind as the whole. Practically, it represents portions or divisions of a material entity at a given instant; for example, different amounts of wine divided from a whole. The property is useful in representing naive chemistry, although continuous changes at the molecular level may challenge the strict philosophical notion of 'portion.'\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property ‘hasPortion’ be used with subjects other than those specified?", "1": "Is it correct that any entity can serve as the subject for ‘hasPortion’, regardless of type?", "2": "What types of entities are allowed as the domain of the property ‘hasPortion’?", "3": "Generated CQ: What types of entities are permitted as the range for the property ‘hasPortion’?", "4": "Is it necessary for every value associated with ‘hasPortion’ to belong to a specific class?", "5": "Can anything other than the specified classes be the range of the property ‘hasPortion"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: containedIn\nDescription: The property \"containedIn\" has no explicitly defined characteristics, domain, or range restrictions. It is specified as a sub-property of \"partOf,\" indicating that it expresses a specialized containment relationship within the broader context of part-whole relations. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every use of the 'containedIn' property also be interpreted through the 'partOf' relation?", "1": "Which properties are considered subproperties under 'partOf', such as 'containedIn'?", "2": "Is the 'partOf' property a superproperty of 'containedIn'?", "3": "Does the ontology allow for 'containedIn' to be used when 'partOf' could be applied instead?", "4": "What specific relationships are included as subproperties of 'partOf', including 'containedIn'?", "5": "Are there any other properties besides 'partOf' that have 'containedIn' as a subproperty?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasProperPart\nDescription: The property \"hasProperPart\" has no explicitly defined characteristics, domain, or range restrictions. It is a sub-property of \"hasPart,\" indicating a hierarchical relationship. The inverse property is \"properPartOf,\" which relates an entity to its proper whole. This property is used to specify that one entity is a proper (non-identical) part of another.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasPart'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'hasProperPart' be considered a specialization of 'hasPart'?", "1": "Which properties are classified as subproperties under 'hasPart', such as 'hasProperPart'?", "2": "Does every instance related via 'hasProperPart' also participate in the relation specified by 'hasPart'?", "3": "Is it correct that all entities connected through 'hasProperPart' are necessarily associated through 'hasPart'?", "4": "What superproperties does 'hasProperPart' inherit from within the ontology?", "5": "Under which broader relationships can 'hasProperPart' be categorized?", "6": "Is there any subject"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasStuffDistribution\nDescription: The property \"hasStuffDistribution\" has no specified domain, range, characteristics, super-properties, or inverse properties. Based on its axioms, it is a generic property that can relate any type of entities without restriction. No additional description is currently provided.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'hasStuffDistribution' have a value other than None as its range?", "1": "Is it correct that the property 'hasStuffDistribution' does not specify a particular class for its range?", "2": "What types of values are permitted as the range for the property 'hasStuffDistribution'?", "3": "Can anything serve as the subject of the property 'hasStuffDistribution', given its domain is undefined?", "4": "What types of entities can use the property 'hasStuffDistribution' as their domain?", "5": "Is it accurate that the property 'hasStuffDistribution' does not have a defined domain?", "6": "Does the property"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stuffFormingRelation\nDescription: The property \"stuffFormingRelation\" relates individuals that are either ContinuousMedium, DispersedPhase, Solute, or Solvent. It has no explicit property characteristics, super-properties, or inverses. This property is used to represent relationships that characterize the formation or interactions among substances within a mixture, such as surface tension effects, molecular interactions (e.g., hydrogen bonding), or compositional ratios (e.g., the proportional amounts required to form a mixture like lemonade). Both the domain and range are restricted to the aforementioned substance types.\nAxiom: {'characteristics': [], 'domain': ['(ContinuousMedium and DispersedPhase and Solute and Solvent)'], 'range': ['(ContinuousMedium or DispersedPhase or Solute or Solvent)'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can'stuffFormingRelation' relate to entities other than those specified as its range?", "1": "Is every entity associated via'stuffFormingRelation' necessarily classified as one of ContinuousMedium, DispersedPhase, Solute, or Solvent?", "2": "What types of entities can serve as the range for the property'stuffFormingRelation'?", "3": "Can'stuffFormingRelation' have a subject that does not belong to the categories of ContinuousMedium, DispersedPhase, Solute, or Solvent?", "4": "Which classes are defined as possible domains for the property'stuffFormingRelation'?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: portionOf\nDescription: The property \"portionOf\" relates an entity of type AmountOfStuff or Stuff to another entity of the same type, representing a portion or part of the same kind of matter (e.g., a slice of cake to the cake, a glass of wine to the bottle of wine). The domain and range are both restricted to AmountOfStuff or Stuff. It is a sub-property of \"properPartOf\" and has no specified characteristics or inverse property. This property is intended for use with mass nouns or non-countable substances.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'portionOf' have a value other than instances of AmountOfStuff?", "1": "Is it correct that every subject related via 'portionOf' must be an instance of AmountOfStuff?", "2": "What types of entities can serve as the range for the property 'portionOf'?", "3": "Can the property 'portionOf' refer to any class outside of AmountOfStuff as its range?", "4": "Which classes are allowed as the domain for the property 'portionOf'?", "5": "Is it possible for 'portionOf' to relate an object not classified under AmountOfStuff?", "6": "Does the property 'portionOf"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContainedScatteredPortionOf\nDescription: The property \"isContainedScatteredPortionOf\" relates instances of AmountOfStuff or Stuff to other instances of the same types, indicating that the subject is a portion that originated from a larger whole and currently requires a container. As a subproperty of \"scatteredPortionOf,\" it specifically captures the context where a portion, such as 'wine in a wine glass,' was part of a bulk amount, now separated and needing containment. No explicit property characteristics, inverse, or additional hierarchical relations are defined.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['scatteredPortionOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property ‘isContainedScatteredPortionOf’ relate to entities outside the domain of (AmountOfStuff and Stuff)?", "1": "What types of subjects are permitted for the property ‘isContainedScatteredPortionOf’?", "2": "Is every entity related via ‘isContainedScatteredPortionOf’ necessarily an instance of either AmountOfStuff or Stuff?", "3": "Next CQ:What can serve as the range for the property ‘isContainedScatteredPortionOf’?", "4": "Can values of type AmountOfStuff or Stuff be used as the range for ‘isContainedScatteredPortionOf’?", "5": "Next C"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatteredStuffPartOf\nDescription: The property \"scatteredStuffPartOf\" is a subproperty of \"properPartOf\" and relates instances of \"AmountOfStuff\" or \"Stuff\" to other instances within the same classes. It is intended to connect quantities or types of matter—typically those denoted by mass nouns in natural language (e.g., gold, milk, mayonnaise)—with their constituent ingredients that are of a different type (e.g., alcohol in wine, oil in mayonnaise, sugar in cake). The property does not specify domain or range characteristics beyond these classes and has no defined inverse. It also suggests a temporal dimension, where the part was once a contiguous proper part of the whole, but is now scattered or integrated.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property'scatteredStuffPartOf' relate to entities outside its specified domain?", "1": "Is every subject of'scatteredStuffPartOf' necessarily an instance of either AmountOfStuff or Stuff?", "2": "What types of objects can serve as the range for the property'scatteredStuffPartOf'?", "3": "Can the property'scatteredStuffPartOf' have any subject that is not an AmountOfStuff or Stuff?", "4": "What are the possible domains for the property'scatteredStuffPartOf'?", "5": "Which classes are permitted as the range for the property'scatteredStuffPartOf'?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatteredPortionOf\nDescription: The property \"scatteredPortionOf\" has a domain and range restricted to either AmountOfStuff or Stuff. It is defined as a subproperty of \"properPartOf\" and has no explicitly specified characteristics or inverse. This property is intended to represent a specific kind of portion relationship but is not made a subproperty of \"portionOf\" to avoid reasoning cycles and undecidability in Description Logics. The distinction between this property and related properties is primarily temporal, which is not expressible in OWL; therefore, \"scatteredPortionOf\" and \"portionOf\" are modeled as sibling properties to enable practical property chaining in reasoning.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property'scatteredPortionOf' relate any subject other than an instance of AmountOfStuff or Stuff?", "1": "Is every object connected via'scatteredPortionOf' necessarily an AmountOfStuff or Stuff?", "2": "What types of entities can serve as the domain for the property'scatteredPortionOf'?", "3": "What kinds of values can appear as the range when using the property'scatteredPortionOf'?", "4": "Which classes are allowed as the domain for the property'scatteredPortionOf'?", "5": "Which classes are permitted as the range for the property'scatteredPortion"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuality\nDescription: The property \"hasQuality\" has no explicitly defined characteristics or super-properties. Its domain includes entities classified as Endurant or Perdurant, and its range is restricted to instances of Quality. This property is used to relate an Endurant or Perdurant to a Quality. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['(Endurant and Perdurant)'], 'range': ['Quality'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property ‘hasQuality’ have subjects other than Endurants or Perdurants?", "1": "Is it necessary for every value associated with ‘hasQuality’ to be an instance of either Endurant or Perdurant?", "2": "What types of entities are permitted as the domain for the property ‘hasQuality’?", "3": "Can the property ‘hasQuality’ apply to objects outside the categories of Endurant and Perdurant?", "4": "Which classes are allowed as the domain for the property ‘hasQuality’ according to the ontology?", "5": "Are there any entities not classified as Endurant or Per"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isSelfContainedScatteredPortionOf\nDescription: The property \"isSelfContainedScatteredPortionOf\" relates an entity classified as \"AmountOfStuff\" or \"Stuff\" to another entity of the same types, indicating that the former is a self-standing, scattered portion of the latter (such as a lump, drop, or slice). It is a sub-property of \"scatteredPortionOf\" and does not specify any particular characteristics or inverse properties. This property is typically used to denote portions that were once part of a larger whole but now exist as distinct, stand-alone pieces.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['scatteredPortionOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'isSelfContainedScatteredPortionOf' be associated with entities other than AmountOfStuff or Stuff?", "1": "Is it correct that every subject of 'isSelfContainedScatteredPortionOf' must be either AmountOfStuff or Stuff?", "2": "What kinds of entities are permitted as the domain for the property 'isSelfContainedScatteredPortionOf'?", "3": "What types of entities can serve as the range for the property 'isSelfContainedScatteredPortionOf'?", "4": "Can the property 'isSelfContainedScatteredPortionOf' relate to entities outside the classes AmountOf"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: stuffPartOf\nDescription: The property \"stuffPartOf\" relates entities classified as AmountOfStuff or Stuff to other entities of the same categories, indicating a part-whole relationship specifically among mass nouns or substances that are not typically countable. It is a subproperty of \"properPartOf,\" emphasizing that the 'part' is a distinct type of stuff or ingredient within another. No additional property characteristics or inverse are specified. Examples include alcohol as a stuff-part of wine, oil in mayonnaise, or sugar in cake.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff and Stuff)'], 'range': ['(AmountOfStuff or Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property'stuffPartOf' have subjects other than those classified under 'AmountOfStuff' or 'Stuff'?", "1": "Is every subject entity used with'stuffPartOf' necessarily categorized as either 'AmountOfStuff' or 'Stuff'?", "2": "What types of entities are allowed to serve as the domain for the property'stuffPartOf'?", "3": "Can the property'stuffPartOf' relate any object outside the class '(AmountOfStuff or Stuff)?'", "4": "What types of entities are permitted as the range for instances of'stuffPartOf?'", "5": "Is it required that all values associated via '"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isContiguousPortionOf\nDescription: The property \"isContiguousPortionOf\" relates an instance of AmountOfStuff or Stuff to another of the same types, indicating that the subject is a contiguous portion of the object. It is defined as a sub-property of \"properPartOf\" and has no specified inverse or additional property characteristics. Although originally intended as a super-property of \"portionOf\", it is classified as a sibling to avoid logical cycles and maintain decidability within OWL reasoning. This distinction primarily addresses semantic differences involving temporality not representable in OWL.\nAxiom: {'characteristics': [], 'domain': ['(AmountOfStuff or Stuff)'], 'range': ['(AmountOfStuff and Stuff)'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property ‘isContiguousPortionOf’ relate any entity other than AmountOfStuff or Stuff?", "1": "Are all subjects of ‘isContiguousPortionOf’ necessarily instances of either AmountOfStuff or Stuff?", "2": "What entities are permitted as the range for the property ‘isContiguousPortionOf’?", "3": "Is it correct that the property ‘isContiguousPortionOf’ can only have AmountOfStuff or Stuff as its value?", "4": "Can the property ‘isContiguousPortionOf’ refer to anything except AmountOfStuff or Stuff?", "5": "What classes does the range"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: scatterPortion\nDescription: The property \"scatterPortion\" has no explicitly defined characteristics, domain, or range restrictions. It is declared as a sub-property of \"hasProperPart,\" indicating that it inherits the semantic of relating entities to their distinct non-overlapping parts. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': ['scatteredPortionOf']}\nGenerated CQs:", "generated_outputs": {"0": "How are the properties ‘scatterPortion’ and ‘scatteredPortionOf’ related within the ontology?", "1": "If entity A is related via ‘scatterPortion’ to B, does this entail a relationship between B and A via ‘scatteredPortionOf’?", "2": "Which property is designated as the inverse of ‘scatterPortion’ in the ontology?", "3": "Next CQ:Can all instances connected through ‘scatterPortion’ also be linked by ‘scatteredPortionOf’, or are there cases where one exists without the other?", "4": "Is the relationship defined by ‘scatterPortion"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: inheresIn\nDescription: The property \"inheresIn\" has no specified characteristics, domain restrictions, super-properties, or inverse properties. Its range is restricted to instances of \"PhysicalEndurant,\" meaning it is used to relate a subject to a physical endurant entity.\nAxiom: {'characteristics': [], 'domain': ['Role'], 'range': ['PhysicalEndurant'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'inheresIn' relate any subject other than an instance of 'Role'?", "1": "Is every value associated with 'inheresIn' necessarily required to be a PhysicalEndurant?", "2": "What types of entities are allowed as the domain for the property 'inheresIn'?", "3": "Can something other than a Role ever appear as the subject when using the property 'inheresIn'?", "4": "What kinds of objects can serve as the range for the property 'inheresIn'?", "5": "Does the use of 'inheresIn' restrict its subjects exclusively to Roles?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: properContainedIn\nDescription: The property \"properContainedIn\" has no explicitly defined characteristics, domain, or range restrictions. It does not inherit from any super-properties and does not specify any inverse property. This suggests the property is intended to represent a containment relation, but its usage is not further constrained by the axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['properPartOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can every instance of the subject of ‘properContainedIn’ also be considered as an object of ‘properPartOf’?", "1": "Is there a reciprocal relationship between the properties ‘properContainedIn’ and ‘properPartOf’ in this ontology?", "2": "If entity A is contained properly in B, must B necessarily have A as one of its proper parts according to the ontology?", "3": "Is ‘properContainedIn’ recognized as a subproperty within the broader class of ‘properPartOf’ in the ontology?", "4": "Which higher-level relationships encompass ‘properContainedIn’ in this ontology?", "5": "Does the use"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasNrOfPhase\nDescription: The property \"hasNrOfPhase\" has no explicitly defined characteristics, domain, super-properties, or inverse properties. Its range is restricted to integer values (xsd:integer), indicating its use for associating entities with a numerical value representing the number of phases.\nAxiom: {'characteristics': [], 'domain': ['Stuff'], 'range': ['xsd:integer'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'hasNrOfPhase' be used with subjects other than those classified as 'Stuff'?", "1": "Is every subject of the property 'hasNrOfPhase' necessarily an instance of 'Stuff'?", "2": "What types of entities are permitted as the domain for the property 'hasNrOfPhase'?", "3": "Can anything other than an integer serve as the range for 'hasNrOfPhase'?", "4": "What can be the range of the property 'hasNrOfPhase'?", "5": "Is it correct that the property 'hasNrOfPhase' can only have an integer as its value?", "6": "Are there any classes outside of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: srInheresIn\nDescription: The property \"srInheresIn\" has no specified characteristics or super-properties. Its domain is restricted to instances of \"StuffRole\", and its range is limited to instances of \"Stuff\". This property is used to relate a \"StuffRole\" to the \"Stuff\" in which it inheres. No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['StuffRole'], 'range': ['Stuff'], 'subPropertyOf': ['inheresIn'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What relationships are considered more general than srInheresIn?", "1": "Which properties have srInheresIn as their subproperty?", "2": "Is every instance of srInheresIn also an instance of inheresIn?", "3": "Next-level up from srInheresIn in the hierarchy is which property?", "4": "Does srInheresIn capture all the information conveyed by inheresIn?", "5": "What specific types of inheresIn include srInheresIn among their subproperties?", "6": "Can srInheresIn be replaced with inheresIn for any purpose within this ontology?", "7": "Which"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: solutionFormingRelation\nDescription: The property \"solutionFormingRelation\" has no specified characteristics or super-properties. Its domain is restricted to entities classified as \"Solvent,\" and its range to entities classified as \"Solute.\" This property is used to relate solvents to the solutes they dissolve. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['Solvent'], 'range': ['Solute'], 'subPropertyOf': ['stuffFormingRelation'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can'solutionFormingRelation' be considered a subtype under'stuffFormingRelation'?", "1": "Which properties are defined as subproperties of'stuffFormingRelation', such as'solutionFormingRelation'?", "2": "Does the use of'solutionFormingRelation' imply the application of'stuffFormingRelation'?", "3": "Is every instance related via'solutionFormingRelation' also connected through'stuffFormingRelation'?", "4": "What broader relational concepts encompass'solutionFormingRelation' within this ontology?", "5": "Which relations are categorized under'stuffFormingRelation', specifically including'solutionFormingRelation'?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: colloidFormingRelation\nDescription: The property \"colloidFormingRelation\" has no explicitly defined characteristics or super-properties. Its domain is restricted to instances of \"ContinuousMedium\", and its range is restricted to instances of \"DispersedPhase\". This property is used to relate a continuous medium to a dispersed phase in the context of colloid formation. No inverse property is specified.\nAxiom: {'characteristics': [], 'domain': ['ContinuousMedium'], 'range': ['DispersedPhase'], 'subPropertyOf': ['stuffFormingRelation'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'colloidFormingRelation' be considered a specialization of'stuffFormingRelation'?", "1": "Which properties are classified as subproperties under'stuffFormingRelation', such as 'colloidFormingRelation'?", "2": "Is every instance related via 'colloidFormingRelation' also connected through'stuffFormingRelation'?", "3": "What higher-level relationships encompass 'colloidFormingRelation' within this ontology?", "4": "Does the use of 'colloidFormingRelation' imply the existence of a corresponding'stuffFormingRelation'?", "5": "Which more general properties include 'colloidFormingRelation' as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: instantiation\nDescription: The property \"instantiation\" has a domain restricted to \"AmountOfStuff\" but no specified range, characteristics, super-properties, or inverse properties. This indicates that \"instantiation\" is intended to relate entities of type \"AmountOfStuff\" to unspecified targets.\nAxiom: {'characteristics': [], 'domain': ['AmountOfStuff'], 'range': ['Stuff'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can instances of AmountOfStuff be related via the property 'instantiation' only to objects of class Stuff?", "1": "Is it correct that any value assigned to the property 'instantiation' must be an instance of the class Stuff?", "2": "What types of entities are permitted as the range for the property 'instantiation'?", "3": "Can the property 'instantiation' have a subject that is not an AmountOfStuff?", "4": "What classes are defined as possible domains for the property 'instantiation'?", "5": "Which classes can serve as the domain for the property 'instantiation'?", "6": "Are all values associated with the property"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasDataValue\nDescription: The property \"hasDataValue\" does not have any explicitly defined characteristics, domain, range, super-properties, or inverse properties. This suggests it is a general property without specified usage constraints or relationships in the ontology.\nAxiom: {'characteristics': [], 'domain': ['Abstract'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What types of entities can serve as subjects for the property ‘hasDataValue’?", "1": "Can the property ‘hasDataValue’ relate an instance of Abstract to anything other than None as its value?", "2": "Is it correct that the property ‘hasDataValue’ does not specify any range?", "3": "What kinds of values are permitted as the range for the property ‘hasDataValue’?", "4": "Does the property ‘hasDataValue’ apply exclusively to instances of Abstract?", "5": "What is the appropriate domain for the property ‘hasDataValue’ according to the current ontology specification?", "6": "Can something other than Abstract"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasPart\nDescription: The property \"hasPart\" has no explicitly defined characteristics, domain, range, super-properties, or inverse properties. This indicates it is a general-purpose property used to relate an entity to its constituent parts, without constraints on the types of entities it connects.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': ['partOf']}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical relationship between ‘hasPart’ and ‘partOf’ within this ontology?", "1": "If entity A has part B, does the ontology entail that B is a part of A via the ‘partOf’ property?", "2": "Which property serves as the inverse for ‘hasPart’ according to the ontology?", "3": "Next CQ:Are all instances of ‘hasPart’ necessarily related through ‘partOf’ to some other instance?", "4": "Is there any case where ‘hasPart’ and ‘partOf’ are not mutually inverse properties?", "5": "Can we conclude that if X hasPart Y,"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasScatterStuffPart\nDescription: The property \"hasScatterStuffPart\" has no explicitly defined characteristics, domain, or range restrictions. It is specified as a sub-property of \"hasProperPart,\" indicating that any instance of \"hasScatterStuffPart\" also qualifies as an instance of \"hasProperPart.\" No inverse property is defined.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': ['hasProperPart'], 'inverseOf': ['scatteredStuffPartOf']}\nGenerated CQs:", "generated_outputs": {"0": "What is the ontological relationship between ‘hasScatterStuffPart’ and ‘scatteredStuffPartOf’?", "1": "If entity A has scatter stuff part B, does this entail that B is scattered stuff part of A according to the ontology?", "2": "Which property is designated as the inverse of ‘hasScatterStuffPart’ within this ontology?", "3": "Next CQ:Is the usage of ‘hasScatterStuffPart’ equivalent to applying its inverse property ‘scatteredStuffPartOf’?", "4": "How do the properties ‘hasScatterStuffPart’ and ‘scatteredStuffPartOf’ relate concept"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasQuale\nDescription: The property \"hasQuale\" does not specify domain restrictions, characteristics, super-properties, or an inverse property. Its range is restricted to individuals classified as \"Abstract,\" indicating it is used to relate entities to abstract qualities or properties.\nAxiom: {'characteristics': [], 'domain': ['Quality'], 'range': ['Abstract'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'hasQuale' be associated with subjects other than Quality?", "1": "Is every instance related via 'hasQuale' necessarily a Quality entity?", "2": "What types of entities are permitted as the domain for the property 'hasQuale'?", "3": "Can anything outside the Quality class be the subject of 'hasQuale'?", "4": "Which classes can serve as the domain for the property 'hasQuale'?", "5": "Is there any Quality entity that cannot have the property 'hasQuale'?", "6": "Are all entities that use the property 'hasQuale' required to belong to the Quality category?"}}
