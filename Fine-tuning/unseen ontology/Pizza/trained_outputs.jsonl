{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: American\nDescription: American is defined as a subclass of NamedPizza and is explicitly disjoint from several other specific pizza types, such as Mushroom, LaReine, Napoletana, and others, ensuring that an individual cannot simultaneously belong to more than one of these classes. Members of the American class must have the following toppings: tomato topping, pepperoni sausage topping, and mozzarella topping. Furthermore, they can have only mozzarella, pepperoni sausage, or tomato as toppings—no other toppings are permitted. Additionally, the country of origin for this pizza is specified as America. This formalization distinguishes the American pizza by its unique combination of toppings and origin, while preventing any overlap with the other named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some PeperoniSausageTopping]', '[hasCountryOfOrigin hasValue America]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or PeperoniSausageTopping or TomatoTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "Are there any instances of American that do not include at least one PepperoniSausageTopping?", "1": "Is it required for every American pizza to have the PepperoniSausageTopping among its toppings?", "2": "Can an American pizza exist without being associated with the PepperoniSausageTopping through the hasTopping property?", "3": "Does the presence of the PepperoniSausageTopping always characterize an American pizza?", "4": "Is the inclusion of the PepperoniSausageTopping a necessary condition for an entity to be classified as American?", "5": "Must all individuals labeled American possess the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Capricciosa\nDescription: Capricciosa is defined as a subclass of NamedPizza, and is explicitly disjoint from a range of other specified pizza types, ensuring no individual can simultaneously belong to Capricciosa and any of those classes. Members of Capricciosa must have at least one topping each of tomato, ham, olive, mozzarella, anchovies, peperonata, and caper. Additionally, their toppings are strictly limited to only anchovies, mozzarella, tomato, peperonata, ham, caper, or olive—no other toppings are permitted. This formalization ensures a precise and consistent definition for Capricciosa pizza within the ontology.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or PeperonataTopping or HamTopping or CaperTopping or OliveTopping)]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping some CaperTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of Capricciosa necessarily include at least one peperonata topping?", "1": "Is it required that all entities classified under Capricciosa possess some peperonata through the hasTopping property?", "2": "Does the presence of peperonata as a topping restrict membership solely to Capricciosa among pizzas?", "3": "Can something be categorized as Capricciosa without having peperonata as a topping?", "4": "Is there any Capricciosa that does not satisfy the condition of having peperonata as a topping?", "5": "Can a pizza exist as Capric"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FourSeasons\nDescription: FourSeasons is a subclass of NamedPizza and is explicitly disjoint from several other specific pizza classes, ensuring that no pizza can be simultaneously classified as FourSeasons and any of the listed disjoint pizzas (such as Mushroom, Margherita, QuattroFormaggi, etc.). Members of the FourSeasons class are characterized by having at least one of each of the following toppings: mushroom, tomato, peperoni sausage, olive, mozzarella, anchovies, and capers. Additionally, the set of possible toppings for FourSeasons pizzas is restricted to only anchovies, mozzarella, peperoni sausage, tomato, capers, olives, and mushrooms—no other toppings are permitted. This formalization captures the standard combinatory topping profile of the FourSeasons pizza variant.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some PeperoniSausageTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or PeperoniSausageTopping or TomatoTopping or CaperTopping or OliveTopping or MushroomTopping)]', '[hasTopping some AnchoviesTopping]', '[hasTopping some CaperTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "Are there any instances of FourSeasons that do not have at least one hasTopping relation to Capers?", "1": "Can every FourSeasons instance necessarily include a hasTopping property linked to Capers?", "2": "Does the existence of a FourSeasons entity imply the presence of a hasTopping relationship involving Capers?", "3": "Is it required that all FourSeasons entities possess at least one hasTopping connection to Capers?", "4": "Must every FourSeasons instance feature a hasTopping association with Capers?", "5": "Can a FourSeasons instance exist without being connected via hasTopping to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LaReine\nDescription: LaReine is defined as a subclass of NamedPizza and is declared disjoint with a number of other specific pizza classes, including Mushroom, Napoletana, Veneziana, and others—ensuring no individual pizza can be classified as both a LaReine and any of these listed classes. \n\nLaReine pizzas are characterized by several property restrictions: every LaReine pizza must have at least one topping of each of the following types—MushroomTopping, TomatoTopping, HamTopping, OliveTopping, and MozzarellaTopping. Additionally, the only permitted toppings for LaReine pizzas are MozzarellaTopping, TomatoTopping, HamTopping, OliveTopping, or MushroomTopping; no other toppings are allowed. This ensures that the LaReine pizza is strictly defined by this specific set of ingredients.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or OliveTopping or MushroomTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "Are there any pizzatypes that are defined as more specialized than LaReine?", "1": "Is LaReine categorized under the broader group of NamedPizza?", "2": "Which higher-level categories does LaReine fall within according to the ontology?", "3": "Can LaReine be considered a subtype of NamedPizza?", "4": "What are all subclasses that are directly related to NamedPizza, such as LaReine?", "5": "Does LaReine belong to the class of NamedPizza?", "6": "What general categories encompass LaReine in the ontology hierarchy?", "7": "Is LaReine included among the subclasses of NamedPizza?", "8": "To"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Napoletana\nDescription: Napoletana is defined as a subclass of NamedPizza and is explicitly disjoint with a wide range of other specific pizza types, ensuring that no individual pizza can simultaneously belong to Napoletana and any of those classes. Members of the Napoletana class must have toppings including tomato, olive, mozzarella, anchovies, and capers, with the restriction that only these toppings (and no others) are permitted. Additionally, the country of origin for Napoletana is restricted to Italy. This class therefore represents a distinct and well-defined type of pizza with a uniquely specified combination of Italian origin and allowable toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasCountryOfOrigin hasValue Italy]', '[hasTopping some CaperTopping]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or TomatoTopping or CaperTopping or OliveTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "What formal restrictions ensure that each instance of Napoletana can only have ‘topping’ relationships with either AnchoviesTopping, MozzarellaTopping, TomatoTopping, CaperTopping, or OliveTopping?", "1": "Is it possible for a Napoletana to have a topping that is not among AnchoviesTopping, MozzarellaTopping, TomatoTopping, CaperTopping, or OliveTopping?", "2": "Does every entity classified as Napoletana necessarily satisfy the property restriction concerning allowed toppings?", "3": "Can a Napoletana exist without having at least one of the specified toppings"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrinceCarlo\nDescription: PrinceCarlo is defined as a subclass of NamedPizza, making it a specific kind of pizza with a distinct identity. It is explicitly disjoint with a comprehensive set of other named pizzas, such that no individual pizza can be simultaneously classified as PrinceCarlo and any of those other pizzas (e.g., Mushroom, LaReine, Napoletana, etc.).\n\nFrom the property restrictions, any PrinceCarlo pizza must have at least the following toppings: TomatoTopping, MozzarellaTopping, ParmesanTopping, LeekTopping, and RosemaryTopping. Furthermore, the only toppings permitted on a PrinceCarlo pizza are LeekTopping, RosemaryTopping, MozzarellaTopping, TomatoTopping, and ParmesanTopping. This formalization ensures that PrinceCarlo pizzas are uniquely characterized by this specific and exclusive combination of toppings, and cannot include any others.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (LeekTopping or RosemaryTopping or MozzarellaTopping or TomatoTopping or ParmesanTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some LeekTopping]', '[hasTopping some RosemaryTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "What other pizza types are specified as mutually exclusive with PrinceCarlo?", "1": "Is there any instance that could belong to both PrinceCarlo and another listed pizza type?", "2": "Which classes are asserted as incompatible with PrinceCarlo within the ontology?", "3": "Is every PrinceCarlo pizza required to have at least one topping from among LeekTopping, RosemaryTopping, MozzarellaTopping, TomatoTopping, or ParmesanTopping?", "4": "Does the classification of PrinceCarlo necessarily entail that it includes some portion of these five topping options?", "5": "Can a PrinceCarlo pizza exist without having"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Siciliana\nDescription: Siciliana is a subclass of NamedPizza, explicitly disjoint from numerous other specific pizza types, ensuring that no individual pizza can be simultaneously classified as Siciliana and any of the listed varieties (e.g., Mushroom, Margherita, FourSeasons, etc.). Siciliana pizzas are characterized by their toppings: they must include some tomato topping, garlic topping, ham topping, artichoke topping, olive topping, mozzarella topping, and anchovies topping. Furthermore, these pizzas are restricted to only have toppings from the following: anchovies, mozzarella, garlic, artichoke, tomato, ham, and olive—no additional toppings are permitted. This formalization precisely defines the Siciliana pizza in terms of both its composition and differentiation from other pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some HamTopping]', '[hasTopping some ArtichokeTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AnchoviesTopping]', '[hasTopping only (AnchoviesTopping or MozzarellaTopping or GarlicTopping or ArtichokeTopping or TomatoTopping or HamTopping or OliveTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology define the exclusivity between Siciliana and other specified pizza classes?", "1": "Is there any instance that could belong to both Siciliana and another class defined as disjoint with it?", "2": "Which pizza classes are declared as mutually exclusive with Siciliana within the ontology?", "3": "Is Siciliana considered a valid alternative for any pizza type listed under the disjointWith property?", "4": "What generalizations pertain to the structure of Siciliana relative to other named pizza types?", "5": "Does the ontology restrict Siciliana pizzas to having only those specific toppings mentioned in its definition?", "6": "Can Sic"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: UnclosedPizza\nDescription: UnclosedPizza is defined as a subclass of NamedPizza, disjoint with a specific set of pizzas including Mushroom, AmericanHot, Margherita, and others, ensuring mutual exclusivity with these named varieties. Every UnclosedPizza is characterized by having at least one MozzarellaTopping, but there is no restriction on additional toppings. As described, membership in UnclosedPizza does not imply classification as either a VegetarianPizza or a NonVegetarianPizza, as its topping composition may be incomplete or unspecified. This formalization supports the open nature of its topping definitions within the ontology.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MozzarellaTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of UnclosedPizza have at least one MozzarellaTopping?", "1": "Is it required for UnclosedPizza to possess a hasTopping relationship with MozzarellaTopping?", "2": "Can an UnclosedPizza exist without being associated via hasTopping to any MozzarellaTopping?", "3": "Does the presence of MozzarellaTopping define all instances of UnclosedPizza?", "4": "Are all individuals classified as UnclosedPizza necessarily linked through hasTopping to some MozzarellaTopping?", "5": "Can an UnclosedPizza lack the hasTopping property directed towards MozzarellaTopping?", "6": "Is Unclosed"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AnchoviesTopping\nDescription: AnchoviesTopping is modeled as a subclass of FishTopping, signifying that it is a specific type of fish-based topping. It is explicitly disjoint with both MixedSeafoodTopping and PrawnsTopping, meaning an individual instance cannot simultaneously be categorized as AnchoviesTopping and either of those other toppings. This ensures a clear and mutually exclusive classification among these seafood-themed pizza toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['PrawnsTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between AnchoviesTopping and MixedSeafoodTopping?", "1": "Is there any entity that can simultaneously belong to both AnchoviesTopping and MixedSeafoodTopping categories?", "2": "Which classes are specified as disjoint with MixedSeafoodTopping within the ontology?", "3": "Is PrawnsTopping considered equivalent in structure or meaning to AnchoviesTopping?", "4": "What are the defined differences between AnchoviesTopping and PrawnsTopping according to the ontology?", "5": "Can an object be classified under both AnchoviesTopping and PrawnsTopping at the same time"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PrawnsTopping\nDescription: PrawnsTopping is defined as a subclass of FishTopping, indicating it is a specific kind of fish-based topping. It is explicitly disjoint with both MixedSeafoodTopping and AnchoviesTopping, which means no individual topping can simultaneously be classified as PrawnsTopping and either of the other two classes. This formalization ensures that members of PrawnsTopping are uniquely identifiable as prawn-based toppings, distinct from other seafood or anchovy-based toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['MixedSeafoodTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between PrawnsTopping and AnchoviesTopping?", "1": "Is there any instance that could belong to both PrawnsTopping and AnchoviesTopping categories?", "2": "Which other food toppings are declared incompatible with PrawnsTopping within the ontology?", "3": "Generated CQs:Is PrawnsTopping considered incompatible with MixedSeafoodTopping according to the ontology?", "4": "What are the mutually exclusive topping types specified in the ontology?", "5": "Can a single topping be classified under both PrawnsTopping and MixedSeafoodTopping?", "6": "Generated CQs"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseyVegetableTopping\nDescription: CheeseyVegetableTopping is defined as a subclass of both VegetableTopping and CheeseTopping. However, since these two parent classes are disjoint, CheeseyVegetableTopping is necessarily inconsistent—no individual can simultaneously belong to both parent classes. As a result, this class cannot have any members. This scenario is often used in ontology modeling tutorials (such as called ProbeInconsistentTopping in the ProtegeOWL Tutorial) to demonstrate the effects of disjointness and inconsistency in class hierarchies.\nAxiom: {'subClassOf': ['CheeseTopping']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of CheeseyVegetableTopping also fall under VegetableTopping?", "1": "Which toppings are classified as more specific types within VegetableTopping?", "2": "What broader categories encompass CheeseyVegetableTopping?", "3": "Is it correct that CheeseyVegetableTopping inherits from CheeseTopping?", "4": "To which higher-level groups does CheeseyVegetableTopping pertain?", "5": "Can CheeseyVegetableTopping be considered a specialization of CheeseTopping?", "6": "Which superclasses are associated with CheeseyVegetableTopping?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OliveTopping\nDescription: OliveTopping is defined as a subclass of VegetableTopping and is disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—meaning an individual cannot belong to both OliveTopping and any of these classes. Members of the OliveTopping class are further characterized by the property that they have at least some level of spiciness classified as mild.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does OliveTopping share any logical disjunction with RocketTopping?", "1": "Which entities are specified as mutually exclusive with RocketTopping within the ontology?", "2": "What categories are formally incompatible with RocketTopping according to the ontology?", "3": "Is there any instance that can simultaneously belong to both OliveTopping and RocketTopping?", "4": "How does the ontology define the distinction between OliveTopping and RocketTopping?", "5": "Can something be classified under both OliveTopping and RocketTopping?", "6": "Which top-level categories include both OliveTopping and RocketTopping among their subclasses?", "7": "Does the ontology allow for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PepperTopping\nDescription: PepperTopping is defined as a subclass of VegetableTopping, indicating it is a specific type of vegetable-based topping. It is explicitly disjoint with RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping—meaning no individual can simultaneously be a PepperTopping and any of these other vegetable topping classes. This establishes PepperTopping as a distinct and non-overlapping category within vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'AsparagusTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation is specified between PepperTopping and RocketTopping?", "1": "Is there any instance that can belong to both PepperTopping and RocketTopping categories?", "2": "Which classes are declared as mutually exclusive with RocketTopping?", "3": "://>", "4": "Can an entity be classified as both PepperTopping and RocketTopping at the same time according to the ontology?", "5": "How does the ontology define the distinction between PepperTopping and RocketTopping?", "6": "Does the ontology permit objects to have multiple classifications under PepperTopping and RocketTopping simultaneously?", "7": "What is the relationship defined between Pepper"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TomatoTopping\nDescription: TomatoTopping is a subclass of VegetableTopping, representing toppings derived from tomatoes. It is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, and PetitPoisTopping, ensuring that no individual can simultaneously be both a TomatoTopping and any of these other toppings. Additionally, TomatoTopping is defined to always have some level of mild spiciness, as specified by the restriction [hasSpiciness some Mild].\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of TomatoTopping exhibit at least one property related to mild spiciness?", "1": "Is it necessary for all entities classified under TomatoTopping to possess the hasSpiciness property with the value Mild?", "2": "Can there exist a TomatoTopping without having any hasSpiciness relation to Mild?", "3": "Does the existence of a TomatoTopping imply the presence of a hasSpiciness link to Mild?", "4": "Is it possible for a TomatoTopping not to be associated via hasSpiciness with Mild?", "5": "Does the definition of TomatoTopping include the requirement that it must"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseTopping\nDescription: CheeseTopping is defined as a subclass of PizzaTopping, representing toppings made from cheese products that are used on pizzas. It is explicitly disjoint from other topping types such as MeatTopping, SauceTopping, VegetableTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no individual topping instance can simultaneously belong to both CheeseTopping and any of these other topping categories. This classification enforces a clear distinction between cheese-based toppings and all other types of pizza toppings.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['SauceTopping', 'VegetableTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping', 'FruitTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology specify the mutual exclusivity between CheeseTopping and MeatTopping?", "1": "Is there any overlap allowed between CheeseTopping and MeatTopping within the ontology?", "2": "Which other classes are declared as incompatible with MeatTopping, including CheeseTopping?", "3": "Generated CQs:Is CheeseTopping categorized under PizzaTopping?", "4": "What broader class classifications encompass CheeseTopping according to the ontology?", "5": "Which subclasses fall under PizzaTopping, specifically mentioning CheeseTopping?", "6": "Generated CQs:Is every CheeseTopping instance also classified as a type of PizzaTopping?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FruitTopping\nDescription: FruitTopping is defined as a subclass of PizzaTopping, meaning it represents a specific type of topping used on pizzas. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, and NutTopping, ensuring that no topping can simultaneously belong to FruitTopping and any of these other topping categories. This formalization guarantees that FruitTopping exclusively includes toppings derived from fruit and distinguishes them from all other major topping types.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between FruitTopping and HerbSpiceTopping within the ontology?", "1": "Is there any instance that could simultaneously be classified as both FruitTopping and HerbSpiceTopping?", "2": "Which classes are declared as mutually exclusive with HerbSpiceTopping?", "3": "Generated CQs:Is HerbSpiceTopping considered incompatible with FruitTopping according to the ontology's structure?", "4": "What are the distinct topping categories defined as separate from FruitTopping?", "5": "Generated CQs:Is FruitTopping recognized as a unique category not overlapping with HerbSpiceTopping?", "6": "How does"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MeatTopping\nDescription: MeatTopping is defined as a subclass of PizzaTopping, representing toppings derived specifically from meat products. It is disjoint with SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no single topping instance can simultaneously belong to both MeatTopping and any of these other topping categories. This formalization enforces a clear categorical separation between meat-based and other types of pizza toppings.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['SauceTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'NutTopping', 'FruitTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between MeatTopping and CheeseTopping?", "1": "Is there any instance that could be classified as both MeatTopping and CheeseTopping?", "2": "Which classes are explicitly specified as mutually exclusive with CheeseTopping?", "3": "_REF", "4": "Does CheeseTopping share any logical boundaries with MeatTopping within the ontology structure?", "5": "What are all the topping types that cannot coexist with CheeseTopping according to the ontology?", "6": "Can a topping be categorized under either CheeseTopping or MeatTopping without violating the ontology's constraints?", "7": "How are MeatTopping and CheeseT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetableTopping\nDescription: VegetableTopping is defined as a subclass of PizzaTopping, representing pizza toppings that are derived from vegetables. It is explicitly disjoint with MeatTopping, SauceTopping, CheeseTopping, FishTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no topping can simultaneously belong to VegetableTopping and any of these other topping categories. This formalization guarantees that VegetableTopping exclusively encompasses toppings of vegetable origin, and clearly separates it from other distinct topping types used on pizzas.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'NutTopping', 'FruitTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between VegetableTopping and SauceTopping?", "1": "Is there any instance that could be classified under both VegetableTopping and SauceTopping?", "2": "Which classes are specified as disjoint with VegetableTopping within the ontology?", "3": "Does the definition of VegetableTopping exclude any potential overlap with MeatTopping?", "4": "Can a single entity simultaneously be considered both a VegetableTopping and a MeatTopping according to the ontology?", "5": "What are the permitted subclasses for MeatTopping in relation to VegetableTopping?", "6": "Are all instances of MeatTopping necessarily mutually exclusive with those of Vegetable"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ParmesanTopping\nDescription: ParmesanTopping is defined as a subclass of CheeseTopping, representing cheese-based toppings specifically comprised of parmesan. It is explicitly disjoint from GoatsCheeseTopping, MozzarellaTopping, GorgonzolaTopping, and FourCheesesTopping, ensuring no individual can simultaneously belong to these classes. Members of this class are characterized by having some level of mild spiciness, as specified by the property restriction [hasSpiciness some Mild].\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['MozzarellaTopping', 'GorgonzolaTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between ParmesanTopping and GoatsCheeseTopping?", "1": "Is it possible for a single entity to be classified under both ParmesanTopping and GoatsCheeseTopping?", "2": "Which other topping types are declared as mutually exclusive with GoatsCheeseTopping within the ontology?", "3": "Is there any instance that cannot be categorized as either ParmesanTopping or GoatsCheeseTopping?", "4": "What are the disjoint classes defined in relation to ParmesanTopping?", "5": "Can something be assigned to both ParmesanTopping and another distinct topping category?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HamTopping\nDescription: HamTopping is defined as a subclass of MeatTopping, indicating that it is a type of meat-based pizza topping. It is explicitly disjoint with PeperoniSausageTopping, HotSpicedBeefTopping, and ChickenTopping, meaning an individual topping cannot simultaneously be classified as ham and any of these other meat toppings. This formalization ensures that HamTopping remains distinct from other specific meat toppings within the ontology.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['HotSpicedBeefTopping', 'ChickenTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between HamTopping and PeperoniSausageTopping?", "1": "Is there any instance that can simultaneously belong to both HamTopping and PeperoniSausageTopping categories?", "2": "Which entities are specified as mutually exclusive with HamTopping in the ontology?", "3": "Generated CQs:Is there any overlap allowed between HamTopping and HotSpicedBeefTopping according to the ontology's definition?", "4": "What separation rules exist between HotSpicedBeefTopping and HamTopping in the ontology?", "5": "Can a single entity be classified under both Hot"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DeepPanBase\nDescription: DeepPanBase is defined as a subclass of PizzaBase, establishing it as a specific type of pizza base. It is explicitly disjoint with ThinAndCrispyBase, which means that no pizza base can simultaneously be classified as both a DeepPanBase and a ThinAndCrispyBase. This formalization ensures clear differentiation between thick, deep pan styles and thin, crispy bases within the ontology.\nAxiom: {'subClassOf': ['PizzaBase'], 'disjointWith': []}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology ensure that a pizza base cannot be simultaneously classified as both DeepPanBase and ThinAndCrispyBase?", "1": "Is there any overlap allowed between DeepPanBase and ThinAndCrispyBase in the ontology?", "2": "Which classes are specified as mutually exclusive with ThinAndCrispyBase?", "3": "://end-hidden"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GreenPepperTopping\nDescription: GreenPepperTopping is defined as a subclass of PepperTopping, indicating it inherits all characteristics of pepper-based pizza toppings. It is explicitly disjoint with SweetPepperTopping, JalapenoPepperTopping, and PeperonataTopping—ensuring that no instance can simultaneously belong to more than one of these classes. This formalization distinguishes green pepper toppings from other specific pepper varieties within the ontology.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['SweetPepperTopping', 'JalapenoPepperTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between GreenPepperTopping and PeperonataTopping?", "1": "Is there any topping classified as both GreenPepperTopping and PeperonataTopping?", "2": "Which categories are specified as mutually exclusive with PeperonataTopping in the ontology?", "3": "Next, what are the distinct topping types declared incompatible with GreenPepperTopping?", "4": "Can an item be categorized under both GreenPepperTopping and another topping type listed here?", "5": "What are the disjoint topping classifications mentioned alongside GreenPepperTopping?", "6": "Is GreenPepperTopping permitted"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Hot\nDescription: Hot is defined as a subclass of Spiciness, indicating it represents an elevated or intense level of spicy sensation. It is explicitly disjoint with the classes Mild and Medium, ensuring that no instance can be both Hot and either Mild or Medium at the same time. This formalization clarifies that Hot describes a distinct, non-overlapping intensity within the spectrum of spiciness.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Medium']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between Hot and Medium within the context of spiciness?", "1": "Is there any entity that can simultaneously be classified as both Hot and Medium?", "2": "Which other spiciness categories are formally incompatible with Hot?", "3": "Can something be categorized as Hot if it also falls under Medium?", "4": "How does the ontology distinguish between Hot and Medium for spiciness levels?", "5": "What are the mutually exclusive spiciness classifications involving Hot?", "6": "Does the concept of Hot exclude all instances that could be Medium?", "7": "In terms of ontology structure, how do you define the relationship between Hot and Medium?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mild\nDescription: Mild is a subclass of Spiciness, representing a specific level of spiciness distinct from other grades. It is explicitly disjoint with both Hot and Medium, ensuring that an instance classified as Mild cannot simultaneously be classified as Hot or Medium. This enforces a clear and exclusive categorization among the spiciness levels.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Hot']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between the classes Mild and Medium?", "1": "Is there any individual that can be classified as both Mild and Medium according to the ontology?", "2": "Which classes are specified as mutually exclusive with Medium within the ontology?", "3": "Is it possible for something to belong to both the categories Hot and Mild at the same time?", "4": "What are the logical constraints that prevent an entity from being categorized as both Hot and Mild simultaneously?", "5": "Which entities are formally declared incompatible with Hot in the ontology context?", "6": "Can anything be classified under both the Hot and Mild categories according to the ontology's definitions?", "7": "How"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PizzaBase\nDescription: PizzaBase is defined as a subclass of Food, indicating that every PizzaBase is a type of food. It is explicitly disjoint with IceCream, Pizza, and PizzaTopping, ensuring that an individual cannot simultaneously be a PizzaBase and any of these other classes. This formalization distinguishes PizzaBase as a unique foundational component in food ontology, separate from finished pizzas, their toppings, or dessert items like ice cream.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['IceCream', 'PizzaTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology define the separation between PizzaBase and Pizza?", "1": "Is there any instance that can be both a Pizza and a PizzaBase according to the ontology?", "2": "Which classes are specified as mutually exclusive with PizzaBase within the ontology?", "3": "Does PizzaBase have any overlap in membership with PizzaTopping as per the ontology's structure?", "4": "What is the distinctiveness of PizzaBase compared to all other food categories defined in the ontology?", "5": "Can a single entity be classified under both PizzaBase and another disjoint class?", "6": "How does the ontology establish the distinction between PizzaBase and Pizza?", "7": "Are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SundriedTomatoTopping\nDescription: SundriedTomatoTopping is a subclass of TomatoTopping, meaning it inherits all characteristics typical of tomato-based toppings. It is defined as disjoint with SlicedTomatoTopping, ensuring that an individual cannot be both a SundriedTomatoTopping and a SlicedTomatoTopping. Additionally, every instance of SundriedTomatoTopping must have at least some mild level of spiciness, as specified by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['TomatoTopping'], 'disjointWith': [], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between SundriedTomatoTopping and SlicedTomatoTopping?", "1": "Is there any entity that can simultaneously belong to both SundriedTomatoTopping and SlicedTomatoTopping categories?", "2": "Which other topping types are declared incompatible with SundriedTomatoTopping according to the ontology?", "3": "Is SundriedTomatoTopping recognized as a distinct topping type separate from SlicedTomatoTopping within this ontology?", "4": "How does the ontology define the exclusive membership of entities between SundriedTomatoTopping and SlicedTomatoTopping?", "5": "What are"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: TobascoPepperSauce\nDescription: TobascoPepperSauce is defined as a subclass of SauceTopping, indicating it is a specific type of sauce used as a topping. All members of this class are required to have the property hasSpiciness with at least some value classified as Hot, meaning every TobascoPepperSauce must exhibit a hot level of spiciness.\nAxiom: {'subClassOf': [], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "generated_outputs": {"0": "Does TobascoPepperSauce fall under the broader category of SauceTopping?", "1": "Which types of SauceTopping include TobascoPepperSauce as a more specific instance?", "2": "What general categories does TobascoPepperSauce belong to within the context of food items?", "3": "Is TobascoPepperSauce categorized as a kind of SauceTopping?", "4": "Which subclasses are encompassed by SauceTopping, such as TobascoPepperSauce?", "5": "What higher-level groupings does TobascoPepperSauce pertain to among sauces used as toppings?", "6": "Does Tobasco"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RealItalianPizza\nDescription: RealItalianPizza is formally defined as any Pizza whose country of origin is Italy, ensuring strict geographical provenance. Additionally, all RealItalianPizzas are restricted to having only ThinAndCrispyBase as their base. This definition ensures that the class exclusively contains pizzas originating from Italy with thin and crispy bases, faithfully reflecting the intended concept that authentic Italian pizzas are characterized both by their origin and their base type.\nAxiom: {'equivalentClass': [], 'propertyRestrictions': ['[hasBase only ThinAndCrispyBase]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every RealItalianPizza necessarily originate from Italy?", "1": "Is RealItalianPizza equivalent to the set of Pizzas whose countryOfOrigin is Italy?", "2": "Are there any instances of Pizza that do not have Italy specified as countryOfOrigin classified as RealItalianPizza?", "3": "Can RealItalianPizza be represented as any Pizza with countryOfOrigin equal to Italy?", "4": "Does the classification as RealItalianPizza require that the countryOfOrigin property be exactly Italy?", "5": "Is it correct that RealItalianPizza refers to all Pizzas for which the countryOfOrigin is Italy?", "6": "Can RealItalianPizza be identified solely by"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Food\nDescription: Food is defined as a subclass of DomainConcept. This means that every instance of Food is considered a type of DomainConcept, representing consumable items or substances within the modeled domain. No further restrictions or disjoint relationships are specified in the current axiom.\nAxiom: {'subClassOf': ['DomainConcept']}\nGenerated CQs:", "generated_outputs": {"0": "What higher-level categories encompass Food within the ontology?", "1": "Is Food classified under the broader group of DomainConcept?", "2": "Which concepts fall under the category of DomainConcept, such as Food?", "3": "Does Food represent a specialized form of DomainConcept?", "4": "What specific instances belong to the class DomainConcept, including Food?", "5": "Which general classifications include Food among their subclasses?", "6": "Is Food categorized as a kind of DomainConcept?", "7": "To which more abstract classes does Food pertain within this ontology?", "8": "Can Food be understood as a particular type of DomainConcept?", "9": "How does the classification hierarchy relate Food to Domain"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NamedPizza\nDescription: NamedPizza is defined as a subclass of Pizza, representing pizzas that are explicitly listed or recognized on a pizza menu. Members of this class inherit all properties of Pizza and are distinguished by being menu-identified variants, rather than custom or unnamed creations.\nAxiom: {'subClassOf': ['Pizza']}\nGenerated CQs:", "generated_outputs": {"0": "Which entities are classified as more specific types under Pizza, such as NamedPizza?", "1": "Is every NamedPizza instance also considered a type of Pizza?", "2": "What broader categories encompass NamedPizza within the ontology?", "3": "Does NamedPizza represent a specialized form of Pizza?", "4": "Which higher-level classes include NamedPizza among their subclasses?", "5": "Is NamedPizza categorized under the general class of Pizza?", "6": "What other subtypes fall under the classification of Pizza besides NamedPizza?", "7": "Can any NamedPizza entity be further characterized as a kind of Pizza?", "8": "Is NamedPizza classified as a specific variant within the broader group of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PineKernels\nDescription: PineKernels is defined as a subclass of NutTopping, indicating that all PineKernels are considered a type of nut-based topping. No further property restrictions or disjointness axioms are specified, so individuals classified as PineKernels inherit all characteristics of NutTopping.\nAxiom: {'subClassOf': ['NutTopping']}\nGenerated CQs:", "generated_outputs": {"0": "Which types fall under the category of NutTopping, such as PineKernels?", "1": "What broader categories encompass PineKernels within the ontology?", "2": "Is PineKernels categorized under NutTopping?", "3": "Are all PineKernels instances of NutTopping?", "4": "Which entities are more general than PineKernels in this classification hierarchy?", "5": "Does PineKernels represent a specialized form of NutTopping?", "6": "To which higher-level group does PineKernels belong according to the ontology structure?", "7": "Can PineKernels be classified under the NutTopping class?", "8": "What are the direct superclasses for"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RedOnionTopping\nDescription: RedOnionTopping is defined as a subclass of OnionTopping, representing toppings specifically comprised of red onion. All individuals classified as RedOnionTopping inherit the characteristics and constraints applicable to OnionTopping.\nAxiom: {'subClassOf': ['OnionTopping']}\nGenerated CQs:", "generated_outputs": {"0": "What broader categories does RedOnionTopping fall under within this context?", "1": "Is RedOnionTopping categorized under OnionTopping?", "2": "Which types are encompassed by OnionTopping, including RedOnionTopping?", "3": "Is every instance of RedOnionTopping also considered an OnionTopping?", "4": "What are the direct superclasses of RedOnionTopping?", "5": "Does RedOnionTopping represent a more specific kind of OnionTopping?", "6": "Which classes are directly contained within OnionTopping, such as RedOnionTopping?", "7": "Can RedOnion"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: DomainConcept\nDescription: DomainConcept is a class that is explicitly disjoint with ValuePartition, meaning no individual can simultaneously be a member of both DomainConcept and ValuePartition. This ensures a clear separation between entities considered DomainConcepts and those defined as ValuePartitions within the ontology.\nAxiom: {'disjointWith': ['ValuePartition']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology ensure that DomainConcept and ValuePartition are mutually exclusive?", "1": "Is it possible for an entity to belong to both DomainConcept and ValuePartition at the same time?", "2": "Which classes are specified as disjoint with ValuePartition in the ontology?", "3": "Are there any domain concepts that could also be classified under ValuePartition according to the ontology's constraints?", "4": "What is the logical distinction established between DomainConcept and ValuePartition in the ontology?", "5": "Can you identify all classes that are declared incompatible with ValuePartition?", "6": "Does the ontology prevent an object from being assigned to both DomainConcept and ValuePartition?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ValuePartition\nDescription: ValuePartition is a pattern used to represent a set of mutually exclusive and exhaustive subclasses that serve as the only permissible values for a particular property. It is disjoint with DomainConcept, ensuring that no individual can belong to both classes. The parent ValuePartition class is employed in property restrictions, and its subclasses collectively cover all possible values for the property—membership cannot extend beyond these predefined subclasses without modifying the ValuePartition. This structure enforces a fixed set of alternatives, supporting controlled vocabularies and value enumerations within the ontology.\nAxiom: {'disjointWith': ['DomainConcept']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between ValuePartition and DomainConcept?", "1": "Is there any entity that can simultaneously be classified under both ValuePartition and DomainConcept?", "2": "Which other classes are declared as disjoint with ValuePartition in the ontology?", "3": "Can you identify any inherent incompatibility when assigning entities to either ValuePartition or DomainConcept?", "4": "How does the ontology ensure that members do not overlap between ValuePartition and DomainConcept?", "5": "Are all instances restricted exclusively to one of ValuePartition or DomainConcept?", "6": "What are the distinct conceptual categories defined by ValuePartition and DomainConcept?", "7": "Does the ontology define ValuePartition as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Cajun\nDescription: Cajun is defined as a subclass of NamedPizza and is explicitly disjoint with a variety of other pizza types, ensuring that no pizza can belong to Cajun and any of the disjoint classes simultaneously. Each Cajun pizza must have, as toppings, tomato, Tobasco pepper sauce, mozzarella, onion, peperonata, and prawns. Furthermore, the only allowed toppings on a Cajun pizza are prawn, Tobasco pepper sauce, mozzarella, tomato, onion, and peperonata. This formalization strictly characterizes Cajun pizzas by both required and exclusive toppings, distinguishing them from other named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some TobascoPepperSauce]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping some PrawnsTopping]', '[hasTopping some (PrawnsTopping and TobascoPepperSauce and MozzarellaTopping and TomatoTopping and OnionTopping and PeperonataTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "Are all instances of Cajun necessarily associated with at least one PrawnsTopping?", "1": "Does every Cajun have some hasTopping relationship to a PrawnsTopping?", "2": "Can a Cajun exist without being linked via hasTopping to a PrawnsTopping?", "3": "Is it necessary for every Cajun to include a PrawnsTopping among its hasTopping properties?", "4": "Must every instance classified as Cajun possess the property of having at least one PrawnsTopping through hasTopping?", "5": "Does the presence of a PrawnsTopping among the"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Fiorentina\nDescription: Fiorentina is defined as a subclass of NamedPizza and is explicitly disjoint with a variety of other specific pizza types, ensuring that no individual pizza can simultaneously be classified as both Fiorentina and any of those listed (e.g., Mushroom, Margherita, FourSeasons). Members of the Fiorentina class are characterized by the following topping constraints: they must include at least one of each of the following toppings—TomatoTopping, GarlicTopping, OliveTopping, MozzarellaTopping, ParmesanTopping, and SpinachTopping. Additionally, Fiorentina pizzas are restricted to having only the following toppings: MozzarellaTopping, GarlicTopping, TomatoTopping, SpinachTopping, OliveTopping, or ParmesanTopping. This axiomatisation precisely defines Fiorentina pizzas in terms of both required ingredients and clear differentiation from other pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping only (MozzarellaTopping or GarlicTopping or TomatoTopping or SpinachTopping or OliveTopping or ParmesanTopping)]', '[hasTopping some GarlicTopping]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some SpinachTopping]', '[hasTopping only TomatoTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between Fiorentina and American pizzas?", "1": "Is there any overlap allowed between the classes of Fiorentina and American pizzas?", "2": "Which pizza types are specified as mutually exclusive with Fiorentina?", "3": "Does Fiorentina appear in the list of pizza types that cannot coexist with American?", "4": "What are the distinct pizza categories defined within this ontology, including Fiorentina and American?", "5": "Can a single pizza be classified under both Fiorentina and American?", "6": "How does the ontology define the logical separation between Fiorentina and American pizzas?", "7": "Is American considered incompatible with"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Giardiniera\nDescription: Giardiniera is defined as a subclass of NamedPizza, and is explicitly disjoint from several other pizza classes such as Mushroom, LaReine, Napoletana, and others—ensuring that no pizza can simultaneously be classified as Giardiniera and any of these classes. Members of Giardiniera are characterized by a combination of specific toppings: they must contain at least some MushroomTopping, TomatoTopping, OliveTopping, MozzarellaTopping, SlicedTomatoTopping, PeperonataTopping, PetitPoisTopping, and LeekTopping. Furthermore, Giardiniera pizzas are strictly limited to having toppings only from the set: LeekTopping, MozzarellaTopping, TomatoTopping, PetitPoisTopping, PeperonataTopping, OliveTopping, MushroomTopping, and SlicedTomatoTopping. This formalization ensures that any pizza classified as Giardiniera has an exclusive and characteristic combination of the specified toppings and no others.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping only (LeekTopping or MozzarellaTopping or TomatoTopping or PetitPoisTopping or PeperonataTopping or OliveTopping or MushroomTopping or SlicedTomatoTopping)]', '[hasTopping some OliveTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some SlicedTomatoTopping]', '[hasTopping some PeperonataTopping]', '[hasTopping some PetitPoisTopping]', '[hasTopping some LeekTopping]', '[hasTopping only TomatoTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of Giardiniera necessarily have at least one topping that is specifically some kind of Mushroom?", "1": "Is it required for all Giardiniera entities to include a mushroom-based topping?", "2": "Can a Giardiniera exist without possessing a mushroom-related topping?", "3": "Does Giardiniera's property restriction on mushrooms apply universally across its instances?", "4": "Is there any instance of Giardiniera that does not feature a mushroom-containing topping?", "5": "Must all occurrences of Giardiniera possess some portion that qualifies as a mushroom topping?", "6": "Are all Giardiniera entities associated with the presence of a mushroom topping"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Mushroom\nDescription: Mushroom is defined as a subclass of NamedPizza, and it is disjoint from a wide range of other specific pizza types, ensuring that an individual cannot simultaneously belong to the Mushroom class and any of those listed classes. Members of the Mushroom class are required to have MushroomTopping, TomatoTopping, and MozzarellaTopping among their toppings. Additionally, they may only have MozzarellaTopping, TomatoTopping, or MushroomTopping as toppings, and no others. This formalization ensures that Mushroom pizzas are uniquely characterized by the exclusive combination of these three toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some MushroomTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or MushroomTopping)]', '[hasTopping some TomatoTopping]', '[hasTopping only MozzarellaTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every Mushroom instance necessarily have at least one MozzarellaTopping?", "1": "Is it possible for a Mushroom to exist without having the MozzarellaTopping assigned via hasTopping?", "2": "Are all instances classified under Mushroom required to possess some quantity of MozzarellaTopping through the hasTopping property?", "3": "Can there be any Mushroom entity lacking the hasTopping relationship to MozzarellaTopping?", "4": "Does the definition of Mushroom mandate the presence of MozzarellaTopping among its hasTopping properties?", "5": "Is it obligatory for every Mushroom item to feature MozzarellaTopping as part of its hasT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PolloAdAstra\nDescription: PolloAdAstra is defined as a subclass of NamedPizza and is explicitly disjoint with other specified pizzas, ensuring that no individual pizza can simultaneously be an instance of PolloAdAstra and any of the listed alternative named pizzas. Members of this class must have at least one of each of the following toppings: Red Onion, Cajun Spice, Tomato, Garlic, Sweet Pepper, Mozzarella, and Chicken. Furthermore, the only permissible toppings are Chicken, Mozzarella, Garlic, Tomato, Red Onion, Cajun Spice, and Sweet Pepper; no other toppings are allowed. This formalization provides a precise specification of PolloAdAstra as a distinct pizza type characterized by its unique and restricted combination of toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some RedOnionTopping]', '[hasTopping some CajunSpiceTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some SweetPepperTopping]', '[hasTopping only (ChickenTopping or MozzarellaTopping or GarlicTopping or TomatoTopping or RedOnionTopping or CajunSpiceTopping or SweetPepperTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping only ChickenTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "Are all instances of PolloAdAstra required to include at least one topping of type Chicken?", "1": "Does every occurrence of PolloAdAstra necessarily contain a hasTopping relationship with Chicken?", "2": "Can PolloAdAstra exist without having Chicken as a topping through the hasTopping property?", "3": "Is it possible for a PolloAdAstra instance to lack a hasTopping connection to Chicken?", "4": "Does the definition of PolloAdAsta ensure that it always includes a hasTopping relation involving Chicken?", "5": "Must every instance of PolloAdAsta possess a hasT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Rosa\nDescription: Rosa is defined as a subclass of NamedPizza, explicitly disjoint with a range of other specific pizza types (such as Mushroom, Margherita, AmericanHot, and others), ensuring an individual pizza cannot simultaneously belong to Rosa and any of those disjoint classes. Members of the Rosa class are characterized by their toppings: every Rosa pizza must have at least one TomatoTopping, one GorgonzolaTopping, and one MozzarellaTopping, and it may only contain these three toppings (no other toppings are permitted). This formalization strictly captures the unique identity and allowed ingredients of the Rosa pizza type.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or GorgonzolaTopping)]', '[hasTopping some MozzarellaTopping]', '[hasTopping only GorgonzolaTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every Rosa pizza include at least one Gorgonzola topping?", "1": "Is it required for all instances of Rosa to possess the hasTopping property with respect to some Gorgonzola topping?", "2": "Does the definition of Rosa ensure that each Rosa pizza always has a Gorgonzola topping through the hasTopping relation?", "3": "Can a Rosa exist without having any Gorgonzola topping associated via hasTopping?", "4": "Is it possible for a Rosa pizza to lack the hasTopping relationship with a Gorgonzola topping?", "5": "Are all instances of Rosa necessarily linked by the hasT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Soho\nDescription: Soho is defined as a subclass of NamedPizza and is explicitly disjoint with a range of other specific pizza types, ensuring that no instance can simultaneously belong to both Soho and these other classes. Members of the Soho class are characterized by their required toppings: each Soho pizza must include tomato, garlic, olive, mozzarella, parmesan, and rocket toppings. Additionally, the only permitted toppings for Soho pizzas are mozzarella, garlic, tomato, rocket, olive, or parmesan, meaning no other toppings are allowed on this type of pizza. This formalization strictly specifies both the mandatory inclusion and the exclusivity of particular toppings for Soho pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping only (MozzarellaTopping or GarlicTopping or TomatoTopping or RocketTopping or OliveTopping or ParmesanTopping)]', '[hasTopping some GarlicTopping]', '[hasTopping some OliveTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some RocketTopping]', '[hasTopping only MozzarellaTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between Soho and Mushroom?", "1": "Is there any individual that can simultaneously belong to both Soho and Mushroom categories?", "2": "Which pizza types are explicitly declared as disjoint with Mushroom?", "3": "Does every Soho instance exclude membership in the Mushroom category?", "4": "What are the defined differences separating Soho from Mushroom within the ontology?", "5": "Can a single entity be classified under both Soho and Mushroom?", "6": "How are Soho and Mushroom distinguished through logical disjunction in the ontology?", "7": "Is Soho considered incompatible with Mushroom according to the ontology's structure?", "8": "Which classes are mutually exclusive with"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ArtichokeTopping\nDescription: ArtichokeTopping is defined as a subclass of VegetableTopping and is explicitly disjoint with a range of other vegetable toppings, including RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that no individual can be classified as an ArtichokeTopping and any of these other types simultaneously. Furthermore, every member of the ArtichokeTopping class is constrained to have at least some level of mild spiciness (hasSpiciness some Mild), distinguishing it by its gentle flavor profile within the broader category of vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of ArtichokeTopping possess at least one hasSpiciness relationship with the value Mild?", "1": "Is it required for all ArtichokeToppings to exhibit some level of mild spiciness through the hasSpiciness property?", "2": "Can there exist an ArtichokeTopping without having any hasSpiciness connection to Mild?", "3": "Does the presence of hasSpiciness with the value Mild serve as a defining characteristic for ArtichokeTopping instances?", "4": "Are all entities categorized under ArtichokeTopping necessarily linked via hasSpiciness to something classified"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AsparagusTopping\nDescription: AsparagusTopping is defined as a subclass of VegetableTopping, meaning it represents a specific type of vegetable-based topping. It is disjoint with several other vegetable toppings, including RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that an individual cannot simultaneously belong to any of these classes. Additionally, every instance of AsparagusTopping must have some level of mild spiciness, as specified by the hasSpiciness property restriction.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of AsparagusTopping possess at least one'spiciness' value classified as'mild'?", "1": "Is it required for all AsparagusToppings to be associated with mild levels of spiciness?", "2": "Can an AsparagusTopping exist without having the'mild' spiciness quality?", "3": "Does the presence of'mild' spiciness always characterize an entity categorized under AsparagusTopping?", "4": "Is it necessary for AsparagusTopping entities to exhibit mild spiciness through the 'hasSpiciness' relation?", "5": "Can an object qualify"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GarlicTopping\nDescription: GarlicTopping is defined as a subclass of VegetableTopping, meaning it is a type of vegetable-based topping. It is explicitly disjoint with several other specific vegetable toppings, such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that an individual cannot belong to both GarlicTopping and any of these other topping classes. Additionally, GarlicTopping is characterized by the property that its members must have at least some medium level of spiciness (hasSpiciness some Medium).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Medium]']}\nGenerated CQs:", "generated_outputs": {"0": "Does GarlicTopping allow for the existence of instances with more than one hasSpiciness value set to Medium?", "1": "Is it possible for an entity classified under GarlicTopping to exhibit multiple levels of spiciness greater than or equal to Medium?", "2": "Can a GarlicTopping instance possess two or more distinct hasSpiciness properties each specifying Medium?", "3": "Does every instance of GarlicTopping necessarily have exactly one hasSpiciness value assigned to Medium?", "4": "Is there any GarlicTopping that does not satisfy the restriction that hasSpiciness can only be Medium?", "5": "Must all entities categorized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MushroomTopping\nDescription: MushroomTopping is a subclass of VegetableTopping and is explicitly disjoint from other specific vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, and others—ensuring that no individual can simultaneously belong to more than one of these topping types. Furthermore, MushroomTopping is characterized by the property that it must have some level of mild spiciness (hasSpiciness some Mild). This formalization defines MushroomTopping as a mild-flavored vegetable topping that is distinct from other named vegetable toppings in the ontology.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does MushroomTopping necessarily possess the hasSpiciness property with at least one value being Mild?", "1": "Is it required for every instance of MushroomTopping to have spiciness characterized as Mild through hasSpiciness?", "2": "Can there exist a MushroomTopping without having any hasSpiciness relation to Mild?", "3": "Does the presence of hasSpiciness with Mild uniquely define MushroomTopping among all entities?", "4": "Is the relationship between MushroomTopping and hasSpiciness restricted to values of Mild?", "5": "Can a MushroomTopping exhibit hasSpiciness with anything other than Mild?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PetitPoisTopping\nDescription: PetitPoisTopping is defined as a subclass of VegetableTopping and is explicitly disjoint with other vegetable toppings such as RocketTopping, LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, and TomatoTopping—meaning no individual can simultaneously belong to PetitPoisTopping and any of these other topping classes. Additionally, PetitPoisTopping is characterized by the property restriction that it has some level of spiciness classified as Mild. This formalization ensures that PetitPoisTopping represents a unique, mildly spicy vegetable topping distinct from all other specified vegetable toppings.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does PetitPoisTopping have any overlap in classification with RocketTopping?", "1": "Which entities are declared as mutually exclusive with RocketTopping within the ontology?", "2": "Is every instance of PetitPoisTopping necessarily different from at least one instance of RocketTopping?", "3": "://script>", "4": "Does the ontology assert that there exists some entity that cannot be both PetitPoisTopping and RocketTopping simultaneously?", "5": "How does the ontology define the distinction between PetitPoisTopping and RocketTopping?", "6": "Which concepts are formally differentiated from RocketTopping in the ontology?", "7": "Can"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpinachTopping\nDescription: SpinachTopping is defined as a subclass of VegetableTopping and is explicitly disjoint from a variety of other vegetable-based toppings, including RocketTopping, LeekTopping, OnionTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping. Individuals of this class must have at least one hasSpiciness property value that is Mild. This ensures that SpinachTopping exclusively refers to mild, spinach-based toppings that do not overlap with other vegetable toppings in the ontology.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'LeekTopping', 'OnionTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of SpinachTopping necessarily possess the hasSpiciness property with exactly one value equal to Mild?", "1": "Is it required for all SpinachToppings to be associated uniquely via hasSpiciness to Mild?", "2": "Can there exist any SpinachTopping without having the hasSpiciness property set to Mild?", "3": "Does the existence of hasSpiciness with value Mild define the SpinachTopping class?", "4": "Are all individuals classified under SpinachTopping characterized solely by the presence of the hasSpiciness property with value Mild?", "5": "Does the absence of has"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RosemaryTopping\nDescription: RosemaryTopping is defined as a subclass of HerbSpiceTopping, representing toppings that are both herbal and spicy in nature. This class is explicitly disjoint with CajunSpiceTopping, ensuring that no topping can be classified simultaneously as RosemaryTopping and CajunSpiceTopping. RosemaryTopping is further characterized by the property restriction that it must have at least some mild spiciness, distinguishing it from toppings with no or higher levels of spiciness.\nAxiom: {'subClassOf': ['HerbSpiceTopping'], 'disjointWith': ['CajunSpiceTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does RosemaryTopping allow for any instance to possess spiciness beyond the level of Mild?", "1": "Is there any instance of RosemaryTopping that has more than Mild spiciness associated with it?", "2": "Can RosemaryTopping include properties other than Mild for its hasSpiciness relationship?", "3": "Is every occurrence of hasSpiciness for RosemaryTopping strictly limited to the value Mild?", "4": "Does RosemaryTopping restrict its hasSpiciness property solely to instances of Mild spiciness?", "5": "Is it possible for RosemaryTopping to have hasSpiciness pointing"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NutTopping\nDescription: NutTopping is defined as a subclass of PizzaTopping, representing pizza toppings that consist specifically of nuts. It is explicitly disjoint with MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, FishTopping, HerbSpiceTopping, and FruitTopping, ensuring that no topping instance can simultaneously belong to these other topping categories. Additionally, every NutTopping must have at least some level of mild spiciness, as constrained by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'CheeseTopping', 'FishTopping', 'HerbSpiceTopping', 'FruitTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every NutTopping necessarily possess at least one hasSpiciness relationship to something classified as Mild?", "1": "Is it required for all instances of NutTopping to have the property hasSpiciness applied with the value Mild?", "2": "Can a NutTopping exist without having any hasSpiciness connection to Mild?", "3": "Does the definition of NutTopping entail that each NutTopping must exhibit mild spiciness through the hasSpiciness relation?", "4": "Is mild spiciness via hasSpiciness obligatory for any individual categorized under NutTopping?", "5": "Can a NutTopping be"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FourCheesesTopping\nDescription: FourCheesesTopping is defined as a subclass of CheeseTopping, representing a specific type of cheese topping distinguished by its composition of four cheeses. It is declared disjoint with GoatsCheeseTopping, MozzarellaTopping, GorgonzolaTopping, and ParmesanTopping, meaning an individual topping cannot simultaneously be classified as FourCheesesTopping and any of these other specific cheese toppings. Additionally, FourCheesesTopping must have a spiciness level that is at least mildly spicy, as specified by the restriction that it has some Mild spiciness.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'MozzarellaTopping', 'GorgonzolaTopping', 'ParmesanTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of FourCheesesTopping necessarily exhibit mild spiciness?", "1": "Is there any FourCheesesTopping without mild spiciness?", "2": "Can a FourCheesesTopping possess more than one kind of spiciness besides mild?", "3": "Does the presence of mild spiciness uniquely characterize FourCheesesTopping among all cheese toppings?", "4": "Is it required for FourCheesesTopping to have at least one attribute related to mild spiciness?", "5": "Can FourCheesesTopping exist without having any spiciness property beyond mild?", "6": "Must every instance of FourChe"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GoatsCheeseTopping\nDescription: GoatsCheeseTopping is defined as a subclass of CheeseTopping and is explicitly disjoint with MozzarellaTopping, GorgonzolaTopping, ParmesanTopping, and FourCheesesTopping, meaning an individual topping cannot simultaneously belong to any of these classes. GoatsCheeseTopping is characterized by the property that it has some degree of mild spiciness (hasSpiciness some Mild), indicating that any topping of this class is mildly spicy.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['MozzarellaTopping', 'GorgonzolaTopping', 'ParmesanTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between GoatsCheeseTopping and other cheese toppings?", "1": "Is there any overlap or intersection allowed between GoatsCheeseTopping and ParmesanTopping?", "2": "Which cheese topping types are declared as mutually exclusive with GoatsCheeseTopping?", "3": "Generated CQs:Is GoatsCheeseTopping considered distinct from FourCheesesTopping within the ontology?", "4": "What are the specified incompatible classes for GoatsCheeseTopping?", "5": "Generated CQs:Can an entity be classified both as GoatsCheeseTopping and GorgonzolaT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MozzarellaTopping\nDescription: MozzarellaTopping is a subclass of CheeseTopping, representing a cheese-based topping specifically characterized by its mild spiciness and Italian origin. It is explicitly disjoint from GoatsCheeseTopping, GorgonzolaTopping, ParmesanTopping, and FourCheesesTopping, ensuring that no individual can simultaneously be an instance of MozzarellaTopping and any of these other cheese topping classes. All individuals of MozzarellaTopping are associated with a mild level of spiciness and must originate from Italy.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'GorgonzolaTopping', 'ParmesanTopping', 'FourCheesesTopping'], 'propertyRestrictions': ['[hasCountryOfOrigin hasValue Italy]', '[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every MozzarellaTopping possess at least one property related to spiciness, where the spiciness is classified as mild?", "1": "Is it required for all instances of MozzarellaTopping to have some association with a mild level of spiciness through the ‘hasSpiciness’ property?", "2": "Can a MozzarellaTopping exist without being linked to any value of mild spiciness via the ‘hasSpiciness’ property?", "3": "Does every MozzarellaTopping necessarily exhibit a relationship with mild spiciness through the ‘hasSpiciness’ property?", "4": "Is there any"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HotSpicedBeefTopping\nDescription: HotSpicedBeefTopping is defined as a subclass of MeatTopping, representing a specific type of meat-based pizza topping. It is disjoint with PeperoniSausageTopping, HamTopping, and ChickenTopping, meaning no individual topping can simultaneously belong to any of these classes and HotSpicedBeefTopping. Members of this class are characterized by having at least some degree of spiciness classified as Hot, distinguishing them from other meat toppings in the ontology.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'HamTopping', 'ChickenTopping'], 'propertyRestrictions': ['[hasSpiciness only Hot]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of HotSpicedBeefTopping necessarily have at least one hasSpiciness relationship with an entity classified as Hot?", "1": "Is it possible for HotSpicedBeefTopping to exist without exhibiting any level of hot spiciness through hasSpiciness?", "2": "Does the presence of hasSpiciness with Hot restrict all instances of HotSpicedBeefTopping exclusively to those possessing this property?", "3": "Can HotSpicedBeefTopping be associated with any form of spiciness beyond Hot via hasSpiciness?", "4": "Are there any cases where HotSp"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: JalapenoPepperTopping\nDescription: JalapenoPepperTopping is formally defined as a subclass of PepperTopping, indicating that it inherits all general characteristics of pepper-based toppings. It is explicitly disjoint with SweetPepperTopping, GreenPepperTopping, and PeperonataTopping, meaning that no individual can simultaneously be an instance of JalapenoPepperTopping and any of these other topping types. Additionally, this class is characterized by the property restriction that every JalapenoPepperTopping must exhibit some level of hot spiciness, ensuring that all members are differentiated by their distinctly hot flavor profile.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['SweetPepperTopping', 'GreenPepperTopping', 'PeperonataTopping'], 'propertyRestrictions': ['[hasSpiciness only Hot]']}\nGenerated CQs:", "generated_outputs": {"0": "Must a JalapenoPepperTopping always possess at least one hasSpiciness relationship to an entity classified as Hot?", "1": "Is it required for any JalapenoPepperTopping to have the quality of being Hot through the hasSpiciness property?", "2": "Does the definition of JalapenoPepperTopping entail that it cannot exist without having some degree or kind of Hotness associated via hasSpiciness?", "3": "Can a JalapenoPepperTopping ever lack the property of being Hot, as indicated by the hasSpiciness relation?", "4": "Is there any Jal"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeperonataTopping\nDescription: PeperonataTopping is defined as a subclass of PepperTopping, meaning it inherits all characteristics typical of pepper-based pizza toppings. It is explicitly disjoint with SweetPepperTopping, GreenPepperTopping, and JalapenoPepperTopping, so no individual can simultaneously belong to any of those classes and PeperonataTopping. Every instance of PeperonataTopping is required to have at least some medium level of spiciness, as specified by its property restriction on hasSpiciness. This ensures that PeperonataTopping is uniquely distinguished by both its type within pepper toppings and its characteristic spiciness.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['SweetPepperTopping', 'GreenPepperTopping', 'JalapenoPepperTopping'], 'propertyRestrictions': ['[hasSpiciness only Medium]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every PeperonataTopping exhibit at least one hasSpiciness relationship with a value of Medium?", "1": "Is it necessary for each PeperonataTopping to possess some level of spiciness classified as Medium through the hasSpiciness property?", "2": "Can a PeperonataTopping exist without having a hasSpiciness relation to anything categorized as Medium?", "3": "Does the definition of PeperonataTopping require the presence of at least one Medium-level spiciness via the hasSpiciness property?", "4": "Is it possible for a PeperonataT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HotGreenPepperTopping\nDescription: HotGreenPepperTopping is a subclass of GreenPepperTopping, defined by the property that it has some level of spiciness classified as Hot. This means that all individuals of this class are green pepper toppings that possess hot spiciness, distinguishing them from milder varieties of green pepper toppings.\nAxiom: {'subClassOf': ['GreenPepperTopping'], 'propertyRestrictions': ['[hasSpiciness only Hot]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance of HotGreenPepperTopping have at least one hasSpiciness relation to something classified as Hot?", "1": "Is it required for any entity categorized under HotGreenPepperTopping to exhibit spiciness characterized as Hot via the hasSpiciness property?", "2": "Can a HotGreenPepperTopping exist without being associated through hasSpiciness to a value of type Hot?", "3": "Does the presence of the hasSpiciness property with a value of Hot necessarily classify an entity as a HotGreenPepperTopping?", "4": "Can there be a HotGreenPepperT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: IceCream\nDescription: IceCream is defined as a subclass of Food, and is explicitly disjoint with Pizza, PizzaTopping, and PizzaBase, ensuring that no individual can simultaneously belong to any of these classes. All members of the IceCream class must have at least one topping from FruitTopping, as specified by the property restriction (hasTopping some FruitTopping). The current modeling highlights a domain constraint issue: since the hasTopping property has Pizza as its domain, any use of hasTopping causes the reasoner to infer membership in Pizza. Combined with the disjointness between Pizza and IceCream, this results in a logical inconsistency, illustrating the importance of carefully aligning property domains with intended class usage.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['Pizza', 'PizzaTopping', 'PizzaBase'], 'propertyRestrictions': ['[hasTopping only FruitTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation is asserted between IceCream and PizzaTopping within the ontology?", "1": "Is there any instance that could simultaneously be classified under both IceCream and PizzaTopping?", "2": "Which entities are declared incompatible with PizzaTopping according to the ontology's structure?", "3": "Is PizzaTopping recognized as mutually exclusive with IceCream in the ontology?", "4": "What other classes are formally distinct from PizzaTopping within the ontology?", "5": "Can an item be categorized both as IceCream and PizzaTopping?", "6": "How does the ontology define the distinction between IceCream and PizzaTopping?", "7": "Are PizzaTopping and"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ParmaHamTopping\nDescription: ParmaHamTopping is defined as a subclass of HamTopping. It is further characterized by the restriction that it must have at least some level of spiciness classified as Mild. This ensures that any individual belonging to the ParmaHamTopping class represents a type of ham topping distinguished by mild spiciness.\nAxiom: {'subClassOf': ['HamTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of ParmaHamTopping necessarily possess at least one hasSpiciness relationship to something classified as Mild?", "1": "Is it required for all ParmaHamToppings to exhibit mild spiciness through the property hasSpiciness?", "2": "Can a ParmaHamTopping exist without having the property hasSpiciness linked to a Mild entity?", "3": "Does the definition of ParmaHamTopping entail that no such topping can lack the connection to mild spiciness via hasSpiciness?", "4": "Can a ParmaHamTopping have more than one hasSpiciness"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SlicedTomatoTopping\nDescription: SlicedTomatoTopping is defined as a subclass of TomatoTopping and is explicitly disjoint with SundriedTomatoTopping, ensuring that no individual can be both a SlicedTomatoTopping and a SundriedTomatoTopping. Members of this class are characterized by the property that they must have at least some level of mild spiciness, as specified by the hasSpiciness restriction.\nAxiom: {'subClassOf': ['TomatoTopping'], 'disjointWith': ['SundriedTomatoTopping'], 'propertyRestrictions': ['[hasSpiciness only Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology differentiate between SlicedTomatoTopping and SundriedTomatoTopping?", "1": "Is there any instance that could simultaneously belong to both SlicedTomatoTopping and SundriedTomatoTopping classes?", "2": "Which other topping types are declared incompatible with SundriedTomatoTopping according to the ontology?", "3": "Does the ontology specify any restrictions for entities classified under SlicedTomatoTopping concerning their spiciness levels?", "4": "Can SlicedTomatoTopping possess qualities beyond those described by the 'hasSpiciness' property?", "5": "What properties must every Sliced"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SultanaTopping\nDescription: SultanaTopping is defined as a subclass of FruitTopping. Members of this class are characterized by having a spiciness property that must include at least some medium spiciness. This ensures that any SultanaTopping instance is a type of fruit topping specifically associated with a medium level of spiciness.\nAxiom: {'subClassOf': ['FruitTopping'], 'propertyRestrictions': ['[hasSpiciness only Medium]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every SultanaTopping instance necessarily have at least one hasSpiciness relation to a value classified as Medium?", "1": "Is it required for all SultanaToppings to exhibit some form of medium spiciness through their hasSpiciness property?", "2": "Can there exist a SultanaTopping without possessing the hasSpiciness property with a value equal to Medium?", "3": "Does the presence of medium spiciness via hasSpiciness represent a necessary characteristic for entities classified as SultanaTopping?", "4": "Are all instances of SultanaTopping inherently linked to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: NonVegetarianPizza\nDescription: NonVegetarianPizza is formally defined as any Pizza that is not a VegetarianPizza. It is explicitly disjoint with VegetarianPizza, ensuring that no individual pizza can be both a NonVegetarianPizza and a VegetarianPizza. The equivalence axiom specifies that NonVegetarianPizza includes all and only those pizzas that are instances of Pizza but not classified as VegetarianPizza.\nAxiom: {'disjointWith': ['VegetarianPizza'], 'equivalentClass': ['(Pizza or not VegetarianPizza)']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between NonVegetarianPizza and VegetarianPizza?", "1": "Is every instance of NonVegetarianPizza necessarily a subtype of Pizza?", "2": "Which classes are specified as disjoint with NonVegetarianPizza?", "3": "Can a NonVegetarianPizza exist without being categorized under Pizza?", "4": "What broader categories encompass NonVegetarianPizza within the ontology?", "5": "Does the classification of a food item as NonVegetarianPizza imply it belongs to the category of Pizza?", "6": "How does the definition of NonVegetarianPizza relate to other food types such as Pizza?", "7": "Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CheeseyPizza\nDescription: CheeseyPizza is formally defined as any Pizza that has at least one cheese topping, expressed by the equivalence axiom: CheeseyPizza ≡ Pizza and (hasTopping some CheeseTopping). This means that every instance of CheeseyPizza must be a pizza with one or more cheese toppings, aligning with the description: any pizza that has at least one cheese topping.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping only CheeseTopping])']}\nGenerated CQs:", "generated_outputs": {"0": "Does every CheeseyPizza necessarily have at least one cheese topping?", "1": "Is it required for all instances classified as CheeseyPizza to possess a cheese topping via hasTopping?", "2": "Can a CheeseyPizza exist without being associated with any cheese topping through hasTopping?", "3": "Is there any CheeseyPizza that does not have at least one cheese topping via hasTopping?", "4": "Does having a cheese topping via hasTopping distinguish every instance of CheeseyPizza from those lacking such a topping?", "5": "Is CheeseyPizza equivalent to the class consisting of pizzas that are either"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Country\nDescription: Country is an enumerated class, defined as exactly the set containing America, England, France, Germany, and Italy. It is equivalent to the intersection of this set and DomainConcept, meaning each Country instance must be one of these individuals and also a DomainConcept. By axiom, no other individuals can be classified as Country; all specified countries are explicitly different from each other.\nAxiom: {'equivalentClass': ['({America, Italy, Germany, France, England} or DomainConcept)']}\nGenerated CQs:", "generated_outputs": {"0": "Does every country necessarily belong to the union of America, Italy, Germany, France, and England?", "1": "Is it correct that a country can only be considered valid if it falls within the specified set of countries or is categorized under DomainConcept?", "2": "Are there any entities classified as countries that do not fit into either America, Italy, Germany, France, or England, but are still members of DomainConcept?", "3": "Can a country exist outside of the defined set of America, Italy, Germany, France, or England, while being included in DomainConcept?", "4": "Does the classification of a country require it to"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: InterestingPizza\nDescription: InterestingPizza is defined as a subclass of Pizza that has at least three toppings, as specified by a minimum cardinality restriction (hasTopping min 3). This class is equivalent to pizzas possessing at least three values for the hasTopping property, regardless of the type of topping. It is important to note that this restriction is not a qualified cardinality constraint (QCR); it does not require that the toppings belong to a specific class such as PizzaTopping. This formalization captures any pizza with three or more toppings without specifying their types.\nAxiom: {'equivalentClass': ['([hasTopping min 3] or Pizza)']}\nGenerated CQs:", "generated_outputs": {"0": "What are all possible subclasses within the union of InterestingPizza and Pizza?", "1": "Does every instance categorized under InterestingPizza also fall under Pizza?", "2": "Which classes are considered broader than InterestingPizza in the context of Pizza?", "3": "Is there any individual classified as both InterestingPizza and Pizza?", "4": "Can an entity be classified as Pizza if it is not an InterestingPizza?", "5": "What are the direct superclasses of InterestingPizza when considering its equivalence with Pizza?", "6": "Are all instances of InterestingPizza necessarily members of the broader Pizza group?", "7": "Is the concept of InterestingPizza fully encompassed by the category of Pizza?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MeatyPizza\nDescription: MeatyPizza is defined as any pizza (Pizza) that has at least one meat topping, formalized through an existential restriction stating that members of this class must bear at least one hasTopping relationship to an individual of class MeatTopping. This class is equivalent to the intersection of Pizza and those entities with some MeatTopping as a topping, ensuring all MeatyPizza instances feature at least one meat-based topping.\nAxiom: {'equivalentClass': ['([hasTopping only MeatTopping] and Pizza)']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified under MeatyPizza necessarily include at least one hasTopping relation to a MeatTopping?", "1": "Is MeatyPizza synonymous with the set of pizzas each having exactly one or more MeatToppings via hasTopping?", "2": "Are there any individuals that are categorized as MeatyPizza but lack the hasTopping association with any MeatTopping?", "3": "Can MeatyPizza be expressed equivalently as the union of all pizzas paired with at least one MeatTopping through hasTopping?", "4": "Does MeatyPizza cover all cases where a pizza contains at least one portion linked via"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyPizza\nDescription: SpicyPizza is defined as any pizza (i.e., an instance of the class Pizza) that has at least one topping which is a SpicyTopping. This equivalence axiom ensures that all and only those pizzas with some spicy topping are classified under SpicyPizza. Thus, membership in the SpicyPizza class is determined precisely by the presence of at least one spicy topping.\nAxiom: {'equivalentClass': ['(Pizza or [hasTopping some SpicyTopping])']}\nGenerated CQs:", "generated_outputs": {"0": "Does SpicyPizza encompass all instances that have at least one topping categorized as SpicyTopping?", "1": "Is every item classified under SpicyPizza necessarily associated with a SpicyTopping via the hasTopping property?", "2": "Are SpicyPizza and Pizza with some SpicyTopping equivalent classes within the ontology?", "3": "Can SpicyPizza be defined equivalently as either a Pizza or a Pizza with at least one SpicyTopping?", "4": "Which entities fall into the category of SpicyPizza, given its definition involving specific types of toppings?", "5": "Does having a SpicyTopping qualify an individual"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyPizzaEquivalent\nDescription: SpicyPizzaEquivalent is defined as any Pizza that has at least one topping which is both a PizzaTopping and has a spiciness level of Hot. This equivalence axiom provides an alternative to approaches relying on a predefined SpicyTopping class, specifying instead that membership in SpicyPizzaEquivalent requires the existence of a topping meeting both conditions. This ensures precise classification of spicy pizzas based on their actual toppings' spiciness attributes.\nAxiom: {'equivalentClass': ['(Pizza and [hasTopping some ([hasSpiciness some Hot] or PizzaTopping)])']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified under SpicyPizzaEquivalent necessarily have at least one topping categorized as either Hot or PizzaTopping?", "1": "Is SpicyPizzaEquivalent equivalent to the set of all Pizzas that include a topping with 'Hot' spiciness or are themselves PizzaToppings?", "2": "Can SpicyPizzaEquivalent be defined as any Pizza linked via hasTopping to items that are either Hot or PizzaTopping?", "3": "Is it correct that SpicyPizzaEquivalent includes only those Pizzas that are associated with at least one Hot-topped entity or a PizzaTopping?", "4": "Does the definition of"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SpicyTopping\nDescription: SpicyTopping is defined as an equivalent class to pizza toppings that possess a spiciness level of Hot. This means every SpicyTopping is a PizzaTopping and must have at least one instance of hot spiciness. Formally, individuals in this class are restricted to those pizza toppings that are characterized by having a hot spiciness attribute.\nAxiom: {'equivalentClass': ['([hasSpiciness only Hot] or PizzaTopping)']}\nGenerated CQs:", "generated_outputs": {"0": "Does SpicyTopping include any entities that do not have either the hasSpiciness property set to Hot or belong to the PizzaTopping class?", "1": "Is it possible for something to be classified as SpicyTopping without being associated with Hot through hasSpiciness or without belonging to PizzaTopping?", "2": "Are all instances of SpicyTopping necessarily either PizzaTopping or possess the Hot value via hasSpiciness?", "3": "Can an entity be considered SpicyTopping if it does not fulfill both criteria of being a PizzaTopping or possessing Hot spiciness?", "4": "Does"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ThinAndCrispyPizza\nDescription: ThinAndCrispyPizza is formally defined as a subclass of Pizza whose base is exclusively of type ThinAndCrispyBase. This means any individual classified as a ThinAndCrispyPizza must be a Pizza and can only have ThinAndCrispyBase as its base, with no other base types permitted. This equivalence axiom precisely characterizes ThinAndCrispyPizza by its unique crust style.\nAxiom: {'equivalentClass': ['(Pizza and [hasBase some ThinAndCrispyBase])']}\nGenerated CQs:", "generated_outputs": {"0": "Does ThinAndCrispyPizza encompass all instances that are both Pizza and have at least one base of type ThinAndCrispyBase?", "1": "Is every instance classified under ThinAndCrispyPizza necessarily characterized by being a Pizza with a ThinAndCrispyBase?", "2": "Are ThinAndCrispyPizza and (Pizza and hasBase some ThinAndCrispyBase) logically equivalent classes within the ontology?", "3": "Can ThinAndCrispyPizza be represented equivalently as (Pizza and hasBase some ThinAndCrispyBase)?", "4": "Does ThinAndCrispyPizza include"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizzaEquivalent1\nDescription: VegetarianPizzaEquivalent1 is defined as any pizza (member of the Pizza class) whose toppings, if present, are exclusively vegetarian; that is, it only has toppings that are instances of VegetarianTopping, or it has no toppings at all. Formally, it is equivalent to the intersection of Pizza and those that satisfy the restriction 'hasTopping only VegetarianTopping'. According to the description, this class should be inferred to be equivalent to VegetarianPizzaEquiv2 but is not equivalent to the broader VegetarianPizza class, as the latter does not assume that PizzaTopping encompasses all possible toppings.\nAxiom: {'equivalentClass': ['(Pizza and [hasTopping some VegetarianTopping])']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified under VegetarianPizzaEquivalent1 necessarily have at least one topping that is a VegetarianTopping?", "1": "Is it required for each VegetarianPizzaEquivalent1 to possess some hasTopping relationship with a VegetarianTopping?", "2": "Can a VegetarianPizzaEquivalent1 exist without being associated via hasTopping to any VegetarianTopping?", "3": "Does the presence of a non-VegetarianTopping preclude an entity from belonging to the VegetarianPizzaEquivalent1 class?", "4": "Is there any individual that can be both a VegetarianPizzaEquivalent1 and lack a hasT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizzaEquivalent2\nDescription: VegetarianPizzaEquivalent2 is defined as a class equivalent to pizzas that have only sauce, cheese, vegetable, fruit, nut, or herb & spice toppings—no other topping types are permitted. This definition provides an alternative to VegetarianPizzaEquiv1 by specifying allowed toppings directly, avoiding dependency on a pre-defined VegetarianTopping class. However, it is noted that this approach may be less maintainable and is not equivalent to the original VegetarianPizza class.\nAxiom: {'equivalentClass': ['(Pizza and [hasTopping some (SauceTopping or CheeseTopping or VegetableTopping or FruitTopping or NutTopping or HerbSpiceTopping)])']}\nGenerated CQs:", "generated_outputs": {"0": "Are all instances classified under VegetarianPizzaEquivalent2 necessarily Pizza entities with at least one topping from SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping?", "1": "Does the inclusion of any additional topping beyond those specified in the query result in a classification outside of VegetarianPizzaEquivalent2?", "2": "Can a pizza be categorized as VegetarianPizzaEquivalent2 if it contains any topping type other than SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianTopping\nDescription: VegetarianTopping is formally defined as a pizza topping that must be one of the following: SauceTopping, CheeseTopping, VegetableTopping, FruitTopping, NutTopping, or HerbSpiceTopping. This equivalence axiom ensures that every VegetarianTopping is a subclass of PizzaTopping and cannot be any topping outside this specified set. In practice, this means only toppings within these categories are considered vegetarian according to the ontology.\nAxiom: {'equivalentClass': ['(PizzaTopping or (SauceTopping and CheeseTopping and VegetableTopping and FruitTopping and NutTopping and HerbSpiceTopping))']}\nGenerated CQs:", "generated_outputs": {"0": "Does VegetarianTopping include all instances of SauceTopping?", "1": "Is it necessary for a class to be classified as VegetarianTopping if it contains at least one instance of SauceTopping?", "2": "Can a VegetarianTopping exist without having any SauceTopping as part of its members?", "3": "Does the classification of VegetarianTopping encompass all subclasses of SauceTopping?", "4": "Are SauceTopping and VegetarianTopping mutually exclusive classifications?", "5": "Is there any individual that can simultaneously belong to both SauceTopping and VegetarianTopping groups?", "6": "Which other classes, besides SauceT"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: AmericanHot\nDescription: AmericanHot is a subclass of NamedPizza, defined uniquely by its combination of toppings and origin. It is explicitly disjoint from a variety of other specific pizzas, meaning an individual pizza cannot simultaneously belong to AmericanHot and any of those disjoint classes. \n\nEvery AmericanHot pizza must have as toppings at least one of each: HotGreenPepperTopping, JalapenoPepperTopping, TomatoTopping, PeperoniSausageTopping, and MozzarellaTopping. The pizza must also have its country of origin specified as America. Additionally, the only allowable toppings on an AmericanHot pizza are MozzarellaTopping, PeperoniSausageTopping, JalapenoPepperTopping, TomatoTopping, or HotGreenPepperTopping—no additional topping types are permitted. \n\nThese axioms ensure AmericanHot is a distinct, well-defined pizza variety with specific ingredient and classification requirements.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons', 'Parmense'], 'propertyRestrictions': ['[hasTopping some HotGreenPepperTopping]', '[hasTopping some JalapenoPepperTopping]', '[hasTopping some TomatoTopping]', '[hasCountryOfOrigin hasValue America]', '[hasTopping some PeperoniSausageTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or PeperoniSausageTopping or JalapenoPepperTopping or TomatoTopping or HotGreenPepperTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "Are there any instances of AmericanHot that do not include at least one HotGreenPepperTopping among their toppings?", "1": "Is it required for every AmericanHot pizza to feature a HotGreenPepperTopping as part of its topping selection?", "2": "Can an AmericanHot exist without having a HotGreenPepperTopping assigned to it through the hasTopping property?", "3": "Does the presence of a HotGreenPepperTopping serve as a necessary condition for an entity to be classified as an AmericanHot?", "4": "Is it possible for an AmericanHot to lack the HotGreenPepperTopping among"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Caprina\nDescription: Caprina is defined as a subclass of NamedPizza and is explicitly disjoint from a range of other pizzas, ensuring that no individual can simultaneously be classified as Caprina and any of the listed pizzas (such as LaReine, Margherita, or FourSeasons). Caprina pizzas are characterized by specific topping requirements: they must include at least some TomatoTopping, SundriedTomatoTopping, MozzarellaTopping, and GoatsCheeseTopping, and are restricted to having only MozzarellaTopping, TomatoTopping, SundriedTomatoTopping, or GoatsCheeseTopping as toppings—no other toppings are permitted. This formalization ensures that any pizza classified as Caprina features this unique and exclusive combination of toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons', 'Mushroom'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some SundriedTomatoTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or SundriedTomatoTopping or GoatsCheeseTopping)]', '[hasTopping some GoatsCheeseTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology ensure that Caprina and FourSeasons pizzas cannot coexist as instances?", "1": "Is there any overlap allowed between individuals classified under Caprina and those under FourSeasons?", "2": "Which pizza classes are specified as mutually exclusive with Caprina?", "3": "Does the ontology enforce the distinctness of Caprina and AmericanHot pizzas?", "4": "What are the disjointness constraints established for Caprina within the ontology?", "5": "Can an entity belong to both Caprina and Siciliana categories?", "6": "How does the ontology prevent Caprina from being assigned properties characteristic of Napoletana?", "7": "Are all entities categorized"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FruttiDiMare\nDescription: FruttiDiMare is a subclass of NamedPizza, representing a specific pizza variety. It is explicitly disjoint with a range of other pizzas, ensuring that an individual pizza cannot simultaneously be a FruttiDiMare and any of the listed disjoint pizzas (e.g., Mushroom, Margherita, Capricciosa). A FruttiDiMare pizza is characterized by its toppings: it must have at least some TomatoTopping, GarlicTopping, and MixedSeafoodTopping, and all its toppings are restricted to being either GarlicTopping, TomatoTopping, or MixedSeafoodTopping (no other toppings are permitted). This definition formalizes FruttiDiMare pizzas as a distinct seafood pizza with a strict combination of garlic, tomato, and mixed seafood as its exclusive toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons', 'Rosa'], 'propertyRestrictions': ['[hasTopping only (GarlicTopping or TomatoTopping or MixedSeafoodTopping)]', '[hasTopping some TomatoTopping]', '[hasTopping some GarlicTopping]', '[hasTopping some MixedSeafoodTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "Are there any other classes defined besides FruttiDiMare within the hierarchy of NamedPizza?", "1": "Which types fall under the category of NamedPizza, including FruttiDiMare?", "2": "What broader categories does FruttiDiMare belong to within the ontology?", "3": "Is every instance classified under NamedPizza also considered an instance of FruttiDiMare?", "4": "Can something be categorized both as FruttiDiMare and another type that's not specified as a subclass of NamedPizza?", "5": "How does the ontology distinguish between FruttiDiMare and those NamedP"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Margherita\nDescription: Margherita is defined as a subclass of NamedPizza, explicitly disjoint with various other named pizzas such as Mushroom, LaReine, and AmericanHot—ensuring that no individual pizza can simultaneously be classified as Margherita and any of those disjoint pizzas. Every Margherita must have at least one tomato topping and at least one mozzarella topping, and may have only mozzarella or tomato toppings (no other toppings are permitted). This formalization precisely characterizes Margherita pizzas by the exclusivity of their ingredients and distinguishes them from other named pizza varieties.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons', 'PrinceCarlo'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "Can a Margherita pizza have more than two types of toppings?", "1": "Is it required for every Margherita pizza to include exactly two kinds of toppings?", "2": "Does the ontology permit a single Margherita pizza to possess both a MozzarellaTopping and a TomatoTopping simultaneously?", "3": "Can a Margherita pizza exist without either a MozzarellaTopping or a TomatoTopping?", "4": "Must all Margherita pizzas contain exclusively these two types of toppings?", "5": "Is there any instance of Margherita that does not consist solely of MozzarellaToppings or TomatoToppings?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Parmense\nDescription: Parmense is defined as a subclass of NamedPizza and is explicitly disjoint from a wide range of other pizza types, ensuring that no individual pizza can simultaneously belong to Parmense and any of the disjoint classes. Members of Parmense must have at least one topping each of tomato, ham, parmesan, mozzarella, and asparagus. Additionally, Parmense pizzas are restricted to only having mozzarella, tomato, ham, parmesan, or asparagus as toppings, with no other topping types permitted. This precisely delineates Parmense based on its unique combination of required and allowed toppings.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons', 'Mushroom'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some HamTopping]', '[hasTopping some ParmesanTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some AsparagusTopping]', '[hasTopping only (MozzarellaTopping or TomatoTopping or HamTopping or ParmesanTopping or AsparagusTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of Parmense necessarily include at least one topping that is both a MozzarellaTopping and a TomatoTopping?", "1": "Is it possible for a Parmense to exist without being associated with either a MozzarellaTopping or a TomatoTopping through the hasTopping property?", "2": "Can a Parmense always be characterized by the presence of some MozzarellaTopping and some TomatoTopping via hasTopping?", "3": "Does the existence of a Parmense imply the presence of at least one MozzarellaTopping and one TomatoTopping among its hasTopping relations?", "4": "Are all Parm"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: QuattroFormaggi\nDescription: QuattroFormaggi is defined as a subclass of NamedPizza, and is explicitly disjoint with a comprehensive list of other pizza varieties (including Mushroom, LaReine, Napoletana, and others), ensuring that no pizza can belong to both QuattroFormaggi and any of those classes simultaneously. A QuattroFormaggi pizza is required to have at least one topping of TomatoTopping and at least one topping of FourCheesesTopping, and is restricted to having only TomatoTopping or FourCheesesTopping as toppings, with no additional varieties permitted. This formalization ensures that QuattroFormaggi uniquely represents a pizza distinguished by its combination of tomato and four-cheese toppings, and by its mutual exclusivity with other named pizzas.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'Giardiniera', 'FourSeasons', 'PrinceCarlo'], 'propertyRestrictions': ['[hasTopping some TomatoTopping]', '[hasTopping some FourCheesesTopping]', '[hasTopping only (FourCheesesTopping or TomatoTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "Can QuattroFormaggi exist alongside another specific type of pizza from the exhaustive list?", "1": "Is there any overlap between the QuattroFormaggi class and any other variety listed under 'disjointWith'?", "2": "Which types are specified as mutually exclusive with QuattroFormaggi within the ontology?", "3": "Does every instance of QuattroFormaggi preclude membership in any of the other disjointed pizza categories?", "4": "What set of distinct pizza classifications does the ontology define such that none may include a member that also belongs to QuattroFormaggi?", "5": "Is QuattroFormaggi categorized among those entities that cannot coexist"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SloppyGiuseppe\nDescription: SloppyGiuseppe is defined as a subclass of NamedPizza and is disjoint with a range of other specific pizza classes, ensuring that no individual pizza can simultaneously belong to these classes and SloppyGiuseppe. Members of the SloppyGiuseppe class are characterized by the mandatory presence of HotSpicedBeefTopping, TomatoTopping, GreenPepperTopping, MozzarellaTopping, and OnionTopping. Furthermore, SloppyGiuseppe pizzas are restricted to have only these toppings, meaning no other types of toppings are permitted. This formalization precisely specifies both the unique composition and distinct identity of SloppyGiuseppe within the named pizza hierarchy.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'Veneziana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'FruttiDiMare', 'Siciliana', 'Cajun', 'Margherita', 'American', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons', 'Capricciosa'], 'propertyRestrictions': ['[hasTopping some HotSpicedBeefTopping]', '[hasTopping some TomatoTopping]', '[hasTopping some GreenPepperTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasTopping only (HotSpicedBeefTopping or MozzarellaTopping or TomatoTopping or OnionTopping or GreenPepperTopping)]']}\nGenerated CQs:", "generated_outputs": {"0": "Are all instances of SloppyGiuseppe required to have at least one hasTopping relationship with MozzarellaTopping?", "1": "Does every SloppyGiuseppe necessarily include a MozzarellaTopping through the hasTopping property?", "2": "Can a SloppyGiuseppe exist without having any hasTopping relation to MozzarellaTopping?", "3": "Is it possible for a SloppyGiuseppe not to possess the hasTopping property for MozzarellaTopping?", "4": "Must every SloppyGiuseppe feature MozzarellaTopping as part of its hasTopping set?", "5": "Does the definition of SloppyGiuseppe"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Veneziana\nDescription: Veneziana is a subclass of NamedPizza, representing a specific type of pizza originating from Italy. It is explicitly disjoint with a list of other named pizzas, ensuring that no pizza can simultaneously be classified as Veneziana and any of those pizzas.\n\nMembers of the Veneziana class are characterized by having only the following toppings: MozzarellaTopping, TomatoTopping, SultanaTopping, OnionTopping, CaperTopping, OliveTopping, and PineKernels. Furthermore, every Veneziana pizza must have at least one instance of each of the following toppings: PineKernels, TomatoTopping, OliveTopping, SultanaTopping, MozzarellaTopping, OnionTopping, and CaperTopping. Additionally, the country of origin for Veneziana pizzas is required to be Italy. This formalization ensures that any pizza classified as Veneziana strictly follows this combination of toppings and origin.\nAxiom: {'subClassOf': ['NamedPizza'], 'disjointWith': ['Mushroom', 'LaReine', 'Napoletana', 'AmericanHot', 'UnclosedPizza', 'PrinceCarlo', 'Capricciosa', 'FruttiDiMare', 'Siciliana', 'Margherita', 'American', 'SloppyGiuseppe', 'Caprina', 'Soho', 'Parmense', 'PolloAdAstra', 'Fiorentina', 'Rosa', 'QuattroFormaggi', 'Giardiniera', 'FourSeasons', 'Cajun'], 'propertyRestrictions': ['[hasTopping only (MozzarellaTopping or TomatoTopping or SultanaTopping or OnionTopping or CaperTopping or OliveTopping or PineKernels)]', '[hasTopping some PineKernels]', '[hasTopping some TomatoTopping]', '[hasTopping some OliveTopping]', '[hasTopping some SultanaTopping]', '[hasTopping some MozzarellaTopping]', '[hasTopping some OnionTopping]', '[hasCountryOfOrigin hasValue Italy]', '[hasTopping some CaperTopping]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between Veneziana and other named pizzas?", "1": "Is there any overlap allowed between the categories of Veneziana and American?", "2": "Which pizzas are declared as incompatible with Veneziana within the ontology?", "3": "Generated CQs:Is Veneziana considered disjoint with Capricciosa according to the ontology?", "4": "Which classes are specified as mutually exclusive with Veneziana?", "5": "Generated CQs:Does the ontology define a restriction such that a Veneziana cannot possess any topping except those listed?", "6": "Can a Veneziana pizza include any topping beyond what's explicitly permitted?", "7": "Generated CQs:Is"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: MixedSeafoodTopping\nDescription: MixedSeafoodTopping is defined as a subclass of FishTopping, indicating it inherits all characteristics of fish-based toppings. It is explicitly disjoint with AnchoviesTopping, meaning no individual topping can be both a MixedSeafoodTopping and an AnchoviesTopping. This ensures that a MixedSeafoodTopping never consists solely of anchovies and represents a distinct category of seafood toppings.\nAxiom: {'subClassOf': ['FishTopping'], 'disjointWith': ['AnchoviesTopping', 'PrawnsTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology distinguish between MixedSeafoodTopping and PrawnsTopping?", "1": "Is there any instance that could simultaneously belong to both MixedSeafoodTopping and PrawnsTopping classes?", "2": "Which other topping types are specified as mutually exclusive with PrawnsTopping according to the ontology?", "3": "Next, what are the permitted alternatives for PrawnsTopping within the ontology hierarchy?", "4": "Can MixedSeafoodTopping be classified under any broader category than PrawnsTopping?", "5": "What specific differences exist in classification structure between MixedSeafoodTopping and Prawns"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CaperTopping\nDescription: CaperTopping is defined as a subclass of VegetableTopping, indicating it is a type of vegetable-based topping. It is disjoint with other specific vegetable toppings such as RocketTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, ensuring that an individual cannot simultaneously belong to CaperTopping and any of these classes. Additionally, every CaperTopping is characterized by having at least some level of mild spiciness, as specified by the property restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping', 'LeekTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every instance classified under CaperTopping possess at least one hasSpiciness relation to something mild?", "1": "Is there any CaperTopping without the property hasSpiciness being applied to a mild entity?", "2": "Does the presence of mild spiciness via hasSpiciness qualify an individual as a CaperTopping?", "3": "Can a CaperTopping exist if it does not have some level of spiciness through hasSpiciness?", "4": "Does CaperTopping require the existence of at least one mild value for the property hasSpiciness?", "5": "Is it possible"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: LeekTopping\nDescription: LeekTopping is defined as a subclass of VegetableTopping, and it is explicitly disjoint from a number of other vegetable-based toppings, including RocketTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, PetitPoisTopping, and TomatoTopping—ensuring no individual can simultaneously belong to both LeekTopping and any of these classes. Additionally, every LeekTopping individual is characterized by having some level of mild spiciness, as specified by the restriction (hasSpiciness some Mild).\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['RocketTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'PetitPoisTopping', 'TomatoTopping', 'MushroomTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does LeekTopping allow for individuals that have at least one property restriction related to spiciness?", "1": "Is it necessary for all instances of LeekTopping to possess some property via hasSpiciness that is classified as Mild?", "2": "Can LeekTopping exist without being associated through hasSpiciness to anything categorized as Mild?", "3": "Does the presence of hasSpiciness with a value of Mild define LeekTopping among its properties?", "4": "Are all LeekTopping entities required to exhibit at least one instance of the hasSpiciness relation with a quality of Mild?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: OnionTopping\nDescription: OnionTopping is defined as a subclass of VegetableTopping and is explicitly disjoint with LeekTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, PetitPoisTopping, and TomatoTopping, meaning no individual can be an instance of OnionTopping and any of those classes simultaneously. Members of this class are characterized by having at least medium spiciness, as specified by the restriction that they must have some level of spiciness classified as medium.\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['LeekTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping', 'RocketTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every OnionTopping possess at least one hasSpiciness relation to an entity classified as Medium?", "1": "Is it required for all instances of OnionTopping to exhibit spiciness categorized as medium through the property hasSpiciness?", "2": "Can there exist an OnionTopping without any association via hasSpiciness to a value designated as medium?", "3": "Does the presence of medium-level spiciness, as indicated by hasSpiciness, serve as a defining characteristic for all entities classified under OnionTopping?", "4": "Does the definition of OnionTopping necessitate the existence of at least one"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: RocketTopping\nDescription: RocketTopping is defined as a subclass of VegetableTopping, representing toppings derived from rocket (arugula). It is explicitly disjoint with other specified vegetable toppings such as LeekTopping, OnionTopping, SpinachTopping, GarlicTopping, ArtichokeTopping, PepperTopping, AsparagusTopping, OliveTopping, CaperTopping, MushroomTopping, and PetitPoisTopping, ensuring that no topping can belong to RocketTopping and any of these classes simultaneously. Additionally, every RocketTopping is characterized by having at least some medium level of spiciness, as specified by the property restriction [hasSpiciness some Medium].\nAxiom: {'subClassOf': ['VegetableTopping'], 'disjointWith': ['LeekTopping', 'OnionTopping', 'SpinachTopping', 'GarlicTopping', 'ArtichokeTopping', 'PepperTopping', 'AsparagusTopping', 'OliveTopping', 'CaperTopping', 'MushroomTopping', 'PetitPoisTopping', 'TomatoTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every RocketTopping necessarily have at least one hasSpiciness relationship with something classified as Medium?", "1": "Is it required for any instance of RocketTopping to possess some value of spiciness that falls under the category of Medium?", "2": "Can there exist a RocketTopping without exhibiting any hasSpiciness property of type Medium?", "3": "Does the presence of the hasSpiciness property with a value of Medium define all instances of RocketTopping?", "4": "Are all individuals categorized as RocketTopping constrained to include at least one association via hasSpiciness to an entity with a Medium level"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: CajunSpiceTopping\nDescription: CajunSpiceTopping is defined as a subclass of HerbSpiceTopping, meaning it inherits all characteristics of herb and spice-based toppings. Additionally, every instance of CajunSpiceTopping is required to have at least some level of hot spiciness, as specified by the restriction “hasSpiciness some Hot.” No explicit disjointness with other classes is asserted. This formalization ensures that all members of CajunSpiceTopping are distinguished by their hot spiciness.\nAxiom: {'subClassOf': ['HerbSpiceTopping'], 'disjointWith': ['RosemaryTopping'], 'propertyRestrictions': ['[hasSpiciness some Hot]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology define the distinction between CajunSpiceTopping and RosemaryTopping?", "1": "Is any individual allowed to simultaneously belong to both CajunSpiceTopping and RosemaryTopping?", "2": "Which entities are declared as mutually exclusive with RosemaryTopping within the ontology?", "3": "Does the presence of a RosemaryTopping preclude the possibility of having a CajunSpiceTopping?", "4": "What are the logical differences established between CajunSpiceTopping and RosemaryTopping?", "5": "Can an object be classified under both RosemaryTopping and CajunSpice"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: FishTopping\nDescription: FishTopping is defined as a subclass of PizzaTopping and is explicitly disjoint with SauceTopping, VegetableTopping, CheeseTopping, HerbSpiceTopping, NutTopping, and FruitTopping, meaning no individual can belong to both FishTopping and any of these other topping types. Members of this class are characterized by having at least some level of mild spiciness, as specified by the property restriction [hasSpiciness some Mild]. This ensures that any FishTopping must exhibit mild spiciness and belongs exclusively within the category of pizza toppings derived from fish.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['SauceTopping', 'VegetableTopping', 'CheeseTopping', 'HerbSpiceTopping', 'NutTopping', 'FruitTopping', 'MeatTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does FishTopping allow for any overlap with MeatTopping?", "1": "Is there any instance that could simultaneously belong to both FishTopping and MeatTopping categories?", "2": "Which classes are asserted as mutually exclusive with FishTopping within the ontology?", "3": "Does the ontology define any entities that cannot be classified under either FishTopping or MeatTopping?", "4": "Can something be classified as both a FishTopping and a MeatTopping according to the ontology?", "5": "What are the distinct, non-overlapping topping categories as defined by their disjunction with FishTopping?", "6": "Is MeatTopping required"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: HerbSpiceTopping\nDescription: HerbSpiceTopping is defined as a subclass of PizzaTopping, representing a category of pizza toppings that consist exclusively of herbs and spices. It is explicitly disjoint from MeatTopping, SauceTopping, VegetableTopping, CheeseTopping, NutTopping, and FruitTopping, ensuring that any individual topping classified under HerbSpiceTopping cannot simultaneously belong to any of these other topping categories. This formalization distinguishes herb and spice-based toppings from other common pizza topping groups.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'SauceTopping', 'VegetableTopping', 'CheeseTopping', 'NutTopping', 'FruitTopping', 'FishTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology define the distinction between HerbSpiceTopping and FishTopping?", "1": "Is it possible for a single entity to be both a HerbSpiceTopping and a FishTopping according to the ontology?", "2": "Which classes are formally specified as disjoint with FishTopping within the ontology?", "3": "Next, what are the types of entities that cannot coexist with FishTopping as defined in the ontology?", "4": "Can you illustrate the logical separation between HerbSpiceTopping and FishTopping within the ontology structure?", "5": "Are there any entities classified as neither HerbSpiceTopping nor"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SauceTopping\nDescription: SauceTopping is defined as a subclass of PizzaTopping, representing a specific type of topping used on pizzas. It is explicitly disjoint with MeatTopping, VegetableTopping, CheeseTopping, HerbSpiceTopping, NutTopping, and FruitTopping, ensuring that no individual can simultaneously belong to SauceTopping and to any of these other topping categories. This formalization distinguishes sauce-based pizza toppings as a unique class, separate from other major topping types.\nAxiom: {'subClassOf': ['PizzaTopping'], 'disjointWith': ['MeatTopping', 'VegetableTopping', 'CheeseTopping', 'HerbSpiceTopping', 'NutTopping', 'FruitTopping', 'FishTopping']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology restrict the co-classification of SauceTopping and FishTopping?", "1": "Is there any instance that could be classified under both SauceTopping and FishTopping?", "2": "Which classes are formally specified as incompatible with FishTopping within the ontology?", "3": "Does the ontology allow for objects to be members of both SauceTopping and FishTopping categories?", "4": "What is the logical separation between SauceTopping and FishTopping in the ontology?", "5": "Can a single entity be recognized as both a SauceTopping and a FishTopping according to the ontology?", "6": "How do the disjoint"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: GorgonzolaTopping\nDescription: GorgonzolaTopping is a subclass of CheeseTopping, explicitly disjoint with GoatsCheeseTopping, ParmesanTopping, and FourCheesesTopping—ensuring no individual can belong to more than one of these classes simultaneously. Members of GorgonzolaTopping are characterized by having at least one association with mild spiciness through the hasSpiciness property. This formal definition ensures that any GorgonzolaTopping is a unique cheese topping distinguished by its mild spiciness.\nAxiom: {'subClassOf': ['CheeseTopping'], 'disjointWith': ['GoatsCheeseTopping', 'ParmesanTopping', 'FourCheesesTopping', 'MozzarellaTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology differentiate between GorgonzolaTopping and MozzarellaTopping?", "1": "Is there any instance that could simultaneously belong to both GorgonzolaTopping and MozzarellaTopping categories?", "2": "Which other cheese toppings are declared as mutually exclusive with MozzarellaTopping in the ontology?", "3": "Does the ontology permit any class besides MozzarellaTopping to coexist with it?", "4": "What distinctiveness or separation does the ontology define for MozzarellaTopping relative to GorgonzolaTopping?", "5": "Can you identify all classes within the cheese topping hierarchy that have a disjoint relationship with"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ChickenTopping\nDescription: ChickenTopping is defined as a subclass of MeatTopping, and is explicitly disjoint with PeperoniSausageTopping and HotSpicedBeefTopping—no individual can be classified as both ChickenTopping and either of those two classes. Any instance of ChickenTopping is restricted to having at least some level of mild spiciness through the hasSpiciness property. This ensures that ChickenTopping represents a unique, meat-based pizza topping that is distinctly mild and never overlaps with pepperoni sausage or hot spiced beef varieties.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['PeperoniSausageTopping', 'HotSpicedBeefTopping', 'HamTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does ChickenTopping have any overlap in classification with HamTopping?", "1": "Which entities are specified as mutually exclusive between ChickenTopping and HamTopping?", "2": "Is there any instance that belongs simultaneously to both ChickenTopping and HamTopping categories?", "3": "Does ChickenTopping represent a distinct category separate from HamTopping within the ontology?", "4": "What are all the disjoint class relationships defined for ChickenTopping?", "5": "How does the ontology enforce exclusivity between ChickenTopping and HamTopping?", "6": "Is ChickenTopping categorized under the broader group of HamTopping in the ontology?", "7": "What other"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PeperoniSausageTopping\nDescription: PeperoniSausageTopping is a subclass of MeatTopping, indicating it is a type of meat-based topping. It is explicitly disjoint from HamTopping and ChickenTopping, ensuring that no individual topping can simultaneously be classified as PeperoniSausageTopping and either of those classes. Members of this class are characterized by having at least medium spiciness, as specified by the property restriction hasSpiciness some Medium.\nAxiom: {'subClassOf': ['MeatTopping'], 'disjointWith': ['HamTopping', 'ChickenTopping', 'HotSpicedBeefTopping'], 'propertyRestrictions': ['[hasSpiciness some Medium]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance of PeperoniSausageTopping necessarily have at least one hasSpiciness relationship with something classified as Medium?", "1": "Is it required for any PeperoniSausageTopping to possess some level of spiciness rated as Medium through the hasSpiciness property?", "2": "Can a PeperoniSausageTopping exist without being associated via hasSpiciness to anything with a spiciness level of Medium?", "3": "Is there any PeperoniSausageTopping that does not satisfy the condition of having hasSpiciness to at least one"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: ThinAndCrispyBase\nDescription: ThinAndCrispyBase is defined as a subclass of PizzaBase, indicating that every instance of ThinAndCrispyBase is a type of PizzaBase. There are no explicit disjointness axioms specified, so ThinAndCrispyBase may overlap with other subclasses of PizzaBase unless otherwise stated. This class formalization is used to categorize pizza bases characterized by their thin and crispy texture within the pizza ontology.\nAxiom: {'subClassOf': ['PizzaBase'], 'disjointWith': ['DeepPanBase']}\nGenerated CQs:", "generated_outputs": {"0": "What logical separation exists between ThinAndCrispyBase and DeepPanBase within the ontology?", "1": "Is it permitted for an entity to belong simultaneously to both ThinAndCrispyBase and DeepPanBase?", "2": "Which classes are declared as mutually exclusive with DeepPanBase?", "3": "://", "4": "Which entities are defined as incompatible with DeepPanBase according to the ontology's structure?", "5": "Can something be classified under both ThinAndCrispyBase and another base type besides DeepPanBase?", "6": "What are the distinct categories recognized as separate from DeepPanBase in this context?", "7": "Does the ontology"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: SweetPepperTopping\nDescription: SweetPepperTopping is defined as a subclass of PepperTopping and is explicitly disjoint from both GreenPepperTopping and PeperonataTopping, ensuring that no individual can simultaneously be a member of these classes. All individuals of SweetPepperTopping must have at least some degree of mild spiciness, as indicated by the property restriction [hasSpiciness some Mild]. This class formalizes toppings characterized by their mild flavor profile and distinct identity from other pepper-based toppings.\nAxiom: {'subClassOf': ['PepperTopping'], 'disjointWith': ['GreenPepperTopping', 'PeperonataTopping', 'JalapenoPepperTopping'], 'propertyRestrictions': ['[hasSpiciness some Mild]']}\nGenerated CQs:", "generated_outputs": {"0": "Does every instance classified under SweetPepperTopping necessarily exhibit mild spiciness through its hasSpiciness relationship?", "1": "Is it required for any entity categorized as SweetPepperTopping to possess at least one association via hasSpiciness to Mild?", "2": "Can there exist a SweetPepperTopping without having the hasSpiciness property linked to Mild?", "3": "Is SweetPepperTopping restricted such that all instances must display mild spiciness due to the hasSpiciness relation?", "4": "Does the classification of SweetPepperTopping entail that each instance features some level of mild"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Medium\nDescription: Medium is defined as a subclass of Spiciness, representing a specific level of spiciness distinct from other categories. It is explicitly disjoint with Mild, ensuring that no individual can be both Medium and Mild in terms of spiciness. This class is intended to categorize items that possess a moderate degree of spiciness, neither mild nor another spiciness subclass.\nAxiom: {'subClassOf': ['Spiciness'], 'disjointWith': ['Mild', 'Hot']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology differentiate between Medium and Hot types within the Spiciness hierarchy?", "1": "Is there any instance that could simultaneously belong to both Medium and Hot classes?", "2": "Which classes are declared as mutually exclusive with Medium in the context of Spiciness?", "3": "Does the definition of Medium preclude its intersection with Hot in the ontology?", "4": "What structural distinctions separate Medium from Hot within the Spiciness taxonomy?", "5": "Can Medium and Hot coexist as distinct subclasses under Spiciness?", "6": "Which other concepts are formally incompatible with Medium according to their placement in the ontology?", "7": "How does the ontology ensure"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Pizza\nDescription: Pizza is defined as a subclass of Food, meaning it inherits all characteristics of food items. It is explicitly disjoint from both IceCream and PizzaBase, so no individual can simultaneously be an instance of Pizza and either of those classes. Additionally, every Pizza must have at least one base that is an instance of PizzaBase, ensuring that all pizzas are characterized by the presence of a suitable base.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['IceCream', 'PizzaBase', 'PizzaTopping'], 'propertyRestrictions': ['[hasBase some PizzaBase]']}\nGenerated CQs:", "generated_outputs": {"0": "Must every pizza include at least one base of type PizzaBase?", "1": "Is it possible for a pizza to exist without having any associated pizza base?", "2": "Can a pizza be considered valid if it does not possess the hasBase property with respect to PizzaBase?", "3": "Does the existence of a pizza require that it be linked via hasBase to some instance of PizzaBase?", "4": "Are there any instances that qualify as pizza but lack the hasBase relationship with PizzaBase?", "5": "Does the definition of pizza necessitate the inclusion of at least one entity through the hasBase property that is classified under PizzaBase?"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: PizzaTopping\nDescription: PizzaTopping is defined as a subclass of Food, indicating it is a type of food item. It is explicitly disjoint with both Pizza and PizzaBase, ensuring that no individual can simultaneously be classified as a PizzaTopping and a Pizza or a PizzaBase. This formalization means PizzaTopping represents ingredients added to pizzas, distinct from the pizza itself and its base.\nAxiom: {'subClassOf': ['Food'], 'disjointWith': ['Pizza', 'PizzaBase', 'IceCream']}\nGenerated CQs:", "generated_outputs": {"0": "How does the ontology define the distinction between PizzaToppings and Pizzas?", "1": "Is there any instance that could belong to both PizzaToppings and Pizzas?", "2": "Which classes are specified as mutually exclusive with PizzaToppings?", "3": "Does PizzaToppings share any logical separation with IceCream within the ontology?", "4": "What entities are declared incompatible with PizzaToppings according to the ontology?", "5": "Can PizzaToppings coexist logically with PizzaBase in the model?", "6": "How are PizzaToppings distinguished from PizzaBase in terms of class membership?", "7": "Which categories are asserted as"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: Spiciness\nDescription: Spiciness is defined as a subclass of ValuePartition, indicating that it functions as a categorical partitioning of possible values within a specific context (such as levels of spiciness in foods). As a value partition, it is used to organize and distinguish instances by assigning them to discrete, mutually exclusive categories related to spiciness.\nAxiom: {'subClassOf': ['ValuePartition'], 'equivalentClass': ['(Hot or Medium or Mild)']}\nGenerated CQs:", "generated_outputs": {"0": "Does Spiciness encompass both Hot and Mild categories?", "1": "Is every instance classified under Spiciness either Hot or Mild?", "2": "What other subclasses are included besides Hot and Mild under Spiciness?", "3": "Are Hot and Mild equivalent classes within the context of Spiciness?", "4": "Can any instance belong to Spiciness if it does not fall into the categories Hot or Mild?", "5": "Does the classification Hot or Mild exhaustively define the concept of Spiciness?", "6": "Which broader class does Spiciness inherit from among ValuePartition?", "7": "Is there any instance that can be assigned to Spiciness"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nClass name: VegetarianPizza\nDescription: VegetarianPizza is formally defined as any Pizza that does not have any MeatTopping or FishTopping as a topping. This means that VegetarianPizza is equivalent to the class of Pizzas lacking both meat-based and fish-based toppings; individuals in this class may have other types of toppings but must explicitly exclude all meat and fish toppings. There are no explicit disjointness restrictions with other classes.\nAxiom: {'disjointWith': ['NonVegetarianPizza'], 'equivalentClass': ['(Pizza and not [hasTopping some MeatTopping] and not [hasTopping some FishTopping])']}\nGenerated CQs:", "generated_outputs": {"0": "How do you distinguish between VegetarianPizza and NonVegetarianPizza within the ontology?", "1": "Is there any pizza type that cannot be classified as either VegetarianPizza or NonVegetarianPizza?", "2": "Which pizza categories are specified as mutually exclusive with NonVegetarianPizza?", "3": "Generated CQs:Is every VegetarianPizza necessarily categorized under NonVegetarianPizza?", "4": "Can a pizza be simultaneously considered both VegetarianPizza and NonVegetarianPizza?", "5": "Does the ontology recognize any food item as belonging exclusively to one of these two categories?", "6": "Generated CQs:Which specific pizza"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isToppingOf\nDescription: The property \"isToppingOf\" is a functional object property, meaning each instance of \"PizzaTopping\" can be a topping of at most one \"Pizza\". Its domain is restricted to \"PizzaTopping\" and its range to \"Pizza\". \"isToppingOf\" is a sub-property of \"isIngredientOf\" and has \"hasTopping\" as its inverse. According to the description, each topping instance should only be associated with a single pizza.\nAxiom: {'characteristics': ['Functional'], 'domain': ['PizzaTopping'], 'range': ['Pizza'], 'subPropertyOf': ['isIngredientOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical relationship between ‘isToppingOf’ and ‘hasTopping’ properties?", "1": "If entity A is related via ‘isToppingOf’ to B, does it follow that B is linked to A through ‘hasTopping’?", "2": "Which property serves as the inverse of ‘isToppingOf’ within this context?", "3": "Does the use of ‘isToppingOf’ imply the application of ‘hasTopping’, and vice versa?", "4": "What are the parent properties associated with ‘isToppingOf’ in the ontology hierarchy?", "5": "Can something be related to another"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasBase\nDescription: The property \"hasBase\" is both functional and inverse functional, ensuring that each Pizza has exactly one PizzaBase and each PizzaBase is associated with exactly one Pizza. Its domain is Pizza, and its range is PizzaBase, indicating it links pizzas to their bases. \"hasBase\" is a sub-property of \"hasIngredient,\" specifying it as a specialized form of ingredient relationship. It has an inverse property \"isBaseOf,\" which links PizzaBase to Pizza.\nAxiom: {'characteristics': ['Functional', 'InverseFunctional'], 'domain': ['Pizza'], 'range': ['PizzaBase'], 'subPropertyOf': ['hasIngredient'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "How are the properties ‘hasBase’ and ‘isBaseOf’ related within the ontology?", "1": "If pizza A has base B according to ‘hasBase’, does this entail that B is base of A via ‘isBaseOf’?", "2": "Which entity serves as the inverse property for ‘hasBase’ within the ontology?", "3": "Is there any instance where the ‘hasBase’ property is used without being accompanied by the corresponding ‘isBaseOf’ assertion?", "4": "Can entities linked by ‘hasBase’ also be connected through the ‘isBaseOf’ property?", "5": "Does the existence of a link"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isBaseOf\nDescription: The property \"isBaseOf\" is both functional and inverse functional, meaning each PizzaBase is the base of at most one Pizza, and each Pizza has at most one PizzaBase. Its domain is restricted to PizzaBase, and its range is Pizza. \"isBaseOf\" is a sub-property of \"isIngredientOf\" and has \"hasBase\" as its inverse property. This property is used to relate a PizzaBase to the Pizza for which it serves as the base.\nAxiom: {'characteristics': ['Functional', 'InverseFunctional'], 'domain': ['PizzaBase'], 'range': ['Pizza'], 'subPropertyOf': ['isIngredientOf'], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "What are the superproperties associated with ‘isBaseOf’?", "1": "Does ‘isBaseOf’ inherit properties from ‘isIngredientOf’?", "2": "Which properties are considered more general than ‘isBaseOf’ within this context?", "3": "Is every instance connected by ‘isBaseOf’ also related via ‘isIngredientOf’?", "4": "Which entities can be subjects or objects of the ‘isBaseOf’ relationship according to their defined domains and ranges?", "5": "Can a PizzaBase be linked to multiple Pizzas through ‘isBaseOf’, or does the property enforce uniqueness?", "6": "What types of objects can"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasCountryOfOrigin\nDescription: The property \"hasCountryOfOrigin\" has no explicitly defined characteristics, domain, or range constraints. It is not specified as a sub-property of any other property, nor does it have an inverse property. Typically, \"hasCountryOfOrigin\" is intended to relate entities to their country of origin, but no further restrictions or definitions are enforced by the current axioms.\nAxiom: {'characteristics': [], 'domain': ['None'], 'range': ['None'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can anything serve as the subject for the property 'hasCountryOfOrigin'?", "1": "Can anything serve as the object for the property 'hasCountryOfOrigin'?", "2": "What types of entities can be used as the value for the property 'hasCountryOfOrigin'?", "3": "Is it correct that the property 'hasCountryOfOrigin' does not specify a specific class for its range?", "4": "What classes are permitted as the domain for the property 'hasCountryOfOrigin'?", "5": "Are there any restrictions on what can be the domain of the property 'hasCountryOfOrigin'?", "6": "Can entities without a specified type be assigned"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasSpiciness\nDescription: The property \"hasSpiciness\" is defined as a Functional property, meaning each subject can have at most one value for this property. No explicit domain or range is specified. It does not have any super-properties or inverse properties.\nAxiom: {'characteristics': ['Functional'], 'domain': ['None'], 'range': ['Spiciness'], 'subPropertyOf': [], 'inverseOf': []}\nGenerated CQs:", "generated_outputs": {"0": "Can 'hasSpiciness' relate to subjects other than those currently defined?", "1": "Is it correct that no domain is specified for the property 'hasSpiciness'?", "2": "What types of entities are permitted as the domain for the property 'hasSpiciness'?", "3": "Can anything serve as the range for the property 'hasSpiciness', or should it be restricted to certain classes?", "4": "Are all values assigned to 'hasSpiciness' required to belong to the class Spiciness?", "5": "What possible ranges are allowed for the property 'hasSpiciness'?", "6": "Should the property '"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasIngredient\nDescription: The property \"hasIngredient\" is defined as a transitive property, meaning if a food item A hasIngredient B and B hasIngredient C, then A hasIngredient C. Both its domain and range are restricted to the class \"Food\", indicating that this property relates food items to their component food ingredients. It does not have any specified super-properties or inverse properties.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['Food'], 'range': ['Food'], 'subPropertyOf': [], 'inverseOf': ['isIngredientOf']}\nGenerated CQs:", "generated_outputs": {"0": "Can the property 'hasIngredient' be used with subjects other than instances of Food?", "1": "Are there any entities outside of the Food class that can serve as the subject for 'hasIngredient'?", "2": "What classes are permitted as the domain for the 'hasIngredient' property?", "3": "Is it correct that every use of 'hasIngredient' must refer exclusively to objects within the Food category?", "4": "Which types of entities can act as the range when the property 'hasIngredient' is applied?", "5": "Can the value associated with 'hasIngredient' ever be anything other than a Food instance?", "6": "What are the possible"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: hasTopping\nDescription: The property \"hasTopping\" is defined as an inverse functional property, meaning each pizza topping is related to at most one pizza through this property. Its domain is restricted to \"Pizza\" and its range to \"PizzaTopping,\" indicating it links pizzas to their toppings. \"hasTopping\" is a sub-property of \"hasIngredient,\" specifying that toppings are a particular kind of ingredient. No inverse property is specified.\nAxiom: {'characteristics': ['InverseFunctional'], 'domain': ['Pizza'], 'range': ['PizzaTopping'], 'subPropertyOf': ['hasIngredient'], 'inverseOf': ['isToppingOf']}\nGenerated CQs:", "generated_outputs": {"0": "What is the logical connection between ‘hasTopping’ and ‘isToppingOf’ properties within the ontology?", "1": "If entity A is related via ‘hasTopping’ to B, does this entail that B is related to A via ‘isToppingOf’?", "2": "Which property serves as the inverse of ‘hasTopping’ in the ontology?", "3": "Is it correct that every use of ‘hasTopping’ corresponds to exactly one use of ‘isToppingOf’?", "4": "How do the properties ‘hasTopping’ and ‘isToppingOf’ relate to each other in"}}
{"input": "As an ontology engineer, generate a list of competency questions based on the following description and axiom.\nDefinition of competency questions: the questions that outline the scope of ontology and provide an idea about the knowledge that needs to be entailed in the ontology.\nAvoid using narrative questions + axioms.\nDon't generate unnecessary text. Output only the three questions, separated by ` | ` (pipe with spaces). Stop generation after the third question.\nProperty name: isIngredientOf\nDescription: The property \"isIngredientOf\" is a transitive object property with both its domain and range restricted to the class \"Food.\" This means that if a food item is an ingredient of another, and that item is itself an ingredient of a third food, the first is considered an ingredient of the third. No super-properties or inverse properties are specified.\nAxiom: {'characteristics': ['Transitive'], 'domain': ['Food'], 'range': ['Food'], 'subPropertyOf': [], 'inverseOf': ['hasIngredient']}\nGenerated CQs:", "generated_outputs": {"0": "Can 'isIngredientOf' be used as a property where the subject belongs to any class other than Food?", "1": "Is it required for every instance of 'isIngredientOf' to have at least one entity from the Food class as its subject?", "2": "What classes, besides Food, can serve as the domain for the 'isIngredientOf' property?", "3": "Is there any entity outside of Food that could act as the domain for 'isIngredientOf'?", "4": "Can the range of 'isIngredientOf' ever be anything other than Food?", "5": "Which types of entities are permitted as the range for the '"}}
